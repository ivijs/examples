const JS_RULES = {
  "arrow-parens": ["off", "as-needed"],
  "camelcase": "off",
  "comma-dangle": ["error", "always-multiline"],
  "complexity": "off",
  "constructor-super": "error",
  "default-case": "off",
  "dot-notation": "off",
  "eqeqeq": ["error", "smart"],
  "guard-for-in": "off",
  "indent": ["error", 2],
  "id-blacklist": "off",
  "id-match": "off",
  "import/order": "off",
  "linebreak-style": ["error", "unix"],
  "max-classes-per-file": "off",
  "new-parens": "error",
  "no-bitwise": "off",
  "no-caller": "error",
  "no-cond-assign": "off",
  "no-constant-condition": "off",
  "no-console": "off",
  "no-debugger": "error",
  "no-empty": "error",
  "no-eval": "error",
  "no-fallthrough": "off",
  "no-invalid-this": "off",
  "no-new-wrappers": "error",
  "no-prototype-builtins": "off",
  "no-shadow": ["error", { "hoist": "all" }],
  "no-throw-literal": "error",
  "no-trailing-spaces": "error",
  "no-undef": "off",
  "no-undef-init": "error",
  "no-underscore-dangle": "off",
  "no-unsafe-finally": "error",
  "no-unused-expressions": "error",
  "no-unused-labels": "off",
  "no-var": "error",
  "object-shorthand": "off",
  "one-var": ["error", "never"],
  "prefer-arrow/prefer-arrow-functions": "off",
  "prefer-const": "off",
  "prefer-rest-params": "off",
  "prefer-spread": "off",
  "quote-props": "off",
  "radix": "error",
  "semi": ["error", "always"],
  "space-before-function-paren": "off",
  "spaced-comment": "off",
  "use-isnan": "error",
  "valid-typeof": "off",
};

module.exports = {
  root: true,
  env: {
    "browser": true,
    "es6": true,
    "node": true,
  },
  parser: "babel-eslint",
  parserOptions: {
    ecmaVersion: 2020,
    sourceType: "module",
  },
  extends: ["eslint:recommended"],
  rules: JS_RULES,
  overrides: [
    {
      files: ["**/*.ts"],
      parser: "@typescript-eslint/parser",
      parserOptions: {
        project: "tsconfig.json",
        sourceType: "module",
      },
      plugins: [
        "@typescript-eslint",
      ],
      extends: [
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
      ],
      rules: {
        ...JS_RULES,
        "indent": "off",
        "@typescript-eslint/adjacent-overload-signatures": "error",
        "@typescript-eslint/array-type": "off",
        "@typescript-eslint/ban-types": "error",
        "@typescript-eslint/class-name-casing": "error",
        "@typescript-eslint/consistent-type-assertions": "error",
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/explicit-member-accessibility": ["off", { "accessibility": "explicit" }],
        "@typescript-eslint/indent": "off",
        "@typescript-eslint/interface-name-prefix": "off",
        "@typescript-eslint/member-ordering": "off",
        "@typescript-eslint/no-empty-function": "error",
        "@typescript-eslint/no-empty-interface": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-misused-new": "error",
        "@typescript-eslint/no-namespace": "off",
        "@typescript-eslint/no-non-null-assertion": "off",
        "@typescript-eslint/no-parameter-properties": "off",
        "@typescript-eslint/no-unnecessary-type-assertion": "off",
        "@typescript-eslint/no-unused-vars": "off",
        "@typescript-eslint/no-use-before-define": "off",
        "@typescript-eslint/no-var-requires": "error",
        "@typescript-eslint/prefer-for-of": "off",
        "@typescript-eslint/prefer-function-type": "error",
        "@typescript-eslint/prefer-namespace-keyword": "error",
        "@typescript-eslint/require-await": "off",
        "@typescript-eslint/triple-slash-reference": "error",
        "@typescript-eslint/unbound-method": "off",
        "@typescript-eslint/unified-signatures": "off",
      },
    },
  ],
};
