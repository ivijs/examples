{"version":3,"sources":["node_modules/ivi/src/common/feature_detection.ts"," [synthetic:es6/util/inherits] "," [synthetic:util/global] "," [synthetic:util/defineproperty] "," [synthetic:es6/symbol] "," [synthetic:es6/util/makeiterator] "," [synthetic:es6/util/arrayfromiterator] "," [synthetic:util/polyfill] "," [synthetic:es6/promise] "," [synthetic:util/owns] "," [synthetic:es6/object/assign] "," [synthetic:es6/util/iteratorfromarray] "," [synthetic:es6/array/keys] "," [synthetic:es6/array/fill] "," [synthetic:es6/weakmap] "," [synthetic:es6/map] "," [synthetic:es6/string/repeat] "," [synthetic:util/checkstringargs] ","node_modules/ivi/src/common/user_agent.ts","node_modules/ivi/src/common/dom.ts","node_modules/ivi/src/common/noop.ts","node_modules/ivi/src/scheduler/clock.ts","node_modules/ivi/src/scheduler/task.ts","node_modules/ivi/src/scheduler/microtask.ts","node_modules/ivi/src/common/visibility.ts","node_modules/ivi/src/scheduler/frame_tasks_group.ts","node_modules/ivi/src/common/repeatable_task_list.ts","node_modules/ivi/src/scheduler/dom_reader.ts","node_modules/ivi/src/vdom/vnode.ts","node_modules/ivi/src/vdom/vnode_dom.ts","node_modules/ivi/src/vdom/ivnode.ts","node_modules/ivi/src/vdom/sync_dom.ts","node_modules/ivi/src/events/utils.ts","node_modules/ivi/src/events/sync_events.ts","node_modules/ivi/src/scheduler/autofocus.ts","node_modules/ivi/src/vdom/implementation.ts","node_modules/ivi/src/vdom/root.ts","node_modules/ivi/src/scheduler/frame.ts","node_modules/ivi/src/scheduler/animation.ts","node_modules/ivi/src/events/dispatch_event.ts","node_modules/ivi/src/events/synthetic_event.ts","node_modules/ivi/src/events/events.ts","node_modules/ivi/src/events/native_event_source.ts","node_modules/ivi/src/events/traverse_dom.ts","node_modules/ivi/src/vdom/component.ts","node_modules/ivi/src/vdom/element_descriptor.ts","node_modules/ivi/src/vdom/vnode_components.ts","src/benchmarks/uibench_fc/main.ts"," [synthetic:es6/util/arrayfromiterable] "],"names":["$jscomp.global","$jscomp.defineProperty","$jscomp.initSymbol","$jscomp.global.Symbol","$jscomp.Symbol","$jscomp.symbolCounter_","$jscomp.SYMBOL_PREFIX","$jscomp.global.Symbol.iterator","$jscomp.arrayIterator","$jscomp.initSymbolIterator","$jscomp.iteratorPrototype","$jscomp.polyfill","$jscomp.makeIterator","$jscomp.owns","$jscomp.iteratorFromArray","FEATURES","opts","Object","defineProperty","get","window","addEventListener","e","SVGElement","prototype","KeyboardEvent","navigator","maxTouchPoints","UIEvent","MouseEvent","ua","userAgent","USER_AGENT","test","indexOf","getEventTarget","ev","target","undefined","correspondingUseElement","nodeType","parentNode","setInnerHTML","element","content","isSVG","c","innerHTMLSVGContainer","document","createElement","innerHTML","svg","firstChild","appendChild","NOOP","_clock","_pending$1","_tasks","handleWindowMessage","source","TASK_MESSAGE","data","tasks","i","length","scheduleTask","task","postMessage","push","_pending","_microtasks","_microtaskNode","_microtaskToggle","microtaskObserver","MutationObserver","runMicrotasks","createTextNode","observe","runMicrotasksInPromise","_visible","_isHidden","_visibilityObservers","handleVisibilityChange","newVisible","hidden","constructor","FrameTasksGroup","_flags","_afterTasks","_readTasks","_writeTasks","write","read","RepeatableTaskList","add","run","pop","_readers","VNode","flags","tag","props","className","children","_children","_tag","_key","_props","_instance","_className","VNode.prototype","?.prototype","key","style","attrs","events","arguments","f","r","Array","j","k","value","checked","autofocus","focus","$h","tagName","getDOMInstanceFromVNode","node","syncClassName","b","setAttribute","syncStyle","a","keys","setProperty","removeProperty","matchCount","bValue","aValue","hasOwnProperty","setDOMProperty","removeAttribute","charCodeAt","setAttributeNS","XML_NAMESPACE","XLINK_NAMESPACE","syncDOMProps","EVENT_CAPTURE_PASSIVE_OPTIONS","EVENT_PASSIVE_OPTIONS","getEventOptions","registerEventHandler","handler","addListener","unregisterEventHandler","removeListener","attachEvents","h","detachEvents","_autofocusedElement","vNodeAttach","vnode","component","vNodeDetach","syncFlags","vNodeDetachAll","vnodes","vNodeUpdateComponents","parent","context","p","oldRoot","newRoot","render","vNodeSync","connect","prevSelectData","selectData","select","prevChildren","assign","vNodeRemoveChild","removeChild","vNodeRender","instance","childNode","createElementNS","SVG_NAMESPACE","type","_ev","textContent","child","insertBefore","input","root","keepAlive","prev","vNodeRenderIntoAndAttach","refChild","vNodeEqualKeys","bFlags","nodeValue","aFlags","aAttrs","bAttrs","aStyle","bStyle","aEvents","bEvents","h1","h2","synced","bStart","aStart","aEnd","bEnd","aStartNode","bStartNode","aEndNode","bEndNode","bNode","nextRef","nextPos","next","aLength","bLength","sources","fill","moved","pos","aNode","keyIndex","Map","set","positionKeyIndex","slice","result","il","u","v","newProps","propsChanged","isPropsChanged","fn","replaceChild","ROOTS","EMPTY_CONTEXT","_pendingUpdate","_globalSyncFlags","_update","container","currentVNode","invalidated","newVNode","onclick","last","updateNextFrame","handleNextFrame","requestNextFrame","_nextFrame","_pending$2","_currentFrame","_requestNextFrame","requestAnimationFrame","Promise","resolve","then","frame","_animations","ret","_animatedComponents","handleVisibilityChange$1","visible","dispatchEventToLocalEventHandlers","event","matchFlags","handlers","SyntheticEvent","timestamp","stopPropagation","preventDefault","SyntheticNativeEvent","native","$jscomp.inherits","SyntheticUIEvent","$jscomp.global.Object.defineProperties","detail","view","SyntheticMouseEvent","getModifierState","keyArg","altKey","button","buttons","clientX","clientY","ctrlKey","fromElement","layerX","layerY","metaKey","movementX","movementY","offsetX","offsetY","pageX","pageY","relatedTarget","screenX","screenY","shiftKey","toElement","which","x","y","click","name","eventType","dispatch","this.dispatch","targets","eventSource","matches","count","parentElement","s","timeStamp","bubble","dependencies","deactivating","removeEventListener","createClickEventHandler","onClick","NativeEventSources.click.eventSource","Component","oldProps","$c","TableCell","$jscomp.arrayFromIterator","Events.onClick","console","log","TableRow","id","active","Table","items","item","AnimBox","time","Anim","TreeLeaf","TreeNode","n","Tree","Main","uibench","init","querySelector","state","samples","JSON","stringify"],"mappings":"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","file":"bundle.js","sourceRoot":"../../..","sourcesContent":["/**\n * Feature Detection is used to implement polyfills or just disable some features when browser doesn't support them.\n * For example, when browser doesn't support passive events, we can just ignore it and always use active events.\n *\n * NOTE: Do not implement feature detection for features that aren't used in `ivi` library.\n */\n\n/**\n * Feature Flags.\n */\nexport const enum FeatureFlags {\n    /**\n     * Passive event listeners are a new feature in the DOM spec that enable developers to opt-in to better scroll\n     * performance by eliminating the need for scrolling to block on touch and wheel event listeners. Developers can\n     * annotate touch and wheel listeners with {passive: true} to indicate that they will never invoke preventDefault.\n     *\n     * https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n     */\n    PassiveEvents = 1,\n    /**\n     * The `performance.mark()` method creates a timestamp in the browser's performance entry buffer with the given\n     * name.\n     *\n     * https://developer.mozilla.org/en-US/docs/Web/API/Performance/mark\n     */\n    DevModePerfMarks = 1 << 1,\n    /**\n     * IE and some Edge versions doesn't support `innerHTML` on SVG elements.\n     */\n    SVGInnerHTML = 1 << 2,\n    /**\n     * `key` property on KeyboardEvent instances.\n     */\n    KeyboardEventKey = 1 << 3,\n    /**\n     * Browser supports native promises.\n     *\n     * IE11 and Android 4.4 doesn't support native promises.\n     */\n    // NativePromise = 1 << 4,\n    /**\n     * Pointer Events support.\n     */\n    PointerEvents = 1 << 5,\n    /**\n     * Touch Events support.\n     */\n    TouchEvents = 1 << 6,\n    /**\n     * Device with a touchscreen.\n     *\n     * `navigator.maxTouchPoints > 0`\n     */\n    PointerEventsTouch = 1 << 7,\n    /**\n     * Multitouch-capable device.\n     *\n     * `navigator.maxTouchPoints > 1`\n     */\n    PointerEventsMultiTouch = 1 << 8,\n    /**\n     * InputDeviceCapabilities.\n     */\n    InputDeviceCapabilities = 1 << 9,\n    /**\n     * MouseEvent.buttons property.\n     */\n    MouseEventButtons = 1 << 10,\n}\n\n/**\n * Supported Features, see `FeatureFlags` for details.\n */\nexport let FEATURES: FeatureFlags = 0;\n\nif (__IVI_BROWSER__) {\n    /**\n     * Passive Events:\n     *\n     * https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n     */\n    try {\n        // Test via a getter in the options object to see if the passive property is accessed\n        const opts = Object.defineProperty({}, \"passive\", {\n            get() {\n                FEATURES |= FeatureFlags.PassiveEvents;\n            },\n        });\n        window.addEventListener(\"test\", null as any as (ev: Event) => void, opts);\n    } catch (e) {\n        /* tslint:disable:no-empty */\n        /* tslint:enable:no-empty */\n    }\n\n    /**\n     * Check `performance.mark` availability.\n     */\n    if (__IVI_DEV__) {\n        if (performance && performance.mark && performance.measure) {\n            FEATURES |= FeatureFlags.DevModePerfMarks;\n        }\n    }\n\n    /**\n     * Check `innerHTML` availability in `SVGElement`s.\n     */\n    if (\"innerHTML\" in SVGElement.prototype) {\n        FEATURES |= FeatureFlags.SVGInnerHTML;\n    }\n\n    /**\n     * Check `key` availability in `KeyboardEvent`s.\n     */\n    if (\"key\" in KeyboardEvent.prototype) {\n        FEATURES |= FeatureFlags.KeyboardEventKey;\n    }\n\n    /**\n     * Check native `Promise` availability.\n     */\n    // if (typeof Promise !== \"undefined\" && Promise.toString().indexOf(\"native code\") > -1) {\n    //     FEATURES |= FeatureFlags.NativePromise;\n    // }\n\n    /**\n     * Check PointerEvents and TouchEvents support.\n     *\n     * Prefer PointerEvents over TouchEvents when both are available.\n     */\n    if (\"PointerEvent\" in window) {\n        FEATURES |= FeatureFlags.PointerEvents;\n        /**\n         * Touch/Multitouch detection.\n         */\n        if (navigator.maxTouchPoints > 0) {\n            FEATURES |= FeatureFlags.PointerEventsTouch;\n            if (navigator.maxTouchPoints > 1) {\n                FEATURES |= FeatureFlags.PointerEventsMultiTouch;\n            }\n        }\n    } else if (\"ontouchstart\" in window) {\n        FEATURES |= FeatureFlags.TouchEvents;\n    }\n\n    if (\"sourceCapabilities\" in UIEvent.prototype) {\n        FEATURES |= FeatureFlags.InputDeviceCapabilities;\n    }\n\n    if (\"buttons\" in MouseEvent.prototype) {\n        FEATURES |= FeatureFlags.MouseEventButtons;\n    }\n}\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"/**\n * User Agent detection is used to fix some quirks like iOS event bubbling, etc.\n *\n * NOTE: Do not implement any browser detection that aren't used in `ivi` library.\n */\n\nconst ua = __IVI_BROWSER__ && navigator ? navigator.userAgent : \"\";\n\n/**\n * User Agent Flags.\n */\nexport const enum UserAgentFlags {\n    /**\n     * iOS browser (iPad, iPhone, iPod).\n     */\n    iOS = 1,\n    /**\n     * iOS full screen mode.\n     */\n    iOSStandalone = 1 << 1,\n    /**\n     * Android browser.\n     */\n    Android = 1 << 2,\n};\n\n/**\n * User Agent, see `UserAgentFlags` for details.\n */\nexport let USER_AGENT: UserAgentFlags = 0;\n\nif (__IVI_BROWSER__) {\n    if (/iPad|iPhone|iPod/.test(ua) && !(\"MSStream\" in window)) {\n        USER_AGENT |= (\"standalone\" in navigator) ?\n            UserAgentFlags.iOS | UserAgentFlags.iOSStandalone :\n            UserAgentFlags.iOS;\n    }\n\n    if (ua.indexOf(\"Android\") > -1) {\n        USER_AGENT |= UserAgentFlags.Android;\n    }\n}\n","/**\n * Miscellaneous DOM related stuff.\n */\nimport { FeatureFlags, FEATURES } from \"./feature_detection\";\n\nexport const SVG_NAMESPACE = \"http://www.w3.org/2000/svg\";\nexport const XLINK_NAMESPACE = \"http://www.w3.org/1999/xlink\";\nexport const XML_NAMESPACE = \"http://www.w3.org/XML/1998/namespace\";\n\n/**\n * KeyboardEvent keyCode values.\n */\nexport const enum KeyCode {\n    WinKeyFFLinux = 0,\n    MacEnter = 3,\n    Backspace = 8,\n    Tab = 9,\n    Clear = 12,\n    Enter = 13,\n    Shift = 16,\n    Control = 17,\n    Alt = 18,\n    Pause = 19,\n    CapsLock = 20,\n    Escape = 27,\n    Space = 32,\n    PageUp = 33,\n    PageDown = 34,\n    End = 35,\n    Home = 36,\n    ArrowLeft = 37,\n    ArrowUp = 38,\n    ArrowRight = 39,\n    ArrowDown = 40,\n    NumNorthEast = 33,\n    NumSouthEast = 34,\n    NumSouthWest = 35,\n    NumNorthWest = 36,\n    NumWest = 37,\n    NumNorth = 38,\n    NumEast = 39,\n    NumSouth = 40,\n    PrintScreen = 44,\n    Insert = 45,\n    NumInsert = 45,\n    Delete = 46,\n    NumDelete = 46,\n    Zero = 48,\n    Ono = 49,\n    Two = 50,\n    Three = 51,\n    Four = 52,\n    Five = 53,\n    Six = 54,\n    Seven = 55,\n    Eight = 56,\n    Nine = 57,\n    FFSemicolon = 59,\n    FFEquals = 61,\n    /**\n     * US keyboard layouts only.\n     */\n    QuestionMark = 63,\n    A = 65,\n    B = 66,\n    C = 67,\n    D = 68,\n    E = 69,\n    F = 70,\n    G = 71,\n    H = 72,\n    I = 73,\n    J = 74,\n    K = 75,\n    L = 76,\n    M = 77,\n    N = 78,\n    O = 79,\n    P = 80,\n    Q = 81,\n    R = 82,\n    S = 83,\n    T = 84,\n    U = 85,\n    V = 86,\n    W = 87,\n    X = 88,\n    Y = 89,\n    Z = 90,\n    Meta = 91,\n    WinKeyLeft = 91,\n    WinKeyRight = 92,\n    ContextMenu = 93,\n    NumZero = 96,\n    NumOne = 97,\n    NumTwo = 98,\n    NumThree = 99,\n    NumFour = 100,\n    NumFive = 101,\n    NumSix = 102,\n    NumSeven = 103,\n    NumEight = 104,\n    NumNine = 105,\n    NumMultiply = 106,\n    NumPlus = 107,\n    NumMinus = 109,\n    NumPeriod = 110,\n    NumDivision = 111,\n    F1 = 112,\n    F2 = 113,\n    F3 = 114,\n    F4 = 115,\n    F5 = 116,\n    F6 = 117,\n    F7 = 118,\n    F8 = 119,\n    F9 = 120,\n    F10 = 121,\n    F11 = 122,\n    F12 = 123,\n    NumLock = 144,\n    ScrollLock = 145,\n    /**\n     * First OS specific media key.\n     */\n    FirstMediaKey = 166,\n    /**\n     * Last OS specific media key.\n     */\n    LastMediaKey = 183,\n    /**\n     * US keyboard layouts only.\n     */\n    Semicolon = 186,\n    /**\n     * US keyboard layouts only.\n     */\n    Dash = 189,\n    /**\n     * US keyboard layouts only.\n     */\n    Equals = 187,\n    /**\n     * US keyboard layouts only.\n     */\n    Comma = 188,\n    /**\n     * US keyboard layouts only.\n     */\n    Period = 190,\n    /**\n     * US keyboard layouts only.\n     */\n    Slash = 191,\n    /**\n     * US keyboard layouts only.\n     */\n    Apostrophe = 192,\n    /**\n     * US keyboard layouts only.\n     */\n    Tilde = 192,\n    /**\n     * US keyboard layouts only.\n     */\n    SingleQuote = 222,\n    /**\n     * US keyboard layouts only.\n     */\n    OpenSquareBracket = 219,\n    /**\n     * US keyboard layouts only.\n     */\n    Backslash = 220,\n    /**\n     * US keyboard layouts only.\n     */\n    CloseSquareBracket = 221,\n    Win = 224,\n    MacFFMeta = 224,\n    WinIME = 229,\n}\n\n/**\n * KeyboardEvent keyLocation values.\n */\nexport const enum KeyLocation {\n    Standard = 0,\n    Left = 1,\n    Right = 2,\n    NumPad = 3,\n    Mobile = 4,\n    Joystick = 5,\n}\n\n/**\n * Flags for MouseEvent buttons property.\n *\n * Buttons property aren't widely supported by all major browsers at this time, and there is no easy way to polyfill\n * it.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons\n */\nexport const enum MouseButtons {\n    Left = 1,\n    Right = 1 << 1,\n    /**\n     * Wheel or middle button.\n     */\n    Middle = 1 << 2,\n    /**\n     * Typically the \"Browser Back\" button.\n     */\n    Fourh = 1 << 3,\n    /**\n     * Typically the \"Browser Forward\" button.\n     */\n    Fifth = 1 << 4,\n}\n\n/**\n * Gets target element from an Event.\n *\n * There are still some differences in modern browsers, so we need to get event targets with this function.\n *\n * #quirks\n *\n * @param ev Event.\n * @returns Target Element.\n */\nexport function getEventTarget(ev: Event): EventTarget {\n    let target = ev.target || window;\n\n    /**\n     * Some browsers are implementing it according to SVG 1.1 specs:\n     *\n     * https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/7998724/\n     *\n     * \"If event attributes are assigned to referenced elements, then the actual target for the event will be the\n     * SVGElementInstance object within the 'instance tree' corresponding to the given referenced element.\"\n     *\n     * https://www.w3.org/TR/SVG/struct.html#UseElement\n     *\n     * SVG 2 redefined the use event handling model:\n     *\n     * - Removed the SVGElementInstance and SVGElementInstanceList interfaces, and the corresponding attributes on the\n     *   SVGUseElement interface.\n     * - Changed the ‘use’ element event flow to follow the Shadow DOM spec.\n     *\n     * https://www.w3.org/TR/SVG2/changes.html#structure\n     */\n    if ((target as any).correspondingUseElement !== undefined) {\n        target = (target as any).correspondingUseElement;\n    }\n\n    /**\n     * Safari fires events on Text Nodes.\n     *\n     * http://www.quirksmode.org/js/events_properties.html\n     */\n    return (target as Node).nodeType === 3 ? (target as Node).parentNode! : target;\n}\n\nconst KEY_CODE_TO_KEY: { [key: number]: string } = {\n    8: \"Backspace\",\n    9: \"Tab\",\n    12: \"Clear\",\n    13: \"Enter\",\n    16: \"Shift\",\n    17: \"Control\",\n    18: \"Alt\",\n    19: \"Pause\",\n    20: \"CapsLock\",\n    27: \"Escape\",\n    32: \" \",\n    33: \"PageUp\",\n    34: \"PageDown\",\n    35: \"End\",\n    36: \"Home\",\n    37: \"ArrowLeft\",\n    38: \"ArrowUp\",\n    39: \"ArrowRight\",\n    40: \"ArrowDown\",\n    44: \"PrintScreen\",\n    45: \"Insert\",\n    46: \"Delete\",\n    91: \"Meta\",\n    112: \"F1\",\n    113: \"F2\",\n    114: \"F3\",\n    115: \"F4\",\n    116: \"F5\",\n    117: \"F6\",\n    118: \"F7\",\n    119: \"F8\",\n    120: \"F9\",\n    121: \"F10\",\n    122: \"F11\",\n    123: \"F12\",\n    144: \"NumLock\",\n    145: \"ScrollLock\",\n    224: \"Win\",\n};\n\n/**\n * Gets a `charCode` from a KeyboardEvent.\n *\n * #quirks\n *\n * @param ev Keyboard Event\n * @returns A char code.\n */\nexport function getEventCharCode(ev: KeyboardEvent): number {\n    const keyCode = ev.keyCode;\n    let charCode = ev.charCode;\n\n    if (charCode === 0 && keyCode === 13) {\n        charCode = 13;\n    }\n\n    if (charCode >= 32 || charCode === 13) {\n        return charCode;\n    }\n\n    return 0;\n}\n\n/**\n * Gets a `key` from a KeybordEvent.\n *\n * #quirks\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key\n *\n * @param ev Keyboard Event.\n * @returns A `key` property.\n */\nexport function getEventKey(ev: KeyboardEvent): string {\n    if (ev.type === \"keypress\") {\n        const charCode = getEventCharCode(ev);\n        if (charCode === 13) {\n            return \"Enter\";\n        }\n        return String.fromCharCode(charCode);\n    } else if (ev.type === \"keydown\" || ev.type === \"keyup\") {\n        const key = KEY_CODE_TO_KEY[ev.keyCode];\n        if (key !== undefined) {\n            return key;\n        }\n    }\n\n    return \"Unidentified\";\n}\n\n/**\n * Set inner HTML.\n *\n * #quirks\n *\n * @param element DOM Element.\n * @param content Inner HTML content.\n * @param isSVG Element is SVG.\n */\nexport function setInnerHTML(element: Element, content: string, isSVG: boolean): void {\n    // #msapp\n    //\n    // innerHTML should be invoked inside an unsafe context `MSApp.execUnsafeLocalFunction`\n    // All details here: https://msdn.microsoft.com/en-us/library/windows/apps/hh767331.aspx\n\n    // Doesn't work on SVG Elements in IE. Latest Edge versions are working fine.\n    if (!isSVG || ((FEATURES & FeatureFlags.SVGInnerHTML) !== 0)) {\n        element.innerHTML = content;\n    } else {\n        setInnerSVG(element as SVGElement, content);\n    }\n}\n\n/**\n * Container for SVG Elements.\n *\n * #quirks\n */\nlet innerHTMLSVGContainer: HTMLDivElement | undefined;\n\n/**\n * Set innerHTML on SVG elements in browsers that doesn't support innerHTML on SVG elements.\n *\n * #quirks\n *\n * @param element SVG element.\n * @param content Inner HTML content.\n */\nfunction setInnerSVG(element: SVGElement, content: string): void {\n    if (innerHTMLSVGContainer === undefined) {\n        innerHTMLSVGContainer = document.createElement(\"div\");\n    }\n    innerHTMLSVGContainer.innerHTML = `<svg>${content}</svg>`;\n    const svg = innerHTMLSVGContainer.firstChild;\n    let c = svg!.firstChild;\n    while (c !== null) {\n        element.appendChild(c);\n        c = svg!.firstChild;\n    }\n}\n\n/**\n * Traverses the DOM to the top and calculates DOM Node depth.\n *\n * @param node DOM Node.\n * @returns DOM Node depth.\n */\nexport function nodeDepth(node: Node | null): number {\n    let depth = 0;\n    while (node !== null) {\n        depth++;\n        node = node.parentNode;\n    }\n    return depth;\n}\n\n/**\n * Finds a first leaf node.\n *\n * @param node DOM Node.\n * @return A leaf node.\n */\nexport function firstLeaf(node: Node): Node {\n    while (node !== null) {\n        let next = node.firstChild;\n        if (next === null) {\n            break;\n        } else {\n            node = next;\n        }\n    }\n    return node;\n}\n\n/**\n * Finds a next sibling node.\n *\n * @param node DOM Node.\n * @return Next sibling.\n */\nexport function nextSibling(node: Node | null): Node | null {\n    while (node !== null) {\n        if (node.nextSibling !== null) {\n            return node.nextSibling;\n        }\n        node = node.parentNode;\n    }\n    return null;\n}\n\nexport type HTMLTagType =\n    \"a\" |\n    \"abbr\" |\n    \"acronym\" |\n    \"address\" |\n    \"applet\" |\n    \"area\" |\n    \"article\" |\n    \"aside\" |\n    \"b\" |\n    \"base\" |\n    \"basefont\" |\n    \"bdo\" |\n    \"big\" |\n    \"blockquote\" |\n    \"body\" |\n    \"br\" |\n    \"button\" |\n    \"canvas\" |\n    \"caption\" |\n    \"center\" |\n    \"cite\" |\n    \"code\" |\n    \"col\" |\n    \"colgroup\" |\n    \"datalist\" |\n    \"dd\" |\n    \"del\" |\n    \"dfn\" |\n    \"dir\" |\n    \"div\" |\n    \"dl\" |\n    \"dt\" |\n    \"em\" |\n    \"embed\" |\n    \"fieldset\" |\n    \"figcaption\" |\n    \"figure\" |\n    \"font\" |\n    \"footer\" |\n    \"form\" |\n    \"frame\" |\n    \"frameset\" |\n    \"h1\" |\n    \"h2\" |\n    \"h3\" |\n    \"h4\" |\n    \"h5\" |\n    \"h6\" |\n    \"head\" |\n    \"header\" |\n    \"hgroup\" |\n    \"hr\" |\n    \"html\" |\n    \"i\" |\n    \"iframe\" |\n    \"img\" |\n    \"ins\" |\n    \"isindex\" |\n    \"kbd\" |\n    \"keygen\" |\n    \"label\" |\n    \"legend\" |\n    \"li\" |\n    \"link\" |\n    \"listing\" |\n    \"map\" |\n    \"mark\" |\n    \"marquee\" |\n    \"menu\" |\n    \"meta\" |\n    \"meter\" |\n    \"nav\" |\n    \"nextid\" |\n    \"nobr\" |\n    \"noframes\" |\n    \"noscript\" |\n    \"object\" |\n    \"ol\" |\n    \"optgroup\" |\n    \"option\" |\n    \"p\" |\n    \"param\" |\n    \"picture\" |\n    \"plaintext\" |\n    \"pre\" |\n    \"progress\" |\n    \"q\" |\n    \"rt\" |\n    \"ruby\" |\n    \"s\" |\n    \"samp\" |\n    \"script\" |\n    \"section\" |\n    \"select\" |\n    \"small\" |\n    \"source\" |\n    \"span\" |\n    \"strike\" |\n    \"strong\" |\n    \"style\" |\n    \"sub\" |\n    \"sup\" |\n    \"table\" |\n    \"tbody\" |\n    \"td\" |\n    \"template\" |\n    \"textarea\" |\n    \"tfoot\" |\n    \"th\" |\n    \"thead\" |\n    \"title\" |\n    \"tr\" |\n    \"track\" |\n    \"tt\" |\n    \"u\" |\n    \"ul\" |\n    \"var\" |\n    \"wbr\" |\n    \"x-ms-webview\" |\n    \"xmp\";\n\nexport type SVGTagType =\n    \"circle\" |\n    \"clippath\" |\n    \"defs\" |\n    \"desc\" |\n    \"ellipse\" |\n    \"feblend\" |\n    \"fecolormatrix\" |\n    \"fecomponenttransfer\" |\n    \"fecomposite\" |\n    \"feconvolvematrix\" |\n    \"fediffuselighting\" |\n    \"fedisplacementmap\" |\n    \"fedistantlight\" |\n    \"feflood\" |\n    \"fefunca\" |\n    \"fefuncb\" |\n    \"fefuncg\" |\n    \"fefuncr\" |\n    \"fegaussianblur\" |\n    \"feimage\" |\n    \"femerge\" |\n    \"femergenode\" |\n    \"femorphology\" |\n    \"feoffset\" |\n    \"fepointlight\" |\n    \"fespecularlighting\" |\n    \"fespotlight\" |\n    \"fetile\" |\n    \"feturbulence\" |\n    \"filter\" |\n    \"foreignobject\" |\n    \"g\" |\n    \"image\" |\n    \"line\" |\n    \"lineargradient\" |\n    \"marker\" |\n    \"mask\" |\n    \"metadata\" |\n    \"path\" |\n    \"pattern\" |\n    \"polygon\" |\n    \"polyline\" |\n    \"radialgradient\" |\n    \"rect\" |\n    \"stop\" |\n    \"svg\" |\n    \"switch\" |\n    \"symbol\" |\n    \"text\" |\n    \"textpath\" |\n    \"tspan\" |\n    \"use\" |\n    \"view\";\n\nexport type MediaTagType =\n    \"audio\" |\n    \"video\";\n\nexport type InputType =\n    \"textarea\" | // not a real input type, just one exception for textarea elements\n    \"button\" |\n    \"checkbox\" |\n    \"color\" |\n    \"date\" |\n    \"datetime\" |\n    \"datetime-local\" |\n    \"email\" |\n    \"file\" |\n    \"hidden\" |\n    \"image\" |\n    \"month\" |\n    \"number\" |\n    \"password\" |\n    \"radio\" |\n    \"range\" |\n    \"reset\" |\n    \"search\" |\n    \"submit\" |\n    \"tel\" |\n    \"text\" |\n    \"time\" |\n    \"url\" |\n    \"week\";\n\nexport type KeyName =\n    \"Accept\" |\n    \"Add\" |\n    \"Again\" |\n    \"AllCandidates\" |\n    \"Alphanumeric\" |\n    \"Alt\" |\n    \"AltGraph\" |\n    \"Apps\" |\n    \"Attn\" |\n    \"BrowserBack\" |\n    \"BrowserFavorites\" |\n    \"BrowserForward\" |\n    \"BrowserHome\" |\n    \"BrowserRefresh\" |\n    \"BrowserSearch\" |\n    \"BrowserStop\" |\n    \"Camera\" |\n    \"CapsLock\" |\n    \"Clear\" |\n    \"CodeInput\" |\n    \"Compose\" |\n    \"Control\" |\n    \"Crsel\" |\n    \"Convert\" |\n    \"Copy\" |\n    \"Cut\" |\n    \"Decimal\" |\n    \"Divide\" |\n    \"Down\" |\n    \"DownLeft\" |\n    \"DownRight\" |\n    \"Eject\" |\n    \"End\" |\n    \"Enter\" |\n    \"EraseEof\" |\n    \"Execute\" |\n    \"Exsel\" |\n    \"Fn\" |\n    \"F1\" |\n    \"F2\" |\n    \"F3\" |\n    \"F4\" |\n    \"F5\" |\n    \"F6\" |\n    \"F7\" |\n    \"F8\" |\n    \"F9\" |\n    \"F10\" |\n    \"F11\" |\n    \"F12\" |\n    \"F13\" |\n    \"F14\" |\n    \"F15\" |\n    \"F16\" |\n    \"F17\" |\n    \"F18\" |\n    \"F19\" |\n    \"F20\" |\n    \"F21\" |\n    \"F22\" |\n    \"F23\" |\n    \"F24\" |\n    \"FinalMode\" |\n    \"Find\" |\n    \"FullWidth\" |\n    \"HalfWidth\" |\n    \"HangulMode\" |\n    \"HanjaMode\" |\n    \"Help\" |\n    \"Hiragana\" |\n    \"Home\" |\n    \"Insert\" |\n    \"JapaneseHiragana\" |\n    \"JapaneseKatakana\" |\n    \"JapaneseRomaji\" |\n    \"JunjaMode\" |\n    \"KanaMode\" |\n    \"KanjiMode\" |\n    \"Katakana\" |\n    \"LaunchApplication1\" |\n    \"LaunchApplication2\" |\n    \"LaunchMail\" |\n    \"Left\" |\n    \"Menu\" |\n    \"Meta\" |\n    \"MediaNextTrack\" |\n    \"MediaPlayPause\" |\n    \"MediaPreviousTrack\" |\n    \"MediaStop\" |\n    \"ModeChange\" |\n    \"NextCandidate\" |\n    \"Nonconvert\" |\n    \"NumLock\" |\n    \"PageDown\" |\n    \"PageUp\" |\n    \"Paste\" |\n    \"Pause\" |\n    \"Play\" |\n    \"Power\" |\n    \"PreviousCandidate\" |\n    \"PrintScreen\" |\n    \"Process\" |\n    \"Props\" |\n    \"Right\" |\n    \"RomanCharacters\" |\n    \"Scroll\" |\n    \"Select\" |\n    \"SelectMedia\" |\n    \"Separator\" |\n    \"Shift\" |\n    \"Soft1\" |\n    \"Soft2\" |\n    \"Soft3\" |\n    \"Soft4\" |\n    \"Stop\" |\n    \"Subtract\" |\n    \"SymbolLock\" |\n    \"Up\" |\n    \"UpLeft\" |\n    \"UpRight\" |\n    \"Undo\" |\n    \"VolumeDown\" |\n    \"VolumeMute\" |\n    \"VolumeUp\" |\n    \"Win\" |\n    \"Zoom\" |\n    \"Backspace\" |\n    \"Tab\" |\n    \"Cancel\" |\n    \"Esc\" |\n    \"Spacebar\" |\n    \"Del\" |\n    \"DeadGrave\" |\n    \"DeadEacute\" |\n    \"DeadCircumflex\" |\n    \"DeadTilde\" |\n    \"DeadMacron\" |\n    \"DeadBreve\" |\n    \"DeadAboveDot\" |\n    \"DeadUmlaut\" |\n    \"DeadAboveRing\" |\n    \"DeadDoubleacute\" |\n    \"DeadCaron\" |\n    \"DeadCedilla\" |\n    \"DeadOgonek\" |\n    \"DeadIota\" |\n    \"DeadVoicedSound\" |\n    \"DeadSemivoicedSound\" |\n    \"Unidentified\";\n","\n/**\n * NOOP function.\n */\nexport function NOOP() {\n    /* tslint:disable:no-empty */\n    /* tslint:enable:no-empty */\n}\n\n/**\n * NOOP function that always returns `false` value.\n *\n * @returns `false` value.\n */\nexport function NOOP_FALSE(): boolean {\n    return false;\n}\n","\nlet _clock = 0;\n\n/**\n * Monotonically increasing clock.\n *\n * @returns current clock value.\n */\nexport function clock(): number {\n    return _clock;\n}\n\n/**\n * Increment clock value.\n */\nexport function incrementClock(): void {\n    _clock++;\n}\n","import { incrementClock } from \"./clock\";\n\nlet _pending = false;\nlet _tasks: (() => void)[] = [];\n\n/**\n * Message ID that will be used to trigger tasks execution.\n *\n * Multiple ivi instances in one document doesn't work for many reasons, so we just use the same uuid as a message ID.\n */\nconst TASK_MESSAGE = __IVI_BROWSER__ ? \"06526c5c-2dcc-4a4e-a86c-86f5dea6319d\" : undefined;\n\nif (__IVI_BROWSER__) {\n    // Task scheduler based on postMessage\n    window.addEventListener(\"message\", handleWindowMessage);\n}\n\n/**\n * Task scheduler event handler.\n *\n * @param ev Message event.\n */\nfunction handleWindowMessage(ev: MessageEvent): void {\n    if (ev.source === window && ev.data === TASK_MESSAGE) {\n        runTasks();\n    }\n}\n\nfunction runTasks(): void {\n    _pending = false;\n\n    let tasks = _tasks;\n    _tasks = [];\n    for (let i = 0; i < tasks.length; i++) {\n        tasks[i]();\n    }\n\n    incrementClock();\n}\n\n/**\n * Trigger tasks execution.\n */\nfunction requestTaskExecution(): void {\n    if (!_pending) {\n        _pending = true;\n        if (__IVI_BROWSER__) {\n            window.postMessage(TASK_MESSAGE, \"*\");\n        } else {\n            setImmediate(runTasks);\n        }\n    }\n}\n\n/**\n * Add task to the task queue.\n *\n * @param task\n */\nexport function scheduleTask(task: () => void): void {\n    requestTaskExecution();\n    _tasks.push(task);\n}\n","import { USER_AGENT, UserAgentFlags } from \"../common/user_agent\";\nimport { NOOP } from \"../common/noop\";\nimport { incrementClock } from \"./clock\";\nimport { scheduleTask } from \"./task\";\n\nlet _pending = false;\nlet _microtasks: (() => void)[] = [];\nlet _microtaskNode: Text;\nlet _microtaskToggle = 0;\n\nif (__IVI_BROWSER__) {\n    if (!(USER_AGENT & UserAgentFlags.iOSStandalone)) {\n        const microtaskObserver = new MutationObserver(runMicrotasks);\n        _microtaskNode = document.createTextNode(\"\");\n        microtaskObserver.observe(_microtaskNode, { \"characterData\": true });\n    }\n}\n\nfunction runMicrotasksInPromise(): void {\n    runMicrotasks();\n    /**\n     * #quirks\n     *\n     * Flush microtask queue.\n     * - iOS 8.3+\n     * - UIWebView 9.3.3+\n     *\n     * This function is running only on this browsers, so there is no need for an additional check.\n     */\n    scheduleTask(NOOP);\n}\n\nfunction runMicrotasks(): void {\n    while (_microtasks.length > 0) {\n        const tasks = _microtasks;\n        _microtasks = [];\n        for (let i = 0; i < tasks.length; i++) {\n            tasks[i]();\n        }\n        incrementClock();\n    }\n\n    _pending = false;\n}\n\n/**\n * Trigger microtasks execution.\n */\nfunction requestMicrotaskExecution(): void {\n    if (!_pending) {\n        _pending = true;\n        if (__IVI_BROWSER__) {\n            /**\n             * #quirks\n             *\n             * Following browsers have problems with microtasks implementation based on `MutationObserver`:\n             * - iOS 8.3+(full screen mode `navigator.standalone`)\n             * - UIWebView 9.3.3+\n             *\n             * Mutation events do not fire when code is executed in touch event context.\n             */\n            if (USER_AGENT & UserAgentFlags.iOSStandalone) {\n                Promise.resolve().then(runMicrotasksInPromise);\n            } else {\n                _microtaskToggle ^= 1;\n                _microtaskNode.nodeValue = _microtaskToggle ? \"1\" : \"0\";\n            }\n        } else {\n            process.nextTick(runMicrotasks);\n        }\n    }\n}\n\n/**\n * Add task to the microtask queue.\n *\n * @param task\n */\nexport function scheduleMicrotask(task: () => void): void {\n    requestMicrotaskExecution();\n    _microtasks.push(task);\n}\n","\nimport { scheduleMicrotask } from \"../scheduler/microtask\";\n\nlet _visible = true;\nlet _isHidden: () => boolean;\nlet _visibilityObservers: ((visible: boolean) => void)[] | undefined = (__IVI_BROWSER__) ? [] : undefined;\nlet _lock = false;\n\nexport function isVisible(): boolean {\n    if (__IVI_BROWSER__) {\n        return _visible;\n    }\n    return false;\n}\n\nexport function addVisibilityObserver(observer: (visible: boolean) => void): void {\n    if (__IVI_BROWSER__) {\n        _visibilityObservers!.push(observer);\n    }\n}\n\nexport function removeVisibilityObserver(observer: (visible: boolean) => void): void {\n    if (__IVI_BROWSER__) {\n        if (_lock) {\n            scheduleMicrotask(function () {\n                removeVisibilityObserver(observer);\n            });\n        } else {\n            const index = _visibilityObservers!.indexOf(observer);\n            if (index > -1) {\n                if (index === _visibilityObservers!.length) {\n                    _visibilityObservers!.pop();\n                } else {\n                    _visibilityObservers![index] = _visibilityObservers!.pop()!;\n                }\n            }\n        }\n    }\n}\n\nfunction handleVisibilityChange(): void {\n    const newVisible = !_isHidden();\n    if (_visible !== newVisible) {\n        _lock = true;\n        for (let i = 0; i < _visibilityObservers!.length; i++) {\n            _visibilityObservers![i](newVisible);\n        }\n        _lock = false;\n    }\n}\n\nif (__IVI_BROWSER__) {\n    if (typeof document[\"hidden\"] !== \"undefined\") {\n        _isHidden = function () {\n            return document.hidden;\n        };\n        document.addEventListener(\"visibilitychange\", handleVisibilityChange);\n    } else if (typeof (document as any)[\"webkitHidden\"] !== \"undefined\") {\n        /**\n         * #quirks\n         *\n         * Android 4.4\n         */\n        _isHidden = function () {\n            return (document as any)[\"webkitHidden\"];\n        };\n        document.addEventListener(\"webkitvisibilitychange\", handleVisibilityChange);\n    } else {\n        _isHidden = function () {\n            return true;\n        };\n    }\n    _visible = !_isHidden();\n}\n","\n/**\n * Frame Tasks Group flags.\n */\nexport const enum FrameTasksGroupFlags {\n    /**\n     * Group contains component update tasks.\n     */\n    Component = 1,\n    /**\n     * Group contains \"write\" tasks.\n     */\n    Write = 1 << 1,\n    /**\n     * Group contains \"read\" tasks\".\n     */\n    Read = 1 << 2,\n    /**\n     * Group contains \"after\" tasks.\n     */\n    After = 1 << 3,\n    /**\n     * Group is locked from reading and writing.\n     */\n    RWLock = 1 << 4,\n}\n\n/**\n * Frame tasks group contains tasks for updating components, read dom and write dom tasks, and tasks that should be\n * executed after all other tasks are finished.\n *\n * To get access to the frame tasks group, use: `currentFrame()` and `nextFrame()` scheduler methods.\n *\n *     scheduler.currentFrame().read(() => {\n *         console.log(element.clientWidth);\n *     });\n *\n * @final\n */\nexport class FrameTasksGroup {\n    /**\n     * See `FrameTasksGroupFlags` for details.\n     */\n    _flags: number;\n    /**\n     * Write DOM task queue.\n     */\n    _writeTasks: (() => void)[] | null;\n    /**\n     * Read DOM task queue.\n     */\n    _readTasks: (() => void)[] | null;\n    /**\n     * Tasks that should be executed when all other tasks are finished.\n     */\n    _afterTasks: (() => void)[] | null;\n\n    constructor() {\n        this._flags = 0;\n        this._writeTasks = null;\n        this._readTasks = null;\n        this._afterTasks = null;\n    }\n\n    /**\n     * Add Component to the components queue.\n     *\n     * @param component\n     */\n    updateComponent(): void {\n        if (__IVI_BROWSER__) {\n            if (__IVI_DEV__) {\n                if ((this._flags & FrameTasksGroupFlags.RWLock)) {\n                    throw new Error(\"Failed to add update component task to the current frame, current frame is \" +\n                        \"locked for read and write tasks.\");\n                }\n            }\n\n            this._flags |= FrameTasksGroupFlags.Component;\n        }\n    }\n\n    /**\n     * Add new task to the write DOM task queue.\n     *\n     * @param task\n     */\n    write(task: () => void): void {\n        if (__IVI_DEV__) {\n            if ((this._flags & FrameTasksGroupFlags.RWLock)) {\n                throw new Error(\"Failed to add update component task to the current frame, current frame is locked \" +\n                    \"for read and write tasks.\");\n            }\n        }\n\n        this._flags |= FrameTasksGroupFlags.Write;\n        if (this._writeTasks === null) {\n            this._writeTasks = [];\n        }\n        this._writeTasks.push(task);\n    }\n\n    /**\n     * Add new task to the read DOM task queue.\n     *\n     * @param task\n     */\n    read(task: () => void): void {\n        if (__IVI_DEV__) {\n            if ((this._flags & FrameTasksGroupFlags.RWLock)) {\n                throw new Error(\"Failed to add update component task to the current frame, current frame is locked \" +\n                    \"for read and write tasks.\");\n            }\n        }\n\n        this._flags |= FrameTasksGroupFlags.Read;\n        if (this._readTasks === null) {\n            this._readTasks = [];\n        }\n        this._readTasks.push(task);\n    }\n\n    /**\n     * Add new task to the task queue that will execute tasks when all DOM tasks are finished.\n     *\n     * @param task\n     */\n    after(task: () => void): void {\n        this._flags |= FrameTasksGroupFlags.After;\n        if (this._afterTasks === null) {\n            this._afterTasks = [];\n        }\n        this._afterTasks.push(task);\n    }\n\n    /**\n     * Lock read and write task queues.\n     *\n     * Works in DEBUG mode only.\n     */\n    _rwLock(): void {\n        if (__IVI_DEV__) {\n            this._flags |= FrameTasksGroupFlags.RWLock;\n        }\n    }\n\n    /**\n     * Unlock read and write task queue.\n     *\n     * Works in DEBUG mode only.\n     */\n    _rwUnlock(): void {\n        if (__IVI_DEV__) {\n            this._flags &= ~FrameTasksGroupFlags.RWLock;\n        }\n    }\n}\n","export class RepeatableTaskList {\n    tasks: Array<() => boolean | undefined>;\n\n    constructor() {\n        this.tasks = [];\n    }\n\n    add(task: () => boolean | undefined): void {\n        this.tasks.push(task);\n    }\n\n    run(): void {\n        for (let i = 0; i < this.tasks.length; i++) {\n            const task = this.tasks[i];\n            if (task() === true) {\n                if (i === this.tasks.length) {\n                    this.tasks.pop();\n                } else {\n                    this.tasks[i--] = this.tasks.pop()!;\n                }\n            }\n        }\n    }\n}\n","import { RepeatableTaskList } from \"../common/repeatable_task_list\";\n\nconst _readers = new RepeatableTaskList();\n\n/**\n * Add DOM Reader.\n *\n * DOM Reader will be be invoked on each frame in the read phase.\n *\n * @param reader Task that will be executed until it returns `false`.\n */\nexport function addDOMReader(reader: () => boolean | undefined): void {\n    if (__IVI_BROWSER__) {\n        _readers.add(reader);\n    }\n}\n\n/**\n * Execute DOM Reader tasks.\n */\nexport function executeDOMReaders(): void {\n    if (__IVI_BROWSER__) {\n        _readers.run();\n    }\n}\n","import { Context } from \"../common/types\";\nimport { checkDOMAttributesForTypos, checkDOMStylesForTypos, checkDeprecatedDOMSVGAttributes } from \"../dev_mode/typos\";\nimport { isVoidElement, isInputTypeHasCheckedProperty } from \"../dev_mode/dom\";\nimport { InputType } from \"../common/dom\";\nimport { IVNode, ElementProps } from \"./ivnode\";\nimport { VNodeFlags, ElementDescriptorFlags } from \"./flags\";\nimport { ComponentFunction, ComponentClass, Component } from \"./component\";\nimport { ElementDescriptor } from \"./element_descriptor\";\nimport { SelectorData, ConnectDescriptor } from \"./connect_descriptor\";\nimport { KeepAliveHandler } from \"./keep_alive\";\nimport { EventHandler } from \"../events/event_handler\";\nimport { CSSStyleProps } from \"../common/dom_props\";\n\n/**\n * VNode Builder provides a chain-method API to build VNodes.\n *\n * VNodeBuilder class has a parametric type `P` to specify `props` type.\n *\n *     const vnode = $h(\"div\", \"div-class-name\")\n *         .props({ id: \"div-id\" })\n *         .events(Events.onClick((e) => console.log(\"click event\", e)))\n *         .children(\"Hello\");\n *\n * There are several factory functions that create VNode Builder objects:\n *\n *     // Basic HTML Elements\n *     $h(tagName: string, className?: string): VNodeBuilder<HTMLElementProps | null>;\n *\n *     // SVG Elements\n *     $s(tagName: string, className?: string): VNodeBuilder<SVGElementProps | null>;\n *\n *     // Components\n *     $c<P>(component: ComponentClass<P> | ComponentFunction<P>, props: P): VNodeBuilder<P>;\n *\n *     // Input Elements and TextArea (specifying type as \"textarea\" will create HTMLTextAreaElement)\n *     $i(type: string, className?: string): VNodeBuilder<HTMLInputElementProps | HTMLTextAreaElementProps | null>;\n *\n *     // Media Elements (Video and Audio)\n *     $m(tagName: string, className?: string): VNodeBuilder<HTMLMediaElementProps | null>;\n *\n *     // Text Nodes\n *     $t(text: string): VNodeBuilder<null>;\n *\n * @final\n */\nexport class VNode<P = null> implements IVNode<P> {\n    _flags: VNodeFlags;\n    _children: IVNode<any>[] | IVNode<any> | string | number | boolean | null | undefined;\n    _tag: string | ComponentClass<any> | ComponentFunction<any> | ElementDescriptor<any> |\n    ConnectDescriptor<any, any, any> | KeepAliveHandler | null;\n    _key: any;\n    _props: ElementProps<P> | P | null;\n    _instance: Node | Component<any> | SelectorData | Context | null;\n    _className: string | null;\n\n    constructor(\n        flags: number,\n        tag: string | ComponentFunction<P> | ComponentClass<P> | ElementDescriptor<any> |\n            ConnectDescriptor<any, any, any> | KeepAliveHandler | null,\n        props: ElementProps<P> | P | null,\n        className: string | null,\n        children: IVNode<any>[] | IVNode<any> | string | number | boolean | null | undefined,\n    ) {\n        this._flags = flags;\n        this._children = children;\n        this._tag = tag;\n        this._key = 0;\n        this._props = props;\n        this._instance = null;\n        this._className = className;\n    }\n\n    /**\n     * Set key.\n     *\n     * Children reconciliation algorithm is using key property to find the same node in the previous children array. Key\n     * should be unique among its siblings.\n     *\n     * @param key Any object that should be unique among its siblings.\n     * @returns VNodeBuilder.\n     */\n    key(key: any): VNode<P> {\n        this._flags |= VNodeFlags.Key;\n        this._key = key;\n        return this;\n    }\n\n    /**\n     * Set className.\n     *\n     * @param className.\n     * @returns VNodeBuilder.\n     */\n    className(className: string | null): VNode<P> {\n        if (__IVI_DEV__) {\n            if (!(this._flags & VNodeFlags.Element)) {\n                throw new Error(\"Failed to set className, className is available on element nodes only.\");\n            }\n            if (className !== null) {\n                if ((this._flags & VNodeFlags.ElementDescriptor) !== 0) {\n                    const d = this._tag as ElementDescriptor<P>;\n                    if ((d._flags & ElementDescriptorFlags.ProtectClassName) !== 0) {\n                        throw new Error(\"Failed to set className, className is protected by an ElementDescriptor.\");\n                    }\n                }\n            }\n        }\n        this._className = className;\n        return this;\n    }\n\n    /**\n     * Set style.\n     *\n     * @param style.\n     * @returns VNodeBuilder.\n     */\n    style<U extends CSSStyleProps>(style: U | null): VNode<P> {\n        if (__IVI_DEV__) {\n            if (!(this._flags & VNodeFlags.Element)) {\n                throw new Error(\"Failed to set style, style is available on element nodes only.\");\n            }\n\n            if (style !== null) {\n                checkDOMStylesForTypos(style);\n\n                if ((this._flags & VNodeFlags.ElementDescriptor) !== 0) {\n                    const d = this._tag as ElementDescriptor<P>;\n                    if (d._flags & ElementDescriptorFlags.ProtectStyle) {\n                        if (d._protectedStyle) {\n                            const keys = Object.keys(d._protectedStyle);\n                            for (let i = 0; i < keys.length; i++) {\n                                const key = keys[i];\n                                if (style.hasOwnProperty(key)) {\n                                    throw new Error(`Failed to set style, \"${key}\" style is protected by an ` +\n                                        `ElementDescriptor.`);\n                                }\n                            }\n                        } else {\n                            throw new Error(\"Failed to set style, style is protected by an ElementDescriptor.\");\n                        }\n                    }\n                }\n            }\n        }\n        if (this._props === null) {\n            this._flags |= VNodeFlags.ElementProps;\n            this._props = {\n                attrs: null,\n                style,\n                events: null,\n            };\n        } else {\n            (this._props as ElementProps<P>).style = style;\n        }\n        return this;\n    }\n\n    /**\n     * Set events.\n     *\n     * @param events.\n     * @returns VNodeBuilder.\n     */\n    events(events: Array<EventHandler | null> | EventHandler | null): VNode<P> {\n        if (__IVI_DEV__) {\n            if (!(this._flags & VNodeFlags.Element)) {\n                throw new Error(\"Failed to set events, events are available on element nodes only.\");\n            }\n        }\n        if (this._props === null) {\n            this._flags |= VNodeFlags.ElementProps;\n            this._props = {\n                attrs: null,\n                style: null,\n                events,\n            };\n        } else {\n            (this._props as ElementProps<P>).events = events;\n        }\n        return this;\n    }\n\n    /**\n     * Set props.\n     *\n     * @param props.\n     * @returns VNodeBuilder.\n     */\n    props<U extends P>(props: U | null): VNode<P> {\n        if (__IVI_DEV__) {\n            if (props) {\n                checkDOMAttributesForTypos(props);\n\n                if (this._flags & VNodeFlags.SvgElement) {\n                    checkDeprecatedDOMSVGAttributes(this._tag as string, props);\n                }\n\n                if (this._flags & VNodeFlags.ElementDescriptor) {\n                    const d = this._tag as ElementDescriptor<P>;\n                    if (d._flags & ElementDescriptorFlags.ProtectProps) {\n                        if (d._protectedProps) {\n                            const keys = Object.keys(d._protectedProps);\n                            for (let i = 0; i < keys.length; i++) {\n                                const key = keys[i];\n                                if (props.hasOwnProperty(key)) {\n                                    throw new Error(`Failed to set props, \"${key}\" property is protected by an ` +\n                                        `ElementDescriptor.`);\n                                }\n                            }\n                        } else {\n                            throw new Error(\"Failed to set props, props are protected by an ElementDescriptor.\");\n                        }\n                    }\n                }\n            }\n        }\n        if (this._props === null) {\n            this._flags |= VNodeFlags.ElementProps;\n            this._props = {\n                attrs: props,\n                style: null,\n                events: null,\n            };\n        } else {\n            (this._props as ElementProps<P>).attrs = props;\n        }\n        return this;\n    }\n\n    /**\n     * Set children.\n     *\n     * @param children Children can be a simple string, single VNode or recursive list of VNodes with strings and null\n     *   values. It will automatically normalize recursive lists by flattening, filtering out null values and replacing\n     *   strings with text nodes.\n     * @returns VNodeBuilder.\n     */\n    children(...children: Array<IVNode<any>[] | IVNode<any> | string | number | null>): VNode<P>;\n    children(): VNode<P> {\n        if (__IVI_DEV__) {\n            if (this._flags &\n                (VNodeFlags.ChildrenArray |\n                    VNodeFlags.ChildrenVNode |\n                    VNodeFlags.ChildrenBasic |\n                    VNodeFlags.UnsafeHTML)) {\n                throw new Error(\"Failed to set children, VNode element is already having children.\");\n            }\n            if (!(this._flags & VNodeFlags.Element)) {\n                throw new Error(\"Failed to set children, children are available on element nodes only.\");\n            }\n            if (this._flags & VNodeFlags.InputElement) {\n                throw new Error(\"Failed to set children, input elements can't have children.\");\n            }\n            if (this._flags & VNodeFlags.MediaElement) {\n                throw new Error(\"Failed to set children, media elements can't have children.\");\n            }\n            if (isVoidElement(this._tag as string)) {\n                throw new Error(`Failed to set children, ${this._tag} elements can't have children.`);\n            }\n        }\n\n        const children = arguments;\n        let f = 0;\n        let r = null;\n        if (children.length === 1) {\n            r = children[0] as IVNode<any>[] | IVNode<any> | string | number | null;\n            if (typeof r === \"object\") {\n                if (r !== null) {\n                    if (r.constructor === Array) {\n                        r = r as IVNode<any>[];\n                        if (r.length > 1) {\n                            f = VNodeFlags.ChildrenArray;\n                        } else if (r.length === 1) {\n                            f = VNodeFlags.ChildrenVNode;\n                            r = r[0];\n                        } else {\n                            r = null;\n                        }\n                    } else {\n                        f = VNodeFlags.ChildrenVNode;\n                    }\n                }\n            } else {\n                f = VNodeFlags.ChildrenBasic;\n            }\n        } else {\n            let i;\n            let j = 0;\n            let k = 0;\n            let c;\n            for (i = 0; i < children.length; i++) {\n                c = children[i];\n                if (c !== null) {\n                    if (c.constructor === Array) {\n                        if (c.length > 0) {\n                            k += c.length;\n                            j++;\n                            r = c;\n                        }\n                    } else {\n                        k++;\n                        j++;\n                        r = c;\n                    }\n                }\n            }\n            if (j > 0) {\n                if ((j | k) === 1) {\n                    if (typeof r === \"object\") {\n                        if (r.constructor === Array) {\n                            if (k > 1) {\n                                f = VNodeFlags.ChildrenArray;\n                            } else {\n                                f = VNodeFlags.ChildrenVNode;\n                                r = r[0];\n                            }\n                        } else {\n                            f = VNodeFlags.ChildrenVNode;\n                        }\n                    } else {\n                        f = VNodeFlags.ChildrenBasic;\n                    }\n                } else {\n                    f = VNodeFlags.ChildrenArray;\n                    r = new Array(k);\n                    k = 0;\n                    for (i = 0; i < children.length; i++) {\n                        c = children[i];\n                        if (typeof c === \"object\") {\n                            if (c !== null) {\n                                if (c.constructor === Array) {\n                                    for (j = 0; j < c.length; j++) {\n                                        if (__IVI_DEV__) {\n                                            if (!(c[j]._flags & VNodeFlags.Key)) {\n                                                throw new Error(\"Invalid children array. All children nodes in nested\" +\n                                                    \" array should have explicit keys.\");\n                                            }\n                                        }\n                                        r[k++] = c[j] as IVNode<any>;\n                                    }\n                                } else {\n                                    r[k++] = c as IVNode<any>;\n                                    if ((c._flags & VNodeFlags.Key) === 0) {\n                                        c._key = i;\n                                    }\n                                }\n                            }\n                        } else {\n                            c = r[k++] = new VNode<null>(VNodeFlags.Text, null, null, null, c as string | number);\n                            c._key = i;\n                        }\n                    }\n                    checkUniqueKeys(r);\n                }\n            }\n        }\n        this._flags |= f;\n        this._children = r;\n        return this;\n    }\n\n    /**\n     * Set children as an innerHTML string. It is potentially vulnerable to XSS attacks.\n     *\n     * @param html innerHTML in a string format.\n     * @returns VNodeBuilder.\n     */\n    unsafeHTML(html: string | null): VNode<P> {\n        if (__IVI_DEV__) {\n            if (this._flags & (VNodeFlags.ChildrenArray | VNodeFlags.ChildrenVNode | VNodeFlags.ChildrenBasic)) {\n                throw new Error(\"Failed to set unsafeHTML, VNode element is already having children.\");\n            }\n            if (!(this._flags & VNodeFlags.Element)) {\n                throw new Error(\"Failed to set unsafeHTML, unsafeHTML is available on element nodes only.\");\n            }\n            if (this._flags & VNodeFlags.InputElement) {\n                throw new Error(\"Failed to set unsafeHTML, input elements can't have innerHTML.\");\n            }\n            if (this._flags & VNodeFlags.MediaElement) {\n                throw new Error(\"Failed to set unsafeHTML, media elements can't have children.\");\n            }\n            if (isVoidElement(this._tag as string)) {\n                throw new Error(`Failed to set unsafeHTML, ${this._tag} elements can't have children.`);\n            }\n        }\n        this._flags |= VNodeFlags.UnsafeHTML;\n        this._children = html;\n        return this;\n    }\n\n    /**\n     * Set HTMLInputElement/HTMLTextAreaElement value property.\n     *\n     * @param text Text value.\n     * @returns VNodeBuilder.\n     */\n    value(value: string | null): VNode<P> {\n        if (__IVI_DEV__) {\n            if (!(this._flags & VNodeFlags.InputElement)) {\n                throw new Error(\"Failed to set value, value is available on input elements only.\");\n            }\n        }\n        this._children = value;\n        return this;\n    }\n\n    /**\n     * Set HTMLInputElement checked property.\n     *\n     * @param text Text value.\n     * @returns VNodeBuilder.\n     */\n    checked(checked: boolean | null): VNode<P> {\n        if (__IVI_DEV__) {\n            if (!(this._flags & VNodeFlags.InputElement)) {\n                throw new Error(\"Failed to set checked, checked is available on input elements only.\");\n            }\n            if (!isInputTypeHasCheckedProperty(this._tag as InputType)) {\n                throw new Error(`Failed to set checked, input elements with type ${this._tag} doesn't support `\n                    + `checked value.`);\n            }\n        }\n        this._children = checked;\n        return this;\n    }\n\n    /**\n     * Marks VNode as an immutable.\n     *\n     * Immutable VNodes can't be used directly when rendering trees, they should be cloned with a `cloneVNode` function.\n     *\n     * @returns VNodeBuilder.\n     */\n    immutable(): VNode<P> {\n        if (__IVI_DEV__) {\n            this._flags |= VNodeFlags.Immutable;\n        }\n        return this;\n    }\n\n    /**\n     * Merge props with existing props.\n     *\n     * @param props\n     * @return VNodeBuilder.\n     */\n    mergeProps<U extends P>(props: U | null): VNode<P> {\n        if (__IVI_DEV__) {\n            if (props && typeof props !== \"object\") {\n                throw new Error(`Failed to merge props, props object has type \"${typeof props}\".`);\n            }\n            if (this._props &&\n                (this._props as ElementProps<P>).attrs &&\n                typeof (this._props as ElementProps<P>).attrs !== \"object\") {\n                throw new Error(`Failed to merge props, props object has type \"${typeof this._props}\".`);\n            }\n        }\n        if (props !== null) {\n            return this.props(this._props !== null && (this._props as ElementProps<P>).attrs !== null ?\n                Object.assign({}, (this._props as ElementProps<P>).attrs, props) :\n                props);\n        }\n        return this;\n    }\n\n    /**\n     * Merge style with existing style.\n     *\n     * @param props\n     * @return VNodeBuilder.\n     */\n    mergeStyle<U extends CSSStyleProps>(style: U | null): VNode<P> {\n        if (style !== null) {\n            return this.style(this._props !== null && (this._props as ElementProps<P>).style !== null ?\n                Object.assign({}, (this._props as ElementProps<P>).style, style) :\n                style);\n        }\n        return this;\n    }\n\n    /**\n     * Element will be automatically focused after instantiation.\n     *\n     * @param focus\n     * @return VNodeBuilder.\n     */\n    autofocus(focus: boolean): VNode<P> {\n        if (__IVI_DEV__) {\n            if (!(this._flags & VNodeFlags.Element)) {\n                throw new Error(\"Failed to set autofocus, autofocus is available on element nodes only.\");\n            }\n        }\n        if (focus === true) {\n            this._flags |= VNodeFlags.Autofocus;\n        }\n        return this;\n    }\n}\n\nexport function checkUniqueKeys(children: IVNode<any>[]): void {\n    if (__IVI_DEV__) {\n        let keys: Set<any> | undefined;\n        for (let i = 0; i < children.length; i++) {\n            const child = children[i];\n            if ((child._flags & VNodeFlags.Key) !== 0) {\n                if (keys === undefined) {\n                    keys = new Set<any>();\n                } else if (keys.has(child._key) === true) {\n                    throw new Error(`Failed to set children, invalid children list, key: \"${child._key}\" ` +\n                        `is used multiple times.`);\n                }\n                keys.add(child._key);\n            }\n        }\n    }\n}\n","import { isValidTag } from \"../dev_mode/dom\";\nimport { HTMLTagType, SVGTagType, MediaTagType, InputType } from \"../common/dom\";\nimport {\n    HTMLAnchorElementProps, HTMLElementProps, HTMLAppletElementProps, HTMLAreaElementProps, HTMLAudioElementProps,\n    HTMLBaseElementProps, HTMLBaseFontElementProps, HTMLBodyElementProps, HTMLBRElementProps, HTMLButtonElementProps,\n    HTMLCanvasElementProps, HTMLQuoteElementProps, HTMLTableCaptionElementProps, HTMLTableColElementProps,\n    HTMLDataListElementProps, HTMLModElementProps, HTMLDirectoryElementProps, HTMLDivElementProps,\n    HTMLDListElementProps, HTMLEmbedElementProps, HTMLFieldSetElementProps, HTMLFontElementProps, HTMLFormElementProps,\n    HTMLFrameElementProps, HTMLFrameSetElementProps, HTMLHeadElementProps, HTMLHeadingElementProps, HTMLHRElementProps,\n    HTMLHtmlElementProps, HTMLIFrameElementProps, HTMLImageElementProps, HTMLInputElementProps, HTMLLabelElementProps,\n    HTMLLegendElementProps, HTMLLIElementProps, HTMLLinkElementProps, HTMLMapElementProps, HTMLMarqueeElementProps,\n    HTMLMenuElementProps, HTMLMetaElementProps, HTMLMeterElementProps, HTMLObjectElementProps, HTMLOListElementProps,\n    HTMLOptGroupElementProps, HTMLOptionElementProps, HTMLParagraphElementProps, HTMLParamElementProps,\n    HTMLPictureElementProps, HTMLPreElementProps, HTMLProgressElementProps, HTMLScriptElementProps,\n    HTMLSelectElementProps, HTMLSourceElementProps, HTMLSpanElementProps, HTMLStyleElementProps,\n    HTMLTableDataCellElementProps, HTMLTableElementProps, HTMLTableHeaderCellElementProps, HTMLTableRowElementProps,\n    HTMLTableSectionElementProps, HTMLTemplateElementProps, HTMLTextAreaElementProps, HTMLTitleElementProps,\n    HTMLTrackElementProps, HTMLUListElementProps, HTMLUnknownElementProps, HTMLVideoElementProps, HTMLMediaElementProps,\n    MSHTMLWebViewElementProps,\n\n    SVGCircleElementProps, SVGClipPathElementProps, SVGDefsElementProps, SVGDescElementProps, SVGEllipseElementProps,\n    SVGFEBlendElementProps, SVGFEColorMatrixElementProps, SVGFEComponentTransferElementProps,\n    SVGFECompositeElementProps, SVGFEConvolveMatrixElementProps, SVGFEDiffuseLightingElementProps,\n    SVGFEDisplacementMapElementProps, SVGFEDistantLightElementProps, SVGFEFloodElementProps, SVGFEFuncAElementProps,\n    SVGFEFuncBElementProps, SVGFEFuncGElementProps, SVGFEFuncRElementProps, SVGFEGaussianBlurElementProps,\n    SVGFEImageElementProps, SVGFEMergeElementProps, SVGFEMergeNodeElementProps, SVGFEMorphologyElementProps,\n    SVGFEOffsetElementProps, SVGFEPointLightElementProps, SVGFESpecularLightingElementProps, SVGFESpotLightElementProps,\n    SVGFETileElementProps, SVGFETurbulenceElementProps, SVGFilterElementProps, SVGForeignObjectElementProps,\n    SVGGElementProps, SVGImageElementProps, SVGLinearGradientElementProps, SVGLineElementProps, SVGMarkerElementProps,\n    SVGMaskElementProps, SVGMetadataElementProps, SVGPathElementProps, SVGPatternElementProps, SVGPolygonElementProps,\n    SVGPolylineElementProps, SVGRadialGradientElementProps, SVGRectElementProps, SVGStopElementProps,\n    SVGSVGElementProps, SVGSwitchElementProps, SVGSymbolElementProps, SVGTextElementProps, SVGTextPathElementProps,\n    SVGTSpanElementProps, SVGViewElementProps, SVGUseElementProps, SVGElementProps,\n} from \"../common/dom_props\";\nimport { VNodeFlags, ElementDescriptorFlags } from \"./flags\";\nimport { VNode } from \"./vnode\";\nimport { ElementDescriptor } from \"./element_descriptor\";\n\n/**\n * Create a VNodeBuilder representing a Text node.\n *\n * @param content Text content.\n * @returns VNodeBuilder object.\n */\nexport function $t(content: string | number | boolean | null): VNode<null> {\n    return new VNode<null>(VNodeFlags.Text, null, null, null, content);\n}\n\n/* tslint:disable:max-line-length */\n/**\n * Create a VNodeBuilder representing an Element node.\n *\n * @param tagName HTML Element tag name.\n * @param props HTML Element props.\n * @returns VNodeBuilder object.\n */\nexport function $h(tagName: \"a\", className?: string): VNode<HTMLAnchorElementProps | null>;\nexport function $h(tagName: \"abbr\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"acronym\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"address\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"applet\", className?: string): VNode<HTMLAppletElementProps | null>;\nexport function $h(tagName: \"area\", className?: string): VNode<HTMLAreaElementProps | null>;\nexport function $h(tagName: \"article\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"aside\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"b\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"base\", className?: string): VNode<HTMLBaseElementProps | null>;\nexport function $h(tagName: \"basefont\", className?: string): VNode<HTMLBaseFontElementProps | null>;\nexport function $h(tagName: \"bdo\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"big\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"blockquote\", className?: string): VNode<HTMLQuoteElementProps | null>;\nexport function $h(tagName: \"body\", className?: string): VNode<HTMLBodyElementProps | null>;\nexport function $h(tagName: \"br\", className?: string): VNode<HTMLBRElementProps | null>;\nexport function $h(tagName: \"button\", className?: string): VNode<HTMLButtonElementProps | null>;\nexport function $h(tagName: \"canvas\", className?: string): VNode<HTMLCanvasElementProps | null>;\nexport function $h(tagName: \"caption\", className?: string): VNode<HTMLTableCaptionElementProps | null>;\nexport function $h(tagName: \"center\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"cite\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"code\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"col\", className?: string): VNode<HTMLTableColElementProps | null>;\nexport function $h(tagName: \"colgroup\", className?: string): VNode<HTMLTableColElementProps | null>;\nexport function $h(tagName: \"datalist\", className?: string): VNode<HTMLDataListElementProps | null>;\nexport function $h(tagName: \"dd\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"del\", className?: string): VNode<HTMLModElementProps | null>;\nexport function $h(tagName: \"dfn\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"dir\", className?: string): VNode<HTMLDirectoryElementProps | null>;\nexport function $h(tagName: \"div\", className?: string): VNode<HTMLDivElementProps | null>;\nexport function $h(tagName: \"dl\", className?: string): VNode<HTMLDListElementProps | null>;\nexport function $h(tagName: \"dt\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"em\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"embed\", className?: string): VNode<HTMLEmbedElementProps | null>;\nexport function $h(tagName: \"fieldset\", className?: string): VNode<HTMLFieldSetElementProps | null>;\nexport function $h(tagName: \"figcaption\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"figure\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"font\", className?: string): VNode<HTMLFontElementProps | null>;\nexport function $h(tagName: \"footer\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"form\", className?: string): VNode<HTMLFormElementProps | null>;\nexport function $h(tagName: \"frame\", className?: string): VNode<HTMLFrameElementProps | null>;\nexport function $h(tagName: \"frameset\", className?: string): VNode<HTMLFrameSetElementProps | null>;\nexport function $h(tagName: \"h1\", className?: string): VNode<HTMLHeadingElementProps | null>;\nexport function $h(tagName: \"h2\", className?: string): VNode<HTMLHeadingElementProps | null>;\nexport function $h(tagName: \"h3\", className?: string): VNode<HTMLHeadingElementProps | null>;\nexport function $h(tagName: \"h4\", className?: string): VNode<HTMLHeadingElementProps | null>;\nexport function $h(tagName: \"h5\", className?: string): VNode<HTMLHeadingElementProps | null>;\nexport function $h(tagName: \"h6\", className?: string): VNode<HTMLHeadingElementProps | null>;\nexport function $h(tagName: \"head\", className?: string): VNode<HTMLHeadElementProps | null>;\nexport function $h(tagName: \"header\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"hgroup\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"hr\", className?: string): VNode<HTMLHRElementProps | null>;\nexport function $h(tagName: \"html\", className?: string): VNode<HTMLHtmlElementProps | null>;\nexport function $h(tagName: \"i\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"iframe\", className?: string): VNode<HTMLIFrameElementProps | null>;\nexport function $h(tagName: \"img\", className?: string): VNode<HTMLImageElementProps | null>;\nexport function $h(tagName: \"ins\", className?: string): VNode<HTMLModElementProps | null>;\nexport function $h(tagName: \"isindex\", className?: string): VNode<HTMLUnknownElementProps | null>;\nexport function $h(tagName: \"kbd\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"keygen\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"label\", className?: string): VNode<HTMLLabelElementProps | null>;\nexport function $h(tagName: \"legend\", className?: string): VNode<HTMLLegendElementProps | null>;\nexport function $h(tagName: \"li\", className?: string): VNode<HTMLLIElementProps | null>;\nexport function $h(tagName: \"link\", className?: string): VNode<HTMLLinkElementProps | null>;\nexport function $h(tagName: \"listing\", className?: string): VNode<HTMLPreElementProps | null>;\nexport function $h(tagName: \"map\", className?: string): VNode<HTMLMapElementProps | null>;\nexport function $h(tagName: \"mark\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"marquee\", className?: string): VNode<HTMLMarqueeElementProps | null>;\nexport function $h(tagName: \"menu\", className?: string): VNode<HTMLMenuElementProps | null>;\nexport function $h(tagName: \"meta\", className?: string): VNode<HTMLMetaElementProps | null>;\nexport function $h(tagName: \"meter\", className?: string): VNode<HTMLMeterElementProps | null>;\nexport function $h(tagName: \"nav\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"nextid\", className?: string): VNode<HTMLUnknownElementProps | null>;\nexport function $h(tagName: \"nobr\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"noframes\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"noscript\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"object\", className?: string): VNode<HTMLObjectElementProps | null>;\nexport function $h(tagName: \"ol\", className?: string): VNode<HTMLOListElementProps | null>;\nexport function $h(tagName: \"optgroup\", className?: string): VNode<HTMLOptGroupElementProps | null>;\nexport function $h(tagName: \"option\", className?: string): VNode<HTMLOptionElementProps | null>;\nexport function $h(tagName: \"p\", className?: string): VNode<HTMLParagraphElementProps | null>;\nexport function $h(tagName: \"param\", className?: string): VNode<HTMLParamElementProps | null>;\nexport function $h(tagName: \"picture\", className?: string): VNode<HTMLPictureElementProps | null>;\nexport function $h(tagName: \"plaintext\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"pre\", className?: string): VNode<HTMLPreElementProps | null>;\nexport function $h(tagName: \"progress\", className?: string): VNode<HTMLProgressElementProps | null>;\nexport function $h(tagName: \"q\", className?: string): VNode<HTMLQuoteElementProps | null>;\nexport function $h(tagName: \"rt\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"ruby\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"s\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"samp\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"script\", className?: string): VNode<HTMLScriptElementProps | null>;\nexport function $h(tagName: \"section\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"select\", className?: string): VNode<HTMLSelectElementProps | null>;\nexport function $h(tagName: \"small\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"source\", className?: string): VNode<HTMLSourceElementProps | null>;\nexport function $h(tagName: \"span\", className?: string): VNode<HTMLSpanElementProps | null>;\nexport function $h(tagName: \"strike\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"strong\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"style\", className?: string): VNode<HTMLStyleElementProps | null>;\nexport function $h(tagName: \"sub\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"sup\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"table\", className?: string): VNode<HTMLTableElementProps | null>;\nexport function $h(tagName: \"tbody\", className?: string): VNode<HTMLTableSectionElementProps | null>;\nexport function $h(tagName: \"td\", className?: string): VNode<HTMLTableDataCellElementProps | null>;\nexport function $h(tagName: \"template\", className?: string): VNode<HTMLTemplateElementProps | null>;\nexport function $h(tagName: \"textarea\", className?: string): VNode<HTMLTextAreaElementProps | null>;\nexport function $h(tagName: \"tfoot\", className?: string): VNode<HTMLTableSectionElementProps | null>;\nexport function $h(tagName: \"th\", className?: string): VNode<HTMLTableHeaderCellElementProps | null>;\nexport function $h(tagName: \"thead\", className?: string): VNode<HTMLTableSectionElementProps | null>;\nexport function $h(tagName: \"title\", className?: string): VNode<HTMLTitleElementProps | null>;\nexport function $h(tagName: \"tr\", className?: string): VNode<HTMLTableRowElementProps | null>;\nexport function $h(tagName: \"track\", className?: string): VNode<HTMLTrackElementProps | null>;\nexport function $h(tagName: \"tt\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"u\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"ul\", className?: string): VNode<HTMLUListElementProps | null>;\nexport function $h(tagName: \"var\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"wbr\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"x-ms-webview\", className?: string): VNode<MSHTMLWebViewElementProps | null>;\nexport function $h(tagName: \"xmp\", className?: string): VNode<HTMLPreElementProps | null>;\nexport function $h(tagName: HTMLTagType, className?: string): VNode<HTMLElementProps | null> {\n    return new VNode<HTMLElementProps | null>(\n        VNodeFlags.Element,\n        tagName,\n        null,\n        className === undefined ? null : className,\n        null);\n}\n\n/**\n * Create a VNodeBuilder representing a SVGElement node.\n *\n * @param tagName SVG Element tag name.\n * @param className Class name.\n * @returns VNodeBuilder object.\n */\nexport function $s(tagName: \"circle\", className?: string): VNode<SVGCircleElementProps | null>;\nexport function $s(tagName: \"clippath\", className?: string): VNode<SVGClipPathElementProps | null>;\nexport function $s(tagName: \"defs\", className?: string): VNode<SVGDefsElementProps | null>;\nexport function $s(tagName: \"desc\", className?: string): VNode<SVGDescElementProps | null>;\nexport function $s(tagName: \"ellipse\", className?: string): VNode<SVGEllipseElementProps | null>;\nexport function $s(tagName: \"feblend\", className?: string): VNode<SVGFEBlendElementProps | null>;\nexport function $s(tagName: \"fecolormatrix\", className?: string): VNode<SVGFEColorMatrixElementProps | null>;\nexport function $s(tagName: \"fecomponenttransfer\", className?: string): VNode<SVGFEComponentTransferElementProps | null>;\nexport function $s(tagName: \"fecomposite\", className?: string): VNode<SVGFECompositeElementProps | null>;\nexport function $s(tagName: \"feconvolvematrix\", className?: string): VNode<SVGFEConvolveMatrixElementProps | null>;\nexport function $s(tagName: \"fediffuselighting\", className?: string): VNode<SVGFEDiffuseLightingElementProps | null>;\nexport function $s(tagName: \"fedisplacementmap\", className?: string): VNode<SVGFEDisplacementMapElementProps | null>;\nexport function $s(tagName: \"fedistantlight\", className?: string): VNode<SVGFEDistantLightElementProps | null>;\nexport function $s(tagName: \"feflood\", className?: string): VNode<SVGFEFloodElementProps | null>;\nexport function $s(tagName: \"fefunca\", className?: string): VNode<SVGFEFuncAElementProps | null>;\nexport function $s(tagName: \"fefuncb\", className?: string): VNode<SVGFEFuncBElementProps | null>;\nexport function $s(tagName: \"fefuncg\", className?: string): VNode<SVGFEFuncGElementProps | null>;\nexport function $s(tagName: \"fefuncr\", className?: string): VNode<SVGFEFuncRElementProps | null>;\nexport function $s(tagName: \"fegaussianblur\", className?: string): VNode<SVGFEGaussianBlurElementProps | null>;\nexport function $s(tagName: \"feimage\", className?: string): VNode<SVGFEImageElementProps | null>;\nexport function $s(tagName: \"femerge\", className?: string): VNode<SVGFEMergeElementProps | null>;\nexport function $s(tagName: \"femergenode\", className?: string): VNode<SVGFEMergeNodeElementProps | null>;\nexport function $s(tagName: \"femorphology\", className?: string): VNode<SVGFEMorphologyElementProps | null>;\nexport function $s(tagName: \"feoffset\", className?: string): VNode<SVGFEOffsetElementProps | null>;\nexport function $s(tagName: \"fepointlight\", className?: string): VNode<SVGFEPointLightElementProps | null>;\nexport function $s(tagName: \"fespecularlighting\", className?: string): VNode<SVGFESpecularLightingElementProps | null>;\nexport function $s(tagName: \"fespotlight\", className?: string): VNode<SVGFESpotLightElementProps | null>;\nexport function $s(tagName: \"fetile\", className?: string): VNode<SVGFETileElementProps | null>;\nexport function $s(tagName: \"feturbulence\", className?: string): VNode<SVGFETurbulenceElementProps | null>;\nexport function $s(tagName: \"filter\", className?: string): VNode<SVGFilterElementProps | null>;\nexport function $s(tagName: \"foreignobject\", className?: string): VNode<SVGForeignObjectElementProps | null>;\nexport function $s(tagName: \"g\", className?: string): VNode<SVGGElementProps | null>;\nexport function $s(tagName: \"image\", className?: string): VNode<SVGImageElementProps | null>;\nexport function $s(tagName: \"line\", className?: string): VNode<SVGLineElementProps | null>;\nexport function $s(tagName: \"lineargradient\", className?: string): VNode<SVGLinearGradientElementProps | null>;\nexport function $s(tagName: \"marker\", className?: string): VNode<SVGMarkerElementProps | null>;\nexport function $s(tagName: \"mask\", className?: string): VNode<SVGMaskElementProps | null>;\nexport function $s(tagName: \"metadata\", className?: string): VNode<SVGMetadataElementProps | null>;\nexport function $s(tagName: \"path\", className?: string): VNode<SVGPathElementProps | null>;\nexport function $s(tagName: \"pattern\", className?: string): VNode<SVGPatternElementProps | null>;\nexport function $s(tagName: \"polygon\", className?: string): VNode<SVGPolygonElementProps | null>;\nexport function $s(tagName: \"polyline\", className?: string): VNode<SVGPolylineElementProps | null>;\nexport function $s(tagName: \"radialgradient\", className?: string): VNode<SVGRadialGradientElementProps | null>;\nexport function $s(tagName: \"rect\", className?: string): VNode<SVGRectElementProps | null>;\nexport function $s(tagName: \"stop\", className?: string): VNode<SVGStopElementProps | null>;\nexport function $s(tagName: \"svg\", className?: string): VNode<SVGSVGElementProps | null>;\nexport function $s(tagName: \"switch\", className?: string): VNode<SVGSwitchElementProps | null>;\nexport function $s(tagName: \"symbol\", className?: string): VNode<SVGSymbolElementProps | null>;\nexport function $s(tagName: \"text\", className?: string): VNode<SVGTextElementProps | null>;\nexport function $s(tagName: \"textpath\", className?: string): VNode<SVGTextPathElementProps | null>;\nexport function $s(tagName: \"tspan\", className?: string): VNode<SVGTSpanElementProps | null>;\nexport function $s(tagName: \"use\", className?: string): VNode<SVGUseElementProps | null>;\nexport function $s(tagName: \"view\", className?: string): VNode<SVGViewElementProps | null>;\nexport function $s(tagName: SVGTagType, className?: string): VNode<SVGElementProps | null> {\n    return new VNode<SVGElementProps | null>(\n        VNodeFlags.Element | VNodeFlags.SvgElement,\n        tagName,\n        null,\n        className === undefined ? null : className,\n        null);\n}\n\n/**\n * Create a VNodeBuilder representing an HTMLInputElement node.\n *\n * @param type Input Element type. When type param has value \"textarea\", HTMLTextAreaElement will be created.\n * @param className Class name.\n * @returns VNodeBuilder object.\n */\nexport function $i(type: \"textarea\", className?: string): VNode<HTMLTextAreaElementProps | null>;\nexport function $i(type: \"button\", className?: string): VNode<HTMLInputElementProps | null>;\nexport function $i(type: \"checkbox\", className?: string): VNode<HTMLInputElementProps | null>;\nexport function $i(type: \"color\", className?: string): VNode<HTMLInputElementProps | null>;\nexport function $i(type: \"date\", className?: string): VNode<HTMLInputElementProps | null>;\nexport function $i(type: \"datetime\", className?: string): VNode<HTMLInputElementProps | null>;\nexport function $i(type: \"datetime-local\", className?: string): VNode<HTMLInputElementProps | null>;\nexport function $i(type: \"email\", className?: string): VNode<HTMLInputElementProps | null>;\nexport function $i(type: \"file\", className?: string): VNode<HTMLInputElementProps | null>;\nexport function $i(type: \"hidden\", className?: string): VNode<HTMLInputElementProps | null>;\nexport function $i(type: \"image\", className?: string): VNode<HTMLInputElementProps | null>;\nexport function $i(type: \"month\", className?: string): VNode<HTMLInputElementProps | null>;\nexport function $i(type: \"number\", className?: string): VNode<HTMLInputElementProps | null>;\nexport function $i(type: \"password\", className?: string): VNode<HTMLInputElementProps | null>;\nexport function $i(type: \"radio\", className?: string): VNode<HTMLInputElementProps | null>;\nexport function $i(type: \"range\", className?: string): VNode<HTMLInputElementProps | null>;\nexport function $i(type: \"reset\", className?: string): VNode<HTMLInputElementProps | null>;\nexport function $i(type: \"search\", className?: string): VNode<HTMLInputElementProps | null>;\nexport function $i(type: \"submit\", className?: string): VNode<HTMLInputElementProps | null>;\nexport function $i(type: \"tel\", className?: string): VNode<HTMLInputElementProps | null>;\nexport function $i(type: \"text\", className?: string): VNode<HTMLInputElementProps | null>;\nexport function $i(type: \"time\", className?: string): VNode<HTMLInputElementProps | null>;\nexport function $i(type: \"url\", className?: string): VNode<HTMLInputElementProps | null>;\nexport function $i(type: \"week\", className?: string): VNode<HTMLInputElementProps | null>;\nexport function $i(type: InputType, className?: string): VNode<HTMLInputElementProps | null> {\n    return new VNode<HTMLInputElementProps | null>(\n        type === \"textarea\" ?\n            VNodeFlags.Element | VNodeFlags.InputElement | VNodeFlags.TextAreaElement :\n            VNodeFlags.Element | VNodeFlags.InputElement,\n        type,\n        null,\n        className === undefined ? null : className,\n        null);\n}\n\n/**\n * Create a VNodeBuilder representing an HTMLMediaElement node.\n *\n * @param tagName Media element tag name.\n * @param className Class name.\n * @returns VNodeBuilder object.\n */\nexport function $m(tagName: \"audio\", className?: string): VNode<HTMLAudioElementProps | null>;\nexport function $m(tagName: \"video\", className?: string): VNode<HTMLVideoElementProps | null>;\nexport function $m(tagName: MediaTagType, className?: string): VNode<HTMLMediaElementProps | null> {\n    return new VNode<HTMLMediaElementProps | null>(\n        VNodeFlags.Element | VNodeFlags.MediaElement,\n        tagName,\n        null,\n        className === undefined ? null : className,\n        null);\n}\n/* tslint:enable:max-line-length */\n\n/**\n * Create a VNodeBuilder representing an ElementDescriptor.\n *\n * @param d Element Descriptor.\n * @param className Class name.\n * @returns VNodeBuilder object.\n */\nexport function $e<P>(d: ElementDescriptor<P>, className?: string): VNode<P> {\n    if (__IVI_DEV__) {\n        if (className !== undefined) {\n            if ((d._flags & ElementDescriptorFlags.ProtectClassName) !== 0) {\n                throw new Error(\"Failed to set className, className is protected by an ElementDescriptor.\");\n            }\n        }\n    }\n    return new VNode<P>(\n        d._flags & ElementDescriptorFlags.CopyFlags,\n        d,\n        null,\n        className === undefined ? null : className,\n        null);\n}\n\n/**\n * Create a VNodeBuilder representing a Custom Element (WebComponent).\n *\n * @param d Element Descriptor.\n * @param className Class name.\n * @returns VNodeBuilder object.\n */\nexport function $w(tagName: string, className?: string): VNode<{ [key: string]: any } | null> {\n    if (__IVI_DEV__) {\n        if (!isValidTag(tagName)) {\n            throw new Error(`Invalid tag: ${tagName}`);\n        }\n    }\n    return new VNode<HTMLElementProps | null>(\n        VNodeFlags.Element | VNodeFlags.WebComponent,\n        tagName,\n        null,\n        className === undefined ? null : className,\n        null);\n}\n","import { EventHandler } from \"../events/event_handler\";\nimport { Context } from \"../common/types\";\nimport { CSSStyleProps } from \"../common/dom_props\";\nimport { VNodeFlags } from \"./flags\";\nimport { ComponentClass, ComponentFunction, Component } from \"./component\";\nimport { ElementDescriptor } from \"./element_descriptor\";\nimport { ConnectDescriptor, SelectorData } from \"./connect_descriptor\";\nimport { KeepAliveHandler } from \"./keep_alive\";\n\n/**\n * VNode object is the core object in ivi Virtual DOM, it can represent any node type.\n */\nexport interface IVNode<P = null> {\n    /**\n     * Flags, see `VNodeFlags` for details.\n     */\n    _flags: VNodeFlags;\n    /**\n     * Children property can contain flat array of children virtual nodes, or text if it contains a single text node\n     * child.\n     *\n     * When virtual node represents an input field, children property will contain input value.\n     */\n    _children: IVNode<any>[] | IVNode<any> | string | number | boolean | null | undefined;\n    /**\n     * Tag property contains details about the type of the element.\n     *\n     * Simple elements has a string type values, components can be a simple functions, constructor, or special\n     * descriptors for nodes that change syncing algorithm behavior.\n     */\n    _tag: string | ComponentClass<any> | ComponentFunction<any> | ElementDescriptor<any> |\n    ConnectDescriptor<any, any, any> | KeepAliveHandler | null;\n    /**\n     * Children syncing algorithm is using key property to find the same node in the previous children array. Key\n     * should be unique among its siblings.\n     */\n    _key: any;\n    /**\n     * Properties.\n     */\n    _props: ElementProps<P> | P | null;\n    /**\n     * Reference to HTML node or Component instance. It will be available after virtual node is created or synced. Each\n     * time VNode is synced, reference will be transferred from the old VNode to the new one.\n     */\n    _instance: Node | Component<any> | SelectorData | Context | null;\n    /**\n     * Class name.\n     */\n    _className: string | null;\n}\n\nexport interface ElementProps<P> {\n    /**\n     * Attributes.\n     */\n    attrs: P | null;\n    /**\n     * Style.\n     */\n    style: CSSStyleProps | null;\n    /**\n     * Events.\n     */\n    events: Array<EventHandler | null> | EventHandler | null;\n}\n\n/**\n * Check if VNode is representing a Text node.\n *\n * @param node VNode.\n * @returns true when VNode is representing a Text node.\n */\nexport function isTextNode(node: IVNode<any>): boolean {\n    return (node._flags & VNodeFlags.Text) !== 0;\n}\n\n/**\n * Check if VNode is representing an Element.\n *\n * @param node VNode.\n * @returns true when VNode is representing an element node.\n */\nexport function isElementNode(node: IVNode<any>): boolean {\n    return (node._flags & VNodeFlags.Element) !== 0;\n}\n\n/**\n * Check if VNode is representing an SVG Element.\n *\n * @param node VNode.\n * @returns true when VNode is representing a text node.\n */\nexport function isSVGNode(node: IVNode<any>): boolean {\n    return (node._flags & VNodeFlags.SvgElement) !== 0;\n}\n\n/**\n * Check if VNode is representing a Component.\n *\n * @param node VNode.\n * @returns true when VNode is representing a Component.\n */\nexport function isComponentNode(node: IVNode<any>): boolean {\n    return (node._flags & VNodeFlags.Component) !== 0;\n}\n\n/**\n * Get reference to a DOM node from a VNode object.\n *\n * @param node VNode which contains reference to a DOM node.\n * @returns null if VNode doesn't have a reference to a DOM node.\n */\nexport function getDOMInstanceFromVNode<T extends Node>(node: IVNode<any>): T | null {\n    if ((node._flags & VNodeFlags.Component) !== 0) {\n        return getDOMInstanceFromVNode<T>(node._children as IVNode<any>);\n    }\n    return node._instance as T;\n}\n\n/**\n * Get reference to a Component instance from a VNode object.\n *\n * @param node VNode which contains reference to a Component instance.\n * @returns null if VNode doesn't have a reference to a Component instance.\n */\nexport function getComponentInstanceFromVNode<T extends Component<any>>(node: IVNode<any>): T | null {\n    if (__IVI_DEV__) {\n        if ((node._flags & VNodeFlags.Component) === 0) {\n            throw new Error(\"Failed to get component instance: VNode should represent a Component.\");\n        }\n    }\n    return node._instance as T | null;\n}\n","import { XML_NAMESPACE, XLINK_NAMESPACE } from \"../common/dom\";\nimport { VNodeFlags } from \"./flags\";\nimport { CSSStyleProps } from \"../common/dom_props\";\n\n/**\n * Sync DOM class names.\n *\n * @param node HTML or SVG Element.\n * @param flags VNode flags.\n * @param a Old className.\n * @param b New className.\n */\nexport function syncClassName(node: Element, flags: VNodeFlags, a: string | null, b: string | null): void {\n    if (b === null) {\n        b = \"\";\n    }\n    if ((flags & VNodeFlags.SvgElement) === 0) {\n        node.className = b;\n    } else {\n        node.setAttribute(\"class\", b);\n    }\n}\n\n/**\n * Sync DOM styles.\n *\n * Implementation detail: Syncing algorithm has an optimization with an early detection of object shape changes.\n * Objects with static shape will make syncing algorithm slightly faster because it doesn't need to check which\n * properties didn't existed before, so it is possible to just use the static object shapes, and use `undefined` values\n * when you want to remove property and have the same object shape.\n *\n * @param node HTML or SVG Element.\n * @param a Old styles.\n * @param b New styles.\n */\nexport function syncStyle(\n    node: HTMLElement | SVGElement,\n    a: CSSStyleProps | null,\n    b: CSSStyleProps | null,\n): void {\n    let i: number;\n    let keys: string[];\n    let key: string;\n    let style: CSSStyleDeclaration;\n\n    if (a === null) {\n        if (b !== null) {\n            // a is empty, insert all styles from b.\n            style = node.style;\n            keys = Object.keys(b);\n            for (i = 0; i < keys.length; i++) {\n                key = keys[i];\n                style.setProperty(key, (b as { [key: string]: string })[key]);\n            }\n        }\n    } else if (b === null) {\n        // b is empty, remove all styles from a.\n        style = node.style;\n        keys = Object.keys(a);\n        for (i = 0; i < keys.length; i++) {\n            style.removeProperty(keys[i]);\n        }\n    } else {\n        style = node.style;\n        let matchCount = 0;\n\n        keys = Object.keys(a);\n        for (i = 0; i < keys.length; i++) {\n            key = keys[i];\n            const bValue = (b as { [key: string]: string })[key];\n\n            if (bValue !== undefined) {\n                const aValue = (a as { [key: string]: string })[key];\n                if (aValue !== bValue) {\n                    style.setProperty(key, bValue);\n                }\n                matchCount++;\n            } else {\n                style.removeProperty(key);\n            }\n        }\n\n        keys = Object.keys(b);\n        i = 0;\n        while (matchCount < keys.length && i < keys.length) {\n            key = keys[i++];\n            if (a.hasOwnProperty(key) === false) {\n                style.setProperty(key, (b as { [key: string]: string })[key]);\n                matchCount++;\n            }\n        }\n    }\n}\n\n/**\n * Set DOM property.\n *\n * @param node HTML or SVG Element.\n * @param isSVG node is an SVG Element.\n * @param key Attribute name.\n * @param value Attribute value.\n */\nfunction setDOMProperty(node: Element, flags: VNodeFlags, key: string, value?: any, prevValue?: any): void {\n    if (value === undefined) {\n        /**\n         * Edge cases when property name doesn't match attribute name.\n         */\n        if ((flags & VNodeFlags.SvgElement) === 0) {\n            if (key.length > 6) {\n                switch (key) {\n                    case \"acceptCharset\":\n                        key = \"accept-charset\";\n                        break;\n                    case \"htmlFor\":\n                        key = \"for\";\n                    //     break;\n                    // case \"httpEquiv\": // meta tags aren't supported\n                    //     key = \"http-equiv\";\n                }\n            }\n        }\n        /**\n         * Because there is no generic way to assign a default value for a property when it is removed, it is always\n         * removed with `removeAttribute` method.\n         */\n        node.removeAttribute(key);\n    } else {\n        if ((flags & VNodeFlags.SvgElement) !== 0) {\n            if (key.length > 5) {\n                if (key.charCodeAt(0) === 120 &&\n                    (key.charCodeAt(3) === 58 || key.charCodeAt(5) === 58)) { // 58 === \":\" \"xml:\", \"xlink:\"\n                    if (key.charCodeAt(1) === 109 && key.charCodeAt(2) === 108) { // [109, 108] === \"ml\"\n                        /**\n                         * All attributes that starts with an \"xml:\" prefix will be assigned with XML namespace.\n                         */\n                        node.setAttributeNS(XML_NAMESPACE, key, value);\n                        return;\n                    } else if (key.charCodeAt(1) === 108 &&\n                        key.charCodeAt(2) === 105 &&\n                        key.charCodeAt(3) === 110 &&\n                        key.charCodeAt(4) === 107) { // [108, 105, 110, 107] === \"link\"\n                        /**\n                         * All attributes that starts with an \"xlink:\" prefix will be assigned with XLINK namespace.\n                         */\n                        node.setAttributeNS(XLINK_NAMESPACE, key, value);\n                        return;\n                    }\n                }\n            }\n\n            /**\n             * SVG props should be always assigned with a `setAttribute` call.\n             */\n            node.setAttribute(key, value);\n        } else {\n            if (key.length > 5) {\n                if (key.charCodeAt(4) === 45) { // 45 === \"-\" \"data-\", \"aria-\"\n                    /**\n                     * Attributes that has \"-\" character at the 4th position will be assigned with a `setAttribute`\n                     * method. It should work with \"data-\" and \"aria-\" attributes. Otherwise just use property\n                     * assignment instead of `setAttribute`.\n                     */\n                    node.setAttribute(key, value);\n                    return;\n                }\n            }\n\n            (node as any)[key] = value;\n        }\n    }\n}\n\n/**\n * Sync DOM properties.\n *\n * Implementation detail: Syncing algorithm has an optimization with an early detection of object shape changes.\n * Objects with static shape will make syncing algorithm slightly faster because it doesn't need to check which\n * properties didn't existed before, so it is possible to just use the static object shapes, and use `undefined` values\n * when you want to remove property and have the same object shape.\n *\n * @param node HTML or SVG Element.\n * @param flags VNode flags.\n * @param a Old DOM properties.\n * @param b New DOM properties.\n */\nexport function syncDOMProps(\n    node: Element,\n    flags: VNodeFlags,\n    a: { [key: string]: any } | null,\n    b: { [key: string]: any } | null,\n): void {\n    let i: number;\n    let keys: string[];\n    let key: string;\n\n    if (a === null) {\n        if (b !== null) {\n            // a is empty, insert all attributes from b.\n            keys = Object.keys(b);\n            for (i = 0; i < keys.length; i++) {\n                key = keys[i];\n                setDOMProperty(node, flags, key, b[key]);\n            }\n        }\n    } else if (b === null) {\n        // b is empty, remove all attributes from a.\n        keys = Object.keys(a);\n        for (i = 0; i < keys.length; i++) {\n            setDOMProperty(node, flags, keys[i]);\n        }\n    } else {\n        let matchCount = 0;\n\n        // Remove and update attributes.\n        keys = Object.keys(a);\n        for (i = 0; i < keys.length; i++) {\n            key = keys[i];\n            const bValue = b[key];\n            if (bValue === undefined) {\n                setDOMProperty(node, flags, key);\n            } else {\n                const aValue = a[key];\n                if (aValue !== bValue) {\n                    setDOMProperty(node, flags, key, bValue, aValue);\n                }\n                matchCount++;\n            }\n        }\n\n        // Insert new attributes.\n        keys = Object.keys(b);\n        i = 0;\n        while (matchCount < keys.length && i < keys.length) {\n            key = keys[i++];\n            if (a.hasOwnProperty(key) === false) {\n                setDOMProperty(node, flags, key, b[key]);\n                matchCount++;\n            }\n        }\n    }\n}\n","import { FEATURES, FeatureFlags } from \"../common/feature_detection\";\nimport { NativeEventSourceFlags } from \"./flags\";\nimport { EventHandler } from \"./event_handler\";\n\ndeclare global {\n    interface Element {\n        _ev: Array<EventHandler | null> | EventHandler | null | undefined;\n    }\n}\n\n/**\n * `{ capture: true, passive: true }` object that should be used as a third parameter in `addEventListener`.\n */\nexport const EVENT_CAPTURE_PASSIVE_OPTIONS =\n    ((FEATURES & FeatureFlags.PassiveEvents) !== 0) ?\n        { \"capture\": true, \"passive\": true } :\n        true;\n\n/**\n * `{ passive: true }` object that should be used as a third parameter in `addEventListener`.\n */\nexport const EVENT_PASSIVE_OPTIONS =\n    ((FEATURES & FeatureFlags.PassiveEvents) !== 0) ?\n        { \"passive\": true } :\n        false;\n\n/**\n * Get Event options that should be used when adding Event Listener.\n *\n * #quirks\n *\n * @param flags See `EventDispatcherFlags` for details.\n * @returns Option object that can be used as a 3rd parameter in `addEventListener` call.\n */\nexport function getEventOptions(flags: NativeEventSourceFlags): boolean | { capture?: boolean, passive?: boolean } {\n    if ((flags & NativeEventSourceFlags.Passive) !== 0) {\n        if ((flags & NativeEventSourceFlags.Capture) !== 0) {\n            return EVENT_CAPTURE_PASSIVE_OPTIONS;\n        }\n        return EVENT_PASSIVE_OPTIONS;\n    }\n    if ((flags & NativeEventSourceFlags.Capture) !== 0) {\n        return true;\n    }\n    return false;\n}\n\n/**\n * Property that is used on DOM Nodes to store EventProps object.\n */\nexport const DOM_NODE_EVENTS_PROPERTY = \"_ev\";\n\n/**\n * Set Event Handlers to DOM Node.\n *\n * @param node DOM Node.\n * @param events Event Handlers.\n */\nexport function setEventHandlersToDOMNode(\n    node: Element,\n    events: Array<EventHandler | null> | EventHandler | null,\n): void {\n    node._ev = events;\n}\n\n/**\n * Get Event Handlers from DOM Node.\n *\n * @param node DOM Node.\n * @returns Event Handlers.\n */\nexport function getEventHandlersFromDOMNode(\n    node: Element,\n): Array<EventHandler | null> | EventHandler | undefined | null {\n    return node._ev;\n}\n","import { EventHandler } from \"./event_handler\";\n\n/**\n * Shortcut for Event Handler registration.\n *\n * @param handler Event Handler.\n */\nfunction registerEventHandler(handler: EventHandler<any>): void {\n    handler.source.addListener(handler);\n}\n\n/**\n * Shortcut for Event Handler unregistration.\n *\n * @param handler Event Handler.\n */\nfunction unregisterEventHandler(handler: EventHandler<any>): void {\n    handler.source.removeListener(handler);\n}\n\n/**\n * Sync DOM events.\n *\n * @param element HTML or SVG Element.\n * @param a Old events.\n * @param b New events.\n */\nexport function syncEvents(\n    element: Element,\n    a: Array<EventHandler | null> | EventHandler | null,\n    b: Array<EventHandler | null> | EventHandler | null,\n): void {\n    let i: number;\n    let h1: EventHandler | null;\n    let h2: EventHandler | null;\n\n    if (a === null) {\n        if (b !== null) {\n            attachEvents(b);\n        }\n    } else if (b === null) {\n        detachEvents(a);\n    } else {\n        if (typeof a === \"function\") {\n            attachEvents(b);\n            unregisterEventHandler(a);\n        } else {\n            if (typeof b === \"function\") {\n                registerEventHandler(b);\n\n                for (i = 0; i < a.length; i++) {\n                    h1 = a[i];\n                    if (h1 !== null) {\n                        unregisterEventHandler(h1);\n                    }\n                }\n            } else {\n                i = 0;\n                while (i < a.length && i < b.length) {\n                    h1 = a[i];\n                    h2 = b[i++];\n                    if (h1 !== h2) {\n                        if (h2 !== null) {\n                            registerEventHandler(h2);\n                        }\n                        if (h1 !== null) {\n                            unregisterEventHandler(h1);\n                        }\n                    }\n                }\n                while (i < b.length) {\n                    h1 = b[i++];\n                    if (h1 !== null) {\n                        registerEventHandler(h1);\n                    }\n                }\n                while (i < a.length) {\n                    h1 = a[i++];\n                    if (h1 !== null) {\n                        unregisterEventHandler(h1);\n                    }\n                }\n            }\n        }\n    }\n}\n\n/**\n * Attach Events.\n *\n * @param events Events.\n */\nexport function attachEvents(events: Array<EventHandler | null> | EventHandler): void {\n    if (typeof events === \"function\") {\n        registerEventHandler(events);\n    } else {\n        for (let i = 0; i < events.length; i++) {\n            const h = events[i];\n            if (h !== null) {\n                registerEventHandler(h);\n            }\n        }\n    }\n}\n\n/**\n * Detach Events.\n *\n * @param events Events.\n */\nexport function detachEvents(events: Array<EventHandler | null> | EventHandler): void {\n    if (typeof events === \"function\") {\n        unregisterEventHandler(events);\n    } else {\n        for (let i = 0; i < events.length; i++) {\n            const h = events[i];\n            if (h !== null) {\n                unregisterEventHandler(h);\n            }\n        }\n    }\n}\n","let _autofocusedElement: Element | null = null;\n\nexport function autofocus(element: Element): void {\n    _autofocusedElement = element;\n}\n\nexport function autofocusedElement(): Element | null {\n    const ret = _autofocusedElement;\n    _autofocusedElement = null;\n    return ret;\n}\n","/**\n * DO NOT MOVE THIS FUNCTIONS TO SEPARATE MODULES!\n *\n * There are so many circular dependencies between functions in this module, so just leave it all here instead of\n * creating many circular dependencies between JS modules.\n *\n * Code in this module is working only in browser environments.\n *\n * Tags:\n *\n * #entry - Entry point, function that will be invoked just once when the reconciliation process is started with a root\n *   render, or when scheduler updates invalidated components. Entry point is a good place to inject tryCatch statements\n *   to improve stack trace messages etc.\n * #augment - Function that is used only for augmenting.\n * #component - Component related functions.\n */\n\nimport { Context } from \"../common/types\";\nimport { SVG_NAMESPACE, setInnerHTML } from \"../common/dom\";\nimport { DevModeFlags, DEV_MODE, perfMarkBegin, perfMarkEnd, getFunctionName } from \"../dev_mode/dev_mode\";\nimport {\n    devModeOnError, devModeOnElementBeforeCreate, devModeOnElementCreated, devModeOnComponentCreated,\n    devModeOnComponentAttached, devModeOnComponentDetached,\n} from \"../dev_mode/hooks\";\nimport {\n    setInitialNestingState, pushNestingState, restoreNestingState, checkNestingViolation, nestingStateAncestorFlags,\n    nestingStateParentTagName,\n} from \"../dev_mode/html_nesting_rules\";\nimport {\n    stackTracePushComponent, stackTracePopComponent, stackTraceReset, stackTraceAugment,\n} from \"../dev_mode/stack_trace\";\nimport { VNodeFlags, ComponentFlags, SyncFlags } from \"./flags\";\nimport { IVNode, ElementProps, getDOMInstanceFromVNode } from \"./ivnode\";\nimport { ElementDescriptor } from \"./element_descriptor\";\nimport { ConnectDescriptor, SelectorData } from \"./connect_descriptor\";\nimport { KeepAliveHandler } from \"./keep_alive\";\nimport { ComponentClass, ComponentFunction, Component } from \"./component\";\nimport { syncDOMProps, syncClassName, syncStyle } from \"./sync_dom\";\nimport { setEventHandlersToDOMNode } from \"../events/utils\";\nimport { syncEvents, attachEvents, detachEvents } from \"../events/sync_events\";\nimport { autofocus } from \"../scheduler/autofocus\";\n\n/**\n * Pool of perf mark ids.\n */\nlet perfMarkIds: string[];\nlet perfMarkIndex: number;\n\nif (__IVI_DEV__) {\n    if (DEV_MODE & DevModeFlags.EnableComponentPerformanceProfiling) {\n        perfMarkIds = [];\n        perfMarkIndex = 0;\n    }\n}\n\n/**\n * Begin component perf mark.\n *\n * @param method\n * @param vnode\n */\nfunction componentPerfMarkBegin(method: string, vnode: IVNode<any>): void {\n    if (__IVI_DEV__) {\n        if ((DEV_MODE & DevModeFlags.EnableComponentPerformanceProfiling) !== 0) {\n            let id;\n            if (perfMarkIndex >= perfMarkIds.length) {\n                id = `ivi:` + perfMarkIndex;\n                perfMarkIds.push(id);\n            } else {\n                id = perfMarkIds[perfMarkIndex];\n            }\n            perfMarkIndex++;\n            perfMarkBegin(id);\n        }\n    }\n}\n\n/**\n * End component perf mark.\n *\n * @param method\n * @param vnode\n */\nfunction componentPerfMarkEnd(\n    method: string,\n    vnode: IVNode<any>,\n): void {\n    if (__IVI_DEV__) {\n        if ((DEV_MODE & DevModeFlags.EnableComponentPerformanceProfiling) !== 0) {\n            const flags = vnode._flags;\n            const id = perfMarkIds[--perfMarkIndex];\n            if ((flags & VNodeFlags.ComponentClass) !== 0) {\n                const cls = vnode._tag as ComponentClass<any>;\n                perfMarkEnd(`${method} [C]${getFunctionName(cls)}`, id);\n            } else {\n                if ((flags & (VNodeFlags.Connect | VNodeFlags.UpdateContext | VNodeFlags.KeepAlive)) !== 0) {\n                    if ((flags & VNodeFlags.Connect) !== 0) {\n                        const d = vnode._tag as ConnectDescriptor<any, any, any>;\n                        perfMarkEnd(`${method} [+]${getFunctionName(d.select)}`, id);\n                    } else if ((flags & VNodeFlags.UpdateContext) !== 0) {\n                        perfMarkEnd(`${method} [^]`, id);\n                    } else {\n                        perfMarkEnd(`${method} [K]`, id);\n                    }\n                } else {\n                    const fn = vnode._tag as ComponentFunction<any>;\n                    perfMarkEnd(`${method} [F]${getFunctionName(fn)}`, id);\n                }\n            }\n        }\n    }\n}\n\n/**\n * Render VNode entry point tryCatch wrapper.\n *\n * #entry\n *\n * @param parent Parent DOM Node.\n * @param refChild Reference to the next Node, when it is `null` child will be inserted at the end.\n * @param vnode VNode.\n * @param context Current context.\n * @returns Rendered DOM Node.\n */\nexport function renderVNode(\n    parent: Node,\n    refChild: Node | null,\n    vnode: IVNode<any>,\n    context: Context,\n): Node {\n    if (__IVI_DEV__) {\n        setInitialNestingState(parent as Element);\n\n        try {\n            return _renderVNode(parent, refChild, vnode, context);\n        } catch (e) {\n            stackTraceAugment(e);\n            devModeOnError(e);\n            stackTraceReset();\n            throw e;\n        }\n    }\n    return _renderVNode(parent, refChild, vnode, context);\n}\n\n/**\n * Render VNode entry point. Renders VNode into container and invokes `attached` lifecycle methods after VNode is\n * inserted into container.\n *\n * #entry\n *\n * @param parent Parent DOM Node.\n * @param refChild Reference to the next Node, when it is `null` child will be inserted at the end.\n * @param vnode VNode.\n * @param context Current context.\n * @returns Rendered DOM Node.\n */\nfunction _renderVNode(\n    parent: Node,\n    refChild: Node | null,\n    vnode: IVNode<any>,\n    context: Context,\n): Node {\n    return vNodeRenderIntoAndAttach(parent, refChild, vnode, context, SyncFlags.Attached);\n}\n\n/**\n * Sync VNode entry point tryCatch wrapper.\n *\n * @param parent Parent DOM node.\n * @param a Old VNode.\n * @param b New VNode.\n * @param context Current context.\n * @param syncFlags Sync flags.\n */\nexport function syncVNode(\n    parent: Node,\n    a: IVNode<any>,\n    b: IVNode<any>,\n    context: Context,\n    syncFlags: SyncFlags,\n): void {\n    if (__IVI_DEV__) {\n        setInitialNestingState(parent as Element);\n\n        try {\n            _syncVNode(parent, a, b, context, syncFlags);\n            return;\n        } catch (e) {\n            stackTraceAugment(e);\n            devModeOnError(e);\n            stackTraceReset();\n            throw e;\n        }\n    }\n    _syncVNode(parent, a, b, context, syncFlags);\n}\n\n/**\n * Sync VNode entry point. Sync VNode with a new one or replace when they aren't compatible.\n *\n * #entry\n *\n * @param parent Parent node.\n * @param a Old VNode.\n * @param b New VNode.\n * @param context Current context.\n * @param syncFlags Sync flags.\n */\nfunction _syncVNode(\n    parent: Node,\n    a: IVNode<any>,\n    b: IVNode<any>,\n    context: Context,\n    syncFlags: SyncFlags,\n): void {\n    vNodeSync(parent, a, b, context, syncFlags);\n}\n\n/**\n * Remove VNode entry point tryCatch wrapper.\n *\n * #entry\n *\n * @param parent Parent DOM node.\n * @param node VNode element to remove.\n */\nexport function removeVNode(parent: Node, node: IVNode<any>): void {\n    if (__IVI_DEV__) {\n        try {\n            _removeVNode(parent, node);\n            return;\n        } catch (e) {\n            stackTraceAugment(e);\n            devModeOnError(e);\n            stackTraceReset();\n            throw e;\n        }\n    }\n    _removeVNode(parent, node);\n}\n\n/**\n * Remove VNode entry point.\n *\n * #entry\n *\n * @param parent Parent DOM node.\n * @param node VNode element to remove.\n */\nfunction _removeVNode(parent: Node, node: IVNode<any>): void {\n    parent.removeChild(getDOMInstanceFromVNode(node)!);\n    vNodeDetach(node, SyncFlags.Dispose | SyncFlags.Attached);\n}\n\n/**\n * Augment entry point tryCatch wrapper.\n *\n * #entry\n * #augment\n *\n * @param parent Parent DOM Node.\n * @param node DOM Node.\n * @param vnode Virtual DOM Node.\n * @param context Context.\n */\nexport function augmentVNode(\n    parent: Node,\n    node: Node | null,\n    vnode: IVNode<any>,\n    context: Context,\n): void {\n    if (__IVI_DEV__) {\n        setInitialNestingState(parent as Element);\n\n        try {\n            _augmentVNode(parent, node, vnode, context);\n            return;\n        } catch (e) {\n            stackTraceAugment(e);\n            devModeOnError(e);\n            stackTraceReset();\n            throw e;\n        }\n    }\n    _augmentVNode(parent, node, vnode, context);\n}\n\n/**\n * Augment entry point. Augments DOM tree with a Virtual DOM tree and performs attaching.\n *\n * #entry\n * #augment\n *\n * @param parent Parent DOM Node.\n * @param node DOM Node.\n * @param vnode Virtual DOM Node.\n * @param context Context.\n */\nfunction _augmentVNode(\n    parent: Node,\n    node: Node | null,\n    vnode: IVNode<any>,\n    context: Context,\n): void {\n    vNodeAugment(parent, node, vnode, context);\n    vNodeAttach(vnode);\n}\n\n/**\n * Update Components entry point.\n *\n * #entry\n * #component\n *\n * @param parent Parent DOM Node.\n * @param vnode Virtual DOM Node.\n * @param context Context.\n * @param syncFlags Sync Flags.\n */\nexport function updateComponents(\n    parent: Node,\n    vnode: IVNode<any>,\n    context: Context,\n    syncFlags: SyncFlags,\n): void {\n    if (__IVI_DEV__) {\n        setInitialNestingState(parent as Element);\n\n        try {\n            vNodeUpdateComponents(parent, vnode, context, syncFlags | SyncFlags.DirtyComponent);\n            return;\n        } catch (e) {\n            stackTraceAugment(e);\n            devModeOnError(e);\n            stackTraceReset();\n            throw e;\n        }\n    }\n    vNodeUpdateComponents(parent, vnode, context, syncFlags | SyncFlags.DirtyComponent);\n}\n\n/**\n * Recursively attach all nodes.\n *\n * @param vnode VNode.\n */\nfunction vNodeAttach(vnode: IVNode<any>): void {\n    const flags = vnode._flags;\n\n    if ((flags & VNodeFlags.Element) !== 0) {\n        if ((flags & (VNodeFlags.ChildrenVNode | VNodeFlags.ChildrenArray)) !== 0) {\n            let children = vnode._children;\n            if ((flags & VNodeFlags.ChildrenArray) !== 0) {\n                children = children as IVNode<any>[];\n                for (let i = 0; i < children.length; i++) {\n                    vNodeAttach(children[i]);\n                }\n            } else {\n                vNodeAttach(children as IVNode<any>);\n            }\n        }\n        if ((flags & VNodeFlags.ElementProps) !== 0 &&\n            (vnode._props as ElementProps<any>).events !== null) {\n            attachEvents((vnode._props as ElementProps<any>).events!);\n        }\n    } else if ((flags & VNodeFlags.Component) !== 0) {\n        stackTracePushComponent(vnode);\n        if ((flags & VNodeFlags.ComponentClass) !== 0) {\n            const component = vnode._instance as Component<any>;\n\n            if (__IVI_DEV__) {\n                if ((component.flags & ComponentFlags.Attached) !== 0) {\n                    throw new Error(\"Failed to attach Component: component is already attached.\");\n                }\n            }\n\n            component.flags |= ComponentFlags.Attached;\n            component.attached();\n            devModeOnComponentAttached(component);\n        }\n        vNodeAttach(vnode._children as IVNode<any>);\n        stackTracePopComponent();\n    }\n}\n\n/**\n * Recursively detach all nodes.\n *\n * @param vnode VNode.\n */\nfunction vNodeDetach(vnode: IVNode<any>, syncFlags: SyncFlags): void {\n    const flags = vnode._flags;\n\n    if ((flags & VNodeFlags.Element) !== 0) {\n        if ((flags & (VNodeFlags.ChildrenVNode | VNodeFlags.ChildrenArray)) !== 0) {\n            const children = vnode._children;\n            if ((flags & VNodeFlags.ChildrenArray) !== 0) {\n                vNodeDetachAll(children as IVNode<any>[], syncFlags);\n            } else {\n                vNodeDetach(children as IVNode<any>, syncFlags);\n            }\n        }\n        if ((flags & VNodeFlags.ElementProps) !== 0 &&\n            (vnode._props as ElementProps<any>).events !== null) {\n            detachEvents((vnode._props as ElementProps<any>).events!);\n        }\n    } else if ((flags & VNodeFlags.Component) !== 0) {\n        stackTracePushComponent(vnode);\n        if ((flags & VNodeFlags.KeepAlive) !== 0 &&\n            (syncFlags & SyncFlags.Dispose) !== 0 &&\n            ((vnode._tag as KeepAliveHandler)(vnode._children as IVNode<any>, vnode._props)) !== null) {\n            if ((syncFlags & SyncFlags.Attached) !== 0) {\n                vNodeDetach(vnode._children as IVNode<any>, syncFlags ^ SyncFlags.Dispose);\n            }\n        } else {\n            vNodeDetach(vnode._children as IVNode<any>, syncFlags);\n            if ((flags & VNodeFlags.ComponentClass) !== 0 &&\n                (syncFlags & SyncFlags.Attached) !== 0) {\n                const component = vnode._instance as Component<any>;\n\n                if (__IVI_DEV__) {\n                    if ((component.flags & ComponentFlags.Attached) === 0) {\n                        throw new Error(\"Failed to detach Component: component is already detached.\");\n                    }\n                }\n                component.flags &= ~ComponentFlags.Attached;\n                component.detached();\n                devModeOnComponentDetached(component);\n            }\n        }\n        stackTracePopComponent();\n    }\n}\n\n/**\n * Detach all nodes and its subtrees.\n *\n * @param vnodes Array of VNodes.\n */\nfunction vNodeDetachAll(vnodes: IVNode<any>[], syncFlags: SyncFlags): void {\n    for (let i = 0; i < vnodes.length; i++) {\n        vNodeDetach(vnodes[i], syncFlags);\n    }\n}\n\n/**\n * Recursively update all dirty components.\n *\n * @param parent Parent DOM Node.\n * @param vnode VNode.\n * @param context New context.\n * @param syncFlags Sync flags.\n */\nfunction vNodeUpdateComponents(\n    parent: Node,\n    vnode: IVNode<any>,\n    context: Context,\n    syncFlags: SyncFlags,\n): void {\n    const flags = vnode._flags;\n    if ((flags & (VNodeFlags.ChildrenVNode | VNodeFlags.ChildrenArray | VNodeFlags.Component)) !== 0) {\n        if ((flags & (VNodeFlags.ChildrenVNode | VNodeFlags.ChildrenArray)) !== 0) {\n            const p = vnode._instance as Node;\n            let children = vnode._children;\n            if ((flags & VNodeFlags.ChildrenArray) !== 0) {\n                children = children as IVNode<any>[];\n                for (let i = 0; i < children.length; i++) {\n                    vNodeUpdateComponents(p, children[i], context, syncFlags);\n                }\n            } else {\n                vNodeUpdateComponents(p, children as IVNode<any>, context, syncFlags);\n            }\n        } else {\n            stackTracePushComponent(vnode);\n            if ((flags & VNodeFlags.ComponentClass) !== 0) {\n                const component = vnode._instance as Component<any>;\n\n                const cflags = component.flags;\n                const oldRoot = vnode._children as IVNode<any>;\n\n                if (((cflags & ComponentFlags.Dirty) | (syncFlags & SyncFlags.ForceUpdate)) !== 0) {\n                    componentPerfMarkBegin(\"update\", vnode);\n                    component.beforeUpdate();\n                    const newRoot = vnode._children = component.render();\n                    vNodeSync(parent, oldRoot, newRoot, context, syncFlags);\n                    component.flags &= ~ComponentFlags.Dirty;\n                    component.updated();\n                    componentPerfMarkEnd(\"update\", vnode);\n                } else {\n                    vNodeUpdateComponents(parent, oldRoot, context, syncFlags);\n                }\n            } else { // (flags & VNodeFlags.ComponentFunction)\n                if ((flags & VNodeFlags.Connect) !== 0) {\n                    const connect = vnode._tag as ConnectDescriptor<any, any, any>;\n                    const prevSelectData = vnode._instance as SelectorData;\n                    componentPerfMarkBegin(\"update\", vnode);\n                    const selectData = connect.select(prevSelectData, vnode._props, context);\n                    const prevChildren = vnode._children;\n                    if (prevSelectData === selectData) {\n                        vNodeUpdateComponents(\n                            parent,\n                            prevChildren as IVNode<any>,\n                            context,\n                            syncFlags,\n                        );\n                    } else {\n                        vnode._children = connect.render(selectData.out);\n                        vnode._instance = selectData;\n                        vNodeSync(\n                            parent,\n                            prevChildren as IVNode<any>,\n                            vnode._children as IVNode<any>,\n                            context,\n                            syncFlags,\n                        );\n                    }\n                    componentPerfMarkEnd(\"update\", vnode);\n                } else {\n                    if ((flags & VNodeFlags.UpdateContext) !== 0) {\n                        if ((syncFlags & SyncFlags.DirtyContext) !== 0) {\n                            vnode._instance = Object.assign({}, context, vnode._props);\n                        }\n                        context = vnode._instance as Context;\n                    }\n                    vNodeUpdateComponents(\n                        parent,\n                        vnode._children as IVNode<any>,\n                        context,\n                        syncFlags,\n                    );\n                }\n            }\n            stackTracePopComponent();\n        }\n    }\n}\n\n/**\n * Move node.\n *\n * @param parent Parent DOM node.\n * @param node VNode element to move.\n * @param nextRef Reference to the next node, if it is null, node will be moved to the end.\n */\nfunction vNodeMoveChild(parent: Node, node: IVNode<any>, nextRef: Node | null): void {\n    parent.insertBefore(getDOMInstanceFromVNode(node)!, nextRef!);\n}\n\n/**\n * Remove all children.\n *\n * `detach` lifecycle methods will be invoked for all children and their subtrees.\n *\n * @param parent Parent DOM node.\n * @param nodes Arrays of VNodes to remove.\n */\nfunction vNodeRemoveAllChildren(parent: Node, nodes: IVNode<any>[], syncFlags: SyncFlags): void {\n    parent.textContent = \"\";\n    vNodeDetachAll(nodes, syncFlags | SyncFlags.Dispose);\n}\n\n/**\n * Remove child.\n *\n * `detach` lifecycle methods will be invoked for removed node and its subtree.\n *\n * @param parent Parent DOM node.\n * @param node VNode element to remove.\n */\nfunction vNodeRemoveChild(parent: Node, node: IVNode<any>, syncFlags: SyncFlags): void {\n    parent.removeChild(getDOMInstanceFromVNode(node)!);\n    vNodeDetach(node, syncFlags | SyncFlags.Dispose);\n}\n\n/**\n * Set value for HTMLInputElement.\n *\n * When value has a string type it is assigned to `value` property, otherwise it is assigned to `checked` property.\n *\n * @param input HTMLInputElement.\n * @param value Value.\n */\nfunction setHTMLInputValue(input: HTMLInputElement, value: string | boolean | null): void {\n    if (typeof value === \"string\") {\n        input.value = value;\n    } else {\n        input.checked = value as boolean;\n    }\n}\n\n/**\n * Render VNode.\n *\n * @param parent Parent DOM Node.\n * @param vnode VNode to render.\n * @param context Current context.\n * @returns Rendered DOM Node.\n */\nfunction vNodeRender(\n    parent: Node,\n    vnode: IVNode<any>,\n    context: Context,\n): Node {\n    if (__IVI_DEV__) {\n        if (!(vnode._flags & VNodeFlags.ComponentFunction) && vnode._instance) {\n            throw new Error(\"VNode is already have a reference to an instance. VNodes can't be used mutliple times, \" +\n                \"clone VNode with `cloneVNode`, or use immutable vnodes `vnode.immutable()` for hoisted trees.\");\n        }\n\n        if (vnode._flags & VNodeFlags.Immutable) {\n            throw new Error(\"Immutable VNodes can't be used to render trees, clone an immutable tree with a \" +\n                \"`cloneVNode` function.\");\n        }\n    }\n\n    const flags = vnode._flags;\n    let instance: Node | Component<any> | null = null;\n    let node: Node;\n    let childNode: Node;\n    let i: number;\n    let child: IVNode<any>;\n\n    if ((flags & (VNodeFlags.Text | VNodeFlags.Element)) !== 0) {\n        // Push nesting state and check for nesting violation.\n        const _prevNestingStateParentTagName = nestingStateParentTagName();\n        const _prevNestingStateAncestorFlags = nestingStateAncestorFlags();\n\n        if ((flags & VNodeFlags.Text) !== 0) {\n            pushNestingState(\"$t\");\n            checkNestingViolation();\n            node = document.createTextNode(vnode._children as string);\n        } else { // (flags & VNodeFlags.Element)\n            pushNestingState((flags & VNodeFlags.ElementDescriptor) !== 0 ?\n                (vnode._tag as ElementDescriptor<any>)._tag :\n                vnode._tag as string);\n            checkNestingViolation();\n\n            devModeOnElementBeforeCreate(vnode);\n            if ((flags & (VNodeFlags.ElementDescriptor | VNodeFlags.InputElement | VNodeFlags.SvgElement)) !== 0) {\n                if ((flags & VNodeFlags.ElementDescriptor) !== 0) {\n                    node = (vnode._tag as ElementDescriptor<any>).createElement();\n                } else if ((flags & VNodeFlags.SvgElement) !== 0) {\n                    node = document.createElementNS(SVG_NAMESPACE, vnode._tag as string);\n                } else {\n                    if ((flags & VNodeFlags.TextAreaElement) !== 0) {\n                        node = document.createElement(\"textarea\");\n                    } else {\n                        node = document.createElement(\"input\");\n                        /**\n                         * #quirks\n                         *\n                         * It is important that we assign `type` before any other properties. IE11 will remove assigned\n                         * `value` when `type` is assigned.\n                         */\n                        (node as HTMLInputElement).type = vnode._tag as string;\n                    }\n                }\n            } else {\n                node = document.createElement(vnode._tag as string);\n            }\n            devModeOnElementCreated(vnode, node as Element);\n\n            if ((flags & VNodeFlags.Autofocus) !== 0) {\n                autofocus(node as Element);\n            }\n\n            if (vnode._className !== null) {\n                syncClassName(node as Element, flags, null, vnode._className);\n            }\n\n            if ((flags & VNodeFlags.ElementProps) !== 0) {\n                const props = (vnode._props as ElementProps<any>);\n                if (props.attrs !== null) {\n                    syncDOMProps(node as Element, flags, null, props.attrs);\n                }\n                if (props.style !== null) {\n                    syncStyle(node as HTMLElement, null, props.style);\n                }\n                if (props.events !== null) {\n                    setEventHandlersToDOMNode(node as Element, props.events);\n                }\n            }\n\n            let children = vnode._children;\n            if (children !== null) {\n                if ((flags & (VNodeFlags.ChildrenBasic | VNodeFlags.ChildrenArray)) !== 0) {\n                    if ((flags & VNodeFlags.ChildrenBasic) !== 0) {\n                        node.textContent = children as string;\n                    } else {\n                        children = children as IVNode<any>[];\n                        for (i = 0; i < children.length; i++) {\n                            child = children[i];\n                            childNode = vNodeRender(node, child, context);\n                            node.insertBefore(childNode, null);\n                        }\n                    }\n                } else if ((flags & VNodeFlags.ChildrenVNode) !== 0) {\n                    child = children as IVNode<any>;\n                    childNode = vNodeRender(node, child, context);\n                    node.insertBefore(childNode, null);\n                } else if ((flags & VNodeFlags.InputElement) !== 0) {\n                    /**\n                     * #quirks\n                     *\n                     * It is important that input value is assigned after all properties. It prevents some issues with\n                     * rounding, etc. `value` should be assigned after `step`, `min` and `max` properties.\n                     */\n                    setHTMLInputValue(node as HTMLInputElement, children as string | boolean);\n                } else { // (flags & VNodeFlags.UnsafeHTML)\n                    if (children) {\n                        setInnerHTML((node as Element), children as string, (flags & VNodeFlags.SvgElement) !== 0);\n                    }\n                }\n            }\n        }\n\n        instance = node;\n        restoreNestingState(_prevNestingStateParentTagName, _prevNestingStateAncestorFlags);\n    } else { // (flags & VNodeFlags.Component)\n        if ((flags & VNodeFlags.ComponentClass) !== 0) {\n            const component = instance = new (vnode._tag as ComponentClass<any>)(vnode._props);\n            devModeOnComponentCreated(component);\n            stackTracePushComponent(vnode, instance);\n            componentPerfMarkBegin(\"create\", vnode);\n            const root = vnode._children = component.render();\n            node = vNodeRender(parent, root, context);\n            componentPerfMarkEnd(\"create\", vnode);\n        } else { // (flags & VNodeFlags.ComponentFunction)\n            stackTracePushComponent(vnode);\n            if ((flags & VNodeFlags.KeepAlive) !== 0) {\n                const keepAlive = vnode._tag as KeepAliveHandler;\n                const prev = keepAlive(null, vnode._props);\n                if (prev !== null) {\n                    vNodeSync(\n                        parent,\n                        prev as IVNode<any>,\n                        vnode._children as IVNode<any>,\n                        context,\n                        SyncFlags.DirtyContext,\n                    );\n                    node = getDOMInstanceFromVNode(vnode._children as IVNode<any>)!;\n                } else {\n                    node = vNodeRender(\n                        parent,\n                        vnode._children as IVNode<any>,\n                        context,\n                    );\n                }\n            } else {\n                if ((flags & (VNodeFlags.UpdateContext | VNodeFlags.Connect)) !== 0) {\n                    if ((flags & VNodeFlags.Connect) !== 0) {\n                        const connect = (vnode._tag as ConnectDescriptor<any, any, any>);\n                        const selectData = vnode._instance = connect.select(null, vnode._props, context);\n                        vnode._children = connect.render(selectData.out);\n                    } else {\n                        context = instance = Object.assign({}, context, vnode._props);\n                    }\n                } else {\n                    componentPerfMarkBegin(\"create\", vnode);\n                    vnode._children = (vnode._tag as ComponentFunction<any>)(vnode._props);\n                }\n                node = vNodeRender(\n                    parent,\n                    vnode._children as IVNode<any>,\n                    context,\n                );\n                if (__IVI_DEV__) {\n                    if (!(flags & (VNodeFlags.UpdateContext | VNodeFlags.Connect))) {\n                        componentPerfMarkEnd(\"create\", vnode);\n                    }\n                }\n            }\n        }\n        stackTracePopComponent();\n    }\n\n    vnode._instance = instance;\n\n    return node;\n}\n\n/**\n * Render VNode into container and invoke `attached` lifecycle methods after VNode is inserted into container.\n *\n * It is important that `attached` methods are invoked only after DOM Nodes have been inserted into container, so it\n * goes twice through the entire vnode tree, first time when everything is rendered and the second time when `attached`\n * methods are invoked.\n *\n * @param parent Parent DOM Node.\n * @param refChild Reference to the next Node, when it is `null` child will be inserted at the end.\n * @param vnode VNode.\n * @param context Current context.\n * @returns Rendered DOM Node.\n */\nfunction vNodeRenderIntoAndAttach(\n    parent: Node,\n    refChild: Node | null,\n    vnode: IVNode<any>,\n    context: Context,\n    syncFlags: SyncFlags,\n): Node {\n    const node = vNodeRender(parent, vnode, context);\n    parent.insertBefore(node, refChild);\n    if ((syncFlags & SyncFlags.Attached) !== 0) {\n        vNodeAttach(vnode);\n    }\n    return node;\n}\n\n/**\n * Augment DOM Node with a Virtual DOM Node.\n *\n * #augment\n *\n * @param parent Parent DOM Node.\n * @param node DOM Node.\n * @param vnode Virtual DOM Node.\n * @param context Context.\n */\nfunction vNodeAugment(\n    parent: Node,\n    node: Node | null,\n    vnode: IVNode<any>,\n    context: Context,\n): void {\n    if (__IVI_DEV__) {\n        if (!(vnode._flags & VNodeFlags.ComponentFunction) && vnode._instance) {\n            throw new Error(\"VNode is already have a reference to an instance. VNodes can't be used mutliple times, \" +\n                \"clone VNode with `cloneVNode`, or use immutable vnodes `vnode.immutable()` for hoisted trees.\");\n        }\n\n        if (vnode._flags & VNodeFlags.Immutable) {\n            throw new Error(\"Immutable VNodes can't be used to render trees, clone an immutable tree with a \" +\n                \"`cloneVNode` function.\");\n        }\n    }\n\n    let instance: Node | Component<any> | null = null;\n\n    if (node !== null) {\n        if (node.nodeType !== 8) { // Node.COMMENT_NODE === 8\n            const flags = vnode._flags;\n\n            if ((flags & (VNodeFlags.Element | VNodeFlags.Text)) !== 0) {\n                // Push nesting state and check for nesting violation.\n                const _prevNestingStateParentTagName = nestingStateParentTagName();\n                const _prevNestingStateAncestorFlags = nestingStateAncestorFlags();\n\n                instance = node;\n\n                if ((flags & VNodeFlags.Element) !== 0) {\n                    if (__IVI_DEV__) {\n                        pushNestingState((flags & VNodeFlags.ElementDescriptor) !== 0 ?\n                            (vnode._tag as ElementDescriptor<any>)._tag :\n                            vnode._tag as string);\n                        checkNestingViolation();\n                        if (node.nodeType !== 1) {\n                            throw new Error(`Invalid node type: expected \"1\", actual \"${node.nodeType}\".`);\n                        }\n                        if (vnode._className) {\n                            const className = (node as Element).getAttribute(\"class\");\n                            if (className !== vnode._className) {\n                                throw new Error(`Invalid class name: expected \"${vnode._className}\", ` +\n                                    `actual \"${className}\".`);\n                            }\n                        }\n                        // We can't check any style properties, because browsers ignore style names they don't\n                        // understand, like style names with browser specific prefixes.\n                        if (vnode._children === null) {\n                            if (node.hasChildNodes()) {\n                                throw new Error(`Invalid children: expected \"0\" children, ` +\n                                    `actual \"${node.childNodes.length}\".`);\n                            }\n                        }\n                    }\n\n                    if ((flags & VNodeFlags.ElementProps) !== 0) {\n                        const props = (vnode._props as ElementProps<any>);\n                        if (props.events !== null) {\n                            setEventHandlersToDOMNode(node as Element, props.events);\n                        }\n                    }\n\n                    if ((flags & (VNodeFlags.ChildrenArray | VNodeFlags.ChildrenVNode)) !== 0) {\n                        let domChild = node.firstChild;\n                        if ((flags & VNodeFlags.ChildrenArray) !== 0) {\n                            const children = vnode._children as IVNode<any>[];\n                            for (let i = 0; i < children.length; i++) {\n                                if (__IVI_DEV__) {\n                                    if (domChild === null) {\n                                        throw new Error(`Invalid children: expected to find ${children.length} ` +\n                                            `children nodes.`);\n                                    }\n                                }\n                                const next = domChild!.nextSibling;\n                                vNodeAugment(node, domChild, children[i], context);\n                                domChild = next;\n                            }\n                            if (__IVI_DEV__) {\n                                if (domChild !== null) {\n                                    throw new Error(`Invalid children: document contains more children nodes ` +\n                                        `than expected.`);\n                                }\n                            }\n                        } else {\n                            if (__IVI_DEV__) {\n                                if (domChild === null) {\n                                    throw new Error(`Invalid children: expected to find 1 child node.`);\n                                }\n                                if (domChild.nextSibling !== null) {\n                                    throw new Error(`Invalid children: document contains more children nodes ` +\n                                        `than expected.`);\n                                }\n                            }\n                            vNodeAugment(node, domChild, vnode._children as IVNode<any>, context);\n                        }\n                    }\n                } else { // (flags & VNodeFlags.Text)\n                    const children = typeof vnode._children === \"number\" ?\n                        vnode._children.toString() :\n                        vnode._children as string;\n\n                    if (__IVI_DEV__) {\n                        pushNestingState(\"$t\");\n                        checkNestingViolation();\n\n                        if (node.nodeType !== 3) {\n                            throw new Error(`Invalid node type: expected \"3\", actual \"${node.nodeType}\".`);\n                        }\n                        if (!node.nodeValue!.startsWith(children)) {\n                            throw new Error(`Invalid text content: expected \"${vnode._children}\", actual ` +\n                                `\"${node.nodeValue!.slice(0, children.length)}\".`);\n                        }\n                    }\n\n                    if (node.nodeValue!.length > children.length) {\n                        parent.insertBefore((node as Text).splitText(children.length), node.nextSibling);\n                    }\n\n                }\n\n                restoreNestingState(_prevNestingStateParentTagName, _prevNestingStateAncestorFlags);\n            } else { // (flags & VNodeFlags.Component)\n                if ((flags & VNodeFlags.ComponentClass) !== 0) {\n                    const component = instance = new (vnode._tag as ComponentClass<any>)(vnode._props);\n                    devModeOnComponentCreated(component);\n                    stackTracePushComponent(vnode, instance);\n                    const root = vnode._children = component.render();\n                    if (component.shouldAugment() === true) {\n                        vNodeAugment(parent, node, root, context);\n                    } else {\n                        parent.replaceChild(vNodeRender(parent, root, context), node);\n                    }\n                } else {\n                    stackTracePushComponent(vnode);\n                    if ((flags & (VNodeFlags.UpdateContext | VNodeFlags.Connect | VNodeFlags.KeepAlive)) !== 0) {\n                        if ((flags & VNodeFlags.Connect) !== 0) {\n                            const connect = (vnode._tag as ConnectDescriptor<any, any, any>);\n                            const selectData = vnode._instance = connect.select(null, vnode._props, context);\n                            vnode._children = connect.render(selectData.out);\n                        } else if ((flags & VNodeFlags.UpdateContext) !== 0) {\n                            context = instance = Object.assign({}, context, vnode._props);\n                        }\n                        vNodeAugment(parent, node, vnode._children as IVNode<any>, context);\n                    } else {\n                        const fc = vnode._tag as ComponentFunction<any>;\n                        vnode._children = fc(vnode._props);\n                        if (fc.shouldAugment === undefined ||\n                            fc.shouldAugment(vnode._props) === true) {\n                            vNodeAugment(parent, node, vnode._children as IVNode<any>, context);\n                        } else {\n                            parent.replaceChild(vNodeRender(parent, vnode._children as IVNode<any>, context), node);\n                        }\n                    }\n                }\n\n                stackTracePopComponent();\n            }\n\n            vnode._instance = instance;\n        } else {\n            parent.replaceChild(vNodeRender(parent, vnode, context), node);\n        }\n    } else {\n        parent.insertBefore(vNodeRender(parent, vnode, context), null);\n    }\n}\n\n/**\n * Check if two nodes can be synced.\n *\n * Two nodes can be synced when their flags and tags are identical.\n *\n * @param a Old VNode.\n * @param b New VNode.\n * @returns true if nodes can be synced.\n */\nfunction vNodeCanSync(a: IVNode<any>, b: IVNode<any>): boolean {\n    return (\n        (((a._flags ^ b._flags) & VNodeFlags.Syncable) === 0) &&\n        a._tag === b._tag &&\n        a._key === b._key\n    );\n}\n\n/**\n * Check if two nodes has equal keys.\n *\n * @param a VNode.\n * @param b VNode.\n * @returns true if nodes has equal keys.\n */\nfunction vNodeEqualKeys(a: IVNode<any>, b: IVNode<any>): boolean {\n    return (\n        (a._key === b._key) &&\n        ((a._flags ^ b._flags) & VNodeFlags.Key) === 0\n    );\n}\n\n/**\n * Sync two VNodes.\n *\n * When node `a` is synced with node `b`, `a` node should be considered as destroyed, and any access to it after sync\n * is an undefined behavior.\n *\n * @param parent Parent node.\n * @param a Old VNode.\n * @param b New VNode.\n * @param context Current context.\n * @param syncFlags Sync flags.\n */\nfunction vNodeSync(\n    parent: Node,\n    a: IVNode<any>,\n    b: IVNode<any>,\n    context: Context,\n    syncFlags: SyncFlags,\n): void {\n    if (__IVI_DEV__) {\n        if (b._flags & VNodeFlags.Immutable) {\n            throw new Error(\"Immutable VNodes can't be used to render trees, clone an immutable tree with a \" +\n                \"`cloneVNode` function.\");\n        }\n    }\n\n    if (a === b) {\n        vNodeUpdateComponents(parent, b, context, syncFlags);\n        return;\n    }\n\n    if (__IVI_DEV__) {\n        if (!(b._flags & VNodeFlags.ComponentFunction) && b._instance) {\n            throw new Error(\"VNode is already have a reference to an instance. VNodes can't be used mutliple times, \" +\n                \"clone VNode with `cloneVNode` function.\");\n        }\n    }\n\n    let instance;\n    const bFlags = b._flags;\n    if (vNodeCanSync(a, b)) {\n        instance = b._instance = a._instance;\n\n        if ((bFlags & (VNodeFlags.Text | VNodeFlags.Element)) !== 0) {\n            if ((bFlags & VNodeFlags.Text) !== 0) {\n                if (a._children !== b._children) {\n                    (instance as Text).nodeValue = b._children as string;\n                }\n            } else { // (flags & VNodeFlags.Element)\n                if (a._className !== b._className) {\n                    syncClassName(instance as Element, bFlags, a._className, b._className);\n                }\n\n                const aFlags = a._flags;\n                if (((aFlags | bFlags) & VNodeFlags.ElementProps) !== 0) {\n                    let props;\n                    let aAttrs = null;\n                    let bAttrs = null;\n                    let aStyle = null;\n                    let bStyle = null;\n                    let aEvents = null;\n                    let bEvents = null;\n\n                    if ((aFlags & VNodeFlags.ElementProps) !== 0) {\n                        props = (a._props as ElementProps<any>);\n                        aAttrs = props.attrs;\n                        aStyle = props.style;\n                        aEvents = props.events;\n                    }\n                    if ((bFlags & VNodeFlags.ElementProps) !== 0) {\n                        props = (b._props as ElementProps<any>);\n                        bAttrs = props.attrs;\n                        bStyle = props.style;\n                        bEvents = props.events;\n                    }\n\n                    if (aAttrs !== bAttrs) {\n                        syncDOMProps(instance as Element, bFlags, aAttrs, bAttrs);\n                    }\n                    if (aStyle !== bStyle) {\n                        syncStyle(instance as HTMLElement, aStyle, bStyle);\n                    }\n                    if (aEvents !== bEvents) {\n                        if ((syncFlags & SyncFlags.Attached) !== 0) {\n                            syncEvents(instance as Element, aEvents, bEvents);\n                        }\n                        setEventHandlersToDOMNode(instance as Element, bEvents);\n                    }\n                }\n\n                if (a._children !== b._children) {\n                    syncChildren(\n                        instance as Element,\n                        aFlags,\n                        bFlags,\n                        a._children as IVNode<any>[] | IVNode<any> | string | number | boolean,\n                        b._children as IVNode<any>[] | IVNode<any> | string | number | boolean,\n                        context,\n                        syncFlags,\n                    );\n                }\n            }\n        } else { // (flags & VNodeFlags.Component)\n            stackTracePushComponent(b);\n            if ((bFlags & VNodeFlags.ComponentClass) !== 0) {\n                const component = instance as Component<any>;\n                // Update component props\n                const oldProps = a._props;\n                const newProps = b._props;\n                let propsChanged = 0;\n                if (component.isPropsChanged(oldProps, newProps) === true) {\n                    propsChanged = 1;\n                    // There is no reason to call `newPropsReceived` when props aren't changed, even when they are\n                    // reassigned later to reduce memory usage.\n                    component.newPropsReceived(oldProps, newProps);\n                }\n                // Reassign props even when they aren't changed to reduce overall memory usage.\n                //\n                // New value always stays alive because it is referenced from virtual dom tree, so instead of keeping\n                // in memory two values even when they are the same, we just always reassign it to the new value.\n                component.props = newProps;\n\n                const oldRoot = a._children as IVNode<any>;\n                if ((propsChanged |\n                    (component.flags & ComponentFlags.Dirty) |\n                    (syncFlags & SyncFlags.ForceUpdate)) !== 0) {\n                    componentPerfMarkBegin(\"update\", a);\n                    component.beforeUpdate();\n                    const newRoot = b._children = component.render();\n                    vNodeSync(parent, oldRoot, newRoot, context, syncFlags);\n                    component.flags &= ~ComponentFlags.Dirty;\n                    component.updated();\n                    componentPerfMarkEnd(\"update\", a);\n                } else {\n                    b._children = a._children;\n                    vNodeUpdateComponents(parent, oldRoot, context, syncFlags);\n                }\n            } else { // (flags & VNodeFlags.ComponentFunction)\n                const fn = b._tag as ComponentFunction<any>;\n\n                if ((bFlags & (VNodeFlags.UpdateContext | VNodeFlags.Connect | VNodeFlags.KeepAlive)) !== 0) {\n                    if ((bFlags & VNodeFlags.Connect) !== 0) {\n                        const connect = b._tag as ConnectDescriptor<any, any, any>;\n                        const prevSelectData = a._instance as SelectorData;\n                        componentPerfMarkBegin(\"update\", b);\n                        const selectData = connect.select(prevSelectData, b._props, context);\n                        b._instance = selectData;\n                        if (prevSelectData === selectData) {\n                            b._children = a._children;\n                            vNodeUpdateComponents(\n                                parent,\n                                b,\n                                context,\n                                syncFlags,\n                            );\n                        } else {\n                            b._children = connect.render(selectData.out);\n                            vNodeSync(\n                                parent,\n                                a._children as IVNode<any>,\n                                b._children as IVNode<any>,\n                                context,\n                                syncFlags,\n                            );\n                        }\n                        componentPerfMarkEnd(\"update\", b);\n                    } else {\n                        if ((bFlags & VNodeFlags.UpdateContext) !== 0) {\n                            if ((syncFlags & SyncFlags.DirtyContext) !== 0 ||\n                                (a._props !== b._props)) {\n                                syncFlags |= SyncFlags.DirtyContext;\n                                context = b._instance = Object.assign({}, context, b._props);\n                            } else {\n                                context = b._instance = a._instance as Context;\n                            }\n                        }\n                        vNodeSync(\n                            parent,\n                            a._children as IVNode<any>,\n                            b._children as IVNode<any>,\n                            context,\n                            syncFlags,\n                        );\n                    }\n                } else {\n                    if (((syncFlags & SyncFlags.ForceUpdate) !== 0) ||\n                        ((a !== b) &&\n                            ((fn.isPropsChanged === undefined && a._props !== b._props) ||\n                                (fn.isPropsChanged !== undefined && fn.isPropsChanged(a._props, b._props) === true)))) {\n                        componentPerfMarkBegin(\"update\", b);\n                        const oldRoot = a._children as IVNode<any>;\n                        const newRoot = b._children = fn(b._props);\n                        vNodeSync(parent, oldRoot, newRoot, context, syncFlags);\n                        componentPerfMarkEnd(\"update\", b);\n                    } else {\n                        b._children = a._children;\n                        vNodeUpdateComponents(parent, b._children as IVNode<any>, context, syncFlags);\n                    }\n                }\n            }\n            stackTracePopComponent();\n        }\n    } else {\n        instance = vNodeRender(parent, b, context);\n        parent.replaceChild(instance, getDOMInstanceFromVNode(a)!);\n        if ((syncFlags & SyncFlags.Attached) !== 0) {\n            vNodeDetach(a, syncFlags | SyncFlags.Dispose);\n            vNodeAttach(b);\n        }\n    }\n}\n\n/**\n * Sync old children list with the new one.\n *\n * @param parent Parent node.\n * @param aParentFlags Old parent VNode flags.\n * @param bParentFlags New parent VNode flags.\n * @param a Old VNode list.\n * @param b New VNode list.\n * @param context Current context.\n * @param syncFlags Sync flags.\n */\nfunction syncChildren(\n    parent: Node,\n    aParentFlags: VNodeFlags,\n    bParentFlags: VNodeFlags,\n    a: IVNode<any>[] | IVNode<any> | string | number | boolean,\n    b: IVNode<any>[] | IVNode<any> | string | number | boolean,\n    context: Context,\n    syncFlags: SyncFlags,\n): void {\n    let i = 0;\n    let synced;\n    let node;\n\n    if (a === null) {\n        if ((bParentFlags & (VNodeFlags.ChildrenBasic | VNodeFlags.ChildrenArray)) !== 0) {\n            if ((bParentFlags & VNodeFlags.ChildrenBasic) !== 0) {\n                parent.textContent = b as string;\n            } else {\n                b = b as IVNode<any>[];\n                do {\n                    vNodeRenderIntoAndAttach(parent, null, b[i++], context, syncFlags);\n                } while (i < b.length);\n            }\n        } else if ((bParentFlags & VNodeFlags.ChildrenVNode) !== 0) {\n            vNodeRenderIntoAndAttach(parent, null, b as IVNode<any>, context, syncFlags);\n        } else if ((bParentFlags & VNodeFlags.InputElement) !== 0) {\n            setHTMLInputValue(parent as HTMLInputElement, b as string | boolean);\n        } else { // (bParentFlags & VNodeFlags.UnsafeHTML)\n            if (b) {\n                setInnerHTML(parent as Element, b as string, (bParentFlags & VNodeFlags.SvgElement) !== 0);\n            }\n        }\n    } else if (b === null) {\n        if ((aParentFlags & (VNodeFlags.ChildrenBasic | VNodeFlags.UnsafeHTML)) !== 0) {\n            parent.textContent = \"\";\n        } else if ((aParentFlags & VNodeFlags.ChildrenArray) !== 0) {\n            vNodeRemoveAllChildren(parent, a as IVNode<any>[], syncFlags);\n        } else if ((aParentFlags & VNodeFlags.ChildrenVNode) !== 0) {\n            vNodeRemoveChild(parent, a as IVNode<any>, syncFlags);\n        } else { // (bParentFlags & VNodeFlags.InputElement)\n            /**\n             * When value/checked isn't specified, we should just ignore it.\n             */\n        }\n    } else {\n        if ((aParentFlags & (VNodeFlags.ChildrenBasic | VNodeFlags.UnsafeHTML)) !== 0) {\n            if ((bParentFlags & (VNodeFlags.ChildrenBasic | VNodeFlags.UnsafeHTML)) !== 0) {\n                if ((bParentFlags & VNodeFlags.ChildrenBasic) !== 0) {\n                    const c = parent.firstChild;\n                    if (c !== null) {\n                        c.nodeValue = b as string;\n                    } else {\n                        parent.textContent = b as string;\n                    }\n                } else {\n                    if (b) {\n                        setInnerHTML((parent as Element), b as string, (bParentFlags & VNodeFlags.SvgElement) !== 0);\n                    } else {\n                        parent.textContent = \"\";\n                    }\n                }\n            } else {\n                parent.textContent = \"\";\n                if ((bParentFlags & VNodeFlags.ChildrenArray) !== 0) {\n                    b = b as IVNode<any>[];\n                    do {\n                        vNodeRenderIntoAndAttach(parent, null, b[i++], context, syncFlags);\n                    } while (i < b.length);\n                } else {\n                    vNodeRenderIntoAndAttach(parent, null, b as IVNode<any>, context, syncFlags);\n                }\n            }\n        } else if ((aParentFlags & VNodeFlags.ChildrenArray) !== 0) {\n            a = a as IVNode<any>[];\n            if ((bParentFlags & (VNodeFlags.ChildrenBasic | VNodeFlags.UnsafeHTML)) !== 0) {\n                if ((bParentFlags & VNodeFlags.ChildrenBasic) !== 0 || !b) {\n                    parent.textContent = b as string;\n                } else {\n                    setInnerHTML(parent as Element, b as string, (bParentFlags & VNodeFlags.SvgElement) !== 0);\n                }\n                vNodeDetachAll(a, syncFlags | SyncFlags.Dispose);\n            } else if ((bParentFlags & VNodeFlags.ChildrenArray) !== 0) {\n                syncChildrenTrackByKeys(parent, a, b as IVNode<any>[], context, syncFlags);\n            } else {\n                b = b as IVNode<any>;\n                synced = -1;\n                i = 0;\n                do {\n                    node = a[i];\n                    if (vNodeEqualKeys(node, b)) {\n                        vNodeSync(parent, node, b, context, syncFlags);\n                        synced = i;\n                        break;\n                    }\n                    i++;\n                } while (i < a.length);\n                if (synced > -1) {\n                    for (i = 0; i < synced; i++) {\n                        vNodeRemoveChild(parent, a[i], syncFlags);\n                    }\n                    for (i = synced + 1; i < a.length; i++) {\n                        vNodeRemoveChild(parent, a[i], syncFlags);\n                    }\n                } else {\n                    vNodeRemoveAllChildren(parent, a, syncFlags);\n                    vNodeRenderIntoAndAttach(parent, null, b, context, syncFlags);\n                }\n            }\n        } else if ((aParentFlags & VNodeFlags.ChildrenVNode) !== 0) {\n            a = a as IVNode<any>;\n            if ((bParentFlags & (VNodeFlags.ChildrenBasic | VNodeFlags.UnsafeHTML)) !== 0) {\n                if ((bParentFlags & VNodeFlags.ChildrenBasic) !== 0 || !b) {\n                    parent.textContent = b as string;\n                } else {\n                    setInnerHTML(parent as Element, b as string, (bParentFlags & VNodeFlags.SvgElement) !== 0);\n                }\n                vNodeDetach(a, syncFlags | SyncFlags.Dispose);\n            } else if ((bParentFlags & VNodeFlags.ChildrenArray) !== 0) {\n                b = b as IVNode<any>[];\n                synced = -1;\n                i = 0;\n                do {\n                    node = b[i];\n                    if (vNodeEqualKeys(a, node)) {\n                        vNodeSync(parent, a, node, context, syncFlags);\n                        synced = i;\n                        break;\n                    }\n                    i++;\n                } while (i < b.length);\n                if (synced > -1) {\n                    const next = getDOMInstanceFromVNode(a);\n                    for (i = 0; i < synced; i++) {\n                        vNodeRenderIntoAndAttach(parent, next, b[i], context, syncFlags);\n                    }\n                    for (i = synced + 1; i < b.length; i++) {\n                        vNodeRenderIntoAndAttach(parent, null, b[i], context, syncFlags);\n                    }\n                } else {\n                    vNodeRemoveChild(parent, a, syncFlags);\n                    for (i = 0; i < b.length; i++) {\n                        vNodeRenderIntoAndAttach(parent, null, b[i], context, syncFlags);\n                    }\n                }\n            } else {\n                vNodeSync(parent, a, b as IVNode<any>, context, syncFlags);\n            }\n        } else { // (aParentFlags & VNodeFlags.InputElement)\n            /**\n             * Input elements has an internal state with a `value` property, so it should be checked before an\n             * assignment to prevent unnecessary events when `value` is the same as the `value` in the internal\n             * state.\n             *\n             * In general we don't want to override behaviour of DOM Elements with an internal state. Assigning props\n             * to such elements should be treated as a one-time assignment, so it works almost like `value` attribute,\n             * except when a new value is passed down, it can override previous value when it doesn't match the previous\n             * one. There is absolutely no reasons to overcomplicate such behaviour just to make it more beatiful like\n             * it is a declarative assignment and can't be changed, because in real applications, component that\n             * controls this element will always track changes, and when it changes it will invalidate its\n             * representation, so everything will stay in-sync.\n             */\n            if (typeof b === \"string\") {\n                if ((parent as HTMLInputElement).value !== b) {\n                    (parent as HTMLInputElement).value = b;\n                }\n            } else {\n                (parent as HTMLInputElement).checked = b as boolean;\n            }\n        }\n    }\n}\n\n/**\n * Sync children.\n *\n * This algorithm finds a minimum[1] number of DOM operations. It works in several steps:\n *\n * 1. Find common suffix and prefix, and perform simple moves on the edges.\n *\n * This optimization technique is searching for nodes with identical keys by simultaneously iterating over nodes in the\n * old children list `A` and new children list `B` from both sides:\n *\n *  A: -> [a b c d e f g] <-\n *  B: -> [a b f d c g] <-\n *\n * Here we can skip nodes \"a\" and \"b\" at the begininng, and node \"g\" at the end.\n *\n *  A: -> [c d e f] <-\n *  B: -> [f d c] <-\n *\n * At this position it will try to look at the opposite edge, and if there is a node with the same key at the opposite\n * edge, it will perform simple move operation. Node \"c\" is moved to the right edge, and node \"f\" is moved to the left\n * edge.\n *\n *  A: -> [d e] <-\n *  B: -> [d] <-\n *\n * Now it will try again to find common prefix and suffix, node \"d\" is the same, so we can skip it.\n *\n *  A: [e]\n *  B: []\n *\n * Here it will check if the size of one of the list is equal to zero, and if length of the old children list is zero,\n * it will insert all remaining nodes from the new list, or if length of the new children list is zero, it will remove\n * all remaining nodes from the old list.\n *\n * This simple optimization technique will cover most of the real world use cases, even reversing the children list,\n * except for sorting.\n *\n * When algorithm couldn't find a solution with this simple optimization technique, it will go to the next step of the\n * algorithm. For example:\n *\n *  A: -> [a b c d e f g] <-\n *  B: -> [a c b h f e g] <-\n *\n * Nodes \"a\" and \"g\" at the edges are the same, skipping them.\n *\n *  A: -> [b c d e f] <-\n *  B: -> [c b h f e] <-\n *\n * Here we are stuck, so we need to switch to the next step.\n *\n * 2. Look for removed and inserted nodes, and simultaneously check if one of the nodes is moved.\n *\n * First we create an array `P` with the length of the new children list and assign to each position value `-1`, it has\n * a meaning of a new node that should be inserted. Later we will assign node positions in the old children list to this\n * array.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *  P: [. . . . .] // . == -1\n *\n * Then we need to build an index `I` that maps keys with node positions of the remaining nodes from the new children\n * list.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *  P: [. . . . .] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1,\n *    h: 2,\n *    f: 3,\n *    e: 4,\n *  }\n *  last = 0\n *\n * With this index, we start to iterate over the remaining nodes from the old children list and check if we can find a\n * node with the same key in the index. If we can't find any node, it means that it should be removed, otherwise we\n * assign position of the node in the old children list to the positions array.\n *\n *  A: [b c d e f]\n *      ^\n *  B: [c b h f e]\n *  P: [. 0 . . .] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1, <-\n *    h: 2,\n *    f: 3,\n *    e: 4,\n *  }\n *  last = 1\n *\n * When we assigning positions to the positions array, we also keep a position of the last seen node in the new children\n * list, if the last seen position is larger than current position of the node at the new list, then we are switching\n * `moved` flag to `true`.\n *\n *  A: [b c d e f]\n *        ^\n *  B: [c b h f e]\n *  P: [1 0 . . .] // . == -1\n *  I: {\n *    c: 0, <-\n *    b: 1,\n *    h: 2,\n *    f: 3,\n *    e: 4,\n *  }\n *  last = 1 // last > 0; moved = true\n *\n * The last position `1` is larger than current position of the node at the new list `0`, switching `moved` flag to\n * `true`.\n *\n *  A: [b c d e f]\n *          ^\n *  B: [c b h f e]\n *  P: [1 0 . . .] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1,\n *    h: 2,\n *    f: 3,\n *    e: 4,\n *  }\n *  moved = true\n *\n * Node with key \"d\" doesn't exist in the index, removing node.\n *\n *  A: [b c d e f]\n *            ^\n *  B: [c b h f e]\n *  P: [1 0 . . 3] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1,\n *    h: 2,\n *    f: 3,\n *    e: 4, <-\n *  }\n *  moved = true\n *\n * Assign position for `e`.\n *\n *  A: [b c d e f]\n *              ^\n *  B: [c b h f e]\n *  P: [1 0 . 4 3] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1,\n *    h: 2,\n *    f: 3, <-\n *    e: 4,\n *  }\n *  moved = true\n *\n * Assign position for 'f'.\n *\n * At this point we are checking if `moved` flag is on, or if the length of the old children list minus the number of\n * removed nodes isn't equal to the length of the new children list. If any of this conditions is true, then we are\n * going to the next step.\n *\n * 3. Find minimum number of moves if `moved` flag is on, or insert new nodes if the length is changed.\n *\n * When `moved` flag is on, we need to find the\n * [longest increasing subsequence](http://en.wikipedia.org/wiki/Longest_increasing_subsequence) in the positions array,\n * and move all nodes that doesn't belong to this subsequence.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *  moved = true\n *\n * Now we just need to simultaneously iterate over the new children list and LIS from the end and check if the current\n * position is equal to a value from LIS.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *              ^  // new_pos == 4\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *              ^  // new_pos == 4\n *  moved = true\n *\n * Node \"e\" stays at the same place.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *            ^    // new_pos == 3\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *            ^    // new_pos != 1\n *  moved = true\n *\n * Node \"f\" is moved, move it before the next node \"e\".\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *          ^      // new_pos == 2\n *  P: [1 0 . 4 3] // . == -1\n *          ^      // old_pos == -1\n *  LIS:     [1 4]\n *            ^\n *  moved = true\n *\n * Node \"h\" has a `-1` value in the positions array, insert new node \"h\".\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *        ^        // new_pos == 1\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *            ^    // new_pos == 1\n *  moved = true\n *\n * Node \"b\" stays at the same place.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *      ^          // new_pos == 0\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *          ^      // new_pos != undefined\n *  moved = true\n *\n * Node \"c\" is moved, move it before the next node \"b\".\n *\n * When moved flag is off, we don't need to find LIS, and we just iterate over the new children list and check its\n * current position in the positions array, if it is `-1`, then we insert new node.\n *\n * That is how children reconciliation algorithm is working in one of the fastest virtual dom libraries :)\n *\n * [1] Actually it is almost minimum number of dom ops, when node is removed and another one is inserted at the same\n * place, instead of insert and remove dom ops, we can use one replace op. It will make everything even more\n * complicated, and other use cases will be slower, so I don't think that it is worth to use replace here.\n * Also, there are some rare cases like \"ab\" => \"bc\" that will use more DOM ops that is necessary because of\n * prefix/suffix optimization.\n *\n * @param parent Parent node.\n * @param a Old VNode list.\n * @param b New VNode list.\n * @param context Current context.\n * @param syncFlags Sync flags.\n */\nfunction syncChildrenTrackByKeys(\n    parent: Node,\n    a: IVNode<any>[],\n    b: IVNode<any>[],\n    context: Context,\n    syncFlags: SyncFlags,\n): void {\n    let aStart = 0;\n    let bStart = 0;\n    let aEnd = a.length - 1;\n    let bEnd = b.length - 1;\n    let aStartNode = a[aStart];\n    let bStartNode = b[bStart];\n    let aEndNode = a[aEnd];\n    let bEndNode = b[bEnd];\n    let i: number;\n    let j: number | undefined;\n    let nextPos: number;\n    let next: Node | null;\n    let aNode: IVNode<any> | null;\n    let bNode: IVNode<any>;\n    let node: IVNode<any>;\n\n    // Step 1\n    outer: while (true) {\n        // Sync nodes with the same key at the beginning.\n        while (vNodeEqualKeys(aStartNode, bStartNode)) {\n            vNodeSync(parent, aStartNode, bStartNode, context, syncFlags);\n            aStart++;\n            bStart++;\n            if (aStart > aEnd || bStart > bEnd) {\n                break outer;\n            }\n            aStartNode = a[aStart];\n            bStartNode = b[bStart];\n        }\n\n        // Sync nodes with the same key at the end.\n        while (vNodeEqualKeys(aEndNode, bEndNode)) {\n            vNodeSync(parent, aEndNode, bEndNode, context, syncFlags);\n            aEnd--;\n            bEnd--;\n            if (aStart > aEnd || bStart > bEnd) {\n                break outer;\n            }\n            aEndNode = a[aEnd];\n            bEndNode = b[bEnd];\n        }\n\n        // Move and sync nodes from right to left.\n        if (vNodeEqualKeys(aEndNode, bStartNode)) {\n            vNodeSync(parent, aEndNode, bStartNode, context, syncFlags);\n            vNodeMoveChild(parent, bStartNode, getDOMInstanceFromVNode(aStartNode));\n            aEnd--;\n            bStart++;\n            // There is no need to check when we out of bounds, because the only way we can get here is when there are\n            // more nodes in the lists.\n            //\n            // Impossible transformations:\n            //   [a] => [a b] (common prefix)\n            //   [b a] => [a] (common suffix)\n            //\n            // Possible transformations:\n            //   [b a] => [a b]\n            //   [b a] => [a c]\n\n            aEndNode = a[aEnd];\n            bStartNode = b[bStart];\n            // In a real-world scenarios there is a higher chance that next node after the move will be the same, so we\n            // immediately jump to the start of this prefix/suffix algo.\n            continue;\n        }\n\n        // Move and sync nodes from left to right.\n        if (vNodeEqualKeys(aStartNode, bEndNode)) {\n            vNodeSync(parent, aStartNode, bEndNode, context, syncFlags);\n            nextPos = bEnd + 1;\n            next = nextPos < b.length ? getDOMInstanceFromVNode(b[nextPos]) : null;\n            vNodeMoveChild(parent, bEndNode, next);\n            aStart++;\n            bEnd--;\n            aStartNode = a[aStart];\n            bEndNode = b[bEnd];\n            continue;\n        }\n\n        break;\n    }\n\n    if (aStart > aEnd) {\n        // All nodes from a are synced, insert the rest from b.\n        if (bStart <= bEnd) {\n            nextPos = bEnd + 1;\n            next = nextPos < b.length ? getDOMInstanceFromVNode(b[nextPos]) : null;\n            do {\n                vNodeRenderIntoAndAttach(parent, next, b[bStart++], context, syncFlags);\n            } while (bStart <= bEnd);\n        }\n    } else if (bStart > bEnd) {\n        // All nodes from b are synced, remove the rest from a.\n        do {\n            vNodeRemoveChild(parent, a[aStart++], syncFlags);\n        } while (aStart <= aEnd);\n        // Step 2\n    } else {\n        let aLength = aEnd - aStart + 1;\n        let bLength = bEnd - bStart + 1;\n        // Optimization for use cases when there is just one node left after prefix/suffix step.\n        // TODO: Is it worth enabling it?\n        //\n        // if ((aLength | bLength) === 1) {\n        //     next = vNodeRender(parent, bStartNode, context);\n        //     parent.replaceChild(next, getDOMInstanceFromVNode(aStartNode)!);\n        //     if (syncFlags & SyncFlags.Attached) {\n        //         vNodeDetach(aStartNode, syncFlags | SyncFlags.Dispose);\n        //         vNodeAttach(bStartNode);\n        //     }\n        // }\n        const aNullable = a as Array<IVNode<any> | null>; // will be removed by js optimizing compilers.\n        // Mark all nodes as inserted.\n        const sources = new Array<number>(bLength).fill(-1);\n\n        let moved = false;\n        let pos = 0;\n        let synced = 0;\n\n        // When children lists are small, we are using naive O(N) algorithm to find if child is removed.\n        // TODO: In the future, Map implementations will use similar optimization.\n        if ((bLength <= 4) || ((aLength * bLength) <= 16)) {\n            for (i = aStart; i <= aEnd; i++) {\n                aNode = a[i];\n                if (synced < bLength) {\n                    for (j = bStart; j <= bEnd; j++) {\n                        bNode = b[j];\n                        if (vNodeEqualKeys(aNode, bNode)) {\n                            sources[j - bStart] = i;\n\n                            if (pos > j) {\n                                moved = true;\n                            } else {\n                                pos = j;\n                            }\n                            vNodeSync(parent, aNode, bNode, context, syncFlags);\n                            synced++;\n                            aNullable[i] = null;\n                            break;\n                        }\n                    }\n                }\n            }\n        } else {\n            let keyIndex: Map<any, number> | undefined;\n            let positionKeyIndex: Map<number, number> | undefined;\n\n            for (i = bStart; i <= bEnd; i++) {\n                node = b[i];\n                if ((node._flags & VNodeFlags.Key) !== 0) {\n                    if (keyIndex === undefined) {\n                        keyIndex = new Map<any, number>();\n                    }\n                    keyIndex.set(node._key, i);\n                } else {\n                    if (positionKeyIndex === undefined) {\n                        positionKeyIndex = new Map<number, number>();\n                    }\n                    positionKeyIndex.set(node._key - aStart, i);\n                }\n            }\n\n            for (i = aStart; i <= aEnd; i++) {\n                aNode = a[i];\n\n                if (synced < bLength) {\n                    if ((aNode._flags & VNodeFlags.Key) !== 0) {\n                        j = keyIndex !== undefined ? keyIndex.get(aNode._key) : undefined;\n                    } else {\n                        j = positionKeyIndex !== undefined ? positionKeyIndex.get(aNode._key - aStart) : undefined;\n                    }\n\n                    if (j !== undefined) {\n                        bNode = b[j];\n                        sources[j - bStart] = i;\n                        if (pos > j) {\n                            moved = true;\n                        } else {\n                            pos = j;\n                        }\n                        vNodeSync(parent, aNode, bNode, context, syncFlags);\n                        synced++;\n                        aNullable[i] = null;\n                    }\n                }\n            }\n        }\n\n        if (aLength === a.length && synced === 0) {\n            // Noone is synced, remove all children with one dom op.\n            vNodeRemoveAllChildren(parent, a, syncFlags);\n            while (bStart < bLength) {\n                vNodeRenderIntoAndAttach(parent, null, b[bStart++], context, syncFlags);\n            }\n        } else {\n            i = aLength - synced;\n            while (i > 0) {\n                aNode = aNullable[aStart++];\n                if (aNode !== null) {\n                    vNodeRemoveChild(parent, aNode, syncFlags);\n                    i--;\n                }\n            }\n\n            // Step 3\n            if (moved === true) {\n                const seq = lis(sources);\n                j = seq.length - 1;\n                for (i = bLength - 1; i >= 0; i--) {\n                    if (sources[i] === -1) {\n                        pos = i + bStart;\n                        node = b[pos];\n                        nextPos = pos + 1;\n                        next = nextPos < b.length ? getDOMInstanceFromVNode(b[nextPos]) : null;\n                        vNodeRenderIntoAndAttach(parent, next, node, context, syncFlags);\n                    } else {\n                        if (j < 0 || i !== seq[j]) {\n                            pos = i + bStart;\n                            node = b[pos];\n                            nextPos = pos + 1;\n                            next = nextPos < b.length ? getDOMInstanceFromVNode(b[nextPos]) : null;\n                            vNodeMoveChild(parent, node, next);\n                        } else {\n                            j--;\n                        }\n                    }\n                }\n            } else if (synced !== bLength) {\n                for (i = bLength - 1; i >= 0; i--) {\n                    if (sources[i] === -1) {\n                        pos = i + bStart;\n                        node = b[pos];\n                        nextPos = pos + 1;\n                        next = nextPos < b.length ? getDOMInstanceFromVNode(b[nextPos]) : null;\n                        vNodeRenderIntoAndAttach(parent, next, node, context, syncFlags);\n                    }\n                }\n            }\n        }\n    }\n}\n\n/**\n * Slightly modified Longest Increased Subsequence algorithm, it ignores items that have -1 value, they're representing\n * new items.\n *\n * http://en.wikipedia.org/wiki/Longest_increasing_subsequence\n *\n * @param a Array of numbers.\n * @returns Longest increasing subsequence.\n */\nfunction lis(a: number[]): number[] {\n    const p = a.slice(0);\n    const result: number[] = [];\n    result.push(0);\n    let u: number;\n    let v: number;\n\n    for (let i = 0, il = a.length; i < il; i++) {\n        if (a[i] === -1) {\n            continue;\n        }\n\n        let j = result[result.length - 1];\n        if (a[j] < a[i]) {\n            p[i] = j;\n            result.push(i);\n            continue;\n        }\n\n        u = 0;\n        v = result.length - 1;\n\n        while (u < v) {\n            let c = ((u + v) / 2) | 0;\n            if (a[result[c]] < a[i]) {\n                u = c + 1;\n            } else {\n                v = c;\n            }\n        }\n\n        if (a[i] < a[result[u]]) {\n            if (u > 0) {\n                p[i] = result[u - 1];\n            }\n            result[u] = i;\n        }\n    }\n\n    u = result.length;\n    v = result[u - 1];\n\n    while (u-- > 0) {\n        result[u] = v;\n        v = p[v];\n    }\n\n    return result;\n}\n","import { Context } from \"../common/types\";\nimport { USER_AGENT, UserAgentFlags } from \"../common/user_agent\";\nimport { NOOP } from \"../common/noop\";\nimport { nextFrame, syncFrameUpdate } from \"../scheduler/frame\";\nimport { SyncFlags } from \"./flags\";\nimport { IVNode } from \"./ivnode\";\nimport { VNode } from \"./vnode\";\nimport { $t } from \"./vnode_dom\";\nimport { renderVNode, syncVNode, removeVNode, augmentVNode, updateComponents } from \"./implementation\";\n\n/**\n * Root.\n */\nexport interface Root {\n    container: Element;\n    currentVNode: IVNode<any> | null;\n    newVNode: IVNode<any> | null;\n    invalidated: boolean;\n    syncFlags: SyncFlags;\n}\n\n/**\n * Array of registered root nodes.\n */\nexport const ROOTS = [] as Root[];\n\n/**\n * Empty Context object.\n */\nconst EMPTY_CONTEXT: Context = {};\n\n/**\n * Find Root node in container.\n *\n * @param container DOM Node that contains root node.\n * @returns root node or undefined when root node doesn't exist.\n */\nexport function findRoot(container: Element): Root | undefined {\n    for (let i = 0; i < ROOTS.length; i++) {\n        const r = ROOTS[i];\n        if (r.container === container) {\n            return r;\n        }\n    }\n\n    return;\n}\n\n/**\n * Fix for the Mouse Event bubbling on iOS devices.\n *\n * #quirks\n *\n * http://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\n */\nfunction iOSFixEventBubbling(container: Element): void {\n    if (USER_AGENT & UserAgentFlags.iOS) {\n        (container as HTMLElement).onclick = NOOP;\n    }\n}\n\nlet _pendingUpdate = false;\nlet _globalSyncFlags: SyncFlags = 0;\n\n/**\n * Update root nodes.\n */\nfunction _update() {\n    if (_pendingUpdate) {\n        _pendingUpdate = false;\n        for (let i = 0; i < ROOTS.length; i++) {\n            const root = ROOTS[i];\n            const container = root.container;\n            const currentVNode = root.currentVNode;\n            const syncFlags = _globalSyncFlags | root.syncFlags | SyncFlags.Attached;\n\n            if (root.invalidated) {\n                let newVNode = root.newVNode;\n\n                if (newVNode) {\n                    if (newVNode.constructor !== VNode) {\n                        newVNode = $t(\"\");\n                    }\n                    if (currentVNode) {\n                        syncVNode(container, currentVNode, newVNode, EMPTY_CONTEXT, syncFlags);\n                    } else {\n                        renderVNode(container, null, newVNode!, EMPTY_CONTEXT);\n                        iOSFixEventBubbling(container);\n                    }\n                    root.currentVNode = newVNode;\n                } else if (currentVNode) {\n                    removeVNode(container, currentVNode);\n                    const last = ROOTS.pop();\n                    if (last !== root && ROOTS.length) {\n                        ROOTS[ROOTS.indexOf(root)] = last!;\n                    }\n                }\n\n                root.newVNode = null;\n                root.invalidated = false;\n            } else if (currentVNode) {\n                updateComponents(container, currentVNode, EMPTY_CONTEXT, syncFlags);\n            }\n            root.syncFlags = 0;\n        }\n    }\n}\n\n/**\n * Render VNode into container.\n *\n * @param node VNode to render.\n * @param container DOM Node that will contain rendered node.\n * @param syncFlags Sync Flags.\n */\nexport function render(\n    node: IVNode<any> | null,\n    container: Element,\n    syncFlags: SyncFlags = 0,\n): void {\n    renderNextFrame(node, container, syncFlags);\n    syncFrameUpdate();\n}\n\n/**\n * Render VNode into container on the next frame.\n *\n * @param node VNode to render.\n * @param container DOM Node that will contain rendered node.\n * @param syncFlags Sync Flags.\n */\nexport function renderNextFrame(\n    node: IVNode<any> | null,\n    container: Element,\n    syncFlags: SyncFlags = 0,\n): void {\n    if (__IVI_DEV__) {\n        if (container === document.body) {\n            throw new Error(\"Rendering in the <body> aren't allowed, create an element inside body that will contain \" +\n                \"your application.\");\n        }\n        if (!document.body.contains(container)) {\n            throw new Error(\"Container element should be attached to the document.\");\n        }\n    }\n\n    let root = findRoot(container);\n    if (root) {\n        root.newVNode = node;\n        root.invalidated = true;\n        root.syncFlags = syncFlags;\n    } else {\n        root = {\n            container: container,\n            currentVNode: null,\n            newVNode: node,\n            invalidated: true,\n            syncFlags: syncFlags,\n        };\n        ROOTS.push(root);\n    }\n\n    updateNextFrame();\n}\n\n/**\n * Update dirty components.\n *\n * @param syncFlags Sync Flags.\n */\nexport function update(syncFlags?: SyncFlags) {\n    updateNextFrame(syncFlags);\n    syncFrameUpdate();\n}\n\n/**\n * Update dirty components on the next frame.\n *\n * @param syncFlags Sync Flags.\n */\nexport function updateNextFrame(syncFlags: SyncFlags = 0) {\n    _globalSyncFlags = syncFlags;\n    if (!_pendingUpdate) {\n        _pendingUpdate = true;\n        nextFrame().write(_update);\n    }\n}\n\n/**\n * Augment existing DOM tree with a Virtual DOM tree.\n *\n * Augmentation is separated from `render` function to reduce code size when web application doesn't use augmentation.\n * Optimizing javascript compiler should remove all code associated with augmentation when it isn't used.\n *\n * @param node Root VNode.\n * @param container Container DOM Node.\n */\nexport function augment(\n    node: IVNode<any> | null,\n    container: Element,\n): void {\n    if (__IVI_DEV__) {\n        if (container === document.body) {\n            throw new Error(\"Rendering in the <body> aren't allowed, create an element inside body that will contain \" +\n                \"your application.\");\n        }\n        if (!document.body.contains(container)) {\n            throw new Error(\"Container element should be attached to the document.\");\n        }\n\n        if (findRoot(container)) {\n            throw new Error(\"Failed to augment, container is associated with a Virtual DOM.\");\n        }\n    }\n\n    if (node) {\n        ROOTS.push({\n            container: container,\n            currentVNode: node,\n            newVNode: null,\n            invalidated: false,\n            syncFlags: 0,\n        });\n\n        nextFrame().write(function augment() {\n            augmentVNode(container, container.firstChild!, node, EMPTY_CONTEXT);\n            iOSFixEventBubbling(container);\n        });\n\n        syncFrameUpdate();\n    }\n}\n","\nimport { isVisible, addVisibilityObserver } from \"../common/visibility\";\nimport { update } from \"../vdom/root\";\nimport { FrameTasksGroupFlags, FrameTasksGroup } from \"./frame_tasks_group\";\nimport { executeDOMReaders } from \"./dom_reader\";\nimport { incrementClock } from \"./clock\";\nimport { scheduleMicrotask } from \"./microtask\";\nimport { executeAnimations, shouldRequestNextFrameForAnimations } from \"./animation\";\nimport { autofocusedElement } from \"./autofocus\";\n\nlet _pending = false;\nlet _currentFrameReady = false;\nlet _currentFrame = new FrameTasksGroup();\nlet _nextFrame = new FrameTasksGroup();\nlet _frameStartTime = 0;\n\n_currentFrame._rwLock();\n\nfunction _updateFrameStartTime(time?: number): void {\n    if (__IVI_BROWSER__) {\n        _frameStartTime = (time === undefined ? performance.now() : time) / 1000;\n    } else {\n        _frameStartTime = time === undefined ? Date.now() : time / 1000;\n    }\n}\n\n/**\n * @returns current frame start time.\n */\nexport function frameStartTime(): number {\n    return _frameStartTime;\n}\n\n_updateFrameStartTime();\n\nfunction _requestNextFrame(): void {\n    if (_pending === true) {\n        if (__IVI_BROWSER__) {\n            requestAnimationFrame(handleNextFrame);\n        } else {\n            setImmediate(handleNextFrame);\n        }\n    }\n}\n\n/**\n * Trigger next frame tasks execution.\n */\nexport function requestNextFrame(): void {\n    if (_pending === false) {\n        _pending = true;\n        scheduleMicrotask(_requestNextFrame);\n    }\n}\n\n/**\n * Frame tasks scheduler event handler.\n *\n * @param t Current time.\n */\nfunction handleNextFrame(time?: number): void {\n    _updateFrameStartTime(time);\n\n    let tasks: (() => void)[];\n    let i: number;\n\n    _pending = false;\n    _currentFrameReady = true;\n\n    const frame = _nextFrame;\n    _nextFrame = _currentFrame;\n    _currentFrame = frame;\n\n    _currentFrame._rwUnlock();\n    _nextFrame._rwUnlock();\n\n    executeDOMReaders();\n\n    // Perform read/write batching. Start with executing read DOM tasks, then update components, execute write DOM tasks\n    // and repeat until all read and write tasks are executed.\n    do {\n        while (frame._flags & FrameTasksGroupFlags.Read) {\n            frame._flags &= ~FrameTasksGroupFlags.Read;\n            tasks = frame._readTasks!;\n            frame._readTasks = null;\n\n            for (i = 0; i < tasks.length; i++) {\n                tasks[i]();\n            }\n        }\n\n        while (frame._flags & (FrameTasksGroupFlags.Component | FrameTasksGroupFlags.Write)) {\n            if (frame._flags & FrameTasksGroupFlags.Write) {\n                frame._flags &= ~FrameTasksGroupFlags.Write;\n                tasks = frame._writeTasks!;\n                frame._writeTasks = null;\n                for (i = 0; i < tasks.length; i++) {\n                    tasks[i]();\n                }\n            }\n\n            if (__IVI_BROWSER__) {\n                if (frame._flags & FrameTasksGroupFlags.Component) {\n                    frame._flags &= ~FrameTasksGroupFlags.Component;\n                    update();\n                }\n            }\n        }\n    } while (frame._flags & (\n        FrameTasksGroupFlags.Component |\n        FrameTasksGroupFlags.Write |\n        FrameTasksGroupFlags.Read\n    ));\n\n    _currentFrameReady = false;\n\n    // Lock current frame from adding read and write tasks in debug mode.\n    _currentFrame._rwLock();\n\n    if (isVisible()) {\n        executeAnimations();\n    }\n\n    // Perform tasks that should be executed when all DOM ops are finished.\n    while ((frame._flags & FrameTasksGroupFlags.After) !== 0) {\n        frame._flags &= ~FrameTasksGroupFlags.After;\n\n        tasks = frame._afterTasks!;\n        frame._afterTasks = null;\n        for (i = 0; i < tasks.length; i++) {\n            tasks[i]();\n        }\n    }\n\n    if (__IVI_BROWSER__) {\n        const focus = autofocusedElement();\n        if (focus !== null) {\n            (focus as HTMLElement).focus();\n        }\n    }\n\n    if (shouldRequestNextFrameForAnimations()) {\n        requestNextFrame();\n    }\n\n    incrementClock();\n}\n\n/**\n * Get task list for the next frame.\n *\n * @returns Frame tasks group.\n */\nexport function nextFrame(): FrameTasksGroup {\n    requestNextFrame();\n    return _nextFrame;\n}\n\n/**\n * Get task list for the current frame.\n *\n * @returns Frame tasks group.\n */\nexport function currentFrame(): FrameTasksGroup {\n    if (_currentFrameReady === true) {\n        return _currentFrame;\n    }\n    return nextFrame();\n}\n\n/**\n * Perform a synchronous frame update.\n */\nexport function syncFrameUpdate(): void {\n    handleNextFrame();\n}\n\nfunction handleVisibilityChange(visible: boolean): void {\n    if (visible) {\n        if (shouldRequestNextFrameForAnimations()) {\n            requestNextFrame();\n        }\n    }\n}\n\nif (__IVI_BROWSER__) {\n    addVisibilityObserver(handleVisibilityChange);\n}\n","import { RepeatableTaskList } from \"../common/repeatable_task_list\";\nimport { ComponentFlags } from \"../vdom/flags\";\nimport { Component } from \"../vdom/component\";\nimport { requestNextFrame } from \"./frame\";\n\nconst _animations = new RepeatableTaskList();\nlet _animatedComponents = 0;\n\n/**\n * Add component to the animated list.\n *\n * @param component\n */\nexport function startComponentAnimation(component: Component<any>): void {\n    if (__IVI_BROWSER__) {\n        if (_animatedComponents === 0) {\n            requestNextFrame();\n        }\n        component.flags |= ComponentFlags.Animated;\n        _animatedComponents++;\n    }\n}\n\n/**\n * Remove component from the animated list.\n *\n * @param component\n */\nexport function stopComponentAnimation(component: Component<any>): void {\n    if (__IVI_BROWSER__) {\n        component.flags &= ~ComponentFlags.Animated;\n        _animatedComponents--;\n    }\n}\n\n/**\n * Add animation.\n *\n * @param animation Animation task.\n */\nexport function addAnimation(animation: () => boolean | undefined): void {\n    if (__IVI_BROWSER__) {\n        _animations.add(animation);\n    }\n}\n\n/**\n * Execute animations.\n */\nexport function executeAnimations(): void {\n    if (__IVI_BROWSER__) {\n        _animations.run();\n    }\n}\n\nexport function shouldRequestNextFrameForAnimations(): boolean {\n    if (__IVI_BROWSER__) {\n        return (\n            (_animatedComponents > 0) ||\n            (_animations.tasks.length > 0)\n        );\n    }\n    return false;\n}\n","import { EventHandlerFlags, SyntheticEventFlags } from \"./flags\";\nimport { SyntheticEvent } from \"./synthetic_event\";\nimport { DispatchTarget } from \"./dispatch_target\";\n\n/**\n * Dispatch event to local(on the same DOM Node) Event Handlers.\n *\n * @param target Dispatch Target.\n * @param event Synthetic Event.\n * @param matchFlags Flags that should match to deliver event.\n */\nfunction dispatchEventToLocalEventHandlers(\n    target: DispatchTarget,\n    event: SyntheticEvent,\n    matchFlags: EventHandlerFlags,\n): void {\n    const handlers = target.handlers;\n\n    if (typeof handlers === \"function\") {\n        if ((handlers.flags & matchFlags) !== 0) {\n            handlers(event);\n        }\n    } else {\n        for (let j = 0; j < handlers.length; j++) {\n            const handler = handlers[j];\n            if ((handler.flags & matchFlags) !== 0) {\n                handler(event);\n            }\n        }\n    }\n}\n\n/**\n * Dispatch event to Dispatch Targets.\n *\n * Simplified version of w3 Events flow algorithm. This algorithm doesn't include target phase, only capture and\n * bubbling phases. We don't care too much about w3 events compatibility, and there aren't any use cases that require\n * target phase.\n *\n * https://www.w3.org/TR/DOM-Level-3-Events/#event-flow\n *\n * @param targets Dispatch Targets.\n * @param event Event to dispatch.\n */\nexport function dispatchEvent(\n    targets: DispatchTarget[],\n    event: SyntheticEvent,\n    bubble: boolean,\n): void {\n    let i = targets.length - 1;\n    let target;\n\n    // capture phase\n    while (i >= 0) {\n        target = targets[i--];\n        dispatchEventToLocalEventHandlers(target, event, EventHandlerFlags.Capture);\n        if ((event.flags & SyntheticEventFlags.StoppedPropagation) !== 0) {\n            return;\n        }\n    }\n\n    // bubble phase\n    if (bubble === true) {\n        i = 0;\n        event.flags |= SyntheticEventFlags.BubblePhase;\n        while (i < targets.length) {\n            dispatchEventToLocalEventHandlers(targets[i++], event, EventHandlerFlags.Bubble);\n            if ((event.flags & SyntheticEventFlags.StoppedPropagation) !== 0) {\n                return;\n            }\n        }\n    }\n}\n","import { getEventCharCode, getEventKey } from \"../common/dom\";\nimport { DEV_MODE, DevModeFlags, printWarnOnce } from \"../dev_mode/dev_mode\";\nimport { SyntheticEventFlags } from \"./flags\";\nimport { EventSource } from \"./event_source\";\n\n/**\n * Synthetic Event.\n */\nexport class SyntheticEvent {\n    readonly source: EventSource;\n    flags: SyntheticEventFlags;\n    readonly target: any;\n    readonly timestamp: number;\n\n    constructor(\n        source: EventSource,\n        flags: SyntheticEventFlags,\n        target: any,\n        timestamp: number,\n    ) {\n        this.source = source;\n        this.flags = flags;\n        this.target = target;\n        this.timestamp = timestamp;\n    }\n\n    stopPropagation() {\n        this.flags |= SyntheticEventFlags.StoppedPropagation;\n    }\n\n    preventDefault() {\n        this.flags |= SyntheticEventFlags.PreventedDefault;\n    }\n}\n\nexport class SyntheticNativeEvent<D extends Event> extends SyntheticEvent {\n    native: D;\n\n    constructor(\n        source: EventSource,\n        flags: SyntheticEventFlags,\n        target: EventTarget,\n        timestamp: number,\n        native: D,\n    ) {\n        super(source, flags, target, timestamp);\n        this.native = native;\n    }\n}\n\nexport interface SyntheticNativeEventClass<D, E extends SyntheticNativeEvent<any>> {\n    new (\n        source: EventSource,\n        flags: SyntheticEventFlags,\n        target: EventTarget,\n        timestamp: number,\n        native: D,\n    ): E;\n}\n\nexport class SyntheticUIEvent<T extends UIEvent> extends SyntheticNativeEvent<T> {\n    get detail() {\n        return this.native.detail;\n    }\n\n    get view() {\n        return this.native.view;\n    }\n}\n\nexport class SyntheticKeyboardEvent extends SyntheticUIEvent<KeyboardEvent> {\n    get altKey(): boolean {\n        return this.native.altKey;\n    }\n\n    get char(): string | null {\n        return this.native.char;\n    }\n\n    get charCode(): number {\n        /**\n         * #quirks\n         */\n        if (this.native.type === \"keypress\") {\n            return getEventCharCode(this.native);\n        }\n        return 0;\n    }\n\n    get ctrlKey(): boolean {\n        return this.native.ctrlKey;\n    }\n\n    get key(): string {\n        /**\n         * #quirks\n         */\n        return getEventKey(this.native);\n    }\n\n    get keyCode(): number {\n        /**\n         * #quirks\n         */\n        switch (this.native.type) {\n            case \"keydown\":\n            case \"keyup\":\n                return this.native.keyCode;\n        }\n\n        return 0;\n    }\n\n    get locale(): string {\n        return this.native.locale;\n    }\n\n    get location(): number {\n        return this.native.location;\n    }\n\n    get metaKey(): boolean {\n        return this.native.metaKey;\n    }\n\n    get repeat(): boolean {\n        return this.native.repeat;\n    }\n\n    get shiftKey(): boolean {\n        return this.native.shiftKey;\n    }\n\n    get which(): number {\n        /**\n         * #quirks\n         */\n        switch (this.native.type) {\n            case \"keypress\":\n                return getEventCharCode(this.native);\n            case \"keydown\":\n            case \"keyup\":\n                return this.native.keyCode;\n        }\n\n        return 0;\n    }\n\n    get code(): string {\n        /**\n         * #quirks\n         */\n        if (__IVI_DEV__) {\n            if ((DEV_MODE & DevModeFlags.DisableWarningsForUnsupportedFeatures) === 0) {\n                printWarnOnce(\"events.KeyboardEvent.code\",\n                    \"KeyboardEvent 'code' property doesn't work in many major browsers, and there is no easy \" +\n                    \"way to polyfill this property on browsers that doesn't support it.\");\n            }\n        }\n        return this.native.code;\n    }\n\n    getModifierState(keyArg: string): boolean {\n        return this.native.getModifierState(keyArg);\n    }\n}\n\nexport class SyntheticMouseEvent<T extends MouseEvent> extends SyntheticUIEvent<T> {\n    get altKey(): boolean {\n        return this.native.altKey;\n    }\n\n    get button(): number {\n        return this.native.button;\n    }\n\n    get buttons(): number {\n        /**\n         * #quirks\n         *\n         * Doesn't work in Safari.\n         */\n        if (__IVI_DEV__) {\n            if ((DEV_MODE & DevModeFlags.DisableWarningsForUnsupportedFeatures) === 0) {\n                printWarnOnce(\"events.MouseEvent.buttons\",\n                    \"MouseEvent 'buttons' property doesn't work on Safari, and there is no easy way to \" +\n                    \"polyfill this property on browsers that doesn't support it. Almost all use cases should be \" +\n                    \"solved with a 'button' property.\");\n            }\n        }\n        return this.native.buttons;\n    }\n\n    get clientX(): number {\n        return this.native.clientX;\n    }\n\n    get clientY(): number {\n        return this.native.clientY;\n    }\n\n    get ctrlKey(): boolean {\n        return this.native.ctrlKey;\n    }\n\n    get fromElement(): Element {\n        return this.native.fromElement;\n    }\n\n    get layerX(): number {\n        return this.native.layerX;\n    }\n\n    get layerY(): number {\n        return this.native.layerY;\n    }\n\n    get metaKey(): boolean {\n        return this.native.metaKey;\n    }\n\n    get movementX(): number {\n        return this.native.movementX;\n    }\n\n    get movementY(): number {\n        return this.native.movementY;\n    }\n\n    get offsetX(): number {\n        return this.native.offsetX;\n    }\n\n    get offsetY(): number {\n        return this.native.offsetY;\n    }\n\n    get pageX(): number {\n        return this.native.pageX;\n    }\n\n    get pageY(): number {\n        return this.native.pageY;\n    }\n\n    get relatedTarget(): EventTarget {\n        return this.native.relatedTarget;\n    }\n\n    get screenX(): number {\n        return this.native.screenX;\n    }\n\n    get screenY(): number {\n        return this.native.screenY;\n    }\n\n    get shiftKey(): boolean {\n        return this.native.shiftKey;\n    }\n\n    get toElement(): Element {\n        return this.native.toElement;\n    }\n\n    get which(): number {\n        return this.native.which;\n    }\n\n    get x(): number {\n        return this.native.x;\n    }\n\n    get y(): number {\n        return this.native.y;\n    }\n\n    getModifierState(keyArg: string): boolean {\n        return this.native.getModifierState(keyArg);\n    }\n}\n\nexport class SyntheticTouchEvent extends SyntheticUIEvent<TouchEvent> {\n    get altKey(): boolean {\n        return this.native.altKey;\n    }\n\n    get charCode(): number {\n        return this.native.charCode;\n    }\n\n    get changedTouches(): TouchList {\n        return this.native.changedTouches;\n    }\n\n    get ctrlKey(): boolean {\n        return this.native.ctrlKey;\n    }\n\n    get keyCode(): number {\n        return this.native.keyCode;\n    }\n\n    get metaKey(): boolean {\n        return this.native.metaKey;\n    }\n\n    get shiftKey(): boolean {\n        return this.native.shiftKey;\n    }\n\n    get targetTouches(): TouchList {\n        return this.native.targetTouches;\n    }\n\n    get touches(): TouchList {\n        return this.native.touches;\n    }\n\n    get which(): number {\n        return this.native.which;\n    }\n}\n\nexport class SyntheticPointerEvent extends SyntheticMouseEvent<PointerEvent> {\n    get currentPoint(): any {\n        return this.native.currentPoint;\n    }\n\n    get height(): number {\n        return this.native.height;\n    }\n\n    get hwTimestamp(): number {\n        return this.native.hwTimestamp;\n    }\n\n    get intermediatePoints(): any {\n        return this.native.intermediatePoints;\n    }\n\n    get isPrimary(): boolean {\n        return this.native.isPrimary;\n    }\n\n    get pointerId(): number {\n        return this.native.pointerId;\n    }\n\n    get pointerType(): any {\n        return this.native.pointerType;\n    }\n\n    get pressure(): number {\n        return this.native.pressure;\n    }\n\n    get rotation(): number {\n        return this.native.rotation;\n    }\n\n    get tiltX(): number {\n        return this.native.tiltX;\n    }\n\n    get tiltY(): number {\n        return this.native.tiltY;\n    }\n\n    get width(): number {\n        return this.native.width;\n    }\n\n    getCurrentPoint(element: Element): void {\n        return this.native.getCurrentPoint(element);\n    }\n\n    getIntermediatePoints(element: Element): void {\n        return this.native.getIntermediatePoints(element);\n    }\n}\n\nexport class SyntheticDragEvent extends SyntheticMouseEvent<DragEvent> {\n    get dataTransfer(): DataTransfer {\n        return this.native.dataTransfer;\n    }\n}\n\nexport class SyntheticWheelEvent extends SyntheticMouseEvent<WheelEvent> {\n    get deltaMode(): number {\n        return this.native.deltaMode;\n    }\n\n    get deltaX(): number {\n        return this.native.deltaX;\n    }\n\n    get deltaY(): number {\n        return this.native.deltaY;\n    }\n\n    get deltaZ(): number {\n        return this.native.deltaZ;\n    }\n}\n\nexport class SyntheticFocusEvent extends SyntheticUIEvent<FocusEvent> {\n    get relatedTarget(): EventTarget {\n        return this.native.relatedTarget;\n    }\n}\n\nexport class SyntheticClipboardEvent extends SyntheticNativeEvent<ClipboardEvent> {\n    get clipboardData(): DataTransfer {\n        return this.native.clipboardData;\n    }\n}\n\nexport class SyntheticErrorEvent extends SyntheticNativeEvent<ErrorEvent> {\n    get colno(): number {\n        return this.native.colno;\n    }\n\n    get error(): any {\n        return this.native.error;\n    }\n\n    get filename(): string {\n        return this.native.filename;\n    }\n\n    get lineno(): number {\n        return this.native.lineno;\n    }\n\n    get message(): string {\n        return this.native.message;\n    }\n}\n\nexport class SyntheticMediaEncryptedEvent extends SyntheticNativeEvent<MediaEncryptedEvent> {\n    get initData(): ArrayBuffer | null {\n        return this.native.initData;\n    }\n\n    get initDataType(): string {\n        return this.native.initDataType;\n    }\n}\n\nexport class SyntheticMediaStreamErrorEvent extends SyntheticNativeEvent<MediaStreamErrorEvent> {\n    get error(): MediaStreamError | null {\n        return this.native.error;\n    }\n}\n\nexport class SyntheticProgressEvent extends SyntheticNativeEvent<ProgressEvent> {\n    get lengthComputable(): boolean {\n        return this.native.lengthComputable;\n    }\n\n    get loaded(): number {\n        return this.native.loaded;\n    }\n\n    get total(): number {\n        return this.native.total;\n    }\n}\n","/**\n * Event Handlers.\n *\n * Optimizing compilers should inline all this functions and completely remove unused code.\n */\n\nimport { EventHandlerFlags, NativeEventSourceFlags } from \"./flags\";\nimport { EventHandler } from \"./event_handler\";\nimport { EventSource } from \"./event_source\";\nimport { NativeEventSource } from \"./native_event_source\";\nimport {\n    SyntheticNativeEvent, SyntheticUIEvent, SyntheticDragEvent, SyntheticErrorEvent,\n    SyntheticKeyboardEvent, SyntheticFocusEvent, SyntheticMediaEncryptedEvent, SyntheticMediaStreamErrorEvent,\n    SyntheticMouseEvent, SyntheticClipboardEvent, SyntheticPointerEvent, SyntheticTouchEvent, SyntheticWheelEvent,\n    SyntheticProgressEvent, SyntheticNativeEventClass,\n} from \"./synthetic_event\";\n\n/**\n * Helper function that creates Event Handler objects.\n *\n * @param dispatcher Dispatcher instance.\n * @param fn Event Handler function.\n * @param options Event Options. Value with a boolean type indicates that events of this type should use capture mode\n *   and it will be dispatched to the registered listener before being dispatched to any EventTarget beneath it in the\n *   DOM tree.\n * @returns EventHandler object.\n */\nexport function createEventHandler<E extends SyntheticNativeEvent<any>>(\n    source: EventSource,\n    fn: (ev: E) => void,\n    capture?: boolean,\n): EventHandler<E> {\n    const handler = fn as EventHandler<E>;\n    handler.source = source;\n    handler.flags = capture === true ? EventHandlerFlags.Capture : EventHandlerFlags.Bubble;\n    return handler;\n}\n\nexport interface NativeEventSourceList {\n    abort: NativeEventSource<SyntheticNativeEventClass<UIEvent, SyntheticUIEvent<UIEvent>>>;\n    activate: NativeEventSource<SyntheticNativeEventClass<UIEvent, SyntheticUIEvent<UIEvent>>>;\n    ariarequest: NativeEventSource<SyntheticNativeEventClass<Event, SyntheticUIEvent<UIEvent>>>;\n    beforeactivate: NativeEventSource<SyntheticNativeEventClass<UIEvent, SyntheticUIEvent<UIEvent>>>;\n    beforecopy: NativeEventSource<SyntheticNativeEventClass<ClipboardEvent, SyntheticClipboardEvent>>;\n    beforecut: NativeEventSource<SyntheticNativeEventClass<ClipboardEvent, SyntheticClipboardEvent>>;\n    beforedeactivate: NativeEventSource<SyntheticNativeEventClass<UIEvent, SyntheticUIEvent<UIEvent>>>;\n    beforepaste: NativeEventSource<SyntheticNativeEventClass<ClipboardEvent, SyntheticClipboardEvent>>;\n    blur: NativeEventSource<SyntheticNativeEventClass<FocusEvent, SyntheticFocusEvent>>;\n    canplay: NativeEventSource<SyntheticNativeEventClass<Event, SyntheticNativeEvent<Event>>>;\n    canplaythrough: NativeEventSource<SyntheticNativeEventClass<Event, SyntheticNativeEvent<Event>>>;\n    change: NativeEventSource<SyntheticNativeEventClass<Event, SyntheticNativeEvent<Event>>>;\n    click: NativeEventSource<SyntheticNativeEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>;\n    contextmenu: NativeEventSource<SyntheticNativeEventClass<PointerEvent, SyntheticPointerEvent>>;\n    copy: NativeEventSource<SyntheticNativeEventClass<ClipboardEvent, SyntheticClipboardEvent>>;\n    cuechange: NativeEventSource<SyntheticNativeEventClass<Event, SyntheticNativeEvent<Event>>>;\n    cut: NativeEventSource<SyntheticNativeEventClass<ClipboardEvent, SyntheticClipboardEvent>>;\n    dblclick: NativeEventSource<SyntheticNativeEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>;\n    deactivate: NativeEventSource<SyntheticNativeEventClass<UIEvent, SyntheticUIEvent<UIEvent>>>;\n    drag: NativeEventSource<SyntheticNativeEventClass<DragEvent, SyntheticDragEvent>>;\n    dragend: NativeEventSource<SyntheticNativeEventClass<DragEvent, SyntheticDragEvent>>;\n    dragenter: NativeEventSource<SyntheticNativeEventClass<DragEvent, SyntheticDragEvent>>;\n    dragleave: NativeEventSource<SyntheticNativeEventClass<DragEvent, SyntheticDragEvent>>;\n    dragover: NativeEventSource<SyntheticNativeEventClass<DragEvent, SyntheticDragEvent>>;\n    dragstart: NativeEventSource<SyntheticNativeEventClass<DragEvent, SyntheticDragEvent>>;\n    drop: NativeEventSource<SyntheticNativeEventClass<DragEvent, SyntheticDragEvent>>;\n    durationchange: NativeEventSource<SyntheticNativeEventClass<Event, SyntheticNativeEvent<Event>>>;\n    emptied: NativeEventSource<SyntheticNativeEventClass<Event, SyntheticNativeEvent<Event>>>;\n    encrypted: NativeEventSource<SyntheticNativeEventClass<MediaEncryptedEvent, SyntheticMediaEncryptedEvent>>;\n    ended: NativeEventSource<SyntheticNativeEventClass<MediaStreamErrorEvent, SyntheticMediaStreamErrorEvent>>;\n    error: NativeEventSource<SyntheticNativeEventClass<ErrorEvent, SyntheticErrorEvent>>;\n    focus: NativeEventSource<SyntheticNativeEventClass<FocusEvent, SyntheticFocusEvent>>;\n    gotpointercapture: NativeEventSource<SyntheticNativeEventClass<PointerEvent, SyntheticPointerEvent>>;\n    input: NativeEventSource<SyntheticNativeEventClass<Event, SyntheticNativeEvent<Event>>>;\n    invalid: NativeEventSource<SyntheticNativeEventClass<Event, SyntheticNativeEvent<Event>>>;\n    keydown: NativeEventSource<SyntheticNativeEventClass<KeyboardEvent, SyntheticKeyboardEvent>>;\n    keypress: NativeEventSource<SyntheticNativeEventClass<KeyboardEvent, SyntheticKeyboardEvent>>;\n    keyup: NativeEventSource<SyntheticNativeEventClass<KeyboardEvent, SyntheticKeyboardEvent>>;\n    load: NativeEventSource<SyntheticNativeEventClass<Event, SyntheticNativeEvent<Event>>>;\n    loadeddata: NativeEventSource<SyntheticNativeEventClass<Event, SyntheticNativeEvent<Event>>>;\n    loadedmetadata: NativeEventSource<SyntheticNativeEventClass<Event, SyntheticNativeEvent<Event>>>;\n    loadstart: NativeEventSource<SyntheticNativeEventClass<Event, SyntheticNativeEvent<Event>>>;\n    lostpointercapture: NativeEventSource<SyntheticNativeEventClass<PointerEvent, SyntheticPointerEvent>>;\n    mousedown: NativeEventSource<SyntheticNativeEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>;\n    mouseenter: NativeEventSource<SyntheticNativeEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>;\n    mouseleave: NativeEventSource<SyntheticNativeEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>;\n    mousemove: NativeEventSource<SyntheticNativeEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>;\n    mouseout: NativeEventSource<SyntheticNativeEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>;\n    mouseover: NativeEventSource<SyntheticNativeEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>;\n    mouseup: NativeEventSource<SyntheticNativeEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>;\n    paste: NativeEventSource<SyntheticNativeEventClass<ClipboardEvent, SyntheticClipboardEvent>>;\n    pause: NativeEventSource<SyntheticNativeEventClass<Event, SyntheticNativeEvent<Event>>>;\n    play: NativeEventSource<SyntheticNativeEventClass<Event, SyntheticNativeEvent<Event>>>;\n    playing: NativeEventSource<SyntheticNativeEventClass<Event, SyntheticNativeEvent<Event>>>;\n    pointercancel: NativeEventSource<SyntheticNativeEventClass<PointerEvent, SyntheticPointerEvent>>;\n    pointerdown: NativeEventSource<SyntheticNativeEventClass<PointerEvent, SyntheticPointerEvent>>;\n    pointerenter: NativeEventSource<SyntheticNativeEventClass<PointerEvent, SyntheticPointerEvent>>;\n    pointerleave: NativeEventSource<SyntheticNativeEventClass<PointerEvent, SyntheticPointerEvent>>;\n    pointermove: NativeEventSource<SyntheticNativeEventClass<PointerEvent, SyntheticPointerEvent>>;\n    pointerout: NativeEventSource<SyntheticNativeEventClass<PointerEvent, SyntheticPointerEvent>>;\n    pointerover: NativeEventSource<SyntheticNativeEventClass<PointerEvent, SyntheticPointerEvent>>;\n    pointerup: NativeEventSource<SyntheticNativeEventClass<PointerEvent, SyntheticPointerEvent>>;\n    progress: NativeEventSource<SyntheticNativeEventClass<ProgressEvent, SyntheticProgressEvent>>;\n    ratechange: NativeEventSource<SyntheticNativeEventClass<Event, SyntheticNativeEvent<Event>>>;\n    reset: NativeEventSource<SyntheticNativeEventClass<Event, SyntheticNativeEvent<Event>>>;\n    scroll: NativeEventSource<SyntheticNativeEventClass<UIEvent, SyntheticUIEvent<UIEvent>>>;\n    seeked: NativeEventSource<SyntheticNativeEventClass<Event, SyntheticNativeEvent<Event>>>;\n    seeking: NativeEventSource<SyntheticNativeEventClass<Event, SyntheticNativeEvent<Event>>>;\n    select: NativeEventSource<SyntheticNativeEventClass<UIEvent, SyntheticUIEvent<UIEvent>>>;\n    selectstart: NativeEventSource<SyntheticNativeEventClass<Event, SyntheticNativeEvent<Event>>>;\n    stalled: NativeEventSource<SyntheticNativeEventClass<Event, SyntheticNativeEvent<Event>>>;\n    submit: NativeEventSource<SyntheticNativeEventClass<Event, SyntheticNativeEvent<Event>>>;\n    suspend: NativeEventSource<SyntheticNativeEventClass<Event, SyntheticNativeEvent<Event>>>;\n    timeupdate: NativeEventSource<SyntheticNativeEventClass<Event, SyntheticNativeEvent<Event>>>;\n    touchcancel: NativeEventSource<SyntheticNativeEventClass<TouchEvent, SyntheticTouchEvent>>;\n    touchend: NativeEventSource<SyntheticNativeEventClass<TouchEvent, SyntheticTouchEvent>>;\n    touchmove: NativeEventSource<SyntheticNativeEventClass<TouchEvent, SyntheticTouchEvent>>;\n    touchstart: NativeEventSource<SyntheticNativeEventClass<TouchEvent, SyntheticTouchEvent>>;\n    unload: NativeEventSource<SyntheticNativeEventClass<Event, SyntheticNativeEvent<Event>>>;\n    volumechange: NativeEventSource<SyntheticNativeEventClass<Event, SyntheticNativeEvent<Event>>>;\n    waiting: NativeEventSource<SyntheticNativeEventClass<Event, SyntheticNativeEvent<Event>>>;\n    wheel: NativeEventSource<SyntheticNativeEventClass<WheelEvent, SyntheticWheelEvent>>;\n};\n\n/* tslint:disable:max-line-length */\nexport const NativeEventSources: NativeEventSourceList = {\n    abort: new NativeEventSource<SyntheticNativeEventClass<UIEvent, SyntheticUIEvent<UIEvent>>>(NativeEventSourceFlags.Capture, \"abort\", SyntheticUIEvent),\n    activate: new NativeEventSource<SyntheticNativeEventClass<UIEvent, SyntheticUIEvent<UIEvent>>>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"activate\", SyntheticUIEvent),\n    ariarequest: new NativeEventSource<SyntheticNativeEventClass<Event, SyntheticUIEvent<UIEvent>>>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"ariarequest\", SyntheticUIEvent),\n    beforeactivate: new NativeEventSource<SyntheticNativeEventClass<UIEvent, SyntheticUIEvent<UIEvent>>>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"beforeactivate\", SyntheticUIEvent),\n    beforecopy: new NativeEventSource<SyntheticNativeEventClass<ClipboardEvent, SyntheticClipboardEvent>>(NativeEventSourceFlags.Capture, \"beforecopy\", SyntheticClipboardEvent),\n    beforecut: new NativeEventSource<SyntheticNativeEventClass<ClipboardEvent, SyntheticClipboardEvent>>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"beforecut\", SyntheticClipboardEvent),\n    beforedeactivate: new NativeEventSource<SyntheticNativeEventClass<UIEvent, SyntheticUIEvent<UIEvent>>>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"beforedeactivate\", SyntheticUIEvent),\n    beforepaste: new NativeEventSource<SyntheticNativeEventClass<ClipboardEvent, SyntheticClipboardEvent>>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"beforepaste\", SyntheticClipboardEvent),\n    blur: new NativeEventSource<SyntheticNativeEventClass<FocusEvent, SyntheticFocusEvent>>(NativeEventSourceFlags.Capture, \"blur\", SyntheticFocusEvent),\n    canplay: new NativeEventSource<SyntheticNativeEventClass<Event, SyntheticNativeEvent<Event>>>(NativeEventSourceFlags.Capture, \"canplay\", SyntheticNativeEvent),\n    canplaythrough: new NativeEventSource<SyntheticNativeEventClass<Event, SyntheticNativeEvent<Event>>>(NativeEventSourceFlags.Capture, \"canplaythrough\", SyntheticNativeEvent),\n    change: new NativeEventSource<SyntheticNativeEventClass<Event, SyntheticNativeEvent<Event>>>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"change\", SyntheticNativeEvent),\n    click: new NativeEventSource<SyntheticNativeEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"click\", SyntheticMouseEvent),\n    contextmenu: new NativeEventSource<SyntheticNativeEventClass<PointerEvent, SyntheticPointerEvent>>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"contextmenu\", SyntheticPointerEvent),\n    copy: new NativeEventSource<SyntheticNativeEventClass<ClipboardEvent, SyntheticClipboardEvent>>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"copy\", SyntheticClipboardEvent),\n    cuechange: new NativeEventSource<SyntheticNativeEventClass<Event, SyntheticNativeEvent<Event>>>(NativeEventSourceFlags.Capture, \"cuechange\", SyntheticNativeEvent),\n    cut: new NativeEventSource<SyntheticNativeEventClass<ClipboardEvent, SyntheticClipboardEvent>>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"cut\", SyntheticClipboardEvent),\n    dblclick: new NativeEventSource<SyntheticNativeEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"dblclick\", SyntheticMouseEvent),\n    deactivate: new NativeEventSource<SyntheticNativeEventClass<UIEvent, SyntheticUIEvent<UIEvent>>>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"deactivate\", SyntheticUIEvent),\n    drag: new NativeEventSource<SyntheticNativeEventClass<DragEvent, SyntheticDragEvent>>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"drag\", SyntheticDragEvent),\n    dragend: new NativeEventSource<SyntheticNativeEventClass<DragEvent, SyntheticDragEvent>>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"dragend\", SyntheticDragEvent),\n    dragenter: new NativeEventSource<SyntheticNativeEventClass<DragEvent, SyntheticDragEvent>>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"dragenter\", SyntheticDragEvent),\n    dragleave: new NativeEventSource<SyntheticNativeEventClass<DragEvent, SyntheticDragEvent>>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"dragleave\", SyntheticDragEvent),\n    dragover: new NativeEventSource<SyntheticNativeEventClass<DragEvent, SyntheticDragEvent>>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"dragover\", SyntheticDragEvent),\n    dragstart: new NativeEventSource<SyntheticNativeEventClass<DragEvent, SyntheticDragEvent>>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"dragstart\", SyntheticDragEvent),\n    drop: new NativeEventSource<SyntheticNativeEventClass<DragEvent, SyntheticDragEvent>>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"drop\", SyntheticDragEvent),\n    durationchange: new NativeEventSource<SyntheticNativeEventClass<Event, SyntheticNativeEvent<Event>>>(NativeEventSourceFlags.Capture, \"durationchange\", SyntheticNativeEvent),\n    emptied: new NativeEventSource<SyntheticNativeEventClass<Event, SyntheticNativeEvent<Event>>>(NativeEventSourceFlags.Capture, \"emptied\", SyntheticNativeEvent),\n    encrypted: new NativeEventSource<SyntheticNativeEventClass<MediaEncryptedEvent, SyntheticMediaEncryptedEvent>>(NativeEventSourceFlags.Capture, \"encrypted\", SyntheticMediaEncryptedEvent),\n    ended: new NativeEventSource<SyntheticNativeEventClass<MediaStreamErrorEvent, SyntheticMediaStreamErrorEvent>>(NativeEventSourceFlags.Capture, \"ended\", SyntheticMediaStreamErrorEvent),\n    error: new NativeEventSource<SyntheticNativeEventClass<ErrorEvent, SyntheticErrorEvent>>(NativeEventSourceFlags.Capture, \"error\", SyntheticErrorEvent),\n    focus: new NativeEventSource<SyntheticNativeEventClass<FocusEvent, SyntheticFocusEvent>>(NativeEventSourceFlags.Capture, \"focus\", SyntheticFocusEvent),\n    gotpointercapture: new NativeEventSource<SyntheticNativeEventClass<PointerEvent, SyntheticPointerEvent>>(NativeEventSourceFlags.Capture, \"gotpointercapture\", SyntheticPointerEvent),\n    input: new NativeEventSource<SyntheticNativeEventClass<Event, SyntheticNativeEvent<Event>>>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"input\", SyntheticNativeEvent),\n    invalid: new NativeEventSource<SyntheticNativeEventClass<Event, SyntheticNativeEvent<Event>>>(NativeEventSourceFlags.Capture, \"invalid\", SyntheticNativeEvent),\n    keydown: new NativeEventSource<SyntheticNativeEventClass<KeyboardEvent, SyntheticKeyboardEvent>>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"keydown\", SyntheticKeyboardEvent),\n    keypress: new NativeEventSource<SyntheticNativeEventClass<KeyboardEvent, SyntheticKeyboardEvent>>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"keypress\", SyntheticKeyboardEvent),\n    keyup: new NativeEventSource<SyntheticNativeEventClass<KeyboardEvent, SyntheticKeyboardEvent>>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"keyup\", SyntheticKeyboardEvent),\n    load: new NativeEventSource<SyntheticNativeEventClass<Event, SyntheticNativeEvent<Event>>>(NativeEventSourceFlags.Capture, \"load\", SyntheticNativeEvent),\n    loadeddata: new NativeEventSource<SyntheticNativeEventClass<Event, SyntheticNativeEvent<Event>>>(NativeEventSourceFlags.Capture, \"loadeddata\", SyntheticNativeEvent),\n    loadedmetadata: new NativeEventSource<SyntheticNativeEventClass<Event, SyntheticNativeEvent<Event>>>(NativeEventSourceFlags.Capture, \"loadedmetadata\", SyntheticNativeEvent),\n    loadstart: new NativeEventSource<SyntheticNativeEventClass<Event, SyntheticNativeEvent<Event>>>(NativeEventSourceFlags.Capture, \"loadstart\", SyntheticNativeEvent),\n    lostpointercapture: new NativeEventSource<SyntheticNativeEventClass<PointerEvent, SyntheticPointerEvent>>(NativeEventSourceFlags.Capture, \"lostpointercapture\", SyntheticPointerEvent),\n    mousedown: new NativeEventSource<SyntheticNativeEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"mousedown\", SyntheticMouseEvent),\n    mouseenter: new NativeEventSource<SyntheticNativeEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>(NativeEventSourceFlags.Capture, \"mouseenter\", SyntheticMouseEvent),\n    mouseleave: new NativeEventSource<SyntheticNativeEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>(NativeEventSourceFlags.Capture, \"mouseleave\", SyntheticMouseEvent),\n    mousemove: new NativeEventSource<SyntheticNativeEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"mousemove\", SyntheticMouseEvent),\n    mouseout: new NativeEventSource<SyntheticNativeEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"mouseout\", SyntheticMouseEvent),\n    mouseover: new NativeEventSource<SyntheticNativeEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"mouseover\", SyntheticMouseEvent),\n    mouseup: new NativeEventSource<SyntheticNativeEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"mouseup\", SyntheticMouseEvent),\n    paste: new NativeEventSource<SyntheticNativeEventClass<ClipboardEvent, SyntheticClipboardEvent>>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"paste\", SyntheticClipboardEvent),\n    pause: new NativeEventSource<SyntheticNativeEventClass<Event, SyntheticNativeEvent<Event>>>(NativeEventSourceFlags.Capture, \"pause\", SyntheticNativeEvent),\n    play: new NativeEventSource<SyntheticNativeEventClass<Event, SyntheticNativeEvent<Event>>>(NativeEventSourceFlags.Capture, \"play\", SyntheticNativeEvent),\n    playing: new NativeEventSource<SyntheticNativeEventClass<Event, SyntheticNativeEvent<Event>>>(NativeEventSourceFlags.Capture, \"playing\", SyntheticNativeEvent),\n    pointercancel: new NativeEventSource<SyntheticNativeEventClass<PointerEvent, SyntheticPointerEvent>>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"pointercancel\", SyntheticPointerEvent),\n    pointerdown: new NativeEventSource<SyntheticNativeEventClass<PointerEvent, SyntheticPointerEvent>>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"pointerdown\", SyntheticPointerEvent),\n    pointerenter: new NativeEventSource<SyntheticNativeEventClass<PointerEvent, SyntheticPointerEvent>>(NativeEventSourceFlags.Capture, \"pointerenter\", SyntheticPointerEvent),\n    pointerleave: new NativeEventSource<SyntheticNativeEventClass<PointerEvent, SyntheticPointerEvent>>(NativeEventSourceFlags.Capture, \"pointerleave\", SyntheticPointerEvent),\n    pointermove: new NativeEventSource<SyntheticNativeEventClass<PointerEvent, SyntheticPointerEvent>>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"pointermove\", SyntheticPointerEvent),\n    pointerout: new NativeEventSource<SyntheticNativeEventClass<PointerEvent, SyntheticPointerEvent>>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"pointerout\", SyntheticPointerEvent),\n    pointerover: new NativeEventSource<SyntheticNativeEventClass<PointerEvent, SyntheticPointerEvent>>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"pointerover\", SyntheticPointerEvent),\n    pointerup: new NativeEventSource<SyntheticNativeEventClass<PointerEvent, SyntheticPointerEvent>>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"pointerup\", SyntheticPointerEvent),\n    progress: new NativeEventSource<SyntheticNativeEventClass<ProgressEvent, SyntheticProgressEvent>>(NativeEventSourceFlags.Capture, \"progress\", SyntheticProgressEvent),\n    ratechange: new NativeEventSource<SyntheticNativeEventClass<Event, SyntheticNativeEvent<Event>>>(NativeEventSourceFlags.Capture, \"ratechange\", SyntheticNativeEvent),\n    reset: new NativeEventSource<SyntheticNativeEventClass<Event, SyntheticNativeEvent<Event>>>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"reset\", SyntheticNativeEvent),\n    scroll: new NativeEventSource<SyntheticNativeEventClass<UIEvent, SyntheticUIEvent<UIEvent>>>(NativeEventSourceFlags.Capture, \"scroll\", SyntheticUIEvent),\n    seeked: new NativeEventSource<SyntheticNativeEventClass<Event, SyntheticNativeEvent<Event>>>(NativeEventSourceFlags.Capture, \"seeked\", SyntheticNativeEvent),\n    seeking: new NativeEventSource<SyntheticNativeEventClass<Event, SyntheticNativeEvent<Event>>>(NativeEventSourceFlags.Capture, \"seeking\", SyntheticNativeEvent),\n    select: new NativeEventSource<SyntheticNativeEventClass<UIEvent, SyntheticUIEvent<UIEvent>>>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"select\", SyntheticUIEvent),\n    selectstart: new NativeEventSource<SyntheticNativeEventClass<Event, SyntheticNativeEvent<Event>>>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"selectstart\", SyntheticNativeEvent),\n    stalled: new NativeEventSource<SyntheticNativeEventClass<Event, SyntheticNativeEvent<Event>>>(NativeEventSourceFlags.Capture, \"stalled\", SyntheticNativeEvent),\n    submit: new NativeEventSource<SyntheticNativeEventClass<Event, SyntheticNativeEvent<Event>>>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"submit\", SyntheticNativeEvent),\n    suspend: new NativeEventSource<SyntheticNativeEventClass<Event, SyntheticNativeEvent<Event>>>(NativeEventSourceFlags.Capture, \"suspend\", SyntheticNativeEvent),\n    timeupdate: new NativeEventSource<SyntheticNativeEventClass<Event, SyntheticNativeEvent<Event>>>(NativeEventSourceFlags.Capture, \"timeupdate\", SyntheticNativeEvent),\n    touchcancel: new NativeEventSource<SyntheticNativeEventClass<TouchEvent, SyntheticTouchEvent>>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"touchcancel\", SyntheticTouchEvent),\n    touchend: new NativeEventSource<SyntheticNativeEventClass<TouchEvent, SyntheticTouchEvent>>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles | NativeEventSourceFlags.Passive, \"touchend\", SyntheticTouchEvent),\n    touchmove: new NativeEventSource<SyntheticNativeEventClass<TouchEvent, SyntheticTouchEvent>>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles | NativeEventSourceFlags.Passive, \"touchmove\", SyntheticTouchEvent),\n    touchstart: new NativeEventSource<SyntheticNativeEventClass<TouchEvent, SyntheticTouchEvent>>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles | NativeEventSourceFlags.Passive, \"touchstart\", SyntheticTouchEvent),\n    unload: new NativeEventSource<SyntheticNativeEventClass<Event, SyntheticNativeEvent<Event>>>(NativeEventSourceFlags.Capture, \"unload\", SyntheticNativeEvent),\n    volumechange: new NativeEventSource<SyntheticNativeEventClass<Event, SyntheticNativeEvent<Event>>>(NativeEventSourceFlags.Capture, \"volumechange\", SyntheticNativeEvent),\n    waiting: new NativeEventSource<SyntheticNativeEventClass<Event, SyntheticNativeEvent<Event>>>(NativeEventSourceFlags.Capture, \"waiting\", SyntheticNativeEvent),\n    wheel: new NativeEventSource<SyntheticNativeEventClass<WheelEvent, SyntheticWheelEvent>>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles | NativeEventSourceFlags.Passive, \"wheel\", SyntheticWheelEvent),\n};\n\nexport interface NativeActiveEventSourcesList {\n    mousedown: NativeEventSource<SyntheticNativeEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>;\n    mouseenter: NativeEventSource<SyntheticNativeEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>;\n    mouseleave: NativeEventSource<SyntheticNativeEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>;\n    mousemove: NativeEventSource<SyntheticNativeEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>;\n    mouseout: NativeEventSource<SyntheticNativeEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>;\n    mouseover: NativeEventSource<SyntheticNativeEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>;\n    mouseup: NativeEventSource<SyntheticNativeEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>;\n    scroll: NativeEventSource<SyntheticNativeEventClass<UIEvent, SyntheticUIEvent<UIEvent>>>;\n    touchcancel: NativeEventSource<SyntheticNativeEventClass<TouchEvent, SyntheticTouchEvent>>;\n    touchend: NativeEventSource<SyntheticNativeEventClass<TouchEvent, SyntheticTouchEvent>>;\n    touchmove: NativeEventSource<SyntheticNativeEventClass<TouchEvent, SyntheticTouchEvent>>;\n    touchstart: NativeEventSource<SyntheticNativeEventClass<TouchEvent, SyntheticTouchEvent>>;\n    wheel: NativeEventSource<SyntheticNativeEventClass<WheelEvent, SyntheticWheelEvent>>;\n}\n\nexport const NativeActiveEventSources = {\n    touchend: new NativeEventSource<SyntheticNativeEventClass<TouchEvent, SyntheticTouchEvent>>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"touchend\", SyntheticTouchEvent),\n    touchmove: new NativeEventSource<SyntheticNativeEventClass<TouchEvent, SyntheticTouchEvent>>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"touchmove\", SyntheticTouchEvent),\n    touchstart: new NativeEventSource<SyntheticNativeEventClass<TouchEvent, SyntheticTouchEvent>>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"touchstart\", SyntheticTouchEvent),\n    wheel: new NativeEventSource<SyntheticNativeEventClass<WheelEvent, SyntheticWheelEvent>>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"wheel\", SyntheticWheelEvent),\n};\n\n/**\n * Events.\n */\nexport const Events = {\n    onAbort: function createAbortEventHandler(\n        handler: (ev: SyntheticUIEvent<UIEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticUIEvent<UIEvent>> {\n        return createEventHandler<SyntheticUIEvent<UIEvent>>(NativeEventSources.abort.eventSource, handler, capture);\n    },\n    onActivate: function createActivateEventHandler(\n        handler: (ev: SyntheticUIEvent<UIEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticUIEvent<UIEvent>> {\n        return createEventHandler<SyntheticUIEvent<UIEvent>>(NativeEventSources.activate.eventSource, handler, capture);\n    },\n    onAriaRequest: function createAriarequestEventHandler(\n        handler: (ev: SyntheticUIEvent<UIEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticUIEvent<UIEvent>> {\n        return createEventHandler<SyntheticUIEvent<UIEvent>>(NativeEventSources.ariarequest.eventSource, handler, capture);\n    },\n    onBeforeActivate: function createBeforeactivateEventHandler(\n        handler: (ev: SyntheticUIEvent<UIEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticUIEvent<UIEvent>> {\n        return createEventHandler<SyntheticUIEvent<UIEvent>>(NativeEventSources.beforeactivate.eventSource, handler, capture);\n    },\n    onBeforeCopy: function createBeforecopyEventHandler(\n        handler: (ev: SyntheticClipboardEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticClipboardEvent> {\n        return createEventHandler<SyntheticClipboardEvent>(NativeEventSources.beforecopy.eventSource, handler, capture);\n    },\n    onBeforeCut: function createBeforecutEventHandler(\n        handler: (ev: SyntheticClipboardEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticClipboardEvent> {\n        return createEventHandler<SyntheticClipboardEvent>(NativeEventSources.beforecut.eventSource, handler, capture);\n    },\n    onBeforeDeactivate: function createBeforedeactivateEventHandler(\n        handler: (ev: SyntheticUIEvent<UIEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticUIEvent<UIEvent>> {\n        return createEventHandler<SyntheticUIEvent<UIEvent>>(NativeEventSources.beforedeactivate.eventSource, handler, capture);\n    },\n    onBeforePaste: function createBeforepasteEventHandler(\n        handler: (ev: SyntheticClipboardEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticClipboardEvent> {\n        return createEventHandler<SyntheticClipboardEvent>(NativeEventSources.beforepaste.eventSource, handler, capture);\n    },\n    onBlur: function createBlurEventHandler(\n        handler: (ev: SyntheticFocusEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticFocusEvent> {\n        return createEventHandler<SyntheticFocusEvent>(NativeEventSources.blur.eventSource, handler, capture);\n    },\n    onCanPlay: function createCanplayEventHandler(\n        handler: (ev: SyntheticNativeEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticNativeEvent<Event>> {\n        return createEventHandler<SyntheticNativeEvent<Event>>(NativeEventSources.canplay.eventSource, handler, capture);\n    },\n    onCanPlaythrough: function createCanplaythroughEventHandler(\n        handler: (ev: SyntheticNativeEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticNativeEvent<Event>> {\n        return createEventHandler<SyntheticNativeEvent<Event>>(NativeEventSources.canplaythrough.eventSource, handler, capture);\n    },\n    onChange: function createChangeEventHandler(\n        handler: (ev: SyntheticNativeEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticNativeEvent<Event>> {\n        return createEventHandler<SyntheticNativeEvent<Event>>(NativeEventSources.change.eventSource, handler, capture);\n    },\n    onClick: function createClickEventHandler(\n        handler: (ev: SyntheticMouseEvent<MouseEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticMouseEvent<MouseEvent>> {\n        return createEventHandler<SyntheticMouseEvent<MouseEvent>>(NativeEventSources.click.eventSource, handler, capture);\n    },\n    onContextMenu: function createContextmenuEventHandler(\n        handler: (ev: SyntheticPointerEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticPointerEvent> {\n        return createEventHandler<SyntheticPointerEvent>(NativeEventSources.contextmenu.eventSource, handler, capture);\n    },\n    onCopy: function createCopyEventHandler(\n        handler: (ev: SyntheticClipboardEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticClipboardEvent> {\n        return createEventHandler<SyntheticClipboardEvent>(NativeEventSources.copy.eventSource, handler, capture);\n    },\n    onCueChange: function createCuechangeEventHandler(\n        handler: (ev: SyntheticNativeEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticNativeEvent<Event>> {\n        return createEventHandler<SyntheticNativeEvent<Event>>(NativeEventSources.cuechange.eventSource, handler, capture);\n    },\n    onCut: function createCutEventHandler(\n        handler: (ev: SyntheticClipboardEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticClipboardEvent> {\n        return createEventHandler<SyntheticClipboardEvent>(NativeEventSources.cut.eventSource, handler, capture);\n    },\n    onDoubleClick: function createDblclickEventHandler(\n        handler: (ev: SyntheticMouseEvent<MouseEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticMouseEvent<MouseEvent>> {\n        return createEventHandler<SyntheticMouseEvent<MouseEvent>>(NativeEventSources.dblclick.eventSource, handler, capture);\n    },\n    onDeactivate: function createDeactivateEventHandler(\n        handler: (ev: SyntheticUIEvent<UIEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticUIEvent<UIEvent>> {\n        return createEventHandler<SyntheticUIEvent<UIEvent>>(NativeEventSources.deactivate.eventSource, handler, capture);\n    },\n    onDrag: function createDragEventHandler(\n        handler: (ev: SyntheticDragEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticDragEvent> {\n        return createEventHandler<SyntheticDragEvent>(NativeEventSources.drag.eventSource, handler, capture);\n    },\n    onDragEnd: function createDragendEventHandler(\n        handler: (ev: SyntheticDragEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticDragEvent> {\n        return createEventHandler<SyntheticDragEvent>(NativeEventSources.dragend.eventSource, handler, capture);\n    },\n    onDragEnter: function createDragenterEventHandler(\n        handler: (ev: SyntheticDragEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticDragEvent> {\n        return createEventHandler<SyntheticDragEvent>(NativeEventSources.dragenter.eventSource, handler, capture);\n    },\n    onDragLeave: function createDragleaveEventHandler(\n        handler: (ev: SyntheticDragEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticDragEvent> {\n        return createEventHandler<SyntheticDragEvent>(NativeEventSources.dragleave.eventSource, handler, capture);\n    },\n    onDragOver: function createDragoverEventHandler(\n        handler: (ev: SyntheticDragEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticDragEvent> {\n        return createEventHandler<SyntheticDragEvent>(NativeEventSources.dragover.eventSource, handler, capture);\n    },\n    onDragStart: function createDragstartEventHandler(\n        handler: (ev: SyntheticDragEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticDragEvent> {\n        return createEventHandler<SyntheticDragEvent>(NativeEventSources.dragstart.eventSource, handler, capture);\n    },\n    onDrop: function createDropEventHandler(\n        handler: (ev: SyntheticDragEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticDragEvent> {\n        return createEventHandler<SyntheticDragEvent>(NativeEventSources.drop.eventSource, handler, capture);\n    },\n    onDurationChange: function createDurationchangeEventHandler(\n        handler: (ev: SyntheticNativeEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticNativeEvent<Event>> {\n        return createEventHandler<SyntheticNativeEvent<Event>>(NativeEventSources.durationchange.eventSource, handler, capture);\n    },\n    onEmptied: function createEmptiedEventHandler(\n        handler: (ev: SyntheticNativeEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticNativeEvent<Event>> {\n        return createEventHandler<SyntheticNativeEvent<Event>>(NativeEventSources.emptied.eventSource, handler, capture);\n    },\n    onEncrypted: function createEncryptedEventHandler(\n        handler: (ev: SyntheticMediaEncryptedEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticMediaEncryptedEvent> {\n        return createEventHandler<SyntheticMediaEncryptedEvent>(NativeEventSources.encrypted.eventSource, handler, capture);\n    },\n    onEnded: function createEndedEventHandler(\n        handler: (ev: SyntheticMediaStreamErrorEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticMediaStreamErrorEvent> {\n        return createEventHandler<SyntheticMediaStreamErrorEvent>(NativeEventSources.ended.eventSource, handler, capture);\n    },\n    onError: function createErrorEventHandler(\n        handler: (ev: SyntheticErrorEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticErrorEvent> {\n        return createEventHandler<SyntheticErrorEvent>(NativeEventSources.error.eventSource, handler, capture);\n    },\n    onFocus: function createFocusEventHandler(\n        handler: (ev: SyntheticFocusEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticFocusEvent> {\n        return createEventHandler<SyntheticFocusEvent>(NativeEventSources.focus.eventSource, handler, capture);\n    },\n    onGotPointerCapture: function createGotpointercaptureEventHandler(\n        handler: (ev: SyntheticPointerEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticPointerEvent> {\n        return createEventHandler<SyntheticPointerEvent>(NativeEventSources.gotpointercapture.eventSource, handler, capture);\n    },\n    onInput: function createInputEventHandler(\n        handler: (ev: SyntheticNativeEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticNativeEvent<Event>> {\n        return createEventHandler<SyntheticNativeEvent<Event>>(NativeEventSources.input.eventSource, handler, capture);\n    },\n    onInvalid: function createInvalidEventHandler(\n        handler: (ev: SyntheticNativeEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticNativeEvent<Event>> {\n        return createEventHandler<SyntheticNativeEvent<Event>>(NativeEventSources.invalid.eventSource, handler, capture);\n    },\n    onKeyDown: function createKeydownEventHandler(\n        handler: (ev: SyntheticKeyboardEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticKeyboardEvent> {\n        return createEventHandler<SyntheticKeyboardEvent>(NativeEventSources.keydown.eventSource, handler, capture);\n    },\n    onKeyPress: function createKeypressEventHandler(\n        handler: (ev: SyntheticKeyboardEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticKeyboardEvent> {\n        return createEventHandler<SyntheticKeyboardEvent>(NativeEventSources.keypress.eventSource, handler, capture);\n    },\n    onKeyUp: function createKeyupEventHandler(\n        handler: (ev: SyntheticKeyboardEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticKeyboardEvent> {\n        return createEventHandler<SyntheticKeyboardEvent>(NativeEventSources.keyup.eventSource, handler, capture);\n    },\n    onLoad: function createLoadEventHandler(\n        handler: (ev: SyntheticNativeEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticNativeEvent<Event>> {\n        return createEventHandler<SyntheticNativeEvent<Event>>(NativeEventSources.load.eventSource, handler, capture);\n    },\n    onLoadedData: function createLoadeddataEventHandler(\n        handler: (ev: SyntheticNativeEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticNativeEvent<Event>> {\n        return createEventHandler<SyntheticNativeEvent<Event>>(NativeEventSources.loadeddata.eventSource, handler, capture);\n    },\n    onLoadedMetadata: function createLoadedmetadataEventHandler(\n        handler: (ev: SyntheticNativeEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticNativeEvent<Event>> {\n        return createEventHandler<SyntheticNativeEvent<Event>>(NativeEventSources.loadedmetadata.eventSource, handler, capture);\n    },\n    onLoadStart: function createLoadstartEventHandler(\n        handler: (ev: SyntheticNativeEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticNativeEvent<Event>> {\n        return createEventHandler<SyntheticNativeEvent<Event>>(NativeEventSources.loadstart.eventSource, handler, capture);\n    },\n    onLostPointerCapture: function createLostpointercaptureEventHandler(\n        handler: (ev: SyntheticPointerEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticPointerEvent> {\n        return createEventHandler<SyntheticPointerEvent>(NativeEventSources.lostpointercapture.eventSource, handler, capture);\n    },\n    onMouseDown: function createMousedownEventHandler(\n        handler: (ev: SyntheticMouseEvent<MouseEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticMouseEvent<MouseEvent>> {\n        return createEventHandler<SyntheticMouseEvent<MouseEvent>>(NativeEventSources.mousedown.eventSource, handler, capture);\n    },\n    onMouseEnter: function createMouseenterEventHandler(\n        handler: (ev: SyntheticMouseEvent<MouseEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticMouseEvent<MouseEvent>> {\n        return createEventHandler<SyntheticMouseEvent<MouseEvent>>(NativeEventSources.mouseenter.eventSource, handler, capture);\n    },\n    onMouseLeave: function createMouseleaveEventHandler(\n        handler: (ev: SyntheticMouseEvent<MouseEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticMouseEvent<MouseEvent>> {\n        return createEventHandler<SyntheticMouseEvent<MouseEvent>>(NativeEventSources.mouseleave.eventSource, handler, capture);\n    },\n    onMouseMove: function createMousemoveEventHandler(\n        handler: (ev: SyntheticMouseEvent<MouseEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticMouseEvent<MouseEvent>> {\n        return createEventHandler<SyntheticMouseEvent<MouseEvent>>(NativeEventSources.mousemove.eventSource, handler, capture);\n    },\n    onMouseOut: function createMouseoutEventHandler(\n        handler: (ev: SyntheticMouseEvent<MouseEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticMouseEvent<MouseEvent>> {\n        return createEventHandler<SyntheticMouseEvent<MouseEvent>>(NativeEventSources.mouseout.eventSource, handler, capture);\n    },\n    onMouseOver: function createMouseoverEventHandler(\n        handler: (ev: SyntheticMouseEvent<MouseEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticMouseEvent<MouseEvent>> {\n        return createEventHandler<SyntheticMouseEvent<MouseEvent>>(NativeEventSources.mouseover.eventSource, handler, capture);\n    },\n    onMouseUp: function createMouseupEventHandler(\n        handler: (ev: SyntheticMouseEvent<MouseEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticMouseEvent<MouseEvent>> {\n        return createEventHandler<SyntheticMouseEvent<MouseEvent>>(NativeEventSources.mouseup.eventSource, handler, capture);\n    },\n    onPaste: function createPasteEventHandler(\n        handler: (ev: SyntheticClipboardEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticClipboardEvent> {\n        return createEventHandler<SyntheticClipboardEvent>(NativeEventSources.paste.eventSource, handler, capture);\n    },\n    onPause: function createPauseEventHandler(\n        handler: (ev: SyntheticNativeEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticNativeEvent<Event>> {\n        return createEventHandler<SyntheticNativeEvent<Event>>(NativeEventSources.pause.eventSource, handler, capture);\n    },\n    onPlay: function createPlayEventHandler(\n        handler: (ev: SyntheticNativeEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticNativeEvent<Event>> {\n        return createEventHandler<SyntheticNativeEvent<Event>>(NativeEventSources.play.eventSource, handler, capture);\n    },\n    onPlaying: function createPlayingEventHandler(\n        handler: (ev: SyntheticNativeEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticNativeEvent<Event>> {\n        return createEventHandler<SyntheticNativeEvent<Event>>(NativeEventSources.playing.eventSource, handler, capture);\n    },\n    onPointerCancel: function createPointercancelEventHandler(\n        handler: (ev: SyntheticPointerEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticPointerEvent> {\n        return createEventHandler<SyntheticPointerEvent>(NativeEventSources.pointercancel.eventSource, handler, capture);\n    },\n    onPointerDown: function createPointerdownEventHandler(\n        handler: (ev: SyntheticPointerEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticPointerEvent> {\n        return createEventHandler<SyntheticPointerEvent>(NativeEventSources.pointerdown.eventSource, handler, capture);\n    },\n    onPointerEnter: function createPointerenterEventHandler(\n        handler: (ev: SyntheticPointerEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticPointerEvent> {\n        return createEventHandler<SyntheticPointerEvent>(NativeEventSources.pointerenter.eventSource, handler, capture);\n    },\n    onPointerLeave: function createPointerleaveEventHandler(\n        handler: (ev: SyntheticPointerEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticPointerEvent> {\n        return createEventHandler<SyntheticPointerEvent>(NativeEventSources.pointerleave.eventSource, handler, capture);\n    },\n    onPointerMove: function createPointermoveEventHandler(\n        handler: (ev: SyntheticPointerEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticPointerEvent> {\n        return createEventHandler<SyntheticPointerEvent>(NativeEventSources.pointermove.eventSource, handler, capture);\n    },\n    onPointerOut: function createPointeroutEventHandler(\n        handler: (ev: SyntheticPointerEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticPointerEvent> {\n        return createEventHandler<SyntheticPointerEvent>(NativeEventSources.pointerout.eventSource, handler, capture);\n    },\n    onPointerOver: function createPointeroverEventHandler(\n        handler: (ev: SyntheticPointerEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticPointerEvent> {\n        return createEventHandler<SyntheticPointerEvent>(NativeEventSources.pointerover.eventSource, handler, capture);\n    },\n    onPointerUp: function createPointerupEventHandler(\n        handler: (ev: SyntheticPointerEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticPointerEvent> {\n        return createEventHandler<SyntheticPointerEvent>(NativeEventSources.pointerup.eventSource, handler, capture);\n    },\n    onProgress: function createProgressEventHandler(\n        handler: (ev: SyntheticProgressEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticProgressEvent> {\n        return createEventHandler<SyntheticProgressEvent>(NativeEventSources.progress.eventSource, handler, capture);\n    },\n    onRateChange: function createRatechangeEventHandler(\n        handler: (ev: SyntheticNativeEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticNativeEvent<Event>> {\n        return createEventHandler<SyntheticNativeEvent<Event>>(NativeEventSources.ratechange.eventSource, handler, capture);\n    },\n    onReset: function createResetEventHandler(\n        handler: (ev: SyntheticNativeEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticNativeEvent<Event>> {\n        return createEventHandler<SyntheticNativeEvent<Event>>(NativeEventSources.reset.eventSource, handler, capture);\n    },\n    onScroll: function createScrollEventHandler(\n        handler: (ev: SyntheticUIEvent<UIEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticUIEvent<UIEvent>> {\n        return createEventHandler<SyntheticUIEvent<UIEvent>>(NativeEventSources.scroll.eventSource, handler, capture);\n    },\n    onSeeked: function createSeekedEventHandler(\n        handler: (ev: SyntheticNativeEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticNativeEvent<Event>> {\n        return createEventHandler<SyntheticNativeEvent<Event>>(NativeEventSources.seeked.eventSource, handler, capture);\n    },\n    onSeeking: function createSeekingEventHandler(\n        handler: (ev: SyntheticNativeEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticNativeEvent<Event>> {\n        return createEventHandler<SyntheticNativeEvent<Event>>(NativeEventSources.seeking.eventSource, handler, capture);\n    },\n    onSelect: function createSelectEventHandler(\n        handler: (ev: SyntheticUIEvent<UIEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticUIEvent<UIEvent>> {\n        return createEventHandler<SyntheticUIEvent<UIEvent>>(NativeEventSources.select.eventSource, handler, capture);\n    },\n    onSelectStart: function createSelectstartEventHandler(\n        handler: (ev: SyntheticNativeEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticNativeEvent<Event>> {\n        return createEventHandler<SyntheticNativeEvent<Event>>(NativeEventSources.selectstart.eventSource, handler, capture);\n    },\n    onStalled: function createStalledEventHandler(\n        handler: (ev: SyntheticNativeEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticNativeEvent<Event>> {\n        return createEventHandler<SyntheticNativeEvent<Event>>(NativeEventSources.stalled.eventSource, handler, capture);\n    },\n    onSubmit: function createSubmitEventHandler(\n        handler: (ev: SyntheticNativeEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticNativeEvent<Event>> {\n        return createEventHandler<SyntheticNativeEvent<Event>>(NativeEventSources.submit.eventSource, handler, capture);\n    },\n    onSuspend: function createSuspendEventHandler(\n        handler: (ev: SyntheticNativeEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticNativeEvent<Event>> {\n        return createEventHandler<SyntheticNativeEvent<Event>>(NativeEventSources.suspend.eventSource, handler, capture);\n    },\n    onTimeUpdate: function createTimeupdateEventHandler(\n        handler: (ev: SyntheticNativeEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticNativeEvent<Event>> {\n        return createEventHandler<SyntheticNativeEvent<Event>>(NativeEventSources.timeupdate.eventSource, handler, capture);\n    },\n    onTouchCancel: function createTouchcancelEventHandler(\n        handler: (ev: SyntheticTouchEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticTouchEvent> {\n        return createEventHandler<SyntheticTouchEvent>(NativeEventSources.touchcancel.eventSource, handler, capture);\n    },\n    onTouchEnd: function createTouchendEventHandler(\n        handler: (ev: SyntheticTouchEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticTouchEvent> {\n        return createEventHandler<SyntheticTouchEvent>(NativeEventSources.touchend.eventSource, handler, capture);\n    },\n    onTouchMove: function createTouchmoveEventHandler(\n        handler: (ev: SyntheticTouchEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticTouchEvent> {\n        return createEventHandler<SyntheticTouchEvent>(NativeEventSources.touchmove.eventSource, handler, capture);\n    },\n    onTouchStart: function createTouchstartEventHandler(\n        handler: (ev: SyntheticTouchEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticTouchEvent> {\n        return createEventHandler<SyntheticTouchEvent>(NativeEventSources.touchstart.eventSource, handler, capture);\n    },\n    onUnload: function createUnloadEventHandler(\n        handler: (ev: SyntheticNativeEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticNativeEvent<Event>> {\n        return createEventHandler<SyntheticNativeEvent<Event>>(NativeEventSources.unload.eventSource, handler, capture);\n    },\n    onVolumeChange: function createVolumechangeEventHandler(\n        handler: (ev: SyntheticNativeEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticNativeEvent<Event>> {\n        return createEventHandler<SyntheticNativeEvent<Event>>(NativeEventSources.volumechange.eventSource, handler, capture);\n    },\n    onWaiting: function createWaitingEventHandler(\n        handler: (ev: SyntheticNativeEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticNativeEvent<Event>> {\n        return createEventHandler<SyntheticNativeEvent<Event>>(NativeEventSources.waiting.eventSource, handler, capture);\n    },\n    onWheel: function createWheelEventHandler(\n        handler: (ev: SyntheticWheelEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticWheelEvent> {\n        return createEventHandler<SyntheticWheelEvent>(NativeEventSources.wheel.eventSource, handler, capture);\n    },\n};\n\n/**\n * List of Events with disabled passive flag.\n */\nexport const ActiveEvents = {\n    onTouchEnd: function createTouchendEventHandler(\n        handler: (ev: SyntheticTouchEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticTouchEvent> {\n        return createEventHandler<SyntheticTouchEvent>(NativeActiveEventSources.touchend.eventSource, handler, capture);\n    },\n    onTouchMove: function createTouchmoveEventHandler(\n        handler: (ev: SyntheticTouchEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticTouchEvent> {\n        return createEventHandler<SyntheticTouchEvent>(NativeActiveEventSources.touchmove.eventSource, handler, capture);\n    },\n    onTouchStart: function createTouchstartEventHandler(\n        handler: (ev: SyntheticTouchEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticTouchEvent> {\n        return createEventHandler<SyntheticTouchEvent>(NativeActiveEventSources.touchstart.eventSource, handler, capture);\n    },\n    onWheel: function createWheelEventHandler(\n        handler: (ev: SyntheticWheelEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticWheelEvent> {\n        return createEventHandler<SyntheticWheelEvent>(NativeActiveEventSources.wheel.eventSource, handler, capture);\n    },\n};\n/* tslint:enable:max-line-length */\n","import { getEventTarget } from \"../common/dom\";\nimport { scheduleTask } from \"../scheduler/task\";\nimport { NativeEventSourceFlags, SyntheticEventFlags } from \"./flags\";\nimport { SyntheticNativeEvent, SyntheticNativeEventClass } from \"./synthetic_event\";\nimport { DispatchTarget } from \"./dispatch_target\";\nimport { EventSource } from \"./event_source\";\nimport { accumulateDispatchTargets } from \"./traverse_dom\";\nimport { dispatchEvent } from \"./dispatch_event\";\nimport { getEventOptions } from \"./utils\";\n\n/**\n * Native Event Dispatcher.\n */\nexport class NativeEventSource<E extends SyntheticNativeEventClass<Event, SyntheticNativeEvent<any>>> {\n    readonly eventSource: EventSource;\n    private dependencies: number;\n    /**\n     * See `EventDispatcherFlags` for details.\n     */\n    readonly flags: NativeEventSourceFlags;\n    /**\n     * Event name.\n     */\n    readonly name: string;\n    /**\n     * Synthetic Event Constructor.\n     */\n    readonly eventType: E;\n    /**\n     * Flag indicating that Event Dispatcher will be deactivated in the task.\n     */\n    private deactivating: boolean;\n\n    constructor(\n        flags: NativeEventSourceFlags,\n        name: string,\n        eventType: E,\n    ) {\n        this.eventSource = {\n            addListener: () => {\n                if (this.dependencies++ === 0) {\n                    if (this.deactivating === true) {\n                        this.deactivating = false;\n                    } else {\n                        document.addEventListener(\n                            this.name,\n                            this.dispatch,\n                            getEventOptions(this.flags) as boolean,\n                        );\n                    }\n                }\n            },\n            removeListener: () => {\n                if (--this.dependencies === 0) {\n                    if (this.deactivating === false) {\n                        this.deactivating = true;\n                        scheduleTask(() => {\n                            if (this.deactivating === true) {\n                                document.removeEventListener(\n                                    this.name,\n                                    this.dispatch,\n                                    getEventOptions(this.flags) as boolean,\n                                );\n                                this.deactivating = false;\n                            }\n                        });\n                    }\n                }\n            },\n        };\n        this.dependencies = 0;\n        this.flags = flags;\n        this.name = name;\n        this.eventType = eventType;\n        this.deactivating = false;\n    }\n\n    private dispatch = (ev: Event): void => {\n        const targets: DispatchTarget[] = [];\n        accumulateDispatchTargets(targets, getEventTarget(ev) as Element, this.eventSource);\n\n        if (targets.length > 0) {\n            const s = new this.eventType(\n                this.eventSource,\n                0,\n                getEventTarget(ev),\n                ev.timeStamp,\n                ev,\n            );\n            dispatchEvent(targets, s, (this.flags & NativeEventSourceFlags.Bubbles) !== 0);\n            if ((s.flags & SyntheticEventFlags.PreventedDefault) !== 0) {\n                ev.preventDefault();\n            }\n        }\n    }\n\n}\n","import { EventHandler } from \"./event_handler\";\nimport { EventSource } from \"./event_source\";\nimport { DispatchTarget } from \"./dispatch_target\";\nimport { getEventHandlersFromDOMNode } from \"./utils\";\n\n/**\n * Accumulate Event Handlers that has a matching Event Source.\n *\n * @param result Result array.\n * @param target Target Element.\n * @param source Event Source.\n */\nexport function accumulateDispatchTargetsFromElement(\n    result: DispatchTarget[],\n    target: Element,\n    source: EventSource,\n): void {\n    const events = getEventHandlersFromDOMNode(target);\n    if (events !== null && events !== undefined) {\n        let matches: EventHandler[] | EventHandler | undefined;\n        if (typeof events === \"function\") {\n            if (events.source === source) {\n                matches = events;\n            }\n        } else {\n            let count = 0;\n            for (let i = 0; i < events.length; i++) {\n                const h = events[i];\n                if (h !== null && h.source === source) {\n                    if (count === 0) {\n                        matches = h;\n                    } else if (count === 1) {\n                        matches = [matches as EventHandler, h];\n                    } else {\n                        (matches as EventHandler[]).push(h);\n                    }\n                    count++;\n                }\n            }\n        }\n        if (matches !== undefined) {\n            result.push({\n                target: target,\n                handlers: matches,\n            });\n        }\n    }\n}\n\n/**\n * Traverses the DOM tree from the target Element to the document top and accumulates Dispatch Targets that has matching\n * Event Source.\n *\n * @param result Result array.\n * @param target DOM Element.\n * @param source Event Source.\n */\nexport function accumulateDispatchTargets(\n    result: DispatchTarget[],\n    target: Element | null,\n    source: EventSource,\n): void {\n    while (target !== null) {\n        accumulateDispatchTargetsFromElement(result, target, source);\n        target = target.parentElement;\n    }\n}\n","import { NOOP_FALSE } from \"../common/noop\";\nimport { getFunctionName, nextDebugId } from \"../dev_mode/dev_mode\";\nimport { isPropsNotShallowEqual } from \"../common/equality\";\nimport { ComponentFlags } from \"./flags\";\nimport { IVNode } from \"./ivnode\";\nimport { currentFrame } from \"../scheduler/frame\";\n\n/**\n * Component function constructor.\n */\nexport interface ComponentFunction<P = void> {\n    (props: P): IVNode<any>;\n    isPropsChanged?: (oldProps: P, newProps: P) => boolean;\n    shouldAugment?: (props: P) => boolean;\n}\n\n/**\n * Component class constructor.\n */\nexport interface ComponentClass<P = void> {\n    new (props: P): Component<P>;\n}\n\n/**\n * Component is the main building block that is used to build UI applications.\n *\n * Component class has a parametric type `P` to specify `props` type.\n *\n * Example:\n *\n *     class Hello extends Component<string> {\n *         render() {\n *             return $t(`Hello ${this.props}`);\n *         }\n *     }\n *\n *     render($c(Hello, \"world\"), document.getElementById(\"App\")!);\n */\nexport abstract class Component<P = void> {\n    /**\n     * Flags, see `ComponentFlags` for details.\n     *\n     * Lowest 16 bits are reserved for ivi flags, other bits can be used for user flags.\n     */\n    flags: ComponentFlags;\n    /**\n     * Component properties.\n     */\n    props: P;\n    /**\n     * Unique ID.\n     *\n     * ID generator is using `dev_mode.uniqueId()` function, so it will be unique across all Dev Mode ids.\n     *\n     * Dev Mode.\n     */\n    _debugId: number;\n\n    constructor(props: P) {\n        this.flags = 0;\n        this.props = props;\n        if (__IVI_DEV__) {\n            this._debugId = nextDebugId();\n        }\n    }\n\n    /**\n     * Lifecycle method `isPropsChanged` is used as a hint that can reduce unnecessary updates.\n     *\n     * By default props checked by their identity.\n     *\n     * @param oldProps Old props.\n     * @param newProps New props.\n     * @returns `true` when props should be updated.\n     */\n    isPropsChanged(oldProps: P, newProps: P): boolean {\n        return oldProps !== newProps;\n    }\n\n    /**\n     * Lifecycle method `newPropsReceived` is invoked after new props are assigned.\n     *\n     * @param oldProps Old props.\n     * @param newProps New props.\n     */\n    newPropsReceived(oldProps: P, newProps: P): void {\n        /* tslint:disable:no-empty */\n        /* tslint:enable:no-empty */\n    }\n\n    /**\n     * Lifecycle method `shouldAugment` is invoked before augmentation.\n     *\n     * @returns true when component should be augmented.\n     */\n    shouldAugment(): boolean {\n        return true;\n    }\n\n    /**\n     * Lifecycle method `attached` is invoked when component is attached to the document.\n     */\n    attached(): void {\n        /* tslint:disable:no-empty */\n        /* tslint:enable:no-empty */\n    }\n\n    /**\n     * Lifecycle method `detached` is invoked when component is detached from the document.\n     */\n    detached(): void {\n        /* tslint:disable:no-empty */\n        /* tslint:enable:no-empty */\n    }\n\n    /**\n     * Lifecycle method `beforeUpdate` is invoked before update.\n     */\n    beforeUpdate(): void {\n        /* tslint:disable:no-empty */\n        /* tslint:enable:no-empty */\n    }\n\n    /**\n     * Lifecycle method `updated` is invoked after update.\n     */\n    updated(): void {\n        /* tslint:disable:no-empty */\n        /* tslint:enable:no-empty */\n    }\n\n    /**\n     * Lifecycle method `invalidated` is invoked after `invalidate` method is invoked.\n     */\n    invalidated(): void {\n        /* tslint:disable:no-empty */\n        /* tslint:enable:no-empty */\n    }\n\n    abstract render(): IVNode<any>;\n\n    /**\n     * Invalidate view.\n     */\n    invalidate(): void {\n        if (__IVI_BROWSER__) {\n            this.flags |= ComponentFlags.DirtyState;\n            this.invalidated();\n            if ((this.flags & ComponentFlags.Attached) !== 0) {\n                currentFrame().updateComponent();\n            }\n        }\n    }\n}\n\n/**\n * Checks props for shallow equality.\n *\n * This function can be used as a wrapper for function expression, or as a class decorator.\n *\n *     checkPropsShallowEquality(MyComponent);\n *     function MyComponent(props: { text: string }) {\n *         return $h(\"div\").children(props.text);\n *     });\n *\n *     @checkPropsShallowEquality\n *     class MyClassComponent extends Component<{ text: string }> {\n *         render() {\n *             return $h(\"div\").children(this.props.text);\n *         }\n *     }\n *\n * @param target Component constructor.\n * @returns Component constructor with identity check.\n */\nexport function checkPropsShallowEquality<P extends ComponentClass<any> | ComponentFunction<any>>(target: P): P {\n    if (target.prototype.render === undefined) {\n        (target as ComponentFunction<any>).isPropsChanged = isPropsNotShallowEqual;\n    } else {\n        target.prototype.isPropsChanged = isPropsNotShallowEqual;\n    }\n    return target;\n}\n\n/**\n * Marks component as static.\n *\n * This function can be used as a wrapper for function expression, or as a class decorator.\n *\n *     staticComponent(MyComponent);\n *     function MyComponent(props: { text: string }) {\n *         return $h(\"div\").children(props.text);\n *     });\n *\n *     @staticComponent\n *     class MyClassComponent extends Component<{ text: string }> {\n *         render() {\n *             return $h(\"div\").children(this.props.text);\n *         }\n *     }\n *\n * @param target Component constructor.\n * @returns Component constructor with static property.\n */\nexport function staticComponent<P extends ComponentClass<any> | ComponentFunction<any>>(target: P): P {\n    if (target.prototype.render === undefined) {\n        (target as ComponentFunction<any>).isPropsChanged = NOOP_FALSE;\n    } else {\n        target.prototype.isPropsChanged = NOOP_FALSE;\n    }\n    return target;\n}\n\n/**\n * Get component name from component instance or component function.\n *\n * @param component Component.\n * @return Component name.\n */\nexport function getComponentName(component: Component<any> | ComponentFunction<any>): string {\n    return getFunctionName(\n        (component as Function).prototype.render === undefined ?\n            component as ComponentFunction<any> :\n            (component as Object).constructor,\n    );\n}\n\nexport function isComponentClass(componentClass: any): componentClass is ComponentClass<any> {\n    return componentClass.prototype.render !== undefined;\n}\n\n/**\n * Is component attached.\n *\n * @returns `true` when Component is attached.\n */\nexport function isComponentAttached(component: Component<any>): boolean {\n    return (component.flags & ComponentFlags.Attached) !== 0;\n}\n","import { checkDOMAttributesForTypos, checkDOMStylesForTypos, checkDeprecatedDOMSVGAttributes } from \"../dev_mode/typos\";\nimport { isValidTag } from \"../dev_mode/dom\";\nimport { SVG_NAMESPACE, HTMLTagType, SVGTagType, MediaTagType, InputType } from \"../common/dom\";\nimport { ElementDescriptorFlags } from \"./flags\";\nimport { syncDOMProps, syncClassName, syncStyle } from \"./sync_dom\";\nimport {\n    HTMLAnchorElementProps, HTMLElementProps, HTMLAppletElementProps, HTMLAreaElementProps, HTMLAudioElementProps,\n    HTMLBaseElementProps, HTMLBaseFontElementProps, HTMLBodyElementProps, HTMLBRElementProps, HTMLButtonElementProps,\n    HTMLCanvasElementProps, HTMLQuoteElementProps, HTMLTableCaptionElementProps, HTMLTableColElementProps,\n    HTMLDataListElementProps, HTMLModElementProps, HTMLDirectoryElementProps, HTMLDivElementProps,\n    HTMLDListElementProps, HTMLEmbedElementProps, HTMLFieldSetElementProps, HTMLFontElementProps, HTMLFormElementProps,\n    HTMLFrameElementProps, HTMLFrameSetElementProps, HTMLHeadElementProps, HTMLHeadingElementProps, HTMLHRElementProps,\n    HTMLHtmlElementProps, HTMLIFrameElementProps, HTMLImageElementProps, HTMLInputElementProps, HTMLLabelElementProps,\n    HTMLLegendElementProps, HTMLLIElementProps, HTMLLinkElementProps, HTMLMapElementProps, HTMLMarqueeElementProps,\n    HTMLMenuElementProps, HTMLMetaElementProps, HTMLMeterElementProps, HTMLObjectElementProps, HTMLOListElementProps,\n    HTMLOptGroupElementProps, HTMLOptionElementProps, HTMLParagraphElementProps, HTMLParamElementProps,\n    HTMLPictureElementProps, HTMLPreElementProps, HTMLProgressElementProps, HTMLScriptElementProps,\n    HTMLSelectElementProps, HTMLSourceElementProps, HTMLSpanElementProps, HTMLStyleElementProps,\n    HTMLTableDataCellElementProps, HTMLTableElementProps, HTMLTableHeaderCellElementProps, HTMLTableRowElementProps,\n    HTMLTableSectionElementProps, HTMLTemplateElementProps, HTMLTextAreaElementProps, HTMLTitleElementProps,\n    HTMLTrackElementProps, HTMLUListElementProps, HTMLUnknownElementProps, HTMLVideoElementProps, HTMLMediaElementProps,\n    MSHTMLWebViewElementProps,\n\n    SVGCircleElementProps, SVGClipPathElementProps, SVGDefsElementProps, SVGDescElementProps, SVGEllipseElementProps,\n    SVGFEBlendElementProps, SVGFEColorMatrixElementProps, SVGFEComponentTransferElementProps,\n    SVGFECompositeElementProps, SVGFEConvolveMatrixElementProps, SVGFEDiffuseLightingElementProps,\n    SVGFEDisplacementMapElementProps, SVGFEDistantLightElementProps, SVGFEFloodElementProps, SVGFEFuncAElementProps,\n    SVGFEFuncBElementProps, SVGFEFuncGElementProps, SVGFEFuncRElementProps, SVGFEGaussianBlurElementProps,\n    SVGFEImageElementProps, SVGFEMergeElementProps, SVGFEMergeNodeElementProps, SVGFEMorphologyElementProps,\n    SVGFEOffsetElementProps, SVGFEPointLightElementProps, SVGFESpecularLightingElementProps, SVGFESpotLightElementProps,\n    SVGFETileElementProps, SVGFETurbulenceElementProps, SVGFilterElementProps, SVGForeignObjectElementProps,\n    SVGGElementProps, SVGImageElementProps, SVGLinearGradientElementProps, SVGLineElementProps, SVGMarkerElementProps,\n    SVGMaskElementProps, SVGMetadataElementProps, SVGPathElementProps, SVGPatternElementProps, SVGPolygonElementProps,\n    SVGPolylineElementProps, SVGRadialGradientElementProps, SVGRectElementProps, SVGStopElementProps,\n    SVGSVGElementProps, SVGSwitchElementProps, SVGSymbolElementProps, SVGTextElementProps, SVGTextPathElementProps,\n    SVGTSpanElementProps, SVGViewElementProps, SVGUseElementProps, SVGElementProps,\n\n    CSSStyleProps,\n} from \"../common/dom_props\";\n\n/**\n * Element Descriptor.\n *\n * Element Descriptors are partially static elements.\n *\n * @final\n */\nexport class ElementDescriptor<P = void> {\n    /**\n     * Flags, see `ElementDescriptorFlags` for details.\n     */\n    _flags: number;\n    /**\n     * Tag name of the element.\n     */\n    _tag: string;\n    /**\n     * Style.\n     */\n    _style: CSSStyleProps | null;\n    /**\n     * Properties.\n     */\n    _props: P | null;\n    /**\n     * Class name.\n     */\n    _className: string | null;\n    /**\n     * Reference to an element that will be cloned when DOM node cloning is enabled.\n     */\n    private _ref: Element | null;\n    /**\n     * Props protected from overriding.\n     */\n    _protectedProps: { [key: string]: boolean } | null;\n    /**\n     * Styles protected from overriding.\n     */\n    _protectedStyle: { [key: string]: boolean } | null;\n\n    constructor(tagName: string, flags: ElementDescriptorFlags = 0) {\n        this._flags = flags;\n        this._tag = tagName;\n        this._props = null;\n        this._className = null;\n        this._style = null;\n        this._ref = null;\n        if (__IVI_DEV__) {\n            this._protectedProps = null;\n            this._protectedStyle = null;\n        }\n    }\n\n    /**\n     * Set props.\n     *\n     * @param props\n     * @param protect\n     * @returns ElementDescriptor.\n     */\n    props(props: P, protect?: boolean | { [key: string]: boolean }): ElementDescriptor<P> {\n        if (__IVI_DEV__) {\n            if (protect) {\n                this._flags |= ElementDescriptorFlags.ProtectProps;\n                if (typeof protect === \"object\") {\n                    this._protectedProps = protect;\n                }\n            }\n            if (props) {\n                checkDOMAttributesForTypos(props);\n                if (this._flags & ElementDescriptorFlags.SvgElement) {\n                    checkDeprecatedDOMSVGAttributes(this._tag as string, props);\n                }\n            }\n        }\n        this._props = props;\n        return this;\n    }\n\n    /**\n     * Set className.\n     *\n     * @param className\n     * @param protect\n     * @returns ElementDescriptor.\n     */\n    className(className: string, protect?: boolean): ElementDescriptor<P> {\n        if (__IVI_DEV__) {\n            if (protect) {\n                this._flags |= ElementDescriptorFlags.ProtectClassName;\n            }\n        }\n        this._className = className;\n        return this;\n    }\n\n    /**\n     * Set style.\n     *\n     * @param style\n     * @param protect\n     * @returns ElementDescriptor.\n     */\n    style(style: CSSStyleProps | null, protect?: boolean | { [key: string]: boolean }): ElementDescriptor<P> {\n        if (__IVI_DEV__) {\n            if (protect) {\n                this._flags |= ElementDescriptorFlags.ProtectStyle;\n                if (typeof protect === \"object\") {\n                    this._protectedStyle = protect;\n                }\n            }\n            if (style) {\n                checkDOMStylesForTypos(style);\n            }\n        }\n        this._style = style;\n        return this;\n    }\n\n    /**\n     * Create a DOM Element.\n     */\n    createElement(): Element {\n        let ref = this._ref;\n\n        if (ref === null) {\n            if ((this._flags & ElementDescriptorFlags.SvgElement) === 0) {\n                if (this._flags & ElementDescriptorFlags.InputElement) {\n                    if (this._flags & ElementDescriptorFlags.TextAreaElement) {\n                        ref = document.createElement(\"textarea\");\n                    } else {\n                        ref = document.createElement(\"input\");\n                        (ref as HTMLInputElement).type = this._tag as string;\n                    }\n                } else {\n                    ref = document.createElement(this._tag);\n                }\n            } else {\n                ref = document.createElementNS(SVG_NAMESPACE, this._tag);\n            }\n\n            if (this._props !== null) {\n                syncDOMProps(ref as Element, this._flags, null, this._props);\n            }\n            if (this._className !== null) {\n                syncClassName(ref as Element, this._flags, null, this._className);\n            }\n            if (this._style !== null) {\n                syncStyle(ref as HTMLElement, null, this._style);\n            }\n\n            return ref;\n        } else {\n            return ref.cloneNode(false) as Element;\n        }\n    }\n}\n\n/* tslint:disable:max-line-length */\n/**\n * Create an ElementDescriptor.\n *\n * @param tagName HTML Element tag name.\n * @param clone Enable DOM node cloning.\n * @returns ElementDescriptor object.\n */\nexport function createElementDescriptor(tagName: \"a\", clone?: boolean): ElementDescriptor<HTMLAnchorElementProps | null>;\nexport function createElementDescriptor(tagName: \"abbr\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"acronym\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"address\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"applet\", clone?: boolean): ElementDescriptor<HTMLAppletElementProps | null>;\nexport function createElementDescriptor(tagName: \"area\", clone?: boolean): ElementDescriptor<HTMLAreaElementProps | null>;\nexport function createElementDescriptor(tagName: \"article\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"aside\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"b\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"base\", clone?: boolean): ElementDescriptor<HTMLBaseElementProps | null>;\nexport function createElementDescriptor(tagName: \"basefont\", clone?: boolean): ElementDescriptor<HTMLBaseFontElementProps | null>;\nexport function createElementDescriptor(tagName: \"bdo\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"big\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"blockquote\", clone?: boolean): ElementDescriptor<HTMLQuoteElementProps | null>;\nexport function createElementDescriptor(tagName: \"body\", clone?: boolean): ElementDescriptor<HTMLBodyElementProps | null>;\nexport function createElementDescriptor(tagName: \"br\", clone?: boolean): ElementDescriptor<HTMLBRElementProps | null>;\nexport function createElementDescriptor(tagName: \"button\", clone?: boolean): ElementDescriptor<HTMLButtonElementProps | null>;\nexport function createElementDescriptor(tagName: \"canvas\", clone?: boolean): ElementDescriptor<HTMLCanvasElementProps | null>;\nexport function createElementDescriptor(tagName: \"caption\", clone?: boolean): ElementDescriptor<HTMLTableCaptionElementProps | null>;\nexport function createElementDescriptor(tagName: \"center\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"cite\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"code\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"col\", clone?: boolean): ElementDescriptor<HTMLTableColElementProps | null>;\nexport function createElementDescriptor(tagName: \"colgroup\", clone?: boolean): ElementDescriptor<HTMLTableColElementProps | null>;\nexport function createElementDescriptor(tagName: \"datalist\", clone?: boolean): ElementDescriptor<HTMLDataListElementProps | null>;\nexport function createElementDescriptor(tagName: \"dd\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"del\", clone?: boolean): ElementDescriptor<HTMLModElementProps | null>;\nexport function createElementDescriptor(tagName: \"dfn\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"dir\", clone?: boolean): ElementDescriptor<HTMLDirectoryElementProps | null>;\nexport function createElementDescriptor(tagName: \"div\", clone?: boolean): ElementDescriptor<HTMLDivElementProps | null>;\nexport function createElementDescriptor(tagName: \"dl\", clone?: boolean): ElementDescriptor<HTMLDListElementProps | null>;\nexport function createElementDescriptor(tagName: \"dt\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"em\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"embed\", clone?: boolean): ElementDescriptor<HTMLEmbedElementProps | null>;\nexport function createElementDescriptor(tagName: \"fieldset\", clone?: boolean): ElementDescriptor<HTMLFieldSetElementProps | null>;\nexport function createElementDescriptor(tagName: \"figcaption\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"figure\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"font\", clone?: boolean): ElementDescriptor<HTMLFontElementProps | null>;\nexport function createElementDescriptor(tagName: \"footer\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"form\", clone?: boolean): ElementDescriptor<HTMLFormElementProps | null>;\nexport function createElementDescriptor(tagName: \"frame\", clone?: boolean): ElementDescriptor<HTMLFrameElementProps | null>;\nexport function createElementDescriptor(tagName: \"frameset\", clone?: boolean): ElementDescriptor<HTMLFrameSetElementProps | null>;\nexport function createElementDescriptor(tagName: \"h1\", clone?: boolean): ElementDescriptor<HTMLHeadingElementProps | null>;\nexport function createElementDescriptor(tagName: \"h2\", clone?: boolean): ElementDescriptor<HTMLHeadingElementProps | null>;\nexport function createElementDescriptor(tagName: \"h3\", clone?: boolean): ElementDescriptor<HTMLHeadingElementProps | null>;\nexport function createElementDescriptor(tagName: \"h4\", clone?: boolean): ElementDescriptor<HTMLHeadingElementProps | null>;\nexport function createElementDescriptor(tagName: \"h5\", clone?: boolean): ElementDescriptor<HTMLHeadingElementProps | null>;\nexport function createElementDescriptor(tagName: \"h6\", clone?: boolean): ElementDescriptor<HTMLHeadingElementProps | null>;\nexport function createElementDescriptor(tagName: \"head\", clone?: boolean): ElementDescriptor<HTMLHeadElementProps | null>;\nexport function createElementDescriptor(tagName: \"header\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"hgroup\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"hr\", clone?: boolean): ElementDescriptor<HTMLHRElementProps | null>;\nexport function createElementDescriptor(tagName: \"html\", clone?: boolean): ElementDescriptor<HTMLHtmlElementProps | null>;\nexport function createElementDescriptor(tagName: \"i\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"iframe\", clone?: boolean): ElementDescriptor<HTMLIFrameElementProps | null>;\nexport function createElementDescriptor(tagName: \"img\", clone?: boolean): ElementDescriptor<HTMLImageElementProps | null>;\nexport function createElementDescriptor(tagName: \"ins\", clone?: boolean): ElementDescriptor<HTMLModElementProps | null>;\nexport function createElementDescriptor(tagName: \"isindex\", clone?: boolean): ElementDescriptor<HTMLUnknownElementProps | null>;\nexport function createElementDescriptor(tagName: \"kbd\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"keygen\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"label\", clone?: boolean): ElementDescriptor<HTMLLabelElementProps | null>;\nexport function createElementDescriptor(tagName: \"legend\", clone?: boolean): ElementDescriptor<HTMLLegendElementProps | null>;\nexport function createElementDescriptor(tagName: \"li\", clone?: boolean): ElementDescriptor<HTMLLIElementProps | null>;\nexport function createElementDescriptor(tagName: \"link\", clone?: boolean): ElementDescriptor<HTMLLinkElementProps | null>;\nexport function createElementDescriptor(tagName: \"listing\", clone?: boolean): ElementDescriptor<HTMLPreElementProps | null>;\nexport function createElementDescriptor(tagName: \"map\", clone?: boolean): ElementDescriptor<HTMLMapElementProps | null>;\nexport function createElementDescriptor(tagName: \"mark\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"marquee\", clone?: boolean): ElementDescriptor<HTMLMarqueeElementProps | null>;\nexport function createElementDescriptor(tagName: \"menu\", clone?: boolean): ElementDescriptor<HTMLMenuElementProps | null>;\nexport function createElementDescriptor(tagName: \"meta\", clone?: boolean): ElementDescriptor<HTMLMetaElementProps | null>;\nexport function createElementDescriptor(tagName: \"meter\", clone?: boolean): ElementDescriptor<HTMLMeterElementProps | null>;\nexport function createElementDescriptor(tagName: \"nav\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"nextid\", clone?: boolean): ElementDescriptor<HTMLUnknownElementProps | null>;\nexport function createElementDescriptor(tagName: \"nobr\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"noframes\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"noscript\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"object\", clone?: boolean): ElementDescriptor<HTMLObjectElementProps | null>;\nexport function createElementDescriptor(tagName: \"ol\", clone?: boolean): ElementDescriptor<HTMLOListElementProps | null>;\nexport function createElementDescriptor(tagName: \"optgroup\", clone?: boolean): ElementDescriptor<HTMLOptGroupElementProps | null>;\nexport function createElementDescriptor(tagName: \"option\", clone?: boolean): ElementDescriptor<HTMLOptionElementProps | null>;\nexport function createElementDescriptor(tagName: \"p\", clone?: boolean): ElementDescriptor<HTMLParagraphElementProps | null>;\nexport function createElementDescriptor(tagName: \"param\", clone?: boolean): ElementDescriptor<HTMLParamElementProps | null>;\nexport function createElementDescriptor(tagName: \"picture\", clone?: boolean): ElementDescriptor<HTMLPictureElementProps | null>;\nexport function createElementDescriptor(tagName: \"plaintext\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"pre\", clone?: boolean): ElementDescriptor<HTMLPreElementProps | null>;\nexport function createElementDescriptor(tagName: \"progress\", clone?: boolean): ElementDescriptor<HTMLProgressElementProps | null>;\nexport function createElementDescriptor(tagName: \"q\", clone?: boolean): ElementDescriptor<HTMLQuoteElementProps | null>;\nexport function createElementDescriptor(tagName: \"rt\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"ruby\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"s\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"samp\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"script\", clone?: boolean): ElementDescriptor<HTMLScriptElementProps | null>;\nexport function createElementDescriptor(tagName: \"section\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"select\", clone?: boolean): ElementDescriptor<HTMLSelectElementProps | null>;\nexport function createElementDescriptor(tagName: \"small\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"source\", clone?: boolean): ElementDescriptor<HTMLSourceElementProps | null>;\nexport function createElementDescriptor(tagName: \"span\", clone?: boolean): ElementDescriptor<HTMLSpanElementProps | null>;\nexport function createElementDescriptor(tagName: \"strike\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"strong\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"style\", clone?: boolean): ElementDescriptor<HTMLStyleElementProps | null>;\nexport function createElementDescriptor(tagName: \"sub\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"sup\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"table\", clone?: boolean): ElementDescriptor<HTMLTableElementProps | null>;\nexport function createElementDescriptor(tagName: \"tbody\", clone?: boolean): ElementDescriptor<HTMLTableSectionElementProps | null>;\nexport function createElementDescriptor(tagName: \"td\", clone?: boolean): ElementDescriptor<HTMLTableDataCellElementProps | null>;\nexport function createElementDescriptor(tagName: \"template\", clone?: boolean): ElementDescriptor<HTMLTemplateElementProps | null>;\nexport function createElementDescriptor(tagName: \"textarea\", clone?: boolean): ElementDescriptor<HTMLTextAreaElementProps | null>;\nexport function createElementDescriptor(tagName: \"tfoot\", clone?: boolean): ElementDescriptor<HTMLTableSectionElementProps | null>;\nexport function createElementDescriptor(tagName: \"th\", clone?: boolean): ElementDescriptor<HTMLTableHeaderCellElementProps | null>;\nexport function createElementDescriptor(tagName: \"thead\", clone?: boolean): ElementDescriptor<HTMLTableSectionElementProps | null>;\nexport function createElementDescriptor(tagName: \"title\", clone?: boolean): ElementDescriptor<HTMLTitleElementProps | null>;\nexport function createElementDescriptor(tagName: \"tr\", clone?: boolean): ElementDescriptor<HTMLTableRowElementProps | null>;\nexport function createElementDescriptor(tagName: \"track\", clone?: boolean): ElementDescriptor<HTMLTrackElementProps | null>;\nexport function createElementDescriptor(tagName: \"tt\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"u\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"ul\", clone?: boolean): ElementDescriptor<HTMLUListElementProps | null>;\nexport function createElementDescriptor(tagName: \"var\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"wbr\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"x-ms-webview\", clone?: boolean): ElementDescriptor<MSHTMLWebViewElementProps | null>;\nexport function createElementDescriptor(tagName: \"xmp\", clone?: boolean): ElementDescriptor<HTMLPreElementProps | null>;\nexport function createElementDescriptor(tagName: HTMLTagType, clone = false): ElementDescriptor<HTMLElementProps | null> {\n    return new ElementDescriptor<HTMLElementProps | null>(\n        tagName,\n        clone === true ?\n            (ElementDescriptorFlags.Element | ElementDescriptorFlags.ElementDescriptor |\n                ElementDescriptorFlags.EnabledCloning) :\n            ElementDescriptorFlags.Element | ElementDescriptorFlags.ElementDescriptor,\n    );\n}\n\n/**\n * Create an ElementDescriptor with an SVG flag.\n *\n * @param tagName SVG Element tag name.\n * @param clone Enable DOM node cloning.\n * @returns VNodeBuilder object.\n */\nexport function createSVGElementDescriptor(tagName: \"circle\", clone?: boolean): ElementDescriptor<SVGCircleElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"clippath\", clone?: boolean): ElementDescriptor<SVGClipPathElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"defs\", clone?: boolean): ElementDescriptor<SVGDefsElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"desc\", clone?: boolean): ElementDescriptor<SVGDescElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"ellipse\", clone?: boolean): ElementDescriptor<SVGEllipseElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"feblend\", clone?: boolean): ElementDescriptor<SVGFEBlendElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"fecolormatrix\", clone?: boolean): ElementDescriptor<SVGFEColorMatrixElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"fecomponenttransfer\", clone?: boolean): ElementDescriptor<SVGFEComponentTransferElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"fecomposite\", clone?: boolean): ElementDescriptor<SVGFECompositeElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"feconvolvematrix\", clone?: boolean): ElementDescriptor<SVGFEConvolveMatrixElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"fediffuselighting\", clone?: boolean): ElementDescriptor<SVGFEDiffuseLightingElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"fedisplacementmap\", clone?: boolean): ElementDescriptor<SVGFEDisplacementMapElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"fedistantlight\", clone?: boolean): ElementDescriptor<SVGFEDistantLightElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"feflood\", clone?: boolean): ElementDescriptor<SVGFEFloodElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"fefunca\", clone?: boolean): ElementDescriptor<SVGFEFuncAElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"fefuncb\", clone?: boolean): ElementDescriptor<SVGFEFuncBElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"fefuncg\", clone?: boolean): ElementDescriptor<SVGFEFuncGElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"fefuncr\", clone?: boolean): ElementDescriptor<SVGFEFuncRElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"fegaussianblur\", clone?: boolean): ElementDescriptor<SVGFEGaussianBlurElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"feimage\", clone?: boolean): ElementDescriptor<SVGFEImageElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"femerge\", clone?: boolean): ElementDescriptor<SVGFEMergeElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"femergenode\", clone?: boolean): ElementDescriptor<SVGFEMergeNodeElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"femorphology\", clone?: boolean): ElementDescriptor<SVGFEMorphologyElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"feoffset\", clone?: boolean): ElementDescriptor<SVGFEOffsetElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"fepointlight\", clone?: boolean): ElementDescriptor<SVGFEPointLightElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"fespecularlighting\", clone?: boolean): ElementDescriptor<SVGFESpecularLightingElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"fespotlight\", clone?: boolean): ElementDescriptor<SVGFESpotLightElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"fetile\", clone?: boolean): ElementDescriptor<SVGFETileElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"feturbulence\", clone?: boolean): ElementDescriptor<SVGFETurbulenceElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"filter\", clone?: boolean): ElementDescriptor<SVGFilterElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"foreignobject\", clone?: boolean): ElementDescriptor<SVGForeignObjectElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"g\", clone?: boolean): ElementDescriptor<SVGGElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"image\", clone?: boolean): ElementDescriptor<SVGImageElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"line\", clone?: boolean): ElementDescriptor<SVGLineElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"lineargradient\", clone?: boolean): ElementDescriptor<SVGLinearGradientElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"marker\", clone?: boolean): ElementDescriptor<SVGMarkerElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"mask\", clone?: boolean): ElementDescriptor<SVGMaskElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"metadata\", clone?: boolean): ElementDescriptor<SVGMetadataElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"path\", clone?: boolean): ElementDescriptor<SVGPathElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"pattern\", clone?: boolean): ElementDescriptor<SVGPatternElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"polygon\", clone?: boolean): ElementDescriptor<SVGPolygonElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"polyline\", clone?: boolean): ElementDescriptor<SVGPolylineElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"radialgradient\", clone?: boolean): ElementDescriptor<SVGRadialGradientElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"rect\", clone?: boolean): ElementDescriptor<SVGRectElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"stop\", clone?: boolean): ElementDescriptor<SVGStopElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"svg\", clone?: boolean): ElementDescriptor<SVGSVGElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"switch\", clone?: boolean): ElementDescriptor<SVGSwitchElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"symbol\", clone?: boolean): ElementDescriptor<SVGSymbolElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"text\", clone?: boolean): ElementDescriptor<SVGTextElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"textpath\", clone?: boolean): ElementDescriptor<SVGTextPathElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"tspan\", clone?: boolean): ElementDescriptor<SVGTSpanElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"use\", clone?: boolean): ElementDescriptor<SVGUseElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"view\", clone?: boolean): ElementDescriptor<SVGViewElementProps | null>;\nexport function createSVGElementDescriptor(tagName: SVGTagType, clone = false): ElementDescriptor<SVGElementProps | null> {\n    return new ElementDescriptor<SVGElementProps | null>(\n        tagName,\n        clone === true ?\n            (ElementDescriptorFlags.EnabledCloning | ElementDescriptorFlags.Element |\n                ElementDescriptorFlags.ElementDescriptor | ElementDescriptorFlags.SvgElement) :\n            ElementDescriptorFlags.Element | ElementDescriptorFlags.ElementDescriptor | ElementDescriptorFlags.SvgElement,\n    );\n}\n\n/**\n * Create an Element Descriptor for HTMLInputElement node.\n *\n * @param type Input Element type. When type param has value \"textarea\", HTMLTextAreaElement will be created.\n * @param clone Enable DOM node cloning.\n * @returns VNodeBuilder object.\n */\nexport function createInputElementDescriptor(type: \"textarea\", clone?: boolean): ElementDescriptor<HTMLTextAreaElementProps | null>;\nexport function createInputElementDescriptor(type: \"button\", clone?: boolean): ElementDescriptor<HTMLInputElementProps | null>;\nexport function createInputElementDescriptor(type: \"checkbox\", clone?: boolean): ElementDescriptor<HTMLInputElementProps | null>;\nexport function createInputElementDescriptor(type: \"color\", clone?: boolean): ElementDescriptor<HTMLInputElementProps | null>;\nexport function createInputElementDescriptor(type: \"date\", clone?: boolean): ElementDescriptor<HTMLInputElementProps | null>;\nexport function createInputElementDescriptor(type: \"datetime\", clone?: boolean): ElementDescriptor<HTMLInputElementProps | null>;\nexport function createInputElementDescriptor(type: \"datetime-local\", clone?: boolean): ElementDescriptor<HTMLInputElementProps | null>;\nexport function createInputElementDescriptor(type: \"email\", clone?: boolean): ElementDescriptor<HTMLInputElementProps | null>;\nexport function createInputElementDescriptor(type: \"file\", clone?: boolean): ElementDescriptor<HTMLInputElementProps | null>;\nexport function createInputElementDescriptor(type: \"hidden\", clone?: boolean): ElementDescriptor<HTMLInputElementProps | null>;\nexport function createInputElementDescriptor(type: \"image\", clone?: boolean): ElementDescriptor<HTMLInputElementProps | null>;\nexport function createInputElementDescriptor(type: \"month\", clone?: boolean): ElementDescriptor<HTMLInputElementProps | null>;\nexport function createInputElementDescriptor(type: \"number\", clone?: boolean): ElementDescriptor<HTMLInputElementProps | null>;\nexport function createInputElementDescriptor(type: \"password\", clone?: boolean): ElementDescriptor<HTMLInputElementProps | null>;\nexport function createInputElementDescriptor(type: \"radio\", clone?: boolean): ElementDescriptor<HTMLInputElementProps | null>;\nexport function createInputElementDescriptor(type: \"range\", clone?: boolean): ElementDescriptor<HTMLInputElementProps | null>;\nexport function createInputElementDescriptor(type: \"reset\", clone?: boolean): ElementDescriptor<HTMLInputElementProps | null>;\nexport function createInputElementDescriptor(type: \"search\", clone?: boolean): ElementDescriptor<HTMLInputElementProps | null>;\nexport function createInputElementDescriptor(type: \"submit\", clone?: boolean): ElementDescriptor<HTMLInputElementProps | null>;\nexport function createInputElementDescriptor(type: \"tel\", clone?: boolean): ElementDescriptor<HTMLInputElementProps | null>;\nexport function createInputElementDescriptor(type: \"text\", clone?: boolean): ElementDescriptor<HTMLInputElementProps | null>;\nexport function createInputElementDescriptor(type: \"time\", clone?: boolean): ElementDescriptor<HTMLInputElementProps | null>;\nexport function createInputElementDescriptor(type: \"url\", clone?: boolean): ElementDescriptor<HTMLInputElementProps | null>;\nexport function createInputElementDescriptor(type: \"week\", clone?: boolean): ElementDescriptor<HTMLInputElementProps | null>;\nexport function createInputElementDescriptor(type: InputType, clone?: boolean): ElementDescriptor<HTMLInputElementProps | null> {\n    if (type === \"textarea\") {\n        return new ElementDescriptor<HTMLInputElementProps | null>(\n            type,\n            clone === true ?\n                (ElementDescriptorFlags.Element | ElementDescriptorFlags.ElementDescriptor |\n                    ElementDescriptorFlags.InputElement | ElementDescriptorFlags.TextAreaElement |\n                    ElementDescriptorFlags.EnabledCloning) :\n                (ElementDescriptorFlags.Element | ElementDescriptorFlags.ElementDescriptor |\n                    ElementDescriptorFlags.InputElement | ElementDescriptorFlags.TextAreaElement),\n        );\n    }\n    return new ElementDescriptor<HTMLInputElementProps | null>(\n        type,\n        clone === true ?\n            (ElementDescriptorFlags.Element | ElementDescriptorFlags.ElementDescriptor |\n                ElementDescriptorFlags.InputElement | ElementDescriptorFlags.EnabledCloning) :\n            (ElementDescriptorFlags.Element | ElementDescriptorFlags.ElementDescriptor |\n                ElementDescriptorFlags.InputElement),\n    );\n}\n\n/**\n * Create a VNodeBuilder representing an HTMLMediaElement node.\n *\n * @param tagName Media element tag name.\n * @param clone Enable DOM node cloning.\n * @returns VNodeBuilder object.\n */\nexport function createMediaElementDescriptor(tagName: \"audio\", clone?: boolean): ElementDescriptor<HTMLAudioElementProps | null>;\nexport function createMediaElementDescriptor(tagName: \"video\", clone?: boolean): ElementDescriptor<HTMLVideoElementProps | null>;\nexport function createMediaElementDescriptor(tagName: MediaTagType, clone?: boolean): ElementDescriptor<HTMLMediaElementProps | null> {\n    return new ElementDescriptor<HTMLInputElementProps | null>(\n        tagName,\n        clone === true ?\n            (ElementDescriptorFlags.Element | ElementDescriptorFlags.ElementDescriptor |\n                ElementDescriptorFlags.MediaElement | ElementDescriptorFlags.EnabledCloning) :\n            (ElementDescriptorFlags.Element | ElementDescriptorFlags.ElementDescriptor |\n                ElementDescriptorFlags.MediaElement),\n    );\n}\n\n/**\n * Create a VNodeBuilder representing a Custom Element.\n *\n * @param tagName Custom element tag name.\n * @param clone Enable DOM node cloning.\n * @returns VNodeBuilder object.\n */\nexport function createCustomElementDescriptor(tagName: string, clone = false): ElementDescriptor<{ [key: string]: any } | null> {\n    if (__IVI_DEV__) {\n        if (!isValidTag(tagName)) {\n            throw new Error(`Invalid tag: ${tagName}`);\n        }\n    }\n\n    return new ElementDescriptor<HTMLElementProps | null>(\n        tagName,\n        clone === true ?\n            (ElementDescriptorFlags.Element | ElementDescriptorFlags.ElementDescriptor |\n                ElementDescriptorFlags.WebComponent | ElementDescriptorFlags.EnabledCloning) :\n            ElementDescriptorFlags.Element | ElementDescriptorFlags.ElementDescriptor |\n            ElementDescriptorFlags.WebComponent,\n    );\n}\n/* tslint:enable:max-line-length */\n","import { Context } from \"../common/types\";\nimport { ConnectDescriptor } from \"./connect_descriptor\";\nimport { KeepAliveHandler } from \"./keep_alive\";\nimport { VNodeFlags } from \"./flags\";\nimport { ComponentFunction, ComponentClass } from \"./component\";\nimport { IVNode } from \"./ivnode\";\nimport { VNode } from \"./vnode\";\n\n/**\n * Create a VNodeBuilder representing a Component node.\n *\n * @param c Component factory.\n * @param props Component props.\n * @returns VNodeBuilder object.\n */\nexport function $c(c: ComponentFunction<void> | ComponentClass<void>): VNode<void>;\nexport function $c(c: ComponentFunction<null> | ComponentClass<null>): VNode<null>;\nexport function $c<P, U extends P>(c: ComponentFunction<P> | ComponentClass<P>, props: U): VNode<P>;\nexport function $c<P>(c: ComponentFunction<P> | ComponentClass<P>, props?: P): VNode<P> {\n    return new VNode<P>(\n        (c.prototype.render === undefined) ? VNodeFlags.ComponentFunction : VNodeFlags.ComponentClass,\n        c,\n        props!,\n        null,\n        null);\n}\n\nexport function $connect<I, O, P>(\n    connectDescriptor: ConnectDescriptor<I, O, P>,\n    props: P,\n): VNode<P> {\n    return new VNode<P>(\n        VNodeFlags.ComponentFunction | VNodeFlags.Connect,\n        connectDescriptor,\n        props,\n        null,\n        null,\n    );\n}\n\n/**\n * Placeholder function for Update Context components.\n *\n * It is used only in Dev Mode for stack traces.\n */\nfunction UpdateContext() {\n    /* tslint:disable:no-empty */\n    /* tslint:enable:no-empty */\n}\n\n/**\n * Create an update context VNode.\n *\n * @param context Context.\n * @param child Child VNode.\n * @returns VNodeBuilder object.\n */\nexport function $context<T = {}>(context: Context<T>, child: IVNode<any>): VNode<Context<T>> {\n    return new VNode<Context<T>>(\n        VNodeFlags.ComponentFunction | VNodeFlags.UpdateContext,\n        __IVI_DEV__ ? UpdateContext as () => IVNode<any> : null,\n        context,\n        null,\n        child);\n}\n\n/**\n * Create Keep Alive VNode.\n *\n * @param handler Keep Alive Handler.\n * @param child Child VNode.\n * @param props Props.\n * @returns VNodeBuilder object.\n */\nexport function $keepAlive<P>(\n    handler: (disposed: IVNode<any> | null, props: P) => IVNode<any> | null,\n    child: VNode<any>,\n    props: P,\n): VNode<P>;\nexport function $keepAlive(\n    handler: (disposed: IVNode<any> | null) => IVNode<any> | null,\n    child: VNode<any>,\n): VNode<null>;\nexport function $keepAlive<P>(\n    handler: KeepAliveHandler,\n    child: VNode<any>,\n    props?: P,\n): VNode<P> {\n    return new VNode<P>(\n        VNodeFlags.ComponentFunction | VNodeFlags.KeepAlive,\n        handler,\n        props === undefined ? null : props,\n        null,\n        child);\n}\n","import { Component, VNode, $h, $c, render, Events } from \"ivi\";\n\nclass TableCell extends Component<string> {\n    private onClick = Events.onClick((ev) => {\n        console.log(\"Click\", this.props);\n    });\n\n    render() {\n        return $h(\"td\", \"TableCell\")\n            .events(this.onClick)\n            .children(this.props);\n    }\n}\n\nfunction TableRow(p: TableItemState) {\n    const props = p[\"props\"];\n    const id = p[\"id\"];\n    const active = p[\"active\"];\n    const children = new Array<VNode<any>>(props.length + 1);\n    children[0] = $c(TableCell, \"#\" + id);\n    for (let i = 0; i < props.length; i++) {\n        children[i + 1] = $c(TableCell, props[i]);\n    }\n\n    return $h(\"tr\", active ? \"TableRow active\" : \"TableRow\")\n        .props({ \"data-id\": id })\n        .children(children);\n}\n\nfunction Table(p: TableState) {\n    const items = p[\"items\"];\n\n    const children = new Array<VNode<any>>(items.length);\n    for (let i = 0; i < items.length; i++) {\n        const item = items[i];\n        children[i] = $c(TableRow, item).key(item[\"id\"]);\n    }\n\n    return $h(\"table\", \"Table\").children(\n        $h(\"tbody\").children(children));\n}\n\nfunction AnimBox(p: AnimBoxState) {\n    const time = p[\"time\"];\n\n    return $h(\"div\", \"AnimBox\")\n        .props({ \"data-id\": p[\"id\"] })\n        .style({\n            \"background\": \"rgba(0,0,0,\" + (0.5 + ((time % 10) / 10)) + \")\",\n            \"border-radius\": (time % 10) + \"px\",\n        });\n}\n\nfunction Anim(p: AnimState) {\n    const items = p[\"items\"];\n\n    const children = new Array<VNode<any>>(items.length);\n    for (let i = 0; i < items.length; i++) {\n        const item = items[i];\n        children[i] = $c(AnimBox, item).key(item[\"id\"]);\n    }\n\n    return $h(\"div\", \"Anim\").children(children);\n}\n\nfunction TreeLeaf(p: TreeNodeState) {\n    return $h(\"li\", \"TreeLeaf\").children(p[\"id\"]);\n}\n\nfunction TreeNode(p: TreeNodeState) {\n    const data = p;\n    const children = new Array<VNode<any>>(data[\"children\"].length);\n    for (let i = 0; i < data[\"children\"].length; i++) {\n        const n = data[\"children\"][i];\n        const child = n[\"container\"] ? $c(TreeNode, n) : $c(TreeLeaf, n);\n        children[i] = child.key(n[\"id\"]);\n    }\n\n    return $h(\"ul\", \"TreeNode\")\n        .children(children);\n}\n\nfunction Tree(p: TreeState) {\n    return $h(\"div\", \"Tree\")\n        .children($c(TreeNode, p[\"root\"]));\n}\n\nfunction Main(p: AppState | undefined) {\n    if (!p) {\n        return $h(\"div\", \"Main\");\n    }\n\n    switch (p[\"location\"]) {\n        case \"table\":\n            return $h(\"div\", \"Main\").children($c(Table, p[\"table\"]));\n        case \"anim\":\n            return $h(\"div\", \"Main\").children($c(Anim, p[\"anim\"]));\n        default: // \"tree\"\n            return $h(\"div\", \"Main\").children($c(Tree, p[\"tree\"]));\n    }\n}\n\nuibench.init(\"ivi [fc]\", \"0.7.0\");\n\ndocument.addEventListener(\"DOMContentLoaded\", (e) => {\n    const container = document.querySelector(\"#App\")!;\n    render($c(Main, undefined), container);\n\n    uibench.run(\n        (state) => {\n            render($c(Main, state), container);\n        },\n        (samples) => {\n            render($h(\"pre\").children(JSON.stringify(samples, undefined, 2)), container);\n        },\n    );\n});\n"]}