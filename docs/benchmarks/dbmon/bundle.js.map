{"version":3,"sources":["node_modules/ivi/src/common/feature_detection.ts"," [synthetic:util/defineproperty] "," [synthetic:util/global] "," [synthetic:es6/symbol] "," [synthetic:es6/util/makeiterator] "," [synthetic:es6/util/inherits] "," [synthetic:es6/util/iteratorfromarray] "," [synthetic:util/polyfill] "," [synthetic:es6/array/keys] "," [synthetic:es6/promise] "," [synthetic:util/owns] "," [synthetic:es6/object/assign] "," [synthetic:es6/array/fill] "," [synthetic:es6/weakmap] "," [synthetic:es6/map] ","node_modules/ivi/src/common/user_agent.ts","node_modules/ivi/src/common/dom.ts","node_modules/ivi/src/common/noop.ts","node_modules/ivi/src/scheduler/clock.ts","node_modules/ivi/src/scheduler/task.ts","node_modules/ivi/src/scheduler/microtask.ts","node_modules/ivi/src/common/visibility.ts","node_modules/ivi/src/scheduler/frame_tasks_group.ts","node_modules/ivi/src/common/repeatable_task_list.ts","node_modules/ivi/src/scheduler/dom_reader.ts","node_modules/ivi/src/vdom/vnode.ts","node_modules/ivi/src/vdom/vnode_dom.ts","node_modules/ivi/src/vdom/ivnode.ts","node_modules/ivi/src/vdom/sync_dom.ts","node_modules/ivi/src/events/sync_events.ts","node_modules/ivi/src/scheduler/autofocus.ts","node_modules/ivi/src/vdom/implementation.ts","node_modules/ivi/src/events/utils.ts","node_modules/ivi/src/vdom/root.ts","src/benchmarks/dbmon/main.ts","node_modules/ivi/src/scheduler/frame.ts","node_modules/ivi/src/scheduler/animation.ts","node_modules/ivi/src/vdom/element_descriptor.ts","node_modules/ivi/src/vdom/vnode_components.ts","src/benchmarks/dbmon/db.ts","node_modules/perf-monitor/dist/es6/perf-monitor.js","node_modules/ivi/src/state/mutable.ts","node_modules/ivi/src/state/connect.ts","node_modules/ivi/src/vdom/component.ts"],"names":["$jscomp.defineProperty","$jscomp.global","$jscomp.initSymbol","$jscomp.global.Symbol","$jscomp.Symbol","$jscomp.symbolCounter_","$jscomp.SYMBOL_PREFIX","$jscomp.global.Symbol.iterator","$jscomp.arrayIterator","$jscomp.initSymbolIterator","$jscomp.iteratorPrototype","$jscomp.polyfill","$jscomp.iteratorFromArray","$jscomp.makeIterator","$jscomp.owns","FEATURES","opts","Object","defineProperty","get","window","addEventListener","e","SVGElement","prototype","KeyboardEvent","ua","navigator","userAgent","USER_AGENT","test","indexOf","setInnerHTML","element","content","isSVG","innerHTML","innerHTMLSVGContainer","svg","document","createElement","firstChild","appendChild","NOOP","_clock","_pending$1","_tasks","handleWindowMessage","ev","source","TASK_MESSAGE","data","tasks","i","length","_pending","_microtasks","_microtaskNode","_microtaskToggle","microtaskObserver","MutationObserver","runMicrotasks","createTextNode","observe","runMicrotasksInPromise","postMessage","push","_visible","_isHidden","_visibilityObservers","handleVisibilityChange","newVisible","hidden","constructor","FrameTasksGroup","_flags","_afterTasks","_readTasks","_writeTasks","write","task","read","RepeatableTaskList","add","run","last","pop","_readers","VNode","flags","tag","props","className","children","_children","_tag","_key","_props","_instance","_className","VNode.prototype","?.prototype","key","style","attrs","events","arguments","f","r","Array","j","k","c","value","checked","autofocus","focus","$h","tagName","undefined","getDOMInstanceFromVNode","node","syncClassName","b","setAttribute","syncStyle","a","keys","matchCount","bValue","aValue","hasOwnProperty","setDOMProperty","removeAttribute","charCodeAt","setAttributeNS","XML_NAMESPACE","XLINK_NAMESPACE","syncDOMProps","registerEventHandler","handler","dispatcher","registerHandler","unregisterEventHandler","unregisterHandler","attachEvents","h","detachEvents","_autofocusedElement","vNodeAttach","vnode","component","attached","vNodeDetach","syncFlags","vNodeDetachAll","detached","vnodes","vNodeUpdateComponents","parent","context","p","oldRoot","beforeUpdate","newRoot","render","vNodeSync","updated","connect","prevSelectData","selectData","select","prevChildren","out","assign","vNodeRemoveChild","removeChild","vNodeRender","instance","childNode","createElementNS","SVG_NAMESPACE","type","_ev","textContent","child","insertBefore","input","root","keepAlive","prev","vNodeRenderIntoAndAttach","refChild","vNodeEqualKeys","bFlags","nodeValue","aFlags","aAttrs","bAttrs","aStyle","bStyle","aEvents","bEvents","h1","h2","synced","bStart","aStart","aEnd","bEnd","aStartNode","bStartNode","aEndNode","bEndNode","bNode","nextRef","nextPos","next","aLength","bLength","sources","fill","moved","pos","aNode","keyIndex","Map","set","positionKeyIndex","slice","result","il","u","v","oldProps","newProps","propsChanged","isPropsChanged","newPropsReceived","fn","replaceChild","ROOTS","EMPTY_CONTEXT","_pendingUpdate","_globalSyncFlags","_update","container","currentVNode","invalidated","newVNode","onclick","$c","Main","store","getElementById","updateNextFrame","handleNextFrame","requestNextFrame","_nextFrame","_pending$2","_currentFrame","_requestNextFrame","requestAnimationFrame","Promise","resolve","then","frame","_animations","ret","_animatedComponents","handleVisibilityChange$1","visible","Query","elapsed","query","EMPTY_QUERY","DB","name","id","DB._nextId","queries","update","Math","floor","random","getTopFiveQueries","qs","sort","DBList","n","dbs","MonitorSamplesResult","min","max","mean","MonitorSamples","samples","maxSamples","MonitorMaxSamples","_i","addSample","each","calc","sum","frameTasks","rafId","scheduleNextFrameTask","Widget","_sync","this._sync","sync","_dirty","cssText","invalidate","Error","MonitorWidgetFlags","MonitorWidget","unitName","label","text","HideMin","minText","HideMax","maxText","HideMean","meanText","HideLast","lastText","HideGraph","canvas","width","MonitorGraphWidth","height","MonitorGraphHeight","ctx","getContext","$jscomp.inherits","scale","RoundValues","toFixed","round","toString","fillStyle","fillRect","checkInit","body","startFPSMonitor","now","fps","alpha","w","startMemMonitor","performance","memory","usedJSHeapSize","setTimeout","ProfilerDetails","widget","startTime","profilerInstances","initProfiler","profiler","mutations","N","location","search","substr","split","decodeURIComponent","replace","parseInt","parseFloat","Popover","$DBView","descriptor","selectDb","db","in","DatabaseView","topFiveQueries","count$$1","q","comps","minutes","seconds","ms","rows","tick","sliderContainer","display","slider","marginBottom","marginTop","Number","target"],"mappings":"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","file":"bundle.js","sourceRoot":"../../..","sourcesContent":["/**\n * Feature Detection is used to implement polyfills or just disable some features when browser doesn't support them.\n * For example, when browser doesn't support passive events, we can just ignore it and always use active events.\n *\n * NOTE: Do not implement feature detection for features that aren't used in `ivi` library.\n */\n\n/**\n * Feature Flags.\n */\nexport const enum FeatureFlags {\n    /**\n     * Passive event listeners are a new feature in the DOM spec that enable developers to opt-in to better scroll\n     * performance by eliminating the need for scrolling to block on touch and wheel event listeners. Developers can\n     * annotate touch and wheel listeners with {passive: true} to indicate that they will never invoke preventDefault.\n     *\n     * https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n     */\n    PassiveEvents = 1,\n    /**\n     * The `performancemark()` method creates a timestamp in the browser's performance entry buffer with the given\n     * name.\n     *\n     * https://developer.mozilla.org/en-US/docs/Web/API/Performance/mark\n     */\n    DevModePerfMarks = 1 << 1,\n    /**\n     * IE and some Edge versions doesn't support `innerHTML` on SVG elements.\n     */\n    SVGInnerHTML = 1 << 2,\n    /**\n     * `key` property on KeyboardEvent instances.\n     */\n    KeyboardEventKey = 1 << 3,\n    /**\n     * Browser supports native promises.\n     *\n     * IE11 and Android 4.4 doesn't support native promises.\n     */\n    // NativePromise = 1 << 4,\n}\n\n/**\n * Supported Features, see `FeatureFlags` for details.\n */\nexport let FEATURES: FeatureFlags = 0;\n\nif (__IVI_BROWSER__) {\n    /**\n     * Passive Events:\n     *\n     * https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n     */\n    try {\n        // Test via a getter in the options object to see if the passive property is accessed\n        const opts = Object.defineProperty({}, \"passive\", {\n            get() {\n                FEATURES |= FeatureFlags.PassiveEvents;\n            },\n        });\n        window.addEventListener(\"test\", null as any as (ev: Event) => void, opts);\n    } catch (e) {\n        /* tslint:disable:no-empty */\n        /* tslint:enable:no-empty */\n    }\n\n    /**\n     * Check `performance.mark` availability.\n     */\n    if (__IVI_DEV__) {\n        if (performance && performance.mark && performance.measure) {\n            FEATURES |= FeatureFlags.DevModePerfMarks;\n        }\n    }\n\n    /**\n     * Check `innerHTML` availability in `SVGElement`s.\n     */\n    if (\"innerHTML\" in SVGElement.prototype) {\n        FEATURES |= FeatureFlags.SVGInnerHTML;\n    }\n\n    /**\n     * Check `key` availability in `KeyboardEvent`s.\n     */\n    if (\"key\" in KeyboardEvent.prototype) {\n        FEATURES |= FeatureFlags.KeyboardEventKey;\n    }\n\n    /**\n     * Check native `Promise` availability.\n     */\n    // if (typeof Promise !== \"undefined\" && Promise.toString().indexOf(\"native code\") > -1) {\n    //     FEATURES |= FeatureFlags.NativePromise;\n    // }\n}\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,"/**\n * User Agent detection is used to fix some quirks like iOS event bubbling, etc.\n *\n * NOTE: Do not implement any browser detection that aren't used in `ivi` library.\n */\n\nconst ua = __IVI_BROWSER__ && navigator ? navigator.userAgent : \"\";\n\n/**\n * User Agent Flags.\n */\nexport const enum UserAgentFlags {\n    /**\n     * iOS browser (iPad, iPhone, iPod).\n     */\n    iOS = 1,\n    /**\n     * iOS full screen mode.\n     */\n    iOSStandalone = 1 << 1,\n    /**\n     * Android browser.\n     */\n    Android = 1 << 2,\n};\n\n/**\n * User Agent, see `UserAgentFlags` for details.\n */\nexport let USER_AGENT: UserAgentFlags = 0;\n\nif (__IVI_BROWSER__) {\n    if (/iPad|iPhone|iPod/.test(ua) && !(\"MSStream\" in window)) {\n        USER_AGENT |= (\"standalone\" in navigator) ?\n            UserAgentFlags.iOS | UserAgentFlags.iOSStandalone :\n            UserAgentFlags.iOS;\n    }\n\n    if (ua.indexOf(\"Android\") > -1) {\n        USER_AGENT |= UserAgentFlags.Android;\n    }\n}\n","/**\n * Miscellaneous DOM related stuff.\n */\nimport { FeatureFlags, FEATURES } from \"./feature_detection\";\n\nexport const SVG_NAMESPACE = \"http://www.w3.org/2000/svg\";\nexport const XLINK_NAMESPACE = \"http://www.w3.org/1999/xlink\";\nexport const XML_NAMESPACE = \"http://www.w3.org/XML/1998/namespace\";\n\n/**\n * KeyboardEvent keyCode values.\n */\nexport const enum KeyCode {\n    WinKeyFFLinux = 0,\n    MacEnter = 3,\n    Backspace = 8,\n    Tab = 9,\n    Clear = 12,\n    Enter = 13,\n    Shift = 16,\n    Control = 17,\n    Alt = 18,\n    Pause = 19,\n    CapsLock = 20,\n    Escape = 27,\n    Space = 32,\n    PageUp = 33,\n    PageDown = 34,\n    End = 35,\n    Home = 36,\n    ArrowLeft = 37,\n    ArrowUp = 38,\n    ArrowRight = 39,\n    ArrowDown = 40,\n    NumNorthEast = 33,\n    NumSouthEast = 34,\n    NumSouthWest = 35,\n    NumNorthWest = 36,\n    NumWest = 37,\n    NumNorth = 38,\n    NumEast = 39,\n    NumSouth = 40,\n    PrintScreen = 44,\n    Insert = 45,\n    NumInsert = 45,\n    Delete = 46,\n    NumDelete = 46,\n    Zero = 48,\n    Ono = 49,\n    Two = 50,\n    Three = 51,\n    Four = 52,\n    Five = 53,\n    Six = 54,\n    Seven = 55,\n    Eight = 56,\n    Nine = 57,\n    FFSemicolon = 59,\n    FFEquals = 61,\n    /**\n     * US keyboard layouts only.\n     */\n    QuestionMark = 63,\n    A = 65,\n    B = 66,\n    C = 67,\n    D = 68,\n    E = 69,\n    F = 70,\n    G = 71,\n    H = 72,\n    I = 73,\n    J = 74,\n    K = 75,\n    L = 76,\n    M = 77,\n    N = 78,\n    O = 79,\n    P = 80,\n    Q = 81,\n    R = 82,\n    S = 83,\n    T = 84,\n    U = 85,\n    V = 86,\n    W = 87,\n    X = 88,\n    Y = 89,\n    Z = 90,\n    Meta = 91,\n    WinKeyLeft = 91,\n    WinKeyRight = 92,\n    ContextMenu = 93,\n    NumZero = 96,\n    NumOne = 97,\n    NumTwo = 98,\n    NumThree = 99,\n    NumFour = 100,\n    NumFive = 101,\n    NumSix = 102,\n    NumSeven = 103,\n    NumEight = 104,\n    NumNine = 105,\n    NumMultiply = 106,\n    NumPlus = 107,\n    NumMinus = 109,\n    NumPeriod = 110,\n    NumDivision = 111,\n    F1 = 112,\n    F2 = 113,\n    F3 = 114,\n    F4 = 115,\n    F5 = 116,\n    F6 = 117,\n    F7 = 118,\n    F8 = 119,\n    F9 = 120,\n    F10 = 121,\n    F11 = 122,\n    F12 = 123,\n    NumLock = 144,\n    ScrollLock = 145,\n    /**\n     * First OS specific media key.\n     */\n    FirstMediaKey = 166,\n    /**\n     * Last OS specific media key.\n     */\n    LastMediaKey = 183,\n    /**\n     * US keyboard layouts only.\n     */\n    Semicolon = 186,\n    /**\n     * US keyboard layouts only.\n     */\n    Dash = 189,\n    /**\n     * US keyboard layouts only.\n     */\n    Equals = 187,\n    /**\n     * US keyboard layouts only.\n     */\n    Comma = 188,\n    /**\n     * US keyboard layouts only.\n     */\n    Period = 190,\n    /**\n     * US keyboard layouts only.\n     */\n    Slash = 191,\n    /**\n     * US keyboard layouts only.\n     */\n    Apostrophe = 192,\n    /**\n     * US keyboard layouts only.\n     */\n    Tilde = 192,\n    /**\n     * US keyboard layouts only.\n     */\n    SingleQuote = 222,\n    /**\n     * US keyboard layouts only.\n     */\n    OpenSquareBracket = 219,\n    /**\n     * US keyboard layouts only.\n     */\n    Backslash = 220,\n    /**\n     * US keyboard layouts only.\n     */\n    CloseSquareBracket = 221,\n    Win = 224,\n    MacFFMeta = 224,\n    WinIME = 229,\n}\n\n/**\n * KeyboardEvent keyLocation values.\n */\nexport const enum KeyLocation {\n    Standard = 0,\n    Left = 1,\n    Right = 2,\n    NumPad = 3,\n    Mobile = 4,\n    Joystick = 5,\n}\n\n/**\n * Flags for MouseEvent buttons property.\n *\n * Buttons property aren't widely supported by all major browsers at this time, and there is no easy way to polyfill\n * it.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons\n */\nexport const enum MouseButtons {\n    Left = 1,\n    Right = 1 << 1,\n    /**\n     * Wheel or middle button.\n     */\n    Middle = 1 << 2,\n    /**\n     * Typically the \"Browser Back\" button.\n     */\n    Fourh = 1 << 3,\n    /**\n     * Typically the \"Browser Forward\" button.\n     */\n    Fifth = 1 << 4,\n}\n\n/**\n * Gets target element from an Event.\n *\n * There are still some differences in modern browsers, so we need to get event targets with this function.\n *\n * #quirks\n *\n * @param ev Event.\n * @returns Target Element.\n */\nexport function getEventTarget(ev: Event): EventTarget {\n    let target = ev.target || window;\n\n    /**\n     * Some browsers are implementing it according to SVG 1.1 specs:\n     *\n     * https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/7998724/\n     *\n     * \"If event attributes are assigned to referenced elements, then the actual target for the event will be the\n     * SVGElementInstance object within the 'instance tree' corresponding to the given referenced element.\"\n     *\n     * https://www.w3.org/TR/SVG/struct.html#UseElement\n     *\n     * SVG 2 redefined the use event handling model:\n     *\n     * - Removed the SVGElementInstance and SVGElementInstanceList interfaces, and the corresponding attributes on the\n     *   SVGUseElement interface.\n     * - Changed the ‘use’ element event flow to follow the Shadow DOM spec.\n     *\n     * https://www.w3.org/TR/SVG2/changes.html#structure\n     */\n    if ((target as any).correspondingUseElement) {\n        target = (target as any).correspondingUseElement;\n    }\n\n    /**\n     * Safari fires events on Text Nodes.\n     *\n     * http://www.quirksmode.org/js/events_properties.html\n     */\n    return (target as Node).nodeType === 3 ? (target as Node).parentNode! : target;\n}\n\nconst KEY_CODE_TO_KEY: { [key: number]: string } = {\n    8: \"Backspace\",\n    9: \"Tab\",\n    12: \"Clear\",\n    13: \"Enter\",\n    16: \"Shift\",\n    17: \"Control\",\n    18: \"Alt\",\n    19: \"Pause\",\n    20: \"CapsLock\",\n    27: \"Escape\",\n    32: \" \",\n    33: \"PageUp\",\n    34: \"PageDown\",\n    35: \"End\",\n    36: \"Home\",\n    37: \"ArrowLeft\",\n    38: \"ArrowUp\",\n    39: \"ArrowRight\",\n    40: \"ArrowDown\",\n    44: \"PrintScreen\",\n    45: \"Insert\",\n    46: \"Delete\",\n    91: \"Meta\",\n    112: \"F1\",\n    113: \"F2\",\n    114: \"F3\",\n    115: \"F4\",\n    116: \"F5\",\n    117: \"F6\",\n    118: \"F7\",\n    119: \"F8\",\n    120: \"F9\",\n    121: \"F10\",\n    122: \"F11\",\n    123: \"F12\",\n    144: \"NumLock\",\n    145: \"ScrollLock\",\n    224: \"Win\",\n};\n\n/**\n * Gets a `charCode` from a KeyboardEvent.\n *\n * #quirks\n *\n * @param ev Keyboard Event\n * @returns A char code.\n */\nexport function getEventCharCode(ev: KeyboardEvent): number {\n    const keyCode = ev.keyCode;\n    let charCode = ev.charCode;\n\n    if (charCode === 0 && keyCode === 13) {\n        charCode = 13;\n    }\n\n    if (charCode >= 32 || charCode === 13) {\n        return charCode;\n    }\n\n    return 0;\n}\n\n/**\n * Gets a `key` from a KeybordEvent.\n *\n * #quirks\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key\n *\n * @param ev Keyboard Event.\n * @returns A `key` property.\n */\nexport function getEventKey(ev: KeyboardEvent): string {\n    if (ev.type === \"keypress\") {\n        const charCode = getEventCharCode(ev);\n        if (charCode === 13) {\n            return \"Enter\";\n        }\n        return String.fromCharCode(charCode);\n    } else if (ev.type === \"keydown\" || ev.type === \"keyup\") {\n        const key = KEY_CODE_TO_KEY[ev.keyCode];\n        if (key !== undefined) {\n            return key;\n        }\n    }\n\n    return \"Unidentified\";\n}\n\n/**\n * Set inner HTML.\n *\n * #quirks\n *\n * @param element DOM Element.\n * @param content Inner HTML content.\n * @param isSVG Element is SVG.\n */\nexport function setInnerHTML(element: Element, content: string, isSVG: boolean): void {\n    // #msapp\n    //\n    // innerHTML should be invoked inside an unsafe context `MSApp.execUnsafeLocalFunction`\n    // All details here: https://msdn.microsoft.com/en-us/library/windows/apps/hh767331.aspx\n\n    // Doesn't work on SVG Elements in IE. Latest Edge versions are working fine.\n    if (!isSVG || FEATURES & FeatureFlags.SVGInnerHTML) {\n        element.innerHTML = content;\n    } else {\n        setInnerSVG(element as SVGElement, content);\n    }\n}\n\n/**\n * Container for SVG Elements.\n *\n * #quirks\n */\nlet innerHTMLSVGContainer: HTMLDivElement | undefined;\n\n/**\n * Set innerHTML on SVG elements in browsers that doesn't support innerHTML on SVG elements.\n *\n * #quirks\n *\n * @param element SVG element.\n * @param content Inner HTML content.\n */\nfunction setInnerSVG(element: SVGElement, content: string): void {\n    if (!innerHTMLSVGContainer) {\n        innerHTMLSVGContainer = document.createElement(\"div\");\n    }\n    innerHTMLSVGContainer.innerHTML = `<svg>${content}</svg>`;\n    const svg = innerHTMLSVGContainer.firstChild;\n    while (svg!.firstChild) {\n        element.appendChild(svg!.firstChild!);\n    }\n}\n\n/**\n * Traverses the DOM to the top and calculates DOM Node depth.\n *\n * @param node DOM Node.\n * @returns DOM Node depth.\n */\nexport function nodeDepth(node: Node | null): number {\n    let depth = 0;\n    while (node) {\n        depth++;\n        node = node.parentNode;\n    }\n    return depth;\n}\n\n/**\n * Finds a first leaf node.\n *\n * @param node DOM Node.\n * @return A leaf node.\n */\nexport function firstLeaf(node: Node): Node {\n    while (node && node.firstChild) {\n        node = node.firstChild;\n    }\n    return node;\n}\n\n/**\n * Finds a next sibling node.\n *\n * @param node DOM Node.\n * @return Next sibling.\n */\nexport function nextSibling(node: Node | null): Node | null {\n    while (node) {\n        if (node.nextSibling) {\n            return node.nextSibling;\n        }\n        node = node.parentNode;\n    }\n    return null;\n}\n\nexport type HTMLTagType =\n    \"a\" |\n    \"abbr\" |\n    \"acronym\" |\n    \"address\" |\n    \"applet\" |\n    \"area\" |\n    \"article\" |\n    \"aside\" |\n    \"b\" |\n    \"base\" |\n    \"basefont\" |\n    \"bdo\" |\n    \"big\" |\n    \"blockquote\" |\n    \"body\" |\n    \"br\" |\n    \"button\" |\n    \"canvas\" |\n    \"caption\" |\n    \"center\" |\n    \"cite\" |\n    \"code\" |\n    \"col\" |\n    \"colgroup\" |\n    \"datalist\" |\n    \"dd\" |\n    \"del\" |\n    \"dfn\" |\n    \"dir\" |\n    \"div\" |\n    \"dl\" |\n    \"dt\" |\n    \"em\" |\n    \"embed\" |\n    \"fieldset\" |\n    \"figcaption\" |\n    \"figure\" |\n    \"font\" |\n    \"footer\" |\n    \"form\" |\n    \"frame\" |\n    \"frameset\" |\n    \"h1\" |\n    \"h2\" |\n    \"h3\" |\n    \"h4\" |\n    \"h5\" |\n    \"h6\" |\n    \"head\" |\n    \"header\" |\n    \"hgroup\" |\n    \"hr\" |\n    \"html\" |\n    \"i\" |\n    \"iframe\" |\n    \"img\" |\n    \"ins\" |\n    \"isindex\" |\n    \"kbd\" |\n    \"keygen\" |\n    \"label\" |\n    \"legend\" |\n    \"li\" |\n    \"link\" |\n    \"listing\" |\n    \"map\" |\n    \"mark\" |\n    \"marquee\" |\n    \"menu\" |\n    \"meta\" |\n    \"meter\" |\n    \"nav\" |\n    \"nextid\" |\n    \"nobr\" |\n    \"noframes\" |\n    \"noscript\" |\n    \"object\" |\n    \"ol\" |\n    \"optgroup\" |\n    \"option\" |\n    \"p\" |\n    \"param\" |\n    \"picture\" |\n    \"plaintext\" |\n    \"pre\" |\n    \"progress\" |\n    \"q\" |\n    \"rt\" |\n    \"ruby\" |\n    \"s\" |\n    \"samp\" |\n    \"script\" |\n    \"section\" |\n    \"select\" |\n    \"small\" |\n    \"source\" |\n    \"span\" |\n    \"strike\" |\n    \"strong\" |\n    \"style\" |\n    \"sub\" |\n    \"sup\" |\n    \"table\" |\n    \"tbody\" |\n    \"td\" |\n    \"template\" |\n    \"textarea\" |\n    \"tfoot\" |\n    \"th\" |\n    \"thead\" |\n    \"title\" |\n    \"tr\" |\n    \"track\" |\n    \"tt\" |\n    \"u\" |\n    \"ul\" |\n    \"var\" |\n    \"wbr\" |\n    \"x-ms-webview\" |\n    \"xmp\";\n\nexport type SVGTagType =\n    \"circle\" |\n    \"clippath\" |\n    \"defs\" |\n    \"desc\" |\n    \"ellipse\" |\n    \"feblend\" |\n    \"fecolormatrix\" |\n    \"fecomponenttransfer\" |\n    \"fecomposite\" |\n    \"feconvolvematrix\" |\n    \"fediffuselighting\" |\n    \"fedisplacementmap\" |\n    \"fedistantlight\" |\n    \"feflood\" |\n    \"fefunca\" |\n    \"fefuncb\" |\n    \"fefuncg\" |\n    \"fefuncr\" |\n    \"fegaussianblur\" |\n    \"feimage\" |\n    \"femerge\" |\n    \"femergenode\" |\n    \"femorphology\" |\n    \"feoffset\" |\n    \"fepointlight\" |\n    \"fespecularlighting\" |\n    \"fespotlight\" |\n    \"fetile\" |\n    \"feturbulence\" |\n    \"filter\" |\n    \"foreignobject\" |\n    \"g\" |\n    \"image\" |\n    \"line\" |\n    \"lineargradient\" |\n    \"marker\" |\n    \"mask\" |\n    \"metadata\" |\n    \"path\" |\n    \"pattern\" |\n    \"polygon\" |\n    \"polyline\" |\n    \"radialgradient\" |\n    \"rect\" |\n    \"stop\" |\n    \"svg\" |\n    \"switch\" |\n    \"symbol\" |\n    \"text\" |\n    \"textpath\" |\n    \"tspan\" |\n    \"use\" |\n    \"view\";\n\nexport type MediaTagType =\n    \"audio\" |\n    \"video\";\n\nexport type InputType =\n    \"textarea\" | // not a real input type, just one exception for textarea elements\n    \"button\" |\n    \"checkbox\" |\n    \"color\" |\n    \"date\" |\n    \"datetime\" |\n    \"datetime-local\" |\n    \"email\" |\n    \"file\" |\n    \"hidden\" |\n    \"image\" |\n    \"month\" |\n    \"number\" |\n    \"password\" |\n    \"radio\" |\n    \"range\" |\n    \"reset\" |\n    \"search\" |\n    \"submit\" |\n    \"tel\" |\n    \"text\" |\n    \"time\" |\n    \"url\" |\n    \"week\";\n\nexport type KeyName =\n    \"Accept\" |\n    \"Add\" |\n    \"Again\" |\n    \"AllCandidates\" |\n    \"Alphanumeric\" |\n    \"Alt\" |\n    \"AltGraph\" |\n    \"Apps\" |\n    \"Attn\" |\n    \"BrowserBack\" |\n    \"BrowserFavorites\" |\n    \"BrowserForward\" |\n    \"BrowserHome\" |\n    \"BrowserRefresh\" |\n    \"BrowserSearch\" |\n    \"BrowserStop\" |\n    \"Camera\" |\n    \"CapsLock\" |\n    \"Clear\" |\n    \"CodeInput\" |\n    \"Compose\" |\n    \"Control\" |\n    \"Crsel\" |\n    \"Convert\" |\n    \"Copy\" |\n    \"Cut\" |\n    \"Decimal\" |\n    \"Divide\" |\n    \"Down\" |\n    \"DownLeft\" |\n    \"DownRight\" |\n    \"Eject\" |\n    \"End\" |\n    \"Enter\" |\n    \"EraseEof\" |\n    \"Execute\" |\n    \"Exsel\" |\n    \"Fn\" |\n    \"F1\" |\n    \"F2\" |\n    \"F3\" |\n    \"F4\" |\n    \"F5\" |\n    \"F6\" |\n    \"F7\" |\n    \"F8\" |\n    \"F9\" |\n    \"F10\" |\n    \"F11\" |\n    \"F12\" |\n    \"F13\" |\n    \"F14\" |\n    \"F15\" |\n    \"F16\" |\n    \"F17\" |\n    \"F18\" |\n    \"F19\" |\n    \"F20\" |\n    \"F21\" |\n    \"F22\" |\n    \"F23\" |\n    \"F24\" |\n    \"FinalMode\" |\n    \"Find\" |\n    \"FullWidth\" |\n    \"HalfWidth\" |\n    \"HangulMode\" |\n    \"HanjaMode\" |\n    \"Help\" |\n    \"Hiragana\" |\n    \"Home\" |\n    \"Insert\" |\n    \"JapaneseHiragana\" |\n    \"JapaneseKatakana\" |\n    \"JapaneseRomaji\" |\n    \"JunjaMode\" |\n    \"KanaMode\" |\n    \"KanjiMode\" |\n    \"Katakana\" |\n    \"LaunchApplication1\" |\n    \"LaunchApplication2\" |\n    \"LaunchMail\" |\n    \"Left\" |\n    \"Menu\" |\n    \"Meta\" |\n    \"MediaNextTrack\" |\n    \"MediaPlayPause\" |\n    \"MediaPreviousTrack\" |\n    \"MediaStop\" |\n    \"ModeChange\" |\n    \"NextCandidate\" |\n    \"Nonconvert\" |\n    \"NumLock\" |\n    \"PageDown\" |\n    \"PageUp\" |\n    \"Paste\" |\n    \"Pause\" |\n    \"Play\" |\n    \"Power\" |\n    \"PreviousCandidate\" |\n    \"PrintScreen\" |\n    \"Process\" |\n    \"Props\" |\n    \"Right\" |\n    \"RomanCharacters\" |\n    \"Scroll\" |\n    \"Select\" |\n    \"SelectMedia\" |\n    \"Separator\" |\n    \"Shift\" |\n    \"Soft1\" |\n    \"Soft2\" |\n    \"Soft3\" |\n    \"Soft4\" |\n    \"Stop\" |\n    \"Subtract\" |\n    \"SymbolLock\" |\n    \"Up\" |\n    \"UpLeft\" |\n    \"UpRight\" |\n    \"Undo\" |\n    \"VolumeDown\" |\n    \"VolumeMute\" |\n    \"VolumeUp\" |\n    \"Win\" |\n    \"Zoom\" |\n    \"Backspace\" |\n    \"Tab\" |\n    \"Cancel\" |\n    \"Esc\" |\n    \"Spacebar\" |\n    \"Del\" |\n    \"DeadGrave\" |\n    \"DeadEacute\" |\n    \"DeadCircumflex\" |\n    \"DeadTilde\" |\n    \"DeadMacron\" |\n    \"DeadBreve\" |\n    \"DeadAboveDot\" |\n    \"DeadUmlaut\" |\n    \"DeadAboveRing\" |\n    \"DeadDoubleacute\" |\n    \"DeadCaron\" |\n    \"DeadCedilla\" |\n    \"DeadOgonek\" |\n    \"DeadIota\" |\n    \"DeadVoicedSound\" |\n    \"DeadSemivoicedSound\" |\n    \"Unidentified\";\n","\n/**\n * NOOP function.\n */\nexport function NOOP() {\n    /* tslint:disable:no-empty */\n    /* tslint:enable:no-empty */\n}\n\n/**\n * NOOP function that always returns `false` value.\n *\n * @returns `false` value.\n */\nexport function NOOP_FALSE(): boolean {\n    return false;\n}\n","\nlet _clock = 0;\n\n/**\n * Monotonically increasing clock.\n *\n * @returns current clock value.\n */\nexport function clock(): number {\n    return _clock;\n}\n\n/**\n * Increment clock value.\n */\nexport function incrementClock(): void {\n    _clock++;\n}\n","import { incrementClock } from \"./clock\";\n\nlet _pending = false;\nlet _tasks: (() => void)[] = [];\n\n/**\n * Message ID that will be used to trigger tasks execution.\n *\n * Multiple ivi instances in one document doesn't work for many reasons, so we just use the same uuid as a message ID.\n */\nconst TASK_MESSAGE = __IVI_BROWSER__ ? \"06526c5c-2dcc-4a4e-a86c-86f5dea6319d\" : undefined;\n\nif (__IVI_BROWSER__) {\n    // Task scheduler based on postMessage\n    window.addEventListener(\"message\", handleWindowMessage);\n}\n\n/**\n * Task scheduler event handler.\n *\n * @param ev Message event.\n */\nfunction handleWindowMessage(ev: MessageEvent): void {\n    if (ev.source === window && ev.data === TASK_MESSAGE) {\n        runTasks();\n    }\n}\n\nfunction runTasks(): void {\n    _pending = false;\n\n    let tasks = _tasks;\n    _tasks = [];\n    for (let i = 0; i < tasks.length; i++) {\n        tasks[i]();\n    }\n\n    incrementClock();\n}\n\n/**\n * Trigger tasks execution.\n */\nfunction requestTaskExecution(): void {\n    if (!_pending) {\n        _pending = true;\n        if (__IVI_BROWSER__) {\n            window.postMessage(TASK_MESSAGE, \"*\");\n        } else {\n            setImmediate(runTasks);\n        }\n    }\n}\n\n/**\n * Add task to the task queue.\n *\n * @param task\n */\nexport function scheduleTask(task: () => void): void {\n    requestTaskExecution();\n    _tasks.push(task);\n}\n","import { USER_AGENT, UserAgentFlags } from \"../common/user_agent\";\nimport { NOOP } from \"../common/noop\";\nimport { incrementClock } from \"./clock\";\nimport { scheduleTask } from \"./task\";\n\nlet _pending = false;\nlet _microtasks: (() => void)[] = [];\nlet _microtaskNode: Text;\nlet _microtaskToggle = 0;\n\nif (__IVI_BROWSER__) {\n    if (!(USER_AGENT & UserAgentFlags.iOSStandalone)) {\n        const microtaskObserver = new MutationObserver(runMicrotasks);\n        _microtaskNode = document.createTextNode(\"\");\n        microtaskObserver.observe(_microtaskNode, { \"characterData\": true });\n    }\n}\n\nfunction runMicrotasksInPromise(): void {\n    runMicrotasks();\n    /**\n     * #quirks\n     *\n     * Flush microtask queue.\n     * - iOS 8.3+\n     * - UIWebView 9.3.3+\n     *\n     * This function is running only on this browsers, so there is no need for an additional check.\n     */\n    scheduleTask(NOOP);\n}\n\nfunction runMicrotasks(): void {\n    while (_microtasks.length > 0) {\n        const tasks = _microtasks;\n        _microtasks = [];\n        for (let i = 0; i < tasks.length; i++) {\n            tasks[i]();\n        }\n        incrementClock();\n    }\n\n    _pending = false;\n}\n\n/**\n * Trigger microtasks execution.\n */\nfunction requestMicrotaskExecution(): void {\n    if (!_pending) {\n        _pending = true;\n        if (__IVI_BROWSER__) {\n            /**\n             * #quirks\n             *\n             * Following browsers have problems with microtasks implementation based on `MutationObserver`:\n             * - iOS 8.3+(full screen mode `navigator.standalone`)\n             * - UIWebView 9.3.3+\n             *\n             * Mutation events do not fire when code is executed in touch event context.\n             */\n            if (USER_AGENT & UserAgentFlags.iOSStandalone) {\n                Promise.resolve().then(runMicrotasksInPromise);\n            } else {\n                _microtaskToggle ^= 1;\n                _microtaskNode.nodeValue = _microtaskToggle ? \"1\" : \"0\";\n            }\n        } else {\n            process.nextTick(runMicrotasks);\n        }\n    }\n}\n\n/**\n * Add task to the microtask queue.\n *\n * @param task\n */\nexport function scheduleMicrotask(task: () => void): void {\n    requestMicrotaskExecution();\n    _microtasks.push(task);\n}\n","\nimport { scheduleMicrotask } from \"../scheduler/microtask\";\n\nlet _visible = true;\nlet _isHidden: () => boolean;\nlet _visibilityObservers: ((visible: boolean) => void)[] | undefined = (__IVI_BROWSER__) ? [] : undefined;\nlet _lock = false;\n\nexport function isVisible(): boolean {\n    if (__IVI_BROWSER__) {\n        return _visible;\n    }\n    return false;\n}\n\nexport function addVisibilityObserver(observer: (visible: boolean) => void): void {\n    if (__IVI_BROWSER__) {\n        _visibilityObservers!.push(observer);\n    }\n}\n\nexport function removeVisibilityObserver(observer: (visible: boolean) => void): void {\n    if (__IVI_BROWSER__) {\n        if (_lock) {\n            scheduleMicrotask(function () {\n                removeVisibilityObserver(observer);\n            });\n        } else {\n            const index = _visibilityObservers!.indexOf(observer);\n            if (index > -1) {\n                if (index === _visibilityObservers!.length) {\n                    _visibilityObservers!.pop();\n                } else {\n                    _visibilityObservers![index] = _visibilityObservers!.pop() !;\n                }\n            }\n        }\n    }\n}\n\nfunction handleVisibilityChange(): void {\n    const newVisible = !_isHidden();\n    if (_visible !== newVisible) {\n        _lock = true;\n        for (let i = 0; i < _visibilityObservers!.length; i++) {\n            _visibilityObservers![i](newVisible);\n        }\n        _lock = false;\n    }\n}\n\nif (__IVI_BROWSER__) {\n    if (typeof document[\"hidden\"] !== \"undefined\") {\n        _isHidden = function () {\n            return document.hidden;\n        };\n        document.addEventListener(\"visibilitychange\", handleVisibilityChange);\n    } else if (typeof (document as any)[\"webkitHidden\"] !== \"undefined\") {\n        /**\n         * #quirks\n         *\n         * Android 4.4\n         */\n        _isHidden = function () {\n            return (document as any)[\"webkitHidden\"];\n        };\n        document.addEventListener(\"webkitvisibilitychange\", handleVisibilityChange);\n    } else {\n        _isHidden = function () {\n            return true;\n        };\n    }\n    _visible = !_isHidden();\n}\n","\n/**\n * Frame Tasks Group flags.\n */\nexport const enum FrameTasksGroupFlags {\n    /**\n     * Group contains component update tasks.\n     */\n    Component = 1,\n    /**\n     * Group contains \"write\" tasks.\n     */\n    Write = 1 << 1,\n    /**\n     * Group contains \"read\" tasks\".\n     */\n    Read = 1 << 2,\n    /**\n     * Group contains \"after\" tasks.\n     */\n    After = 1 << 3,\n    /**\n     * Group is locked from reading and writing.\n     */\n    RWLock = 1 << 4,\n}\n\n/**\n * Frame tasks group contains tasks for updating components, read dom and write dom tasks, and tasks that should be\n * executed after all other tasks are finished.\n *\n * To get access to the frame tasks group, use: `currentFrame()` and `nextFrame()` scheduler methods.\n *\n *     scheduler.currentFrame().read(() => {\n *         console.log(element.clientWidth);\n *     });\n *\n * @final\n */\nexport class FrameTasksGroup {\n    /**\n     * See `FrameTasksGroupFlags` for details.\n     */\n    _flags: number;\n    /**\n     * Write DOM task queue.\n     */\n    _writeTasks: (() => void)[] | null;\n    /**\n     * Read DOM task queue.\n     */\n    _readTasks: (() => void)[] | null;\n    /**\n     * Tasks that should be executed when all other tasks are finished.\n     */\n    _afterTasks: (() => void)[] | null;\n\n    constructor() {\n        this._flags = 0;\n        this._writeTasks = null;\n        this._readTasks = null;\n        this._afterTasks = null;\n    }\n\n    /**\n     * Add Component to the components queue.\n     *\n     * @param component\n     */\n    updateComponent(): void {\n        if (__IVI_BROWSER__) {\n            if (__IVI_DEV__) {\n                if ((this._flags & FrameTasksGroupFlags.RWLock)) {\n                    throw new Error(\"Failed to add update component task to the current frame, current frame is \" +\n                        \"locked for read and write tasks.\");\n                }\n            }\n\n            this._flags |= FrameTasksGroupFlags.Component;\n        }\n    }\n\n    /**\n     * Add new task to the write DOM task queue.\n     *\n     * @param task\n     */\n    write(task: () => void): void {\n        if (__IVI_DEV__) {\n            if ((this._flags & FrameTasksGroupFlags.RWLock)) {\n                throw new Error(\"Failed to add update component task to the current frame, current frame is locked \" +\n                    \"for read and write tasks.\");\n            }\n        }\n\n        this._flags |= FrameTasksGroupFlags.Write;\n        if (this._writeTasks === null) {\n            this._writeTasks = [];\n        }\n        this._writeTasks.push(task);\n    }\n\n    /**\n     * Add new task to the read DOM task queue.\n     *\n     * @param task\n     */\n    read(task: () => void): void {\n        if (__IVI_DEV__) {\n            if ((this._flags & FrameTasksGroupFlags.RWLock)) {\n                throw new Error(\"Failed to add update component task to the current frame, current frame is locked \" +\n                    \"for read and write tasks.\");\n            }\n        }\n\n        this._flags |= FrameTasksGroupFlags.Read;\n        if (this._readTasks === null) {\n            this._readTasks = [];\n        }\n        this._readTasks.push(task);\n    }\n\n    /**\n     * Add new task to the task queue that will execute tasks when all DOM tasks are finished.\n     *\n     * @param task\n     */\n    after(task: () => void): void {\n        this._flags |= FrameTasksGroupFlags.After;\n        if (this._afterTasks === null) {\n            this._afterTasks = [];\n        }\n        this._afterTasks.push(task);\n    }\n\n    /**\n     * Lock read and write task queues.\n     *\n     * Works in DEBUG mode only.\n     */\n    _rwLock(): void {\n        if (__IVI_DEV__) {\n            this._flags |= FrameTasksGroupFlags.RWLock;\n        }\n    }\n\n    /**\n     * Unlock read and write task queue.\n     *\n     * Works in DEBUG mode only.\n     */\n    _rwUnlock(): void {\n        if (__IVI_DEV__) {\n            this._flags &= ~FrameTasksGroupFlags.RWLock;\n        }\n    }\n}\n","export class RepeatableTaskList {\n    tasks: Array<() => boolean | undefined>;\n\n    constructor() {\n        this.tasks = [];\n    }\n\n    add(task: () => boolean | undefined): void {\n        this.tasks.push(task);\n    }\n\n    run(): void {\n        for (let i = 0; i < this.tasks.length; i++) {\n            const task = this.tasks[i];\n            if (task()) {\n                const last = this.tasks.pop();\n                if (last) {\n                    this.tasks[i--] = last!;\n                }\n            }\n        }\n    }\n}\n","import { RepeatableTaskList } from \"../common/repeatable_task_list\";\n\nconst _readers = new RepeatableTaskList();\n\n/**\n * Add DOM Reader.\n *\n * DOM Reader will be be invoked on each frame in the read phase.\n *\n * @param reader Task that will be executed until it returns `false`.\n */\nexport function addDOMReader(reader: () => boolean | undefined): void {\n    if (__IVI_BROWSER__) {\n        _readers.add(reader);\n    }\n}\n\n/**\n * Execute DOM Reader tasks.\n */\nexport function executeDOMReaders(): void {\n    if (__IVI_BROWSER__) {\n        _readers.run();\n    }\n}\n","import { Context } from \"../common/types\";\nimport { checkDOMAttributesForTypos, checkDOMStylesForTypos, checkDeprecatedDOMSVGAttributes } from \"../dev_mode/typos\";\nimport { isVoidElement, isInputTypeHasCheckedProperty } from \"../dev_mode/dom\";\nimport { InputType } from \"../common/dom\";\nimport { IVNode, ElementProps } from \"./ivnode\";\nimport { VNodeFlags, ElementDescriptorFlags } from \"./flags\";\nimport { ComponentFunction, ComponentClass, Component } from \"./component\";\nimport { ElementDescriptor } from \"./element_descriptor\";\nimport { SelectorData, ConnectDescriptor } from \"./connect_descriptor\";\nimport { KeepAliveHandler } from \"./keep_alive\";\nimport { EventHandler } from \"../events/event_handler\";\nimport { CSSStyleProps } from \"../common/dom_props\";\n\n/**\n * VNode Builder provides a chain-method API to build VNodes.\n *\n * VNodeBuilder class has a parametric type `P` to specify `props` type.\n *\n *     const vnode = $h(\"div\", \"div-class-name\")\n *         .props({ id: \"div-id\" })\n *         .events(Events.onClick((e) => console.log(\"click event\", e)))\n *         .children(\"Hello\");\n *\n * There are several factory functions that create VNode Builder objects:\n *\n *     // Basic HTML Elements\n *     $h(tagName: string, className?: string): VNodeBuilder<HTMLElementProps | null>;\n *\n *     // SVG Elements\n *     $s(tagName: string, className?: string): VNodeBuilder<SVGElementProps | null>;\n *\n *     // Components\n *     $c<P>(component: ComponentClass<P> | ComponentFunction<P>, props: P): VNodeBuilder<P>;\n *\n *     // Input Elements and TextArea (specifying type as \"textarea\" will create HTMLTextAreaElement)\n *     $i(type: string, className?: string): VNodeBuilder<HTMLInputElementProps | HTMLTextAreaElementProps | null>;\n *\n *     // Media Elements (Video and Audio)\n *     $m(tagName: string, className?: string): VNodeBuilder<HTMLMediaElementProps | null>;\n *\n *     // Text Nodes\n *     $t(text: string): VNodeBuilder<null>;\n *\n * @final\n */\nexport class VNode<P = null> implements IVNode<P> {\n    _flags: VNodeFlags;\n    _children: IVNode<any>[] | IVNode<any> | string | number | boolean | null | undefined;\n    _tag: string | ComponentClass<any> | ComponentFunction<any> | ElementDescriptor<any> |\n    ConnectDescriptor<any, any, any> | KeepAliveHandler | null;\n    _key: any;\n    _props: ElementProps<P> | P | null;\n    _instance: Node | Component<any> | SelectorData | Context | null;\n    _className: string | null;\n\n    constructor(\n        flags: number,\n        tag: string | ComponentFunction<P> | ComponentClass<P> | ElementDescriptor<any> |\n            ConnectDescriptor<any, any, any> | KeepAliveHandler | null,\n        props: ElementProps<P> | P | null,\n        className: string | null,\n        children: IVNode<any>[] | IVNode<any> | string | number | boolean | null | undefined,\n    ) {\n        this._flags = flags;\n        this._children = children;\n        this._tag = tag;\n        this._key = 0;\n        this._props = props;\n        this._instance = null;\n        this._className = className;\n    }\n\n    /**\n     * Set key.\n     *\n     * Children reconciliation algorithm is using key property to find the same node in the previous children array. Key\n     * should be unique among its siblings.\n     *\n     * @param key Any object that should be unique among its siblings.\n     * @returns VNodeBuilder.\n     */\n    key(key: any): VNode<P> {\n        this._flags |= VNodeFlags.Key;\n        this._key = key;\n        return this;\n    }\n\n    /**\n     * Set className.\n     *\n     * @param className.\n     * @returns VNodeBuilder.\n     */\n    className(className: string | null): VNode<P> {\n        if (__IVI_DEV__) {\n            if (!(this._flags & VNodeFlags.Element)) {\n                throw new Error(\"Failed to set className, className is available on element nodes only.\");\n            }\n            if (className !== null) {\n                if (this._flags & VNodeFlags.ElementDescriptor) {\n                    const d = this._tag as ElementDescriptor<P>;\n                    if (d._flags & ElementDescriptorFlags.ProtectClassName) {\n                        throw new Error(\"Failed to set className, className is protected by an ElementDescriptor.\");\n                    }\n                }\n            }\n        }\n        this._className = className;\n        return this;\n    }\n\n    /**\n     * Set style.\n     *\n     * @param style.\n     * @returns VNodeBuilder.\n     */\n    style<U extends CSSStyleProps>(style: U | null): VNode<P> {\n        if (__IVI_DEV__) {\n            if (!(this._flags & VNodeFlags.Element)) {\n                throw new Error(\"Failed to set style, style is available on element nodes only.\");\n            }\n\n            if (style) {\n                checkDOMStylesForTypos(style);\n\n                if (this._flags & VNodeFlags.ElementDescriptor) {\n                    const d = this._tag as ElementDescriptor<P>;\n                    if (d._flags & ElementDescriptorFlags.ProtectStyle) {\n                        if (d._protectedStyle) {\n                            const keys = Object.keys(d._protectedStyle);\n                            for (let i = 0; i < keys.length; i++) {\n                                const key = keys[i];\n                                if (style.hasOwnProperty(key)) {\n                                    throw new Error(`Failed to set style, \"${key}\" style is protected by an ` +\n                                        `ElementDescriptor.`);\n                                }\n                            }\n                        } else {\n                            throw new Error(\"Failed to set style, style is protected by an ElementDescriptor.\");\n                        }\n                    }\n                }\n            }\n        }\n        if (this._props === null) {\n            this._flags |= VNodeFlags.ElementProps;\n            this._props = {\n                attrs: null,\n                style,\n                events: null,\n            };\n        } else {\n            (this._props as ElementProps<P>).style = style;\n        }\n        return this;\n    }\n\n    /**\n     * Set events.\n     *\n     * @param events.\n     * @returns VNodeBuilder.\n     */\n    events(events: Array<EventHandler | null> | EventHandler | null): VNode<P> {\n        if (__IVI_DEV__) {\n            if (!(this._flags & VNodeFlags.Element)) {\n                throw new Error(\"Failed to set events, events are available on element nodes only.\");\n            }\n        }\n        if (this._props === null) {\n            this._flags |= VNodeFlags.ElementProps;\n            this._props = {\n                attrs: null,\n                style: null,\n                events,\n            };\n        } else {\n            (this._props as ElementProps<P>).events = events;\n        }\n        return this;\n    }\n\n    /**\n     * Set props.\n     *\n     * @param props.\n     * @returns VNodeBuilder.\n     */\n    props<U extends P>(props: U | null): VNode<P> {\n        if (__IVI_DEV__) {\n            if (props) {\n                checkDOMAttributesForTypos(props);\n\n                if (this._flags & VNodeFlags.SvgElement) {\n                    checkDeprecatedDOMSVGAttributes(this._tag as string, props);\n                }\n\n                if (this._flags & VNodeFlags.ElementDescriptor) {\n                    const d = this._tag as ElementDescriptor<P>;\n                    if (d._flags & ElementDescriptorFlags.ProtectProps) {\n                        if (d._protectedProps) {\n                            const keys = Object.keys(d._protectedProps);\n                            for (let i = 0; i < keys.length; i++) {\n                                const key = keys[i];\n                                if (props.hasOwnProperty(key)) {\n                                    throw new Error(`Failed to set props, \"${key}\" property is protected by an ` +\n                                        `ElementDescriptor.`);\n                                }\n                            }\n                        } else {\n                            throw new Error(\"Failed to set props, props are protected by an ElementDescriptor.\");\n                        }\n                    }\n                }\n            }\n        }\n        if (this._props === null) {\n            this._flags |= VNodeFlags.ElementProps;\n            this._props = {\n                attrs: props,\n                style: null,\n                events: null,\n            };\n        } else {\n            (this._props as ElementProps<P>).attrs = props;\n        }\n        return this;\n    }\n\n    /**\n     * Set children.\n     *\n     * @param children Children can be a simple string, single VNode or recursive list of VNodes with strings and null\n     *   values. It will automatically normalize recursive lists by flattening, filtering out null values and replacing\n     *   strings with text nodes.\n     * @returns VNodeBuilder.\n     */\n    children(...children: Array<IVNode<any>[] | IVNode<any> | string | number | null>): VNode<P>;\n    children(): VNode<P> {\n        if (__IVI_DEV__) {\n            if (this._flags &\n                (VNodeFlags.ChildrenArray |\n                    VNodeFlags.ChildrenVNode |\n                    VNodeFlags.ChildrenBasic |\n                    VNodeFlags.UnsafeHTML)) {\n                throw new Error(\"Failed to set children, VNode element is already having children.\");\n            }\n            if (!(this._flags & VNodeFlags.Element)) {\n                throw new Error(\"Failed to set children, children are available on element nodes only.\");\n            }\n            if (this._flags & VNodeFlags.InputElement) {\n                throw new Error(\"Failed to set children, input elements can't have children.\");\n            }\n            if (this._flags & VNodeFlags.MediaElement) {\n                throw new Error(\"Failed to set children, media elements can't have children.\");\n            }\n            if (isVoidElement(this._tag as string)) {\n                throw new Error(`Failed to set children, ${this._tag} elements can't have children.`);\n            }\n        }\n\n        const children = arguments;\n        let f = 0;\n        let r = null;\n        if (children.length === 1) {\n            r = children[0] as IVNode<any>[] | IVNode<any> | string | number | null;\n            if (typeof r === \"object\") {\n                if (r !== null) {\n                    if (r.constructor === Array) {\n                        r = r as IVNode<any>[];\n                        if (r.length > 1) {\n                            f = VNodeFlags.ChildrenArray;\n                        } else if (r.length === 1) {\n                            f = VNodeFlags.ChildrenVNode;\n                            r = r[0];\n                        } else {\n                            r = null;\n                        }\n                    } else {\n                        f = VNodeFlags.ChildrenVNode;\n                    }\n                }\n            } else {\n                f = VNodeFlags.ChildrenBasic;\n            }\n        } else {\n            let i;\n            let j = 0;\n            let k = 0;\n            let c;\n            for (i = 0; i < children.length; i++) {\n                c = children[i];\n                if (c !== null) {\n                    if (c.constructor === Array) {\n                        if (c.length > 0) {\n                            k += c.length;\n                            j++;\n                            r = c;\n                        }\n                    } else {\n                        k++;\n                        j++;\n                        r = c;\n                    }\n                }\n            }\n            if (j > 0) {\n                if ((j | k) === 1) {\n                    if (typeof r === \"object\") {\n                        if (r.constructor === Array) {\n                            if (k > 1) {\n                                f = VNodeFlags.ChildrenArray;\n                            } else {\n                                f = VNodeFlags.ChildrenVNode;\n                                r = r[0];\n                            }\n                        } else {\n                            f = VNodeFlags.ChildrenVNode;\n                        }\n                    } else {\n                        f = VNodeFlags.ChildrenBasic;\n                    }\n                } else {\n                    f = VNodeFlags.ChildrenArray;\n                    r = new Array(k);\n                    k = 0;\n                    for (i = 0; i < children.length; i++) {\n                        c = children[i];\n                        if (typeof c === \"object\") {\n                            if (c !== null) {\n                                if (c.constructor === Array) {\n                                    for (j = 0; j < c.length; j++) {\n                                        if (__IVI_DEV__) {\n                                            if (!(c[j]._flags & VNodeFlags.Key)) {\n                                                throw new Error(\"Invalid children array. All children nodes in nested\" +\n                                                    \" array should have explicit keys.\");\n                                            }\n                                        }\n                                        r[k++] = c[j] as IVNode<any>;\n                                    }\n                                } else {\n                                    r[k++] = c as IVNode<any>;\n                                    if (!(c._flags & VNodeFlags.Key)) {\n                                        c._key = i;\n                                    }\n                                }\n                            }\n                        } else {\n                            c = r[k++] = new VNode<null>(VNodeFlags.Text, null, null, null, c as string | number);\n                            c._key = i;\n                        }\n                    }\n                    checkUniqueKeys(r);\n                }\n            }\n        }\n        this._flags |= f;\n        this._children = r;\n        return this;\n    }\n\n    /**\n     * Set children as an innerHTML string. It is potentially vulnerable to XSS attacks.\n     *\n     * @param html innerHTML in a string format.\n     * @returns VNodeBuilder.\n     */\n    unsafeHTML(html: string | null): VNode<P> {\n        if (__IVI_DEV__) {\n            if (this._flags & (VNodeFlags.ChildrenArray | VNodeFlags.ChildrenVNode | VNodeFlags.ChildrenBasic)) {\n                throw new Error(\"Failed to set unsafeHTML, VNode element is already having children.\");\n            }\n            if (!(this._flags & VNodeFlags.Element)) {\n                throw new Error(\"Failed to set unsafeHTML, unsafeHTML is available on element nodes only.\");\n            }\n            if (this._flags & VNodeFlags.InputElement) {\n                throw new Error(\"Failed to set unsafeHTML, input elements can't have innerHTML.\");\n            }\n            if (this._flags & VNodeFlags.MediaElement) {\n                throw new Error(\"Failed to set unsafeHTML, media elements can't have children.\");\n            }\n            if (isVoidElement(this._tag as string)) {\n                throw new Error(`Failed to set unsafeHTML, ${this._tag} elements can't have children.`);\n            }\n        }\n        this._flags |= VNodeFlags.UnsafeHTML;\n        this._children = html;\n        return this;\n    }\n\n    /**\n     * Set HTMLInputElement/HTMLTextAreaElement value property.\n     *\n     * @param text Text value.\n     * @returns VNodeBuilder.\n     */\n    value(value: string | null): VNode<P> {\n        if (__IVI_DEV__) {\n            if (!(this._flags & VNodeFlags.InputElement)) {\n                throw new Error(\"Failed to set value, value is available on input elements only.\");\n            }\n        }\n        this._children = value;\n        return this;\n    }\n\n    /**\n     * Set HTMLInputElement checked property.\n     *\n     * @param text Text value.\n     * @returns VNodeBuilder.\n     */\n    checked(checked: boolean | null): VNode<P> {\n        if (__IVI_DEV__) {\n            if (!(this._flags & VNodeFlags.InputElement)) {\n                throw new Error(\"Failed to set checked, checked is available on input elements only.\");\n            }\n            if (!isInputTypeHasCheckedProperty(this._tag as InputType)) {\n                throw new Error(`Failed to set checked, input elements with type ${this._tag} doesn't support `\n                    + `checked value.`);\n            }\n        }\n        this._children = checked;\n        return this;\n    }\n\n    /**\n     * Marks VNode as an immutable.\n     *\n     * Immutable VNodes can't be used directly when rendering trees, they should be cloned with a `cloneVNode` function.\n     *\n     * @returns VNodeBuilder.\n     */\n    immutable(): VNode<P> {\n        if (__IVI_DEV__) {\n            this._flags |= VNodeFlags.Immutable;\n        }\n        return this;\n    }\n\n    /**\n     * Merge props with existing props.\n     *\n     * @param props\n     * @return VNodeBuilder.\n     */\n    mergeProps<U extends P>(props: U | null): VNode<P> {\n        if (__IVI_DEV__) {\n            if (props && typeof props !== \"object\") {\n                throw new Error(`Failed to merge props, props object has type \"${typeof props}\".`);\n            }\n            if (this._props &&\n                (this._props as ElementProps<P>).attrs &&\n                typeof (this._props as ElementProps<P>).attrs !== \"object\") {\n                throw new Error(`Failed to merge props, props object has type \"${typeof this._props}\".`);\n            }\n        }\n        if (props) {\n            return this.props(this._props && (this._props as ElementProps<P>).attrs ?\n                Object.assign({}, (this._props as ElementProps<P>).attrs, props) :\n                props);\n        }\n        return this;\n    }\n\n    /**\n     * Merge style with existing style.\n     *\n     * @param props\n     * @return VNodeBuilder.\n     */\n    mergeStyle<U extends CSSStyleProps>(style: U | null): VNode<P> {\n        if (style) {\n            return this.style(this._props && (this._props as ElementProps<P>).style ?\n                Object.assign({}, (this._props as ElementProps<P>).style, style) :\n                style);\n        }\n        return this;\n    }\n\n    /**\n     * Element will be automatically focused after instantiation.\n     *\n     * @param focus\n     * @return VNodeBuilder.\n     */\n    autofocus(focus: boolean): VNode<P> {\n        if (__IVI_DEV__) {\n            if (!(this._flags & VNodeFlags.Element)) {\n                throw new Error(\"Failed to set autofocus, autofocus is available on element nodes only.\");\n            }\n        }\n        if (focus) {\n            this._flags |= VNodeFlags.Autofocus;\n        }\n        return this;\n    }\n}\n\nexport function checkUniqueKeys(children: IVNode<any>[]): void {\n    if (__IVI_DEV__) {\n        let keys: Set<any> | undefined;\n        for (let i = 0; i < children.length; i++) {\n            const child = children[i];\n            if (child._flags & VNodeFlags.Key) {\n                if (keys === undefined) {\n                    keys = new Set<any>();\n                } else if (keys.has(child._key)) {\n                    throw new Error(`Failed to set children, invalid children list, key: \"${child._key}\" ` +\n                        `is used multiple times.`);\n                }\n                keys.add(child._key);\n            }\n        }\n    }\n}\n","import { isValidTag } from \"../dev_mode/dom\";\nimport { HTMLTagType, SVGTagType, MediaTagType, InputType } from \"../common/dom\";\nimport {\n    HTMLAnchorElementProps, HTMLElementProps, HTMLAppletElementProps, HTMLAreaElementProps, HTMLAudioElementProps,\n    HTMLBaseElementProps, HTMLBaseFontElementProps, HTMLBodyElementProps, HTMLBRElementProps, HTMLButtonElementProps,\n    HTMLCanvasElementProps, HTMLQuoteElementProps, HTMLTableCaptionElementProps, HTMLTableColElementProps,\n    HTMLDataListElementProps, HTMLModElementProps, HTMLDirectoryElementProps, HTMLDivElementProps,\n    HTMLDListElementProps, HTMLEmbedElementProps, HTMLFieldSetElementProps, HTMLFontElementProps, HTMLFormElementProps,\n    HTMLFrameElementProps, HTMLFrameSetElementProps, HTMLHeadElementProps, HTMLHeadingElementProps, HTMLHRElementProps,\n    HTMLHtmlElementProps, HTMLIFrameElementProps, HTMLImageElementProps, HTMLInputElementProps, HTMLLabelElementProps,\n    HTMLLegendElementProps, HTMLLIElementProps, HTMLLinkElementProps, HTMLMapElementProps, HTMLMarqueeElementProps,\n    HTMLMenuElementProps, HTMLMetaElementProps, HTMLMeterElementProps, HTMLObjectElementProps, HTMLOListElementProps,\n    HTMLOptGroupElementProps, HTMLOptionElementProps, HTMLParagraphElementProps, HTMLParamElementProps,\n    HTMLPictureElementProps, HTMLPreElementProps, HTMLProgressElementProps, HTMLScriptElementProps,\n    HTMLSelectElementProps, HTMLSourceElementProps, HTMLSpanElementProps, HTMLStyleElementProps,\n    HTMLTableDataCellElementProps, HTMLTableElementProps, HTMLTableHeaderCellElementProps, HTMLTableRowElementProps,\n    HTMLTableSectionElementProps, HTMLTemplateElementProps, HTMLTextAreaElementProps, HTMLTitleElementProps,\n    HTMLTrackElementProps, HTMLUListElementProps, HTMLUnknownElementProps, HTMLVideoElementProps, HTMLMediaElementProps,\n    MSHTMLWebViewElementProps,\n\n    SVGCircleElementProps, SVGClipPathElementProps, SVGDefsElementProps, SVGDescElementProps, SVGEllipseElementProps,\n    SVGFEBlendElementProps, SVGFEColorMatrixElementProps, SVGFEComponentTransferElementProps,\n    SVGFECompositeElementProps, SVGFEConvolveMatrixElementProps, SVGFEDiffuseLightingElementProps,\n    SVGFEDisplacementMapElementProps, SVGFEDistantLightElementProps, SVGFEFloodElementProps, SVGFEFuncAElementProps,\n    SVGFEFuncBElementProps, SVGFEFuncGElementProps, SVGFEFuncRElementProps, SVGFEGaussianBlurElementProps,\n    SVGFEImageElementProps, SVGFEMergeElementProps, SVGFEMergeNodeElementProps, SVGFEMorphologyElementProps,\n    SVGFEOffsetElementProps, SVGFEPointLightElementProps, SVGFESpecularLightingElementProps, SVGFESpotLightElementProps,\n    SVGFETileElementProps, SVGFETurbulenceElementProps, SVGFilterElementProps, SVGForeignObjectElementProps,\n    SVGGElementProps, SVGImageElementProps, SVGLinearGradientElementProps, SVGLineElementProps, SVGMarkerElementProps,\n    SVGMaskElementProps, SVGMetadataElementProps, SVGPathElementProps, SVGPatternElementProps, SVGPolygonElementProps,\n    SVGPolylineElementProps, SVGRadialGradientElementProps, SVGRectElementProps, SVGStopElementProps,\n    SVGSVGElementProps, SVGSwitchElementProps, SVGSymbolElementProps, SVGTextElementProps, SVGTextPathElementProps,\n    SVGTSpanElementProps, SVGViewElementProps, SVGUseElementProps, SVGElementProps,\n} from \"../common/dom_props\";\nimport { VNodeFlags, ElementDescriptorFlags } from \"./flags\";\nimport { VNode } from \"./vnode\";\nimport { ElementDescriptor } from \"./element_descriptor\";\n\n/**\n * Create a VNodeBuilder representing a Text node.\n *\n * @param content Text content.\n * @returns VNodeBuilder object.\n */\nexport function $t(content: string | number | boolean | null): VNode<null> {\n    return new VNode<null>(VNodeFlags.Text, null, null, null, content);\n}\n\n/* tslint:disable:max-line-length */\n/**\n * Create a VNodeBuilder representing an Element node.\n *\n * @param tagName HTML Element tag name.\n * @param props HTML Element props.\n * @returns VNodeBuilder object.\n */\nexport function $h(tagName: \"a\", className?: string): VNode<HTMLAnchorElementProps | null>;\nexport function $h(tagName: \"abbr\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"acronym\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"address\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"applet\", className?: string): VNode<HTMLAppletElementProps | null>;\nexport function $h(tagName: \"area\", className?: string): VNode<HTMLAreaElementProps | null>;\nexport function $h(tagName: \"article\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"aside\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"b\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"base\", className?: string): VNode<HTMLBaseElementProps | null>;\nexport function $h(tagName: \"basefont\", className?: string): VNode<HTMLBaseFontElementProps | null>;\nexport function $h(tagName: \"bdo\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"big\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"blockquote\", className?: string): VNode<HTMLQuoteElementProps | null>;\nexport function $h(tagName: \"body\", className?: string): VNode<HTMLBodyElementProps | null>;\nexport function $h(tagName: \"br\", className?: string): VNode<HTMLBRElementProps | null>;\nexport function $h(tagName: \"button\", className?: string): VNode<HTMLButtonElementProps | null>;\nexport function $h(tagName: \"canvas\", className?: string): VNode<HTMLCanvasElementProps | null>;\nexport function $h(tagName: \"caption\", className?: string): VNode<HTMLTableCaptionElementProps | null>;\nexport function $h(tagName: \"center\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"cite\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"code\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"col\", className?: string): VNode<HTMLTableColElementProps | null>;\nexport function $h(tagName: \"colgroup\", className?: string): VNode<HTMLTableColElementProps | null>;\nexport function $h(tagName: \"datalist\", className?: string): VNode<HTMLDataListElementProps | null>;\nexport function $h(tagName: \"dd\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"del\", className?: string): VNode<HTMLModElementProps | null>;\nexport function $h(tagName: \"dfn\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"dir\", className?: string): VNode<HTMLDirectoryElementProps | null>;\nexport function $h(tagName: \"div\", className?: string): VNode<HTMLDivElementProps | null>;\nexport function $h(tagName: \"dl\", className?: string): VNode<HTMLDListElementProps | null>;\nexport function $h(tagName: \"dt\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"em\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"embed\", className?: string): VNode<HTMLEmbedElementProps | null>;\nexport function $h(tagName: \"fieldset\", className?: string): VNode<HTMLFieldSetElementProps | null>;\nexport function $h(tagName: \"figcaption\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"figure\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"font\", className?: string): VNode<HTMLFontElementProps | null>;\nexport function $h(tagName: \"footer\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"form\", className?: string): VNode<HTMLFormElementProps | null>;\nexport function $h(tagName: \"frame\", className?: string): VNode<HTMLFrameElementProps | null>;\nexport function $h(tagName: \"frameset\", className?: string): VNode<HTMLFrameSetElementProps | null>;\nexport function $h(tagName: \"h1\", className?: string): VNode<HTMLHeadingElementProps | null>;\nexport function $h(tagName: \"h2\", className?: string): VNode<HTMLHeadingElementProps | null>;\nexport function $h(tagName: \"h3\", className?: string): VNode<HTMLHeadingElementProps | null>;\nexport function $h(tagName: \"h4\", className?: string): VNode<HTMLHeadingElementProps | null>;\nexport function $h(tagName: \"h5\", className?: string): VNode<HTMLHeadingElementProps | null>;\nexport function $h(tagName: \"h6\", className?: string): VNode<HTMLHeadingElementProps | null>;\nexport function $h(tagName: \"head\", className?: string): VNode<HTMLHeadElementProps | null>;\nexport function $h(tagName: \"header\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"hgroup\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"hr\", className?: string): VNode<HTMLHRElementProps | null>;\nexport function $h(tagName: \"html\", className?: string): VNode<HTMLHtmlElementProps | null>;\nexport function $h(tagName: \"i\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"iframe\", className?: string): VNode<HTMLIFrameElementProps | null>;\nexport function $h(tagName: \"img\", className?: string): VNode<HTMLImageElementProps | null>;\nexport function $h(tagName: \"ins\", className?: string): VNode<HTMLModElementProps | null>;\nexport function $h(tagName: \"isindex\", className?: string): VNode<HTMLUnknownElementProps | null>;\nexport function $h(tagName: \"kbd\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"keygen\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"label\", className?: string): VNode<HTMLLabelElementProps | null>;\nexport function $h(tagName: \"legend\", className?: string): VNode<HTMLLegendElementProps | null>;\nexport function $h(tagName: \"li\", className?: string): VNode<HTMLLIElementProps | null>;\nexport function $h(tagName: \"link\", className?: string): VNode<HTMLLinkElementProps | null>;\nexport function $h(tagName: \"listing\", className?: string): VNode<HTMLPreElementProps | null>;\nexport function $h(tagName: \"map\", className?: string): VNode<HTMLMapElementProps | null>;\nexport function $h(tagName: \"mark\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"marquee\", className?: string): VNode<HTMLMarqueeElementProps | null>;\nexport function $h(tagName: \"menu\", className?: string): VNode<HTMLMenuElementProps | null>;\nexport function $h(tagName: \"meta\", className?: string): VNode<HTMLMetaElementProps | null>;\nexport function $h(tagName: \"meter\", className?: string): VNode<HTMLMeterElementProps | null>;\nexport function $h(tagName: \"nav\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"nextid\", className?: string): VNode<HTMLUnknownElementProps | null>;\nexport function $h(tagName: \"nobr\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"noframes\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"noscript\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"object\", className?: string): VNode<HTMLObjectElementProps | null>;\nexport function $h(tagName: \"ol\", className?: string): VNode<HTMLOListElementProps | null>;\nexport function $h(tagName: \"optgroup\", className?: string): VNode<HTMLOptGroupElementProps | null>;\nexport function $h(tagName: \"option\", className?: string): VNode<HTMLOptionElementProps | null>;\nexport function $h(tagName: \"p\", className?: string): VNode<HTMLParagraphElementProps | null>;\nexport function $h(tagName: \"param\", className?: string): VNode<HTMLParamElementProps | null>;\nexport function $h(tagName: \"picture\", className?: string): VNode<HTMLPictureElementProps | null>;\nexport function $h(tagName: \"plaintext\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"pre\", className?: string): VNode<HTMLPreElementProps | null>;\nexport function $h(tagName: \"progress\", className?: string): VNode<HTMLProgressElementProps | null>;\nexport function $h(tagName: \"q\", className?: string): VNode<HTMLQuoteElementProps | null>;\nexport function $h(tagName: \"rt\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"ruby\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"s\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"samp\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"script\", className?: string): VNode<HTMLScriptElementProps | null>;\nexport function $h(tagName: \"section\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"select\", className?: string): VNode<HTMLSelectElementProps | null>;\nexport function $h(tagName: \"small\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"source\", className?: string): VNode<HTMLSourceElementProps | null>;\nexport function $h(tagName: \"span\", className?: string): VNode<HTMLSpanElementProps | null>;\nexport function $h(tagName: \"strike\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"strong\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"style\", className?: string): VNode<HTMLStyleElementProps | null>;\nexport function $h(tagName: \"sub\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"sup\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"table\", className?: string): VNode<HTMLTableElementProps | null>;\nexport function $h(tagName: \"tbody\", className?: string): VNode<HTMLTableSectionElementProps | null>;\nexport function $h(tagName: \"td\", className?: string): VNode<HTMLTableDataCellElementProps | null>;\nexport function $h(tagName: \"template\", className?: string): VNode<HTMLTemplateElementProps | null>;\nexport function $h(tagName: \"textarea\", className?: string): VNode<HTMLTextAreaElementProps | null>;\nexport function $h(tagName: \"tfoot\", className?: string): VNode<HTMLTableSectionElementProps | null>;\nexport function $h(tagName: \"th\", className?: string): VNode<HTMLTableHeaderCellElementProps | null>;\nexport function $h(tagName: \"thead\", className?: string): VNode<HTMLTableSectionElementProps | null>;\nexport function $h(tagName: \"title\", className?: string): VNode<HTMLTitleElementProps | null>;\nexport function $h(tagName: \"tr\", className?: string): VNode<HTMLTableRowElementProps | null>;\nexport function $h(tagName: \"track\", className?: string): VNode<HTMLTrackElementProps | null>;\nexport function $h(tagName: \"tt\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"u\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"ul\", className?: string): VNode<HTMLUListElementProps | null>;\nexport function $h(tagName: \"var\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"wbr\", className?: string): VNode<HTMLElementProps | null>;\nexport function $h(tagName: \"x-ms-webview\", className?: string): VNode<MSHTMLWebViewElementProps | null>;\nexport function $h(tagName: \"xmp\", className?: string): VNode<HTMLPreElementProps | null>;\nexport function $h(tagName: HTMLTagType, className?: string): VNode<HTMLElementProps | null> {\n    return new VNode<HTMLElementProps | null>(\n        VNodeFlags.Element,\n        tagName,\n        null,\n        className === undefined ? null : className,\n        null);\n}\n\n/**\n * Create a VNodeBuilder representing a SVGElement node.\n *\n * @param tagName SVG Element tag name.\n * @param className Class name.\n * @returns VNodeBuilder object.\n */\nexport function $s(tagName: \"circle\", className?: string): VNode<SVGCircleElementProps | null>;\nexport function $s(tagName: \"clippath\", className?: string): VNode<SVGClipPathElementProps | null>;\nexport function $s(tagName: \"defs\", className?: string): VNode<SVGDefsElementProps | null>;\nexport function $s(tagName: \"desc\", className?: string): VNode<SVGDescElementProps | null>;\nexport function $s(tagName: \"ellipse\", className?: string): VNode<SVGEllipseElementProps | null>;\nexport function $s(tagName: \"feblend\", className?: string): VNode<SVGFEBlendElementProps | null>;\nexport function $s(tagName: \"fecolormatrix\", className?: string): VNode<SVGFEColorMatrixElementProps | null>;\nexport function $s(tagName: \"fecomponenttransfer\", className?: string): VNode<SVGFEComponentTransferElementProps | null>;\nexport function $s(tagName: \"fecomposite\", className?: string): VNode<SVGFECompositeElementProps | null>;\nexport function $s(tagName: \"feconvolvematrix\", className?: string): VNode<SVGFEConvolveMatrixElementProps | null>;\nexport function $s(tagName: \"fediffuselighting\", className?: string): VNode<SVGFEDiffuseLightingElementProps | null>;\nexport function $s(tagName: \"fedisplacementmap\", className?: string): VNode<SVGFEDisplacementMapElementProps | null>;\nexport function $s(tagName: \"fedistantlight\", className?: string): VNode<SVGFEDistantLightElementProps | null>;\nexport function $s(tagName: \"feflood\", className?: string): VNode<SVGFEFloodElementProps | null>;\nexport function $s(tagName: \"fefunca\", className?: string): VNode<SVGFEFuncAElementProps | null>;\nexport function $s(tagName: \"fefuncb\", className?: string): VNode<SVGFEFuncBElementProps | null>;\nexport function $s(tagName: \"fefuncg\", className?: string): VNode<SVGFEFuncGElementProps | null>;\nexport function $s(tagName: \"fefuncr\", className?: string): VNode<SVGFEFuncRElementProps | null>;\nexport function $s(tagName: \"fegaussianblur\", className?: string): VNode<SVGFEGaussianBlurElementProps | null>;\nexport function $s(tagName: \"feimage\", className?: string): VNode<SVGFEImageElementProps | null>;\nexport function $s(tagName: \"femerge\", className?: string): VNode<SVGFEMergeElementProps | null>;\nexport function $s(tagName: \"femergenode\", className?: string): VNode<SVGFEMergeNodeElementProps | null>;\nexport function $s(tagName: \"femorphology\", className?: string): VNode<SVGFEMorphologyElementProps | null>;\nexport function $s(tagName: \"feoffset\", className?: string): VNode<SVGFEOffsetElementProps | null>;\nexport function $s(tagName: \"fepointlight\", className?: string): VNode<SVGFEPointLightElementProps | null>;\nexport function $s(tagName: \"fespecularlighting\", className?: string): VNode<SVGFESpecularLightingElementProps | null>;\nexport function $s(tagName: \"fespotlight\", className?: string): VNode<SVGFESpotLightElementProps | null>;\nexport function $s(tagName: \"fetile\", className?: string): VNode<SVGFETileElementProps | null>;\nexport function $s(tagName: \"feturbulence\", className?: string): VNode<SVGFETurbulenceElementProps | null>;\nexport function $s(tagName: \"filter\", className?: string): VNode<SVGFilterElementProps | null>;\nexport function $s(tagName: \"foreignobject\", className?: string): VNode<SVGForeignObjectElementProps | null>;\nexport function $s(tagName: \"g\", className?: string): VNode<SVGGElementProps | null>;\nexport function $s(tagName: \"image\", className?: string): VNode<SVGImageElementProps | null>;\nexport function $s(tagName: \"line\", className?: string): VNode<SVGLineElementProps | null>;\nexport function $s(tagName: \"lineargradient\", className?: string): VNode<SVGLinearGradientElementProps | null>;\nexport function $s(tagName: \"marker\", className?: string): VNode<SVGMarkerElementProps | null>;\nexport function $s(tagName: \"mask\", className?: string): VNode<SVGMaskElementProps | null>;\nexport function $s(tagName: \"metadata\", className?: string): VNode<SVGMetadataElementProps | null>;\nexport function $s(tagName: \"path\", className?: string): VNode<SVGPathElementProps | null>;\nexport function $s(tagName: \"pattern\", className?: string): VNode<SVGPatternElementProps | null>;\nexport function $s(tagName: \"polygon\", className?: string): VNode<SVGPolygonElementProps | null>;\nexport function $s(tagName: \"polyline\", className?: string): VNode<SVGPolylineElementProps | null>;\nexport function $s(tagName: \"radialgradient\", className?: string): VNode<SVGRadialGradientElementProps | null>;\nexport function $s(tagName: \"rect\", className?: string): VNode<SVGRectElementProps | null>;\nexport function $s(tagName: \"stop\", className?: string): VNode<SVGStopElementProps | null>;\nexport function $s(tagName: \"svg\", className?: string): VNode<SVGSVGElementProps | null>;\nexport function $s(tagName: \"switch\", className?: string): VNode<SVGSwitchElementProps | null>;\nexport function $s(tagName: \"symbol\", className?: string): VNode<SVGSymbolElementProps | null>;\nexport function $s(tagName: \"text\", className?: string): VNode<SVGTextElementProps | null>;\nexport function $s(tagName: \"textpath\", className?: string): VNode<SVGTextPathElementProps | null>;\nexport function $s(tagName: \"tspan\", className?: string): VNode<SVGTSpanElementProps | null>;\nexport function $s(tagName: \"use\", className?: string): VNode<SVGUseElementProps | null>;\nexport function $s(tagName: \"view\", className?: string): VNode<SVGViewElementProps | null>;\nexport function $s(tagName: SVGTagType, className?: string): VNode<SVGElementProps | null> {\n    return new VNode<SVGElementProps | null>(\n        VNodeFlags.Element | VNodeFlags.SvgElement,\n        tagName,\n        null,\n        className === undefined ? null : className,\n        null);\n}\n\n/**\n * Create a VNodeBuilder representing an HTMLInputElement node.\n *\n * @param type Input Element type. When type param has value \"textarea\", HTMLTextAreaElement will be created.\n * @param className Class name.\n * @returns VNodeBuilder object.\n */\nexport function $i(type: \"textarea\", className?: string): VNode<HTMLTextAreaElementProps | null>;\nexport function $i(type: \"button\", className?: string): VNode<HTMLInputElementProps | null>;\nexport function $i(type: \"checkbox\", className?: string): VNode<HTMLInputElementProps | null>;\nexport function $i(type: \"color\", className?: string): VNode<HTMLInputElementProps | null>;\nexport function $i(type: \"date\", className?: string): VNode<HTMLInputElementProps | null>;\nexport function $i(type: \"datetime\", className?: string): VNode<HTMLInputElementProps | null>;\nexport function $i(type: \"datetime-local\", className?: string): VNode<HTMLInputElementProps | null>;\nexport function $i(type: \"email\", className?: string): VNode<HTMLInputElementProps | null>;\nexport function $i(type: \"file\", className?: string): VNode<HTMLInputElementProps | null>;\nexport function $i(type: \"hidden\", className?: string): VNode<HTMLInputElementProps | null>;\nexport function $i(type: \"image\", className?: string): VNode<HTMLInputElementProps | null>;\nexport function $i(type: \"month\", className?: string): VNode<HTMLInputElementProps | null>;\nexport function $i(type: \"number\", className?: string): VNode<HTMLInputElementProps | null>;\nexport function $i(type: \"password\", className?: string): VNode<HTMLInputElementProps | null>;\nexport function $i(type: \"radio\", className?: string): VNode<HTMLInputElementProps | null>;\nexport function $i(type: \"range\", className?: string): VNode<HTMLInputElementProps | null>;\nexport function $i(type: \"reset\", className?: string): VNode<HTMLInputElementProps | null>;\nexport function $i(type: \"search\", className?: string): VNode<HTMLInputElementProps | null>;\nexport function $i(type: \"submit\", className?: string): VNode<HTMLInputElementProps | null>;\nexport function $i(type: \"tel\", className?: string): VNode<HTMLInputElementProps | null>;\nexport function $i(type: \"text\", className?: string): VNode<HTMLInputElementProps | null>;\nexport function $i(type: \"time\", className?: string): VNode<HTMLInputElementProps | null>;\nexport function $i(type: \"url\", className?: string): VNode<HTMLInputElementProps | null>;\nexport function $i(type: \"week\", className?: string): VNode<HTMLInputElementProps | null>;\nexport function $i(type: InputType, className?: string): VNode<HTMLInputElementProps | null> {\n    return new VNode<HTMLInputElementProps | null>(\n        type === \"textarea\" ?\n            VNodeFlags.Element | VNodeFlags.InputElement | VNodeFlags.TextAreaElement :\n            VNodeFlags.Element | VNodeFlags.InputElement,\n        type,\n        null,\n        className === undefined ? null : className,\n        null);\n}\n\n/**\n * Create a VNodeBuilder representing an HTMLMediaElement node.\n *\n * @param tagName Media element tag name.\n * @param className Class name.\n * @returns VNodeBuilder object.\n */\nexport function $m(tagName: \"audio\", className?: string): VNode<HTMLAudioElementProps | null>;\nexport function $m(tagName: \"video\", className?: string): VNode<HTMLVideoElementProps | null>;\nexport function $m(tagName: MediaTagType, className?: string): VNode<HTMLMediaElementProps | null> {\n    return new VNode<HTMLMediaElementProps | null>(\n        VNodeFlags.Element | VNodeFlags.MediaElement,\n        tagName,\n        null,\n        className === undefined ? null : className,\n        null);\n}\n/* tslint:enable:max-line-length */\n\n/**\n * Create a VNodeBuilder representing an ElementDescriptor.\n *\n * @param d Element Descriptor.\n * @param className Class name.\n * @returns VNodeBuilder object.\n */\nexport function $e<P>(d: ElementDescriptor<P>, className?: string): VNode<P> {\n    if (__IVI_DEV__) {\n        if (className !== undefined) {\n            if (d._flags & ElementDescriptorFlags.ProtectClassName) {\n                throw new Error(\"Failed to set className, className is protected by an ElementDescriptor.\");\n            }\n        }\n    }\n    return new VNode<P>(\n        d._flags & ElementDescriptorFlags.CopyFlags,\n        d,\n        null,\n        className === undefined ? null : className,\n        null);\n}\n\n/**\n * Create a VNodeBuilder representing a Custom Element (WebComponent).\n *\n * @param d Element Descriptor.\n * @param className Class name.\n * @returns VNodeBuilder object.\n */\nexport function $w(tagName: string, className?: string): VNode<{ [key: string]: any } | null> {\n    if (__IVI_DEV__) {\n        if (!isValidTag(tagName)) {\n            throw new Error(`Invalid tag: ${tagName}`);\n        }\n    }\n    return new VNode<HTMLElementProps | null>(\n        VNodeFlags.Element | VNodeFlags.WebComponent,\n        tagName,\n        null,\n        className === undefined ? null : className,\n        null);\n}\n","import { EventHandler } from \"../events/event_handler\";\nimport { Context } from \"../common/types\";\nimport { CSSStyleProps } from \"../common/dom_props\";\nimport { VNodeFlags } from \"./flags\";\nimport { ComponentClass, ComponentFunction, Component } from \"./component\";\nimport { ElementDescriptor } from \"./element_descriptor\";\nimport { ConnectDescriptor, SelectorData } from \"./connect_descriptor\";\nimport { KeepAliveHandler } from \"./keep_alive\";\n\n/**\n * VNode object is the core object in ivi Virtual DOM, it can represent any node type.\n */\nexport interface IVNode<P = null> {\n    /**\n     * Flags, see `VNodeFlags` for details.\n     */\n    _flags: VNodeFlags;\n    /**\n     * Children property can contain flat array of children virtual nodes, or text if it contains a single text node\n     * child.\n     *\n     * When virtual node represents an input field, children property will contain input value.\n     */\n    _children: IVNode<any>[] | IVNode<any> | string | number | boolean | null | undefined;\n    /**\n     * Tag property contains details about the type of the element.\n     *\n     * Simple elements has a string type values, components can be a simple functions, constructor, or special\n     * descriptors for nodes that change syncing algorithm behavior.\n     */\n    _tag: string | ComponentClass<any> | ComponentFunction<any> | ElementDescriptor<any> |\n    ConnectDescriptor<any, any, any> | KeepAliveHandler | null;\n    /**\n     * Children syncing algorithm is using key property to find the same node in the previous children array. Key\n     * should be unique among its siblings.\n     */\n    _key: any;\n    /**\n     * Properties.\n     */\n    _props: ElementProps<P> | P | null;\n    /**\n     * Reference to HTML node or Component instance. It will be available after virtual node is created or synced. Each\n     * time VNode is synced, reference will be transferred from the old VNode to the new one.\n     */\n    _instance: Node | Component<any> | SelectorData | Context | null;\n    /**\n     * Class name.\n     */\n    _className: string | null;\n}\n\nexport interface ElementProps<P> {\n    /**\n     * Attributes.\n     */\n    attrs: P | null;\n    /**\n     * Style.\n     */\n    style: CSSStyleProps | null;\n    /**\n     * Events.\n     */\n    events: Array<EventHandler | null> | EventHandler | null;\n}\n\n/**\n * Check if VNode is representing a Text node.\n *\n * @param node VNode.\n * @returns true when VNode is representing a Text node.\n */\nexport function isTextNode(node: IVNode<any>): boolean {\n    return !!(node._flags & VNodeFlags.Text);\n}\n\n/**\n * Check if VNode is representing an Element.\n *\n * @param node VNode.\n * @returns true when VNode is representing an element node.\n */\nexport function isElementNode(node: IVNode<any>): boolean {\n    return !!(node._flags & VNodeFlags.Element);\n}\n\n/**\n * Check if VNode is representing an SVG Element.\n *\n * @param node VNode.\n * @returns true when VNode is representing a text node.\n */\nexport function isSVGNode(node: IVNode<any>): boolean {\n    return !!(node._flags & VNodeFlags.SvgElement);\n}\n\n/**\n * Check if VNode is representing a Component.\n *\n * @param node VNode.\n * @returns true when VNode is representing a Component.\n */\nexport function isComponentNode(node: IVNode<any>): boolean {\n    return !!(node._flags & VNodeFlags.Component);\n}\n\n/**\n * Get reference to a DOM node from a VNode object.\n *\n * @param node VNode which contains reference to a DOM node.\n * @returns null if VNode doesn't have a reference to a DOM node.\n */\nexport function getDOMInstanceFromVNode<T extends Node>(node: IVNode<any>): T | null {\n    if (node._flags & VNodeFlags.Component) {\n        return getDOMInstanceFromVNode<T>(node._children as IVNode<any>);\n    }\n    return node._instance as T;\n}\n\n/**\n * Get reference to a Component instance from a VNode object.\n *\n * @param node VNode which contains reference to a Component instance.\n * @returns null if VNode doesn't have a reference to a Component instance.\n */\nexport function getComponentInstanceFromVNode<T extends Component<any>>(node: IVNode<any>): T | null {\n    if (__IVI_DEV__) {\n        if (!(node._flags & VNodeFlags.Component)) {\n            throw new Error(\"Failed to get component instance: VNode should represent a Component.\");\n        }\n    }\n    return node._instance as T | null;\n}\n","import { XML_NAMESPACE, XLINK_NAMESPACE } from \"../common/dom\";\nimport { VNodeFlags } from \"./flags\";\nimport { CSSStyleProps } from \"../common/dom_props\";\n\n/**\n * Sync DOM class names.\n *\n * @param node HTML or SVG Element.\n * @param flags VNode flags.\n * @param a Old className.\n * @param b New className.\n */\nexport function syncClassName(node: Element, flags: VNodeFlags, a: string | null, b: string | null): void {\n    if (!b) {\n        b = \"\";\n    }\n    if (flags & VNodeFlags.SvgElement) {\n        node.setAttribute(\"class\", b);\n    } else {\n        node.className = b;\n    }\n}\n\n/**\n * Sync DOM styles.\n *\n * When styles are synced, and style from the old list is missing in the new one, its value will be reassigned with a\n * `null` value.\n *\n *    a: { backgroundColor: \"#333\", color: \"#fff\" }\n *    b: { backgroundColor: \"#333\" }\n *\n * In this example `color` style will receive a `\"\"` value.\n *\n * Implementation detail: Syncing algorithm has an optimization with an early detection of object shape changes.\n * Objects with static shape will make syncing algorithm slightly faster because it doesn't need to check which\n * properties didn't existed before, so it is possible to just use the static object shapes, and use `undefined` values\n * when you want to remove property and have the same object shape.\n *\n * @param node HTML or SVG Element.\n * @param a Old styles.\n * @param b New styles.\n */\nexport function syncStyle(\n    node: HTMLElement | SVGElement,\n    a: CSSStyleProps | null,\n    b: CSSStyleProps | null,\n): void {\n    let i: number;\n    let keys: string[];\n    let key: string;\n    let style: CSSStyleDeclaration;\n\n    if (a === null) {\n        if (b !== null) {\n            // a is empty, insert all styles from b.\n            style = node.style;\n            keys = Object.keys(b);\n            for (i = 0; i < keys.length; i++) {\n                key = keys[i];\n                (style as any)[key] = (b as any)[key];\n            }\n        }\n    } else if (b === null) {\n        // b is empty, remove all styles from a.\n        style = node.style;\n        keys = Object.keys(a);\n        for (i = 0; i < keys.length; i++) {\n            /**\n             * #quirks\n             *\n             * Should work with `null` values in all modern browsers. IE9 had problems with `null` values.\n             */\n            (style as any)[keys[i]] = \"\";\n        }\n    } else {\n        style = node.style;\n        let matchCount = 0;\n\n        keys = Object.keys(a);\n        for (i = 0; i < keys.length; i++) {\n            key = keys[i];\n            const bValue = (b as any)[key];\n\n            if (bValue !== undefined) {\n                const aValue = (a as any)[key];\n                if (aValue !== bValue) {\n                    (style as any)[key] = bValue;\n                }\n                matchCount++;\n            } else {\n                (style as any)[key] = \"\";\n            }\n        }\n\n        keys = Object.keys(b);\n        i = 0;\n        while (matchCount < keys.length && i < keys.length) {\n            key = keys[i++];\n            if (!a.hasOwnProperty(key)) {\n                (style as any)[key] = (b as any)[key];\n                matchCount++;\n            }\n        }\n    }\n}\n\n/**\n * Set DOM property.\n *\n * @param node HTML or SVG Element.\n * @param isSVG node is an SVG Element.\n * @param key Attribute name.\n * @param value Attribute value.\n */\nfunction setDOMProperty(node: Element, flags: VNodeFlags, key: string, value?: any, prevValue?: any): void {\n    if (value === undefined) {\n        /**\n         * Edge cases when property name doesn't match attribute name.\n         */\n        if (!(flags & VNodeFlags.SvgElement)) {\n            if (key.length > 6) {\n                switch (key) {\n                    case \"acceptCharset\":\n                        key = \"accept-charset\";\n                        break;\n                    case \"htmlFor\":\n                        key = \"for\";\n                    //     break;\n                    // case \"httpEquiv\": // meta tags aren't supported\n                    //     key = \"http-equiv\";\n                }\n            }\n        }\n        /**\n         * Because there is no generic way to assign a default value for a property when it is removed, it is always\n         * removed with `removeAttribute` method.\n         */\n        node.removeAttribute(key);\n    } else {\n        if (flags & VNodeFlags.SvgElement) {\n            if (key.length > 5) {\n                if (key.charCodeAt(0) === 120 &&\n                    (key.charCodeAt(3) === 58 || key.charCodeAt(5) === 58)) { // 58 === \":\" \"xml:\", \"xlink:\"\n                    if (key.charCodeAt(1) === 109 && key.charCodeAt(2) === 108) { // [109, 108] === \"ml\"\n                        /**\n                         * All attributes that starts with an \"xml:\" prefix will be assigned with XML namespace.\n                         */\n                        node.setAttributeNS(XML_NAMESPACE, key, value);\n                        return;\n                    } else if (key.charCodeAt(1) === 108 &&\n                        key.charCodeAt(2) === 105 &&\n                        key.charCodeAt(3) === 110 &&\n                        key.charCodeAt(4) === 107) { // [108, 105, 110, 107] === \"link\"\n                        /**\n                         * All attributes that starts with an \"xlink:\" prefix will be assigned with XLINK namespace.\n                         */\n                        node.setAttributeNS(XLINK_NAMESPACE, key, value);\n                        return;\n                    }\n                }\n            }\n\n            /**\n             * SVG props should be always assigned with a `setAttribute` call.\n             */\n            node.setAttribute(key, value);\n        } else {\n            if (key.length > 5) {\n                if (key.charCodeAt(4) === 45) { // 45 === \"-\" \"data-\", \"aria-\"\n                    /**\n                     * Attributes that has \"-\" character at the 4th position will be assigned with a `setAttribute`\n                     * method. It should work with \"data-\" and \"aria-\" attributes. Otherwise just use property\n                     * assignment instead of `setAttribute`.\n                     */\n                    node.setAttribute(key, value);\n                    return;\n                }\n            }\n\n            (node as any)[key] = value;\n        }\n    }\n}\n\n/**\n * Sync DOM properties.\n *\n * Implementation detail: Syncing algorithm has an optimization with an early detection of object shape changes.\n * Objects with static shape will make syncing algorithm slightly faster because it doesn't need to check which\n * properties didn't existed before, so it is possible to just use the static object shapes, and use `undefined` values\n * when you want to remove property and have the same object shape.\n *\n * @param node HTML or SVG Element.\n * @param flags VNode flags.\n * @param a Old DOM properties.\n * @param b New DOM properties.\n */\nexport function syncDOMProps(\n    node: Element,\n    flags: VNodeFlags,\n    a: { [key: string]: any } | null,\n    b: { [key: string]: any } | null,\n): void {\n    let i: number;\n    let keys: string[];\n    let key: string;\n\n    if (a === null) {\n        if (b !== null) {\n            // a is empty, insert all attributes from b.\n            keys = Object.keys(b);\n            for (i = 0; i < keys.length; i++) {\n                key = keys[i];\n                setDOMProperty(node, flags, key, b[key]);\n            }\n        }\n    } else if (b === null) {\n        // b is empty, remove all attributes from a.\n        keys = Object.keys(a);\n        for (i = 0; i < keys.length; i++) {\n            setDOMProperty(node, flags, keys[i]);\n        }\n    } else {\n        let matchCount = 0;\n\n        // Remove and update attributes.\n        keys = Object.keys(a);\n        for (i = 0; i < keys.length; i++) {\n            key = keys[i];\n            const bValue = b[key];\n            if (bValue === undefined) {\n                setDOMProperty(node, flags, key);\n            } else {\n                const aValue = a[key];\n                if (aValue !== bValue) {\n                    setDOMProperty(node, flags, key, bValue, aValue);\n                }\n                matchCount++;\n            }\n        }\n\n        // Insert new attributes.\n        keys = Object.keys(b);\n        i = 0;\n        while (matchCount < keys.length && i < keys.length) {\n            key = keys[i++];\n            if (!a.hasOwnProperty(key)) {\n                setDOMProperty(node, flags, key, b[key]);\n                matchCount++;\n            }\n        }\n    }\n}\n","import { EventHandler } from \"./event_handler\";\n\n/**\n * Shortcut for Event Handler registration.\n *\n * @param handler Event Handler.\n */\nfunction registerEventHandler(handler: EventHandler<any>): void {\n    handler.dispatcher.registerHandler(handler);\n}\n\n/**\n * Shortcut for Event Handler unregistration.\n *\n * @param handler Event Handler.\n */\nfunction unregisterEventHandler(handler: EventHandler<any>): void {\n    handler.dispatcher.unregisterHandler(handler);\n}\n\n/**\n * Sync DOM events.\n *\n * @param node HTML or SVG Element.\n * @param a Old events.\n * @param b New events.\n */\nexport function syncEvents(\n    node: Element,\n    a: Array<EventHandler | null> | EventHandler | null,\n    b: Array<EventHandler | null> | EventHandler | null,\n): void {\n    let i: number;\n    let h1: EventHandler | null;\n    let h2: EventHandler | null;\n\n    if (a === null) {\n        if (b !== null) {\n            attachEvents(b);\n        }\n    } else if (b === null) {\n        detachEvents(a);\n    } else {\n        if (typeof a === \"function\") {\n            attachEvents(b);\n            unregisterEventHandler(a);\n        } else {\n            if (typeof b === \"function\") {\n                registerEventHandler(b);\n\n                for (i = 0; i < a.length; i++) {\n                    h1 = a[i];\n                    if (h1) {\n                        unregisterEventHandler(h1);\n                    }\n                }\n            } else {\n                i = 0;\n                while (i < a.length && i < b.length) {\n                    h1 = a[i];\n                    h2 = b[i++];\n                    if (h1 !== h2) {\n                        if (h2) {\n                            registerEventHandler(h2);\n                        }\n                        if (h1) {\n                            unregisterEventHandler(h1);\n                        }\n                    }\n                }\n                while (i < b.length) {\n                    h1 = b[i++];\n                    if (h1) {\n                        registerEventHandler(h1);\n                    }\n                }\n                while (i < a.length) {\n                    h1 = a[i++];\n                    if (h1) {\n                        unregisterEventHandler(h1);\n                    }\n                }\n            }\n        }\n    }\n}\n\n/**\n * Attach Events.\n *\n * @param events Events.\n */\nexport function attachEvents(events: Array<EventHandler | null> | EventHandler): void {\n    if (typeof events === \"function\") {\n        registerEventHandler(events);\n    } else {\n        for (let i = 0; i < events.length; i++) {\n            const h = events[i];\n            if (h) {\n                registerEventHandler(h);\n            }\n        }\n    }\n}\n\n/**\n * Detach Events.\n *\n * @param events Events.\n */\nexport function detachEvents(events: Array<EventHandler | null> | EventHandler): void {\n    if (typeof events === \"function\") {\n        unregisterEventHandler(events);\n    } else {\n        for (let i = 0; i < events.length; i++) {\n            const h = events[i];\n            if (h) {\n                unregisterEventHandler(h);\n            }\n        }\n    }\n}\n","let _autofocusedElement: Element | null;\n\nexport function autofocus(element: Element): void {\n    _autofocusedElement = element;\n}\n\nexport function autofocusedElement(): Element | null {\n    const ret = _autofocusedElement;\n    _autofocusedElement = null;\n    return ret;\n}\n","/**\n * DO NOT MOVE THIS FUNCTIONS TO SEPARATE MODULES!\n *\n * There are so many circular dependencies between functions in this module, so just leave it all here instead of\n * creating many circular dependencies between JS modules.\n *\n * Code in this module is working only in browser environments.\n *\n * Tags:\n *\n * #entry - Entry point, function that will be invoked just once when the reconciliation process is started with a root\n *   render, or when scheduler updates invalidated components. Entry point is a good place to inject tryCatch statements\n *   to improve stack trace messages etc.\n * #augment - Function that is used only for augmenting.\n * #component - Component related functions.\n */\n\nimport { Context } from \"../common/types\";\nimport { SVG_NAMESPACE, setInnerHTML } from \"../common/dom\";\nimport { DevModeFlags, DEV_MODE, perfMarkBegin, perfMarkEnd, getFunctionName } from \"../dev_mode/dev_mode\";\nimport {\n    devModeOnError, devModeOnElementBeforeCreate, devModeOnElementCreated, devModeOnComponentCreated,\n    devModeOnComponentAttached, devModeOnComponentDetached,\n} from \"../dev_mode/hooks\";\nimport {\n    setInitialNestingState, pushNestingState, restoreNestingState, checkNestingViolation, nestingStateAncestorFlags,\n    nestingStateParentTagName,\n} from \"../dev_mode/html_nesting_rules\";\nimport {\n    stackTracePushComponent, stackTracePopComponent, stackTraceReset, stackTraceAugment,\n} from \"../dev_mode/stack_trace\";\nimport { VNodeFlags, ComponentFlags, SyncFlags } from \"./flags\";\nimport { IVNode, ElementProps, getDOMInstanceFromVNode } from \"./ivnode\";\nimport { ElementDescriptor } from \"./element_descriptor\";\nimport { ConnectDescriptor, SelectorData } from \"./connect_descriptor\";\nimport { KeepAliveHandler } from \"./keep_alive\";\nimport { ComponentClass, ComponentFunction, Component } from \"./component\";\nimport { syncDOMProps, syncClassName, syncStyle } from \"./sync_dom\";\nimport { setEventHandlersToDOMNode } from \"../events/utils\";\nimport { syncEvents, attachEvents, detachEvents } from \"../events/sync_events\";\nimport { autofocus } from \"../scheduler/autofocus\";\n\n/**\n * Pool of perf mark ids.\n */\nlet perfMarkIds: string[];\nlet perfMarkIndex: number;\n\nif (__IVI_DEV__) {\n    if (DEV_MODE & DevModeFlags.EnableComponentPerformanceProfiling) {\n        perfMarkIds = [];\n        perfMarkIndex = 0;\n    }\n}\n\n/**\n * Begin component perf mark.\n *\n * @param method\n * @param vnode\n */\nfunction componentPerfMarkBegin(method: string, vnode: IVNode<any>): void {\n    if (__IVI_DEV__) {\n        if (DEV_MODE & DevModeFlags.EnableComponentPerformanceProfiling) {\n            let id;\n            if (perfMarkIndex >= perfMarkIds.length) {\n                id = `ivi:` + perfMarkIndex;\n                perfMarkIds.push(id);\n            } else {\n                id = perfMarkIds[perfMarkIndex];\n            }\n            perfMarkIndex++;\n            perfMarkBegin(id);\n        }\n    }\n}\n\n/**\n * End component perf mark.\n *\n * @param method\n * @param vnode\n */\nfunction componentPerfMarkEnd(\n    method: string,\n    vnode: IVNode<any>,\n): void {\n    if (__IVI_DEV__) {\n        if (DEV_MODE & DevModeFlags.EnableComponentPerformanceProfiling) {\n            const flags = vnode._flags;\n            const id = perfMarkIds[--perfMarkIndex];\n            if (flags & VNodeFlags.ComponentClass) {\n                const cls = vnode._tag as ComponentClass<any>;\n                perfMarkEnd(`${method} [C]${getFunctionName(cls)}`, id);\n            } else {\n                if (flags & (VNodeFlags.Connect | VNodeFlags.UpdateContext | VNodeFlags.KeepAlive)) {\n                    if (flags & VNodeFlags.Connect) {\n                        const d = vnode._tag as ConnectDescriptor<any, any, any>;\n                        perfMarkEnd(`${method} [+]${getFunctionName(d.select)}`, id);\n                    } else if (flags & VNodeFlags.UpdateContext) {\n                        perfMarkEnd(`${method} [^]`, id);\n                    } else {\n                        perfMarkEnd(`${method} [K]`, id);\n                    }\n                } else {\n                    const fn = vnode._tag as ComponentFunction<any>;\n                    perfMarkEnd(`${method} [F]${getFunctionName(fn)}`, id);\n                }\n            }\n        }\n    }\n}\n\n/**\n * Render VNode entry point tryCatch wrapper.\n *\n * #entry\n *\n * @param parent Parent DOM Node.\n * @param refChild Reference to the next Node, when it is `null` child will be inserted at the end.\n * @param vnode VNode.\n * @param context Current context.\n * @returns Rendered DOM Node.\n */\nexport function renderVNode(\n    parent: Node,\n    refChild: Node | null,\n    vnode: IVNode<any>,\n    context: Context,\n): Node {\n    if (__IVI_DEV__) {\n        setInitialNestingState(parent as Element);\n\n        try {\n            return _renderVNode(parent, refChild, vnode, context);\n        } catch (e) {\n            stackTraceAugment(e);\n            devModeOnError(e);\n            stackTraceReset();\n            throw e;\n        }\n    }\n    return _renderVNode(parent, refChild, vnode, context);\n}\n\n/**\n * Render VNode entry point. Renders VNode into container and invokes `attached` lifecycle methods after VNode is\n * inserted into container.\n *\n * #entry\n *\n * @param parent Parent DOM Node.\n * @param refChild Reference to the next Node, when it is `null` child will be inserted at the end.\n * @param vnode VNode.\n * @param context Current context.\n * @returns Rendered DOM Node.\n */\nfunction _renderVNode(\n    parent: Node,\n    refChild: Node | null,\n    vnode: IVNode<any>,\n    context: Context,\n): Node {\n    return vNodeRenderIntoAndAttach(parent, refChild, vnode, context, SyncFlags.Attached);\n}\n\n/**\n * Sync VNode entry point tryCatch wrapper.\n *\n * @param parent Parent DOM node.\n * @param a Old VNode.\n * @param b New VNode.\n * @param context Current context.\n * @param syncFlags Sync flags.\n */\nexport function syncVNode(\n    parent: Node,\n    a: IVNode<any>,\n    b: IVNode<any>,\n    context: Context,\n    syncFlags: SyncFlags,\n): void {\n    if (__IVI_DEV__) {\n        setInitialNestingState(parent as Element);\n\n        try {\n            _syncVNode(parent, a, b, context, syncFlags);\n            return;\n        } catch (e) {\n            stackTraceAugment(e);\n            devModeOnError(e);\n            stackTraceReset();\n            throw e;\n        }\n    }\n    _syncVNode(parent, a, b, context, syncFlags);\n}\n\n/**\n * Sync VNode entry point. Sync VNode with a new one or replace when they aren't compatible.\n *\n * #entry\n *\n * @param parent Parent node.\n * @param a Old VNode.\n * @param b New VNode.\n * @param context Current context.\n * @param syncFlags Sync flags.\n */\nfunction _syncVNode(\n    parent: Node,\n    a: IVNode<any>,\n    b: IVNode<any>,\n    context: Context,\n    syncFlags: SyncFlags,\n): void {\n    vNodeSync(parent, a, b, context, syncFlags);\n}\n\n/**\n * Remove VNode entry point tryCatch wrapper.\n *\n * #entry\n *\n * @param parent Parent DOM node.\n * @param node VNode element to remove.\n */\nexport function removeVNode(parent: Node, node: IVNode<any>): void {\n    if (__IVI_DEV__) {\n        try {\n            _removeVNode(parent, node);\n            return;\n        } catch (e) {\n            stackTraceAugment(e);\n            devModeOnError(e);\n            stackTraceReset();\n            throw e;\n        }\n    }\n    _removeVNode(parent, node);\n}\n\n/**\n * Remove VNode entry point.\n *\n * #entry\n *\n * @param parent Parent DOM node.\n * @param node VNode element to remove.\n */\nfunction _removeVNode(parent: Node, node: IVNode<any>): void {\n    parent.removeChild(getDOMInstanceFromVNode(node)!);\n    vNodeDetach(node, SyncFlags.Dispose | SyncFlags.Attached);\n}\n\n/**\n * Augment entry point tryCatch wrapper.\n *\n * #entry\n * #augment\n *\n * @param parent Parent DOM Node.\n * @param node DOM Node.\n * @param vnode Virtual DOM Node.\n * @param context Context.\n */\nexport function augmentVNode(\n    parent: Node,\n    node: Node | null,\n    vnode: IVNode<any>,\n    context: Context,\n): void {\n    if (__IVI_DEV__) {\n        setInitialNestingState(parent as Element);\n\n        try {\n            _augmentVNode(parent, node, vnode, context);\n            return;\n        } catch (e) {\n            stackTraceAugment(e);\n            devModeOnError(e);\n            stackTraceReset();\n            throw e;\n        }\n    }\n    _augmentVNode(parent, node, vnode, context);\n}\n\n/**\n * Augment entry point. Augments DOM tree with a Virtual DOM tree and performs attaching.\n *\n * #entry\n * #augment\n *\n * @param parent Parent DOM Node.\n * @param node DOM Node.\n * @param vnode Virtual DOM Node.\n * @param context Context.\n */\nfunction _augmentVNode(\n    parent: Node,\n    node: Node | null,\n    vnode: IVNode<any>,\n    context: Context,\n): void {\n    vNodeAugment(parent, node, vnode, context);\n    vNodeAttach(vnode);\n}\n\n/**\n * Update Components entry point.\n *\n * #entry\n * #component\n *\n * @param parent Parent DOM Node.\n * @param vnode Virtual DOM Node.\n * @param context Context.\n * @param syncFlags Sync Flags.\n */\nexport function updateComponents(\n    parent: Node,\n    vnode: IVNode<any>,\n    context: Context,\n    syncFlags: SyncFlags,\n): void {\n    if (__IVI_DEV__) {\n        setInitialNestingState(parent as Element);\n\n        try {\n            vNodeUpdateComponents(parent, vnode, context, syncFlags | SyncFlags.DirtyComponent);\n            return;\n        } catch (e) {\n            stackTraceAugment(e);\n            devModeOnError(e);\n            stackTraceReset();\n            throw e;\n        }\n    }\n    vNodeUpdateComponents(parent, vnode, context, syncFlags | SyncFlags.DirtyComponent);\n}\n\n/**\n * Recursively attach all nodes.\n *\n * @param vnode VNode.\n */\nfunction vNodeAttach(vnode: IVNode<any>): void {\n    const flags = vnode._flags;\n\n    if (flags & VNodeFlags.Element) {\n        if (flags & (VNodeFlags.ChildrenVNode | VNodeFlags.ChildrenArray)) {\n            let children = vnode._children;\n            if (flags & VNodeFlags.ChildrenArray) {\n                children = children as IVNode<any>[];\n                for (let i = 0; i < children.length; i++) {\n                    vNodeAttach(children[i]);\n                }\n            } else {\n                vNodeAttach(children as IVNode<any>);\n            }\n        }\n        if ((flags & VNodeFlags.ElementProps) && (vnode._props as ElementProps<any>).events) {\n            attachEvents((vnode._props as ElementProps<any>).events!);\n        }\n    } else if (flags & VNodeFlags.Component) {\n        stackTracePushComponent(vnode);\n        if (flags & VNodeFlags.ComponentClass) {\n            const component = vnode._instance as Component<any>;\n\n            if (__IVI_DEV__) {\n                if (component.flags & ComponentFlags.Attached) {\n                    throw new Error(\"Failed to attach Component: component is already attached.\");\n                }\n            }\n\n            component.flags |= ComponentFlags.Attached;\n            component.attached();\n            devModeOnComponentAttached(component);\n        }\n        vNodeAttach(vnode._children as IVNode<any>);\n        stackTracePopComponent();\n    }\n}\n\n/**\n * Recursively detach all nodes.\n *\n * @param vnode VNode.\n */\nfunction vNodeDetach(vnode: IVNode<any>, syncFlags: SyncFlags): void {\n    const flags = vnode._flags;\n\n    if (flags & VNodeFlags.Element) {\n        if (flags & (VNodeFlags.ChildrenVNode | VNodeFlags.ChildrenArray)) {\n            const children = vnode._children;\n            if (flags & VNodeFlags.ChildrenArray) {\n                vNodeDetachAll(children as IVNode<any>[], syncFlags);\n            } else {\n                vNodeDetach(children as IVNode<any>, syncFlags);\n            }\n        }\n        if ((flags & VNodeFlags.ElementProps) && (vnode._props as ElementProps<any>).events) {\n            detachEvents((vnode._props as ElementProps<any>).events!);\n        }\n    } else if (flags & VNodeFlags.Component) {\n        stackTracePushComponent(vnode);\n        if ((flags & VNodeFlags.KeepAlive) &&\n            (syncFlags & SyncFlags.Dispose) &&\n            ((vnode._tag as KeepAliveHandler)(vnode._children as IVNode<any>, vnode._props))) {\n            if (syncFlags & SyncFlags.Attached) {\n                vNodeDetach(vnode._children as IVNode<any>, syncFlags & ~SyncFlags.Dispose);\n            }\n        } else {\n            vNodeDetach(vnode._children as IVNode<any>, syncFlags);\n            if ((flags & VNodeFlags.ComponentClass) && (syncFlags & SyncFlags.Attached)) {\n                const component = vnode._instance as Component<any>;\n\n                if (__IVI_DEV__) {\n                    if (!(component.flags & ComponentFlags.Attached)) {\n                        throw new Error(\"Failed to detach Component: component is already detached.\");\n                    }\n                }\n                component.flags &= ~ComponentFlags.Attached;\n                component.detached();\n                devModeOnComponentDetached(component);\n            }\n        }\n        stackTracePopComponent();\n    }\n}\n\n/**\n * Detach all nodes and its subtrees.\n *\n * @param vnodes Array of VNodes.\n */\nfunction vNodeDetachAll(vnodes: IVNode<any>[], syncFlags: SyncFlags): void {\n    for (let i = 0; i < vnodes.length; i++) {\n        vNodeDetach(vnodes[i], syncFlags);\n    }\n}\n\n/**\n * Recursively update all dirty components.\n *\n * @param parent Parent DOM Node.\n * @param vnode VNode.\n * @param context New context.\n * @param syncFlags Sync flags.\n */\nfunction vNodeUpdateComponents(\n    parent: Node,\n    vnode: IVNode<any>,\n    context: Context,\n    syncFlags: SyncFlags,\n): void {\n    const flags = vnode._flags;\n    if (flags & (VNodeFlags.ChildrenVNode | VNodeFlags.ChildrenArray | VNodeFlags.Component)) {\n        if (flags & (VNodeFlags.ChildrenVNode | VNodeFlags.ChildrenArray)) {\n            const p = vnode._instance as Node;\n            let children = vnode._children;\n            if (flags & VNodeFlags.ChildrenArray) {\n                children = children as IVNode<any>[];\n                for (let i = 0; i < children.length; i++) {\n                    vNodeUpdateComponents(p, children[i], context, syncFlags);\n                }\n            } else {\n                vNodeUpdateComponents(p, children as IVNode<any>, context, syncFlags);\n            }\n        } else {\n            stackTracePushComponent(vnode);\n            if (flags & VNodeFlags.ComponentClass) {\n                const component = vnode._instance as Component<any>;\n\n                const cflags = component.flags;\n                const oldRoot = vnode._children as IVNode<any>;\n\n                if ((cflags & ComponentFlags.Dirty) | (syncFlags & SyncFlags.ForceUpdate)) {\n                    componentPerfMarkBegin(\"update\", vnode);\n                    component.beforeUpdate();\n                    const newRoot = vnode._children = component.render();\n                    vNodeSync(parent, oldRoot, newRoot, context, syncFlags);\n                    component.flags &= ~ComponentFlags.Dirty;\n                    component.updated();\n                    componentPerfMarkEnd(\"update\", vnode);\n                } else {\n                    vNodeUpdateComponents(parent, oldRoot, context, syncFlags);\n                }\n            } else { // (flags & VNodeFlags.ComponentFunction)\n                if (flags & VNodeFlags.Connect) {\n                    const connect = vnode._tag as ConnectDescriptor<any, any, any>;\n                    const prevSelectData = vnode._instance as SelectorData;\n                    componentPerfMarkBegin(\"update\", vnode);\n                    const selectData = connect.select(prevSelectData, vnode._props, context);\n                    const prevChildren = vnode._children;\n                    if (prevSelectData === selectData) {\n                        vNodeUpdateComponents(\n                            parent,\n                            prevChildren as IVNode<any>,\n                            context,\n                            syncFlags,\n                        );\n                    } else {\n                        vnode._children = connect.render(selectData.out);\n                        vnode._instance = selectData;\n                        vNodeSync(\n                            parent,\n                            prevChildren as IVNode<any>,\n                            vnode._children as IVNode<any>,\n                            context,\n                            syncFlags,\n                        );\n                    }\n                    componentPerfMarkEnd(\"update\", vnode);\n                } else {\n                    if (flags & VNodeFlags.UpdateContext) {\n                        if (syncFlags & SyncFlags.DirtyContext) {\n                            vnode._instance = Object.assign({}, context, vnode._props);\n                        }\n                        context = vnode._instance as Context;\n                    }\n                    vNodeUpdateComponents(\n                        parent,\n                        vnode._children as IVNode<any>,\n                        context,\n                        syncFlags,\n                    );\n                }\n            }\n            stackTracePopComponent();\n        }\n    }\n}\n\n/**\n * Move node.\n *\n * @param parent Parent DOM node.\n * @param node VNode element to move.\n * @param nextRef Reference to the next node, if it is null, node will be moved to the end.\n */\nfunction vNodeMoveChild(parent: Node, node: IVNode<any>, nextRef: Node | null): void {\n    parent.insertBefore(getDOMInstanceFromVNode(node)!, nextRef!);\n}\n\n/**\n * Remove all children.\n *\n * `detach` lifecycle methods will be invoked for all children and their subtrees.\n *\n * @param parent Parent DOM node.\n * @param nodes Arrays of VNodes to remove.\n */\nfunction vNodeRemoveAllChildren(parent: Node, nodes: IVNode<any>[], syncFlags: SyncFlags): void {\n    parent.textContent = \"\";\n    vNodeDetachAll(nodes, syncFlags | SyncFlags.Dispose);\n}\n\n/**\n * Remove child.\n *\n * `detach` lifecycle methods will be invoked for removed node and its subtree.\n *\n * @param parent Parent DOM node.\n * @param node VNode element to remove.\n */\nfunction vNodeRemoveChild(parent: Node, node: IVNode<any>, syncFlags: SyncFlags): void {\n    parent.removeChild(getDOMInstanceFromVNode(node)!);\n    vNodeDetach(node, syncFlags | SyncFlags.Dispose);\n}\n\n/**\n * Set value for HTMLInputElement.\n *\n * When value has a string type it is assigned to `value` property, otherwise it is assigned to `checked` property.\n *\n * @param input HTMLInputElement.\n * @param value Value.\n */\nfunction setHTMLInputValue(input: HTMLInputElement, value: string | boolean | null): void {\n    if (typeof value === \"string\") {\n        input.value = value;\n    } else {\n        input.checked = value as boolean;\n    }\n}\n\n/**\n * Render VNode.\n *\n * @param parent Parent DOM Node.\n * @param vnode VNode to render.\n * @param context Current context.\n * @returns Rendered DOM Node.\n */\nfunction vNodeRender(\n    parent: Node,\n    vnode: IVNode<any>,\n    context: Context,\n): Node {\n    if (__IVI_DEV__) {\n        if (!(vnode._flags & VNodeFlags.ComponentFunction) && vnode._instance) {\n            throw new Error(\"VNode is already have a reference to an instance. VNodes can't be used mutliple times, \" +\n                \"clone VNode with `cloneVNode`, or use immutable vnodes `vnode.immutable()` for hoisted trees.\");\n        }\n\n        if (vnode._flags & VNodeFlags.Immutable) {\n            throw new Error(\"Immutable VNodes can't be used to render trees, clone an immutable tree with a \" +\n                \"`cloneVNode` function.\");\n        }\n    }\n\n    const flags = vnode._flags;\n    let instance: Node | Component<any> | null = null;\n    let node: Node;\n    let childNode: Node;\n    let i: number;\n    let child: IVNode<any>;\n\n    if (flags & (VNodeFlags.Text | VNodeFlags.Element)) {\n        // Push nesting state and check for nesting violation.\n        const _prevNestingStateParentTagName = nestingStateParentTagName();\n        const _prevNestingStateAncestorFlags = nestingStateAncestorFlags();\n\n        if (flags & VNodeFlags.Text) {\n            pushNestingState(\"$t\");\n            checkNestingViolation();\n            node = document.createTextNode(vnode._children as string);\n        } else { // (flags & VNodeFlags.Element)\n            pushNestingState((flags & VNodeFlags.ElementDescriptor) ?\n                (vnode._tag as ElementDescriptor<any>)._tag :\n                vnode._tag as string);\n            checkNestingViolation();\n\n            devModeOnElementBeforeCreate(vnode);\n            if (flags & (VNodeFlags.ElementDescriptor | VNodeFlags.InputElement | VNodeFlags.SvgElement)) {\n                if (flags & VNodeFlags.ElementDescriptor) {\n                    node = (vnode._tag as ElementDescriptor<any>).createElement();\n                } else if (flags & VNodeFlags.SvgElement) {\n                    node = document.createElementNS(SVG_NAMESPACE, vnode._tag as string);\n                } else {\n                    if (flags & VNodeFlags.TextAreaElement) {\n                        node = document.createElement(\"textarea\");\n                    } else {\n                        node = document.createElement(\"input\");\n                        /**\n                         * #quirks\n                         *\n                         * It is important that we assign `type` before any other properties. IE11 will remove assigned\n                         * `value` when `type` is assigned.\n                         */\n                        (node as HTMLInputElement).type = vnode._tag as string;\n                    }\n                }\n            } else {\n                node = document.createElement(vnode._tag as string);\n            }\n            devModeOnElementCreated(vnode, node as Element);\n\n            if (flags & VNodeFlags.Autofocus) {\n                autofocus(node as Element);\n            }\n\n            if (vnode._className !== null) {\n                syncClassName(node as Element, flags, null, vnode._className);\n            }\n\n            if (flags & VNodeFlags.ElementProps) {\n                const props = (vnode._props as ElementProps<any>);\n                if (props.attrs !== null) {\n                    syncDOMProps(node as Element, flags, null, props.attrs);\n                }\n                if (props.style !== null) {\n                    syncStyle(node as HTMLElement, null, props.style);\n                }\n                if (props.events !== null) {\n                    setEventHandlersToDOMNode(node as Element, props.events);\n                }\n            }\n\n            let children = vnode._children;\n            if (children !== null) {\n                if (flags & (VNodeFlags.ChildrenBasic | VNodeFlags.ChildrenArray)) {\n                    if (flags & VNodeFlags.ChildrenBasic) {\n                        node.textContent = children as string;\n                    } else {\n                        children = children as IVNode<any>[];\n                        for (i = 0; i < children.length; i++) {\n                            child = children[i];\n                            childNode = vNodeRender(node, child, context);\n                            node.insertBefore(childNode, null);\n                        }\n                    }\n                } else if (flags & VNodeFlags.ChildrenVNode) {\n                    child = children as IVNode<any>;\n                    childNode = vNodeRender(node, child, context);\n                    node.insertBefore(childNode, null);\n                } else if (flags & VNodeFlags.InputElement) {\n                    /**\n                     * #quirks\n                     *\n                     * It is important that input value is assigned after all properties. It prevents some issues with\n                     * rounding, etc. `value` should be assigned after `step`, `min` and `max` properties.\n                     */\n                    setHTMLInputValue(node as HTMLInputElement, children as string | boolean);\n                } else { // (flags & VNodeFlags.UnsafeHTML)\n                    if (children) {\n                        setInnerHTML((node as Element), children as string, !!(flags & VNodeFlags.SvgElement));\n                    }\n                }\n            }\n        }\n\n        instance = node;\n        restoreNestingState(_prevNestingStateParentTagName, _prevNestingStateAncestorFlags);\n    } else { // (flags & VNodeFlags.Component)\n        if (flags & VNodeFlags.ComponentClass) {\n            const component = instance = new (vnode._tag as ComponentClass<any>)(vnode._props);\n            devModeOnComponentCreated(component);\n            stackTracePushComponent(vnode, instance);\n            componentPerfMarkBegin(\"create\", vnode);\n            const root = vnode._children = component.render();\n            node = vNodeRender(parent, root, context);\n            componentPerfMarkEnd(\"create\", vnode);\n        } else { // (flags & VNodeFlags.ComponentFunction)\n            stackTracePushComponent(vnode);\n            if (flags & VNodeFlags.KeepAlive) {\n                const keepAlive = vnode._tag as KeepAliveHandler;\n                const prev = keepAlive(null, vnode._props);\n                if (prev) {\n                    vNodeSync(\n                        parent,\n                        prev as IVNode<any>,\n                        vnode._children as IVNode<any>,\n                        context,\n                        SyncFlags.DirtyContext,\n                    );\n                    node = getDOMInstanceFromVNode(vnode._children as IVNode<any>)!;\n                } else {\n                    node = vNodeRender(\n                        parent,\n                        vnode._children as IVNode<any>,\n                        context,\n                    );\n                }\n            } else {\n                if (flags & (VNodeFlags.UpdateContext | VNodeFlags.Connect)) {\n                    if (flags & VNodeFlags.Connect) {\n                        const connect = (vnode._tag as ConnectDescriptor<any, any, any>);\n                        const selectData = vnode._instance = connect.select(null, vnode._props, context);\n                        vnode._children = connect.render(selectData.out);\n                    } else {\n                        context = instance = Object.assign({}, context, vnode._props);\n                    }\n                } else {\n                    componentPerfMarkBegin(\"create\", vnode);\n                    vnode._children = (vnode._tag as ComponentFunction<any>)(vnode._props);\n                }\n                node = vNodeRender(\n                    parent,\n                    vnode._children as IVNode<any>,\n                    context,\n                );\n                if (__IVI_DEV__) {\n                    if (!(flags & (VNodeFlags.UpdateContext | VNodeFlags.Connect))) {\n                        componentPerfMarkEnd(\"create\", vnode);\n                    }\n                }\n            }\n        }\n        stackTracePopComponent();\n    }\n\n    vnode._instance = instance;\n\n    return node;\n}\n\n/**\n * Render VNode into container and invoke `attached` lifecycle methods after VNode is inserted into container.\n *\n * It is important that `attached` methods are invoked only after DOM Nodes have been inserted into container, so it\n * goes twice through the entire vnode tree, first time when everything is rendered and the second time when `attached`\n * methods are invoked.\n *\n * @param parent Parent DOM Node.\n * @param refChild Reference to the next Node, when it is `null` child will be inserted at the end.\n * @param vnode VNode.\n * @param context Current context.\n * @returns Rendered DOM Node.\n */\nfunction vNodeRenderIntoAndAttach(\n    parent: Node,\n    refChild: Node | null,\n    vnode: IVNode<any>,\n    context: Context,\n    syncFlags: SyncFlags,\n): Node {\n    const node = vNodeRender(parent, vnode, context);\n    parent.insertBefore(node, refChild);\n    if (syncFlags & SyncFlags.Attached) {\n        vNodeAttach(vnode);\n    }\n    return node;\n}\n\n/**\n * Augment DOM Node with a Virtual DOM Node.\n *\n * #augment\n *\n * @param parent Parent DOM Node.\n * @param node DOM Node.\n * @param vnode Virtual DOM Node.\n * @param context Context.\n */\nfunction vNodeAugment(\n    parent: Node,\n    node: Node | null,\n    vnode: IVNode<any>,\n    context: Context,\n): void {\n    if (__IVI_DEV__) {\n        if (!(vnode._flags & VNodeFlags.ComponentFunction) && vnode._instance) {\n            throw new Error(\"VNode is already have a reference to an instance. VNodes can't be used mutliple times, \" +\n                \"clone VNode with `cloneVNode`, or use immutable vnodes `vnode.immutable()` for hoisted trees.\");\n        }\n\n        if (vnode._flags & VNodeFlags.Immutable) {\n            throw new Error(\"Immutable VNodes can't be used to render trees, clone an immutable tree with a \" +\n                \"`cloneVNode` function.\");\n        }\n    }\n\n    let instance: Node | Component<any> | null = null;\n\n    if (node) {\n        if (node.nodeType !== 8) { // Node.COMMENT_NODE === 8\n            const flags = vnode._flags;\n\n            if (flags & (VNodeFlags.Element | VNodeFlags.Text)) {\n                // Push nesting state and check for nesting violation.\n                const _prevNestingStateParentTagName = nestingStateParentTagName();\n                const _prevNestingStateAncestorFlags = nestingStateAncestorFlags();\n\n                instance = node;\n\n                if (flags & VNodeFlags.Element) {\n                    if (__IVI_DEV__) {\n                        pushNestingState((flags & VNodeFlags.ElementDescriptor) ?\n                            (vnode._tag as ElementDescriptor<any>)._tag :\n                            vnode._tag as string);\n                        checkNestingViolation();\n                        if (node.nodeType !== 1) {\n                            throw new Error(`Invalid node type: expected \"1\", actual \"${node.nodeType}\".`);\n                        }\n                        if (vnode._className) {\n                            const className = (node as Element).getAttribute(\"class\");\n                            if (className !== vnode._className) {\n                                throw new Error(`Invalid class name: expected \"${vnode._className}\", ` +\n                                    `actual \"${className}\".`);\n                            }\n                        }\n                        // We can't check any style properties, because browsers ignore style names they don't\n                        // understand, like style names with browser specific prefixes.\n                        if (vnode._children === null) {\n                            if (node.hasChildNodes()) {\n                                throw new Error(`Invalid children: expected \"0\" children, ` +\n                                    `actual \"${node.childNodes.length}\".`);\n                            }\n                        }\n                    }\n\n                    if (flags & VNodeFlags.ElementProps) {\n                        const props = (vnode._props as ElementProps<any>);\n                        if (props.events !== null) {\n                            setEventHandlersToDOMNode(node as Element, props.events);\n                        }\n                    }\n\n                    if (flags & (VNodeFlags.ChildrenArray | VNodeFlags.ChildrenVNode)) {\n                        let domChild = node.firstChild;\n                        if (flags & VNodeFlags.ChildrenArray) {\n                            const children = vnode._children as IVNode<any>[];\n                            for (let i = 0; i < children.length; i++) {\n                                if (__IVI_DEV__) {\n                                    if (domChild === null) {\n                                        throw new Error(`Invalid children: expected to find ${children.length} ` +\n                                            `children nodes.`);\n                                    }\n                                }\n                                const next = domChild!.nextSibling;\n                                vNodeAugment(node, domChild, children[i], context);\n                                domChild = next;\n                            }\n                            if (__IVI_DEV__) {\n                                if (domChild !== null) {\n                                    throw new Error(`Invalid children: document contains more children nodes ` +\n                                        `than expected.`);\n                                }\n                            }\n                        } else {\n                            if (__IVI_DEV__) {\n                                if (domChild === null) {\n                                    throw new Error(`Invalid children: expected to find 1 child node.`);\n                                }\n                                if (domChild.nextSibling !== null) {\n                                    throw new Error(`Invalid children: document contains more children nodes ` +\n                                        `than expected.`);\n                                }\n                            }\n                            vNodeAugment(node, domChild, vnode._children as IVNode<any>, context);\n                        }\n                    }\n                } else { // (flags & VNodeFlags.Text)\n                    const children = typeof vnode._children === \"number\" ?\n                        vnode._children.toString() :\n                        vnode._children as string;\n\n                    if (__IVI_DEV__) {\n                        pushNestingState(\"$t\");\n                        checkNestingViolation();\n\n                        if (node.nodeType !== 3) {\n                            throw new Error(`Invalid node type: expected \"3\", actual \"${node.nodeType}\".`);\n                        }\n                        if (!node.nodeValue!.startsWith(children)) {\n                            throw new Error(`Invalid text content: expected \"${vnode._children}\", actual ` +\n                                `\"${node.nodeValue!.slice(0, children.length)}\".`);\n                        }\n                    }\n\n                    if (node.nodeValue!.length > children.length) {\n                        parent.insertBefore((node as Text).splitText(children.length), node.nextSibling);\n                    }\n\n                }\n\n                restoreNestingState(_prevNestingStateParentTagName, _prevNestingStateAncestorFlags);\n            } else { // (flags & VNodeFlags.Component)\n                if (flags & VNodeFlags.ComponentClass) {\n                    const component = instance = new (vnode._tag as ComponentClass<any>)(vnode._props);\n                    devModeOnComponentCreated(component);\n                    stackTracePushComponent(vnode, instance);\n                    const root = vnode._children = component.render();\n                    if (component.shouldAugment()) {\n                        vNodeAugment(parent, node, root, context);\n                    } else {\n                        parent.replaceChild(vNodeRender(parent, root, context), node);\n                    }\n                } else {\n                    stackTracePushComponent(vnode);\n                    if (flags & (VNodeFlags.UpdateContext | VNodeFlags.Connect | VNodeFlags.KeepAlive)) {\n                        if (flags & VNodeFlags.Connect) {\n                            const connect = (vnode._tag as ConnectDescriptor<any, any, any>);\n                            const selectData = vnode._instance = connect.select(null, vnode._props, context);\n                            vnode._children = connect.render(selectData.out);\n                        } else if (VNodeFlags.UpdateContext) {\n                            context = instance = Object.assign({}, context, vnode._props);\n                        }\n                        vNodeAugment(parent, node, vnode._children as IVNode<any>, context);\n                    } else {\n                        const fc = vnode._tag as ComponentFunction<any>;\n                        vnode._children = fc(vnode._props);\n                        if (fc.shouldAugment === undefined || fc.shouldAugment(vnode._props)) {\n                            vNodeAugment(parent, node, vnode._children as IVNode<any>, context);\n                        } else {\n                            parent.replaceChild(vNodeRender(parent, vnode._children as IVNode<any>, context), node);\n                        }\n                    }\n                }\n\n                stackTracePopComponent();\n            }\n\n            vnode._instance = instance;\n        } else {\n            parent.replaceChild(vNodeRender(parent, vnode, context), node);\n        }\n    } else {\n        parent.insertBefore(vNodeRender(parent, vnode, context), null);\n    }\n}\n\n/**\n * Check if two nodes can be synced.\n *\n * Two nodes can be synced when their flags and tags are identical.\n *\n * @param a Old VNode.\n * @param b New VNode.\n * @returns true if nodes can be synced.\n */\nfunction vNodeCanSync(a: IVNode<any>, b: IVNode<any>): boolean {\n    return (\n        (((a._flags ^ b._flags) & VNodeFlags.Syncable) === 0) &&\n        a._tag === b._tag &&\n        a._key === b._key\n    );\n}\n\n/**\n * Check if two nodes has equal keys.\n *\n * @param a VNode.\n * @param b VNode.\n * @returns true if nodes has equal keys.\n */\nfunction vNodeEqualKeys(a: IVNode<any>, b: IVNode<any>): boolean {\n    return (\n        (a._key === b._key) &&\n        !((a._flags ^ b._flags) & VNodeFlags.Key)\n    );\n}\n\n/**\n * Sync two VNodes.\n *\n * When node `a` is synced with node `b`, `a` node should be considered as destroyed, and any access to it after sync\n * is an undefined behavior.\n *\n * @param parent Parent node.\n * @param a Old VNode.\n * @param b New VNode.\n * @param context Current context.\n * @param syncFlags Sync flags.\n */\nfunction vNodeSync(\n    parent: Node,\n    a: IVNode<any>,\n    b: IVNode<any>,\n    context: Context,\n    syncFlags: SyncFlags,\n): void {\n    if (__IVI_DEV__) {\n        if (b._flags & VNodeFlags.Immutable) {\n            throw new Error(\"Immutable VNodes can't be used to render trees, clone an immutable tree with a \" +\n                \"`cloneVNode` function.\");\n        }\n    }\n\n    if (a === b) {\n        vNodeUpdateComponents(parent, b, context, syncFlags);\n        return;\n    }\n\n    if (__IVI_DEV__) {\n        if (!(b._flags & VNodeFlags.ComponentFunction) && b._instance) {\n            throw new Error(\"VNode is already have a reference to an instance. VNodes can't be used mutliple times, \" +\n                \"clone VNode with `cloneVNode` function.\");\n        }\n    }\n\n    let instance;\n    const bFlags = b._flags;\n    if (vNodeCanSync(a, b)) {\n        instance = b._instance = a._instance;\n\n        if (bFlags & (VNodeFlags.Text | VNodeFlags.Element)) {\n            if (bFlags & VNodeFlags.Text) {\n                if (a._children !== b._children) {\n                    (instance as Text).nodeValue = b._children as string;\n                }\n            } else { // (flags & VNodeFlags.Element)\n                if (a._className !== b._className) {\n                    syncClassName(instance as Element, bFlags, a._className, b._className);\n                }\n\n                const aFlags = a._flags;\n                if ((aFlags | bFlags) & VNodeFlags.ElementProps) {\n                    let props;\n                    let aAttrs = null;\n                    let bAttrs = null;\n                    let aStyle = null;\n                    let bStyle = null;\n                    let aEvents = null;\n                    let bEvents = null;\n\n                    if (aFlags & VNodeFlags.ElementProps) {\n                        props = (a._props as ElementProps<any>);\n                        aAttrs = props.attrs;\n                        aStyle = props.style;\n                        aEvents = props.events;\n                    }\n                    if (bFlags & VNodeFlags.ElementProps) {\n                        props = (b._props as ElementProps<any>);\n                        bAttrs = props.attrs;\n                        bStyle = props.style;\n                        bEvents = props.events;\n                    }\n\n                    if (aAttrs !== bAttrs) {\n                        syncDOMProps(instance as Element, bFlags, aAttrs, bAttrs);\n                    }\n                    if (aStyle !== bStyle) {\n                        syncStyle(instance as HTMLElement, aStyle, bStyle);\n                    }\n                    if (aEvents !== bEvents) {\n                        if (syncFlags & SyncFlags.Attached) {\n                            syncEvents(instance as Element, aEvents, bEvents);\n                        }\n                        setEventHandlersToDOMNode(instance as Element, bEvents);\n                    }\n                }\n\n                if (a._children !== b._children) {\n                    syncChildren(\n                        instance as Element,\n                        aFlags,\n                        bFlags,\n                        a._children as IVNode<any>[] | IVNode<any> | string | number | boolean,\n                        b._children as IVNode<any>[] | IVNode<any> | string | number | boolean,\n                        context,\n                        syncFlags,\n                    );\n                }\n            }\n        } else { // (flags & VNodeFlags.Component)\n            stackTracePushComponent(b);\n            if (bFlags & VNodeFlags.ComponentClass) {\n                const component = instance as Component<any>;\n                // Update component props\n                const oldProps = a._props;\n                const newProps = b._props;\n                let propsChanged = 0;\n                if (component.isPropsChanged(oldProps, newProps)) {\n                    propsChanged = 1;\n                    // There is no reason to call `newPropsReceived` when props aren't changed, even when they are\n                    // reassigned later to reduce memory usage.\n                    component.newPropsReceived(oldProps, newProps);\n                }\n                // Reassign props even when they aren't changed to reduce overall memory usage.\n                //\n                // New value always stays alive because it is referenced from virtual dom tree, so instead of keeping\n                // in memory two values even when they are the same, we just always reassign it to the new value.\n                component.props = newProps;\n\n                const oldRoot = a._children as IVNode<any>;\n                if (propsChanged | (component.flags & ComponentFlags.Dirty) | (syncFlags & SyncFlags.ForceUpdate)) {\n                    componentPerfMarkBegin(\"update\", a);\n                    component.beforeUpdate();\n                    const newRoot = b._children = component.render();\n                    vNodeSync(parent, oldRoot, newRoot, context, syncFlags);\n                    component.flags &= ~ComponentFlags.Dirty;\n                    component.updated();\n                    componentPerfMarkEnd(\"update\", a);\n                } else {\n                    b._children = a._children;\n                    vNodeUpdateComponents(parent, oldRoot, context, syncFlags);\n                }\n            } else { // (flags & VNodeFlags.ComponentFunction)\n                const fn = b._tag as ComponentFunction<any>;\n\n                if (bFlags & (VNodeFlags.UpdateContext | VNodeFlags.Connect | VNodeFlags.KeepAlive)) {\n                    if (bFlags & VNodeFlags.Connect) {\n                        const connect = b._tag as ConnectDescriptor<any, any, any>;\n                        const prevSelectData = a._instance as SelectorData;\n                        componentPerfMarkBegin(\"update\", b);\n                        const selectData = connect.select(prevSelectData, b._props, context);\n                        b._instance = selectData;\n                        if (prevSelectData === selectData) {\n                            b._children = a._children;\n                            vNodeUpdateComponents(\n                                parent,\n                                b,\n                                context,\n                                syncFlags,\n                            );\n                        } else {\n                            b._children = connect.render(selectData.out);\n                            vNodeSync(\n                                parent,\n                                a._children as IVNode<any>,\n                                b._children as IVNode<any>,\n                                context,\n                                syncFlags,\n                            );\n                        }\n                        componentPerfMarkEnd(\"update\", b);\n                    } else {\n                        if (bFlags & VNodeFlags.UpdateContext) {\n                            if ((syncFlags & SyncFlags.DirtyContext) || (a._props !== b._props)) {\n                                syncFlags |= SyncFlags.DirtyContext;\n                                context = b._instance = Object.assign({}, context, b._props);\n                            } else {\n                                context = b._instance = a._instance as Context;\n                            }\n                        }\n                        vNodeSync(\n                            parent,\n                            a._children as IVNode<any>,\n                            b._children as IVNode<any>,\n                            context,\n                            syncFlags,\n                        );\n                    }\n                } else {\n                    if ((syncFlags & SyncFlags.ForceUpdate) ||\n                        ((a !== b) &&\n                            ((!fn.isPropsChanged && a._props !== b._props) ||\n                                (fn.isPropsChanged && fn.isPropsChanged(a._props, b._props))))) {\n                        componentPerfMarkBegin(\"update\", b);\n                        const oldRoot = a._children as IVNode<any>;\n                        const newRoot = b._children = fn(b._props);\n                        vNodeSync(parent, oldRoot, newRoot, context, syncFlags);\n                        componentPerfMarkEnd(\"update\", b);\n                    } else {\n                        b._children = a._children;\n                        vNodeUpdateComponents(parent, b._children as IVNode<any>, context, syncFlags);\n                    }\n                }\n            }\n            stackTracePopComponent();\n        }\n    } else {\n        instance = vNodeRender(parent, b, context);\n        parent.replaceChild(instance, getDOMInstanceFromVNode(a)!);\n        if (syncFlags & SyncFlags.Attached) {\n            vNodeDetach(a, syncFlags | SyncFlags.Dispose);\n            vNodeAttach(b);\n        }\n    }\n}\n\n/**\n * Sync old children list with the new one.\n *\n * @param parent Parent node.\n * @param aParentFlags Old parent VNode flags.\n * @param bParentFlags New parent VNode flags.\n * @param a Old VNode list.\n * @param b New VNode list.\n * @param context Current context.\n * @param syncFlags Sync flags.\n */\nfunction syncChildren(\n    parent: Node,\n    aParentFlags: VNodeFlags,\n    bParentFlags: VNodeFlags,\n    a: IVNode<any>[] | IVNode<any> | string | number | boolean,\n    b: IVNode<any>[] | IVNode<any> | string | number | boolean,\n    context: Context,\n    syncFlags: SyncFlags,\n): void {\n    let i = 0;\n    let synced;\n    let node;\n\n    if (a === null) {\n        if (bParentFlags & (VNodeFlags.ChildrenBasic | VNodeFlags.ChildrenArray)) {\n            if (bParentFlags & VNodeFlags.ChildrenBasic) {\n                parent.textContent = b as string;\n            } else {\n                b = b as IVNode<any>[];\n                do {\n                    vNodeRenderIntoAndAttach(parent, null, b[i++], context, syncFlags);\n                } while (i < b.length);\n            }\n        } else if (bParentFlags & VNodeFlags.ChildrenVNode) {\n            vNodeRenderIntoAndAttach(parent, null, b as IVNode<any>, context, syncFlags);\n        } else if (bParentFlags & VNodeFlags.InputElement) {\n            setHTMLInputValue(parent as HTMLInputElement, b as string | boolean);\n        } else { // (bParentFlags & VNodeFlags.UnsafeHTML)\n            if (b) {\n                setInnerHTML(parent as Element, b as string, !!(bParentFlags & VNodeFlags.SvgElement));\n            }\n        }\n    } else if (b === null) {\n        if (aParentFlags & (VNodeFlags.ChildrenBasic | VNodeFlags.UnsafeHTML)) {\n            parent.textContent = \"\";\n        } else if (aParentFlags & VNodeFlags.ChildrenArray) {\n            vNodeRemoveAllChildren(parent, a as IVNode<any>[], syncFlags);\n        } else if (aParentFlags & VNodeFlags.ChildrenVNode) {\n            vNodeRemoveChild(parent, a as IVNode<any>, syncFlags);\n        } else { // (bParentFlags & VNodeFlags.InputElement)\n            /**\n             * When value/checked isn't specified, we should just ignore it.\n             */\n        }\n    } else {\n        if (aParentFlags & (VNodeFlags.ChildrenBasic | VNodeFlags.UnsafeHTML)) {\n            if (bParentFlags & (VNodeFlags.ChildrenBasic | VNodeFlags.UnsafeHTML)) {\n                if (bParentFlags & VNodeFlags.ChildrenBasic) {\n                    const c = parent.firstChild;\n                    if (c) {\n                        c.nodeValue = b as string;\n                    } else {\n                        parent.textContent = b as string;\n                    }\n                } else {\n                    if (b) {\n                        setInnerHTML((parent as Element), b as string, !!(bParentFlags & VNodeFlags.SvgElement));\n                    } else {\n                        parent.textContent = \"\";\n                    }\n                }\n            } else {\n                parent.textContent = \"\";\n                if (bParentFlags & VNodeFlags.ChildrenArray) {\n                    b = b as IVNode<any>[];\n                    do {\n                        vNodeRenderIntoAndAttach(parent, null, b[i++], context, syncFlags);\n                    } while (i < b.length);\n                } else {\n                    vNodeRenderIntoAndAttach(parent, null, b as IVNode<any>, context, syncFlags);\n                }\n            }\n        } else if (aParentFlags & VNodeFlags.ChildrenArray) {\n            a = a as IVNode<any>[];\n            if (bParentFlags & (VNodeFlags.ChildrenBasic | VNodeFlags.UnsafeHTML)) {\n                if ((bParentFlags & VNodeFlags.ChildrenBasic) || !b) {\n                    parent.textContent = b as string;\n                } else {\n                    setInnerHTML(parent as Element, b as string, !!(bParentFlags & VNodeFlags.SvgElement));\n                }\n                vNodeDetachAll(a, syncFlags | SyncFlags.Dispose);\n            } else if (bParentFlags & VNodeFlags.ChildrenArray) {\n                syncChildrenTrackByKeys(parent, a, b as IVNode<any>[], context, syncFlags);\n            } else {\n                b = b as IVNode<any>;\n                synced = -1;\n                i = 0;\n                do {\n                    node = a[i];\n                    if (vNodeEqualKeys(node, b)) {\n                        vNodeSync(parent, node, b, context, syncFlags);\n                        synced = i;\n                        break;\n                    }\n                    i++;\n                } while (i < a.length);\n                if (synced > -1) {\n                    for (i = 0; i < synced; i++) {\n                        vNodeRemoveChild(parent, a[i], syncFlags);\n                    }\n                    for (i = synced + 1; i < a.length; i++) {\n                        vNodeRemoveChild(parent, a[i], syncFlags);\n                    }\n                } else {\n                    vNodeRemoveAllChildren(parent, a, syncFlags);\n                    vNodeRenderIntoAndAttach(parent, null, b, context, syncFlags);\n                }\n            }\n        } else if (aParentFlags & VNodeFlags.ChildrenVNode) {\n            a = a as IVNode<any>;\n            if (bParentFlags & (VNodeFlags.ChildrenBasic | VNodeFlags.UnsafeHTML)) {\n                if ((bParentFlags & VNodeFlags.ChildrenBasic) || !b) {\n                    parent.textContent = b as string;\n                } else {\n                    setInnerHTML(parent as Element, b as string, !!(bParentFlags & VNodeFlags.SvgElement));\n                }\n                vNodeDetach(a, syncFlags | SyncFlags.Dispose);\n            } else if (bParentFlags & VNodeFlags.ChildrenArray) {\n                b = b as IVNode<any>[];\n                synced = -1;\n                i = 0;\n                do {\n                    node = b[i];\n                    if (vNodeEqualKeys(a, node)) {\n                        vNodeSync(parent, a, node, context, syncFlags);\n                        synced = i;\n                        break;\n                    }\n                    i++;\n                } while (i < b.length);\n                if (synced > -1) {\n                    const next = getDOMInstanceFromVNode(a);\n                    for (i = 0; i < synced; i++) {\n                        vNodeRenderIntoAndAttach(parent, next, b[i], context, syncFlags);\n                    }\n                    for (i = synced + 1; i < b.length; i++) {\n                        vNodeRenderIntoAndAttach(parent, null, b[i], context, syncFlags);\n                    }\n                } else {\n                    vNodeRemoveChild(parent, a, syncFlags);\n                    for (i = 0; i < b.length; i++) {\n                        vNodeRenderIntoAndAttach(parent, null, b[i], context, syncFlags);\n                    }\n                }\n            } else {\n                vNodeSync(parent, a, b as IVNode<any>, context, syncFlags);\n            }\n        } else { // (aParentFlags & VNodeFlags.InputElement)\n            /**\n             * Input elements has an internal state with a `value` property, so it should be checked before an\n             * assignment to prevent unnecessary events when `value` is the same as the `value` in the internal\n             * state.\n             *\n             * In general we don't want to override behaviour of DOM Elements with an internal state. Assigning props\n             * to such elements should be treated as a one-time assignment, so it works almost like `value` attribute,\n             * except when a new value is passed down, it can override previous value when it doesn't match the previous\n             * one. There is absolutely no reasons to overcomplicate such behaviour just to make it more beatiful like\n             * it is a declarative assignment and can't be changed, because in real applications, component that\n             * controls this element will always track changes, and when it changes it will invalidate its\n             * representation, so everything will stay in-sync.\n             */\n            if (typeof b === \"string\") {\n                if ((parent as HTMLInputElement).value !== b) {\n                    (parent as HTMLInputElement).value = b;\n                }\n            } else {\n                (parent as HTMLInputElement).checked = b as boolean;\n            }\n        }\n    }\n}\n\n/**\n * Sync children.\n *\n * This algorithm finds a minimum[1] number of DOM operations. It works in several steps:\n *\n * 1. Find common suffix and prefix, and perform simple moves on the edges.\n *\n * This optimization technique is searching for nodes with identical keys by simultaneously iterating over nodes in the\n * old children list `A` and new children list `B` from both sides:\n *\n *  A: -> [a b c d e f g] <-\n *  B: -> [a b f d c g] <-\n *\n * Here we can skip nodes \"a\" and \"b\" at the begininng, and node \"g\" at the end.\n *\n *  A: -> [c d e f] <-\n *  B: -> [f d c] <-\n *\n * At this position it will try to look at the opposite edge, and if there is a node with the same key at the opposite\n * edge, it will perform simple move operation. Node \"c\" is moved to the right edge, and node \"f\" is moved to the left\n * edge.\n *\n *  A: -> [d e] <-\n *  B: -> [d] <-\n *\n * Now it will try again to find common prefix and suffix, node \"d\" is the same, so we can skip it.\n *\n *  A: [e]\n *  B: []\n *\n * Here it will check if the size of one of the list is equal to zero, and if length of the old children list is zero,\n * it will insert all remaining nodes from the new list, or if length of the new children list is zero, it will remove\n * all remaining nodes from the old list.\n *\n * This simple optimization technique will cover most of the real world use cases, even reversing the children list,\n * except for sorting.\n *\n * When algorithm couldn't find a solution with this simple optimization technique, it will go to the next step of the\n * algorithm. For example:\n *\n *  A: -> [a b c d e f g] <-\n *  B: -> [a c b h f e g] <-\n *\n * Nodes \"a\" and \"g\" at the edges are the same, skipping them.\n *\n *  A: -> [b c d e f] <-\n *  B: -> [c b h f e] <-\n *\n * Here we are stuck, so we need to switch to the next step.\n *\n * 2. Look for removed and inserted nodes, and simultaneously check if one of the nodes is moved.\n *\n * First we create an array `P` with the length of the new children list and assign to each position value `-1`, it has\n * a meaning of a new node that should be inserted. Later we will assign node positions in the old children list to this\n * array.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *  P: [. . . . .] // . == -1\n *\n * Then we need to build an index `I` that maps keys with node positions of the remaining nodes from the new children\n * list.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *  P: [. . . . .] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1,\n *    h: 2,\n *    f: 3,\n *    e: 4,\n *  }\n *  last = 0\n *\n * With this index, we start to iterate over the remaining nodes from the old children list and check if we can find a\n * node with the same key in the index. If we can't find any node, it means that it should be removed, otherwise we\n * assign position of the node in the old children list to the positions array.\n *\n *  A: [b c d e f]\n *      ^\n *  B: [c b h f e]\n *  P: [. 0 . . .] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1, <-\n *    h: 2,\n *    f: 3,\n *    e: 4,\n *  }\n *  last = 1\n *\n * When we assigning positions to the positions array, we also keep a position of the last seen node in the new children\n * list, if the last seen position is larger than current position of the node at the new list, then we are switching\n * `moved` flag to `true`.\n *\n *  A: [b c d e f]\n *        ^\n *  B: [c b h f e]\n *  P: [1 0 . . .] // . == -1\n *  I: {\n *    c: 0, <-\n *    b: 1,\n *    h: 2,\n *    f: 3,\n *    e: 4,\n *  }\n *  last = 1 // last > 0; moved = true\n *\n * The last position `1` is larger than current position of the node at the new list `0`, switching `moved` flag to\n * `true`.\n *\n *  A: [b c d e f]\n *          ^\n *  B: [c b h f e]\n *  P: [1 0 . . .] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1,\n *    h: 2,\n *    f: 3,\n *    e: 4,\n *  }\n *  moved = true\n *\n * Node with key \"d\" doesn't exist in the index, removing node.\n *\n *  A: [b c d e f]\n *            ^\n *  B: [c b h f e]\n *  P: [1 0 . . 3] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1,\n *    h: 2,\n *    f: 3,\n *    e: 4, <-\n *  }\n *  moved = true\n *\n * Assign position for `e`.\n *\n *  A: [b c d e f]\n *              ^\n *  B: [c b h f e]\n *  P: [1 0 . 4 3] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1,\n *    h: 2,\n *    f: 3, <-\n *    e: 4,\n *  }\n *  moved = true\n *\n * Assign position for 'f'.\n *\n * At this point we are checking if `moved` flag is on, or if the length of the old children list minus the number of\n * removed nodes isn't equal to the length of the new children list. If any of this conditions is true, then we are\n * going to the next step.\n *\n * 3. Find minimum number of moves if `moved` flag is on, or insert new nodes if the length is changed.\n *\n * When `moved` flag is on, we need to find the\n * [longest increasing subsequence](http://en.wikipedia.org/wiki/Longest_increasing_subsequence) in the positions array,\n * and move all nodes that doesn't belong to this subsequence.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *  moved = true\n *\n * Now we just need to simultaneously iterate over the new children list and LIS from the end and check if the current\n * position is equal to a value from LIS.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *              ^  // new_pos == 4\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *              ^  // new_pos == 4\n *  moved = true\n *\n * Node \"e\" stays at the same place.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *            ^    // new_pos == 3\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *            ^    // new_pos != 1\n *  moved = true\n *\n * Node \"f\" is moved, move it before the next node \"e\".\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *          ^      // new_pos == 2\n *  P: [1 0 . 4 3] // . == -1\n *          ^      // old_pos == -1\n *  LIS:     [1 4]\n *            ^\n *  moved = true\n *\n * Node \"h\" has a `-1` value in the positions array, insert new node \"h\".\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *        ^        // new_pos == 1\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *            ^    // new_pos == 1\n *  moved = true\n *\n * Node \"b\" stays at the same place.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *      ^          // new_pos == 0\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *          ^      // new_pos != undefined\n *  moved = true\n *\n * Node \"c\" is moved, move it before the next node \"b\".\n *\n * When moved flag is off, we don't need to find LIS, and we just iterate over the new children list and check its\n * current position in the positions array, if it is `-1`, then we insert new node.\n *\n * That is how children reconciliation algorithm is working in one of the fastest virtual dom libraries :)\n *\n * [1] Actually it is almost minimum number of dom ops, when node is removed and another one is inserted at the same\n * place, instead of insert and remove dom ops, we can use one replace op. It will make everything even more\n * complicated, and other use cases will be slower, so I don't think that it is worth to use replace here.\n * Also, there are some rare cases like \"ab\" => \"bc\" that will use more DOM ops that is necessary because of\n * prefix/suffix optimization.\n *\n * @param parent Parent node.\n * @param a Old VNode list.\n * @param b New VNode list.\n * @param context Current context.\n * @param syncFlags Sync flags.\n */\nfunction syncChildrenTrackByKeys(\n    parent: Node,\n    a: IVNode<any>[],\n    b: IVNode<any>[],\n    context: Context,\n    syncFlags: SyncFlags,\n): void {\n    let aStart = 0;\n    let bStart = 0;\n    let aEnd = a.length - 1;\n    let bEnd = b.length - 1;\n    let aStartNode = a[aStart];\n    let bStartNode = b[bStart];\n    let aEndNode = a[aEnd];\n    let bEndNode = b[bEnd];\n    let i: number;\n    let j: number | undefined;\n    let nextPos: number;\n    let next: Node | null;\n    let aNode: IVNode<any> | null;\n    let bNode: IVNode<any>;\n    let node: IVNode<any>;\n\n    // Step 1\n    outer: while (true) {\n        // Sync nodes with the same key at the beginning.\n        while (vNodeEqualKeys(aStartNode, bStartNode)) {\n            vNodeSync(parent, aStartNode, bStartNode, context, syncFlags);\n            aStart++;\n            bStart++;\n            if (aStart > aEnd || bStart > bEnd) {\n                break outer;\n            }\n            aStartNode = a[aStart];\n            bStartNode = b[bStart];\n        }\n\n        // Sync nodes with the same key at the end.\n        while (vNodeEqualKeys(aEndNode, bEndNode)) {\n            vNodeSync(parent, aEndNode, bEndNode, context, syncFlags);\n            aEnd--;\n            bEnd--;\n            if (aStart > aEnd || bStart > bEnd) {\n                break outer;\n            }\n            aEndNode = a[aEnd];\n            bEndNode = b[bEnd];\n        }\n\n        // Move and sync nodes from right to left.\n        if (vNodeEqualKeys(aEndNode, bStartNode)) {\n            vNodeSync(parent, aEndNode, bStartNode, context, syncFlags);\n            vNodeMoveChild(parent, bStartNode, getDOMInstanceFromVNode(aStartNode));\n            aEnd--;\n            bStart++;\n            // There is no need to check when we out of bounds, because the only way we can get here is when there are\n            // more nodes in the lists.\n            //\n            // Impossible transformations:\n            //   [a] => [a b] (common prefix)\n            //   [b a] => [a] (common suffix)\n            //\n            // Possible transformations:\n            //   [b a] => [a b]\n            //   [b a] => [a c]\n\n            aEndNode = a[aEnd];\n            bStartNode = b[bStart];\n            // In a real-world scenarios there is a higher chance that next node after the move will be the same, so we\n            // immediately jump to the start of this prefix/suffix algo.\n            continue;\n        }\n\n        // Move and sync nodes from left to right.\n        if (vNodeEqualKeys(aStartNode, bEndNode)) {\n            vNodeSync(parent, aStartNode, bEndNode, context, syncFlags);\n            nextPos = bEnd + 1;\n            next = nextPos < b.length ? getDOMInstanceFromVNode(b[nextPos]) : null;\n            vNodeMoveChild(parent, bEndNode, next);\n            aStart++;\n            bEnd--;\n            aStartNode = a[aStart];\n            bEndNode = b[bEnd];\n            continue;\n        }\n\n        break;\n    }\n\n    if (aStart > aEnd) {\n        // All nodes from a are synced, insert the rest from b.\n        if (bStart <= bEnd) {\n            nextPos = bEnd + 1;\n            next = nextPos < b.length ? getDOMInstanceFromVNode(b[nextPos]) : null;\n            do {\n                vNodeRenderIntoAndAttach(parent, next, b[bStart++], context, syncFlags);\n            } while (bStart <= bEnd);\n        }\n    } else if (bStart > bEnd) {\n        // All nodes from b are synced, remove the rest from a.\n        do {\n            vNodeRemoveChild(parent, a[aStart++], syncFlags);\n        } while (aStart <= aEnd);\n        // Step 2\n    } else {\n        let aLength = aEnd - aStart + 1;\n        let bLength = bEnd - bStart + 1;\n        // Optimization for use cases when there is just one node left after prefix/suffix step.\n        // TODO: Is it worth enabling it?\n        //\n        // if ((aLength | bLength) === 1) {\n        //     next = vNodeRender(parent, bStartNode, context);\n        //     parent.replaceChild(next, getDOMInstanceFromVNode(aStartNode)!);\n        //     if (syncFlags & SyncFlags.Attached) {\n        //         vNodeDetach(aStartNode, syncFlags | SyncFlags.Dispose);\n        //         vNodeAttach(bStartNode);\n        //     }\n        // }\n        const aNullable = a as Array<IVNode<any> | null>; // will be removed by js optimizing compilers.\n        // Mark all nodes as inserted.\n        const sources = new Array<number>(bLength).fill(-1);\n\n        let moved = false;\n        let pos = 0;\n        let synced = 0;\n\n        // When children lists are small, we are using naive O(N) algorithm to find if child is removed.\n        // TODO: In the future, Map implementations will use similar optimization.\n        if ((bLength <= 4) || ((aLength * bLength) <= 16)) {\n            for (i = aStart; i <= aEnd; i++) {\n                aNode = a[i];\n                if (synced < bLength) {\n                    for (j = bStart; j <= bEnd; j++) {\n                        bNode = b[j];\n                        if (vNodeEqualKeys(aNode, bNode)) {\n                            sources[j - bStart] = i;\n\n                            if (pos > j) {\n                                moved = true;\n                            } else {\n                                pos = j;\n                            }\n                            vNodeSync(parent, aNode, bNode, context, syncFlags);\n                            synced++;\n                            aNullable[i] = null;\n                            break;\n                        }\n                    }\n                }\n            }\n        } else {\n            let keyIndex: Map<any, number> | undefined;\n            let positionKeyIndex: Map<number, number> | undefined;\n\n            for (i = bStart; i <= bEnd; i++) {\n                node = b[i];\n                if (node._flags & VNodeFlags.Key) {\n                    if (keyIndex === undefined) {\n                        keyIndex = new Map<any, number>();\n                    }\n                    keyIndex.set(node._key, i);\n                } else {\n                    if (positionKeyIndex === undefined) {\n                        positionKeyIndex = new Map<number, number>();\n                    }\n                    positionKeyIndex.set(node._key - aStart, i);\n                }\n            }\n\n            for (i = aStart; i <= aEnd; i++) {\n                aNode = a[i];\n\n                if (synced < bLength) {\n                    if (aNode._flags & VNodeFlags.Key) {\n                        j = keyIndex ? keyIndex.get(aNode._key) : undefined;\n                    } else {\n                        j = positionKeyIndex ? positionKeyIndex.get(aNode._key - aStart) : undefined;\n                    }\n\n                    if (j !== undefined) {\n                        bNode = b[j];\n                        sources[j - bStart] = i;\n                        if (pos > j) {\n                            moved = true;\n                        } else {\n                            pos = j;\n                        }\n                        vNodeSync(parent, aNode, bNode, context, syncFlags);\n                        synced++;\n                        aNullable[i] = null;\n                    }\n                }\n            }\n        }\n\n        if (aLength === a.length && synced === 0) {\n            // Noone is synced, remove all children with one dom op.\n            vNodeRemoveAllChildren(parent, a, syncFlags);\n            while (bStart < bLength) {\n                vNodeRenderIntoAndAttach(parent, null, b[bStart++], context, syncFlags);\n            }\n        } else {\n            i = aLength - synced;\n            while (i > 0) {\n                aNode = aNullable[aStart++];\n                if (aNode !== null) {\n                    vNodeRemoveChild(parent, aNode, syncFlags);\n                    i--;\n                }\n            }\n\n            // Step 3\n            if (moved) {\n                const seq = lis(sources);\n                j = seq.length - 1;\n                for (i = bLength - 1; i >= 0; i--) {\n                    if (sources[i] === -1) {\n                        pos = i + bStart;\n                        node = b[pos];\n                        nextPos = pos + 1;\n                        next = nextPos < b.length ? getDOMInstanceFromVNode(b[nextPos]) : null;\n                        vNodeRenderIntoAndAttach(parent, next, node, context, syncFlags);\n                    } else {\n                        if (j < 0 || i !== seq[j]) {\n                            pos = i + bStart;\n                            node = b[pos];\n                            nextPos = pos + 1;\n                            next = nextPos < b.length ? getDOMInstanceFromVNode(b[nextPos]) : null;\n                            vNodeMoveChild(parent, node, next);\n                        } else {\n                            j--;\n                        }\n                    }\n                }\n            } else if (synced !== bLength) {\n                for (i = bLength - 1; i >= 0; i--) {\n                    if (sources[i] === -1) {\n                        pos = i + bStart;\n                        node = b[pos];\n                        nextPos = pos + 1;\n                        next = nextPos < b.length ? getDOMInstanceFromVNode(b[nextPos]) : null;\n                        vNodeRenderIntoAndAttach(parent, next, node, context, syncFlags);\n                    }\n                }\n            }\n        }\n    }\n}\n\n/**\n * Slightly modified Longest Increased Subsequence algorithm, it ignores items that have -1 value, they're representing\n * new items.\n *\n * http://en.wikipedia.org/wiki/Longest_increasing_subsequence\n *\n * @param a Array of numbers.\n * @returns Longest increasing subsequence.\n */\nfunction lis(a: number[]): number[] {\n    const p = a.slice(0);\n    const result: number[] = [];\n    result.push(0);\n    let u: number;\n    let v: number;\n\n    for (let i = 0, il = a.length; i < il; i++) {\n        if (a[i] === -1) {\n            continue;\n        }\n\n        let j = result[result.length - 1];\n        if (a[j] < a[i]) {\n            p[i] = j;\n            result.push(i);\n            continue;\n        }\n\n        u = 0;\n        v = result.length - 1;\n\n        while (u < v) {\n            let c = ((u + v) / 2) | 0;\n            if (a[result[c]] < a[i]) {\n                u = c + 1;\n            } else {\n                v = c;\n            }\n        }\n\n        if (a[i] < a[result[u]]) {\n            if (u > 0) {\n                p[i] = result[u - 1];\n            }\n            result[u] = i;\n        }\n    }\n\n    u = result.length;\n    v = result[u - 1];\n\n    while (u-- > 0) {\n        result[u] = v;\n        v = p[v];\n    }\n\n    return result;\n}\n","import { FEATURES, FeatureFlags } from \"../common/feature_detection\";\nimport { NativeEventDispatcherFlags } from \"./flags\";\nimport { EventHandler } from \"./event_handler\";\n\ndeclare global {\n    interface Element {\n        _ev: Array<EventHandler | null> | EventHandler | null | undefined;\n    }\n}\n\n/**\n * `{ capture: true, passive: true }` object that should be used as a third parameter in `addEventListener`.\n */\nexport const EVENT_CAPTURE_PASSIVE_OPTIONS =\n    (FEATURES & FeatureFlags.PassiveEvents) ?\n        { \"capture\": true, \"passive\": true } :\n        true;\n\n/**\n * `{ passive: true }` object that should be used as a third parameter in `addEventListener`.\n */\nexport const EVENT_PASSIVE_OPTIONS =\n    (FEATURES & FeatureFlags.PassiveEvents) ?\n        { \"passive\": true } :\n        false;\n\n/**\n * Get Event options that should be used when adding Event Listener.\n *\n * #quirks\n *\n * @param flags See `EventDispatcherFlags` for details.\n * @returns Option object that can be used as a 3rd parameter in `addEventListener` call.\n */\nexport function getEventOptions(flags: NativeEventDispatcherFlags): boolean | { capture?: boolean, passive?: boolean } {\n    if (flags & NativeEventDispatcherFlags.Passive) {\n        if (flags & NativeEventDispatcherFlags.Capture) {\n            return EVENT_CAPTURE_PASSIVE_OPTIONS;\n        }\n        return EVENT_PASSIVE_OPTIONS;\n    }\n    if (flags & NativeEventDispatcherFlags.Capture) {\n        return true;\n    }\n    return false;\n}\n\n/**\n * Property that is used on DOM Nodes to store EventProps object.\n */\nexport const DOM_NODE_EVENTS_PROPERTY = \"_ev\";\n\n/**\n * Set Event Handlers to DOM Node.\n *\n * @param node DOM Node.\n * @param events Event Handlers.\n */\nexport function setEventHandlersToDOMNode(\n    node: Element,\n    events: Array<EventHandler | null> | EventHandler | null,\n): void {\n    node._ev = events;\n}\n\n/**\n * Get Event Handlers from DOM Node.\n *\n * @param node DOM Node.\n * @returns Event Handlers.\n */\nexport function getEventHandlersFromDOMNode(\n    node: Element,\n): Array<EventHandler | null> | EventHandler | undefined | null {\n    return node._ev;\n}\n","import { Context } from \"../common/types\";\nimport { USER_AGENT, UserAgentFlags } from \"../common/user_agent\";\nimport { NOOP } from \"../common/noop\";\nimport { nextFrame, syncFrameUpdate } from \"../scheduler/frame\";\nimport { SyncFlags } from \"./flags\";\nimport { IVNode } from \"./ivnode\";\nimport { VNode } from \"./vnode\";\nimport { $t } from \"./vnode_dom\";\nimport { renderVNode, syncVNode, removeVNode, augmentVNode, updateComponents } from \"./implementation\";\n\n/**\n * Root.\n */\nexport interface Root {\n    container: Element;\n    currentVNode: IVNode<any> | null;\n    newVNode: IVNode<any> | null;\n    invalidated: boolean;\n    syncFlags: SyncFlags;\n}\n\n/**\n * Array of registered root nodes.\n */\nexport const ROOTS = [] as Root[];\n\n/**\n * Empty Context object.\n */\nconst EMPTY_CONTEXT: Context = {};\n\n/**\n * Find Root node in container.\n *\n * @param container DOM Node that contains root node.\n * @returns root node or undefined when root node doesn't exist.\n */\nexport function findRoot(container: Element): Root | undefined {\n    for (let i = 0; i < ROOTS.length; i++) {\n        const r = ROOTS[i];\n        if (r.container === container) {\n            return r;\n        }\n    }\n\n    return;\n}\n\n/**\n * Fix for the Mouse Event bubbling on iOS devices.\n *\n * #quirks\n *\n * http://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\n */\nfunction iOSFixEventBubbling(container: Element): void {\n    if (USER_AGENT & UserAgentFlags.iOS) {\n        (container as HTMLElement).onclick = NOOP;\n    }\n}\n\nlet _pendingUpdate = false;\nlet _globalSyncFlags: SyncFlags = 0;\n\n/**\n * Update root nodes.\n */\nfunction _update() {\n    if (_pendingUpdate) {\n        _pendingUpdate = false;\n        for (let i = 0; i < ROOTS.length; i++) {\n            const root = ROOTS[i];\n            const container = root.container;\n            const currentVNode = root.currentVNode;\n            const syncFlags = _globalSyncFlags | root.syncFlags | SyncFlags.Attached;\n\n            if (root.invalidated) {\n                let newVNode = root.newVNode;\n\n                if (newVNode) {\n                    if (newVNode.constructor !== VNode) {\n                        newVNode = $t(\"\");\n                    }\n                    if (currentVNode) {\n                        syncVNode(container, currentVNode, newVNode, EMPTY_CONTEXT, syncFlags);\n                    } else {\n                        renderVNode(container, null, newVNode!, EMPTY_CONTEXT);\n                        iOSFixEventBubbling(container);\n                    }\n                    root.currentVNode = newVNode;\n                } else if (currentVNode) {\n                    removeVNode(container, currentVNode);\n                    const last = ROOTS.pop();\n                    if (last !== root && ROOTS.length) {\n                        ROOTS[ROOTS.indexOf(root)] = last!;\n                    }\n                }\n\n                root.newVNode = null;\n                root.invalidated = false;\n            } else if (currentVNode) {\n                updateComponents(container, currentVNode, EMPTY_CONTEXT, syncFlags);\n            }\n            root.syncFlags = 0;\n        }\n    }\n}\n\n/**\n * Render VNode into container.\n *\n * @param node VNode to render.\n * @param container DOM Node that will contain rendered node.\n * @param syncFlags Sync Flags.\n */\nexport function render(\n    node: IVNode<any> | null,\n    container: Element,\n    syncFlags: SyncFlags = 0,\n): void {\n    renderNextFrame(node, container, syncFlags);\n    syncFrameUpdate();\n}\n\n/**\n * Render VNode into container on the next frame.\n *\n * @param node VNode to render.\n * @param container DOM Node that will contain rendered node.\n * @param syncFlags Sync Flags.\n */\nexport function renderNextFrame(\n    node: IVNode<any> | null,\n    container: Element,\n    syncFlags: SyncFlags = 0,\n): void {\n    if (__IVI_DEV__) {\n        if (container === document.body) {\n            throw new Error(\"Rendering in the <body> aren't allowed, create an element inside body that will contain \" +\n                \"your application.\");\n        }\n        if (!document.body.contains(container)) {\n            throw new Error(\"Container element should be attached to the document.\");\n        }\n    }\n\n    let root = findRoot(container);\n    if (root) {\n        root.newVNode = node;\n        root.invalidated = true;\n        root.syncFlags = syncFlags;\n    } else {\n        root = {\n            container: container,\n            currentVNode: null,\n            newVNode: node,\n            invalidated: true,\n            syncFlags: syncFlags,\n        };\n        ROOTS.push(root);\n    }\n\n    updateNextFrame();\n}\n\n/**\n * Update dirty components.\n *\n * @param syncFlags Sync Flags.\n */\nexport function update(syncFlags?: SyncFlags) {\n    updateNextFrame(syncFlags);\n    syncFrameUpdate();\n}\n\n/**\n * Update dirty components on the next frame.\n *\n * @param syncFlags Sync Flags.\n */\nexport function updateNextFrame(syncFlags: SyncFlags = 0) {\n    _globalSyncFlags = syncFlags;\n    if (!_pendingUpdate) {\n        _pendingUpdate = true;\n        nextFrame().write(_update);\n    }\n}\n\n/**\n * Augment existing DOM tree with a Virtual DOM tree.\n *\n * Augmentation is separated from `render` function to reduce code size when web application doesn't use augmentation.\n * Optimizing javascript compiler should remove all code associated with augmentation when it isn't used.\n *\n * @param node Root VNode.\n * @param container Container DOM Node.\n */\nexport function augment(\n    node: IVNode<any> | null,\n    container: Element,\n): void {\n    if (__IVI_DEV__) {\n        if (container === document.body) {\n            throw new Error(\"Rendering in the <body> aren't allowed, create an element inside body that will contain \" +\n                \"your application.\");\n        }\n        if (!document.body.contains(container)) {\n            throw new Error(\"Container element should be attached to the document.\");\n        }\n\n        if (findRoot(container)) {\n            throw new Error(\"Failed to augment, container is associated with a Virtual DOM.\");\n        }\n    }\n\n    if (node) {\n        ROOTS.push({\n            container: container,\n            currentVNode: node,\n            newVNode: null,\n            invalidated: false,\n            syncFlags: 0,\n        });\n\n        nextFrame().write(function augment() {\n            augmentVNode(container, container.firstChild!, node, EMPTY_CONTEXT);\n            iOSFixEventBubbling(container);\n        });\n\n        syncFrameUpdate();\n    }\n}\n","import { render, update, VNode, $h, $c, SelectorData, connect } from \"ivi\";\nimport { DBList, DB, EMPTY_QUERY } from \"./db\";\nimport { startFPSMonitor, startMemMonitor, initProfiler, startProfile, endProfile } from \"perf-monitor\";\n\nlet mutations = 0.5;\nlet N = 50;\n\nconst qs = parseQueryString(window.location.search.substr(1).split(\"&\"));\nif (qs[\"n\"] !== undefined) {\n    N = parseInt(qs[\"n\"], 10);\n}\nif (qs[\"m\"] !== undefined) {\n    mutations = parseFloat(qs[\"m\"]);\n}\n\nconst store = new DBList(N);\n\nfunction entryFormatElapsed(v: number): string {\n    if (!v) {\n        return \"\";\n    }\n\n    if (v > 60) {\n        const minutes = Math.floor(v / 60);\n        const comps = (v % 60).toFixed(2).split(\".\");\n        const seconds = comps[0];\n        const ms = comps[1];\n        return minutes + \":\" + seconds + \".\" + ms;\n    }\n\n    return v.toFixed(2);\n}\n\nfunction counterClasses(count: number): string {\n    if (count >= 20) {\n        return \"label label-important\";\n    } else if (count >= 10) {\n        return \"label label-warning\";\n    }\n    return \"label label-success\";\n}\n\nfunction queryClasses(elapsed: number): string {\n    if (elapsed >= 10.0) {\n        return \"Query elapsed warn_long\";\n    } else if (elapsed >= 1.0) {\n        return \"Query elapsed warn\";\n    }\n    return \"Query elapsed short\";\n}\n\nfunction Popover(query: string) {\n    return $h(\"div\", \"popover left\").children(\n        $h(\"div\", \"popover-content\").children(query),\n        $h(\"div\", \"arrow\"),\n    );\n}\n\nfunction DatabaseView(db: DB) {\n    const topFiveQueries = db.getTopFiveQueries();\n    const count = db.queries!.length;\n\n    const children = new Array<VNode<any>>(5);\n\n    for (let i = 0; i < 5; i++) {\n        const q = topFiveQueries[i];\n        const elapsed = q.elapsed;\n\n        if (q !== EMPTY_QUERY) {\n            children[i] = $h(\"td\", queryClasses(elapsed)).children(\n                entryFormatElapsed(elapsed),\n                $c(Popover, q.query),\n            ).key(i);\n        } else {\n            children[i] = $h(\"td\", \"\").children(\n                \"\",\n                $c(Popover, q.query),\n            ).key(i);\n        }\n    }\n\n    return $h(\"tr\").children(\n        $h(\"td\", \"dbname\").children(db.name),\n        $h(\"td\", \"query-count\").children(\n            $h(\"span\", counterClasses(count)).children(count),\n        ),\n        children,\n    );\n}\n\nfunction selectDb(prev: SelectorData<DB, DB>, props: number) {\n    const db = store.dbs[props];\n    if (prev && prev.in === db) {\n        return prev;\n    }\n    return {\n        in: db,\n        out: db,\n    };\n}\n\nconst $DBView = connect(selectDb, DatabaseView);\n\nfunction Main(props: DBList) {\n    const dbs = props.dbs;\n    const rows = new Array<VNode<any>>(dbs.length);\n    for (let i = 0; i < dbs.length; i++) {\n        rows[i] = $DBView(i);\n    }\n\n    return $h(\"table\")\n        .className(\"table table-striped latest-data\")\n        .children($h(\"tbody\").children(rows));\n}\n\nfunction parseQueryString(a: string[]): { [key: string]: string } {\n    if (a.length === 0) {\n        return {};\n    }\n    const b = {} as { [key: string]: string };\n    for (let i = 0; i < a.length; ++i) {\n        const p = a[i].split(\"=\", 2);\n        if (p.length === 1) {\n            b[p[0]] = \"\";\n        } else {\n            b[p[0]] = decodeURIComponent(p[1].replace(/\\+/g, \" \"));\n        }\n    }\n    return b;\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    startFPSMonitor();\n    startMemMonitor();\n    initProfiler(\"view update\");\n\n    const sliderContainer = document.createElement(\"div\");\n    sliderContainer.style.display = \"flex\";\n    const slider = document.createElement(\"input\");\n    slider.type = \"range\";\n    slider.style.marginBottom = \"10px\";\n    slider.style.marginTop = \"5px\";\n    const text = document.createElement(\"label\");\n    text.textContent = \"mutations : \" + (mutations * 100).toFixed(0) + \"%\";\n\n    slider.addEventListener(\"change\", (e) => {\n        mutations = Number.parseFloat((e.target as HTMLInputElement).value) / 100;\n        text.textContent = \"mutations : \" + (mutations * 100).toFixed(0) + \"%\";\n    });\n    sliderContainer.appendChild(text);\n    sliderContainer.appendChild(slider);\n    document.body.insertBefore(sliderContainer, document.body.firstChild);\n\n    const container = document.getElementById(\"app\")!;\n    render($c(Main, store), container);\n\n    function tick() {\n        store.randomUpdate(mutations);\n\n        startProfile(\"view update\");\n        update();\n        endProfile(\"view update\");\n\n        setTimeout(tick, 0);\n    }\n    setTimeout(tick, 0);\n});\n","\nimport { isVisible, addVisibilityObserver } from \"../common/visibility\";\nimport { update } from \"../vdom/root\";\nimport { FrameTasksGroupFlags, FrameTasksGroup } from \"./frame_tasks_group\";\nimport { executeDOMReaders } from \"./dom_reader\";\nimport { incrementClock } from \"./clock\";\nimport { scheduleMicrotask } from \"./microtask\";\nimport { executeAnimations, shouldRequestNextFrameForAnimations } from \"./animation\";\nimport { autofocusedElement } from \"./autofocus\";\n\nlet _pending = false;\nlet _currentFrameReady = false;\nlet _currentFrame = new FrameTasksGroup();\nlet _nextFrame = new FrameTasksGroup();\nlet _frameStartTime = 0;\n\n_currentFrame._rwLock();\n\nfunction _updateFrameStartTime(time?: number): void {\n    if (__IVI_BROWSER__) {\n        _frameStartTime = (time === undefined ? performance.now() : time) / 1000;\n    } else {\n        _frameStartTime = time === undefined ? Date.now() : time / 1000;\n    }\n}\n\n/**\n * @returns current frame start time.\n */\nexport function frameStartTime(): number {\n    return _frameStartTime;\n}\n\n_updateFrameStartTime();\n\nfunction _requestNextFrame(): void {\n    if (_pending) {\n        if (__IVI_BROWSER__) {\n            requestAnimationFrame(handleNextFrame);\n        } else {\n            setImmediate(handleNextFrame);\n        }\n    }\n}\n\n/**\n * Trigger next frame tasks execution.\n */\nexport function requestNextFrame(): void {\n    if (!_pending) {\n        _pending = true;\n        scheduleMicrotask(_requestNextFrame);\n    }\n}\n\n/**\n * Frame tasks scheduler event handler.\n *\n * @param t Current time.\n */\nfunction handleNextFrame(time?: number): void {\n    _updateFrameStartTime(time);\n\n    let tasks: (() => void)[];\n    let i: number;\n\n    _pending = false;\n    _currentFrameReady = true;\n\n    const frame = _nextFrame;\n    _nextFrame = _currentFrame;\n    _currentFrame = frame;\n\n    _currentFrame._rwUnlock();\n    _nextFrame._rwUnlock();\n\n    executeDOMReaders();\n\n    // Perform read/write batching. Start with executing read DOM tasks, then update components, execute write DOM tasks\n    // and repeat until all read and write tasks are executed.\n    do {\n        while (frame._flags & FrameTasksGroupFlags.Read) {\n            frame._flags &= ~FrameTasksGroupFlags.Read;\n            tasks = frame._readTasks!;\n            frame._readTasks = null;\n\n            for (i = 0; i < tasks.length; i++) {\n                tasks[i]();\n            }\n        }\n\n        while (frame._flags & (FrameTasksGroupFlags.Component | FrameTasksGroupFlags.Write)) {\n            if (frame._flags & FrameTasksGroupFlags.Write) {\n                frame._flags &= ~FrameTasksGroupFlags.Write;\n                tasks = frame._writeTasks!;\n                frame._writeTasks = null;\n                for (i = 0; i < tasks.length; i++) {\n                    tasks[i]();\n                }\n            }\n\n            if (__IVI_BROWSER__) {\n                if (frame._flags & FrameTasksGroupFlags.Component) {\n                    frame._flags &= ~FrameTasksGroupFlags.Component;\n                    update();\n                }\n            }\n        }\n    } while (frame._flags & (\n        FrameTasksGroupFlags.Component |\n        FrameTasksGroupFlags.Write |\n        FrameTasksGroupFlags.Read\n    ));\n\n    _currentFrameReady = false;\n\n    // Lock current frame from adding read and write tasks in debug mode.\n    _currentFrame._rwLock();\n\n    if (isVisible()) {\n        executeAnimations();\n    }\n\n    // Perform tasks that should be executed when all DOM ops are finished.\n    while ((frame._flags & FrameTasksGroupFlags.After) !== 0) {\n        frame._flags &= ~FrameTasksGroupFlags.After;\n\n        tasks = frame._afterTasks!;\n        frame._afterTasks = null;\n        for (i = 0; i < tasks.length; i++) {\n            tasks[i]();\n        }\n    }\n\n    if (__IVI_BROWSER__) {\n        const focus = autofocusedElement();\n        if (focus) {\n            (focus as HTMLElement).focus();\n        }\n    }\n\n    if (shouldRequestNextFrameForAnimations()) {\n        requestNextFrame();\n    }\n\n    incrementClock();\n}\n\n/**\n * Get task list for the next frame.\n *\n * @returns Frame tasks group.\n */\nexport function nextFrame(): FrameTasksGroup {\n    requestNextFrame();\n    return _nextFrame;\n}\n\n/**\n * Get task list for the current frame.\n *\n * @returns Frame tasks group.\n */\nexport function currentFrame(): FrameTasksGroup {\n    if (_currentFrameReady) {\n        return _currentFrame;\n    }\n    return nextFrame();\n}\n\n/**\n * Perform a synchronous frame update.\n */\nexport function syncFrameUpdate(): void {\n    handleNextFrame();\n}\n\nfunction handleVisibilityChange(visible: boolean): void {\n    if (visible) {\n        if (shouldRequestNextFrameForAnimations()) {\n            requestNextFrame();\n        }\n    }\n}\n\nif (__IVI_BROWSER__) {\n    addVisibilityObserver(handleVisibilityChange);\n}\n","import { RepeatableTaskList } from \"../common/repeatable_task_list\";\nimport { ComponentFlags } from \"../vdom/flags\";\nimport { Component } from \"../vdom/component\";\nimport { requestNextFrame } from \"./frame\";\n\nconst _animations = new RepeatableTaskList();\nlet _animatedComponents = 0;\n\n/**\n * Add component to the animated list.\n *\n * @param component\n */\nexport function startComponentAnimation(component: Component<any>): void {\n    if (__IVI_BROWSER__) {\n        if (!_animatedComponents) {\n            requestNextFrame();\n        }\n        component.flags |= ComponentFlags.Animated;\n        _animatedComponents++;\n    }\n}\n\n/**\n * Remove component from the animated list.\n *\n * @param component\n */\nexport function stopComponentAnimation(component: Component<any>): void {\n    if (__IVI_BROWSER__) {\n        component.flags &= ~ComponentFlags.Animated;\n        _animatedComponents--;\n    }\n}\n\n/**\n * Add animation.\n *\n * @param animation Animation task.\n */\nexport function addAnimation(animation: () => boolean | undefined): void {\n    if (__IVI_BROWSER__) {\n        _animations.add(animation);\n    }\n}\n\n/**\n * Execute animations.\n */\nexport function executeAnimations(): void {\n    if (__IVI_BROWSER__) {\n        _animations.run();\n    }\n}\n\nexport function shouldRequestNextFrameForAnimations(): boolean {\n    if (__IVI_BROWSER__) {\n        return (\n            (_animatedComponents > 0) ||\n            (_animations.tasks.length > 0)\n        );\n    }\n    return false;\n}\n","import { checkDOMAttributesForTypos, checkDOMStylesForTypos, checkDeprecatedDOMSVGAttributes } from \"../dev_mode/typos\";\nimport { isValidTag } from \"../dev_mode/dom\";\nimport { SVG_NAMESPACE, HTMLTagType, SVGTagType, MediaTagType, InputType } from \"../common/dom\";\nimport { ElementDescriptorFlags } from \"./flags\";\nimport { syncDOMProps, syncClassName, syncStyle } from \"./sync_dom\";\nimport {\n    HTMLAnchorElementProps, HTMLElementProps, HTMLAppletElementProps, HTMLAreaElementProps, HTMLAudioElementProps,\n    HTMLBaseElementProps, HTMLBaseFontElementProps, HTMLBodyElementProps, HTMLBRElementProps, HTMLButtonElementProps,\n    HTMLCanvasElementProps, HTMLQuoteElementProps, HTMLTableCaptionElementProps, HTMLTableColElementProps,\n    HTMLDataListElementProps, HTMLModElementProps, HTMLDirectoryElementProps, HTMLDivElementProps,\n    HTMLDListElementProps, HTMLEmbedElementProps, HTMLFieldSetElementProps, HTMLFontElementProps, HTMLFormElementProps,\n    HTMLFrameElementProps, HTMLFrameSetElementProps, HTMLHeadElementProps, HTMLHeadingElementProps, HTMLHRElementProps,\n    HTMLHtmlElementProps, HTMLIFrameElementProps, HTMLImageElementProps, HTMLInputElementProps, HTMLLabelElementProps,\n    HTMLLegendElementProps, HTMLLIElementProps, HTMLLinkElementProps, HTMLMapElementProps, HTMLMarqueeElementProps,\n    HTMLMenuElementProps, HTMLMetaElementProps, HTMLMeterElementProps, HTMLObjectElementProps, HTMLOListElementProps,\n    HTMLOptGroupElementProps, HTMLOptionElementProps, HTMLParagraphElementProps, HTMLParamElementProps,\n    HTMLPictureElementProps, HTMLPreElementProps, HTMLProgressElementProps, HTMLScriptElementProps,\n    HTMLSelectElementProps, HTMLSourceElementProps, HTMLSpanElementProps, HTMLStyleElementProps,\n    HTMLTableDataCellElementProps, HTMLTableElementProps, HTMLTableHeaderCellElementProps, HTMLTableRowElementProps,\n    HTMLTableSectionElementProps, HTMLTemplateElementProps, HTMLTextAreaElementProps, HTMLTitleElementProps,\n    HTMLTrackElementProps, HTMLUListElementProps, HTMLUnknownElementProps, HTMLVideoElementProps, HTMLMediaElementProps,\n    MSHTMLWebViewElementProps,\n\n    SVGCircleElementProps, SVGClipPathElementProps, SVGDefsElementProps, SVGDescElementProps, SVGEllipseElementProps,\n    SVGFEBlendElementProps, SVGFEColorMatrixElementProps, SVGFEComponentTransferElementProps,\n    SVGFECompositeElementProps, SVGFEConvolveMatrixElementProps, SVGFEDiffuseLightingElementProps,\n    SVGFEDisplacementMapElementProps, SVGFEDistantLightElementProps, SVGFEFloodElementProps, SVGFEFuncAElementProps,\n    SVGFEFuncBElementProps, SVGFEFuncGElementProps, SVGFEFuncRElementProps, SVGFEGaussianBlurElementProps,\n    SVGFEImageElementProps, SVGFEMergeElementProps, SVGFEMergeNodeElementProps, SVGFEMorphologyElementProps,\n    SVGFEOffsetElementProps, SVGFEPointLightElementProps, SVGFESpecularLightingElementProps, SVGFESpotLightElementProps,\n    SVGFETileElementProps, SVGFETurbulenceElementProps, SVGFilterElementProps, SVGForeignObjectElementProps,\n    SVGGElementProps, SVGImageElementProps, SVGLinearGradientElementProps, SVGLineElementProps, SVGMarkerElementProps,\n    SVGMaskElementProps, SVGMetadataElementProps, SVGPathElementProps, SVGPatternElementProps, SVGPolygonElementProps,\n    SVGPolylineElementProps, SVGRadialGradientElementProps, SVGRectElementProps, SVGStopElementProps,\n    SVGSVGElementProps, SVGSwitchElementProps, SVGSymbolElementProps, SVGTextElementProps, SVGTextPathElementProps,\n    SVGTSpanElementProps, SVGViewElementProps, SVGUseElementProps, SVGElementProps,\n\n    CSSStyleProps,\n} from \"../common/dom_props\";\n\n/**\n * Element Descriptor.\n *\n * Element Descriptors are partially static elements.\n *\n * @final\n */\nexport class ElementDescriptor<P = void> {\n    /**\n     * Flags, see `ElementDescriptorFlags` for details.\n     */\n    _flags: number;\n    /**\n     * Tag name of the element.\n     */\n    _tag: string;\n    /**\n     * Style.\n     */\n    _style: CSSStyleProps | null;\n    /**\n     * Properties.\n     */\n    _props: P | null;\n    /**\n     * Class name.\n     */\n    _className: string | null;\n    /**\n     * Reference to an element that will be cloned when DOM node cloning is enabled.\n     */\n    private _ref: Element | null;\n    /**\n     * Props protected from overriding.\n     */\n    _protectedProps: { [key: string]: boolean } | null;\n    /**\n     * Styles protected from overriding.\n     */\n    _protectedStyle: { [key: string]: boolean } | null;\n\n    constructor(tagName: string, flags: ElementDescriptorFlags = 0) {\n        this._flags = flags;\n        this._tag = tagName;\n        this._props = null;\n        this._className = null;\n        this._style = null;\n        this._ref = null;\n        if (__IVI_DEV__) {\n            this._protectedProps = null;\n            this._protectedStyle = null;\n        }\n    }\n\n    /**\n     * Set props.\n     *\n     * @param props\n     * @param protect\n     * @returns ElementDescriptor.\n     */\n    props(props: P, protect?: boolean | { [key: string]: boolean }): ElementDescriptor<P> {\n        if (__IVI_DEV__) {\n            if (protect) {\n                this._flags |= ElementDescriptorFlags.ProtectProps;\n                if (typeof protect === \"object\") {\n                    this._protectedProps = protect;\n                }\n            }\n            if (props) {\n                checkDOMAttributesForTypos(props);\n                if (this._flags & ElementDescriptorFlags.SvgElement) {\n                    checkDeprecatedDOMSVGAttributes(this._tag as string, props);\n                }\n            }\n        }\n        this._props = props;\n        return this;\n    }\n\n    /**\n     * Set className.\n     *\n     * @param className\n     * @param protect\n     * @returns ElementDescriptor.\n     */\n    className(className: string, protect?: boolean): ElementDescriptor<P> {\n        if (__IVI_DEV__) {\n            if (protect) {\n                this._flags |= ElementDescriptorFlags.ProtectClassName;\n            }\n        }\n        this._className = className;\n        return this;\n    }\n\n    /**\n     * Set style.\n     *\n     * @param style\n     * @param protect\n     * @returns ElementDescriptor.\n     */\n    style(style: CSSStyleProps | null, protect?: boolean | { [key: string]: boolean }): ElementDescriptor<P> {\n        if (__IVI_DEV__) {\n            if (protect) {\n                this._flags |= ElementDescriptorFlags.ProtectStyle;\n                if (typeof protect === \"object\") {\n                    this._protectedStyle = protect;\n                }\n            }\n            if (style) {\n                checkDOMStylesForTypos(style);\n            }\n        }\n        this._style = style;\n        return this;\n    }\n\n    /**\n     * Create a DOM Element.\n     */\n    createElement(): Element {\n        let ref = this._ref;\n\n        if (ref === null) {\n            if (this._flags & ElementDescriptorFlags.SvgElement) {\n                ref = document.createElementNS(SVG_NAMESPACE, this._tag);\n            } else {\n                if (this._flags & ElementDescriptorFlags.InputElement) {\n                    if (this._flags & ElementDescriptorFlags.TextAreaElement) {\n                        ref = document.createElement(\"textarea\");\n                    } else {\n                        ref = document.createElement(\"input\");\n                        (ref as HTMLInputElement).type = this._tag as string;\n                    }\n                } else {\n                    ref = document.createElement(this._tag);\n                }\n            }\n\n            if (this._props) {\n                syncDOMProps(ref as Element, this._flags, null, this._props);\n            }\n            if (this._className !== null) {\n                syncClassName(ref as Element, this._flags, null, this._className);\n            }\n            if (this._style !== null) {\n                syncStyle(ref as HTMLElement, null, this._style);\n            }\n\n            return ref;\n        } else {\n            return ref.cloneNode(false) as Element;\n        }\n    }\n}\n\n/* tslint:disable:max-line-length */\n/**\n * Create an ElementDescriptor.\n *\n * @param tagName HTML Element tag name.\n * @param clone Enable DOM node cloning.\n * @returns ElementDescriptor object.\n */\nexport function createElementDescriptor(tagName: \"a\", clone?: boolean): ElementDescriptor<HTMLAnchorElementProps | null>;\nexport function createElementDescriptor(tagName: \"abbr\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"acronym\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"address\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"applet\", clone?: boolean): ElementDescriptor<HTMLAppletElementProps | null>;\nexport function createElementDescriptor(tagName: \"area\", clone?: boolean): ElementDescriptor<HTMLAreaElementProps | null>;\nexport function createElementDescriptor(tagName: \"article\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"aside\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"b\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"base\", clone?: boolean): ElementDescriptor<HTMLBaseElementProps | null>;\nexport function createElementDescriptor(tagName: \"basefont\", clone?: boolean): ElementDescriptor<HTMLBaseFontElementProps | null>;\nexport function createElementDescriptor(tagName: \"bdo\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"big\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"blockquote\", clone?: boolean): ElementDescriptor<HTMLQuoteElementProps | null>;\nexport function createElementDescriptor(tagName: \"body\", clone?: boolean): ElementDescriptor<HTMLBodyElementProps | null>;\nexport function createElementDescriptor(tagName: \"br\", clone?: boolean): ElementDescriptor<HTMLBRElementProps | null>;\nexport function createElementDescriptor(tagName: \"button\", clone?: boolean): ElementDescriptor<HTMLButtonElementProps | null>;\nexport function createElementDescriptor(tagName: \"canvas\", clone?: boolean): ElementDescriptor<HTMLCanvasElementProps | null>;\nexport function createElementDescriptor(tagName: \"caption\", clone?: boolean): ElementDescriptor<HTMLTableCaptionElementProps | null>;\nexport function createElementDescriptor(tagName: \"center\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"cite\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"code\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"col\", clone?: boolean): ElementDescriptor<HTMLTableColElementProps | null>;\nexport function createElementDescriptor(tagName: \"colgroup\", clone?: boolean): ElementDescriptor<HTMLTableColElementProps | null>;\nexport function createElementDescriptor(tagName: \"datalist\", clone?: boolean): ElementDescriptor<HTMLDataListElementProps | null>;\nexport function createElementDescriptor(tagName: \"dd\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"del\", clone?: boolean): ElementDescriptor<HTMLModElementProps | null>;\nexport function createElementDescriptor(tagName: \"dfn\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"dir\", clone?: boolean): ElementDescriptor<HTMLDirectoryElementProps | null>;\nexport function createElementDescriptor(tagName: \"div\", clone?: boolean): ElementDescriptor<HTMLDivElementProps | null>;\nexport function createElementDescriptor(tagName: \"dl\", clone?: boolean): ElementDescriptor<HTMLDListElementProps | null>;\nexport function createElementDescriptor(tagName: \"dt\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"em\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"embed\", clone?: boolean): ElementDescriptor<HTMLEmbedElementProps | null>;\nexport function createElementDescriptor(tagName: \"fieldset\", clone?: boolean): ElementDescriptor<HTMLFieldSetElementProps | null>;\nexport function createElementDescriptor(tagName: \"figcaption\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"figure\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"font\", clone?: boolean): ElementDescriptor<HTMLFontElementProps | null>;\nexport function createElementDescriptor(tagName: \"footer\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"form\", clone?: boolean): ElementDescriptor<HTMLFormElementProps | null>;\nexport function createElementDescriptor(tagName: \"frame\", clone?: boolean): ElementDescriptor<HTMLFrameElementProps | null>;\nexport function createElementDescriptor(tagName: \"frameset\", clone?: boolean): ElementDescriptor<HTMLFrameSetElementProps | null>;\nexport function createElementDescriptor(tagName: \"h1\", clone?: boolean): ElementDescriptor<HTMLHeadingElementProps | null>;\nexport function createElementDescriptor(tagName: \"h2\", clone?: boolean): ElementDescriptor<HTMLHeadingElementProps | null>;\nexport function createElementDescriptor(tagName: \"h3\", clone?: boolean): ElementDescriptor<HTMLHeadingElementProps | null>;\nexport function createElementDescriptor(tagName: \"h4\", clone?: boolean): ElementDescriptor<HTMLHeadingElementProps | null>;\nexport function createElementDescriptor(tagName: \"h5\", clone?: boolean): ElementDescriptor<HTMLHeadingElementProps | null>;\nexport function createElementDescriptor(tagName: \"h6\", clone?: boolean): ElementDescriptor<HTMLHeadingElementProps | null>;\nexport function createElementDescriptor(tagName: \"head\", clone?: boolean): ElementDescriptor<HTMLHeadElementProps | null>;\nexport function createElementDescriptor(tagName: \"header\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"hgroup\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"hr\", clone?: boolean): ElementDescriptor<HTMLHRElementProps | null>;\nexport function createElementDescriptor(tagName: \"html\", clone?: boolean): ElementDescriptor<HTMLHtmlElementProps | null>;\nexport function createElementDescriptor(tagName: \"i\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"iframe\", clone?: boolean): ElementDescriptor<HTMLIFrameElementProps | null>;\nexport function createElementDescriptor(tagName: \"img\", clone?: boolean): ElementDescriptor<HTMLImageElementProps | null>;\nexport function createElementDescriptor(tagName: \"ins\", clone?: boolean): ElementDescriptor<HTMLModElementProps | null>;\nexport function createElementDescriptor(tagName: \"isindex\", clone?: boolean): ElementDescriptor<HTMLUnknownElementProps | null>;\nexport function createElementDescriptor(tagName: \"kbd\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"keygen\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"label\", clone?: boolean): ElementDescriptor<HTMLLabelElementProps | null>;\nexport function createElementDescriptor(tagName: \"legend\", clone?: boolean): ElementDescriptor<HTMLLegendElementProps | null>;\nexport function createElementDescriptor(tagName: \"li\", clone?: boolean): ElementDescriptor<HTMLLIElementProps | null>;\nexport function createElementDescriptor(tagName: \"link\", clone?: boolean): ElementDescriptor<HTMLLinkElementProps | null>;\nexport function createElementDescriptor(tagName: \"listing\", clone?: boolean): ElementDescriptor<HTMLPreElementProps | null>;\nexport function createElementDescriptor(tagName: \"map\", clone?: boolean): ElementDescriptor<HTMLMapElementProps | null>;\nexport function createElementDescriptor(tagName: \"mark\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"marquee\", clone?: boolean): ElementDescriptor<HTMLMarqueeElementProps | null>;\nexport function createElementDescriptor(tagName: \"menu\", clone?: boolean): ElementDescriptor<HTMLMenuElementProps | null>;\nexport function createElementDescriptor(tagName: \"meta\", clone?: boolean): ElementDescriptor<HTMLMetaElementProps | null>;\nexport function createElementDescriptor(tagName: \"meter\", clone?: boolean): ElementDescriptor<HTMLMeterElementProps | null>;\nexport function createElementDescriptor(tagName: \"nav\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"nextid\", clone?: boolean): ElementDescriptor<HTMLUnknownElementProps | null>;\nexport function createElementDescriptor(tagName: \"nobr\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"noframes\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"noscript\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"object\", clone?: boolean): ElementDescriptor<HTMLObjectElementProps | null>;\nexport function createElementDescriptor(tagName: \"ol\", clone?: boolean): ElementDescriptor<HTMLOListElementProps | null>;\nexport function createElementDescriptor(tagName: \"optgroup\", clone?: boolean): ElementDescriptor<HTMLOptGroupElementProps | null>;\nexport function createElementDescriptor(tagName: \"option\", clone?: boolean): ElementDescriptor<HTMLOptionElementProps | null>;\nexport function createElementDescriptor(tagName: \"p\", clone?: boolean): ElementDescriptor<HTMLParagraphElementProps | null>;\nexport function createElementDescriptor(tagName: \"param\", clone?: boolean): ElementDescriptor<HTMLParamElementProps | null>;\nexport function createElementDescriptor(tagName: \"picture\", clone?: boolean): ElementDescriptor<HTMLPictureElementProps | null>;\nexport function createElementDescriptor(tagName: \"plaintext\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"pre\", clone?: boolean): ElementDescriptor<HTMLPreElementProps | null>;\nexport function createElementDescriptor(tagName: \"progress\", clone?: boolean): ElementDescriptor<HTMLProgressElementProps | null>;\nexport function createElementDescriptor(tagName: \"q\", clone?: boolean): ElementDescriptor<HTMLQuoteElementProps | null>;\nexport function createElementDescriptor(tagName: \"rt\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"ruby\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"s\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"samp\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"script\", clone?: boolean): ElementDescriptor<HTMLScriptElementProps | null>;\nexport function createElementDescriptor(tagName: \"section\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"select\", clone?: boolean): ElementDescriptor<HTMLSelectElementProps | null>;\nexport function createElementDescriptor(tagName: \"small\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"source\", clone?: boolean): ElementDescriptor<HTMLSourceElementProps | null>;\nexport function createElementDescriptor(tagName: \"span\", clone?: boolean): ElementDescriptor<HTMLSpanElementProps | null>;\nexport function createElementDescriptor(tagName: \"strike\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"strong\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"style\", clone?: boolean): ElementDescriptor<HTMLStyleElementProps | null>;\nexport function createElementDescriptor(tagName: \"sub\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"sup\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"table\", clone?: boolean): ElementDescriptor<HTMLTableElementProps | null>;\nexport function createElementDescriptor(tagName: \"tbody\", clone?: boolean): ElementDescriptor<HTMLTableSectionElementProps | null>;\nexport function createElementDescriptor(tagName: \"td\", clone?: boolean): ElementDescriptor<HTMLTableDataCellElementProps | null>;\nexport function createElementDescriptor(tagName: \"template\", clone?: boolean): ElementDescriptor<HTMLTemplateElementProps | null>;\nexport function createElementDescriptor(tagName: \"textarea\", clone?: boolean): ElementDescriptor<HTMLTextAreaElementProps | null>;\nexport function createElementDescriptor(tagName: \"tfoot\", clone?: boolean): ElementDescriptor<HTMLTableSectionElementProps | null>;\nexport function createElementDescriptor(tagName: \"th\", clone?: boolean): ElementDescriptor<HTMLTableHeaderCellElementProps | null>;\nexport function createElementDescriptor(tagName: \"thead\", clone?: boolean): ElementDescriptor<HTMLTableSectionElementProps | null>;\nexport function createElementDescriptor(tagName: \"title\", clone?: boolean): ElementDescriptor<HTMLTitleElementProps | null>;\nexport function createElementDescriptor(tagName: \"tr\", clone?: boolean): ElementDescriptor<HTMLTableRowElementProps | null>;\nexport function createElementDescriptor(tagName: \"track\", clone?: boolean): ElementDescriptor<HTMLTrackElementProps | null>;\nexport function createElementDescriptor(tagName: \"tt\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"u\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"ul\", clone?: boolean): ElementDescriptor<HTMLUListElementProps | null>;\nexport function createElementDescriptor(tagName: \"var\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"wbr\", clone?: boolean): ElementDescriptor<HTMLElementProps | null>;\nexport function createElementDescriptor(tagName: \"x-ms-webview\", clone?: boolean): ElementDescriptor<MSHTMLWebViewElementProps | null>;\nexport function createElementDescriptor(tagName: \"xmp\", clone?: boolean): ElementDescriptor<HTMLPreElementProps | null>;\nexport function createElementDescriptor(tagName: HTMLTagType, clone = false): ElementDescriptor<HTMLElementProps | null> {\n    return new ElementDescriptor<HTMLElementProps | null>(\n        tagName,\n        clone ?\n            (ElementDescriptorFlags.Element | ElementDescriptorFlags.ElementDescriptor |\n                ElementDescriptorFlags.EnabledCloning) :\n            ElementDescriptorFlags.Element | ElementDescriptorFlags.ElementDescriptor,\n    );\n}\n\n/**\n * Create an ElementDescriptor with an SVG flag.\n *\n * @param tagName SVG Element tag name.\n * @param clone Enable DOM node cloning.\n * @returns VNodeBuilder object.\n */\nexport function createSVGElementDescriptor(tagName: \"circle\", clone?: boolean): ElementDescriptor<SVGCircleElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"clippath\", clone?: boolean): ElementDescriptor<SVGClipPathElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"defs\", clone?: boolean): ElementDescriptor<SVGDefsElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"desc\", clone?: boolean): ElementDescriptor<SVGDescElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"ellipse\", clone?: boolean): ElementDescriptor<SVGEllipseElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"feblend\", clone?: boolean): ElementDescriptor<SVGFEBlendElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"fecolormatrix\", clone?: boolean): ElementDescriptor<SVGFEColorMatrixElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"fecomponenttransfer\", clone?: boolean): ElementDescriptor<SVGFEComponentTransferElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"fecomposite\", clone?: boolean): ElementDescriptor<SVGFECompositeElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"feconvolvematrix\", clone?: boolean): ElementDescriptor<SVGFEConvolveMatrixElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"fediffuselighting\", clone?: boolean): ElementDescriptor<SVGFEDiffuseLightingElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"fedisplacementmap\", clone?: boolean): ElementDescriptor<SVGFEDisplacementMapElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"fedistantlight\", clone?: boolean): ElementDescriptor<SVGFEDistantLightElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"feflood\", clone?: boolean): ElementDescriptor<SVGFEFloodElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"fefunca\", clone?: boolean): ElementDescriptor<SVGFEFuncAElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"fefuncb\", clone?: boolean): ElementDescriptor<SVGFEFuncBElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"fefuncg\", clone?: boolean): ElementDescriptor<SVGFEFuncGElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"fefuncr\", clone?: boolean): ElementDescriptor<SVGFEFuncRElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"fegaussianblur\", clone?: boolean): ElementDescriptor<SVGFEGaussianBlurElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"feimage\", clone?: boolean): ElementDescriptor<SVGFEImageElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"femerge\", clone?: boolean): ElementDescriptor<SVGFEMergeElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"femergenode\", clone?: boolean): ElementDescriptor<SVGFEMergeNodeElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"femorphology\", clone?: boolean): ElementDescriptor<SVGFEMorphologyElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"feoffset\", clone?: boolean): ElementDescriptor<SVGFEOffsetElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"fepointlight\", clone?: boolean): ElementDescriptor<SVGFEPointLightElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"fespecularlighting\", clone?: boolean): ElementDescriptor<SVGFESpecularLightingElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"fespotlight\", clone?: boolean): ElementDescriptor<SVGFESpotLightElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"fetile\", clone?: boolean): ElementDescriptor<SVGFETileElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"feturbulence\", clone?: boolean): ElementDescriptor<SVGFETurbulenceElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"filter\", clone?: boolean): ElementDescriptor<SVGFilterElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"foreignobject\", clone?: boolean): ElementDescriptor<SVGForeignObjectElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"g\", clone?: boolean): ElementDescriptor<SVGGElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"image\", clone?: boolean): ElementDescriptor<SVGImageElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"line\", clone?: boolean): ElementDescriptor<SVGLineElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"lineargradient\", clone?: boolean): ElementDescriptor<SVGLinearGradientElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"marker\", clone?: boolean): ElementDescriptor<SVGMarkerElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"mask\", clone?: boolean): ElementDescriptor<SVGMaskElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"metadata\", clone?: boolean): ElementDescriptor<SVGMetadataElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"path\", clone?: boolean): ElementDescriptor<SVGPathElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"pattern\", clone?: boolean): ElementDescriptor<SVGPatternElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"polygon\", clone?: boolean): ElementDescriptor<SVGPolygonElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"polyline\", clone?: boolean): ElementDescriptor<SVGPolylineElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"radialgradient\", clone?: boolean): ElementDescriptor<SVGRadialGradientElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"rect\", clone?: boolean): ElementDescriptor<SVGRectElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"stop\", clone?: boolean): ElementDescriptor<SVGStopElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"svg\", clone?: boolean): ElementDescriptor<SVGSVGElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"switch\", clone?: boolean): ElementDescriptor<SVGSwitchElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"symbol\", clone?: boolean): ElementDescriptor<SVGSymbolElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"text\", clone?: boolean): ElementDescriptor<SVGTextElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"textpath\", clone?: boolean): ElementDescriptor<SVGTextPathElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"tspan\", clone?: boolean): ElementDescriptor<SVGTSpanElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"use\", clone?: boolean): ElementDescriptor<SVGUseElementProps | null>;\nexport function createSVGElementDescriptor(tagName: \"view\", clone?: boolean): ElementDescriptor<SVGViewElementProps | null>;\nexport function createSVGElementDescriptor(tagName: SVGTagType, clone = false): ElementDescriptor<SVGElementProps | null> {\n    return new ElementDescriptor<SVGElementProps | null>(\n        tagName,\n        clone ?\n            (ElementDescriptorFlags.EnabledCloning | ElementDescriptorFlags.Element |\n                ElementDescriptorFlags.ElementDescriptor | ElementDescriptorFlags.SvgElement) :\n            ElementDescriptorFlags.Element | ElementDescriptorFlags.ElementDescriptor | ElementDescriptorFlags.SvgElement,\n    );\n}\n\n/**\n * Create an Element Descriptor for HTMLInputElement node.\n *\n * @param type Input Element type. When type param has value \"textarea\", HTMLTextAreaElement will be created.\n * @param clone Enable DOM node cloning.\n * @returns VNodeBuilder object.\n */\nexport function createInputElementDescriptor(type: \"textarea\", clone?: boolean): ElementDescriptor<HTMLTextAreaElementProps | null>;\nexport function createInputElementDescriptor(type: \"button\", clone?: boolean): ElementDescriptor<HTMLInputElementProps | null>;\nexport function createInputElementDescriptor(type: \"checkbox\", clone?: boolean): ElementDescriptor<HTMLInputElementProps | null>;\nexport function createInputElementDescriptor(type: \"color\", clone?: boolean): ElementDescriptor<HTMLInputElementProps | null>;\nexport function createInputElementDescriptor(type: \"date\", clone?: boolean): ElementDescriptor<HTMLInputElementProps | null>;\nexport function createInputElementDescriptor(type: \"datetime\", clone?: boolean): ElementDescriptor<HTMLInputElementProps | null>;\nexport function createInputElementDescriptor(type: \"datetime-local\", clone?: boolean): ElementDescriptor<HTMLInputElementProps | null>;\nexport function createInputElementDescriptor(type: \"email\", clone?: boolean): ElementDescriptor<HTMLInputElementProps | null>;\nexport function createInputElementDescriptor(type: \"file\", clone?: boolean): ElementDescriptor<HTMLInputElementProps | null>;\nexport function createInputElementDescriptor(type: \"hidden\", clone?: boolean): ElementDescriptor<HTMLInputElementProps | null>;\nexport function createInputElementDescriptor(type: \"image\", clone?: boolean): ElementDescriptor<HTMLInputElementProps | null>;\nexport function createInputElementDescriptor(type: \"month\", clone?: boolean): ElementDescriptor<HTMLInputElementProps | null>;\nexport function createInputElementDescriptor(type: \"number\", clone?: boolean): ElementDescriptor<HTMLInputElementProps | null>;\nexport function createInputElementDescriptor(type: \"password\", clone?: boolean): ElementDescriptor<HTMLInputElementProps | null>;\nexport function createInputElementDescriptor(type: \"radio\", clone?: boolean): ElementDescriptor<HTMLInputElementProps | null>;\nexport function createInputElementDescriptor(type: \"range\", clone?: boolean): ElementDescriptor<HTMLInputElementProps | null>;\nexport function createInputElementDescriptor(type: \"reset\", clone?: boolean): ElementDescriptor<HTMLInputElementProps | null>;\nexport function createInputElementDescriptor(type: \"search\", clone?: boolean): ElementDescriptor<HTMLInputElementProps | null>;\nexport function createInputElementDescriptor(type: \"submit\", clone?: boolean): ElementDescriptor<HTMLInputElementProps | null>;\nexport function createInputElementDescriptor(type: \"tel\", clone?: boolean): ElementDescriptor<HTMLInputElementProps | null>;\nexport function createInputElementDescriptor(type: \"text\", clone?: boolean): ElementDescriptor<HTMLInputElementProps | null>;\nexport function createInputElementDescriptor(type: \"time\", clone?: boolean): ElementDescriptor<HTMLInputElementProps | null>;\nexport function createInputElementDescriptor(type: \"url\", clone?: boolean): ElementDescriptor<HTMLInputElementProps | null>;\nexport function createInputElementDescriptor(type: \"week\", clone?: boolean): ElementDescriptor<HTMLInputElementProps | null>;\nexport function createInputElementDescriptor(type: InputType, clone?: boolean): ElementDescriptor<HTMLInputElementProps | null> {\n    if (type === \"textarea\") {\n        return new ElementDescriptor<HTMLInputElementProps | null>(\n            type,\n            clone ?\n                (ElementDescriptorFlags.Element | ElementDescriptorFlags.ElementDescriptor |\n                    ElementDescriptorFlags.InputElement | ElementDescriptorFlags.TextAreaElement |\n                    ElementDescriptorFlags.EnabledCloning) :\n                (ElementDescriptorFlags.Element | ElementDescriptorFlags.ElementDescriptor |\n                    ElementDescriptorFlags.InputElement | ElementDescriptorFlags.TextAreaElement),\n        );\n    }\n    return new ElementDescriptor<HTMLInputElementProps | null>(\n        type,\n        clone ?\n            (ElementDescriptorFlags.Element | ElementDescriptorFlags.ElementDescriptor |\n                ElementDescriptorFlags.InputElement | ElementDescriptorFlags.EnabledCloning) :\n            (ElementDescriptorFlags.Element | ElementDescriptorFlags.ElementDescriptor |\n                ElementDescriptorFlags.InputElement),\n    );\n}\n\n/**\n * Create a VNodeBuilder representing an HTMLMediaElement node.\n *\n * @param tagName Media element tag name.\n * @param clone Enable DOM node cloning.\n * @returns VNodeBuilder object.\n */\nexport function createMediaElementDescriptor(tagName: \"audio\", clone?: boolean): ElementDescriptor<HTMLAudioElementProps | null>;\nexport function createMediaElementDescriptor(tagName: \"video\", clone?: boolean): ElementDescriptor<HTMLVideoElementProps | null>;\nexport function createMediaElementDescriptor(tagName: MediaTagType, clone?: boolean): ElementDescriptor<HTMLMediaElementProps | null> {\n    return new ElementDescriptor<HTMLInputElementProps | null>(\n        tagName,\n        clone ?\n            (ElementDescriptorFlags.Element | ElementDescriptorFlags.ElementDescriptor |\n                ElementDescriptorFlags.MediaElement | ElementDescriptorFlags.EnabledCloning) :\n            (ElementDescriptorFlags.Element | ElementDescriptorFlags.ElementDescriptor |\n                ElementDescriptorFlags.MediaElement),\n    );\n}\n\n/**\n * Create a VNodeBuilder representing a Custom Element.\n *\n * @param tagName Custom element tag name.\n * @param clone Enable DOM node cloning.\n * @returns VNodeBuilder object.\n */\nexport function createCustomElementDescriptor(tagName: string, clone = false): ElementDescriptor<{ [key: string]: any } | null> {\n    if (__IVI_DEV__) {\n        if (!isValidTag(tagName)) {\n            throw new Error(`Invalid tag: ${tagName}`);\n        }\n    }\n\n    return new ElementDescriptor<HTMLElementProps | null>(\n        tagName,\n        clone ?\n            (ElementDescriptorFlags.Element | ElementDescriptorFlags.ElementDescriptor |\n                ElementDescriptorFlags.WebComponent | ElementDescriptorFlags.EnabledCloning) :\n            ElementDescriptorFlags.Element | ElementDescriptorFlags.ElementDescriptor |\n            ElementDescriptorFlags.WebComponent,\n    );\n}\n/* tslint:enable:max-line-length */\n","import { Context } from \"../common/types\";\nimport { ConnectDescriptor } from \"./connect_descriptor\";\nimport { KeepAliveHandler } from \"./keep_alive\";\nimport { VNodeFlags } from \"./flags\";\nimport { ComponentFunction, ComponentClass } from \"./component\";\nimport { IVNode } from \"./ivnode\";\nimport { VNode } from \"./vnode\";\n\n/**\n * Create a VNodeBuilder representing a Component node.\n *\n * @param c Component factory.\n * @param props Component props.\n * @returns VNodeBuilder object.\n */\nexport function $c(c: ComponentFunction<void> | ComponentClass<void>): VNode<void>;\nexport function $c(c: ComponentFunction<null> | ComponentClass<null>): VNode<null>;\nexport function $c<P, U extends P>(c: ComponentFunction<P> | ComponentClass<P>, props: U): VNode<P>;\nexport function $c<P>(c: ComponentFunction<P> | ComponentClass<P>, props?: P): VNode<P> {\n    return new VNode<P>(\n        (c.prototype.render) ? VNodeFlags.ComponentClass : VNodeFlags.ComponentFunction,\n        c,\n        props!,\n        null,\n        null);\n}\n\nexport function $connect<I, O, P>(\n    connectDescriptor: ConnectDescriptor<I, O, P>,\n    props: P,\n): VNode<P> {\n    return new VNode<P>(\n        VNodeFlags.ComponentFunction | VNodeFlags.Connect,\n        connectDescriptor,\n        props,\n        null,\n        null,\n    );\n}\n\n/**\n * Placeholder function for Update Context components.\n *\n * It is used only in Dev Mode for stack traces.\n */\nfunction UpdateContext() {\n    /* tslint:disable:no-empty */\n    /* tslint:enable:no-empty */\n}\n\n/**\n * Create an update context VNode.\n *\n * @param context Context.\n * @param child Child VNode.\n * @returns VNodeBuilder object.\n */\nexport function $context<T = {}>(context: Context<T>, child: IVNode<any>): VNode<Context<T>> {\n    return new VNode<Context<T>>(\n        VNodeFlags.ComponentFunction | VNodeFlags.UpdateContext,\n        __IVI_DEV__ ? UpdateContext as () => IVNode<any> : null,\n        context,\n        null,\n        child);\n}\n\n/**\n * Create Keep Alive VNode.\n *\n * @param handler Keep Alive Handler.\n * @param child Child VNode.\n * @param props Props.\n * @returns VNodeBuilder object.\n */\nexport function $keepAlive<P>(\n    handler: (disposed: IVNode<any> | null, props: P) => IVNode<any> | null,\n    child: VNode<any>,\n    props: P,\n): VNode<P>;\nexport function $keepAlive(\n    handler: (disposed: IVNode<any> | null) => IVNode<any> | null,\n    child: VNode<any>,\n): VNode<null>;\nexport function $keepAlive<P>(\n    handler: KeepAliveHandler,\n    child: VNode<any>,\n    props?: P,\n): VNode<P> {\n    return new VNode<P>(\n        VNodeFlags.ComponentFunction | VNodeFlags.KeepAlive,\n        handler,\n        props === undefined ? null : props,\n        null,\n        child);\n}\n","/**\n * @final\n */\nexport class Query {\n    elapsed: number;\n    query: string;\n\n    constructor(elapsed: number, query: string) {\n        this.elapsed = elapsed;\n        this.query = query;\n    }\n\n    static rand(): Query {\n        const elapsed = Math.random() * 15;\n        let query: string;\n\n        if (Math.random() < 0.1) {\n            query = \"vacuum\";\n        } else if (Math.random() < 0.2) {\n            query = \"<IDLE> in transaction\";\n        } else {\n            query = \"SELECT blah FROM something\";\n        }\n\n        return new Query(elapsed, query);\n    }\n};\n\nexport const EMPTY_QUERY = new Query(0.0, \"***\");\n\n/**\n * @final\n */\nexport class DB {\n    id: number;\n    name: string;\n    queries: Query[] | null;\n\n    constructor(name: string) {\n        this.id = DB._nextId++;\n        this.name = name;\n        this.queries = null;\n\n        this.update();\n    }\n\n    static _nextId = 0;\n\n    update(): void {\n        const queries = [] as Query[];\n\n        const r = Math.floor((Math.random() * 10) + 1);\n        for (let j = 0; j < r; j++) {\n            queries.push(Query.rand());\n        }\n\n        this.queries = queries;\n    }\n\n    getTopFiveQueries(): Query[] {\n        let qs = this.queries!.slice(0, 5);\n        qs.sort(function (a, b) {\n            return a.elapsed - b.elapsed;\n        });\n        while (qs.length < 5) {\n            qs.push(EMPTY_QUERY);\n        }\n        return qs;\n    }\n}\n\n/**\n * @final\n */\nexport class DBList {\n    dbs: DB[];\n\n    constructor(n: number) {\n        this.dbs = [];\n\n        for (let i = 0; i < n; i++) {\n            this.dbs.push(new DB(\"cluster\" + (i + 1)));\n            this.dbs.push(new DB(\"cluster\" + (i + 1) + \" slave\"));\n        }\n    }\n\n    update(): void {\n        const dbs = this.dbs;\n        for (let i = 0; i < dbs.length; i++) {\n            dbs[i] = new DB(dbs[i].name);\n        }\n    }\n\n    randomUpdate(r: number): void {\n        const dbs = this.dbs;\n        for (let i = 0; i < dbs.length; i++) {\n            if (Math.random() < r) {\n                dbs[i] = new DB(dbs[i].name);\n            }\n        }\n    }\n}\n","const MonitorMaxSamples = 100;\nclass MonitorSamplesResult {\n    constructor(min, max, mean, last) {\n        this.min = min;\n        this.max = max;\n        this.mean = mean;\n        this.last = last;\n    }\n}\n/**\n * Profile Samples.\n */\nclass MonitorSamples {\n    constructor(maxSamples) {\n        this.samples = [];\n        this.maxSamples = maxSamples;\n        this._i = -1;\n    }\n    addSample(v) {\n        this._i = (this._i + 1) % this.maxSamples;\n        this.samples[this._i] = v;\n    }\n    each(fn) {\n        const samples = this.samples;\n        for (let i = 0; i < samples.length; i++) {\n            fn(samples[(this._i + 1 + i) % samples.length], i);\n        }\n    }\n    calc() {\n        const samples = this.samples;\n        if (samples.length === 0) {\n            return new MonitorSamplesResult(0, 0, 0, 0);\n        }\n        let min = samples[(this._i + 1) % samples.length];\n        let max = min;\n        let sum = 0;\n        for (let i = 0; i < samples.length; i++) {\n            const k = samples[(this._i + 1 + i) % samples.length];\n            if (k < min) {\n                min = k;\n            }\n            if (k > max) {\n                max = k;\n            }\n            sum += k;\n        }\n        const last = samples[this._i];\n        const mean = sum / samples.length;\n        return new MonitorSamplesResult(min, max, mean, last);\n    }\n}\n\n/**\n * Basic Counter.\n */\nclass BasicCounter {\n    constructor() {\n        this.value = 0;\n        this.onChange = null;\n    }\n    inc(value) {\n        if (value > 0) {\n            this.value += value;\n            this.onChange();\n        }\n    }\n}\nclass TimestampedValue {\n    constructor(timestamp, value) {\n        this.value = value;\n        this.next = null;\n    }\n}\n/**\n * Sliding Counter counts how many times `inc` method were called during `interval` period.\n */\nclass SlidingCounter {\n    constructor(interval) {\n        this._dec = () => {\n            const now = performance.now();\n            while (this._firstTimestamp !== null) {\n                const nextTimestamp = this._firstTimestamp;\n                if (now >= nextTimestamp.value) {\n                    this.value -= nextTimestamp.value;\n                    this._firstTimestamp = this._firstTimestamp.next;\n                }\n                else {\n                    setTimeout(this._dec, Math.ceil(nextTimestamp.value - now));\n                    break;\n                }\n            }\n            if (this._firstTimestamp === null) {\n                this._lastTimestamp = null;\n            }\n            this.onChange();\n        };\n        this.interval = interval;\n        this.value = 0;\n        this.onChange = null;\n        this._firstTimestamp = null;\n        this._lastTimestamp = null;\n    }\n    inc(value) {\n        if (value > 0) {\n            const timestamp = new TimestampedValue(performance.now() + this.interval, value);\n            if (this._firstTimestamp === null) {\n                this._firstTimestamp = timestamp;\n                setTimeout(this._dec, this.interval);\n            }\n            else {\n                this._lastTimestamp.next = timestamp;\n            }\n            this._lastTimestamp = timestamp;\n            this.value += value;\n            this.onChange();\n        }\n    }\n}\n\nlet frameTasks = [];\nlet rafId = -1;\n/**\n * Schedule new task that will be executed on the next frame.\n */\nfunction scheduleNextFrameTask(task) {\n    frameTasks.push(task);\n    if (rafId === -1) {\n        requestAnimationFrame(function (t) {\n            rafId = -1;\n            const tasks = frameTasks;\n            frameTasks = [];\n            for (let i = 0; i < tasks.length; i++) {\n                tasks[i]();\n            }\n        });\n    }\n}\n\nconst MonitorGraphHeight = 30;\nconst MonitorGraphWidth = MonitorMaxSamples;\nclass Widget {\n    constructor(name) {\n        this._sync = () => {\n            this.sync();\n            this._dirty = false;\n        };\n        this.name = name;\n        this.element = document.createElement(\"div\");\n        this.element.style.cssText = \"padding: 2px;\" +\n            \"background-color: #020;\" +\n            \"font-family: monospace;\" +\n            \"font-size: 12px;\" +\n            \"color: #0f0\";\n        this._dirty = false;\n        this.invalidate();\n    }\n    invalidate() {\n        if (!this._dirty) {\n            this._dirty = true;\n            scheduleNextFrameTask(this._sync);\n        }\n    }\n    sync() {\n        throw new Error(\"sync method not implemented\");\n    }\n}\nvar MonitorWidgetFlags;\n(function (MonitorWidgetFlags) {\n    MonitorWidgetFlags[MonitorWidgetFlags[\"HideMin\"] = 1] = \"HideMin\";\n    MonitorWidgetFlags[MonitorWidgetFlags[\"HideMax\"] = 2] = \"HideMax\";\n    MonitorWidgetFlags[MonitorWidgetFlags[\"HideMean\"] = 4] = \"HideMean\";\n    MonitorWidgetFlags[MonitorWidgetFlags[\"HideLast\"] = 8] = \"HideLast\";\n    MonitorWidgetFlags[MonitorWidgetFlags[\"HideGraph\"] = 16] = \"HideGraph\";\n    MonitorWidgetFlags[MonitorWidgetFlags[\"RoundValues\"] = 32] = \"RoundValues\";\n})(MonitorWidgetFlags || (MonitorWidgetFlags = {}));\nclass MonitorWidget extends Widget {\n    constructor(name, flags, unitName, samples) {\n        super(name);\n        this.flags = flags;\n        this.unitName = unitName;\n        this.samples = samples;\n        const label = document.createElement(\"div\");\n        label.style.cssText = \"text-align: center\";\n        label.textContent = this.name;\n        const text = document.createElement(\"div\");\n        if ((flags & MonitorWidgetFlags.HideMin) === 0) {\n            this.minText = document.createElement(\"div\");\n            text.appendChild(this.minText);\n        }\n        else {\n            this.minText = null;\n        }\n        if ((flags & MonitorWidgetFlags.HideMax) === 0) {\n            this.maxText = document.createElement(\"div\");\n            text.appendChild(this.maxText);\n        }\n        else {\n            this.maxText = null;\n        }\n        if ((flags & MonitorWidgetFlags.HideMean) === 0) {\n            this.meanText = document.createElement(\"div\");\n            text.appendChild(this.meanText);\n        }\n        else {\n            this.meanText = null;\n        }\n        if ((flags & MonitorWidgetFlags.HideLast) === 0) {\n            this.lastText = document.createElement(\"div\");\n            text.appendChild(this.lastText);\n        }\n        else {\n            this.lastText = null;\n        }\n        this.element.appendChild(label);\n        this.element.appendChild(text);\n        if ((flags & MonitorWidgetFlags.HideGraph) === 0) {\n            this.canvas = document.createElement(\"canvas\");\n            this.canvas.style.cssText = \"display: block; padding: 0; margin: 0\";\n            this.canvas.width = MonitorGraphWidth;\n            this.canvas.height = MonitorGraphHeight;\n            this.ctx = this.canvas.getContext(\"2d\");\n            this.element.appendChild(this.canvas);\n        }\n        else {\n            this.canvas = null;\n            this.ctx = null;\n        }\n    }\n    sync() {\n        const result = this.samples.calc();\n        const scale = MonitorGraphHeight / (result.max * 1.2);\n        let min;\n        let max;\n        let mean;\n        let last;\n        if ((this.flags & MonitorWidgetFlags.RoundValues) === 0) {\n            min = result.min.toFixed(2);\n            max = result.max.toFixed(2);\n            mean = result.mean.toFixed(2);\n            last = result.last.toFixed(2);\n        }\n        else {\n            min = Math.round(result.min).toString();\n            max = Math.round(result.max).toString();\n            mean = Math.round(result.mean).toString();\n            last = Math.round(result.last).toString();\n        }\n        if (this.minText !== null) {\n            this.minText.textContent = `min: \\u00A0${min}${this.unitName}`;\n        }\n        if (this.maxText !== null) {\n            this.maxText.textContent = `max: \\u00A0${max}${this.unitName}`;\n        }\n        if (this.meanText !== null) {\n            this.meanText.textContent = `mean: ${mean}${this.unitName}`;\n        }\n        if (this.lastText !== null) {\n            this.lastText.textContent = `last: ${last}${this.unitName}`;\n        }\n        if (this.ctx !== null) {\n            this.ctx.fillStyle = \"#010\";\n            this.ctx.fillRect(0, 0, MonitorGraphWidth, MonitorGraphHeight);\n            this.ctx.fillStyle = \"#0f0\";\n            this.samples.each((v, i) => {\n                this.ctx.fillRect(i, MonitorGraphHeight, 1, -(v * scale));\n            });\n        }\n    }\n}\nclass CounterWidget extends Widget {\n    constructor(name, counter) {\n        super(name);\n        this.counter = counter;\n        this.text = document.createElement(\"div\");\n        this.element.appendChild(this.text);\n    }\n    sync() {\n        this.text.textContent = `${this.name}: ${this.counter.value}`;\n    }\n}\n\nlet container = null;\nlet initialized = false;\n/**\n * Initialize Performance Monitor.\n */\nfunction initPerfMonitor(options) {\n    if (!initialized) {\n        if (options.container) {\n            container = options.container;\n        }\n        initialized = true;\n    }\n}\n/**\n * Check that everything is properly initialized.\n */\nfunction checkInit() {\n    if (!container) {\n        container = document.createElement(\"div\");\n        container.style.cssText = \"position: fixed;\" +\n            \"opacity: 0.9;\" +\n            \"right: 0;\" +\n            \"bottom: 0\";\n        document.body.appendChild(container);\n    }\n    initialized = true;\n}\n/**\n * Start FPS monitor\n */\nfunction startFPSMonitor(flags = MonitorWidgetFlags.HideMin | MonitorWidgetFlags.HideMax |\n        MonitorWidgetFlags.HideMean | MonitorWidgetFlags.RoundValues) {\n    checkInit();\n    const data = new MonitorSamples(MonitorMaxSamples);\n    const w = new MonitorWidget(\"FPS\", flags, \"\", data);\n    container.appendChild(w.element);\n    const alpha = 2 / 121;\n    let last = 0;\n    let fps = 60;\n    function update(now) {\n        if (last > 0) {\n            fps += alpha * ((1000 / (now - last)) - fps);\n        }\n        last = now;\n        data.addSample(fps);\n        w.invalidate();\n        requestAnimationFrame(update);\n    }\n    requestAnimationFrame(update);\n}\n/**\n * Start Memory Monitor\n */\nfunction startMemMonitor(flags = MonitorWidgetFlags.HideMin | MonitorWidgetFlags.HideMean) {\n    checkInit();\n    if (performance.memory === undefined) {\n        return;\n    }\n    const data = new MonitorSamples(MonitorMaxSamples);\n    const w = new MonitorWidget(\"Memory\", flags, \"MB\", data);\n    container.appendChild(w.element);\n    function update() {\n        data.addSample(Math.round(performance.memory.usedJSHeapSize / (1024 * 1024)));\n        w.invalidate();\n        setTimeout(update, 30);\n    }\n    update();\n}\nclass ProfilerDetails {\n    constructor(name, unitName, flags) {\n        this.data = new MonitorSamples(MonitorMaxSamples);\n        this.widget = new MonitorWidget(name, flags, unitName, this.data);\n        this.startTime = -1;\n    }\n}\nconst profilerInstances = {};\nclass CounterDetails {\n    constructor(name, interval) {\n        this.data = interval === undefined ? new BasicCounter() : new SlidingCounter(interval);\n        this.widget = new CounterWidget(name, this.data);\n        this.data.onChange = () => {\n            this.widget.invalidate();\n        };\n    }\n}\nconst counterInstances = {};\n/**\n * Initialize profiler and insert into container.\n */\nfunction initProfiler(name, flags = 0) {\n    checkInit();\n    let profiler = profilerInstances[name];\n    if (profiler === void 0) {\n        profilerInstances[name] = profiler = new ProfilerDetails(name, \"ms\", flags);\n        container.appendChild(profiler.widget.element);\n    }\n}\n/**\n * Initialize counter and insert into container.\n */\nfunction initCounter(name, interval) {\n    checkInit();\n    let counter = counterInstances[name];\n    if (counter === void 0) {\n        counterInstances[name] = counter = new CounterDetails(name, interval);\n        container.appendChild(counter.widget.element);\n    }\n}\nfunction startProfile(name) {\n    const profiler = profilerInstances[name];\n    if (profiler !== void 0) {\n        profiler.startTime = performance.now();\n    }\n}\nfunction endProfile(name) {\n    const now = performance.now();\n    const profiler = profilerInstances[name];\n    if (profiler !== void 0 && profiler.startTime !== -1) {\n        profiler.data.addSample(now - profiler.startTime);\n        profiler.widget.invalidate();\n    }\n}\nfunction count(name, value = 1) {\n    const counter = counterInstances[name];\n    if (counter !== void 0) {\n        counter.data.inc(value);\n    }\n}\n\nexport { initPerfMonitor, startFPSMonitor, startMemMonitor, initProfiler, initCounter, startProfile, endProfile, count, MonitorWidgetFlags };","\n/**\n * Mutable wrapper.\n *\n * @final\n */\nexport interface Mutable<T> {\n    ref: T;\n}\n\n/**\n * Creates a new object instance that wraps mutable object.\n *\n * @param ref Mutable object.\n * @returns a new mutable wrapper instance.\n */\nexport function mut<T>(ref: T): Mutable<T> {\n    return { ref };\n}\n","import { Context } from \"../common/types\";\nimport { IVNode } from \"../vdom/ivnode\";\nimport { ConnectDescriptor, SelectorData } from \"../vdom/connect_descriptor\";\nimport { ComponentClass, isComponentClass } from \"../vdom/component\";\nimport { VNode } from \"../vdom/vnode\";\nimport { $c, $connect } from \"../vdom/vnode_components\";\n\nexport function connect<I, O, P>(\n    select: (prev: SelectorData<I, O> | null, props: null | void, context: Context) => SelectorData<I, O>,\n    render: ComponentClass<O>,\n): () => VNode<P>;\nexport function connect<I, O, P>(\n    select: (prev: SelectorData<I, O> | null, props: null | void, context: Context) => SelectorData<I, O>,\n    render: (props: O) => IVNode<any>,\n): () => VNode<P>;\nexport function connect<I, O, P>(\n    select: (prev: SelectorData<I, O> | null, props: P, context: Context) => SelectorData<I, O>,\n    render: ComponentClass<O>,\n): (props: P) => VNode<P>;\nexport function connect<I, O, P>(\n    select: (prev: SelectorData<I, O> | null, props: P, context: Context) => SelectorData<I, O>,\n    render: (props: O) => IVNode<any>,\n): (props: P) => VNode<P>;\nexport function connect<I, O, P>(\n    select: (prev: SelectorData<I, O> | null, props: null | void) => SelectorData<I, O>,\n    render: ComponentClass<O>,\n): () => VNode<null>;\nexport function connect<I, O, P>(\n    select: (prev: SelectorData<I, O> | null, props: null | void) => SelectorData<I, O>,\n    render: (props: O) => IVNode<any>,\n): () => VNode<null>;\nexport function connect<I, O, P>(\n    select: (prev: SelectorData<I, O> | null) => SelectorData<I, O>,\n    render: ComponentClass<O>,\n): () => VNode<null>;\nexport function connect<I, O, P>(\n    select: (prev: SelectorData<I, O> | null) => SelectorData<I, O>,\n    render: (props: O) => IVNode<any>,\n): () => VNode<null>;\nexport function connect<I, O, P>(\n    select: (prev: SelectorData<I, O> | null, props: P, context: Context) => SelectorData<I, O>,\n    render: ComponentClass<O> | ((props: O) => IVNode<any>),\n): (props: P) => VNode<P> {\n    let descriptor: ConnectDescriptor<I, O, P>;\n    if (__IVI_DEV__) {\n        if (isComponentClass(render)) {\n            const fn = function (props: O): IVNode<O> {\n                return $c(render, props);\n            };\n            fn.displayName = render.constructor.name;\n            descriptor = {\n                select,\n                render: fn,\n            };\n        } else {\n            descriptor = {\n                select,\n                render,\n            };\n        }\n    } else {\n        descriptor = {\n            select,\n            render: (isComponentClass(render)) ?\n                function (props: O): IVNode<O> {\n                    return $c(render, props);\n                } :\n                render,\n        };\n    }\n    return function (props: P): VNode<P> {\n        return $connect(descriptor, props);\n    };\n}\n","import { NOOP_FALSE } from \"../common/noop\";\nimport { getFunctionName, nextDebugId } from \"../dev_mode/dev_mode\";\nimport { isPropsNotShallowEqual } from \"../common/equality\";\nimport { ComponentFlags } from \"./flags\";\nimport { IVNode } from \"./ivnode\";\nimport { currentFrame } from \"../scheduler/frame\";\n\n/**\n * Component function constructor.\n */\nexport interface ComponentFunction<P = void> {\n    (props: P): IVNode<any>;\n    isPropsChanged?: (oldProps: P, newProps: P) => boolean;\n    shouldAugment?: (props: P) => boolean;\n}\n\n/**\n * Component class constructor.\n */\nexport interface ComponentClass<P = void> {\n    new (props: P): Component<P>;\n}\n\n/**\n * Component is the main building block that is used to build UI applications.\n *\n * Component class has a parametric type `P` to specify `props` type.\n *\n * Example:\n *\n *     class Hello extends Component<string> {\n *         render() {\n *             return $t(`Hello ${this.props}`);\n *         }\n *     }\n *\n *     render($c(Hello, \"world\"), document.getElementById(\"App\")!);\n */\nexport abstract class Component<P = void> {\n    /**\n     * Flags, see `ComponentFlags` for details.\n     *\n     * Lowest 16 bits are reserved for ivi flags, other bits can be used for user flags.\n     */\n    flags: ComponentFlags;\n    /**\n     * Component properties.\n     */\n    props: P;\n    /**\n     * Unique ID.\n     *\n     * ID generator is using `dev_mode.uniqueId()` function, so it will be unique across all Dev Mode ids.\n     *\n     * Dev Mode.\n     */\n    _debugId: number;\n\n    constructor(props: P) {\n        this.flags = 0;\n        this.props = props;\n        if (__IVI_DEV__) {\n            this._debugId = nextDebugId();\n        }\n    }\n\n    /**\n     * Lifecycle method `isPropsChanged` is used as a hint that can reduce unnecessary updates.\n     *\n     * By default props checked by their identity.\n     *\n     * @param oldProps Old props.\n     * @param newProps New props.\n     * @returns `true` when props should be updated.\n     */\n    isPropsChanged(oldProps: P, newProps: P): boolean {\n        return oldProps !== newProps;\n    }\n\n    /**\n     * Lifecycle method `newPropsReceived` is invoked after new props are assigned.\n     *\n     * @param oldProps Old props.\n     * @param newProps New props.\n     */\n    newPropsReceived(oldProps: P, newProps: P): void {\n        /* tslint:disable:no-empty */\n        /* tslint:enable:no-empty */\n    }\n\n    /**\n     * Lifecycle method `shouldAugment` is invoked before augmentation.\n     *\n     * @returns true when component should be augmented.\n     */\n    shouldAugment(): boolean {\n        return true;\n    }\n\n    /**\n     * Lifecycle method `attached` is invoked when component is attached to the document.\n     */\n    attached(): void {\n        /* tslint:disable:no-empty */\n        /* tslint:enable:no-empty */\n    }\n\n    /**\n     * Lifecycle method `detached` is invoked when component is detached from the document.\n     */\n    detached(): void {\n        /* tslint:disable:no-empty */\n        /* tslint:enable:no-empty */\n    }\n\n    /**\n     * Lifecycle method `beforeUpdate` is invoked before update.\n     */\n    beforeUpdate(): void {\n        /* tslint:disable:no-empty */\n        /* tslint:enable:no-empty */\n    }\n\n    /**\n     * Lifecycle method `updated` is invoked after update.\n     */\n    updated(): void {\n        /* tslint:disable:no-empty */\n        /* tslint:enable:no-empty */\n    }\n\n    /**\n     * Lifecycle method `invalidated` is invoked after `invalidate` method is invoked.\n     */\n    invalidated(): void {\n        /* tslint:disable:no-empty */\n        /* tslint:enable:no-empty */\n    }\n\n    abstract render(): IVNode<any>;\n\n    /**\n     * Invalidate view.\n     */\n    invalidate(): void {\n        if (__IVI_BROWSER__) {\n            this.flags |= ComponentFlags.DirtyState;\n            this.invalidated();\n            if (this.flags & ComponentFlags.Attached) {\n                currentFrame().updateComponent();\n            }\n        }\n    }\n}\n\n/**\n * Checks props for shallow equality.\n *\n * This function can be used as a wrapper for function expression, or as a class decorator.\n *\n *     checkPropsShallowEquality(MyComponent);\n *     function MyComponent(props: { text: string }) {\n *         return $h(\"div\").children(props.text);\n *     });\n *\n *     @checkPropsShallowEquality\n *     class MyClassComponent extends Component<{ text: string }> {\n *         render() {\n *             return $h(\"div\").children(this.props.text);\n *         }\n *     }\n *\n * @param target Component constructor.\n * @returns Component constructor with identity check.\n */\nexport function checkPropsShallowEquality<P extends ComponentClass<any> | ComponentFunction<any>>(target: P): P {\n    if (target.prototype.render) {\n        target.prototype.isPropsChanged = isPropsNotShallowEqual;\n    } else {\n        (target as ComponentFunction<any>).isPropsChanged = isPropsNotShallowEqual;\n    }\n    return target;\n}\n\n/**\n * Marks component as static.\n *\n * This function can be used as a wrapper for function expression, or as a class decorator.\n *\n *     staticComponent(MyComponent);\n *     function MyComponent(props: { text: string }) {\n *         return $h(\"div\").children(props.text);\n *     });\n *\n *     @staticComponent\n *     class MyClassComponent extends Component<{ text: string }> {\n *         render() {\n *             return $h(\"div\").children(this.props.text);\n *         }\n *     }\n *\n * @param target Component constructor.\n * @returns Component constructor with static property.\n */\nexport function staticComponent<P extends ComponentClass<any> | ComponentFunction<any>>(target: P): P {\n    if (target.prototype.render) {\n        target.prototype.isPropsChanged = NOOP_FALSE;\n    } else {\n        (target as ComponentFunction<any>).isPropsChanged = NOOP_FALSE;\n    }\n    return target;\n}\n\n/**\n * Get component name from component instance or component function.\n *\n * @param component Component.\n * @return Component name.\n */\nexport function getComponentName(component: Component<any> | ComponentFunction<any>): string {\n    return getFunctionName(\n        (component as Function).prototype.render ?\n            (component as Object).constructor :\n            component as ComponentFunction<any>,\n    );\n}\n\nexport function isComponentClass(componentClass: any): componentClass is ComponentClass<any> {\n    return componentClass.prototype.render;\n}\n\n/**\n * Is component attached.\n *\n * @returns `true` when Component is attached.\n */\nexport function isComponentAttached(component: Component<any>): boolean {\n    return !!(component.flags & ComponentFlags.Attached);\n}\n"]}