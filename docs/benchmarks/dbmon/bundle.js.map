{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:////home/void/w/ts/ivi/packages/ivi/src/vdom/operations.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/vdom/factories.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/core/shortcuts.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/vdom/context.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/core/array.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/core/repeatable_task_list.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/core/noop.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/core/error.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/core/feature_detection.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/dom/namespaces.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/vdom/state.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/vdom/reconciler.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/vdom/root.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/scheduler/index.ts","webpack:////home/void/w/ts/ivi/packages/ivi-scheduler/src/index.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/vdom/hooks.ts","webpack:////home/void/w/ts/ivi/packages/ivi-html/src/index.ts","webpack:////home/void/w/ts/ivi-examples/node_modules/perf-monitor/dist/es5/perf-monitor.js","webpack:///./src/css.ts","webpack:///./src/init.ts","webpack:///./src/state.ts","webpack:///./src/main.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","createOpType","flags","descriptor","TRACK_BY_KEY","createOpNode","type","data","operations_key","k","v","TrackByKey","items","factories_element","tag","svg","className","attrs","children","htmlElement","nodeProto","Node","shortcuts_elementProto","Element","objectHasOwnProperty","nodeInsertBefore","insertBefore","nodeRemoveChild","removeChild","nodeCloneNode","replaceChild","cloneNode","elementSetAttribute","setAttribute","elementRemoveAttribute","setAttributeNS","removeAttribute","_","_context","setContext","context","tmp","restoreContext","getContext","unorderedArrayDeleteByIndex","array","index","length","last","pop","unorderedArrayDelete","item","indexOf","runRepeatableTasks","tasks","NOOP","ERROR_HANDLERS","catchError","fn","apply","arguments","e","forEach","h","opts","[object Object]","window","addEventListener","KeyboardEvent","MouseEvent","IOS_GESTURE_EVENT","SVG_NAMESPACE","createStateNode","op","state","getDOMNode","node","_nextNode","_index","_deepStateFlags","_dirtyContext","_moveNode","_singleChild","_pushDeepState","_popDeepState","prev","current","_dirtyCheck","parentElement","stateNode","domNode","deepState","hooks","dirtyCheck","_update","update","assign","prevContext","_unmountWalk","unmountHooks","unmount","_unmount","_unmountTrackByKeysChildren","childrenState","textContent","_mountText","document","createTextNode","_createElement","opType","tagName","createElementNS","createElement","_updateAttrs","_mountObject","opData","opFlags","deepStateFlags","root","_mount","proto","nextNode","Array","_mountChildren","child","result","j","push","nextOp","prevOp","stateFlags","nodeValue","stateChildren","prevData","nextData","shouldUpdate","nextClassName","nextChildren","_updateChildren","updateChildrenTrackByKeys","dirtyContext","a","b","sNode","aStartNode","bStartNode","aEnd","bEnd","aEndNode","bEndNode","start","outer","aLength","bLength","nullableState","sources","pos","updated","keyIndex","Map","set","opNode","seq","lis","slice","u","updateStyle","element","style","bValue","setProperty","removeProperty","matchCount","keys","_updateAttr","next","ROOTS","findRoot","container","find","onclick","run","_flags","_clock","_microtasks","_mutationEffects","_domLayoutEffects","_beforeMutations","_afterMutations","_frameStartTime","withSchedulerTick","inner","runMicrotasks","clock","scheduleMicrotask","task","cb","Promise","resolve","then","withNextFrame","time","performance","now","_handleNextFrame","requestNextFrame","requestAnimationFrame","requestDirtyCheck","render","useSelect","selector","prevSelector","props","lastChecked","nextState","nextProps","div","span","table","tbody","td","tr","extendStatics","MonitorWidgetFlags","MonitorMaxSamples","MonitorSamplesResult","min","max","mean","this","MonitorSamples","maxSamples","samples","_i","addSample","each","calc","sum","frameTasks","rafId","__extends","setPrototypeOf","__proto__","__","constructor","MonitorGraphHeight","MonitorGraphWidth","Widget","_this","_sync","sync","_dirty","cssText","invalidate","Error","MonitorWidget","_super","unitName","label","text","HideMin","minText","appendChild","HideMax","maxText","HideMean","meanText","HideLast","lastText","HideGraph","canvas","width","height","ctx","scale","RoundValues","toFixed","Math","round","toString","fillStyle","fillRect","perf_monitor_container","CounterWidget","counter","checkInit","body","startFPSMonitor","w","fps","startMemMonitor","undefined","memory","usedJSHeapSize","setTimeout","ProfilerDetails","widget","startTime","profilerInstances","initProfiler","profiler","endProfile","queryClassName","elapsed","countClassName","count","mutations","N","parseQueryString","split","decodeURIComponent","replace","randomQuery","query","random","randomQueries","queries","floor","EMPTY_QUERY","_nextId","createDB","id","getTopFiveQueries","db","qs","sort","randomUpdate","entryFormatElapsed","minutes","comps","location","search","substr","parseInt","parseFloat","sliderContainer","display","slider","marginBottom","marginTop","Number","target","firstChild","init","main_state","createState","arrow","Popover","statelessComponent","DatabaseList","getDB","idx","topFiveQueries","map","q","component","Main","dbs","main_container","getElementById","tick"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","import { Box } from \"../core/box\";\nimport { EventHandler } from \"../events/event_handler\";\nimport { NodeFlags } from \"./node_flags\";\nimport { StateNode } from \"./state\";\nimport { ElementProtoDescriptor } from \"./element_proto\";\nimport { ComponentDescriptor, StatelessComponentDescriptor } from \"./component\";\n\n/**\n * Operation type.\n */\nexport interface OpType {\n  /**\n   * See {@link NodeFlags} for details.\n   */\n  readonly flags: NodeFlags;\n  /**\n   * Operation type descriptor.\n   */\n  readonly descriptor: StatelessComponentDescriptor | ComponentDescriptor | ElementProtoDescriptor | string | null;\n}\n\n/**\n * createOpType creates {@link OpType} instances.\n *\n * @param flags See {@link NodeFlags} for details.\n * @param descriptor Operation type descriptor.\n * @returns {@link OpType} instance.\n */\nexport const createOpType = (\n  flags: NodeFlags,\n  descriptor: StatelessComponentDescriptor | ComponentDescriptor | ElementProtoDescriptor | string | null,\n): OpType => ({ flags, descriptor });\n\n/**\n * OpType for Events nodes.\n */\nexport const EVENTS = createOpType(NodeFlags.Events, null);\n\n/**\n * OpType for Ref nodes.\n */\nexport const REF = createOpType(NodeFlags.Ref, null);\n\n/**\n * OpType for Context nodes.\n */\nexport const CONTEXT = createOpType(NodeFlags.Context, null);\n\n/**\n * OpType for TrackByKey nodes.\n */\nexport const TRACK_BY_KEY = createOpType(NodeFlags.TrackByKey | NodeFlags.MultipleChildren, null);\n\n/**\n * Operation node.\n */\nexport interface OpNode<T = any> {\n  /**\n   * Operation type.\n   */\n  readonly type: OpType;\n  /**\n   * Operation data.\n   */\n  readonly data: T;\n}\n\n/**\n * createOpNode creates an {@link OpNode} instance.\n *\n * @param type Operation type.\n * @param data Operation data.\n * @returns {@link OpNode} instance.\n */\nexport const createOpNode = <T>(type: OpType, data: T): OpNode<T> => ({ type, data });\n\n/**\n * Operation data for element operations.\n */\nexport interface ElementData<T = any> {\n  /**\n   * Element class name.\n   */\n  readonly className: string | undefined;\n  /**\n   * Element attributes.\n   */\n  readonly attrs: T | undefined;\n  /**\n   * Children operations.\n   */\n  readonly children: OpChildren;\n}\n\n/**\n * Children operations supported by element nodes.\n */\nexport type OpChildren = string | number | OpNode | RecursiveOpChildrenArray | null;\n\n/**\n * Recursive children array operations supported by element nodes.\n */\nexport interface RecursiveOpChildrenArray extends Array<OpChildren> { }\n\n/**\n * Generic operation data for simple operations.\n */\nexport interface OpData<T = any> {\n  /**\n   * Generic data.\n   */\n  readonly data: T;\n  /**\n   * Child operation.\n   */\n  readonly child: OpNode | string | number | null;\n}\n\n/**\n * Operation data for Events operations.\n */\nexport type EventsData = OpData<EventHandler | Array<EventHandler | null> | null>;\n\n/**\n * Operation data for Ref operations.\n */\nexport type RefData = OpData<Box<StateNode | null>>;\n\n/**\n * Operation data for Context operations.\n */\nexport type ContextData = OpData<{}>;\n\n/**\n * Operation factory for event handlers.\n *\n * @example\n *\n *     render(\n *       Events(onClick(() => { console.log(\"clicked\"); }),\n *         ChildComponent(),\n *       ),\n *       DOMContainer,\n *     );\n *\n * @param data Event handlers.\n * @param child Child operation.\n * @returns Event handler OpNode.\n */\nexport const Events = /* istanbul ignore else */ DEBUG ?\n  (\n    data: EventHandler | Array<EventHandler | null> | null,\n    child: OpNode | string | number | null,\n  ): OpNode<EventsData> => {\n    if (child !== null && typeof child === \"object\" && child.type === TRACK_BY_KEY) {\n      throw new Error(`Invalid child OpNode, Events can't have TrackByKey as a child`);\n    }\n    return createOpNode(EVENTS, { data, child });\n  } :\n  (\n    data: EventHandler | Array<EventHandler | null> | null,\n    child: OpNode | string | number | null,\n  ): OpNode<EventsData> => (\n      createOpNode(EVENTS, { data, child })\n    );\n\n/**\n * Operation factory for ref nodes.\n *\n * @example\n *\n *     const _ref = box();\n *\n *     render(\n *       Ref(_ref,\n *         div(),\n *       ),\n *       DOMContainer,\n *     );\n *\n *     getDOMNode(_ref);\n *\n * @param data Boxed value.\n * @param child Child operation.\n * @returns Ref OpNode.\n */\nexport const Ref = /* istanbul ignore else */ DEBUG ?\n  (\n    data: Box<StateNode | null>,\n    child: OpNode | string | number | null,\n  ): OpNode<RefData> => {\n    if (child !== null && typeof child === \"object\" && child.type === TRACK_BY_KEY) {\n      throw new Error(`Invalid child OpNode, Ref can't have TrackByKey as a child`);\n    }\n    return createOpNode(REF, { data, child });\n  } :\n  (\n    data: Box<StateNode | null>,\n    child: OpNode | string | number | null,\n  ): OpNode<RefData> => createOpNode(REF, { data, child });\n\n/**\n * Operation factory for context nodes.\n *\n * @example\n *\n *     render(\n *       Context({ key: 123 },\n *         ChildComponent(),\n *       ),\n *       DOMContainer,\n *     );\n *\n * @param data Context object.\n * @param child Child operation.\n * @returns Context OpNode.\n */\nexport const Context = /* istanbul ignore else */ DEBUG ?\n  (data: {}, child: OpNode | string | number | null): OpNode<ContextData> => {\n    if (child !== null && typeof child === \"object\" && child.type === TRACK_BY_KEY) {\n      throw new Error(`Invalid child OpNode, Context can't have TrackByKey as a child`);\n    }\n    return createOpNode(CONTEXT, { data, child });\n  } :\n  (data: {}, child: OpNode | string | number | null): OpNode<ContextData> => createOpNode(CONTEXT, { data, child });\n\n/**\n * Key is an object that is used by TrackByKey operations to track operations.\n */\nexport interface Key<K, V> {\n  /**\n   * Key.\n   */\n  readonly k: K;\n  /**\n   * Value.\n   */\n  readonly v: V;\n}\n\n/**\n * key creates a {@link Key} instance.\n *\n * @param k Key.\n * @param v Value.\n * @returns {@link Key} instance.\n */\nexport const key = <K, V>(k: K, v: V): Key<K, V> => ({ k, v });\n\n/**\n * Operation factory for track by key nodes.\n *\n * @example\n *\n *     const items = [1, 2, 3];\n *     render(\n *       TrackByKey(items.map((item) => key(item, div(_, _, item))),\n *       DOMContainer,\n *     );\n *\n * @param items Keyed operations.\n * @returns Track by key OpNode.\n */\nexport const TrackByKey = DEBUG ?\n  <T>(items: Key<T, OpNode | number | string>[]) => {\n    /* istanbul ignore else */\n    if (DEBUG) {\n      const keys = new Set<T>();\n      for (let i = 0; i < items.length; i++) {\n        const { k, v } = items[i];\n        if (keys.has(k)) {\n          throw new Error(`Invalid key, found duplicated key: ${k}`);\n        }\n        keys.add(k);\n        if (typeof v === \"object\" && v !== null && v.type === TRACK_BY_KEY) {\n          throw new Error(`Invalid child OpNode, TrackByKey can't have TrackByKey children`);\n        }\n      }\n    }\n    return createOpNode(TRACK_BY_KEY, items);\n  } :\n  <T>(items: Key<T, OpNode | number | string>[]) => createOpNode(TRACK_BY_KEY, items);\n","// import { CSSStyleProps } from \"../dom/style\";\nimport { NodeFlags } from \"./node_flags\";\nimport { OpNode, OpChildren, ElementData, createOpNode, createOpType } from \"./operations\";\nimport { StateNode } from \"./state\";\n\nfunction element<T, U>(tag: string, svg: boolean) {\n  const type = createOpType(\n    svg === true ? (NodeFlags.Element | NodeFlags.Svg) : NodeFlags.Element,\n    tag,\n  );\n  return (\n    className?: string,\n    attrs?: {},\n    children: OpChildren = null,\n  ) => (\n      createOpNode<ElementData>(type, { className, attrs, children })\n    );\n}\n\n/**\n * htmlElement create a HTML element operation factories.\n *\n * @param tag HTML element tag name.\n * @returns HTML element operation factory.\n */\nexport const htmlElement: <T, U>(tag: string) => (\n  className?: string,\n  attrs?: {},\n  children?: OpChildren,\n) => OpNode<ElementData<T>> = (tag: string) => element(tag, false);\n\n/**\n * htmlElement create a SVG element operation factories.\n *\n * @param tag SVG element tag name.\n * @returns SVG element operation factory.\n */\nexport const svgElement: <T, U>(tag: string) => (\n  className?: string,\n  attrs?: {},\n  children?: OpChildren,\n) => OpNode<ElementData<T>> = (tag: string) => element(tag, true);\n\n/**\n * `elementProto()` creates a factory that produces elements with predefined attributes.\n *\n * @example\n *\n *     const DivWithIdAttribute = element(div(_, { id: \"predefined-id\" }));\n *\n *     render(\n *       DivWithIdAttribute(\"class-name\", { title: \"Title\" }, \"Hello World\"),\n *       document.getElementById(\"app\")!,\n *     );\n *\n * @param proto Element prototype.\n * @returns Factory that produces elements with predefined attributes.\n */\nexport function elementProto<P>(proto: OpNode<ElementData<P>>) {\n  /* istanbul ignore else */\n  if (DEBUG) {\n    if (proto.data.children !== null) {\n      throw new Error(`Invalid OpNode, element prototypes can't have any children`);\n    }\n  }\n  const type = createOpType(proto.type.flags | NodeFlags.ElementProto, { node: null, proto });\n  return (\n    className?: string,\n    attrs?: {},\n    children: OpChildren = null,\n  ) => createOpNode<ElementData>(type, { className, attrs, children });\n}\n\n/**\n * component creates an OpNode factory that produces nodes for components.\n *\n * @example\n *\n *     const A = component<string>(() => {\n *       let _text;\n *       const click = onClick(() => { console.log(_text); });\n *\n *       return (text) => (\n *         _text = text,\n *         Events(click,\n *           button(_, _, \"Click Me\"),\n *         )\n *       );\n *     });\n *\n * @param c Component function.\n * @param shouldUpdate `shouldUpdate` function.\n * @returns Factory that produces component nodes.\n */\nexport function component(\n  c: (c: StateNode) => () => OpNode | string | number | null,\n): () => OpNode<undefined>;\n\n/**\n * component creates an OpNode factory that produces nodes for components.\n *\n * @example\n *\n *     const A = component<string>(() => {\n *       let _text;\n *       const click = onClick(() => { console.log(_text); });\n *\n *       return (text) => (\n *         _text = text,\n *         Events(click,\n *           button(_, _, \"Click Me\"),\n *         )\n *       );\n *     });\n *\n * @param c Component function.\n * @param shouldUpdate `shouldUpdate` function.\n * @returns Factory that produces component nodes.\n */\nexport function component<P>(\n  c: (c: StateNode) => (props: P) => OpNode | string | number | null,\n  shouldUpdate?: undefined extends P ? undefined : (prev: P, next: P) => boolean,\n): undefined extends P ? (props?: P) => OpNode<P> : (props: P) => OpNode<P>;\n\n/**\n * component creates an OpNode factory that produces nodes for components.\n *\n * @example\n *\n *     const A = component<string>(() => {\n *       let _text;\n *       const click = onClick(() => { console.log(_text); });\n *\n *       return (text) => (\n *         _text = text,\n *         Events(click,\n *           button(_, _, \"Click Me\"),\n *         )\n *       );\n *     });\n *\n * @param c Component function.\n * @param shouldUpdate `shouldUpdate` function.\n * @returns Factory that produces component nodes.\n */\nexport function component<P>(\n  c: (c: StateNode) => (props: P) => OpNode | string | number | null,\n  shouldUpdate?: (prev: P, next: P) => boolean,\n): (props: P) => OpNode<P> {\n  const type = createOpType(NodeFlags.Component | NodeFlags.Stateful | NodeFlags.DirtyCheck, { c, shouldUpdate });\n  return (props: P) => createOpNode(type, props);\n}\n\n/**\n * statelessComponent creates an OpNode factory that produces nodes for stateless components.\n *\n * @example\n *\n *     const A = statelessComponent<string>((text) => div(_, _, text));\n *\n * @param update Update function.\n * @param shouldUpdate `shouldUpdate` function.\n * @returns Factory that produces stateless component nodes.\n */\nexport function statelessComponent(\n  update: () => OpNode | string | number | null,\n): () => OpNode<undefined>;\n\n/**\n * statelessComponent creates an OpNode factory that produces nodes for stateless components.\n *\n * @example\n *\n *     const A = statelessComponent<string>((text) => div(_, _, text));\n *\n * @param update Update function.\n * @param shouldUpdate `shouldUpdate` function.\n * @returns Factory that produces stateless component nodes.\n */\nexport function statelessComponent<P>(\n  update: (props: P) => OpNode | string | number | null,\n  shouldUpdate?: undefined extends P ? undefined : (prev: P, next: P) => boolean,\n): undefined extends P ? (props?: P) => OpNode<P> : (props: P) => OpNode<P>;\n\n/**\n * statelessComponent creates an OpNode factory that produces nodes for stateless components.\n *\n * @example\n *\n *     const A = statelessComponent<string>((text) => div(_, _, text));\n *\n * @param c Update function.\n * @param shouldUpdate `shouldUpdate` function.\n * @returns Factory that produces stateless component nodes.\n */\nexport function statelessComponent<P>(\n  c: (props: P) => OpNode | string | number | null,\n  shouldUpdate?: undefined extends P ? undefined : (prev: P, next: P) => boolean,\n): (props: P) => OpNode<P> {\n  const type = createOpType(NodeFlags.Component, { c, shouldUpdate });\n  return (props: P) => createOpNode(type, props);\n}\n","const nodeProto = Node.prototype;\nconst elementProto = Element.prototype;\n\n/**\n * Shortcut for an `Object.prototype.hasOwnProperty`.\n */\nexport const objectHasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Shortcut for a `Node.prototype.insertBefore`.\n */\nexport const nodeInsertBefore = nodeProto.insertBefore;\n\n/**\n * Shortcut for a `Node.prototype.removeChild`.\n */\nexport const nodeRemoveChild = nodeProto.removeChild;\n\n/**\n * Shortcut for a `Node.prototype.replaceChild`.\n */\nexport const nodeReplaceChild = nodeProto.replaceChild;\n\n/**\n * Shortcut for a `Node.prototype.cloneNode`.\n */\nexport const nodeCloneNode = nodeProto.cloneNode;\n\n/**\n * Shortcut for an `Element.prototype.setAttribute`.\n */\nexport const elementSetAttribute = elementProto.setAttribute;\n\n/**\n * Shortcut for an `Element.prototype.setAttributeNS`.\n */\nexport const elementSetAttributeNS = elementProto.setAttributeNS;\n\n/**\n * Shortcut for an `Element.prototype.removeAttribute`.\n */\nexport const elementRemoveAttribute = elementProto.removeAttribute;\n\n/**\n * Shortcut for an `undefined` value.\n */\nexport const _ = void 0;\n","/**\n * Current context.\n */\nlet _context = {};\n\n/**\n * setContext assigns current context.\n *\n * Should be executed before going deeper into Context node.\n *\n * @param context - Current context.\n * @returns previous context\n */\nexport function setContext(context: {}): {} {\n  const tmp = _context;\n  _context = context;\n  return tmp;\n}\n\n/**\n * restoreContext restores previous context.\n *\n * Should be executed after processing Context node.\n *\n * @param context - Previous context.\n */\nexport function restoreContext(context: {}): void {\n  _context = context;\n}\n\n/**\n * getContext retrieves current context.\n *\n * @returns current context\n */\nexport function getContext(): {} {\n  return _context;\n}\n","/**\n * append pushes item to an array and automatically creates a new array when it doesn't exist.\n *\n * @param array - Array\n * @param item - Item\n * @returns Array\n */\nexport const append = <T>(array: T[] | null, item: T) => array === null ? [item] : (array.push(item), array);\n\n/**\n * unorderedArrayDeleteIndex deletes item from an array with O(1) complexity.\n *\n * It swaps item at `index` position with the last item and removes the last one.\n *\n * @param array - Array\n * @param index - Index of an item to delete\n */\nexport function unorderedArrayDeleteByIndex<T>(array: T[], index: number): void {\n  const length = array.length - 1;\n  const last = array.pop();\n  if (index !== length) {\n    array[index] = last!;\n  }\n}\n\n/**\n * unorderedArrayDelete deletes item from an array with O(1) complexity.\n *\n * It swaps item at `index` position with the last item and deletes the last one.\n *\n * @param array - Array\n * @param item - Item to delete\n */\nexport function unorderedArrayDelete<T>(array: T[], item: T): void {\n  const index = array.indexOf(item);\n  /* istanbul ignore else */\n  if (DEBUG) {\n    if (index === -1) {\n      throw new Error(`Failed to delete an item from an array, item doesn't exist in the array`);\n    }\n  }\n  unorderedArrayDeleteByIndex(array, index);\n}\n","import { unorderedArrayDeleteByIndex } from \"./array\";\n\n/**\n * RepeatableTaskList is a data structure for tasks that will be repeated until they return `true` value.\n */\nexport type RepeatableTaskList = Array<() => boolean | void>;\n\n/**\n * runRepeatableTasks runs repeatable tasks.\n *\n * @param tasks - Repeatable tasks\n */\nexport function runRepeatableTasks(tasks: RepeatableTaskList): void {\n  for (let i = 0; i < tasks.length; ++i) {\n    if (tasks[i]() === true) {\n      unorderedArrayDeleteByIndex(tasks, i--);\n    }\n  }\n}\n","/**\n * NOOP function.\n */\nexport const NOOP = () => { /**/ };\n\n/**\n * NOOP_FALSE function always returns `false` value.\n *\n * @returns `false` value.\n */\nexport const NOOP_FALSE = () => false;\n\n/**\n * NOOP_TRUE function always returns `true` value.\n *\n * @returns `true` value.\n */\nexport const NOOP_TRUE = () => true;\n","const ERROR_HANDLERS: Array<(e: any) => void> = [];\n\n/**\n * addErrorHandler adds an error handler for errors catched by functions decorated with `catchError()`.\n *\n * @param handler error handler.\n */\nexport function addErrorHandler(handler: (e: any) => void): void {\n  ERROR_HANDLERS.push(handler);\n}\n\n/**\n * catchError is a decorator that catches exceptions and invokes error handlers registered with `addErrorHandler()`.\n *\n * @noinline\n * @throws\n * @param fn - Function to decorate\n * @returns function decorated with a catchError\n */\nexport function catchError<T>(fn: (...args: any[]) => T): (...args: any[]) => T;\nexport function catchError<T>(fn: () => T): (...args: any[]) => T {\n  return function () {\n    try {\n      return fn.apply(void 0, arguments);\n    } catch (e) {\n      ERROR_HANDLERS.forEach((h) => { h(e); });\n      throw e;\n    }\n  };\n}\n","/**\n * Feature Detection is used to implement polyfills or just disable some features when browser doesn't support them.\n * For example, when browser doesn't support passive events, we can just ignore it and always use active events.\n */\n\n/* istanbul ignore next */\n/**\n * Passive event listeners are a new feature in the DOM spec that enable developers to opt-in to better scroll\n * performance by eliminating the need for scrolling to block on touch and wheel event listeners. Developers can\n * annotate touch and wheel listeners with {passive: true} to indicate that they will never invoke preventDefault.\n *\n * https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n */\nexport const PASSIVE_EVENTS = /*#__PURE__*/((TARGET === \"electron\") ? true :\n  (() => {\n    let v = false;\n    try {\n      // Test via a getter in the options object to see if the passive property is accessed\n      const opts = Object.defineProperty({}, \"passive\", {\n        get() {\n          v = true;\n        },\n      });\n      window.addEventListener(\"test\", null as any as (ev: Event) => void, opts);\n    } catch (e) {\n      // ignore\n    }\n    return v;\n  })());\n\n/* istanbul ignore next */\n/**\n * `key` property is available on KeyboardEvent instances.\n */\nexport const KEYBOARD_EVENT_KEY = /*#__PURE__*/(\n  (TARGET === \"electron\") ||\n  (TARGET === \"evergreen\") ||\n  KeyboardEvent.prototype.hasOwnProperty(\"key\")\n);\n\n/* istanbul ignore next */\n/**\n * `buttons` property is available on MouseEvent instances.\n */\nexport const MOUSE_EVENT_BUTTONS = /*#__PURE__*/(\n  (TARGET === \"electron\") ||\n  (TARGET === \"evergreen\") ||\n  MouseEvent.prototype.hasOwnProperty(\"buttons\")\n);\n\n/* istanbul ignore next */\n/**\n * Touch Events support.\n */\nexport const TOUCH_EVENTS = (\"ontouchstart\" in window);\n\n/* istanbul ignore next */\n/**\n * Pointer Events support.\n */\nexport const POINTER_EVENTS = ((TARGET === \"electron\") || (\"PointerEvent\" in window));\n\n/* istanbul ignore next */\n/**\n * InputDeviceCapabilities support.\n *\n * http://wicg.github.io/InputDeviceCapabilities/\n */\nexport const INPUT_DEVICE_CAPABILITIES = ((TARGET === \"electron\") || \"InputDeviceCapabilities\" in window);\n\n/* istanbul ignore next */\n/**\n * iOS proprietary GestureEvent.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/GestureEvent}\n */\nexport const IOS_GESTURE_EVENT = (TARGET !== \"electron\") && (\"GestureEvent\" in window);\n","export const SVG_NAMESPACE = \"http://www.w3.org/2000/svg\";\nexport const XLINK_NAMESPACE = \"http://www.w3.org/1999/xlink\";\nexport const XML_NAMESPACE = \"http://www.w3.org/XML/1998/namespace\";\n","import { NodeFlags } from \"./node_flags\";\nimport { OpNode } from \"./operations\";\nimport { ComponentHooks } from \"./component\";\n\n/**\n * Operation state.\n */\nexport interface StateNode {\n  /**\n   * Operation.\n   */\n  op: OpNode | string | number;\n  /**\n   * See {@link NodeFlags} for details.\n   */\n  flags: NodeFlags;\n  /**\n   * State for children operations.\n   */\n  children: StateNode | Array<StateNode | null> | null;\n  /**\n   * Current state.\n   */\n  state: Node | ComponentHooks | {} | null;\n}\n\n/**\n * createStateNode creates a {@link StateNode} instance.\n *\n * @param op Operation.\n * @returns {@link StateNode} instance.\n */\nexport const createStateNode = (op: OpNode | string | number): StateNode => (\n  { op, flags: 0, children: null, state: null }\n);\n\n/**\n * getDOMNode retrieves closest DOM node from the node state.\n *\n * @param node State node.\n * @return DOM node.\n */\nexport function getDOMNode(node: StateNode): Node | null {\n  if ((node.flags & (NodeFlags.Element | NodeFlags.Text)) === 0) {\n    const c = node.children;\n    if (c === null) {\n      return null;\n    }\n    return getDOMNode(c as StateNode);\n  }\n  return node.state as Node;\n}\n","import {\n  objectHasOwnProperty, nodeInsertBefore, nodeRemoveChild, elementSetAttribute, nodeCloneNode, elementRemoveAttribute,\n} from \"../core/shortcuts\";\nimport { SVG_NAMESPACE } from \"../dom/namespaces\";\nimport { CSSStyleProps } from \"../dom/style\";\nimport { NodeFlags } from \"./node_flags\";\nimport { AttributeDirective } from \"./attribute_directive\";\nimport { OpNode, ElementData, RecursiveOpChildrenArray, Key, OpData, ContextData, TRACK_BY_KEY } from \"./operations\";\nimport { StateNode, createStateNode, getDOMNode } from \"./state\";\nimport { ElementProtoDescriptor } from \"./element_proto\";\nimport { ComponentDescriptor, ComponentHooks, StatelessComponentDescriptor } from \"./component\";\nimport { getContext, setContext, restoreContext } from \"./context\";\n\nlet _nextNode!: Node | null;\nlet _index!: number;\nlet _deepStateFlags!: NodeFlags;\nlet _dirtyContext!: boolean;\nlet _moveNode = false;\nlet _singleChild = false;\n\nexport function _resetState(): void {\n  _nextNode = null;\n  _deepStateFlags = 0;\n  _dirtyContext = false;\n}\n\nfunction _pushDeepState(): NodeFlags {\n  const s = _deepStateFlags;\n  _deepStateFlags = 0;\n  return s;\n}\n\nfunction _popDeepState(prev: NodeFlags, current: NodeFlags): NodeFlags {\n  const r = current | _deepStateFlags;\n  _deepStateFlags |= prev;\n  return r;\n}\n\nexport function _dirtyCheck(parentElement: Element, stateNode: StateNode): void {\n  const { flags, children } = stateNode;\n  let domNode;\n  let deepState;\n  let i;\n\n  if ((flags & NodeFlags.Component) !== 0) {\n    const hooks = stateNode.state as ComponentHooks;\n    deepState = _pushDeepState();\n    if (\n      ((flags & NodeFlags.Stateful) !== 0) && (\n        ((flags & NodeFlags.Dirty) !== 0) ||\n        (hooks.dirtyCheck !== null && hooks.dirtyCheck(getContext()) === true)\n      )\n    ) {\n      stateNode.children = _update(\n        parentElement,\n        children as StateNode,\n        hooks.update!((stateNode.op as OpNode).data),\n      );\n    } else if ((flags & NodeFlags.DeepStateDirtyCheck) !== 0) {\n      _dirtyCheck(parentElement, children as StateNode);\n    } else {\n      domNode = getDOMNode(stateNode);\n      if (domNode !== null) {\n        if (_moveNode === true) {\n          _moveNode = false;\n          /* istanbul ignore else */\n          if (DEBUG) {\n            parentElement.insertBefore(domNode, _nextNode);\n          } else {\n            nodeInsertBefore.call(parentElement, domNode, _nextNode);\n          }\n        }\n        _nextNode = domNode;\n      }\n    }\n    stateNode.flags = (stateNode.flags & NodeFlags.SelfFlags) | _deepStateFlags;\n    _deepStateFlags |= deepState | ((stateNode.flags & NodeFlags.DeepStateFlags) << NodeFlags.DeepStateShift);\n  } else if ((flags & NodeFlags.DeepStateDirtyCheck) !== 0) {\n    deepState = _pushDeepState();\n    if ((flags & (NodeFlags.Element | NodeFlags.Text)) !== 0) {\n      domNode = stateNode.state as Node;\n      if (_moveNode === true) {\n        _moveNode = false;\n        /* istanbul ignore else */\n        if (DEBUG) {\n          parentElement.insertBefore(domNode, _nextNode);\n        } else {\n          nodeInsertBefore.call(parentElement, domNode, _nextNode);\n        }\n      }\n      if (children !== null) {\n        if ((flags & NodeFlags.MultipleChildren) !== 0) {\n          for (i = 0; i < (children as Array<StateNode | null>).length; i++) {\n            const c = (children as Array<StateNode | null>)[i];\n            if (c !== null) {\n              _dirtyCheck(domNode as Element, c);\n            }\n          }\n        } else {\n          _singleChild = true;\n          _dirtyCheck(domNode as Element, children as StateNode);\n          _singleChild = false;\n        }\n      }\n      _nextNode = domNode;\n    } else if ((flags & NodeFlags.TrackByKey) !== 0) {\n      i = (children as Array<StateNode>).length;\n      while (--i >= 0) {\n        _dirtyCheck(parentElement, (children as Array<StateNode>)[i]);\n      }\n    } else if ((flags & (NodeFlags.Events | NodeFlags.Ref)) !== 0) {\n      _dirtyCheck(parentElement, stateNode.children as StateNode);\n    } else {\n      if (_dirtyContext === true) {\n        stateNode.state = { ...getContext(), ...(stateNode.op as OpNode<ContextData>).data.data };\n      }\n      const prevContext = setContext(stateNode.state as {});\n      _dirtyCheck(parentElement, stateNode.children as StateNode);\n      restoreContext(prevContext);\n    }\n    stateNode.flags = _popDeepState(deepState, stateNode.flags);\n  } else {\n    domNode = getDOMNode(stateNode);\n    if (domNode !== null) {\n      if (_moveNode === true) {\n        _moveNode = false;\n        /* istanbul ignore else */\n        if (DEBUG) {\n          parentElement.insertBefore(domNode, _nextNode);\n        } else {\n          nodeInsertBefore.call(parentElement, domNode, _nextNode);\n        }\n      }\n      _nextNode = domNode;\n    }\n  }\n}\n\nfunction _unmountWalk(stateNode: StateNode): void {\n  const flags = stateNode.flags;\n  let i;\n\n  if ((flags & NodeFlags.DeepStateUnmount) !== 0) {\n    const children = stateNode.children;\n    if (children !== null) {\n      if ((flags & NodeFlags.MultipleChildren) !== 0) {\n        for (i = 0; i < (children as Array<StateNode | null>).length; i++) {\n          const c = (children as Array<StateNode | null>)[i];\n          if (typeof c === \"object\" && c !== null) {\n            _unmountWalk(c);\n          }\n        }\n      } else {\n        _unmountWalk(children as StateNode);\n      }\n    }\n  }\n\n  if ((flags & NodeFlags.Unmount) !== 0) {\n    const hooks = (stateNode.state as ComponentHooks);\n    const unmountHooks = hooks.unmount;\n    if (unmountHooks !== null) {\n      if (typeof unmountHooks === \"function\") {\n        unmountHooks();\n      } else {\n        for (i = 0; i < unmountHooks.length; i++) {\n          unmountHooks[i](true);\n        }\n      }\n    }\n  }\n}\n\nexport function _unmount(parentElement: Element, stateNode: StateNode): void {\n  let n;\n  if ((stateNode.flags & NodeFlags.TrackByKey) !== 0) {\n    _unmountTrackByKeysChildren(parentElement, stateNode.children as StateNode[]);\n  } else {\n    if ((n = getDOMNode(stateNode)) !== null) {\n      /* istanbul ignore else */\n      if (DEBUG) {\n        parentElement.removeChild(n);\n      } else {\n        nodeRemoveChild.call(parentElement, n);\n      }\n    }\n    _unmountWalk(stateNode);\n  }\n}\n\nfunction _unmountTrackByKeysChildren(parentElement: Element, childrenState: StateNode[]): void {\n  let i = 0;\n  if (_singleChild === true) {\n    parentElement.textContent = \"\";\n    while (i < childrenState.length) {\n      _unmountWalk(childrenState[i++]);\n    }\n  } else {\n    while (i < childrenState.length) {\n      _unmount(parentElement, childrenState[i++]);\n    }\n  }\n}\n\nfunction _mountText(\n  parentElement: Element,\n  stateNode: StateNode,\n  op: string | number,\n) {\n  const node = document.createTextNode(op as string);\n  /* istanbul ignore else */\n  if (DEBUG) {\n    parentElement.insertBefore(node, _nextNode);\n  } else {\n    nodeInsertBefore.call(parentElement, node, _nextNode);\n  }\n  _nextNode = node;\n  stateNode.state = node;\n  stateNode.flags = NodeFlags.Text;\n}\n\nfunction _createElement(node: Element | undefined, op: OpNode<ElementData>): Element {\n  const opType = op.type;\n  const svg = (opType.flags & NodeFlags.Svg) !== 0;\n  if (node === void 0) {\n    const tagName = opType.descriptor as string;\n    node = svg ?\n      document.createElementNS(SVG_NAMESPACE, tagName) :\n      document.createElement(tagName);\n  }\n\n  const { className, attrs } = op.data;\n  if (className) {\n    /**\n     * SVGElement.className returns `SVGAnimatedString`\n     */\n    if (svg) {\n      /* istanbul ignore else */\n      if (DEBUG) {\n        (node as SVGElement).setAttribute(\"class\", className);\n      } else {\n        elementSetAttribute.call(node, \"class\", className);\n      }\n    } else {\n      (node as HTMLElement).className = className;\n    }\n  }\n\n  if (attrs !== void 0) {\n    _updateAttrs(node, void 0, attrs);\n  }\n\n  return node;\n}\n\nfunction _mountObject(\n  parentElement: Element,\n  stateNode: StateNode,\n  op: OpNode,\n): void {\n  const opType = op.type;\n  const opData = op.data;\n  const opFlags = opType.flags;\n  let deepStateFlags;\n\n  if ((opFlags & NodeFlags.Component) !== 0) {\n    deepStateFlags = _pushDeepState();\n    let update;\n    if ((opFlags & NodeFlags.Stateful) !== 0) {\n      const hooks: ComponentHooks = stateNode.state = { update: null, dirtyCheck: null, unmount: null };\n      update = hooks.update = (op.type.descriptor as ComponentDescriptor).c(stateNode);\n    } else {\n      update = (op.type.descriptor as StatelessComponentDescriptor).c;\n    }\n    const root = update(opData);\n    /* istanbul ignore else */\n    if (DEBUG) {\n      if (root !== null && typeof root === \"object\" && root.type === TRACK_BY_KEY) {\n        throw new Error(`Invalid root OpNode, Component can't have TrackByKey as a child`);\n      }\n    }\n    stateNode.children = _mount(parentElement, root);\n    stateNode.flags = (stateNode.flags & NodeFlags.SelfFlags) | opFlags | _deepStateFlags;\n    _deepStateFlags |= deepStateFlags | ((stateNode.flags & NodeFlags.DeepStateFlags) << NodeFlags.DeepStateShift);\n  } else {\n    deepStateFlags = _pushDeepState();\n    if ((opFlags & NodeFlags.Element) !== 0) {\n      let node: Element | undefined;\n      const descriptor = opType.descriptor;\n      if ((opFlags & NodeFlags.ElementProto) !== 0) {\n        node = (descriptor as ElementProtoDescriptor).node as Element;\n        if (node === null) {\n          (descriptor as ElementProtoDescriptor).node = node = _createElement(\n            void 0,\n            (descriptor as ElementProtoDescriptor).proto,\n          );\n        }\n        /* istanbul ignore else */\n        if (DEBUG) {\n          node = node.cloneNode(false) as Element;\n        } else {\n          node = nodeCloneNode.call(node, false) as Element;\n        }\n      }\n      node = _createElement(node, op);\n\n      let childrenState: StateNode | Array<StateNode | null> | null = null;\n      const children = opData.children;\n      const nextNode = _nextNode;\n      _nextNode = null;\n      if (children !== null) {\n        if (children instanceof Array) {\n          stateNode.flags |= NodeFlags.MultipleChildren;\n          _mountChildren(node, children, childrenState = []);\n        } else {\n          childrenState = _mount(node, children);\n        }\n      }\n      /* istanbul ignore else */\n      if (DEBUG) {\n        parentElement.insertBefore(node, nextNode);\n      } else {\n        nodeInsertBefore.call(parentElement, node, nextNode);\n      }\n      stateNode.children = childrenState;\n      stateNode.state = node;\n      _nextNode = node;\n    } else if ((opFlags & (NodeFlags.Events | NodeFlags.Ref | NodeFlags.Context)) !== 0) {\n      if ((opFlags & NodeFlags.Context) !== 0) {\n        const prevContext = setContext(\n          stateNode.state = { ...getContext(), ...(opData as OpData<ContextData>).data },\n        );\n        stateNode.children = _mount(parentElement, (opData as OpData<ContextData>).child);\n        restoreContext(prevContext);\n      } else {\n        if ((opFlags & NodeFlags.Ref) !== 0) {\n          opData.data.v = stateNode;\n        }\n        stateNode.children = _mount(parentElement, opData.child);\n      }\n    } else { // ((opFlags & NodeFlags.TrackByKey) !== 0)\n      let i = (opData as Key<any, OpNode>[]).length;\n      const result = Array(i);\n      stateNode.children = result;\n      while (--i >= 0) {\n        result[i] = _mount(parentElement, (opData as Key<any, OpNode>[])[i].v);\n      }\n    }\n    stateNode.flags = _popDeepState(deepStateFlags, stateNode.flags | opFlags);\n  }\n}\n\nfunction _mountChildren(\n  parentElement: Element,\n  children: RecursiveOpChildrenArray,\n  result: Array<StateNode | null>,\n): void {\n  let j = children.length;\n  while (--j >= 0) {\n    const c = children[j];\n    if (c instanceof Array) {\n      _mountChildren(parentElement, c, result);\n    } else {\n      result.push(_mount(parentElement, c));\n    }\n  }\n}\n\nexport function _mount(\n  parentElement: Element,\n  op: OpNode | string | number | null,\n): StateNode | null {\n  if (op !== null) {\n    const stateNode = createStateNode(op);\n    if (typeof op === \"object\") {\n      _mountObject(parentElement, stateNode, op);\n    } else {\n      _mountText(parentElement, stateNode, op);\n    }\n    return stateNode;\n  }\n  return null;\n}\n\n/**\n * _update updates a stateNode with a next operation.\n *\n * @param parentElement - Parent DOM Element\n * @param stateNode - State Node\n * @param nextOp - Next Operation\n * @returns State Node\n */\nexport function _update(\n  parentElement: Element,\n  stateNode: StateNode | null,\n  nextOp: OpNode | string | number | null,\n): StateNode | null {\n  if (nextOp === null) {\n    if (stateNode !== null) {\n      _unmount(parentElement, stateNode);\n    }\n    return null;\n  }\n  if (stateNode === null) {\n    return _mount(parentElement, nextOp);\n  }\n  const prevOp = stateNode.op;\n  if (prevOp === nextOp) {\n    _dirtyCheck(parentElement, stateNode);\n    return stateNode;\n  }\n  if (\n    (typeof prevOp !== typeof nextOp) ||\n    (typeof prevOp === \"object\" && prevOp.type !== (nextOp as OpNode).type)\n  ) {\n    // prevOp can't be === null (stateNode === null)\n    _unmount(parentElement, stateNode);\n    return _mount(parentElement, nextOp);\n  }\n  stateNode.op = nextOp;\n\n  const stateFlags = stateNode.flags;\n  const state = stateNode.state;\n  let deepStateFlags;\n\n  if ((stateFlags & NodeFlags.Text) !== 0) {\n    (state as Node).nodeValue = nextOp as string;\n  } else {\n    const stateChildren = stateNode.children;\n    const prevData = (prevOp as OpNode).data;\n    const nextData = (nextOp as OpNode).data;\n    if ((stateFlags & NodeFlags.Component) !== 0) {\n      const descriptor = ((nextOp as OpNode).type.descriptor as StatelessComponentDescriptor | ComponentDescriptor);\n      if (\n        ((stateFlags & NodeFlags.Dirty) !== 0) ||\n        (\n          (prevData !== nextData) &&\n          (descriptor.shouldUpdate === void 0 || descriptor.shouldUpdate(prevData, nextData) === true)\n        )\n      ) {\n        deepStateFlags = _pushDeepState();\n        const root = ((stateFlags & NodeFlags.Stateful) !== 0) ?\n          (stateNode.state as ComponentHooks).update!(nextData) :\n          (descriptor as StatelessComponentDescriptor).c(nextData);\n        /* istanbul ignore else */\n        if (DEBUG) {\n          if (root !== null && typeof root === \"object\" && root.type === TRACK_BY_KEY) {\n            throw new Error(`Invalid root OpNode, Component can't have TrackByKey as a child`);\n          }\n        }\n\n        stateNode.children = _update(\n          parentElement,\n          stateChildren as StateNode,\n          root,\n        );\n        stateNode.flags = (stateNode.flags & NodeFlags.SelfFlags) | _deepStateFlags;\n        _deepStateFlags |= deepStateFlags | ((stateNode.flags & NodeFlags.DeepStateFlags) << NodeFlags.DeepStateShift);\n      } else {\n        _dirtyCheck(parentElement, stateNode);\n      }\n    } else {\n      deepStateFlags = _pushDeepState();\n      if ((stateFlags & NodeFlags.Element) !== 0) {\n        if (_moveNode === true) {\n          _moveNode = false;\n          /* istanbul ignore else */\n          if (DEBUG) {\n            parentElement.insertBefore(state as Node, _nextNode);\n          } else {\n            nodeInsertBefore.call(parentElement, state, _nextNode);\n          }\n        }\n\n        let nextClassName = nextData.className;\n        if (prevData.className !== nextClassName) {\n          if (nextClassName === void 0) {\n            nextClassName = \"\";\n          }\n          if ((stateFlags & NodeFlags.Svg) !== 0) {\n            /* istanbul ignore else */\n            if (DEBUG) {\n              (state as Element).setAttribute(\"class\", nextClassName);\n            } else {\n              elementSetAttribute.call(state, \"class\", nextClassName);\n            }\n          } else {\n            (state as Element).className = nextClassName;\n          }\n        }\n\n        if (prevData.attrs !== nextData.attrs) {\n          _updateAttrs(state as Element, prevData.attrs, nextData.attrs);\n        }\n\n        const nextChildren = nextData.children;\n        if (prevData.children !== nextChildren) {\n          _nextNode = null;\n          /* istanbul ignore else */\n          if (DEBUG) {\n            if ((stateFlags & NodeFlags.MultipleChildren) !== 0) {\n              if (nextChildren !== null && nextChildren instanceof Array) {\n                checkElementChildrenShape(\n                  prevData.children as RecursiveOpChildrenArray,\n                  nextChildren as RecursiveOpChildrenArray,\n                );\n              } else {\n                throw new Error(\"Invalid element, children array has a dynamic shape\");\n              }\n            } else {\n              if (nextChildren !== null && nextChildren instanceof Array) {\n                throw new Error(\"Invalid element, children array has a dynamic shape\");\n              }\n            }\n          }\n          if ((stateFlags & NodeFlags.MultipleChildren) !== 0) {\n            _index = 0;\n            _updateChildren(state as Element, stateChildren as Array<StateNode | null>, nextChildren);\n          } else {\n            _singleChild = true;\n            stateNode.children = stateChildren === null ?\n              _mount(state as Element, nextChildren) :\n              _update(state as Element, stateChildren as StateNode, nextChildren);\n            _singleChild = false;\n          }\n        }\n\n        _nextNode = state as Node;\n      } else if ((stateFlags & NodeFlags.TrackByKey) !== 0) {\n        updateChildrenTrackByKeys(parentElement, stateNode, prevData, nextData);\n      } else if ((stateFlags & (NodeFlags.Events | NodeFlags.Ref)) !== 0) {\n        stateNode.children = _update(parentElement, stateChildren as StateNode, nextData.child);\n      } else { // if ((stateFlags & NodeFlags.Context) !== 0) {\n        const dirtyContext = _dirtyContext;\n        if (prevData.data !== nextData.data || _dirtyContext === true) {\n          stateNode.state = { ...getContext(), ...nextData.data };\n          _dirtyContext = true;\n        }\n        const context = setContext(stateNode.state as {});\n        _update(parentElement, stateChildren as StateNode, nextData.child);\n        restoreContext(context);\n        _dirtyContext = dirtyContext;\n      }\n      stateNode.flags = _popDeepState(deepStateFlags, stateNode.flags);\n    }\n  }\n\n  return stateNode;\n}\n\n/**\n * Update children list with a static shape.\n *\n * @param parentElement - Parent DOM Element\n * @param a - Stateful nodes\n * @param b - Next children operations\n */\nfunction _updateChildren(\n  parentElement: Element,\n  a: Array<StateNode | null>,\n  b: RecursiveOpChildrenArray,\n): void {\n  let j = b.length;\n  while (--j >= 0) {\n    let i = _index;\n    const nextOp = b[j];\n    if (nextOp instanceof Array) {\n      _updateChildren(parentElement, a, nextOp);\n    } else {\n      const stateNode = a[i];\n      a[i] = (stateNode === null) ?\n        _mount(parentElement, nextOp) :\n        _update(parentElement, stateNode, nextOp);\n      _index = ++i;\n    }\n  }\n}\n\n/**\n * Update children list with track by key algorithm.\n *\n * High-level overview of the algorithm that is implemented in this function (slightly outdated, but the key ideas are\n * the same).\n *\n * This algorithm finds a minimum[1] number of DOM operations. It works in several steps:\n *\n * 1. Find common suffix and prefix.\n *\n * This optimization technique is searching for nodes with identical keys by simultaneously iterating over nodes in the\n * old children list `A` and new children list `B` from both sides:\n *\n *  A: -> [a b c d] <-\n *  B: -> [a b d] <-\n *\n * Here we can skip nodes \"a\" and \"b\" at the begininng, and node \"d\" at the end.\n *\n *  A: -> [c] <-\n *  B: -> [] <-\n *\n * Here it will check if the size of one of the list is equal to zero. When length of the old children list is zero,\n * it will insert all remaining nodes from the new list, and when length of the new children list is zero, it will\n * remove all remaining nodes from the old list.\n *\n * When algorithm can't find a solution with this simple optimization technique, it will go to the next step of the\n * algorithm. For example:\n *\n *  A: -> [a b c d e f g] <-\n *  B: -> [a c b h f e g] <-\n *\n * Nodes \"a\" and \"g\" at the edges are the same, skipping them.\n *\n *  A: -> [b c d e f] <-\n *  B: -> [c b h f e] <-\n *\n * Here we are stuck, so we need to switch to the next step.\n *\n * 2. Look for removed and inserted nodes, and simultaneously check if one of the nodes is moved.\n *\n * First we create an array `P` with the length of the new children list and assign to each position value `-1`, it has\n * a meaning of a new node that should be inserted. Later we will assign node positions in the old children list to this\n * array.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *  P: [. . . . .] // . == -1\n *\n * Then we need to build an index `I` that maps keys with node positions of the remaining nodes from the new children\n * list.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *  P: [. . . . .] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1,\n *    h: 2,\n *    f: 3,\n *    e: 4,\n *  }\n *  last = 0\n *\n * With this index, we start to iterate over the remaining nodes from the old children list and check if we can find a\n * node with the same key in the index. If we can't find any node, it means that it should be removed, otherwise we\n * assign position of the node in the old children list to the positions array.\n *\n *  A: [b c d e f]\n *      ^\n *  B: [c b h f e]\n *  P: [. 0 . . .] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1, <-\n *    h: 2,\n *    f: 3,\n *    e: 4,\n *  }\n *  last = 1\n *\n * When we assigning positions to the positions array, we also keep a position of the last seen node in the new children\n * list, if the last seen position is larger than current position of the node at the new list, then we are switching\n * `moved` flag to `true`.\n *\n *  A: [b c d e f]\n *        ^\n *  B: [c b h f e]\n *  P: [1 0 . . .] // . == -1\n *  I: {\n *    c: 0, <-\n *    b: 1,\n *    h: 2,\n *    f: 3,\n *    e: 4,\n *  }\n *  last = 1 // last > 0; moved = true\n *\n * The last position `1` is larger than current position of the node at the new list `0`, switching `moved` flag to\n * `true`.\n *\n *  A: [b c d e f]\n *          ^\n *  B: [c b h f e]\n *  P: [1 0 . . .] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1,\n *    h: 2,\n *    f: 3,\n *    e: 4,\n *  }\n *  moved = true\n *\n * Node with key \"d\" doesn't exist in the index, removing node.\n *\n *  A: [b c d e f]\n *            ^\n *  B: [c b h f e]\n *  P: [1 0 . . 3] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1,\n *    h: 2,\n *    f: 3,\n *    e: 4, <-\n *  }\n *  moved = true\n *\n * Assign position for `e`.\n *\n *  A: [b c d e f]\n *              ^\n *  B: [c b h f e]\n *  P: [1 0 . 4 3] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1,\n *    h: 2,\n *    f: 3, <-\n *    e: 4,\n *  }\n *  moved = true\n *\n * Assign position for 'f'.\n *\n * At this point we are checking if `moved` flag is on, or if the length of the old children list minus the number of\n * removed nodes isn't equal to the length of the new children list. If any of this conditions is true, then we are\n * going to the next step.\n *\n * 3. Find minimum number of moves if `moved` flag is on, or insert new nodes if the length is changed.\n *\n * When `moved` flag is on, we need to find the\n * [longest increasing subsequence](http://en.wikipedia.org/wiki/Longest_increasing_subsequence) in the positions array,\n * and move all nodes that doesn't belong to this subsequence.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *  moved = true\n *\n * Now we just need to simultaneously iterate over the new children list and LIS from the end and check if the current\n * position is equal to a value from LIS.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *              ^  // new_pos == 4\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *              ^  // new_pos == 4\n *  moved = true\n *\n * Node \"e\" stays at the same place.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *            ^    // new_pos == 3\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *            ^    // new_pos != 1\n *  moved = true\n *\n * Node \"f\" is moved, move it before the next node \"e\".\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *          ^      // new_pos == 2\n *  P: [1 0 . 4 3] // . == -1\n *          ^      // old_pos == -1\n *  LIS:     [1 4]\n *            ^\n *  moved = true\n *\n * Node \"h\" has a `-1` value in the positions array, insert new node \"h\".\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *        ^        // new_pos == 1\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *            ^    // new_pos == 1\n *  moved = true\n *\n * Node \"b\" stays at the same place.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *      ^          // new_pos == 0\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *          ^      // new_pos != undefined\n *  moved = true\n *\n * Node \"c\" is moved, move it before the next node \"b\".\n *\n * When moved flag is off, we don't need to find LIS, and we just iterate over the new children list and check its\n * current position in the positions array, if it is `-1`, then we insert new node.\n *\n * [1] Actually it is almost minimum number of dom ops, when node is removed and another one is inserted at the same\n * place, instead of insert and remove dom ops, we can use one replace op. It will make everything even more\n * complicated, and other use cases will be slower, so I don't think that it is worth to use replace here.\n *\n * @param parentElement Parent DOM element.\n * @param stateNode TrackByKey state.\n * @param a Previous operations.\n * @param b Next operations.\n */\nfunction updateChildrenTrackByKeys(\n  parentElement: Element,\n  stateNode: StateNode,\n  a: Key<any, OpNode>[],\n  b: Key<any, OpNode>[],\n): void {\n  const childrenState = stateNode.children as StateNode[];\n  const result = Array(b.length);\n  stateNode.children = result;\n  let i: number;\n\n  if (b.length === 0) {\n    if (childrenState.length > 0) {\n      _unmountTrackByKeysChildren(parentElement, childrenState);\n    }\n  } else if (childrenState.length === 0) {\n    i = b.length;\n    while (--i >= 0) {\n      result[i] = _mount(parentElement, b[i].v);\n    }\n  } else {\n    let aStartNode = a[0];\n    let bStartNode = b[0];\n    let aEnd = a.length - 1;\n    let bEnd = b.length - 1;\n    let aEndNode = a[aEnd];\n    let bEndNode = b[bEnd];\n    let start = 0;\n    let j: number | undefined;\n    let sNode: StateNode | null;\n\n    // Step 1\n    outer: while (true) {\n      // Sync nodes with the same key at the end.\n      while (aEndNode.k === bEndNode.k) {\n        result[bEnd] = _update(parentElement, childrenState[aEnd--], bEndNode.v);\n        if (start > --bEnd || start > aEnd) {\n          break outer;\n        }\n        aEndNode = a[aEnd];\n        bEndNode = b[bEnd];\n      }\n\n      // Sync nodes with the same key at the beginning.\n      while (aStartNode.k === bStartNode.k) {\n        // delayed update (all updates should be performed from right-to-left)\n        if (++start > aEnd || start > bEnd) {\n          break outer;\n        }\n        aStartNode = a[start];\n        bStartNode = b[start];\n      }\n\n      break;\n    }\n\n    if (start > aEnd) {\n      // All nodes from a are synced, insert the rest from b.\n      while (bEnd >= start) {\n        result[bEnd] = _mount(parentElement, b[bEnd--].v);\n      }\n    } else if (start > bEnd) {\n      // All nodes from b are synced, remove the rest from a.\n      i = start;\n      do {\n        sNode = childrenState[i++];\n        _unmount(parentElement, sNode);\n      } while (i <= aEnd);\n    } else { // Step 2\n      const aLength = aEnd - start + 1;\n      const bLength = bEnd - start + 1;\n      const nullableState = childrenState as Array<StateNode | null>;\n\n      // Mark all nodes as inserted.\n      const sources = Array(bLength);\n      for (i = 0; i < bLength; ++i) {\n        sources[i] = -1;\n      }\n\n      // When pos === 1000000, it means that one of the nodes in the wrong position.\n      let pos = 0;\n      let updated = 0;\n\n      const keyIndex = new Map<any, number>();\n      // Build an index that maps keys to their locations in the new children list.\n      for (j = start; j <= bEnd; ++j) {\n        keyIndex.set(b[j].k, j);\n      }\n\n      for (i = start; i <= aEnd && updated < bLength; ++i) {\n        j = keyIndex.get(a[i].k);\n        if (j !== void 0) {\n          pos = (pos > j) ? 1000000 : j;\n          ++updated;\n          sources[j - start] = i;\n          result[j] = childrenState[i];\n          nullableState[i] = null;\n        }\n      }\n\n      if (aLength === a.length && updated === 0) {\n        // Noone is synced.\n        _unmountTrackByKeysChildren(parentElement, childrenState);\n        while (bEnd >= 0) {\n          result[bEnd] = _mount(parentElement, b[bEnd--].v);\n        }\n      } else {\n        // Step 3\n        for (i = start; i <= aEnd; i++) {\n          sNode = childrenState[i];\n          if (sNode !== null) {\n            _unmount(parentElement, sNode);\n          }\n        }\n\n        let opNode;\n        if (pos === 1000000) {\n          const seq = lis(sources);\n          j = seq.length - 1;\n          i = bLength;\n          while (--i >= 0) {\n            pos = start + i;\n            opNode = b[pos].v;\n            if (sources[i] === -1) {\n              result[pos] = _mount(parentElement, opNode);\n            } else {\n              sNode = result[pos];\n              if (j < 0 || i !== seq[j]) {\n                _moveNode = true;\n              } else {\n                --j;\n              }\n              result[pos] = _update(parentElement, sNode, opNode);\n              _moveNode = false;\n            }\n          }\n        } else {\n          i = bLength;\n          while (--i >= 0) {\n            pos = start + i;\n            opNode = b[pos].v;\n            result[pos] = (sources[i] === -1) ?\n              _mount(parentElement, opNode) :\n              _update(parentElement, result[pos], opNode);\n          }\n        }\n      }\n    }\n\n    // update nodes from Step 1 (prefix only)\n    while (--start >= 0) {\n      result[start] = _update(parentElement, childrenState[start], b[start].v);\n    }\n  }\n}\n\n/**\n * Slightly modified Longest Increased Subsequence algorithm, it ignores items that have -1 value, they're representing\n * new items.\n *\n * {@link http://en.wikipedia.org/wiki/Longest_increasing_subsequence}\n *\n * @param a - Array of numbers\n * @returns Longest increasing subsequence\n * @noinline\n */\nfunction lis(a: number[]): number[] {\n  const p = a.slice();\n  const result: number[] = [];\n  result[0] = 0;\n  let n = 0;\n  let u: number;\n  let v: number;\n  let j: number;\n\n  for (let i = 0; i < a.length; ++i) {\n    const k = a[i];\n    if (k === -1) {\n      continue;\n    }\n\n    j = result[n];\n    if (a[j] < k) {\n      p[i] = j;\n      result[++n] = i;\n      continue;\n    }\n\n    u = 0;\n    v = n;\n\n    while (u < v) {\n      j = ((u + v) / 2) | 0;\n      if (a[result[j]] < k) {\n        u = j + 1;\n      } else {\n        v = j;\n      }\n    }\n\n    if (k < a[result[u]]) {\n      if (u > 0) {\n        p[i] = result[u - 1];\n      }\n      result[u] = i;\n    }\n  }\n\n  v = result[n];\n\n  while (n >= 0) {\n    result[n--] = v;\n    v = p[v];\n  }\n\n  return result;\n}\n\n/**\n * Update DOM styles.\n *\n * @param element - HTML or SVG Element\n * @param a - Prev styles\n * @param b - Next styles\n */\nfunction updateStyle(\n  element: HTMLElement | SVGElement,\n  a: CSSStyleProps | undefined,\n  b: CSSStyleProps | undefined,\n): void {\n  const style = element.style;\n  let key: string;\n  let bValue;\n\n  if (a === void 0) {\n    // a is empty, insert all styles from b.\n    for (key in b!) {\n      bValue = (b as { [key: string]: string })[key];\n      if (bValue !== void 0) {\n        style.setProperty(key, bValue);\n      }\n    }\n  } else if (b === void 0) {\n    // b is empty, remove all styles from a\n    for (key in a) {\n      style.removeProperty(key);\n    }\n  } else {\n    let matchCount = 0;\n    for (key in a) {\n      bValue = void 0;\n      if (objectHasOwnProperty.call(b, key) === true) {\n        bValue = b[key];\n        matchCount++;\n      }\n      const aValue = a[key];\n      if (aValue !== bValue) {\n        if (bValue !== void 0) {\n          style.setProperty(key, bValue);\n        } else {\n          style.removeProperty(key);\n        }\n      }\n    }\n\n    const keys = Object.keys(b);\n    for (let i = 0; matchCount < keys.length && i < keys.length; ++i) {\n      key = keys[i];\n      if (objectHasOwnProperty.call(a, key) === false) {\n        style.setProperty(key, b[key]);\n        ++matchCount;\n      }\n    }\n  }\n}\n\n/**\n * Update DOM attribute.\n *\n * @param element - DOM Element\n * @param key - Attribute name\n * @param prev - Previous value\n * @param next - Next value\n */\nfunction _updateAttr(\n  element: Element,\n  key: string,\n  prev: string | number | boolean | AttributeDirective<any> | CSSStyleProps | undefined,\n  next: string | number | boolean | AttributeDirective<any> | CSSStyleProps | undefined,\n): void {\n  if (key !== \"style\") {\n    if (typeof next === \"object\") {\n      next.u(\n        element,\n        key,\n        prev === void 0 ? void 0 : (prev as AttributeDirective<any>).v,\n        next.v,\n      );\n    } else if (prev !== next) {\n      if (typeof prev === \"object\") {\n        prev.u(\n          element,\n          key,\n          (prev as AttributeDirective<any>).v,\n          void 0,\n        );\n      } else {\n        if (typeof next === \"boolean\") {\n          next = next ? \"\" : void 0;\n        }\n        if (next === void 0) {\n          /* istanbul ignore else */\n          if (DEBUG) {\n            element.removeAttribute(key);\n          } else {\n            elementRemoveAttribute.call(element, key);\n          }\n        } else {\n          /* istanbul ignore else */\n          if (DEBUG) {\n            element.setAttribute(key, next as string);\n          } else {\n            elementSetAttribute.call(element, key, next);\n          }\n        }\n      }\n    }\n  } else if (prev !== next) {\n    updateStyle(element as HTMLElement, prev as CSSStyleProps, next as CSSStyleProps);\n  }\n}\n\n/**\n * Update DOM attributes.\n *\n * @param element - DOM element\n * @param a - Prev DOM attributes\n * @param b - Next DOM attributes\n */\nfunction _updateAttrs(\n  element: Element,\n  a: { [key: string]: string | number | boolean | AttributeDirective<any> | CSSStyleProps | undefined } | undefined,\n  b: { [key: string]: string | number | boolean | AttributeDirective<any> | CSSStyleProps | undefined } | undefined,\n): void {\n  let key: string;\n\n  if (a === void 0) {\n    // a is empty, insert all attributes from b.\n    for (key in b!) {\n      _updateAttr(element, key, void 0, b![key]);\n    }\n  } else if (b === void 0) {\n    // b is empty, remove all attributes from a.\n    for (key in a) {\n      _updateAttr(element, key, a[key], void 0);\n    }\n  } else {\n    let matchCount = 0;\n    for (key in a) {\n      let bValue: string | number | boolean | AttributeDirective<any> | CSSStyleProps | undefined = void 0;\n      if (objectHasOwnProperty.call(b, key) === true) {\n        bValue = b[key];\n        matchCount++;\n      }\n      _updateAttr(element, key, a[key], bValue);\n    }\n\n    const keys = Object.keys(b);\n    for (let i = 0; matchCount < keys.length && i < keys.length; ++i) {\n      key = keys[i];\n      if (objectHasOwnProperty.call(a, key) === false) {\n        _updateAttr(element, key, void 0, b[key]);\n        ++matchCount;\n      }\n    }\n  }\n}\n\nfunction checkElementChildrenShape(a: RecursiveOpChildrenArray, b: RecursiveOpChildrenArray) {\n  if (a.length !== b.length) {\n    throw new Error(`Invalid element, children array has a dynamic shape`);\n  }\n  for (let i = 0; i < a.length; i++) {\n    const ai = a[i];\n    const bi = b[i];\n    if (ai instanceof Array) {\n      if (!(bi instanceof Array)) {\n        throw new Error(`Invalid element, children array has a dynamic shape`);\n      }\n      checkElementChildrenShape(ai, bi);\n    } else if (bi instanceof Array) {\n      throw new Error(`Invalid element, children array has a dynamic shape`);\n    }\n  }\n}\n","import { IOS_GESTURE_EVENT } from \"../core/feature_detection\";\nimport { NOOP } from \"../core/noop\";\nimport { unorderedArrayDelete } from \"../core/array\";\nimport { checkNestingViolations } from \"../debug/html_nesting_rules\";\nimport { OpNode } from \"./operations\";\nimport { StateNode } from \"./state\";\nimport { _mount, _update, _unmount, _dirtyCheck, _resetState } from \"./reconciler\";\n\n/**\n * Root.\n */\nexport interface Root {\n  /**\n   * Container element.\n   */\n  container: Element;\n  /**\n   * Next virtual DOM node.\n   */\n  next: OpNode | string | number | null | undefined;\n  /**\n   * Current virtual DOM node.\n   */\n  state: StateNode | null;\n}\n\n/**\n * Root nodes.\n */\nexport const ROOTS = [] as Root[];\n\n/**\n * Find root node of a container.\n *\n * @param container - DOM Node that contains root node\n * @returns root node or undefined when root node doesn't exist\n */\nexport const findRoot = (container: Element) => ROOTS.find((r) => r.container === container);\n\n/**\n * Performs a dirty checking.\n */\nexport function dirtyCheck() {\n  for (let i = 0; i < ROOTS.length; ++i) {\n    const root = ROOTS[i];\n    const { container, state, next } = root;\n    root.next = void 0;\n    _resetState();\n\n    if (next) {\n      if (state) {\n        root.state = _update(container, state, next);\n      } else {\n        root.state = _mount(container, next);\n        /* istanbul ignore if */\n        /**\n         * Fix for the Mouse Event bubbling on iOS devices.\n         *\n         * #quirks\n         *\n         * http://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\n         */\n        if (TARGET === \"browser\" && IOS_GESTURE_EVENT) {\n          (container as HTMLElement).onclick = NOOP;\n        }\n      }\n    } else if (state) {\n      if (next === null) {\n        _unmount(container, state);\n        unorderedArrayDelete(ROOTS, root);\n        --i;\n      } else {\n        _dirtyCheck(container, state);\n      }\n    }\n\n    /* istanbul ignore else */\n    if (DEBUG) {\n      if (root.state) {\n        checkNestingViolations(container, root.state);\n      }\n    }\n  }\n}\n","import { sMT, rAF } from \"ivi-scheduler\";\nimport { runRepeatableTasks, RepeatableTaskList } from \"../core/repeatable_task_list\";\nimport { NOOP } from \"../core/noop\";\nimport { catchError } from \"../core/error\";\nimport { printWarn } from \"../debug/print\";\nimport { NodeFlags } from \"../vdom/node_flags\";\nimport { OpNode } from \"../vdom/operations\";\nimport { StateNode } from \"../vdom/state\";\nimport { ROOTS, findRoot, dirtyCheck } from \"../vdom/root\";\n\n/**\n * Update flags.\n */\nexport const enum UpdateFlags {\n  /**\n   * Forces synchronous update.\n   */\n  RequestSyncUpdate = 1,\n}\n\n/**\n * Scheduler flags.\n */\nconst enum SchedulerFlags {\n  /**\n   * Running inside of a scheduler context.\n   */\n  Running = 1,\n  /**\n   * Scheduler tick is pending for an execution.\n   */\n  TickPending = 1 << 1,\n  /**\n   * Frame update is pending for an execution.\n   */\n  NextFramePending = 1 << 2,\n  /**\n   * Sync Frame update is pending for an execution.\n   */\n  NextSyncFramePending = 1 << 3,\n  /**\n   * Running inside of a frame update context.\n   */\n  UpdatingFrame = 1 << 4,\n  /**\n   * Dirty checking is pending for an execution.\n   */\n  DirtyCheckPending = 1 << 5,\n}\n\nconst enum SchedulerDebugFlags {\n  DirtyCheckingFinished = 1,\n  MutationsFinished = 1 << 1,\n  LayoutFinished = 1 << 2,\n}\n\n/**\n * Task list.\n */\ninterface TaskList { v: Array<() => void>; }\n\n/**\n * createTaskList creates a task list.\n *\n * @returns task list\n */\nconst createTaskList = () => ({ v: [] }) as TaskList;\n\n/**\n * Execute tasks from the `TaskList`.\n *\n * @param t - Task list\n */\nfunction run(t: TaskList) {\n  while (t.v.length > 0) {\n    const tasks = t.v;\n    let i = 0;\n    t.v = [];\n    do {\n      tasks[i++]();\n    } while (i < tasks.length);\n  }\n}\n\nlet _flags: SchedulerFlags = 0;\nlet _debugFlags: SchedulerDebugFlags;\n/** istanbul ignore else */\nif (DEBUG) {\n  _debugFlags = 0;\n}\nlet _clock = 1;\nconst _microtasks = createTaskList();\nconst _mutationEffects = createTaskList();\nconst _domLayoutEffects = createTaskList();\nconst _beforeMutations = [] as RepeatableTaskList;\nconst _afterMutations = [] as RepeatableTaskList;\nlet _frameStartTime = 0;\n\n/**\n * withSchedulerTick wraps `inner` function into a scheduler context execution.\n *\n * @param inner - Inner function.\n * @returns function that will be executed in a scheduler context.\n */\nexport const withSchedulerTick = <T extends any[]>(inner: (...args: T) => void) => (\n  catchError(function () {\n    _flags |= SchedulerFlags.Running;\n    inner.apply(void 0, arguments);\n    run(_microtasks);\n    _flags &= ~(SchedulerFlags.Running | SchedulerFlags.TickPending);\n    ++_clock;\n  })\n) as (...args: T) => void;\n\nconst runMicrotasks = withSchedulerTick(NOOP);\n\n/**\n * clock returns monotonically increasing clock value.\n *\n * @returns current clock value.\n */\nexport const clock = () => _clock;\n\n/**\n * scheduleMicrotask adds task to the microtask queue.\n *\n * @param task - Microtask.\n */\nexport function scheduleMicrotask(task: () => void): void {\n  _microtasks.v.push(task);\n  if ((_flags & (SchedulerFlags.Running | SchedulerFlags.TickPending)) === 0) {\n    _flags |= SchedulerFlags.TickPending;\n    sMT(runMicrotasks);\n  }\n}\n\n/**\n * beforeMutations adds a hook that will be executed before DOM mutations.\n *\n * @param fn - hook.\n */\nexport function beforeMutations(fn: () => boolean | void): void {\n  _beforeMutations.push(fn);\n}\n\n/**\n * afterMutations adds a hook that will be executed after DOM mutations.\n *\n * @param fn - hook.\n */\nexport function afterMutations(fn: () => boolean | void): void {\n  _afterMutations.push(fn);\n}\n\n/**\n * frameStartTime returns current frame start time.\n *\n * @returns current frame start time.\n */\nexport const frameStartTime = () => _frameStartTime;\n\n/**\n * withNextFrame wraps `inner` function into a scheduler frame update context.\n *\n * @param inner - Inner function.\n * @returns function that will be executed in a frame update context.\n */\nexport const withNextFrame = (inner: (time?: number) => void) => (\n  withSchedulerTick((time?: number) => {\n    _flags |= SchedulerFlags.UpdatingFrame;\n    inner(time);\n\n    if ((_flags & SchedulerFlags.NextFramePending) !== 0) {\n      _frameStartTime = time === void 0 ? performance.now() : time;\n\n      runRepeatableTasks(_beforeMutations);\n      if ((_flags & SchedulerFlags.DirtyCheckPending) !== 0) {\n        dirtyCheck();\n      }\n      /** istanbul ignore else */\n      if (DEBUG) {\n        _debugFlags |= SchedulerDebugFlags.DirtyCheckingFinished;\n      }\n      run(_mutationEffects);\n      /** istanbul ignore else */\n      if (DEBUG) {\n        _debugFlags |= SchedulerDebugFlags.MutationsFinished;\n      }\n      runRepeatableTasks(_afterMutations);\n      run(_domLayoutEffects);\n      /** istanbul ignore else */\n      if (DEBUG) {\n        _debugFlags |= SchedulerDebugFlags.LayoutFinished;\n      }\n    }\n    _flags &= ~(\n      SchedulerFlags.UpdatingFrame |\n      SchedulerFlags.NextFramePending |\n      SchedulerFlags.NextSyncFramePending |\n      SchedulerFlags.DirtyCheckPending\n    );\n    /** istanbul ignore else */\n    if (DEBUG) {\n      _debugFlags &= ~(\n        SchedulerDebugFlags.DirtyCheckingFinished |\n        SchedulerDebugFlags.MutationsFinished |\n        SchedulerDebugFlags.LayoutFinished\n      );\n    }\n  })\n);\n\n/**\n * Frame tasks scheduler event handler.\n *\n * @param t Current time.\n */\nconst _handleNextFrame = withNextFrame(NOOP);\n\n/**\n * requestNextFrame requests an update for next frame.\n */\nexport function requestNextFrame(flags?: UpdateFlags): void {\n  if (\n    (flags !== void 0) &&\n    ((flags & UpdateFlags.RequestSyncUpdate) !== 0) &&\n    ((_flags & SchedulerFlags.NextSyncFramePending) === 0)\n  ) {\n    _flags |= SchedulerFlags.NextFramePending | SchedulerFlags.NextSyncFramePending;\n    if ((_flags & SchedulerFlags.UpdatingFrame) === 0) {\n      scheduleMicrotask(_handleNextFrame);\n    }\n  } else if ((_flags & SchedulerFlags.NextFramePending) === 0) {\n    _flags |= SchedulerFlags.NextFramePending;\n    if ((_flags & SchedulerFlags.UpdatingFrame) === 0) {\n      rAF(_handleNextFrame);\n    }\n  }\n}\n\n/**\n * Adds a write DOM task to the queue.\n *\n * @param fn - Write DOM task\n */\nexport function scheduleMutationEffect(fn: () => void, flags?: UpdateFlags): void {\n  /** istanbul ignore else */\n  if (DEBUG) {\n    if (_flags & SchedulerFlags.UpdatingFrame) {\n      if (_debugFlags & SchedulerDebugFlags.MutationsFinished) {\n        printWarn(\"Mutation effect is scheduled after mutations were finished\");\n      }\n    }\n  }\n  _mutationEffects.v.push(fn);\n  requestNextFrame(flags);\n}\n\n/**\n * Adds a DOM layout task to the queue.\n *\n * @param fn - Read DOM task\n */\nexport function scheduleLayoutEffect(fn: () => void, flags?: UpdateFlags): void {\n  /** istanbul ignore else */\n  if (DEBUG) {\n    if (_flags & SchedulerFlags.UpdatingFrame) {\n      if (_debugFlags & SchedulerDebugFlags.MutationsFinished) {\n        printWarn(\"Layout effect is scheduled after layout were finished\");\n      }\n    }\n  }\n  _domLayoutEffects.v.push(fn);\n  requestNextFrame(flags);\n}\n\nexport function requestDirtyCheck(flags?: UpdateFlags) {\n  /** istanbul ignore else */\n  if (DEBUG) {\n    if (_flags & SchedulerFlags.UpdatingFrame) {\n      if (_debugFlags & SchedulerDebugFlags.MutationsFinished) {\n        printWarn(\"Dirty checking is scheduled after dirty checking were finished\");\n      }\n    }\n  }\n  _flags |= SchedulerFlags.DirtyCheckPending;\n  requestNextFrame(flags);\n}\n\n/**\n * Invalidate component.\n *\n * @param c - Component instance\n * @param flags - See {@link UpdateFlags} for details.\n */\nexport function invalidate(c: StateNode, flags?: UpdateFlags): void {\n  c.flags |= NodeFlags.Dirty;\n  requestDirtyCheck(flags);\n}\n\n/**\n * dirty requests a dirty checking and returns current monotonic clock value.\n *\n * @param flags - See {@link UpdateFlags} for details.\n * @returns current monotonic clock value.\n */\nexport const dirty = (flags?: UpdateFlags) => (requestDirtyCheck(flags), _clock);\n\n/**\n * Render virtual DOM node into the container.\n *\n * @param next - Virtual DOM node to render\n * @param container - DOM Node that will contain rendered node\n * @param flags - See {@link UpdateFlags} for details\n */\nexport function render(next: OpNode | string | number | null, container: Element, flags?: UpdateFlags): void {\n  /* istanbul ignore else */\n  if (DEBUG) {\n    /**\n     * Rendering into the <body> element is disabled to make it possible to fix iOS quirk with click events.\n     */\n    if (container === document.body) {\n      throw new Error(\"Rendering into the <body> element aren't allowed\");\n    }\n    if (!document.body.contains(container)) {\n      throw new Error(\"Container element should be attached to the document\");\n    }\n  }\n\n  const root = findRoot(container);\n  if (root) {\n    root.next = next;\n  } else {\n    ROOTS.push({ container, next, state: null });\n  }\n\n  requestDirtyCheck(flags);\n}\n","export function rAF(cb: (time?: number) => void): void {\n  requestAnimationFrame(cb);\n}\n\nexport function sMT(cb: () => void): void {\n  Promise.resolve().then(cb);\n}\n","import { EMPTY_OBJECT } from \"../core/empty_object\";\nimport { NodeFlags } from \"./node_flags\";\nimport { ComponentHooks } from \"./component\";\nimport { getContext } from \"./context\";\nimport { clock, scheduleMicrotask, scheduleMutationEffect, scheduleLayoutEffect } from \"../scheduler\";\nimport { StateNode } from \"./state\";\n\nfunction addHook<T extends Function>(hooks: null | T | T[], hook: T): T | T[] {\n  if (hooks === null) {\n    return hook;\n  }\n  if (typeof hooks === \"function\") {\n    return [hooks, hook];\n  }\n  hooks.push(hook);\n  return hooks;\n}\n\n/**\n * useSelect creates a selector hook.\n *\n * @example\n *\n *     const C = component<number>((h) => {\n *       const selector = useSelect<string, number, { data: string[] }>(c,\n *         (id, context) => context.data[id],\n *       );\n *\n *       return (id) => div(_, _, selector(id));\n *     });\n *\n * @param stateNode Component instance.\n * @param selector Selector function.\n * @returns Selector hook.\n */\nexport function useSelect<T>(\n  stateNode: StateNode,\n  selector: (props?: undefined, context?: undefined, prev?: T | undefined) => T,\n): () => T;\n\n/**\n * useSelect creates a selector hook.\n *\n * @example\n *\n *     const C = component<number>((h) => {\n *       const selector = useSelect<string, number, { data: string[] }>(c,\n *         (id, context) => context.data[id],\n *       );\n *\n *       return (id) => div(_, _, selector(id));\n *     });\n *\n * @param stateNode Component instance.\n * @param selector Selector function.\n * @returns Selector hook.\n */\nexport function useSelect<T, P>(\n  stateNode: StateNode,\n  selector: (props: P, context?: undefined, prev?: T | undefined) => T,\n  shouldUpdate?: undefined extends P ? undefined : (prev: P, next: P) => boolean,\n): undefined extends P ? () => T : (props: P) => T;\n\n/**\n * useSelect creates a selector hook.\n *\n * @example\n *\n *     const C = component<number>((h) => {\n *       const selector = useSelect<string, number, { data: string[] }>(c,\n *         (id, context) => context.data[id],\n *       );\n *\n *       return (id) => div(_, _, selector(id));\n *     });\n *\n * @param stateNode Component instance.\n * @param selector Selector function.\n * @returns Selector hook.\n */\nexport function useSelect<T, P, C>(\n  stateNode: StateNode,\n  selector: (props: P, context: C, prev?: T | undefined) => T,\n  shouldUpdate?: undefined extends P ? undefined : (prev: P, next: P) => boolean,\n): undefined extends P ? () => T : (props: P) => T;\n\n/**\n * useSelect creates a selector hook.\n *\n * @example\n *\n *     const C = component<number>((c) => {\n *       const selector = useSelect<string, number, { data: string[] }>(c,\n *         (id, context) => context.data[id],\n *       );\n *\n *       return (id) => div(_, _, selector(id));\n *     });\n *\n * @param stateNode Component instance.\n * @param selector Selector function.\n * @returns Selector hook.\n */\nexport function useSelect<T, P, C extends {}>(\n  stateNode: StateNode,\n  selector: (props: P, context: C, prev: T | undefined) => T,\n  shouldUpdate?: (prev: P, next: P) => boolean,\n): (props: P) => T {\n  const prevSelector = (stateNode.state as ComponentHooks).dirtyCheck;\n  let lastChecked = 0;\n  let state: T | undefined;\n  let props: P;\n\n  (stateNode.state as ComponentHooks).dirtyCheck = (context: {}) => {\n    if (prevSelector !== null && prevSelector(context) === true) {\n      return true;\n    }\n    if (state !== void 0) {\n      const nextState = selector(props, context as C, state);\n      lastChecked = clock();\n      if (state !== nextState) {\n        state = nextState;\n        return true;\n      }\n    }\n    return false;\n  };\n\n  return (nextProps: P) => {\n    if (\n      (state !== void 0) &&\n      ((shouldUpdate !== void 0 && shouldUpdate(props, nextProps) === true) || (props !== nextProps))\n    ) {\n      state = void 0;\n    }\n    if (state === void 0 || lastChecked < clock()) {\n      state = selector(nextProps, getContext() as C, state);\n    }\n    props = nextProps;\n    return state;\n  };\n}\n\n/**\n * useDetached creates a detached hook.\n *\n * @example\n *\n *     const C = component((h) => {\n *       useDetached(h, () => {\n *         console.log(\"detached\");\n *       });\n *\n *       return () => div();\n *     });\n *\n * @param stateNode Component instance.\n * @param hook Detached hook.\n */\nexport function useDetached(stateNode: StateNode, hook: () => void): void {\n  stateNode.flags |= NodeFlags.Unmount;\n  const hooks = stateNode.state as ComponentHooks;\n  hooks.unmount = addHook(hooks.unmount, hook);\n}\n\nfunction withEffect<P>(fn: (effect: () => void) => void): (\n  stateNode: StateNode,\n  hook: (props?: P) => (() => void) | void,\n  shouldUpdate?: (prev: P, next: P) => boolean,\n) => (props: P) => void {\n  return (stateNode, hook, shouldUpdate) => {\n    let reset: (() => void) | void;\n    let props: P | undefined = EMPTY_OBJECT as P;\n    let detached = false;\n    const handler = (d?: boolean) => {\n      if (reset !== void 0) {\n        reset();\n      }\n      if (d !== true) {\n        reset = hook(props);\n        if (reset !== void 0 && !detached) {\n          detached = true;\n          useDetached(stateNode, handler);\n        }\n      }\n    };\n\n    return (nextProps: P) => {\n      if (\n        props === EMPTY_OBJECT ||\n        (shouldUpdate !== void 0 && shouldUpdate(props as P, nextProps) === true) ||\n        props !== nextProps\n      ) {\n        props = nextProps;\n        fn(handler);\n      }\n    };\n  };\n}\n\n/**\n * useEffect creates a side effect hook.\n *\n * @example\n *\n *     const Counter = component<number>((c) => {\n *       let i = 0;\n *       const timer = useEffect<number>(c, (delay) => {\n *         const tid = setInterval(() => {\n *           i++;\n *           invalidate(c);\n *         }, delay);\n *         return () => { clearInterval(tid); };\n *       });\n *\n *       return (delay) => (\n *         timer(delay),\n *\n *         div(_, _, i),\n *       );\n *     });\n *\n * @param stateNode Component instance.\n * @param hook Side effect function.\n * @param shouldUpdate Should update function.\n * @returns Side effect hook\n */\nexport const useEffect: <T = undefined>(\n  stateNode: StateNode,\n  hook: undefined extends T ? () => (() => void) | void : (props: T) => (() => void) | void,\n  shouldUpdate?: undefined extends T ? undefined : (prev: T, next: T) => boolean,\n) => undefined extends T ? () => void : (props: T) => void = (/*#__PURE__*/withEffect(scheduleMicrotask)) as any;\n\n/**\n * useMutationEffect creates a DOM mutation effect hook.\n *\n * @param stateNode Component instance.\n * @param hook DOM mutation function.\n * @param shouldUpdate Should update function.\n * @returns Side effect hook\n */\nexport const useMutationEffect: <T = undefined>(\n  stateNode: StateNode,\n  hook: undefined extends T ? () => (() => void) | void : (props: T) => (() => void) | void,\n  shouldUpdate?: undefined extends T ? undefined : (prev: T, next: T) => boolean,\n) => undefined extends T ? () => void : (props: T) => void = (/*#__PURE__*/withEffect(scheduleMutationEffect)) as any;\n\n/**\n * useLayoutEffect creates a DOM layout effect hook.\n *\n * @param stateNode Component instance.\n * @param hook DOM layout function.\n * @param shouldUpdate Should update function.\n * @returns Side effect hook\n */\nexport const useLayoutEffect: <T = undefined>(\n  stateNode: StateNode,\n  hook: undefined extends T ? () => (() => void) | void : (props: T) => (() => void) | void,\n  shouldUpdate?: undefined extends T ? undefined : (prev: T, next: T) => boolean,\n) => undefined extends T ? () => void : (props: T) => void = (/*#__PURE__*/withEffect(scheduleLayoutEffect)) as any;\n","import {\n  HTMLAnchorElementAttrs, HTMLElementAttrs, HTMLAreaElementAttrs, HTMLAudioElementAttrs,\n  HTMLBaseElementAttrs, HTMLBodyElementAttrs, HTMLBRElementAttrs, HTMLButtonElementAttrs,\n  HTMLCanvasElementAttrs, HTMLQuoteElementAttrs, HTMLTableCaptionElementAttrs, HTMLTableColElementAttrs,\n  HTMLModElementAttrs, HTMLDivElementAttrs, HTMLDListElementAttrs, HTMLFieldSetElementAttrs, HTMLFormElementAttrs,\n  HTMLHeadElementAttrs, HTMLHeadingElementAttrs, HTMLHRElementAttrs, HTMLHtmlElementAttrs, HTMLIFrameElementAttrs,\n  HTMLImageElementAttrs, HTMLInputElementAttrs, HTMLLabelElementAttrs, HTMLLegendElementAttrs, HTMLLIElementAttrs,\n  HTMLLinkElementAttrs, HTMLMapElementAttrs, HTMLMenuElementAttrs, HTMLMetaElementAttrs, HTMLMeterElementAttrs,\n  HTMLOListElementAttrs, HTMLOptGroupElementAttrs, HTMLOptionElementAttrs, HTMLParagraphElementAttrs,\n  HTMLPictureElementAttrs, HTMLPreElementAttrs, HTMLProgressElementAttrs, HTMLScriptElementAttrs,\n  HTMLSelectElementAttrs, HTMLSourceElementAttrs, HTMLSpanElementAttrs, HTMLStyleElementAttrs,\n  HTMLTableDataCellElementAttrs, HTMLTableElementAttrs, HTMLTableHeaderCellElementAttrs, HTMLTableRowElementAttrs,\n  HTMLTableSectionElementAttrs, HTMLTemplateElementAttrs, HTMLTextAreaElementAttrs, HTMLTitleElementAttrs,\n  HTMLTrackElementAttrs, HTMLUListElementAttrs, HTMLVideoElementAttrs,\n\n  ATTRIBUTE_DIRECTIVE_SKIP_UNDEFINED,\n\n  AttributeDirective, htmlElement,\n} from \"ivi\";\n\n/**\n * {@link AttributeDirective} with `\"\"` value and {@link updateValue} sync function.\n */\nconst VALUE_EMPTY_STRING: AttributeDirective<string | number> = { v: \"\", u: updateValue };\n\n/**\n * {@link AttributeDirective} with `false` value and {@link updateChecked} sync function.\n */\nconst CHECKED_FALSE: AttributeDirective<boolean> = { v: false, u: updateChecked };\n\n/**\n * {@link AttributeDirective} with `true` value and {@link updateChecked} sync function.\n */\nconst CHECKED_TRUE: AttributeDirective<boolean> = { v: true, u: updateChecked };\n\n/**\n * Synchronization function for {@link AttributeDirective} created with {@link VALUE} function.\n *\n * @param element - Target element\n * @param key - Attribute key\n * @param prev - Previous value\n * @param next - Next value\n */\nfunction updateValue(\n  element: Element,\n  key: string,\n  prev: string | number | undefined,\n  next: string | number | undefined,\n) {\n  if (prev === void 0) {\n    if (next !== \"\") {\n      (element as HTMLInputElement | HTMLTextAreaElement).value = next as string;\n    }\n  } else if (next !== void 0) {\n    if ((element as HTMLInputElement | HTMLTextAreaElement).value !== next) {\n      (element as HTMLInputElement | HTMLTextAreaElement).value = next as string;\n    }\n  }\n}\n\n/**\n * Synchronization function for {@link AttributeDirective} created with {@link CHECKED} function.\n *\n * @param element - Target element\n * @param key - Attribute key\n * @param prev - Previous value\n * @param next - Next value\n */\nfunction updateChecked(\n  element: Element,\n  key: string,\n  prev: boolean | undefined,\n  next: boolean | undefined,\n) {\n  if (prev === void 0) {\n    if (next) {\n      (element as HTMLInputElement).checked = next;\n    }\n  } else if (next !== void 0) {\n    if ((element as HTMLInputElement).checked !== next) {\n      (element as HTMLInputElement).checked = next!;\n    }\n  }\n}\n\n/**\n * VALUE function creates a {@link AttributeDirective} that assigns a `value` property to an HTMLInputElement or\n * HTMLTextAreaElement.\n *\n * `undefined` values are ignored.\n *\n * @example\n *\n *   const e = input(\"\", { value: VALUE(\"value\") });\n *\n * @param v - Value\n * @returns {@link AttributeDirective}\n */\nexport function VALUE(v: string | number | undefined): AttributeDirective<string | number> {\n  return (v === void 0) ?\n    ATTRIBUTE_DIRECTIVE_SKIP_UNDEFINED :\n    v === \"\" ?\n      VALUE_EMPTY_STRING :\n      { v, u: updateValue };\n}\n\n/**\n * CHECKED function creates a {@link AttributeDirective} that assigns a `checked` property to an HTMLInputElement.\n *\n * `undefined` values are ignored.\n *\n * @example\n *\n *   const e = input(\"\", { checked: CHECKED(true) });\n *\n * @param v - Checked value\n * @returns {@link AttributeDirective}\n */\nexport function CHECKED(v: boolean | undefined): AttributeDirective<boolean> {\n  return (v === void 0) ?\n    ATTRIBUTE_DIRECTIVE_SKIP_UNDEFINED as any as AttributeDirective<boolean> :\n    v ? CHECKED_TRUE : CHECKED_FALSE;\n}\n\n/**\n * Creates OpNode HTML element <a>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <a>\n */\nexport const a = /*#__PURE__*/htmlElement<HTMLAnchorElementAttrs, HTMLAnchorElement>(\"a\");\n\n/**\n * Creates OpNode HTML element <abbr>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/abbr}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <abbr>\n */\nexport const abbr = /*#__PURE__*/htmlElement<HTMLElementAttrs, HTMLElement>(\"abbr\");\n\n/**\n * Creates OpNode HTML element <address>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/address}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <address>\n */\nexport const address = /*#__PURE__*/htmlElement<HTMLElementAttrs, HTMLElement>(\"address\");\n\n/**\n * Creates OpNode HTML element <article>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/article}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <article>\n */\nexport const article = /*#__PURE__*/htmlElement<HTMLElementAttrs, HTMLElement>(\"article\");\n\n/**\n * Creates OpNode HTML element <aside>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/aside}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <aside>\n */\nexport const aside = /*#__PURE__*/htmlElement<HTMLElementAttrs, HTMLElement>(\"aside\");\n\n/**\n * Creates OpNode HTML element <b>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/b}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <b>\n */\nexport const b = /*#__PURE__*/htmlElement<HTMLElementAttrs, HTMLElement>(\"b\");\n\n/**\n * Creates OpNode HTML element <base>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/base}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <base>\n */\nexport const base = /*#__PURE__*/htmlElement<HTMLBaseElementAttrs, HTMLBaseElement>(\"base\");\n\n/**\n * Creates OpNode HTML element <bdo>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/bdo}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <bdo>\n */\nexport const bdo = /*#__PURE__*/htmlElement<HTMLElementAttrs, HTMLElement>(\"bdo\");\n\n/**\n * Creates OpNode HTML element <blockquote>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/blockquote}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <blockquote>\n */\nexport const blockquote = /*#__PURE__*/htmlElement<HTMLQuoteElementAttrs, HTMLQuoteElement>(\"blockquote\");\n\n/**\n * Creates OpNode HTML element <body>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/body}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <body>\n */\nexport const body = /*#__PURE__*/htmlElement<HTMLBodyElementAttrs, HTMLBodyElement>(\"body\");\n\n/**\n * Creates OpNode HTML element <br>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/br}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <br>\n */\nexport const br = /*#__PURE__*/htmlElement<HTMLBRElementAttrs, HTMLBRElement>(\"br\");\n\n/**\n * Creates OpNode HTML element <button>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <button>\n */\nexport const button = /*#__PURE__*/htmlElement<HTMLButtonElementAttrs, HTMLButtonElement>(\"button\");\n\n/**\n * Creates OpNode HTML element <canvas>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <canvas>\n */\nexport const canvas = /*#__PURE__*/htmlElement<HTMLCanvasElementAttrs, HTMLCanvasElement>(\"canvas\");\n\n/**\n * Creates OpNode HTML element <caption>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <caption>\n */\nexport const caption = /*#__PURE__*/htmlElement<HTMLTableCaptionElementAttrs, HTMLTableCaptionElement>(\"caption\");\n\n/**\n * Creates OpNode HTML element <cite>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/cite}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <cite>\n */\nexport const cite = /*#__PURE__*/htmlElement<HTMLElementAttrs, HTMLElement>(\"cite\");\n\n/**\n * Creates OpNode HTML element <code>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/code}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <code>\n */\nexport const code = /*#__PURE__*/htmlElement<HTMLElementAttrs, HTMLElement>(\"code\");\n\n/**\n * Creates OpNode HTML element <col>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/col}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <col>\n */\nexport const col = /*#__PURE__*/htmlElement<HTMLTableColElementAttrs, HTMLTableColElement>(\"col\");\n\n/**\n * Creates OpNode HTML element <colgroup>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/colgroup}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <colgroup>\n */\nexport const colgroup = /*#__PURE__*/htmlElement<HTMLTableColElementAttrs, HTMLTableColElement>(\"colgroup\");\n\n/**\n * Creates OpNode HTML element <del>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/del}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <del>\n */\nexport const del = /*#__PURE__*/htmlElement<HTMLModElementAttrs, HTMLModElement>(\"del\");\n\n/**\n * Creates OpNode HTML element <dfn>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dfn}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <dfn>\n */\nexport const dfn = /*#__PURE__*/htmlElement<HTMLElementAttrs, HTMLElement>(\"dfn\");\n\n/**\n * Creates OpNode HTML element <div>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <div>\n */\nexport const div = /*#__PURE__*/htmlElement<HTMLDivElementAttrs, HTMLDivElement>(\"div\");\n\n/**\n * Creates OpNode HTML element <dd>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dd}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <dd>\n */\nexport const dd = /*#__PURE__*/htmlElement<HTMLElementAttrs, HTMLElement>(\"dd\");\n\n/**\n * Creates OpNode HTML element <dl>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dl}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <dl>\n */\nexport const dl = /*#__PURE__*/htmlElement<HTMLDListElementAttrs, HTMLDListElement>(\"dl\");\n\n/**\n * Creates OpNode HTML element <dt>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dt}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <dt>\n */\nexport const dt = /*#__PURE__*/htmlElement<HTMLElementAttrs, HTMLElement>(\"dt\");\n\n/**\n * Creates OpNode HTML element <em>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/em}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <em>\n */\nexport const em = /*#__PURE__*/htmlElement<HTMLElementAttrs, HTMLElement>(\"em\");\n\n/**\n * Creates OpNode HTML element <fieldset>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/fieldset}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <fieldset>\n */\nexport const fieldset = /*#__PURE__*/htmlElement<HTMLFieldSetElementAttrs, HTMLFieldSetElement>(\"fieldset\");\n\n/**\n * Creates OpNode HTML element <figcaption>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/figcaption}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <figcaption>\n */\nexport const figcaption = /*#__PURE__*/htmlElement<HTMLElementAttrs, HTMLElement>(\"figcaption\");\n\n/**\n * Creates OpNode HTML element <figure>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/figure}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <figure>\n */\nexport const figure = /*#__PURE__*/htmlElement<HTMLElementAttrs, HTMLElement>(\"figure\");\n\n/**\n * Creates OpNode HTML element <footer>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/footer}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <footer>\n */\nexport const footer = /*#__PURE__*/htmlElement<HTMLElementAttrs, HTMLElement>(\"footer\");\n\n/**\n * Creates OpNode HTML element <form>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <form>\n */\nexport const form = /*#__PURE__*/htmlElement<HTMLFormElementAttrs, HTMLFormElement>(\"form\");\n\n/**\n * Creates OpNode HTML element <h1>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h1}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <h1>\n */\nexport const h1 = /*#__PURE__*/htmlElement<HTMLHeadingElementAttrs, HTMLHeadingElement>(\"h1\");\n\n/**\n * Creates OpNode HTML element <h2>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h2}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <h2>\n */\nexport const h2 = /*#__PURE__*/htmlElement<HTMLHeadingElementAttrs, HTMLHeadingElement>(\"h2\");\n\n/**\n * Creates OpNode HTML element <h3>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h3}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <h3>\n */\nexport const h3 = /*#__PURE__*/htmlElement<HTMLHeadingElementAttrs, HTMLHeadingElement>(\"h3\");\n\n/**\n * Creates OpNode HTML element <h4>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h4}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <h4>\n */\nexport const h4 = /*#__PURE__*/htmlElement<HTMLHeadingElementAttrs, HTMLHeadingElement>(\"h4\");\n\n/**\n * Creates OpNode HTML element <h5>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h5}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <h5>\n */\nexport const h5 = /*#__PURE__*/htmlElement<HTMLHeadingElementAttrs, HTMLHeadingElement>(\"h5\");\n\n/**\n * Creates OpNode HTML element <h6>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h6}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <h6>\n */\nexport const h6 = /*#__PURE__*/htmlElement<HTMLHeadingElementAttrs, HTMLHeadingElement>(\"h6\");\n\n/**\n * Creates OpNode HTML element <head>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/head}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <head>\n */\nexport const head = /*#__PURE__*/htmlElement<HTMLHeadElementAttrs, HTMLHeadElement>(\"head\");\n\n/**\n * Creates OpNode HTML element <header>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/header}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <header>\n */\nexport const header = /*#__PURE__*/htmlElement<HTMLElementAttrs, HTMLElement>(\"header\");\n\n/**\n * Creates OpNode HTML element <hgroup>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/hgroup}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <hgroup>\n */\nexport const hgroup = /*#__PURE__*/htmlElement<HTMLElementAttrs, HTMLElement>(\"hgroup\");\n\n/**\n * Creates OpNode HTML element <hr>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/hr}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <hr>\n */\nexport const hr = /*#__PURE__*/htmlElement<HTMLHRElementAttrs, HTMLHRElement>(\"hr\");\n\n/**\n * Creates OpNode HTML element <html>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/html}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <html>\n */\nexport const html = /*#__PURE__*/htmlElement<HTMLHtmlElementAttrs, HTMLHtmlElement>(\"html\");\n\n/**\n * Creates OpNode HTML element <i>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/i}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <i>\n */\nexport const i = /*#__PURE__*/htmlElement<HTMLElementAttrs, HTMLElement>(\"i\");\n\n/**\n * Creates OpNode HTML element <iframe>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <iframe>\n */\nexport const iframe = /*#__PURE__*/htmlElement<HTMLIFrameElementAttrs, HTMLIFrameElement>(\"iframe\");\n\n/**\n * Creates OpNode HTML element <img>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <img>\n */\nexport const img = /*#__PURE__*/htmlElement<HTMLImageElementAttrs, HTMLImageElement>(\"img\");\n\n/**\n * Creates OpNode HTML element <area>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/area}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <area>\n */\nexport const area = /*#__PURE__*/htmlElement<HTMLAreaElementAttrs, HTMLAreaElement>(\"area\");\n\n/**\n * Creates OpNode HTML element <map>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/map}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <map>\n */\nexport const map = /*#__PURE__*/htmlElement<HTMLMapElementAttrs, HTMLMapElement>(\"map\");\n\n/**\n * Creates OpNode HTML element <ins>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ins}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <ins>\n */\nexport const ins = /*#__PURE__*/htmlElement<HTMLModElementAttrs, HTMLModElement>(\"ins\");\n\n/**\n * Creates OpNode HTML element <kbd>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/kbd}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <kbd>\n */\nexport const kbd = /*#__PURE__*/htmlElement<HTMLElementAttrs, HTMLElement>(\"kbd\");\n\n/**\n * Creates OpNode HTML element <label>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/label}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <label>\n */\nexport const label = /*#__PURE__*/htmlElement<HTMLLabelElementAttrs, HTMLLabelElement>(\"label\");\n\n/**\n * Creates OpNode HTML element <legend>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/legend}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <legend>\n */\nexport const legend = /*#__PURE__*/htmlElement<HTMLLegendElementAttrs, HTMLLegendElement>(\"legend\");\n\n/**\n * Creates OpNode HTML element <li>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/li}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <li>\n */\nexport const li = /*#__PURE__*/htmlElement<HTMLLIElementAttrs, HTMLLIElement>(\"li\");\n\n/**\n * Creates OpNode HTML element <link>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <link>\n */\nexport const link = /*#__PURE__*/htmlElement<HTMLLinkElementAttrs, HTMLLinkElement>(\"link\");\n\n/**\n * Creates OpNode HTML element <main>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/main}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <main>\n */\nexport const main = /*#__PURE__*/htmlElement<HTMLElementAttrs, HTMLElement>(\"main\");\n\n/**\n * Creates OpNode HTML element <mark>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/mark}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <mark>\n */\nexport const mark = /*#__PURE__*/htmlElement<HTMLElementAttrs, HTMLElement>(\"mark\");\n\n/**\n * Creates OpNode HTML element <menu>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/menu}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <menu>\n */\nexport const menu = /*#__PURE__*/htmlElement<HTMLMenuElementAttrs, HTMLMenuElement>(\"menu\");\n\n/**\n * Creates OpNode HTML element <meta>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <meta>\n */\nexport const meta = /*#__PURE__*/htmlElement<HTMLMetaElementAttrs, HTMLMetaElement>(\"meta\");\n\n/**\n * Creates OpNode HTML element <meter>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meter}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <meter>\n */\nexport const meter = /*#__PURE__*/htmlElement<HTMLMeterElementAttrs, HTMLMeterElement>(\"meter\");\n\n/**\n * Creates OpNode HTML element <nav>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/nav}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <nav>\n */\nexport const nav = /*#__PURE__*/htmlElement<HTMLElementAttrs, HTMLElement>(\"nav\");\n\n/**\n * Creates OpNode HTML element <noscript>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/noscript}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <noscript>\n */\nexport const noscript = /*#__PURE__*/htmlElement<HTMLElementAttrs, HTMLElement>(\"noscript\");\n\n/**\n * Creates OpNode HTML element <ol>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ol}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <ol>\n */\nexport const ol = /*#__PURE__*/htmlElement<HTMLOListElementAttrs, HTMLOListElement>(\"ol\");\n\n/**\n * Creates OpNode HTML element <optgroup>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/optgroup}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <optgroup>\n */\nexport const optgroup = /*#__PURE__*/htmlElement<HTMLOptGroupElementAttrs, HTMLOptGroupElement>(\"optgroup\");\n\n/**\n * Creates OpNode HTML element <option>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <option>\n */\nexport const option = /*#__PURE__*/htmlElement<HTMLOptionElementAttrs, HTMLOptionElement>(\"option\");\n\n/**\n * Creates OpNode HTML element <p>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/p}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <p>\n */\nexport const p = /*#__PURE__*/htmlElement<HTMLParagraphElementAttrs, HTMLParagraphElement>(\"p\");\n\n/**\n * Creates OpNode HTML element <picture>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/picture}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <picture>\n */\nexport const picture = /*#__PURE__*/htmlElement<HTMLPictureElementAttrs, HTMLPictureElement>(\"picture\");\n\n/**\n * Creates OpNode HTML element <pre>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/pre}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <pre>\n */\nexport const pre = /*#__PURE__*/htmlElement<HTMLPreElementAttrs, HTMLPreElement>(\"pre\");\n\n/**\n * Creates OpNode HTML element <progress>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/progress}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <progress>\n */\nexport const progress = /*#__PURE__*/htmlElement<HTMLProgressElementAttrs, HTMLProgressElement>(\"progress\");\n\n/**\n * Creates OpNode HTML element <q>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/q}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <q>\n */\nexport const q = /*#__PURE__*/htmlElement<HTMLQuoteElementAttrs, HTMLQuoteElement>(\"q\");\n\n/**\n * Creates OpNode HTML element <rt>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/rt}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <rt>\n */\nexport const rt = /*#__PURE__*/htmlElement<HTMLElementAttrs, HTMLElement>(\"rt\");\n\n/**\n * Creates OpNode HTML element <ruby>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ruby}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <ruby>\n */\nexport const ruby = /*#__PURE__*/htmlElement<HTMLElementAttrs, HTMLElement>(\"ruby\");\n\n/**\n * Creates OpNode HTML element <s>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/s}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <s>\n */\nexport const s = /*#__PURE__*/htmlElement<HTMLElementAttrs, HTMLElement>(\"s\");\n\n/**\n * Creates OpNode HTML element <samp>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/samp}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <samp>\n */\nexport const samp = /*#__PURE__*/htmlElement<HTMLElementAttrs, HTMLElement>(\"samp\");\n\n/**\n * Creates OpNode HTML element <script>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <script>\n */\nexport const script = /*#__PURE__*/htmlElement<HTMLScriptElementAttrs, HTMLScriptElement>(\"script\");\n\n/**\n * Creates OpNode HTML element <section>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/section}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <section>\n */\nexport const section = /*#__PURE__*/htmlElement<HTMLElementAttrs, HTMLElement>(\"section\");\n\n/**\n * Creates OpNode HTML element <select>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <select>\n */\nexport const select = /*#__PURE__*/htmlElement<HTMLSelectElementAttrs, HTMLSelectElement>(\"select\");\n\n/**\n * Creates OpNode HTML element <source>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/source}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <source>\n */\nexport const source = /*#__PURE__*/htmlElement<HTMLSourceElementAttrs, HTMLSourceElement>(\"source\");\n\n/**\n * Creates OpNode HTML element <span>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <span>\n */\nexport const span = /*#__PURE__*/htmlElement<HTMLSpanElementAttrs, HTMLSpanElement>(\"span\");\n\n/**\n * Creates OpNode HTML element <strong>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/strong}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <strong>\n */\nexport const strong = /*#__PURE__*/htmlElement<HTMLElementAttrs, HTMLElement>(\"strong\");\n\n/**\n * Creates OpNode HTML element <style>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/style}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <style>\n */\nexport const style = /*#__PURE__*/htmlElement<HTMLStyleElementAttrs, HTMLStyleElement>(\"style\");\n\n/**\n * Creates OpNode HTML element <sub>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/sub}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <sub>\n */\nexport const sub = /*#__PURE__*/htmlElement<HTMLElementAttrs, HTMLElement>(\"sub\");\n\n/**\n * Creates OpNode HTML element <sup>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/sup}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <sup>\n */\nexport const sup = /*#__PURE__*/htmlElement<HTMLElementAttrs, HTMLElement>(\"sup\");\n\n/**\n * Creates OpNode HTML element <table>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/table}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <table>\n */\nexport const table = /*#__PURE__*/htmlElement<HTMLTableElementAttrs, HTMLTableElement>(\"table\");\n\n/**\n * Creates OpNode HTML element <tbody>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tbody}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <tbody>\n */\nexport const tbody = /*#__PURE__*/htmlElement<HTMLTableSectionElementAttrs, HTMLTableSectionElement>(\"tbody\");\n\n/**\n * Creates OpNode HTML element <td>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/td}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <td>\n */\nexport const td = /*#__PURE__*/htmlElement<HTMLTableDataCellElementAttrs, HTMLTableDataCellElement>(\"td\");\n\n/**\n * Creates OpNode HTML element <template>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/template}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <template>\n */\nexport const template = /*#__PURE__*/htmlElement<HTMLTemplateElementAttrs, HTMLTemplateElement>(\"template\");\n\n/**\n * Creates OpNode HTML element <tfoot>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tfoot}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <tfoot>\n */\nexport const tfoot = /*#__PURE__*/htmlElement<HTMLTableSectionElementAttrs, HTMLTableSectionElement>(\"tfoot\");\n\n/**\n * Creates OpNode HTML element <th>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/th}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <th>\n */\nexport const th = /*#__PURE__*/htmlElement<HTMLTableHeaderCellElementAttrs, HTMLTableHeaderCellElement>(\"th\");\n\n/**\n * Creates OpNode HTML element <thead>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/thead}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <thead>\n */\nexport const thead = /*#__PURE__*/htmlElement<HTMLTableSectionElementAttrs, HTMLTableSectionElement>(\"thead\");\n\n/**\n * Creates OpNode HTML element <time>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/time}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <time>\n */\nexport const time = /*#__PURE__*/htmlElement<HTMLElementAttrs, HTMLElement>(\"time\");\n\n/**\n * Creates OpNode HTML element <title>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/title}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <title>\n */\nexport const title = /*#__PURE__*/htmlElement<HTMLTitleElementAttrs, HTMLTitleElement>(\"title\");\n\n/**\n * Creates OpNode HTML element <tr>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tr}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <tr>\n */\nexport const tr = /*#__PURE__*/htmlElement<HTMLTableRowElementAttrs, HTMLTableRowElement>(\"tr\");\n\n/**\n * Creates OpNode HTML element <track>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/track}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <track>\n */\nexport const track = /*#__PURE__*/htmlElement<HTMLTrackElementAttrs, HTMLTrackElement>(\"track\");\n\n/**\n * Creates OpNode HTML element <u>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/u}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <u>\n */\nexport const u = /*#__PURE__*/htmlElement<HTMLElementAttrs, HTMLElement>(\"u\");\n\n/**\n * Creates OpNode HTML element <ul>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ul}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <ul>\n */\nexport const ul = /*#__PURE__*/htmlElement<HTMLUListElementAttrs, HTMLUListElement>(\"ul\");\n\n/**\n * Creates OpNode HTML element <wbr>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/wbr}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <wbr>\n */\nexport const wbr = /*#__PURE__*/htmlElement<HTMLElementAttrs, HTMLElement>(\"wbr\");\n\n/**\n * Creates OpNode HTML element <textarea>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <textarea>\n */\nexport const textarea = /*#__PURE__*/htmlElement<HTMLTextAreaElementAttrs, HTMLTextAreaElement>(\"textarea\");\n\n/**\n * Creates OpNode HTML element <input>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <input>\n */\nexport const input = /*#__PURE__*/htmlElement<HTMLInputElementAttrs, HTMLInputElement>(\"input\");\n\n/**\n * Creates OpNode HTML element <audio>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <audio>\n */\nexport const audio = /*#__PURE__*/htmlElement<HTMLAudioElementAttrs, HTMLAudioElement>(\"audio\");\n\n/**\n * Creates OpNode HTML element <video>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <video>\n */\nexport const video = /*#__PURE__*/htmlElement<HTMLVideoElementAttrs, HTMLVideoElement>(\"video\");\n","var MonitorMaxSamples = 100;\nvar MonitorSamplesResult = (function () {\n    function MonitorSamplesResult(min, max, mean, last) {\n        this.min = min;\n        this.max = max;\n        this.mean = mean;\n        this.last = last;\n    }\n    return MonitorSamplesResult;\n}());\n/**\n * Profile Samples.\n */\nvar MonitorSamples = (function () {\n    function MonitorSamples(maxSamples) {\n        this.samples = [];\n        this.maxSamples = maxSamples;\n        this._i = -1;\n    }\n    MonitorSamples.prototype.addSample = function (v) {\n        this._i = (this._i + 1) % this.maxSamples;\n        this.samples[this._i] = v;\n    };\n    MonitorSamples.prototype.each = function (fn) {\n        var samples = this.samples;\n        for (var i = 0; i < samples.length; i++) {\n            fn(samples[(this._i + 1 + i) % samples.length], i);\n        }\n    };\n    MonitorSamples.prototype.calc = function () {\n        var samples = this.samples;\n        if (samples.length === 0) {\n            return new MonitorSamplesResult(0, 0, 0, 0);\n        }\n        var min = samples[(this._i + 1) % samples.length];\n        var max = min;\n        var sum = 0;\n        for (var i = 0; i < samples.length; i++) {\n            var k = samples[(this._i + 1 + i) % samples.length];\n            if (k < min) {\n                min = k;\n            }\n            if (k > max) {\n                max = k;\n            }\n            sum += k;\n        }\n        var last = samples[this._i];\n        var mean = sum / samples.length;\n        return new MonitorSamplesResult(min, max, mean, last);\n    };\n    return MonitorSamples;\n}());\n\n/**\n * Basic Counter.\n */\nvar BasicCounter = (function () {\n    function BasicCounter() {\n        this.value = 0;\n        this.onChange = null;\n    }\n    BasicCounter.prototype.inc = function (value) {\n        if (value > 0) {\n            this.value += value;\n            this.onChange();\n        }\n    };\n    return BasicCounter;\n}());\nvar TimestampedValue = (function () {\n    function TimestampedValue(timestamp, value) {\n        this.value = value;\n        this.next = null;\n    }\n    return TimestampedValue;\n}());\n/**\n * Sliding Counter counts how many times `inc` method were called during `interval` period.\n */\nvar SlidingCounter = (function () {\n    function SlidingCounter(interval) {\n        var _this = this;\n        this._dec = function () {\n            var now = performance.now();\n            while (_this._firstTimestamp !== null) {\n                var nextTimestamp = _this._firstTimestamp;\n                if (now >= nextTimestamp.value) {\n                    _this.value -= nextTimestamp.value;\n                    _this._firstTimestamp = _this._firstTimestamp.next;\n                }\n                else {\n                    setTimeout(_this._dec, Math.ceil(nextTimestamp.value - now));\n                    break;\n                }\n            }\n            if (_this._firstTimestamp === null) {\n                _this._lastTimestamp = null;\n            }\n            _this.onChange();\n        };\n        this.interval = interval;\n        this.value = 0;\n        this.onChange = null;\n        this._firstTimestamp = null;\n        this._lastTimestamp = null;\n    }\n    SlidingCounter.prototype.inc = function (value) {\n        if (value > 0) {\n            var timestamp = new TimestampedValue(performance.now() + this.interval, value);\n            if (this._firstTimestamp === null) {\n                this._firstTimestamp = timestamp;\n                setTimeout(this._dec, this.interval);\n            }\n            else {\n                this._lastTimestamp.next = timestamp;\n            }\n            this._lastTimestamp = timestamp;\n            this.value += value;\n            this.onChange();\n        }\n    };\n    return SlidingCounter;\n}());\n\nvar frameTasks = [];\nvar rafId = -1;\n/**\n * Schedule new task that will be executed on the next frame.\n */\nfunction scheduleNextFrameTask(task) {\n    frameTasks.push(task);\n    if (rafId === -1) {\n        requestAnimationFrame(function (t) {\n            rafId = -1;\n            var tasks = frameTasks;\n            frameTasks = [];\n            for (var i = 0; i < tasks.length; i++) {\n                tasks[i]();\n            }\n        });\n    }\n}\n\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar MonitorGraphHeight = 30;\nvar MonitorGraphWidth = MonitorMaxSamples;\nvar Widget = (function () {\n    function Widget(name) {\n        var _this = this;\n        this._sync = function () {\n            _this.sync();\n            _this._dirty = false;\n        };\n        this.name = name;\n        this.element = document.createElement(\"div\");\n        this.element.style.cssText = \"padding: 2px;\" +\n            \"background-color: #020;\" +\n            \"font-family: monospace;\" +\n            \"font-size: 12px;\" +\n            \"color: #0f0\";\n        this._dirty = false;\n        this.invalidate();\n    }\n    Widget.prototype.invalidate = function () {\n        if (!this._dirty) {\n            this._dirty = true;\n            scheduleNextFrameTask(this._sync);\n        }\n    };\n    Widget.prototype.sync = function () {\n        throw new Error(\"sync method not implemented\");\n    };\n    return Widget;\n}());\nvar MonitorWidgetFlags;\n(function (MonitorWidgetFlags) {\n    MonitorWidgetFlags[MonitorWidgetFlags[\"HideMin\"] = 1] = \"HideMin\";\n    MonitorWidgetFlags[MonitorWidgetFlags[\"HideMax\"] = 2] = \"HideMax\";\n    MonitorWidgetFlags[MonitorWidgetFlags[\"HideMean\"] = 4] = \"HideMean\";\n    MonitorWidgetFlags[MonitorWidgetFlags[\"HideLast\"] = 8] = \"HideLast\";\n    MonitorWidgetFlags[MonitorWidgetFlags[\"HideGraph\"] = 16] = \"HideGraph\";\n    MonitorWidgetFlags[MonitorWidgetFlags[\"RoundValues\"] = 32] = \"RoundValues\";\n})(MonitorWidgetFlags || (MonitorWidgetFlags = {}));\nvar MonitorWidget = (function (_super) {\n    __extends(MonitorWidget, _super);\n    function MonitorWidget(name, flags, unitName, samples) {\n        var _this = _super.call(this, name) || this;\n        _this.flags = flags;\n        _this.unitName = unitName;\n        _this.samples = samples;\n        var label = document.createElement(\"div\");\n        label.style.cssText = \"text-align: center\";\n        label.textContent = _this.name;\n        var text = document.createElement(\"div\");\n        if ((flags & MonitorWidgetFlags.HideMin) === 0) {\n            _this.minText = document.createElement(\"div\");\n            text.appendChild(_this.minText);\n        }\n        else {\n            _this.minText = null;\n        }\n        if ((flags & MonitorWidgetFlags.HideMax) === 0) {\n            _this.maxText = document.createElement(\"div\");\n            text.appendChild(_this.maxText);\n        }\n        else {\n            _this.maxText = null;\n        }\n        if ((flags & MonitorWidgetFlags.HideMean) === 0) {\n            _this.meanText = document.createElement(\"div\");\n            text.appendChild(_this.meanText);\n        }\n        else {\n            _this.meanText = null;\n        }\n        if ((flags & MonitorWidgetFlags.HideLast) === 0) {\n            _this.lastText = document.createElement(\"div\");\n            text.appendChild(_this.lastText);\n        }\n        else {\n            _this.lastText = null;\n        }\n        _this.element.appendChild(label);\n        _this.element.appendChild(text);\n        if ((flags & MonitorWidgetFlags.HideGraph) === 0) {\n            _this.canvas = document.createElement(\"canvas\");\n            _this.canvas.style.cssText = \"display: block; padding: 0; margin: 0\";\n            _this.canvas.width = MonitorGraphWidth;\n            _this.canvas.height = MonitorGraphHeight;\n            _this.ctx = _this.canvas.getContext(\"2d\");\n            _this.element.appendChild(_this.canvas);\n        }\n        else {\n            _this.canvas = null;\n            _this.ctx = null;\n        }\n        return _this;\n    }\n    MonitorWidget.prototype.sync = function () {\n        var _this = this;\n        var result = this.samples.calc();\n        var scale = MonitorGraphHeight / (result.max * 1.2);\n        var min;\n        var max;\n        var mean;\n        var last;\n        if ((this.flags & MonitorWidgetFlags.RoundValues) === 0) {\n            min = result.min.toFixed(2);\n            max = result.max.toFixed(2);\n            mean = result.mean.toFixed(2);\n            last = result.last.toFixed(2);\n        }\n        else {\n            min = Math.round(result.min).toString();\n            max = Math.round(result.max).toString();\n            mean = Math.round(result.mean).toString();\n            last = Math.round(result.last).toString();\n        }\n        if (this.minText !== null) {\n            this.minText.textContent = \"min: \\u00A0\" + min + this.unitName;\n        }\n        if (this.maxText !== null) {\n            this.maxText.textContent = \"max: \\u00A0\" + max + this.unitName;\n        }\n        if (this.meanText !== null) {\n            this.meanText.textContent = \"mean: \" + mean + this.unitName;\n        }\n        if (this.lastText !== null) {\n            this.lastText.textContent = \"last: \" + last + this.unitName;\n        }\n        if (this.ctx !== null) {\n            this.ctx.fillStyle = \"#010\";\n            this.ctx.fillRect(0, 0, MonitorGraphWidth, MonitorGraphHeight);\n            this.ctx.fillStyle = \"#0f0\";\n            this.samples.each(function (v, i) {\n                _this.ctx.fillRect(i, MonitorGraphHeight, 1, -(v * scale));\n            });\n        }\n    };\n    return MonitorWidget;\n}(Widget));\nvar CounterWidget = (function (_super) {\n    __extends(CounterWidget, _super);\n    function CounterWidget(name, counter) {\n        var _this = _super.call(this, name) || this;\n        _this.counter = counter;\n        _this.text = document.createElement(\"div\");\n        _this.element.appendChild(_this.text);\n        return _this;\n    }\n    CounterWidget.prototype.sync = function () {\n        this.text.textContent = this.name + \": \" + this.counter.value;\n    };\n    return CounterWidget;\n}(Widget));\n\nvar container = null;\nvar initialized = false;\n/**\n * Initialize Performance Monitor.\n */\nfunction initPerfMonitor(options) {\n    if (!initialized) {\n        if (options.container) {\n            container = options.container;\n        }\n        initialized = true;\n    }\n}\n/**\n * Check that everything is properly initialized.\n */\nfunction checkInit() {\n    if (!container) {\n        container = document.createElement(\"div\");\n        container.style.cssText = \"position: fixed;\" +\n            \"opacity: 0.9;\" +\n            \"right: 0;\" +\n            \"bottom: 0\";\n        document.body.appendChild(container);\n    }\n    initialized = true;\n}\n/**\n * Start FPS monitor\n */\nfunction startFPSMonitor(flags) {\n    if (flags === void 0) { flags = MonitorWidgetFlags.HideMin | MonitorWidgetFlags.HideMax |\n        MonitorWidgetFlags.HideMean | MonitorWidgetFlags.RoundValues; }\n    checkInit();\n    var data = new MonitorSamples(MonitorMaxSamples);\n    var w = new MonitorWidget(\"FPS\", flags, \"\", data);\n    container.appendChild(w.element);\n    var alpha = 2 / 121;\n    var last = 0;\n    var fps = 60;\n    function update(now) {\n        if (last > 0) {\n            fps += alpha * ((1000 / (now - last)) - fps);\n        }\n        last = now;\n        data.addSample(fps);\n        w.invalidate();\n        requestAnimationFrame(update);\n    }\n    requestAnimationFrame(update);\n}\n/**\n * Start Memory Monitor\n */\nfunction startMemMonitor(flags) {\n    if (flags === void 0) { flags = MonitorWidgetFlags.HideMin | MonitorWidgetFlags.HideMean; }\n    checkInit();\n    if (performance.memory === undefined) {\n        return;\n    }\n    var data = new MonitorSamples(MonitorMaxSamples);\n    var w = new MonitorWidget(\"Memory\", flags, \"MB\", data);\n    container.appendChild(w.element);\n    function update() {\n        data.addSample(Math.round(performance.memory.usedJSHeapSize / (1024 * 1024)));\n        w.invalidate();\n        setTimeout(update, 30);\n    }\n    update();\n}\nvar ProfilerDetails = (function () {\n    function ProfilerDetails(name, unitName, flags) {\n        this.data = new MonitorSamples(MonitorMaxSamples);\n        this.widget = new MonitorWidget(name, flags, unitName, this.data);\n        this.startTime = -1;\n    }\n    return ProfilerDetails;\n}());\nvar profilerInstances = {};\nvar CounterDetails = (function () {\n    function CounterDetails(name, interval) {\n        var _this = this;\n        this.data = interval === undefined ? new BasicCounter() : new SlidingCounter(interval);\n        this.widget = new CounterWidget(name, this.data);\n        this.data.onChange = function () {\n            _this.widget.invalidate();\n        };\n    }\n    return CounterDetails;\n}());\nvar counterInstances = {};\n/**\n * Initialize profiler and insert into container.\n */\nfunction initProfiler(name, flags) {\n    if (flags === void 0) { flags = 0; }\n    checkInit();\n    var profiler = profilerInstances[name];\n    if (profiler === void 0) {\n        profilerInstances[name] = profiler = new ProfilerDetails(name, \"ms\", flags);\n        container.appendChild(profiler.widget.element);\n    }\n}\n/**\n * Initialize counter and insert into container.\n */\nfunction initCounter(name, interval) {\n    checkInit();\n    var counter = counterInstances[name];\n    if (counter === void 0) {\n        counterInstances[name] = counter = new CounterDetails(name, interval);\n        container.appendChild(counter.widget.element);\n    }\n}\nfunction startProfile(name) {\n    var profiler = profilerInstances[name];\n    if (profiler !== void 0) {\n        profiler.startTime = performance.now();\n    }\n}\nfunction endProfile(name) {\n    var now = performance.now();\n    var profiler = profilerInstances[name];\n    if (profiler !== void 0 && profiler.startTime !== -1) {\n        profiler.data.addSample(now - profiler.startTime);\n        profiler.widget.invalidate();\n    }\n}\nfunction count(name, value) {\n    if (value === void 0) { value = 1; }\n    var counter = counterInstances[name];\n    if (counter !== void 0) {\n        counter.data.inc(value);\n    }\n}\n/**\n * lookup a profile by name\n * @param name the name of the profile to lookup\n */\nfunction getProfile(name) {\n    return profilerInstances[name];\n}\n/**\n * lookup a counter by name\n * @param name the name of the counter to lookup\n */\nfunction getCounter(name) {\n    return counterInstances[name];\n}\n\nexport { initPerfMonitor, startFPSMonitor, startMemMonitor, ProfilerDetails, CounterDetails, initProfiler, initCounter, startProfile, endProfile, count, getProfile, getCounter, MonitorSamplesResult, MonitorMaxSamples, MonitorSamples, BasicCounter, SlidingCounter, Widget, MonitorWidgetFlags, MonitorWidget, CounterWidget };\n","export function queryClassName(elapsed) {\n    if (elapsed > 0) {\n        if (elapsed >= 10.0) {\n            return \"Query elapsed warn_long\";\n        }\n        else if (elapsed >= 1.0) {\n            return \"Query elapsed warn\";\n        }\n        return \"Query elapsed short\";\n    }\n    return \"\";\n}\nexport function countClassName(count) {\n    if (count >= 20) {\n        return \"label label-important\";\n    }\n    else if (count >= 10) {\n        return \"label label-warning\";\n    }\n    return \"label label-success\";\n}\n","import { startFPSMonitor, startMemMonitor, initProfiler } from \"perf-monitor\";\nlet mutations = 0.5;\nlet N = 50;\nexport function getMutations() {\n    return mutations;\n}\nexport function getN() {\n    return N;\n}\nfunction parseQueryString(a) {\n    if (a.length === 0) {\n        return {};\n    }\n    const b = {};\n    for (let i = 0; i < a.length; ++i) {\n        const p = a[i].split(\"=\", 2);\n        if (p.length === 1) {\n            b[p[0]] = \"\";\n        }\n        else {\n            b[p[0]] = decodeURIComponent(p[1].replace(/\\+/g, \" \"));\n        }\n    }\n    return b;\n}\nexport function init() {\n    const qs = parseQueryString(window.location.search.substr(1).split(\"&\"));\n    if (qs[\"n\"] !== void 0) {\n        N = parseInt(qs[\"n\"], 10);\n    }\n    if (qs[\"m\"] !== void 0) {\n        mutations = parseFloat(qs[\"m\"]);\n    }\n    document.addEventListener(\"DOMContentLoaded\", () => {\n        startFPSMonitor();\n        startMemMonitor();\n        initProfiler(\"view update\");\n        const sliderContainer = document.createElement(\"div\");\n        sliderContainer.style.display = \"flex\";\n        const slider = document.createElement(\"input\");\n        slider.type = \"range\";\n        slider.style.marginBottom = \"10px\";\n        slider.style.marginTop = \"5px\";\n        const text = document.createElement(\"label\");\n        text.textContent = \"mutations : \" + (mutations * 100).toFixed(0) + \"%\";\n        slider.addEventListener(\"change\", (e) => {\n            mutations = Number.parseFloat(e.target.value) / 100;\n            text.textContent = \"mutations : \" + (mutations * 100).toFixed(0) + \"%\";\n        });\n        sliderContainer.appendChild(text);\n        sliderContainer.appendChild(slider);\n        document.body.insertBefore(sliderContainer, document.body.firstChild);\n    });\n}\n","function randomQuery() {\n    const elapsed = Math.random() * 15;\n    let query;\n    if (Math.random() < 0.1) {\n        query = \"vacuum\";\n    }\n    else if (Math.random() < 0.2) {\n        query = \"<IDLE> in transaction\";\n    }\n    else {\n        query = \"SELECT blah FROM something\";\n    }\n    return { elapsed, query };\n}\nfunction randomQueries() {\n    const queries = [];\n    const r = Math.floor((Math.random() * 10) + 1);\n    for (let i = 0; i < r; i++) {\n        queries.push(randomQuery());\n    }\n    return queries;\n}\nconst EMPTY_QUERY = { elapsed: 0, query: \"***\" };\nlet _nextId = 0;\nfunction createDB(name, id) {\n    if (id === void 0) {\n        id = _nextId++;\n    }\n    return { id, name, queries: randomQueries() };\n}\nexport function getTopFiveQueries(db) {\n    const qs = db.queries.slice(0, 5);\n    qs.sort((a, b) => a.elapsed - b.elapsed);\n    while (qs.length < 5) {\n        qs.push(EMPTY_QUERY);\n    }\n    return qs;\n}\nexport function createState(n) {\n    const state = [];\n    for (let i = 0; i < n; i++) {\n        state.push(createDB(\"cluster\" + (i + 1)));\n        state.push(createDB(\"cluster\" + (i + 1) + \" slave\"));\n    }\n    return state;\n}\nexport function randomUpdate(state, r) {\n    for (let i = 0; i < state.length; i++) {\n        if (Math.random() < r) {\n            const { id, name } = state[i];\n            state[i] = createDB(name, id);\n        }\n    }\n}\nexport function entryFormatElapsed(v) {\n    if (v === 0) {\n        return \"\";\n    }\n    if (v > 60) {\n        const minutes = Math.floor(v / 60);\n        const comps = (v % 60).toFixed(2).split(\".\");\n        const seconds = comps[0];\n        const ms = comps[1];\n        return minutes + \":\" + seconds + \".\" + ms;\n    }\n    return v.toFixed(2);\n}\n","import { _, withNextFrame, render, requestDirtyCheck, statelessComponent, component, useSelect, TrackByKey, key, } from \"ivi\";\nimport { div, span, table, tbody, tr, td } from \"ivi-html\";\nimport { startProfile, endProfile } from \"perf-monitor\";\nimport { queryClassName, countClassName } from \"./css\";\nimport { init, getN, getMutations } from \"./init\";\nimport { entryFormatElapsed, getTopFiveQueries, createState, randomUpdate } from \"./state\";\ninit();\nconst state = createState(getN());\nconst arrow = div(\"arrow\");\nconst Popover = statelessComponent((query) => (div(\"popover left\", _, [\n    div(\"popover-content\", _, query),\n    arrow,\n])));\nconst DatabaseList = component((c) => {\n    const getDB = useSelect(c, (idx) => state[idx]);\n    return (idx) => {\n        const db = getDB(idx);\n        const topFiveQueries = getTopFiveQueries(db);\n        const count = db.queries.length;\n        return tr(_, _, [\n            td(\"dbname\", _, db.name),\n            td(\"query-count\", _, span(countClassName(count), _, count)),\n            topFiveQueries.map((q) => (td(queryClassName(q.elapsed), _, [\n                entryFormatElapsed(q.elapsed),\n                Popover(q.query),\n            ]))),\n        ]);\n    };\n});\nconst Main = (dbs) => (table(\"table table-striped latest-data\", _, [\n    tbody(_, _, TrackByKey(dbs.map((db, i) => key(db.id, DatabaseList(i))))),\n]));\nconst container = document.getElementById(\"app\");\nwithNextFrame(() => { render(Main(state), container); })();\nfunction tick() {\n    randomUpdate(state, getMutations());\n    startProfile(\"view update\");\n    withNextFrame(requestDirtyCheck)();\n    endProfile(\"view update\");\n    setTimeout(tick, 0);\n}\nsetTimeout(tick, 0);\n"],"sourceRoot":""}