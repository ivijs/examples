{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:////home/void/w/ts/ivi/packages/ivi/src/vdom/operations.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/vdom/factories.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/core/shortcuts.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/core/token.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/core/box.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/core/error.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/core/noop.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/core/array.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/core/repeatable_task_list.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/dom/shortcuts.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/dom/namespaces.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/vdom/state.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/vdom/context.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/vdom/reconciler.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/vdom/root.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/scheduler/index.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/vdom/hooks.ts","webpack:////home/void/w/ts/ivi/packages/ivi-html/src/index.ts","webpack:////home/void/w/ts/ivi-examples/node_modules/perf-monitor/dist/es5/perf-monitor.js","webpack:///./src/init.ts","webpack:///./src/state.ts","webpack:///./src/main.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","createOpType","f","TRACK_BY_KEY","createValueOp","v","createDOMElementOp","operations_key","k","TrackByKey","items","elementFactory","tag","flags","htmlElementFactory","_","TASK_TOKEN","SELECT_TOKEN","UNMOUNT_TOKEN","box","ERROR_HANDLERS","error","catchError","fn","apply","arguments","e","forEach","h","NOOP","unorderedArrayDeleteByIndex","array","index","length","last","pop","runRepeatableTasks","tasks","getDescriptor","getOwnPropertyDescriptor","nodeProto","Node","shortcuts_elementProto","Element","doc","document","objectHasOwnProperty","nodeInsertBefore","insertBefore","nodeRemoveChild","removeChild","nodeCloneNode","replaceChild","cloneNode","elementSetAttribute","setAttribute","elementRemoveAttribute","setAttributeNS","removeAttribute","nodeSetTextContent","set","elementSetClassName","htmlElementGetStyle","HTMLElement","svgElementGetStyle","SVGElement","SVG_NAMESPACE","createStateNode","_nextNode","_deepStateFlags","context_n","setContext","_pushDeepState","_popDeepState","prev","current","getDOMNode","opState","_dirtyCheck","parentElement","moveNode","singleChild","state","deepState","_update","_moveNodes","children","_unmountWalk","u","_unmountRemove","_unmount","_mountText","op","node","createTextNode","_createElement","svg","tagName","createElementNS","createElement","_updateClassName","_updateAttrs","_mountObject","opType","deepStateFlags","prevState","_mount","Array","_mountFragment","childrenOps","newChildren","nextOp","nodeValue","opStateChildren","prevData","nextData","nextValue","_updateChildrenTrackByKeys","a","b","j","result","aEnd","bEnd","start","outer","pos","updated","aLength","bLength","sources","keyIndex","Map","seq","lis","slice","element","className","_updateStyle","style","bValue","setProperty","removeProperty","matchCount","keys","_updateAttr","next","ROOTS","findRoot","predicate","find","dirtyCheck","root","container","run","_flags","_frameStartTime","_clock","_resolvedPromise","Promise","resolve","_microtasks","_mutationEffects","_layoutEffects","_beforeMutations","_afterMutations","withSchedulerTick","inner","runMicrotasks","clock","withNextFrame","time","_handleNextFrame","_handleNextFrameSync","requestNextFrame","task","push","then","requestAnimationFrame","requestDirtyCheck","render","useSelect","component","selector","areEqual","props","lastChecked","prevSelector","hook","div","span","table","tbody","td","tr","extendStatics","MonitorWidgetFlags","MonitorMaxSamples","MonitorSamplesResult","min","max","mean","this","MonitorSamples","maxSamples","samples","_i","addSample","each","calc","sum","frameTasks","rafId","__extends","setPrototypeOf","__proto__","__","constructor","MonitorGraphHeight","MonitorGraphWidth","Widget","_this","_sync","sync","_dirty","cssText","invalidate","Error","MonitorWidget","_super","unitName","label","textContent","text","HideMin","minText","appendChild","HideMax","maxText","HideMean","meanText","HideLast","lastText","HideGraph","canvas","width","height","ctx","getContext","scale","RoundValues","toFixed","Math","round","toString","fillStyle","fillRect","perf_monitor_container","CounterWidget","counter","checkInit","body","startFPSMonitor","data","w","fps","update","now","startMemMonitor","undefined","performance","memory","usedJSHeapSize","setTimeout","ProfilerDetails","widget","startTime","profilerInstances","initProfiler","profiler","endProfile","mutations","N","parseQueryString","split","decodeURIComponent","replace","randomQuery","query","elapsed","random","randomQueries","queries","floor","EMPTY_QUERY","_nextId","createDB","id","getTopFiveQueries","db","qs","sort","randomUpdate","entryFormatElapsed","minutes","comps","padStart","window","location","search","substr","parseInt","parseFloat","addEventListener","sliderContainer","display","slider","type","marginBottom","marginTop","Number","target","firstChild","init","main_state","createState","arrow","Popover","statelessComponent","QueryCell","DatabaseList","getDB","idx","count","map","factories_component","Main","dbs","main_container","getElementById","tick"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","import { EventHandler } from \"../events/event_handler\";\nimport { NodeFlags } from \"./node_flags\";\nimport { ElementProtoDescriptor } from \"./element_proto\";\nimport { ComponentDescriptor, StatelessComponentDescriptor } from \"./component\";\nimport { ContextDescriptor, ContextState } from \"./context\";\n\n/**\n * Key is an object that is used by TrackByKey operations to track operations.\n *\n * @typeparam K Key type.\n * @typeparam V Value type.\n */\nexport interface Key<K, V> {\n  /**\n   * Key.\n   */\n  readonly k: K;\n  /**\n   * Value.\n   */\n  readonly v: V;\n}\n\n/**\n * Operation type.\n */\nexport interface OpType {\n  /**\n   * See {@link NodeFlags} for details.\n   */\n  readonly f: NodeFlags;\n  /**\n   * Operation type descriptor.\n   */\n  readonly d:\n  | StatelessComponentDescriptor\n  | ComponentDescriptor\n  | ElementProtoDescriptor\n  | ContextDescriptor\n  | string\n  | null;\n}\n\n/**\n * createOpType creates {@link OpType} instances.\n *\n * @param f See {@link NodeFlags} for details.\n * @param d Operation type descriptor.\n * @returns {@link OpType} instance.\n */\nexport const createOpType = (\n  f: NodeFlags,\n  d: StatelessComponentDescriptor | ComponentDescriptor | ElementProtoDescriptor | ContextDescriptor | string | null,\n): OpType => ({ f, d });\n\n/**\n * OpType for Events nodes.\n */\nexport const EVENTS = createOpType(NodeFlags.Events, null);\n\n/**\n * OpType for Context state nodes.\n */\nexport const SET_CONTEXT_STATE = createOpType(NodeFlags.Context | NodeFlags.SetContextState, null);\n\n/**\n * OpType for TrackByKey nodes.\n */\nexport const TRACK_BY_KEY = createOpType(NodeFlags.TrackByKey, null);\n\n/**\n * Operation with a value.\n *\n * @typeparam T Operation data type.\n */\nexport interface ValueOp<T = any> {\n  /**\n   * Operation type.\n   */\n  readonly t: OpType;\n  /**\n   * Value.\n   */\n  readonly v: T;\n}\n\n/**\n * Container operation.\n *\n * @typeparam T Operation data type.\n */\nexport interface ContainerOp<T = any> extends ValueOp<T> {\n  /**\n   * Children.\n   */\n  readonly c: Op;\n}\n\n/**\n * DOM Element operation.\n *\n * @typeparam T Operation data type.\n */\nexport interface DOMElementOp<T = any> extends ContainerOp<T | undefined> {\n  /**\n   * Class name.\n   */\n  readonly n: string | undefined;\n}\n\n/**\n * Events operation.\n */\nexport type EventsOp = ContainerOp<EventHandler>;\n\n/**\n * Context operation.\n */\nexport type ContextOp<T = any> = ContainerOp<T>;\n\n/**\n * Set context state operation.\n */\nexport type SetContextStateOp = ContainerOp<ContextState>;\n\n/**\n * TrackByKey operation.\n */\nexport type TrackByKeyOp<K = any, V = any> = ValueOp<Key<K, V>[]>;\n\n/**\n * Component operation.\n */\nexport type ComponentOp<T = any> = ValueOp<T>;\n\n/**\n * Operation node.\n */\nexport type OpNode =\n  | ValueOp\n  | ContainerOp\n  | DOMElementOp\n  | EventsOp\n  | ContextOp\n  | SetContextStateOp\n  | TrackByKeyOp\n  | ComponentOp;\n\n/**\n * Operation.\n */\nexport type Op = string | number | OpNode | OpArray | null;\n\n/**\n * Recursive operation array.\n */\nexport interface OpArray extends Array<Op> { }\n\n/**\n * createValueOp creates a {@link ValueOp} instance.\n *\n * @typeparam T Operation data type.\n * @param t Operation type.\n * @param v Operation value.\n * @returns {@link ValueOp} instance.\n */\nexport const createValueOp = <T>(t: OpType, v: T): ValueOp<T> => ({ t, v });\n\n/**\n * createContainerOp creates a {@link ContainerOp} instance.\n *\n * @typeparam T Operation data type.\n * @param t Operation type.\n * @param v Operation value.\n * @param c Operation children.\n * @returns {@link ContainerOp} instance.\n */\nexport const createContainerOp = <T>(t: OpType, v: T, c: Op): ContainerOp<T> => ({ t, v, c });\n\n/**\n * createDOMElementOp creates a {@link DOMElementOp} instance.\n *\n * @typeparam T Operation data type.\n * @param t Operation type.\n * @param v Operation value.\n * @param c Operation children.\n * @param n Class name.\n * @returns {@link DOMElementOp} instance.\n */\nexport const createDOMElementOp = <T>(\n  t: OpType,\n  v: T,\n  c: Op,\n  n: string | undefined,\n): DOMElementOp<T> => ({ t, v, c, n });\n\n/**\n * Operation factory for event handlers.\n *\n * @example\n *\n *     render(\n *       Events(onClick(() => { console.log(\"clicked\"); }),\n *         ChildComponent(),\n *       ),\n *       DOMContainer,\n *     );\n *\n * @param v Event handlers.\n * @param c Children operation nodes.\n * @returns Events handler operation.\n */\nexport const Events = (\n  v: EventHandler,\n  c: Op,\n): EventsOp => createContainerOp(EVENTS, v, c);\n\n/**\n * Operation factory for set context state operation.\n *\n * @param v Context state.\n * @param c Children operation nodes.\n * @returns Set context state operation.\n */\nexport const SetContextState = (\n  v: ContextState,\n  c: Op,\n): SetContextStateOp => createContainerOp(SET_CONTEXT_STATE, v, c);\n\n/**\n * key creates a {@link Key} instance.\n *\n * @typeparam K Key type.\n * @typeparam V Value type.\n * @param k Key.\n * @param v Value.\n * @returns {@link Key} instance.\n */\nexport const key = <K, V>(k: K, v: V): Key<K, V> => ({ k, v });\n\n/**\n * Operation factory for track by key nodes.\n *\n * @example\n *\n *     const items = [1, 2, 3];\n *     render(\n *       TrackByKey(items.map((item) => key(item, div(_, _, item))),\n *       DOMContainer,\n *     );\n *\n * @typeparam K Key type.\n * @param items Keyed operations.\n * @returns Track by key operation.\n */\nexport const TrackByKey = process.env.NODE_ENV !== \"production\" ?\n  <T>(items: Key<T, Op>[]) => {\n    const keys = new Set<T>();\n    for (let i = 0; i < items.length; i++) {\n      const { k } = items[i];\n      if (keys.has(k)) {\n        throw new Error(`Invalid key, found duplicated key: ${k}`);\n      }\n      keys.add(k);\n    }\n    return createValueOp(TRACK_BY_KEY, items);\n  } :\n  /* istanbul ignore next */ <T>(items: Key<T, Op>[]) => createValueOp(TRACK_BY_KEY, items);\n","import { checkElement } from \"../debug/element\";\nimport { NodeFlags } from \"./node_flags\";\nimport { Op, ValueOp, DOMElementOp, createOpType, createDOMElementOp, createValueOp } from \"./operations\";\nimport { Component } from \"./component\";\n\n/**\n * elementFactory creates a factory for DOM elements.\n *\n * @param tag HTML element tag name.\n * @param flags Node flags.\n * @returns HTML element operation factory.\n */\nexport function elementFactory<T, U>(tag: string, flags: NodeFlags) {\n  const t = createOpType(flags, tag);\n  return process.env.NODE_ENV !== \"production\" ?\n    (n?: string, v?: T, c: Op = null) => {\n      checkElement(tag, v, (flags & NodeFlags.Svg) !== 0);\n      return createDOMElementOp(t, v, c, n);\n    } :\n    /* istanbul ignore next */(n?: string, v?: T, c: Op = null) => createDOMElementOp(t, v, c, n);\n}\n\n/**\n * htmlElementFactory creates a factory for HTML elements.\n *\n * @param tag HTML element tag name.\n * @returns HTML element operation factory.\n */\nexport const htmlElementFactory: <T, U>(tag: string) => (\n  className?: string,\n  attrs?: T,\n  children?: Op,\n) => DOMElementOp<T | undefined> = (tag: string) => elementFactory(tag, NodeFlags.Element);\n\n/**\n * svgElementFactory creates a factory for SVG elements.\n *\n * @param tag SVG element tag name.\n * @returns SVG element operation factory.\n */\nexport const svgElementFactory: <T, U>(tag: string) => (\n  className?: string,\n  attrs?: T,\n  children?: Op,\n) => DOMElementOp<T | undefined> = (tag: string) => elementFactory(tag, NodeFlags.Element | NodeFlags.Svg);\n\n/**\n * `elementProto()` creates a factory that produces elements with predefined attributes.\n *\n * @example\n *\n *     const DivWithIdAttribute = elementProto(div(_, { id: \"predefined-id\" }));\n *\n *     render(\n *       DivWithIdAttribute(\"class-name\", { title: \"Title\" }, \"Hello World\"),\n *       document.getElementById(\"app\")!,\n *     );\n *\n * @param p Element prototype.\n * @returns Factory that produces elements with predefined attributes.\n */\nexport function elementProto<T>(p: DOMElementOp<T>) {\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== \"production\") {\n    if (p.c !== null) {\n      throw new Error(`Invalid OpNode, element prototypes can't have any children`);\n    }\n    checkElement(p.t.d as string, p.v, (p.t.f & NodeFlags.Svg) !== 0);\n  }\n  const t = createOpType(p.t.f | NodeFlags.ElementProto, { n: null, p });\n  return (n?: string, v?: T, c: Op = null) => createDOMElementOp(t, v, c, n);\n}\n\n/**\n * component creates a factory that produces component nodes.\n *\n * @example\n *\n *     const A = component<string>(() => {\n *       let _text;\n *       const click = onClick(() => { console.log(_text); });\n *\n *       return (text) => (\n *         _text = text,\n *         Events(click,\n *           button(_, _, \"Click Me\"),\n *         )\n *       );\n *     });\n *\n * @param c Component function.\n * @returns Factory that produces component nodes.\n */\nexport function component(\n  c: (c: Component) => () => Op,\n): () => ValueOp<undefined>;\n\n/**\n * component creates a factory that produces component nodes.\n *\n * @example\n *\n *     const A = component<string>(() => {\n *       let _text;\n *       const click = onClick(() => { console.log(_text); });\n *\n *       return (text) => (\n *         _text = text,\n *         Events(click,\n *           button(_, _, \"Click Me\"),\n *         )\n *       );\n *     });\n *\n * @param c Component function.\n * @param areEqual `areEqual` function.\n * @returns Factory that produces component nodes.\n */\nexport function component<P>(\n  c: (c: Component) => (props: P) => Op,\n  areEqual?: undefined extends P ? undefined : (prev: P, next: P) => boolean,\n): undefined extends P ? (props?: P) => ValueOp<P> : (props: P) => ValueOp<P>;\n\n/**\n * component creates a factory that produces component nodes.\n *\n * @example\n *\n *     const A = component<string>(() => {\n *       let _text;\n *       const click = onClick(() => { console.log(_text); });\n *\n *       return (text) => (\n *         _text = text,\n *         Events(click,\n *           button(_, _, \"Click Me\"),\n *         )\n *       );\n *     });\n *\n * @param c Component function.\n * @param e `areEqual` function.\n * @returns Factory that produces component nodes.\n */\nexport function component<P>(\n  c: (c: Component) => (props: P) => Op,\n  e?: (prev: P, next: P) => boolean,\n): (props: P) => ValueOp<P> {\n  const type = createOpType(NodeFlags.Component | NodeFlags.Stateful | NodeFlags.DirtyCheck, { c, e });\n  return (props: P) => createValueOp(type, props);\n}\n\n/**\n * statelessComponent creates an factory that produces stateless components nodes.\n *\n * @example\n *\n *     const A = statelessComponent<string>((text) => div(_, _, text));\n *\n * @param update Update function.\n * @returns Factory that produces stateless component nodes.\n */\nexport function statelessComponent(\n  update: () => Op,\n): () => ValueOp<undefined>;\n\n/**\n * statelessComponent creates an factory that produces stateless components nodes.\n *\n * @example\n *\n *     const A = statelessComponent<string>((text) => div(_, _, text));\n *\n * @param update Update function.\n * @param areEqual `areEqual` function.\n * @returns Factory that produces stateless component nodes.\n */\nexport function statelessComponent<P>(\n  update: (props: P) => Op,\n  areEqual?: undefined extends P ? undefined : (prev: P, next: P) => boolean,\n): undefined extends P ? (props?: P) => ValueOp<P> : (props: P) => ValueOp<P>;\n\n/**\n * statelessComponent creates an factory that produces stateless components nodes.\n *\n * @example\n *\n *     const A = statelessComponent<string>((text) => div(_, _, text));\n *\n * @param c Update function.\n * @param e `areEqual` function.\n * @returns Factory that produces stateless component nodes.\n */\nexport function statelessComponent<P>(\n  c: (props: P) => Op,\n  e?: undefined extends P ? undefined : (prev: P, next: P) => boolean,\n): (props: P) => ValueOp<P> {\n  const type = createOpType(NodeFlags.Component, { c, e });\n  return (props: P) => createValueOp(type, props);\n}\n","/**\n * Shortcut for an `undefined` value.\n */\nexport const _ = void 0;\n","export interface TaskToken {\n  readonly $$label?: \"ivi-task-token\";\n}\n\nexport interface SelectToken {\n  readonly $$label?: \"ivi-select-token\";\n}\n\nexport interface UnmountToken {\n  readonly $$label?: \"ivi-unmount-token\";\n}\n\n/**\n * Task token.\n */\nexport const TASK_TOKEN: TaskToken = (\n  process.env.NODE_ENV !== \"production\" ? Object.freeze({}) : /* istanbul ignore next */{}\n);\n\n/**\n * Select token.\n */\nexport const SELECT_TOKEN: SelectToken = (\n  process.env.NODE_ENV !== \"production\" ? Object.freeze({}) : /* istanbul ignore next */{}\n);\n\n/**\n * Unmount token.\n */\nexport const UNMOUNT_TOKEN: UnmountToken = (\n  process.env.NODE_ENV !== \"production\" ? Object.freeze({}) : /* istanbul ignore next */{}\n);\n\n/**\n * Empty object.\n */\nexport const EMPTY_OBJECT = process.env.NODE_ENV !== \"production\" ? Object.freeze({}) : /* istanbul ignore next */{};\n\n/**\n * Empty array.\n */\nexport const EMPTY_ARRAY = process.env.NODE_ENV !== \"production\" ? Object.freeze([]) : /* istanbul ignore next */[];\n","/**\n * Boxed value.\n *\n * @typeparam T Value type.\n */\nexport interface Box<T> {\n  v: T;\n}\n\n/**\n * box creates a boxed value.\n *\n * @typeparam T Value type.\n * @param v Value.\n * @returns Boxed value.\n */\nexport const box = <T>(v: T) => ({ v });\n","const ERROR_HANDLERS: Array<(e: any) => void> = [];\nlet error = false;\n\n/**\n * addErrorHandler adds an error handler for errors catched by functions decorated with `catchError()`.\n *\n * @param handler error handler.\n */\nexport function addErrorHandler(handler: (e: any) => void): void {\n  ERROR_HANDLERS.push(handler);\n}\n\n/**\n * catchError is a decorator that catches exceptions and invokes error handlers registered with `addErrorHandler()`.\n *\n * @noinline\n * @throws\n * @param fn - Function to decorate\n * @returns function decorated with a catchError\n */\nexport function catchError<T>(fn: (...args: any[]) => T): (...args: any[]) => T;\nexport function catchError<T>(fn: Function): (...args: any[]) => T {\n  return function () {\n    if (!error) {\n      try {\n        return fn.apply(void 0, arguments);\n      } catch (e) {\n        error = true;\n        ERROR_HANDLERS.forEach((h) => { h(e); });\n        throw e;\n      }\n    }\n  };\n}\n","/**\n * NOOP function.\n */\nexport const NOOP = () => { /**/ };\n\n/**\n * NOOP_FALSE function always returns `false` value.\n *\n * @returns `false` value.\n */\nexport const NOOP_FALSE = () => false;\n\n/**\n * NOOP_TRUE function always returns `true` value.\n *\n * @returns `true` value.\n */\nexport const NOOP_TRUE = () => true;\n","/**\n * append pushes item to an array and automatically creates a new array when it doesn't exist.\n *\n * @typeparam T Item type.\n * @param array Array.\n * @param item Item to append.\n * @returns Array.\n */\nexport const append = <T>(array: T[] | null, item: T) => array === null ? [item] : (array.push(item), array);\n\n/**\n * unorderedArrayDeleteByIndex deletes item from an array with O(1) complexity.\n *\n * It swaps item at `index` position with the last item and removes the last one.\n *\n * @typeparam T Item type.\n * @param array Array.\n * @param index Index of an item to delete.\n */\nexport function unorderedArrayDeleteByIndex<T>(array: T[], index: number): void {\n  const length = array.length - 1;\n  const last = array.pop();\n  if (index !== length) {\n    array[index] = last!;\n  }\n}\n\n/**\n * unorderedArrayDelete deletes item from an array with O(1) complexity.\n *\n * It swaps item at `index` position with the last item and deletes the last one.\n *\n * @typeparam T Item type.\n * @param array Array.\n * @param item Item to delete.\n */\nexport function unorderedArrayDelete<T>(array: T[], item: T): void {\n  const index = array.indexOf(item);\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== \"production\") {\n    if (index === -1) {\n      throw new Error(`Failed to delete an item from an array, item doesn't exist in the array`);\n    }\n  }\n  unorderedArrayDeleteByIndex(array, index);\n}\n","import { unorderedArrayDeleteByIndex } from \"./array\";\n\n/**\n * RepeatableTaskList is a data structure for tasks that will be repeated until they return `true` value.\n */\nexport type RepeatableTaskList = Array<() => boolean | void>;\n\n/**\n * runRepeatableTasks runs repeatable tasks.\n *\n * @param tasks Repeatable tasks.\n */\nexport function runRepeatableTasks(tasks: RepeatableTaskList): void {\n  for (let i = 0; i < tasks.length; ++i) {\n    if (tasks[i]() === true) {\n      unorderedArrayDeleteByIndex(tasks, i--);\n    }\n  }\n}\n","/**\n * Shortcuts for DOM methods and properties are used to reduce megamorphic callsites in the codebase.\n *\n * In many synthetic microbenchmarks it is most likely will be slower, unless synthetic benchmark is implemented with\n * many different html/svg elements. But it is definitely should make it faster in complex real applications.\n *\n * Since Chrome 74, issue with native accessors is finally fixed: https://bugs.chromium.org/p/v8/issues/detail?id=8820\n */\n\n/**\n * `Object.getOwnPropertyDescriptor(o, p)`\n *\n * @param o Object.\n * @param p Property name.\n * @returns Property Descriptor.\n */\nconst getDescriptor = (o: any, p: string | number | symbol) => Object.getOwnPropertyDescriptor(o, p);\n\nconst nodeProto = process.env.IVI_TARGET === \"ssr\" ? void 0 : Node.prototype;\nconst elementProto = process.env.IVI_TARGET === \"ssr\" ? void 0 : Element.prototype;\n\n/**\n * Shortcut for a `Document`.\n */\nexport const doc = (process.env.IVI_TARGET === \"ssr\" ? void 0 : document) as Document;\n\n/**\n * Shortcut for an `Object.prototype.hasOwnProperty`.\n */\nexport const objectHasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Shortcut for a `Node.prototype.insertBefore`.\n */\nexport const nodeInsertBefore = process.env.IVI_TARGET === \"ssr\" ? void 0 : nodeProto!.insertBefore;\n\n/**\n * Shortcut for a `Node.prototype.removeChild`.\n */\nexport const nodeRemoveChild = process.env.IVI_TARGET === \"ssr\" ? void 0 : nodeProto!.removeChild;\n\n/**\n * Shortcut for a `Node.prototype.replaceChild`.\n */\nexport const nodeReplaceChild = process.env.IVI_TARGET === \"ssr\" ? void 0 : nodeProto!.replaceChild;\n\n/**\n * Shortcut for a `Node.prototype.cloneNode`.\n */\nexport const nodeCloneNode = process.env.IVI_TARGET === \"ssr\" ? void 0 : nodeProto!.cloneNode;\n\n/**\n * Shortcut for an `Element.prototype.setAttribute`.\n */\nexport const elementSetAttribute = process.env.IVI_TARGET === \"ssr\" ? void 0 : elementProto!.setAttribute;\n\n/**\n * Shortcut for an `Element.prototype.setAttributeNS`.\n */\nexport const elementSetAttributeNS = process.env.IVI_TARGET === \"ssr\" ? void 0 : elementProto!.setAttributeNS;\n\n/**\n * Shortcut for an `Element.prototype.removeAttribute`.\n */\nexport const elementRemoveAttribute = process.env.IVI_TARGET === \"ssr\" ? void 0 : elementProto!.removeAttribute;\n\n/**\n * Shortcut for a `Node.textContent = value`.\n */\nexport const nodeSetTextContent = (\n  process.env.IVI_TARGET === \"ssr\" ? void 0 :\n    getDescriptor(nodeProto, \"textContent\")!.set\n);\n\n/**\n * Shortcut for an `Element.className = value`.\n */\nexport const elementSetClassName = (\n  process.env.IVI_TARGET === \"ssr\" ? void 0 :\n    getDescriptor(elementProto, \"className\")!.set\n);\n\n/**\n * Shortcut for a `HTMLElement.style`.\n */\nexport const htmlElementGetStyle = (\n  process.env.IVI_TARGET === \"ssr\" ? void 0 :\n    getDescriptor(HTMLElement.prototype, \"style\")!.get\n);\n\n/**\n * Shortcut for a `SVGElement.style`.\n */\nexport const svgElementGetStyle = (\n  process.env.IVI_TARGET === \"ssr\" ? void 0 :\n    getDescriptor(SVGElement.prototype, \"style\")!.get\n);\n","export const SVG_NAMESPACE = \"http://www.w3.org/2000/svg\";\nexport const XLINK_NAMESPACE = \"http://www.w3.org/1999/xlink\";\nexport const XML_NAMESPACE = \"http://www.w3.org/XML/1998/namespace\";\n","import { NodeFlags } from \"./node_flags\";\nimport { Op } from \"./operations\";\n\n/**\n * Operation state.\n *\n * @typeparam T Internal state type.\n */\nexport interface OpState<T = any> {\n  /**\n   * Operation.\n   */\n  o: Op;\n  /**\n   * See {@link NodeFlags} for details.\n   */\n  f: NodeFlags;\n  /**\n   * State for children operations.\n   */\n  c: OpState | Array<OpState | null> | null;\n  /**\n   * Current state.\n   */\n  s: T;\n}\n\n/**\n * createStateNode creates a {@link StateNode} instance.\n *\n * @param op Operation.\n * @returns {@link StateNode} instance.\n */\nexport const createStateNode = (o: Op): OpState => (\n  { o, f: 0, c: null, s: null }\n);\n","import { createOpType, createContainerOp, OpType, ContextOp, Op } from \"./operations\";\nimport { NodeFlags } from \"./node_flags\";\n\n/**\n * Context descriptor.\n */\nexport interface ContextDescriptor<T = any> {\n  /**\n   * Retrieves context value.\n   */\n  get(): T;\n  /**\n   * Creates a context operation.\n   */\n  set(value: T, children: Op): ContextOp<T>;\n}\n\n/**\n * Context state.\n */\nexport interface ContextState<T = any> {\n  /**\n   * Next state.\n   */\n  readonly n: ContextState | null;\n  /**\n   * Descriptor.\n   */\n  readonly d: ContextDescriptor<T>;\n  /**\n   * Context value.\n   */\n  v: T;\n}\n\n/**\n * Current context.\n */\nlet n: ContextState | null = null;\n\n/**\n * Used for detecting invalid `ContextDescriptor()` invocations in DEBUG mode.\n */\nlet contextEnabled = false;\n\n/**\n * Enable checking for invalid `context()` invocations in DEBUG mode.\n */\nexport function enableContext() {\n  contextEnabled = true;\n}\n\n/**\n * Disable checking for invalid `context()` invocations in DEBUG mode.\n */\nexport function disableContext() {\n  contextEnabled = false;\n}\n\n/**\n * Reset current context.\n */\nexport function resetContext() {\n  n = null;\n}\n\n/**\n * pushContext creates a new context state and pushes it to the context stack.\n *\n * @param d Context descriptor.\n * @param v Context value.\n * @returns New {@link ContextState}.\n */\nexport function pushContext<T = any>(d: ContextDescriptor<T>, v: T): ContextState<T> {\n  return n = { n, d, v };\n}\n\n/**\n * getContext retrieves current context.\n *\n * @returns current context.\n */\nexport function getContext(): ContextState | null {\n  return n;\n}\n\n/**\n * setContext assigns current context.\n *\n * Should be executed before going deeper into context node.\n *\n * @param c Current context.\n */\nexport function setContext(c: ContextState | null): ContextState | null {\n  return n = c;\n}\n\n/**\n * contextValue creates a context descriptor.\n *\n * @example\n *\n *     const { set: StoreContext, get: getStore } = contextValue<Store>();\n *     const Component = component((c) => {\n *       const getValue = useSelect(c, () => getStore().value);\n *       return () => getValue();\n *     });\n *     render(\n *       StoreContext(store,\n *         Component(),\n *       ),\n *       container,\n *     );\n *\n * @returns {@link ContextDescriptor}\n */\nexport function contextValue<T = any>(): ContextDescriptor<T> {\n  let type: OpType;\n  const d = {\n    get: (): T | void => {\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== \"production\") {\n        if (!contextEnabled) {\n          throw Error(\"Invalid context invocation\");\n        }\n      }\n\n      let next = n;\n      while (next !== null) {\n        if (next.d === d) {\n          return next.v;\n        }\n        next = next.n;\n      }\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== \"production\") {\n        throw Error(\"Unable to find context value\");\n      }\n    },\n    set: (v: T, c: Op) => createContainerOp(type, v, c),\n  };\n  type = createOpType(NodeFlags.Context, d as ContextDescriptor<T>);\n  return d as ContextDescriptor<T>;\n}\n","import { SELECT_TOKEN, UNMOUNT_TOKEN } from \"../core\";\nimport {\n  doc, objectHasOwnProperty,\n  nodeInsertBefore, nodeRemoveChild, elementSetAttribute, nodeCloneNode, nodeSetTextContent, elementRemoveAttribute,\n  elementSetClassName, htmlElementGetStyle, svgElementGetStyle,\n} from \"../dom/shortcuts\";\nimport { SVG_NAMESPACE } from \"../dom/namespaces\";\nimport { CSSStyleProps } from \"../dom/style\";\nimport { NodeFlags } from \"./node_flags\";\nimport { AttributeDirective } from \"./attribute_directive\";\nimport { OpNode, DOMElementOp, EventsOp, ContextOp, TrackByKeyOp, ComponentOp, OpArray, Key, Op } from \"./operations\";\nimport { OpState, createStateNode } from \"./state\";\nimport { ElementProtoDescriptor } from \"./element_proto\";\nimport { ComponentDescriptor, ComponentHooks, StatelessComponentDescriptor } from \"./component\";\nimport { setContext, pushContext, ContextDescriptor, ContextState } from \"./context\";\n\nlet _nextNode!: Node | null;\nlet _deepStateFlags!: NodeFlags;\n\nexport function _resetState(): void {\n  _nextNode = null;\n  _deepStateFlags = 0;\n}\n\nfunction _pushDeepState(): NodeFlags {\n  const s = _deepStateFlags;\n  _deepStateFlags = 0;\n  return s;\n}\n\nconst _popDeepState = (prev: NodeFlags, current: NodeFlags): NodeFlags => (\n  current |= _deepStateFlags,\n  _deepStateFlags |= prev,\n  current\n);\n\n/**\n * VisitNodesDirective controls the traversal algorithm.\n */\nexport const enum VisitNodesDirective {\n  /**\n   * Continue traversing the tree.\n   */\n  Continue = 0,\n  /**\n   * Stops immediately.\n   */\n  StopImmediate = 1,\n  /**\n   * Stops traversing through children nodes.\n   */\n  Stop = 1 << 1,\n}\n\n/**\n * visitNodes traverses the operation state tree and invokes `visitor` function for each state node.\n *\n * @param opState State node.\n * @param visitor Visitor function.\n * @returns {@link VisitNodesFlags}\n */\nexport function visitNodes(opState: OpState, visitor: (opState: OpState) => VisitNodesDirective): VisitNodesDirective;\nexport function visitNodes(\n  opState: OpState | null,\n  visitor: (opState: OpState) => VisitNodesDirective,\n): VisitNodesDirective {\n  let i = visitor(opState!);\n  if (i !== VisitNodesDirective.Continue) {\n    return (i & VisitNodesDirective.StopImmediate);\n  }\n\n  const { f, c } = opState!;\n  if ((f & (NodeFlags.Fragment | NodeFlags.TrackByKey)) !== 0) {\n    for (i = 0; i < (c as Array<OpState | null>).length; i++) {\n      if (\n        (opState = (c as Array<OpState | null>)[i]) !== null &&\n        (visitNodes(opState, visitor) & VisitNodesDirective.StopImmediate) !== 0\n      ) {\n        return VisitNodesDirective.StopImmediate;\n      }\n    }\n  } else if (c !== null) {\n    return visitNodes(c as OpState, visitor);\n  }\n  return VisitNodesDirective.Continue;\n}\n\n/**\n * getDOMNode retrieves closest DOM node from the {@link OpState} instance.\n *\n * @param opState State node.\n * @returns DOM node.\n */\nexport function getDOMNode(opState: OpState): Node | null;\nexport function getDOMNode(opState: OpState | Array<OpState | null> | null): Node | null {\n  let i = (opState as OpState).f;\n  let c: OpState | null;\n  if ((i & (NodeFlags.Element | NodeFlags.Text)) === 0) {\n    opState = (opState as OpState).c;\n    if ((i & (NodeFlags.Fragment | NodeFlags.TrackByKey)) !== 0) {\n      for (i = 0; i < (opState as Array<OpState | null>).length; i++) {\n        if ((c = (opState as Array<OpState | null>)[i]) !== null) {\n          return getDOMNode(c);\n        }\n      }\n      return null;\n    }\n    if (opState === null) {\n      return null;\n    }\n    return getDOMNode(opState as OpState);\n  }\n  return (opState as OpState).s as Node;\n}\n\nexport function _dirtyCheck(\n  parentElement: Element,\n  opState: OpState,\n  moveNode: boolean,\n  singleChild: boolean,\n): void {\n  const f = opState.f;\n  let state;\n  let deepState;\n  let c;\n  let i;\n\n  if ((f & NodeFlags.Component) !== 0) {\n    state = opState.s as ComponentHooks;\n    c = opState.c as OpState | null;\n    deepState = _pushDeepState();\n    if (\n      ((f & NodeFlags.Stateful) !== 0) && (\n        ((f & NodeFlags.Dirty) !== 0) ||\n        (state.s !== null && state.s(SELECT_TOKEN) === true)\n      )\n    ) {\n      opState.c = _update(\n        parentElement,\n        c,\n        state.r!((opState.o as ComponentOp).v),\n        moveNode,\n        singleChild,\n      );\n    } else if ((f & NodeFlags.DeepStateDirtyCheck) !== 0) {\n      _dirtyCheck(parentElement, c as OpState, moveNode, singleChild);\n    } else {\n      if (moveNode === true) {\n        _moveNodes(parentElement, opState);\n      } else {\n        _nextNode = getDOMNode(opState);\n      }\n    }\n    opState.f = (opState.f & NodeFlags.SelfFlags) | _deepStateFlags;\n    _deepStateFlags |= deepState | ((opState.f & NodeFlags.DeepStateFlags) << NodeFlags.DeepStateShift);\n  } else if ((f & NodeFlags.DeepStateDirtyCheck) !== 0) {\n    // Checking for `children === null` is unnecessary, `DeepStateDirtyCheck` flag guarantees that element should\n    // have children nodes.\n    deepState = _pushDeepState();\n    c = opState.c as OpState | Array<OpState | null>;\n    if ((f & NodeFlags.Element) !== 0) {\n      state = opState.s as Node;\n      if (moveNode === true) {\n        nodeInsertBefore!.call(parentElement, state, _nextNode);\n      }\n      _nextNode = null;\n      _dirtyCheck(state as Element, c as OpState, false, true);\n      _nextNode = state;\n    } else if ((f & (NodeFlags.Fragment | NodeFlags.TrackByKey)) !== 0) {\n      i = (c as Array<OpState | null>).length;\n      while (i > 0) {\n        if ((state = (c as Array<OpState | null>)[--i]) !== null) {\n          _dirtyCheck(parentElement, state, moveNode, false);\n        }\n      }\n    } else if ((f & NodeFlags.Events) !== 0) {\n      _dirtyCheck(parentElement, c as OpState, moveNode, singleChild);\n    } else {  // ((f & NodeFlags.Context) !== 0)\n      state = setContext(opState.s);\n      _dirtyCheck(parentElement, c as OpState, moveNode, singleChild);\n      setContext(state);\n    }\n    opState.f = _popDeepState(deepState, opState.f);\n  } else {\n    if (moveNode === true) {\n      _moveNodes(parentElement, opState);\n    } else {\n      _nextNode = getDOMNode(opState);\n    }\n  }\n}\n\nfunction _moveNodes(parentElement: Element, opState: OpState) {\n  const flags = opState.f;\n  let children;\n  let c;\n  let i;\n  if ((flags & (NodeFlags.Element | NodeFlags.Text)) !== 0) {\n    c = opState.s as Node;\n    nodeInsertBefore!.call(parentElement, c, _nextNode);\n    _nextNode = c;\n  } else {\n    children = opState.c;\n    if ((flags & (NodeFlags.Fragment | NodeFlags.TrackByKey)) !== 0) {\n      i = (children as Array<OpState | null>).length;\n      while (i > 0) {\n        if ((c = (children as Array<OpState | null>)[--i]) !== null) {\n          _moveNodes(parentElement, c);\n        }\n      }\n    } else if (children !== null) {\n      _moveNodes(parentElement, children as OpState);\n    }\n  }\n}\n\nfunction _unmountWalk(opState: OpState): void {\n  const flags = opState.f;\n  let children;\n  let i;\n  let v;\n\n  if ((flags & NodeFlags.DeepStateUnmount) !== 0) {\n    if ((children = opState.c) !== null) {\n      if ((flags & (NodeFlags.Fragment | NodeFlags.TrackByKey)) !== 0) {\n        for (i = 0; i < (children as Array<OpState | null>).length; i++) {\n          if ((v = (children as Array<OpState | null>)[i]) !== null) {\n            _unmountWalk(v);\n          }\n        }\n      } else {\n        _unmountWalk(children as OpState);\n      }\n    }\n  }\n\n  if ((flags & NodeFlags.Unmount) !== 0) {\n    if ((v = (opState.s as ComponentHooks).u) !== null) {\n      if (typeof v === \"function\") {\n        v(UNMOUNT_TOKEN);\n      } else {\n        for (i = 0; i < v.length; i++) {\n          v[i](UNMOUNT_TOKEN);\n        }\n      }\n    }\n  }\n}\n\nfunction _unmountRemove(parentElement: Element, opState: OpState, singleChild: boolean): void;\nfunction _unmountRemove(\n  parentElement: Element,\n  opState: OpState | Array<OpState | null> | null,\n  singleChild: boolean,\n): void {\n  let i = (opState as OpState).f;\n  let c;\n\n  if ((i & (NodeFlags.Element | NodeFlags.Text)) !== 0) {\n    nodeRemoveChild!.call(parentElement, (opState as OpState).s as Node);\n  } else {\n    opState = (opState as OpState).c;\n    if ((i & (NodeFlags.TrackByKey | NodeFlags.Fragment)) !== 0) {\n      if (singleChild === true) {\n        nodeSetTextContent!.call(parentElement, \"\");\n      } else {\n        for (i = 0; i < (opState as Array<OpState | null>).length; ++i) {\n          if ((c = (opState as Array<OpState | null>)[i]) !== null) {\n            _unmountRemove(parentElement, c, false);\n          }\n        }\n      }\n    } else if (opState !== null) {\n      _unmountRemove(parentElement, opState as OpState, singleChild);\n    }\n  }\n}\n\nexport function _unmount(parentElement: Element, opState: OpState, singleChild: boolean): void {\n  _unmountRemove(parentElement, opState, singleChild);\n  _unmountWalk(opState);\n}\n\nfunction _mountText(\n  parentElement: Element,\n  opState: OpState,\n  op: string | number,\n) {\n  const node = doc.createTextNode(op as string);\n  nodeInsertBefore!.call(parentElement, node, _nextNode);\n  _nextNode = node;\n  opState.s = node;\n  opState.f = NodeFlags.Text;\n}\n\nfunction _createElement(node: Element | undefined, op: DOMElementOp): Element {\n  const { t, v, n } = op;\n  const svg = (t.f & NodeFlags.Svg) !== 0;\n  if (node === void 0) {\n    const tagName = t.d as string;\n    node = svg ?\n      doc.createElementNS(SVG_NAMESPACE, tagName) :\n      doc.createElement(tagName);\n  }\n\n  if (n) {\n    _updateClassName(node, n, svg);\n  }\n\n  if (v !== void 0) {\n    _updateAttrs(node, void 0, v, svg);\n  }\n\n  return node;\n}\n\nfunction _mountObject(\n  parentElement: Element,\n  opState: OpState,\n  op: OpNode,\n): void {\n  const opType = op.t; // polymorphic callsite\n  const flags = opType.f;\n  let deepStateFlags;\n  let prevState;\n  let value;\n  let node;\n  let i;\n\n  if ((flags & NodeFlags.Component) !== 0) {\n    deepStateFlags = _pushDeepState();\n    if ((flags & NodeFlags.Stateful) !== 0) {\n      opState.s = prevState = { r: null, s: null, u: null } as ComponentHooks;\n      // Reusing value variable.\n      (prevState as ComponentHooks).r = value = (opType.d as ComponentDescriptor).c(opState);\n    } else {\n      value = (opType.d as StatelessComponentDescriptor).c;\n    }\n    opState.c = _mount(parentElement, value((op as ComponentOp).v));\n    opState.f = (opState.f & NodeFlags.SelfFlags) | flags | _deepStateFlags;\n    _deepStateFlags |= deepStateFlags | ((opState.f & NodeFlags.DeepStateFlags) << NodeFlags.DeepStateShift);\n  } else {\n    deepStateFlags = _pushDeepState();\n    if ((flags & NodeFlags.Element) !== 0) {\n      value = opType.d;\n      if ((flags & NodeFlags.ElementProto) !== 0) {\n        node = (value as ElementProtoDescriptor).n as Element;\n        if (node === null) {\n          (value as ElementProtoDescriptor).n = node = _createElement(\n            void 0,\n            (value as ElementProtoDescriptor).p,\n          );\n        }\n        node = nodeCloneNode!.call(node, false) as Element;\n      }\n      opState.s = node = _createElement(node, op as DOMElementOp);\n\n      prevState = _nextNode;\n      if ((value = (op as DOMElementOp).c) !== null) {\n        _nextNode = null;\n        opState.c = _mount(node, value);\n      }\n      _nextNode = node;\n      nodeInsertBefore!.call(parentElement, node, prevState);\n    } else if ((flags & (NodeFlags.Events | NodeFlags.Context)) !== 0) {\n      if ((flags & NodeFlags.Context) !== 0) {\n        opState.s = prevState = ((flags & NodeFlags.SetContextState) !== 0) ?\n          setContext((op as ContextOp).v) :\n          pushContext(opType.d as ContextDescriptor, (op as ContextOp).v);\n        opState.c = _mount(parentElement, (op as ContextOp).c);\n        setContext(prevState);\n      } else {\n        opState.c = _mount(parentElement, (op as EventsOp).c);\n      }\n    } else { // ((opFlags & NodeFlags.TrackByKey) !== 0)\n      node = (op as TrackByKeyOp).v;\n      i = node.length;\n      opState.c = value = Array(i);\n      while (i > 0) {\n        value[--i] = _mount(parentElement, node[i].v);\n      }\n    }\n    opState.f = _popDeepState(deepStateFlags, flags);\n  }\n}\n\nfunction _mountFragment(\n  parentElement: Element,\n  opState: OpState,\n  childrenOps: OpArray,\n): void {\n  let i = childrenOps.length;\n  const newChildren = Array(i);\n  const deepStateFlags = _pushDeepState();\n  while (i > 0) {\n    newChildren[--i] = _mount(parentElement, childrenOps[i]);\n  }\n  opState.c = newChildren;\n  opState.f = _popDeepState(deepStateFlags, NodeFlags.Fragment);\n}\n\nexport function _mount(\n  parentElement: Element,\n  op: Op,\n): OpState | null {\n  if (op !== null) {\n    const opState = createStateNode(op);\n    if (typeof op === \"object\") {\n      if (op instanceof Array) {\n        _mountFragment(parentElement, opState, op);\n      } else {\n        _mountObject(parentElement, opState, op);\n      }\n    } else {\n      _mountText(parentElement, opState, op);\n    }\n    return opState;\n  }\n  return null;\n}\n\n/**\n * _update updates a stateNode with a next operation.\n *\n * @param parentElement Parent DOM Element.\n * @param opState Operation state.\n * @param nextOp Next operation.\n * @param moveNode DOM Element should be moved.\n * @param singleChild Parent DOM Element contains a single child.\n * @returns OpNode state.\n */\nexport function _update(\n  parentElement: Element,\n  opState: OpState | null,\n  nextOp: Op,\n  moveNode: boolean,\n  singleChild: boolean,\n): OpState | null {\n  if (nextOp === null) {\n    if (opState !== null) {\n      _unmount(parentElement, opState, singleChild);\n    }\n    return null;\n  }\n  if (opState === null) {\n    return _mount(parentElement, nextOp);\n  }\n  const { f, o, s } = opState;\n\n  if ((f & NodeFlags.Text) !== 0) {\n    if (typeof nextOp !== \"object\") {\n      // Reassign to reduce memory consumption even if nextOp is strictly equal to the prev op.\n      opState.o = nextOp;\n      if (o !== nextOp) {\n        (s as Node).nodeValue = nextOp as string;\n      }\n      if (moveNode === true) {\n        nodeInsertBefore!.call(parentElement, s as Node, _nextNode);\n      }\n      _nextNode = s as Node;\n    } else {\n      nodeRemoveChild!.call(parentElement, s as Node);\n      return _mount(parentElement, nextOp);\n    }\n  } else {\n    // Here we don't need to reassign nextOp because op should always be an object, and strict equality will guarantee\n    // that this object is occupying the same memory region.\n    if (o === nextOp) {\n      _dirtyCheck(parentElement, opState, moveNode, singleChild);\n      return opState;\n    }\n    if (\n      ((f & NodeFlags.Fragment) !== 0 ?\n        !(nextOp instanceof Array) :\n        (\n          nextOp instanceof Array ||\n          (o as OpNode).t !== (nextOp as OpNode).t // polymorphic callsites\n        )\n      )\n    ) {\n      _unmount(parentElement, opState, singleChild);\n      return _mount(parentElement, nextOp);\n    }\n    opState.o = nextOp;\n    const opStateChildren = opState.c;\n    let deepStateFlags;\n    let prevData;\n    let nextData;\n    let nextValue;\n    let i;\n\n    if ((f & NodeFlags.Component) !== 0) {\n      prevData = (o as ComponentOp).v;\n      nextData = (nextOp as ComponentOp).v;\n      nextValue = (nextOp as ComponentOp).t.d as StatelessComponentDescriptor | ComponentDescriptor;\n      if (\n        ((f & NodeFlags.Dirty) !== 0) ||\n        (\n          (prevData !== nextData) &&\n          (nextValue.e === void 0 || nextValue.e(prevData, nextData) === true)\n        )\n      ) {\n        deepStateFlags = _pushDeepState();\n        opState.c = _update(\n          parentElement,\n          opStateChildren as OpState,\n          ((f & NodeFlags.Stateful) !== 0) ?\n            (s as ComponentHooks).r!(nextData) :\n            (nextValue as StatelessComponentDescriptor).c(nextData),\n          moveNode,\n          singleChild,\n        );\n        // opState.f can be changed after `_update()`.\n        i = opState.f;\n        opState.f = (i & NodeFlags.SelfFlags) | _deepStateFlags;\n        _deepStateFlags |= deepStateFlags | ((i & NodeFlags.DeepStateFlags) << NodeFlags.DeepStateShift);\n      } else {\n        _dirtyCheck(parentElement, opState, moveNode, singleChild);\n      }\n    } else {\n      deepStateFlags = _pushDeepState();\n      if ((f & NodeFlags.Element) !== 0) {\n        i = (f & NodeFlags.Svg) !== 0;\n        if (moveNode === true) {\n          nodeInsertBefore!.call(parentElement, s, _nextNode);\n        }\n\n        nextValue = (nextOp as DOMElementOp).n;\n        if ((o as DOMElementOp).n !== nextValue) {\n          if (nextValue === void 0) {\n            nextValue = \"\";\n          }\n          _updateClassName(s, nextValue, i);\n        }\n\n        nextValue = (nextOp as DOMElementOp).v;\n        if ((o as DOMElementOp).v !== nextValue) {\n          _updateAttrs(s as Element, (o as DOMElementOp).v, nextValue, i);\n        }\n\n        _nextNode = null;\n        opState.c = _update(s as Element, opStateChildren as OpState, (nextOp as DOMElementOp).c, false, true);\n        _nextNode = s as Node;\n      } else if ((f & (NodeFlags.Fragment | NodeFlags.TrackByKey)) !== 0) {\n        if ((f & NodeFlags.Fragment) !== 0) {\n          i = (nextOp as OpArray).length;\n          if (i === 0) {\n            _unmount(parentElement, opState, singleChild);\n          } else {\n            prevData = (opStateChildren as Array<OpState | null>).length;\n            if (i !== prevData) {\n              opState.c = nextValue = Array(i);\n              while (prevData > i) {\n                nextData = (opStateChildren as Array<OpState | null>)[--prevData];\n                if (nextData !== null) {\n                  _unmount(parentElement, nextData, false);\n                }\n              }\n              while (i > prevData) {\n                nextValue[--i] = _mount(parentElement, (nextOp as OpArray)[i]);\n              }\n            } else {\n              nextValue = (opStateChildren as Array<OpState | null>);\n            }\n            while (i > 0) {\n              nextValue[--i] = _update(\n                parentElement,\n                (opStateChildren as Array<OpState | null>)[i],\n                (nextOp as OpArray)[i],\n                moveNode,\n                false,\n              );\n            }\n          }\n        } else {\n          _updateChildrenTrackByKeys(\n            parentElement,\n            opState,\n            (o as TrackByKeyOp).v,\n            (nextOp as TrackByKeyOp).v,\n            moveNode,\n            singleChild,\n          );\n        }\n      } else if ((f & NodeFlags.Events) !== 0) {\n        opState.c = _update(\n          parentElement,\n          opStateChildren as OpState,\n          (nextOp as EventsOp).c,\n          moveNode,\n          singleChild,\n        );\n      } else { // if ((flags & NodeFlags.Context) !== 0) {\n        nextData = (nextOp as ContextOp).v;\n        if ((f & NodeFlags.SetContextState) !== 0) {\n          opState.s = nextData;\n        } else {\n          (s as ContextState).v = nextData;\n        }\n        nextValue = setContext(opState.s);\n        opState.c = _update(\n          parentElement,\n          opStateChildren as OpState,\n          (nextOp as ContextOp).c,\n          moveNode,\n          singleChild,\n        );\n        setContext(nextValue);\n      }\n      opState.f = _popDeepState(deepStateFlags, f);\n    }\n  }\n\n  return opState;\n}\n\n/**\n * Update children list with track by key algorithm.\n *\n * High-level overview of the algorithm that is implemented in this function (slightly outdated, but the key ideas are\n * the same).\n *\n * This algorithm finds a minimum[1] number of DOM operations. It works in several steps:\n *\n * 1. Find common suffix and prefix.\n *\n * This optimization technique is searching for nodes with identical keys by simultaneously iterating over nodes in the\n * old children list `A` and new children list `B` from both sides:\n *\n *  A: -> [a b c d] <-\n *  B: -> [a b d] <-\n *\n * Here we can skip nodes \"a\" and \"b\" at the begininng, and node \"d\" at the end.\n *\n *  A: -> [c] <-\n *  B: -> [] <-\n *\n * Here it will check if the size of one of the list is equal to zero. When length of the old children list is zero,\n * it will insert all remaining nodes from the new list, and when length of the new children list is zero, it will\n * remove all remaining nodes from the old list.\n *\n * When algorithm can't find a solution with this simple optimization technique, it will go to the next step of the\n * algorithm. For example:\n *\n *  A: -> [a b c d e f g] <-\n *  B: -> [a c b h f e g] <-\n *\n * Nodes \"a\" and \"g\" at the edges are the same, skipping them.\n *\n *  A: -> [b c d e f] <-\n *  B: -> [c b h f e] <-\n *\n * Here we are stuck, so we need to switch to the next step.\n *\n * 2. Look for removed and inserted nodes, and simultaneously check if one of the nodes is moved.\n *\n * First we create an array `P` with the length of the new children list and assign to each position value `-1`, it has\n * a meaning of a new node that should be inserted. Later we will assign node positions in the old children list to this\n * array.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *  P: [. . . . .] // . == -1\n *\n * Then we need to build an index `I` that maps keys with node positions of the remaining nodes from the new children\n * list.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *  P: [. . . . .] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1,\n *    h: 2,\n *    f: 3,\n *    e: 4,\n *  }\n *  last = 0\n *\n * With this index, we start to iterate over the remaining nodes from the old children list and check if we can find a\n * node with the same key in the index. If we can't find any node, it means that it should be removed, otherwise we\n * assign position of the node in the old children list to the positions array.\n *\n *  A: [b c d e f]\n *      ^\n *  B: [c b h f e]\n *  P: [. 0 . . .] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1, <-\n *    h: 2,\n *    f: 3,\n *    e: 4,\n *  }\n *  last = 1\n *\n * When we assigning positions to the positions array, we also keep a position of the last seen node in the new children\n * list, if the last seen position is larger than current position of the node at the new list, then we are switching\n * `moved` flag to `true`.\n *\n *  A: [b c d e f]\n *        ^\n *  B: [c b h f e]\n *  P: [1 0 . . .] // . == -1\n *  I: {\n *    c: 0, <-\n *    b: 1,\n *    h: 2,\n *    f: 3,\n *    e: 4,\n *  }\n *  last = 1 // last > 0; moved = true\n *\n * The last position `1` is larger than current position of the node at the new list `0`, switching `moved` flag to\n * `true`.\n *\n *  A: [b c d e f]\n *          ^\n *  B: [c b h f e]\n *  P: [1 0 . . .] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1,\n *    h: 2,\n *    f: 3,\n *    e: 4,\n *  }\n *  moved = true\n *\n * Node with key \"d\" doesn't exist in the index, removing node.\n *\n *  A: [b c d e f]\n *            ^\n *  B: [c b h f e]\n *  P: [1 0 . . 3] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1,\n *    h: 2,\n *    f: 3,\n *    e: 4, <-\n *  }\n *  moved = true\n *\n * Assign position for `e`.\n *\n *  A: [b c d e f]\n *              ^\n *  B: [c b h f e]\n *  P: [1 0 . 4 3] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1,\n *    h: 2,\n *    f: 3, <-\n *    e: 4,\n *  }\n *  moved = true\n *\n * Assign position for 'f'.\n *\n * At this point we are checking if `moved` flag is on, or if the length of the old children list minus the number of\n * removed nodes isn't equal to the length of the new children list. If any of this conditions is true, then we are\n * going to the next step.\n *\n * 3. Find minimum number of moves if `moved` flag is on, or insert new nodes if the length is changed.\n *\n * When `moved` flag is on, we need to find the\n * [longest increasing subsequence](http://en.wikipedia.org/wiki/Longest_increasing_subsequence) in the positions array,\n * and move all nodes that doesn't belong to this subsequence.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *  moved = true\n *\n * Now we just need to simultaneously iterate over the new children list and LIS from the end and check if the current\n * position is equal to a value from LIS.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *              ^  // new_pos == 4\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *              ^  // new_pos == 4\n *  moved = true\n *\n * Node \"e\" stays at the same place.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *            ^    // new_pos == 3\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *            ^    // new_pos != 1\n *  moved = true\n *\n * Node \"f\" is moved, move it before the next node \"e\".\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *          ^      // new_pos == 2\n *  P: [1 0 . 4 3] // . == -1\n *          ^      // old_pos == -1\n *  LIS:     [1 4]\n *            ^\n *  moved = true\n *\n * Node \"h\" has a `-1` value in the positions array, insert new node \"h\".\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *        ^        // new_pos == 1\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *            ^    // new_pos == 1\n *  moved = true\n *\n * Node \"b\" stays at the same place.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *      ^          // new_pos == 0\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *          ^      // new_pos != undefined\n *  moved = true\n *\n * Node \"c\" is moved, move it before the next node \"b\".\n *\n * When moved flag is off, we don't need to find LIS, and we just iterate over the new children list and check its\n * current position in the positions array, if it is `-1`, then we insert new node.\n *\n * [1] Actually it is almost minimum number of dom ops, when node is removed and another one is inserted at the same\n * place, instead of insert and remove dom ops, we can use one replace op. It will make everything even more\n * complicated, and other use cases will be slower, so I don't think that it is worth to use replace here.\n *\n * @param parentElement Parent DOM element.\n * @param opState OpNode state for a TrackByKey operation.\n * @param a Previous operations.\n * @param b Next operations.\n * @param moveNode Children DOM nodes should be moved.\n * @param singleChild Parent DOM element contains a single node.\n * @noinline\n */\nfunction _updateChildrenTrackByKeys(\n  parentElement: Element,\n  opState: OpState,\n  a: Key<any, OpNode>[],\n  b: Key<any, OpNode>[],\n  moveNode: boolean,\n  singleChild: boolean,\n): void {\n  let i = b.length;\n  let j: number | undefined = a.length;\n  const result = Array(i);\n\n  if (i === 0) { // New children list is empty.\n    if (j > 0) { // Unmount nodes from the old children list.\n      _unmount(parentElement, opState, singleChild);\n    }\n  } else if (j === 0) { // Old children list is empty.\n    while (i > 0) { // Mount nodes from the new children list.\n      result[--i] = _mount(parentElement, b[i].v);\n    }\n  } else {\n    const opStateChildren = opState.c as Array<OpState | null>;\n    let aEnd = j - 1; // a.length - 1\n    let bEnd = i - 1; // b.length - 1\n    let start = 0;\n    let node: OpNode | Key<any, OpNode> | OpState | null = b[bEnd];\n\n    // Step 1\n    outer: while (true) {\n      // Update nodes with the same key at the end.\n      while (a[aEnd].k === node.k) {\n        result[bEnd] = _update(parentElement, opStateChildren[aEnd--], node.v, moveNode, false);\n        if (start > --bEnd || start > aEnd) {\n          break outer;\n        }\n        node = b[bEnd];\n      }\n\n      // Update nodes with the same key at the beginning.\n      while (a[start].k === b[start].k && ++start <= aEnd && start <= bEnd) {\n        // delayed update (all updates should be performed from right-to-left).\n      }\n\n      break;\n    }\n\n    if (start > aEnd) {\n      // All nodes from `a` are updated, insert the rest from `b`.\n      while (bEnd >= start) {\n        result[bEnd] = _mount(parentElement, b[bEnd--].v);\n      }\n    } else if (start > bEnd) {\n      // All nodes from `b` are updated, remove the rest from `a`.\n      i = start;\n      do {\n        if ((node = opStateChildren[i++]) !== null) {\n          _unmount(parentElement, node, false);\n        }\n      } while (i <= aEnd);\n    } else { // Step 2\n      // When `pos === 99999999`, it means that one of the nodes is in the wrong position and we should rearrange nodes\n      // with lis-based algorithm.\n      let pos = 0;\n      // Number of updated nodes after prefix/suffix phase. It is used for an optimization that removes all child nodes\n      // with `textContent=\"\"` when there are no updated nodes.\n      let updated = 0;\n\n      const aLength = aEnd - start + 1;\n      const bLength = bEnd - start + 1;\n      const sources = Array(bLength); // Maps positions in the new children list to positions in the old children list.\n      const keyIndex = new Map<any, number>(); // Maps keys to their positions in the new children list.\n      for (i = 0; i < bLength; ++i) {\n        j = i + start;\n        sources[i] = -1; // Special value `-1` indicates that node doesn't exist in the old children list.\n        keyIndex.set(b[j].k, j);\n      }\n\n      for (i = start; i <= aEnd && updated < bLength; ++i) {\n        j = keyIndex.get(a[i].k);\n        if (j !== void 0) {\n          pos = (pos < j) ? j : 99999999;\n          ++updated;\n          sources[j - start] = i;\n          result[j] = opStateChildren[i];\n          // remove updated nodes from previous array, so that we could remove the rest from the document.\n          opStateChildren[i] = null;\n        }\n      }\n\n      if (aLength === a.length && updated === 0) {\n        // Zero updated nodes in step 1 and 2, remove all nodes and insert new ones.\n        _unmount(parentElement, opState, singleChild);\n        while (bEnd >= 0) {\n          result[bEnd] = _mount(parentElement, b[bEnd--].v);\n        }\n      } else {\n        // Step 3\n        // Remove nodes that weren't updated in the old children list.\n        for (i = start; i <= aEnd; i++) {\n          if ((node = opStateChildren[i]) !== null) {\n            _unmount(parentElement, node, false);\n          }\n        }\n\n        i = bLength;\n        if (moveNode === true || pos !== 99999999) {\n          while (i > 0) {\n            pos = --i + start;\n            node = b[pos].v;\n            result[pos] = (sources[i] === -1) ?\n              _mount(parentElement, node) :\n              _update(parentElement, result[pos], node, moveNode, false);\n          }\n        } else {\n          const seq = lis(sources);\n          j = seq.length - 1;\n          while (i > 0) {\n            pos = --i + start;\n            node = b[pos].v;\n            if (sources[i] === -1) {\n              result[pos] = _mount(parentElement, node);\n            } else {\n              if (j < 0 || i !== seq[j]) {\n                moveNode = true;\n              } else {\n                --j;\n              }\n              result[pos] = _update(parentElement, result[pos], node, moveNode, false);\n              moveNode = false;\n            }\n          }\n        }\n      }\n    }\n\n    // update nodes from Step 1 (prefix only)\n    while (start > 0) {\n      result[--start] = _update(parentElement, opStateChildren[start], b[start].v, moveNode, false);\n    }\n  }\n  opState.c = result;\n}\n\n/**\n * Slightly modified Longest Increased Subsequence algorithm, it ignores items that have -1 value, they're representing\n * new items.\n *\n * {@link http://en.wikipedia.org/wiki/Longest_increasing_subsequence}\n *\n * It is possible to use typed arrays in this function, and it will make it faster in most javascript engines, but for\n * some reason instantiating small typed arrays is slower in synthetic microbenchmarks on V8\n * {@link https://gist.github.com/localvoid/88da772d987794605f7fa4a078bce4d6} (maybe there is something wrong in this\n * benchmarks, if someone want to spend more time on optimizations, I'd recommend to double check everything).\n *\n * To solve problem with instantiation, we could just reuse arrays, but in my opinion it isn't worth to overcomplicate\n * this algorithm since it is already extremely fast and it is highly unlikely that it will be even noticeable in the\n * profiler. Usually when there is an update in the real applications, it triggers reordering of one dynamic children\n * list, that is why I prefer to keep it simple.\n *\n * @param a - Array of numbers\n * @returns Longest increasing subsequence\n * @noinline\n */\nfunction lis(a: number[]): number[] {\n  const p = a.slice();\n  // result is instantiated as an empty array to prevent instantiation with CoW backing store.\n  const result: number[] = [];\n  let n = 0;\n  let i = 0;\n  let u: number;\n  let v: number;\n  let j: number;\n\n  result[0] = 0;\n  for (; i < a.length; ++i) {\n    const k = a[i];\n    if (k > -1) {\n      j = result[n];\n      if (a[j] < k) {\n        p[i] = j;\n        result[++n] = i;\n      } else {\n        u = 0;\n        v = n;\n\n        while (u < v) {\n          j = (u + v) >> 1;\n          if (a[result[j]] < k) {\n            u = j + 1;\n          } else {\n            v = j;\n          }\n        }\n\n        if (k < a[result[u]]) {\n          if (u > 0) {\n            p[i] = result[u - 1];\n          }\n          result[u] = i;\n        }\n      }\n    }\n  }\n\n  v = result[n];\n\n  while (n >= 0) {\n    result[n--] = v;\n    v = p[v];\n  }\n\n  return result;\n}\n\n/**\n * Update DOM classname.\n *\n * @param element DOM Element.\n * @param className Class name.\n * @param svg SVG Element.\n */\nfunction _updateClassName(element: Element, className: string, svg: boolean): void {\n  /**\n   * SVGElement.className returns `SVGAnimatedString`.\n   *\n   * #quirks\n   */\n  if (svg === true) {\n    elementSetAttribute!.call(element, \"class\", className);\n  } else {\n    elementSetClassName!.call((element as HTMLElement), className);\n  }\n}\n\n/**\n * Update DOM styles.\n *\n * @param element HTML or SVG Element.\n * @param a Prev styles.\n * @param b Next styles.\n */\nfunction _updateStyle(\n  element: HTMLElement | SVGElement,\n  a: CSSStyleProps | undefined,\n  b: CSSStyleProps | undefined,\n  svg: boolean,\n): void {\n  const style = svg === true ? svgElementGetStyle!.call(element) : htmlElementGetStyle!.call(element);\n  let key: string;\n  let bValue;\n\n  if (a === void 0) {\n    // a is empty, insert all styles from b.\n    for (key in b!) {\n      bValue = (b as { [key: string]: string })[key];\n      if (bValue !== void 0) {\n        style.setProperty(key, bValue);\n      }\n    }\n  } else if (b === void 0) {\n    // b is empty, remove all styles from a\n    for (key in a) {\n      if ((a as { [key: string]: string })[key] !== void 0) {\n        style.removeProperty(key);\n      }\n    }\n  } else {\n    let matchCount = 0;\n    let i = 0;\n    for (key in a) {\n      const aValue = a[key];\n      bValue = (objectHasOwnProperty.call(b, key) === true) ? (matchCount++ , b[key]) : void 0;\n      if (aValue !== bValue) {\n        if (bValue !== void 0) {\n          style.setProperty(key, bValue);\n        } else {\n          style.removeProperty(key);\n        }\n      }\n    }\n\n    const keys = Object.keys(b);\n    for (; matchCount < keys.length && i < keys.length; ++i) {\n      key = keys[i];\n      if (objectHasOwnProperty.call(a, key) === false) {\n        bValue = b[key];\n        ++matchCount;\n        if (bValue !== void 0) {\n          style.setProperty(key, b[key]);\n        }\n      }\n    }\n  }\n}\n\n/**\n * Update DOM attributes.\n *\n * @param element DOM element.\n * @param a Prev DOM attributes.\n * @param b Next DOM attributes.\n */\nfunction _updateAttrs(\n  element: Element,\n  a: { [key: string]: string | number | boolean | AttributeDirective<any> | CSSStyleProps | undefined } | undefined,\n  b: { [key: string]: string | number | boolean | AttributeDirective<any> | CSSStyleProps | undefined } | undefined,\n  svg: boolean,\n): void {\n  let key: string;\n\n  if (a === void 0) {\n    // a is empty, insert all attributes from b.\n    for (key in b!) {\n      _updateAttr(element, key, void 0, b![key], svg);\n    }\n  } else if (b === void 0) {\n    // b is empty, remove all attributes from a.\n    for (key in a) {\n      _updateAttr(element, key, a[key], void 0, svg);\n    }\n  } else {\n    let matchCount = 0;\n    let i = 0;\n    for (key in a) {\n      _updateAttr(\n        element,\n        key,\n        a[key],\n        (objectHasOwnProperty.call(b, key) === true) ? (matchCount++ , b[key]) : void 0,\n        svg,\n      );\n    }\n\n    const keys = Object.keys(b);\n    for (; matchCount < keys.length && i < keys.length; ++i) {\n      key = keys[i];\n      if (objectHasOwnProperty.call(a, key) === false) {\n        _updateAttr(element, key, void 0, b[key], svg);\n        ++matchCount;\n      }\n    }\n  }\n}\n\n/**\n * Update DOM attribute.\n *\n * @param element DOM Element.\n * @param key Attribute name.\n * @param prev Previous value.\n * @param next Next value.\n */\nfunction _updateAttr(\n  element: Element,\n  key: string,\n  prev: string | number | boolean | AttributeDirective<any> | CSSStyleProps | undefined,\n  next: string | number | boolean | AttributeDirective<any> | CSSStyleProps | undefined,\n  svg: boolean,\n): void {\n  if (key !== \"style\") {\n    if (typeof next === \"object\") {\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== \"production\") {\n        if (typeof prev !== \"object\" && prev !== void 0) {\n          throw new Error(\n            `Invalid DOM attribute, transitioning from basic values to attribute directives isn't allowed`,\n          );\n        }\n      }\n      (next as AttributeDirective<any>).u!(\n        element,\n        key,\n        prev === void 0 ? void 0 : (prev as AttributeDirective<any>).v,\n        next.v,\n      );\n    } else if (typeof prev === \"object\") {\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== \"production\") {\n        if (typeof next !== \"object\" && next !== void 0) {\n          throw new Error(\n            `Invalid DOM attribute, transitioning from attribute directives to basic values isn't allowed`,\n          );\n        }\n      }\n      (prev as AttributeDirective<any>).u!(\n        element,\n        key,\n        (prev as AttributeDirective<any>).v,\n        void 0,\n      );\n    } else if (prev !== next) {\n      if (typeof next === \"boolean\") {\n        next = next ? \"\" : void 0;\n      }\n      if (next === void 0) {\n        if (prev !== void 0 && prev !== false) {\n          elementRemoveAttribute!.call(element, key);\n        }\n      } else {\n        elementSetAttribute!.call(element, key, next as string);\n      }\n    }\n  } else if (prev !== next) {\n    _updateStyle(element as HTMLElement, prev as CSSStyleProps, next as CSSStyleProps, svg);\n  }\n}\n","import { Op } from \"./operations\";\nimport { OpState } from \"./state\";\nimport { _mount, _update, _unmount, _dirtyCheck, _resetState } from \"./reconciler\";\nimport { enableContext, disableContext } from \"./context\";\n\n/**\n * Root.\n */\nexport interface Root {\n  /**\n   * Container element.\n   */\n  container: Element | null;\n  /**\n   * Current state.\n   */\n  state: OpState | null;\n  /**\n   * Next operation.\n   */\n  next: Op | undefined;\n}\n\n/**\n * Root nodes.\n */\nexport const ROOTS = [] as Root[];\n\n/**\n * Find root node of a container.\n *\n * @param predicate - Find predicate.\n * @returns root node or undefined when root node doesn't exist.\n */\nexport const findRoot = (predicate: (root: Root) => boolean) => ROOTS.find(predicate);\n\n/**\n * Performs a dirty checking.\n */\nexport function dirtyCheck() {\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== \"production\") {\n    enableContext();\n  }\n  for (let i = 0; i < ROOTS.length; ++i) {\n    const root = ROOTS[i];\n    const { container, state, next } = root;\n    _resetState();\n    if (next !== void 0) {\n      root.next = void 0;\n      root.state = _update(container!, state, next, false, true);\n    } else if (state !== null) {\n      _dirtyCheck(container!, state, false, true);\n    }\n  }\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== \"production\") {\n    disableContext();\n  }\n}\n","import { NOOP, catchError, runRepeatableTasks, RepeatableTaskList, box, Box, TaskToken, TASK_TOKEN } from \"../core\";\nimport { printWarn } from \"../debug/print\";\nimport { doc } from \"../dom/shortcuts\";\nimport { NodeFlags } from \"../vdom/node_flags\";\nimport { Op } from \"../vdom/operations\";\nimport { Component } from \"../vdom/component\";\nimport { ROOTS, findRoot, dirtyCheck } from \"../vdom/root\";\n\n/**\n * Update flags.\n */\nexport const enum UpdateFlags {\n  /**\n   * Forces synchronous update.\n   */\n  RequestSyncUpdate = 1,\n}\n\n/**\n * Scheduler flags.\n */\nconst enum SchedulerFlags {\n  /**\n   * Running inside of a scheduler context.\n   */\n  Running = 1,\n  /**\n   * Scheduler tick is pending for an execution.\n   */\n  TickPending = 1 << 1,\n  /**\n   * Frame update is pending for an execution.\n   */\n  NextFramePending = 1 << 2,\n  /**\n   * Sync Frame update is pending for an execution.\n   */\n  NextSyncFramePending = 1 << 3,\n  /**\n   * Running inside of a frame update context.\n   */\n  UpdatingFrame = 1 << 4,\n  /**\n   * Dirty checking is pending for an execution.\n   */\n  DirtyCheckPending = 1 << 5,\n}\n\nconst enum SchedulerDebugFlags {\n  DirtyCheckingFinished = 1,\n  MutationsFinished = 1 << 1,\n  LayoutFinished = 1 << 2,\n}\n\n/**\n * Task list.\n */\ntype TaskList = Box<Array<(token: TaskToken) => void>>;\n\n/**\n * Execute tasks from the `TaskList`.\n *\n * @param t - Task list\n */\nfunction run(t: TaskList) {\n  while (t.v.length > 0) {\n    const tasks = t.v;\n    t.v = [];\n    for (let i = 0; i < tasks.length; ++i) {\n      tasks[i](TASK_TOKEN);\n    }\n  }\n}\n\nlet _flags: SchedulerFlags = 0;\nlet _debugFlags: SchedulerDebugFlags = 0;\n\nlet _frameStartTime = 0;\nlet _clock = 1;\nconst _resolvedPromise = Promise.resolve();\nconst _microtasks = box<Array<(token: TaskToken) => void>>([]);\nconst _mutationEffects = box<Array<(token: TaskToken) => void>>([]);\nconst _layoutEffects = box<Array<(token: TaskToken) => void>>([]);\nconst _beforeMutations = [] as RepeatableTaskList;\nconst _afterMutations = [] as RepeatableTaskList;\n\n/**\n * withSchedulerTick wraps `inner` function into a scheduler context execution.\n *\n * @typeparam T Arguments.\n * @param inner Inner function.\n * @returns function that will be executed in a scheduler context.\n */\nexport const withSchedulerTick = <T extends any[]>(inner: (...args: T) => void) => (\n  catchError(function () {\n    _flags |= SchedulerFlags.Running;\n    inner.apply(void 0, arguments as unknown as T);\n    run(_microtasks);\n    _flags &= ~(SchedulerFlags.Running | SchedulerFlags.TickPending);\n    ++_clock;\n  })\n) as (...args: T) => void;\n\nconst runMicrotasks = withSchedulerTick(NOOP);\n\n/**\n * clock returns monotonically increasing clock value.\n *\n * @returns current clock value.\n */\nexport const clock = () => _clock;\n\n/**\n * scheduleMicrotask adds task to the microtask queue.\n *\n * @param task Microtask.\n */\nexport function scheduleMicrotask(task: (token: TaskToken) => void): void {\n  _microtasks.v.push(task);\n  if ((_flags & (SchedulerFlags.Running | SchedulerFlags.TickPending)) === 0) {\n    _flags |= SchedulerFlags.TickPending;\n    _resolvedPromise.then(runMicrotasks);\n  }\n}\n\n/**\n * beforeMutations adds a hook that will be executed before DOM mutations.\n *\n * @param fn Hook function.\n */\nexport function beforeMutations(fn: () => boolean | void): void {\n  _beforeMutations.push(fn);\n}\n\n/**\n * afterMutations adds a hook that will be executed after DOM mutations.\n *\n * @param fn Hook function.\n */\nexport function afterMutations(fn: () => boolean | void): void {\n  _afterMutations.push(fn);\n}\n\n/**\n * frameStartTime returns current frame start time.\n *\n * @returns current frame start time.\n */\nexport const frameStartTime = () => _frameStartTime;\n\n/**\n * withNextFrame wraps `inner` function into a scheduler frame update context.\n *\n * @param inner Inner function.\n * @returns function that will be executed in a frame update context.\n */\nexport const withNextFrame = (inner: (time?: number) => void) => (\n  withSchedulerTick((time?: number) => {\n    _flags |= SchedulerFlags.UpdatingFrame;\n    inner(time);\n\n    if ((_flags & SchedulerFlags.NextFramePending) !== 0) {\n      if (time !== void 0) {\n        _frameStartTime = time;\n      }\n\n      runRepeatableTasks(_beforeMutations);\n      if ((_flags & SchedulerFlags.DirtyCheckPending) !== 0) {\n        dirtyCheck();\n      }\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== \"production\") {\n        _debugFlags |= SchedulerDebugFlags.DirtyCheckingFinished;\n      }\n      run(_mutationEffects);\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== \"production\") {\n        _debugFlags |= SchedulerDebugFlags.MutationsFinished;\n      }\n      runRepeatableTasks(_afterMutations);\n      run(_layoutEffects);\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== \"production\") {\n        _debugFlags |= SchedulerDebugFlags.LayoutFinished;\n      }\n    }\n    _flags &= ~(\n      SchedulerFlags.UpdatingFrame |\n      SchedulerFlags.NextFramePending |\n      SchedulerFlags.NextSyncFramePending |\n      SchedulerFlags.DirtyCheckPending\n    );\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== \"production\") {\n      _debugFlags &= ~(\n        SchedulerDebugFlags.DirtyCheckingFinished |\n        SchedulerDebugFlags.MutationsFinished |\n        SchedulerDebugFlags.LayoutFinished\n      );\n    }\n  })\n);\n\n/**\n * Frame tasks scheduler event handler.\n *\n * @param t Current time.\n */\nconst _handleNextFrame = withNextFrame(NOOP);\nconst _handleNextFrameSync = () => { _handleNextFrame(); };\n\n/**\n * requestNextFrame requests an update for next frame.\n *\n * @param flags See {@link UpdateFlags} for details.\n */\nexport function requestNextFrame(flags?: UpdateFlags): void {\n  if (\n    (flags !== void 0) &&\n    ((flags & UpdateFlags.RequestSyncUpdate) !== 0) &&\n    ((_flags & SchedulerFlags.NextSyncFramePending) === 0)\n  ) {\n    _flags |= SchedulerFlags.NextFramePending | SchedulerFlags.NextSyncFramePending;\n    if ((_flags & SchedulerFlags.UpdatingFrame) === 0) {\n      scheduleMicrotask(_handleNextFrameSync);\n    }\n  } else if ((_flags & SchedulerFlags.NextFramePending) === 0) {\n    _flags |= SchedulerFlags.NextFramePending;\n    if ((_flags & SchedulerFlags.UpdatingFrame) === 0) {\n      requestAnimationFrame(_handleNextFrame);\n    }\n  }\n}\n\n/**\n * Adds a write DOM task to the queue.\n *\n * @param fn Write DOM task.\n * @param flags See {@link UpdateFlags} for details.\n */\nexport function scheduleMutationEffect(fn: (token: TaskToken) => void, flags?: UpdateFlags): void {\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== \"production\") {\n    if (_flags & SchedulerFlags.UpdatingFrame) {\n      if (_debugFlags & SchedulerDebugFlags.MutationsFinished) {\n        printWarn(\"Mutation effect is scheduled after mutations were finished\");\n      }\n    }\n  }\n  _mutationEffects.v.push(fn);\n  requestNextFrame(flags);\n}\n\n/**\n * Adds a DOM layout task to the queue.\n *\n * @param fn Read DOM task\n * @param flags See {@link UpdateFlags} for details.\n */\nexport function scheduleLayoutEffect(fn: (token: TaskToken) => void, flags?: UpdateFlags): void {\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== \"production\") {\n    if (_flags & SchedulerFlags.UpdatingFrame) {\n      if (_debugFlags & SchedulerDebugFlags.MutationsFinished) {\n        printWarn(\"Layout effect is scheduled after layout were finished\");\n      }\n    }\n  }\n  _layoutEffects.v.push(fn);\n  requestNextFrame(flags);\n}\n\n/**\n * Request dirty checking.\n *\n * @param flags See {@link UpdateFlags} for details.\n */\nexport function requestDirtyCheck(flags?: UpdateFlags): void {\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== \"production\") {\n    if (_flags & SchedulerFlags.UpdatingFrame) {\n      if (_debugFlags & SchedulerDebugFlags.MutationsFinished) {\n        printWarn(\"Dirty checking is scheduled after dirty checking were finished\");\n      }\n    }\n  }\n  _flags |= SchedulerFlags.DirtyCheckPending;\n  requestNextFrame(flags);\n}\n\n/**\n * Invalidate component.\n *\n * @param c Component instance.\n * @param flags See {@link UpdateFlags} for details.\n */\nexport function invalidate(c: Component, flags?: UpdateFlags): void {\n  c.f |= NodeFlags.Dirty;\n  requestDirtyCheck(flags);\n}\n\n/**\n * dirty requests a dirty checking and returns current monotonic clock value.\n *\n * @param flags See {@link UpdateFlags} for details.\n * @returns current monotonic clock value.\n */\nexport const dirty = (flags?: UpdateFlags) => (requestDirtyCheck(flags), _clock);\n\n/**\n * Render operation into the container.\n *\n * @param next Operation to render.\n * @param container DOM Node that will contain rendered operation.\n * @param flags See {@link UpdateFlags} for details.\n */\nexport function render(next: Op, container: Element, flags?: UpdateFlags): void {\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== \"production\") {\n    /**\n     * Rendering into the <body> element is disabled to make it possible to fix iOS quirk with click events.\n     */\n    if (container === doc.body) {\n      throw new Error(\"Rendering into the <body> element aren't allowed\");\n    }\n    if (!doc.body.contains(container)) {\n      throw new Error(\"Container element should be attached to the document\");\n    }\n  }\n\n  const root = findRoot((v) => v.container === container);\n  if (root) {\n    root.next = next;\n  } else {\n    ROOTS.push({ container, state: null, next });\n  }\n\n  requestDirtyCheck(flags);\n}\n","import { EMPTY_OBJECT, TaskToken, TASK_TOKEN, SelectToken, UnmountToken, SELECT_TOKEN, UNMOUNT_TOKEN } from \"../core\";\nimport { clock, scheduleMutationEffect, scheduleLayoutEffect } from \"../scheduler\";\nimport { NodeFlags } from \"./node_flags\";\nimport { Component } from \"./component\";\n\nfunction addHook<T extends Function>(hooks: null | T | T[], hook: T): T | T[] {\n  if (hooks === null) {\n    return hook;\n  }\n  if (typeof hooks === \"function\") {\n    return [hooks, hook];\n  }\n  hooks.push(hook);\n  return hooks;\n}\n\n/**\n * useSelect creates a selector hook.\n *\n * @example\n *\n *     const C = component<number>((c) => {\n *       const selector = useSelect<string, number>(c,\n *         (id, context) => getContext<{ data: string[] }>.data[id],\n *       );\n *\n *       return (id) => div(_, _, selector(id));\n *     });\n *\n * @typeparam T Selector result type.\n * @param component Component instance.\n * @param selector Selector function.\n * @returns Selector hook.\n */\nexport function useSelect<T>(\n  component: Component,\n  selector: (props?: undefined, prev?: T | undefined) => T,\n): () => T;\n\n/**\n * useSelect creates a selector hook.\n *\n * @example\n *\n *     const C = component<number>((c) => {\n *       const selector = useSelect<string, number>(c,\n *         (id, context) => getContext<{ data: string[] }>.data[id],\n *       );\n *\n *       return (id) => div(_, _, selector(id));\n *     });\n *\n * @typeparam T Selector result type.\n * @typeparam P Selector props type.\n * @param component Component instance.\n * @param selector Selector function.\n * @param areEqual `areEqual` function.\n * @returns Selector hook.\n */\nexport function useSelect<T, P>(\n  component: Component,\n  selector: (props: P, prev?: T | undefined) => T,\n  areEqual?: undefined extends P ? undefined : (prev: P, next: P) => boolean,\n): undefined extends P ? () => T : (props: P) => T;\n\nexport function useSelect<T, P>(\n  component: Component,\n  selector: (props: P, prev: T | undefined) => T,\n  areEqual?: (prev: P, next: P) => boolean,\n): (props: P) => T {\n  /* istanbul ignore next */\n  if (process.env.IVI_TARGET === \"ssr\") {\n    return (nextProps: P) => selector(nextProps, void 0);\n  }\n\n  let lastChecked = 0;\n  let state: T | undefined;\n  let props: P;\n  const prevSelector = component.s.s;\n  const hook = (p: SelectToken | P) => {\n    if (p === SELECT_TOKEN) {\n      if (prevSelector !== null && prevSelector(SELECT_TOKEN) === true) {\n        return true;\n      }\n      if (state !== void 0) {\n        p = selector(props, state);\n        lastChecked = clock();\n        if (state !== p) {\n          state = p as T;\n          return true;\n        }\n      }\n      return false;\n    }\n\n    if (\n      (state !== void 0) &&\n      (\n        (props !== p) &&\n        (areEqual === void 0 || areEqual(props, p as P) !== true)\n      )\n    ) {\n      state = void 0;\n    }\n    if (state === void 0 || lastChecked < clock()) {\n      state = selector(p as P, state);\n    }\n    props = p as P;\n    return state;\n  };\n\n  component.s.s = hook as (token: SelectToken) => boolean;\n  return hook as (p: P) => T;\n}\n\n/**\n * useUnmount creates an unmount hook.\n *\n * @example\n *\n *     const C = component((c) => {\n *       useUnmount(c, () => {\n *         console.log(\"unmounted\");\n *       });\n *\n *       return () => div();\n *     });\n *\n * @param component Component instance.\n * @param hook Unmount hook.\n */\nexport function useUnmount(component: Component, hook: (token: UnmountToken) => void): void {\n  /* istanbul ignore else */\n  if (process.env.IVI_TARGET !== \"ssr\") {\n    component.f |= NodeFlags.Unmount;\n    const hooks = component.s;\n    hooks.u = addHook(hooks.u, hook);\n  }\n}\n\nfunction withEffect<P>(scheduleTask: (task: (token: TaskToken) => void) => void): (\n  component: Component | undefined,\n  hook: (props?: P) => (() => void) | void,\n  areEqual?: (prev: P, next: P) => boolean,\n) => (props: P) => void {\n  return (component, hook, areEqual) => {\n    let reset: (() => void) | void;\n    let props: P | undefined = EMPTY_OBJECT as P;\n    const handler = (p: UnmountToken | TaskToken | P) => {\n      if (p === TASK_TOKEN || p === UNMOUNT_TOKEN) {\n        if (reset !== void 0) {\n          reset();\n        }\n        if (p !== UNMOUNT_TOKEN) {\n          reset = hook(props);\n          if (reset !== void 0 && component !== void 0) {\n            useUnmount(component, handler);\n            // remove component reference to indicate that unmount hook is registered.\n            component = void 0;\n          }\n        }\n      } else if (\n        (props === EMPTY_OBJECT) ||\n        (\n          (props !== p) &&\n          (areEqual === void 0 || areEqual(props as P, p as P) !== true)\n        )\n      ) {\n        props = p as P;\n        scheduleTask(handler);\n      }\n    };\n\n    return handler;\n  };\n}\n\n/**\n * useEffect creates a side effect hook.\n *\n * @example\n *\n *     const Counter = component<number>((c) => {\n *       let i = 0;\n *       const timer = useEffect<number>(c, (delay) => {\n *         const tid = setInterval(() => {\n *           i++;\n *           invalidate(c);\n *         }, delay);\n *         return () => { clearInterval(tid); };\n *       });\n *\n *       return (delay) => (\n *         timer(delay),\n *\n *         div(_, _, i),\n *       );\n *     });\n *\n * @typeparam T Hook props type.\n * @param component Component instance.\n * @param hook Side effect function.\n * @param areEqual `areEqual` function.\n * @returns Side effect hook.\n */\nexport const useEffect: <T = undefined>(\n  component: Component,\n  hook: undefined extends T ? () => (() => void) | void : (props: T) => (() => void) | void,\n  areEqual?: undefined extends T ? undefined : (prev: T, next: T) => boolean,\n) => undefined extends T ? () => void : (props: T) => void = process.env.IVI_TARGET === \"ssr\" ?\n    /* istanbul ignore next */(props: any) => { /**/ } :\n    (/*#__PURE__*/withEffect((task) => { task(TASK_TOKEN); })) as any;\n\n/**\n * useMutationEffect creates a DOM mutation effect hook.\n *\n * @typeparam T Hook props type.\n * @param stateNode Component instance.\n * @param hook DOM mutation function.\n * @param areEqual `areEqual` function.\n * @returns Side effect hook.\n */\nexport const useMutationEffect: <T = undefined>(\n  component: Component,\n  hook: undefined extends T ? () => (() => void) | void : (props: T) => (() => void) | void,\n  areEqual?: undefined extends T ? undefined : (prev: T, next: T) => boolean,\n) => undefined extends T ? () => void : (props: T) => void = process.env.IVI_TARGET === \"ssr\" ?\n    /* istanbul ignore next */(props: any) => { /**/ } :\n    (/*#__PURE__*/withEffect(scheduleMutationEffect)) as any;\n\n/**\n * useLayoutEffect creates a DOM layout effect hook.\n *\n * @typeparam T Hook props type.\n * @param component Component instance.\n * @param hook DOM layout function.\n * @param areEqual `areEqual` function.\n * @returns Side effect hook.\n */\nexport const useLayoutEffect: <T = undefined>(\n  component: Component,\n  hook: undefined extends T ? () => (() => void) | void : (props: T) => (() => void) | void,\n  areEqual?: undefined extends T ? undefined : (prev: T, next: T) => boolean,\n) => undefined extends T ? () => void : (props: T) => void = process.env.IVI_TARGET === \"ssr\" ?\n    /* istanbul ignore next */(props: any) => { /**/ } :\n    (/*#__PURE__*/withEffect(scheduleLayoutEffect)) as any;\n","import {\n  HTMLAnchorElementAttrs, HTMLElementAttrs, HTMLAreaElementAttrs, HTMLAudioElementAttrs,\n  HTMLBaseElementAttrs, HTMLBodyElementAttrs, HTMLBRElementAttrs, HTMLButtonElementAttrs,\n  HTMLCanvasElementAttrs, HTMLQuoteElementAttrs, HTMLTableCaptionElementAttrs, HTMLTableColElementAttrs,\n  HTMLModElementAttrs, HTMLDivElementAttrs, HTMLDListElementAttrs, HTMLFieldSetElementAttrs, HTMLFormElementAttrs,\n  HTMLHeadElementAttrs, HTMLHeadingElementAttrs, HTMLHRElementAttrs, HTMLHtmlElementAttrs, HTMLIFrameElementAttrs,\n  HTMLImageElementAttrs, HTMLInputElementAttrs, HTMLLabelElementAttrs, HTMLLegendElementAttrs, HTMLLIElementAttrs,\n  HTMLLinkElementAttrs, HTMLMapElementAttrs, HTMLMenuElementAttrs, HTMLMetaElementAttrs, HTMLMeterElementAttrs,\n  HTMLOListElementAttrs, HTMLOptGroupElementAttrs, HTMLOptionElementAttrs, HTMLParagraphElementAttrs,\n  HTMLPictureElementAttrs, HTMLPreElementAttrs, HTMLProgressElementAttrs, HTMLScriptElementAttrs,\n  HTMLSelectElementAttrs, HTMLSourceElementAttrs, HTMLSpanElementAttrs, HTMLStyleElementAttrs,\n  HTMLTableDataCellElementAttrs, HTMLTableElementAttrs, HTMLTableHeaderCellElementAttrs, HTMLTableRowElementAttrs,\n  HTMLTableSectionElementAttrs, HTMLTemplateElementAttrs, HTMLTextAreaElementAttrs, HTMLTitleElementAttrs,\n  HTMLTrackElementAttrs, HTMLUListElementAttrs, HTMLVideoElementAttrs,\n\n  AttributeDirective, elementFactory, htmlElementFactory, NodeFlags,\n  emitAttribute, emitChildren, escapeAttributeValue, escapeText, IGNORE_RENDER_TO_STRING,\n} from \"ivi\";\n\n/**\n * {@link AttributeDirective} with `\"\"` value and {@link updateValue} sync function.\n */\nconst VALUE_EMPTY: AttributeDirective<string> = { v: \"\", u: updateValue };\n\n/**\n * {@link AttributeDirective} with `false` value and {@link updateChecked} sync function.\n */\nconst CHECKED_FALSE: AttributeDirective<boolean> = { v: false, u: updateChecked };\n\n/**\n * {@link AttributeDirective} with `true` value and {@link updateChecked} sync function.\n */\nconst CHECKED_TRUE: AttributeDirective<boolean> = { v: true, u: updateChecked };\n\n/**\n * {@link AttributeDirective} with `true` value that emits `checked` attribute.\n */\nconst CHECKED_TRUE_RENDER_TO_STRING: AttributeDirective<boolean> = { v: true, s: () => { emitAttribute(\"checked\"); } };\n\n/**\n * Render to string function for an {@link AttributeDirective} created with {@link VALUE} function.\n *\n * @param key Attribute key.\n * @param value Value.\n */\nfunction renderToStringValue(key: string, value: string) {\n  emitAttribute(`value=\"${escapeAttributeValue(value)}\"`);\n}\n\n/**\n * Render to string function for an {@link AttributeDirective} created with {@link CONTENT} function.\n *\n * @param key Attribute key.\n * @param value Value.\n */\nfunction renderToStringContent(key: string, value: string) {\n  emitChildren(escapeText(value));\n}\n\n/**\n * Synchronization function for {@link AttributeDirective} created with {@link VALUE} function.\n *\n * @param element Target element.\n * @param key Attribute key.\n * @param prev Previous value.\n * @param next Next value.\n */\nfunction updateValue(\n  element: Element,\n  key: string,\n  prev: string | undefined,\n  next: string | undefined,\n) {\n  if (prev === void 0) {\n    if (next !== \"\") {\n      (element as HTMLInputElement | HTMLTextAreaElement).value = next!;\n    }\n  } else if (next !== void 0 && ((element as HTMLInputElement | HTMLTextAreaElement).value !== next)) {\n    (element as HTMLInputElement | HTMLTextAreaElement).value = next;\n  }\n}\n\n/**\n * Synchronization function for {@link AttributeDirective} created with {@link CHECKED} function.\n *\n * @param element Target element.\n * @param key Attribute key.\n * @param prev Previous value.\n * @param next Next value.\n */\nfunction updateChecked(\n  element: Element,\n  key: string,\n  prev: boolean | undefined,\n  next: boolean | undefined,\n) {\n  if (prev === void 0) {\n    if (next) {\n      (element as HTMLInputElement).checked = next;\n    }\n  } else if (next !== void 0) {\n    if ((element as HTMLInputElement).checked !== next) {\n      (element as HTMLInputElement).checked = next!;\n    }\n  }\n}\n\n/**\n * VALUE function creates a {@link AttributeDirective} that assigns a `value` property to an HTMLInputElement.\n *\n * @example\n *\n *   const e = input(\"\", { value: VALUE(\"value\") });\n *\n * @param v Value.\n * @returns {@link AttributeDirective}\n */\nexport const VALUE = (v: string): AttributeDirective<string> => (\n  process.env.IVI_TARGET === \"ssr\" ?\n    v === \"\" ? IGNORE_RENDER_TO_STRING : { v, s: renderToStringValue } :\n    v === \"\" ? VALUE_EMPTY : { v, u: updateValue }\n);\n\n/**\n * CONTENT function creates a {@link AttributeDirective} that assigns a `value` property to an HTMLTextAreaElement.\n *\n * @example\n *\n *   const e = textarea(\"\", { content: CONTENT(\"content\") });\n *\n * @param v Value.\n * @returns {@link AttributeDirective}\n */\nexport const CONTENT = (\n  process.env.IVI_TARGET === \"ssr\" ?\n    (v: string): AttributeDirective<string> => (\n      v === \"\" ? IGNORE_RENDER_TO_STRING : ({ v, s: renderToStringContent })\n    ) :\n    VALUE\n);\n\n/**\n * CHECKED function creates a {@link AttributeDirective} that assigns a `checked` property to an HTMLInputElement.\n *\n * @example\n *\n *   const e = input(\"\", { checked: CHECKED(true) });\n *\n * @param v Checked value.\n * @returns {@link AttributeDirective}\n */\nexport const CHECKED = (v: boolean): AttributeDirective<boolean> => (\n  process.env.IVI_TARGET === \"ssr\" ?\n    v ? CHECKED_TRUE_RENDER_TO_STRING : IGNORE_RENDER_TO_STRING :\n    v ? CHECKED_TRUE : CHECKED_FALSE\n);\n\n/* tslint:disable:max-line-length */\n/**\n * Creates OpNode HTML element <a>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <a>\n */\nexport const a = /*#__PURE__*/htmlElementFactory<HTMLAnchorElementAttrs, HTMLAnchorElement>(\"a\");\n\n/**\n * Creates OpNode HTML element <abbr>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/abbr}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <abbr>\n */\nexport const abbr = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"abbr\");\n\n/**\n * Creates OpNode HTML element <address>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/address}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <address>\n */\nexport const address = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"address\");\n\n/**\n * Creates OpNode HTML element <article>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/article}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <article>\n */\nexport const article = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"article\");\n\n/**\n * Creates OpNode HTML element <aside>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/aside}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <aside>\n */\nexport const aside = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"aside\");\n\n/**\n * Creates OpNode HTML element <b>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/b}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <b>\n */\nexport const b = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"b\");\n\n/**\n * Creates OpNode HTML element <base>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/base}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <base>\n */\nexport const base = /*#__PURE__*/elementFactory<HTMLBaseElementAttrs, HTMLBaseElement>(\"base\", NodeFlags.Element | NodeFlags.VoidElement);\n\n/**\n * Creates OpNode HTML element <bdo>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/bdo}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <bdo>\n */\nexport const bdo = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"bdo\");\n\n/**\n * Creates OpNode HTML element <blockquote>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/blockquote}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <blockquote>\n */\nexport const blockquote = /*#__PURE__*/htmlElementFactory<HTMLQuoteElementAttrs, HTMLQuoteElement>(\"blockquote\");\n\n/**\n * Creates OpNode HTML element <body>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/body}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <body>\n */\nexport const body = /*#__PURE__*/htmlElementFactory<HTMLBodyElementAttrs, HTMLBodyElement>(\"body\");\n\n/**\n * Creates OpNode HTML element <br>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/br}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <br>\n */\nexport const br = /*#__PURE__*/elementFactory<HTMLBRElementAttrs, HTMLBRElement>(\"br\", NodeFlags.Element | NodeFlags.VoidElement);\n\n/**\n * Creates OpNode HTML element <button>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <button>\n */\nexport const button = /*#__PURE__*/htmlElementFactory<HTMLButtonElementAttrs, HTMLButtonElement>(\"button\");\n\n/**\n * Creates OpNode HTML element <canvas>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <canvas>\n */\nexport const canvas = /*#__PURE__*/htmlElementFactory<HTMLCanvasElementAttrs, HTMLCanvasElement>(\"canvas\");\n\n/**\n * Creates OpNode HTML element <caption>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <caption>\n */\nexport const caption = /*#__PURE__*/htmlElementFactory<HTMLTableCaptionElementAttrs, HTMLTableCaptionElement>(\"caption\");\n\n/**\n * Creates OpNode HTML element <cite>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/cite}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <cite>\n */\nexport const cite = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"cite\");\n\n/**\n * Creates OpNode HTML element <code>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/code}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <code>\n */\nexport const code = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"code\");\n\n/**\n * Creates OpNode HTML element <col>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/col}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <col>\n */\nexport const col = /*#__PURE__*/elementFactory<HTMLTableColElementAttrs, HTMLTableColElement>(\"col\", NodeFlags.Element | NodeFlags.VoidElement);\n\n/**\n * Creates OpNode HTML element <colgroup>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/colgroup}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <colgroup>\n */\nexport const colgroup = /*#__PURE__*/htmlElementFactory<HTMLTableColElementAttrs, HTMLTableColElement>(\"colgroup\");\n\n/**\n * Creates OpNode HTML element <del>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/del}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <del>\n */\nexport const del = /*#__PURE__*/htmlElementFactory<HTMLModElementAttrs, HTMLModElement>(\"del\");\n\n/**\n * Creates OpNode HTML element <dfn>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dfn}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <dfn>\n */\nexport const dfn = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"dfn\");\n\n/**\n * Creates OpNode HTML element <div>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <div>\n */\nexport const div = /*#__PURE__*/htmlElementFactory<HTMLDivElementAttrs, HTMLDivElement>(\"div\");\n\n/**\n * Creates OpNode HTML element <dd>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dd}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <dd>\n */\nexport const dd = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"dd\");\n\n/**\n * Creates OpNode HTML element <dl>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dl}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <dl>\n */\nexport const dl = /*#__PURE__*/htmlElementFactory<HTMLDListElementAttrs, HTMLDListElement>(\"dl\");\n\n/**\n * Creates OpNode HTML element <dt>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dt}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <dt>\n */\nexport const dt = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"dt\");\n\n/**\n * Creates OpNode HTML element <em>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/em}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <em>\n */\nexport const em = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"em\");\n\n/**\n * Creates OpNode HTML element <fieldset>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/fieldset}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <fieldset>\n */\nexport const fieldset = /*#__PURE__*/htmlElementFactory<HTMLFieldSetElementAttrs, HTMLFieldSetElement>(\"fieldset\");\n\n/**\n * Creates OpNode HTML element <figcaption>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/figcaption}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <figcaption>\n */\nexport const figcaption = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"figcaption\");\n\n/**\n * Creates OpNode HTML element <figure>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/figure}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <figure>\n */\nexport const figure = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"figure\");\n\n/**\n * Creates OpNode HTML element <footer>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/footer}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <footer>\n */\nexport const footer = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"footer\");\n\n/**\n * Creates OpNode HTML element <form>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <form>\n */\nexport const form = /*#__PURE__*/htmlElementFactory<HTMLFormElementAttrs, HTMLFormElement>(\"form\");\n\n/**\n * Creates OpNode HTML element <h1>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h1}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <h1>\n */\nexport const h1 = /*#__PURE__*/htmlElementFactory<HTMLHeadingElementAttrs, HTMLHeadingElement>(\"h1\");\n\n/**\n * Creates OpNode HTML element <h2>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h2}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <h2>\n */\nexport const h2 = /*#__PURE__*/htmlElementFactory<HTMLHeadingElementAttrs, HTMLHeadingElement>(\"h2\");\n\n/**\n * Creates OpNode HTML element <h3>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h3}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <h3>\n */\nexport const h3 = /*#__PURE__*/htmlElementFactory<HTMLHeadingElementAttrs, HTMLHeadingElement>(\"h3\");\n\n/**\n * Creates OpNode HTML element <h4>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h4}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <h4>\n */\nexport const h4 = /*#__PURE__*/htmlElementFactory<HTMLHeadingElementAttrs, HTMLHeadingElement>(\"h4\");\n\n/**\n * Creates OpNode HTML element <h5>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h5}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <h5>\n */\nexport const h5 = /*#__PURE__*/htmlElementFactory<HTMLHeadingElementAttrs, HTMLHeadingElement>(\"h5\");\n\n/**\n * Creates OpNode HTML element <h6>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h6}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <h6>\n */\nexport const h6 = /*#__PURE__*/htmlElementFactory<HTMLHeadingElementAttrs, HTMLHeadingElement>(\"h6\");\n\n/**\n * Creates OpNode HTML element <head>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/head}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <head>\n */\nexport const head = /*#__PURE__*/htmlElementFactory<HTMLHeadElementAttrs, HTMLHeadElement>(\"head\");\n\n/**\n * Creates OpNode HTML element <header>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/header}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <header>\n */\nexport const header = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"header\");\n\n/**\n * Creates OpNode HTML element <hgroup>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/hgroup}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <hgroup>\n */\nexport const hgroup = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"hgroup\");\n\n/**\n * Creates OpNode HTML element <hr>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/hr}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <hr>\n */\nexport const hr = /*#__PURE__*/elementFactory<HTMLHRElementAttrs, HTMLHRElement>(\"hr\", NodeFlags.Element | NodeFlags.VoidElement);\n\n/**\n * Creates OpNode HTML element <html>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/html}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <html>\n */\nexport const html = /*#__PURE__*/htmlElementFactory<HTMLHtmlElementAttrs, HTMLHtmlElement>(\"html\");\n\n/**\n * Creates OpNode HTML element <i>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/i}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <i>\n */\nexport const i = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"i\");\n\n/**\n * Creates OpNode HTML element <iframe>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <iframe>\n */\nexport const iframe = /*#__PURE__*/htmlElementFactory<HTMLIFrameElementAttrs, HTMLIFrameElement>(\"iframe\");\n\n/**\n * Creates OpNode HTML element <img>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <img>\n */\nexport const img = /*#__PURE__*/elementFactory<HTMLImageElementAttrs, HTMLImageElement>(\"img\", NodeFlags.Element | NodeFlags.VoidElement);\n\n/**\n * Creates OpNode HTML element <area>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/area}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <area>\n */\nexport const area = /*#__PURE__*/elementFactory<HTMLAreaElementAttrs, HTMLAreaElement>(\"area\", NodeFlags.Element | NodeFlags.VoidElement);\n\n/**\n * Creates OpNode HTML element <map>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/map}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <map>\n */\nexport const map = /*#__PURE__*/htmlElementFactory<HTMLMapElementAttrs, HTMLMapElement>(\"map\");\n\n/**\n * Creates OpNode HTML element <ins>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ins}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <ins>\n */\nexport const ins = /*#__PURE__*/htmlElementFactory<HTMLModElementAttrs, HTMLModElement>(\"ins\");\n\n/**\n * Creates OpNode HTML element <kbd>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/kbd}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <kbd>\n */\nexport const kbd = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"kbd\");\n\n/**\n * Creates OpNode HTML element <label>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/label}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <label>\n */\nexport const label = /*#__PURE__*/htmlElementFactory<HTMLLabelElementAttrs, HTMLLabelElement>(\"label\");\n\n/**\n * Creates OpNode HTML element <legend>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/legend}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <legend>\n */\nexport const legend = /*#__PURE__*/htmlElementFactory<HTMLLegendElementAttrs, HTMLLegendElement>(\"legend\");\n\n/**\n * Creates OpNode HTML element <li>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/li}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <li>\n */\nexport const li = /*#__PURE__*/htmlElementFactory<HTMLLIElementAttrs, HTMLLIElement>(\"li\");\n\n/**\n * Creates OpNode HTML element <link>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <link>\n */\nexport const link = /*#__PURE__*/elementFactory<HTMLLinkElementAttrs, HTMLLinkElement>(\"link\", NodeFlags.Element | NodeFlags.VoidElement);\n\n/**\n * Creates OpNode HTML element <main>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/main}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <main>\n */\nexport const main = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"main\");\n\n/**\n * Creates OpNode HTML element <mark>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/mark}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <mark>\n */\nexport const mark = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"mark\");\n\n/**\n * Creates OpNode HTML element <menu>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/menu}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <menu>\n */\nexport const menu = /*#__PURE__*/htmlElementFactory<HTMLMenuElementAttrs, HTMLMenuElement>(\"menu\");\n\n/**\n * Creates OpNode HTML element <meta>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <meta>\n */\nexport const meta = /*#__PURE__*/elementFactory<HTMLMetaElementAttrs, HTMLMetaElement>(\"meta\", NodeFlags.Element | NodeFlags.VoidElement);\n\n/**\n * Creates OpNode HTML element <meter>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meter}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <meter>\n */\nexport const meter = /*#__PURE__*/htmlElementFactory<HTMLMeterElementAttrs, HTMLMeterElement>(\"meter\");\n\n/**\n * Creates OpNode HTML element <nav>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/nav}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <nav>\n */\nexport const nav = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"nav\");\n\n/**\n * Creates OpNode HTML element <noscript>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/noscript}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <noscript>\n */\nexport const noscript = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"noscript\");\n\n/**\n * Creates OpNode HTML element <ol>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ol}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <ol>\n */\nexport const ol = /*#__PURE__*/htmlElementFactory<HTMLOListElementAttrs, HTMLOListElement>(\"ol\");\n\n/**\n * Creates OpNode HTML element <optgroup>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/optgroup}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <optgroup>\n */\nexport const optgroup = /*#__PURE__*/htmlElementFactory<HTMLOptGroupElementAttrs, HTMLOptGroupElement>(\"optgroup\");\n\n/**\n * Creates OpNode HTML element <option>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <option>\n */\nexport const option = /*#__PURE__*/htmlElementFactory<HTMLOptionElementAttrs, HTMLOptionElement>(\"option\");\n\n/**\n * Creates OpNode HTML element <p>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/p}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <p>\n */\nexport const p = /*#__PURE__*/htmlElementFactory<HTMLParagraphElementAttrs, HTMLParagraphElement>(\"p\");\n\n/**\n * Creates OpNode HTML element <picture>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/picture}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <picture>\n */\nexport const picture = /*#__PURE__*/htmlElementFactory<HTMLPictureElementAttrs, HTMLPictureElement>(\"picture\");\n\n/**\n * Creates OpNode HTML element <pre>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/pre}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <pre>\n */\nexport const pre = /*#__PURE__*/elementFactory<HTMLPreElementAttrs, HTMLPreElement>(\"pre\", NodeFlags.Element | NodeFlags.NewlineEatingElement);\n\n/**\n * Creates OpNode HTML element <progress>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/progress}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <progress>\n */\nexport const progress = /*#__PURE__*/htmlElementFactory<HTMLProgressElementAttrs, HTMLProgressElement>(\"progress\");\n\n/**\n * Creates OpNode HTML element <q>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/q}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <q>\n */\nexport const q = /*#__PURE__*/htmlElementFactory<HTMLQuoteElementAttrs, HTMLQuoteElement>(\"q\");\n\n/**\n * Creates OpNode HTML element <rt>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/rt}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <rt>\n */\nexport const rt = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"rt\");\n\n/**\n * Creates OpNode HTML element <ruby>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ruby}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <ruby>\n */\nexport const ruby = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"ruby\");\n\n/**\n * Creates OpNode HTML element <s>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/s}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <s>\n */\nexport const s = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"s\");\n\n/**\n * Creates OpNode HTML element <samp>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/samp}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <samp>\n */\nexport const samp = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"samp\");\n\n/**\n * Creates OpNode HTML element <script>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <script>\n */\nexport const script = /*#__PURE__*/htmlElementFactory<HTMLScriptElementAttrs, HTMLScriptElement>(\"script\");\n\n/**\n * Creates OpNode HTML element <section>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/section}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <section>\n */\nexport const section = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"section\");\n\n/**\n * Creates OpNode HTML element <select>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <select>\n */\nexport const select = /*#__PURE__*/htmlElementFactory<HTMLSelectElementAttrs, HTMLSelectElement>(\"select\");\n\n/**\n * Creates OpNode HTML element <source>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/source}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <source>\n */\nexport const source = /*#__PURE__*/elementFactory<HTMLSourceElementAttrs, HTMLSourceElement>(\"source\", NodeFlags.Element | NodeFlags.VoidElement);\n\n/**\n * Creates OpNode HTML element <span>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <span>\n */\nexport const span = /*#__PURE__*/htmlElementFactory<HTMLSpanElementAttrs, HTMLSpanElement>(\"span\");\n\n/**\n * Creates OpNode HTML element <strong>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/strong}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <strong>\n */\nexport const strong = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"strong\");\n\n/**\n * Creates OpNode HTML element <style>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/style}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <style>\n */\nexport const style = /*#__PURE__*/htmlElementFactory<HTMLStyleElementAttrs, HTMLStyleElement>(\"style\");\n\n/**\n * Creates OpNode HTML element <sub>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/sub}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <sub>\n */\nexport const sub = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"sub\");\n\n/**\n * Creates OpNode HTML element <sup>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/sup}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <sup>\n */\nexport const sup = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"sup\");\n\n/**\n * Creates OpNode HTML element <table>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/table}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <table>\n */\nexport const table = /*#__PURE__*/htmlElementFactory<HTMLTableElementAttrs, HTMLTableElement>(\"table\");\n\n/**\n * Creates OpNode HTML element <tbody>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tbody}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <tbody>\n */\nexport const tbody = /*#__PURE__*/htmlElementFactory<HTMLTableSectionElementAttrs, HTMLTableSectionElement>(\"tbody\");\n\n/**\n * Creates OpNode HTML element <td>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/td}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <td>\n */\nexport const td = /*#__PURE__*/htmlElementFactory<HTMLTableDataCellElementAttrs, HTMLTableDataCellElement>(\"td\");\n\n/**\n * Creates OpNode HTML element <template>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/template}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <template>\n */\nexport const template = /*#__PURE__*/htmlElementFactory<HTMLTemplateElementAttrs, HTMLTemplateElement>(\"template\");\n\n/**\n * Creates OpNode HTML element <tfoot>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tfoot}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <tfoot>\n */\nexport const tfoot = /*#__PURE__*/htmlElementFactory<HTMLTableSectionElementAttrs, HTMLTableSectionElement>(\"tfoot\");\n\n/**\n * Creates OpNode HTML element <th>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/th}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <th>\n */\nexport const th = /*#__PURE__*/htmlElementFactory<HTMLTableHeaderCellElementAttrs, HTMLTableHeaderCellElement>(\"th\");\n\n/**\n * Creates OpNode HTML element <thead>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/thead}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <thead>\n */\nexport const thead = /*#__PURE__*/htmlElementFactory<HTMLTableSectionElementAttrs, HTMLTableSectionElement>(\"thead\");\n\n/**\n * Creates OpNode HTML element <time>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/time}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <time>\n */\nexport const time = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"time\");\n\n/**\n * Creates OpNode HTML element <title>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/title}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <title>\n */\nexport const title = /*#__PURE__*/htmlElementFactory<HTMLTitleElementAttrs, HTMLTitleElement>(\"title\");\n\n/**\n * Creates OpNode HTML element <tr>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tr}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <tr>\n */\nexport const tr = /*#__PURE__*/htmlElementFactory<HTMLTableRowElementAttrs, HTMLTableRowElement>(\"tr\");\n\n/**\n * Creates OpNode HTML element <track>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/track}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <track>\n */\nexport const track = /*#__PURE__*/elementFactory<HTMLTrackElementAttrs, HTMLTrackElement>(\"track\", NodeFlags.Element | NodeFlags.VoidElement);\n\n/**\n * Creates OpNode HTML element <u>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/u}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <u>\n */\nexport const u = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"u\");\n\n/**\n * Creates OpNode HTML element <ul>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ul}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <ul>\n */\nexport const ul = /*#__PURE__*/htmlElementFactory<HTMLUListElementAttrs, HTMLUListElement>(\"ul\");\n\n/**\n * Creates OpNode HTML element <wbr>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/wbr}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <wbr>\n */\nexport const wbr = /*#__PURE__*/elementFactory<HTMLElementAttrs, HTMLElement>(\"wbr\", NodeFlags.Element | NodeFlags.VoidElement);\n\n/**\n * Creates OpNode HTML element <textarea>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <textarea>\n */\nexport const textarea = /*#__PURE__*/elementFactory<HTMLTextAreaElementAttrs, HTMLTextAreaElement>(\"textarea\", NodeFlags.Element | NodeFlags.NewlineEatingElement);\n\n/**\n * Creates OpNode HTML element <input>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <input>\n */\nexport const input = /*#__PURE__*/elementFactory<HTMLInputElementAttrs, HTMLInputElement>(\"input\", NodeFlags.Element | NodeFlags.VoidElement);\n\n/**\n * Creates OpNode HTML element <audio>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <audio>\n */\nexport const audio = /*#__PURE__*/htmlElementFactory<HTMLAudioElementAttrs, HTMLAudioElement>(\"audio\");\n\n/**\n * Creates OpNode HTML element <video>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <video>\n */\nexport const video = /*#__PURE__*/htmlElementFactory<HTMLVideoElementAttrs, HTMLVideoElement>(\"video\");\n","var MonitorMaxSamples = 100;\nvar MonitorSamplesResult = (function () {\n    function MonitorSamplesResult(min, max, mean, last) {\n        this.min = min;\n        this.max = max;\n        this.mean = mean;\n        this.last = last;\n    }\n    return MonitorSamplesResult;\n}());\n/**\n * Profile Samples.\n */\nvar MonitorSamples = (function () {\n    function MonitorSamples(maxSamples) {\n        this.samples = [];\n        this.maxSamples = maxSamples;\n        this._i = -1;\n    }\n    MonitorSamples.prototype.addSample = function (v) {\n        this._i = (this._i + 1) % this.maxSamples;\n        this.samples[this._i] = v;\n    };\n    MonitorSamples.prototype.each = function (fn) {\n        var samples = this.samples;\n        for (var i = 0; i < samples.length; i++) {\n            fn(samples[(this._i + 1 + i) % samples.length], i);\n        }\n    };\n    MonitorSamples.prototype.calc = function () {\n        var samples = this.samples;\n        if (samples.length === 0) {\n            return new MonitorSamplesResult(0, 0, 0, 0);\n        }\n        var min = samples[(this._i + 1) % samples.length];\n        var max = min;\n        var sum = 0;\n        for (var i = 0; i < samples.length; i++) {\n            var k = samples[(this._i + 1 + i) % samples.length];\n            if (k < min) {\n                min = k;\n            }\n            if (k > max) {\n                max = k;\n            }\n            sum += k;\n        }\n        var last = samples[this._i];\n        var mean = sum / samples.length;\n        return new MonitorSamplesResult(min, max, mean, last);\n    };\n    return MonitorSamples;\n}());\n\n/**\n * Basic Counter.\n */\nvar BasicCounter = (function () {\n    function BasicCounter() {\n        this.value = 0;\n        this.onChange = null;\n    }\n    BasicCounter.prototype.inc = function (value) {\n        if (value > 0) {\n            this.value += value;\n            this.onChange();\n        }\n    };\n    return BasicCounter;\n}());\nvar TimestampedValue = (function () {\n    function TimestampedValue(timestamp, value) {\n        this.value = value;\n        this.next = null;\n    }\n    return TimestampedValue;\n}());\n/**\n * Sliding Counter counts how many times `inc` method were called during `interval` period.\n */\nvar SlidingCounter = (function () {\n    function SlidingCounter(interval) {\n        var _this = this;\n        this._dec = function () {\n            var now = performance.now();\n            while (_this._firstTimestamp !== null) {\n                var nextTimestamp = _this._firstTimestamp;\n                if (now >= nextTimestamp.value) {\n                    _this.value -= nextTimestamp.value;\n                    _this._firstTimestamp = _this._firstTimestamp.next;\n                }\n                else {\n                    setTimeout(_this._dec, Math.ceil(nextTimestamp.value - now));\n                    break;\n                }\n            }\n            if (_this._firstTimestamp === null) {\n                _this._lastTimestamp = null;\n            }\n            _this.onChange();\n        };\n        this.interval = interval;\n        this.value = 0;\n        this.onChange = null;\n        this._firstTimestamp = null;\n        this._lastTimestamp = null;\n    }\n    SlidingCounter.prototype.inc = function (value) {\n        if (value > 0) {\n            var timestamp = new TimestampedValue(performance.now() + this.interval, value);\n            if (this._firstTimestamp === null) {\n                this._firstTimestamp = timestamp;\n                setTimeout(this._dec, this.interval);\n            }\n            else {\n                this._lastTimestamp.next = timestamp;\n            }\n            this._lastTimestamp = timestamp;\n            this.value += value;\n            this.onChange();\n        }\n    };\n    return SlidingCounter;\n}());\n\nvar frameTasks = [];\nvar rafId = -1;\n/**\n * Schedule new task that will be executed on the next frame.\n */\nfunction scheduleNextFrameTask(task) {\n    frameTasks.push(task);\n    if (rafId === -1) {\n        requestAnimationFrame(function (t) {\n            rafId = -1;\n            var tasks = frameTasks;\n            frameTasks = [];\n            for (var i = 0; i < tasks.length; i++) {\n                tasks[i]();\n            }\n        });\n    }\n}\n\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar MonitorGraphHeight = 30;\nvar MonitorGraphWidth = MonitorMaxSamples;\nvar Widget = (function () {\n    function Widget(name) {\n        var _this = this;\n        this._sync = function () {\n            _this.sync();\n            _this._dirty = false;\n        };\n        this.name = name;\n        this.element = document.createElement(\"div\");\n        this.element.style.cssText = \"padding: 2px;\" +\n            \"background-color: #020;\" +\n            \"font-family: monospace;\" +\n            \"font-size: 12px;\" +\n            \"color: #0f0\";\n        this._dirty = false;\n        this.invalidate();\n    }\n    Widget.prototype.invalidate = function () {\n        if (!this._dirty) {\n            this._dirty = true;\n            scheduleNextFrameTask(this._sync);\n        }\n    };\n    Widget.prototype.sync = function () {\n        throw new Error(\"sync method not implemented\");\n    };\n    return Widget;\n}());\nvar MonitorWidgetFlags;\n(function (MonitorWidgetFlags) {\n    MonitorWidgetFlags[MonitorWidgetFlags[\"HideMin\"] = 1] = \"HideMin\";\n    MonitorWidgetFlags[MonitorWidgetFlags[\"HideMax\"] = 2] = \"HideMax\";\n    MonitorWidgetFlags[MonitorWidgetFlags[\"HideMean\"] = 4] = \"HideMean\";\n    MonitorWidgetFlags[MonitorWidgetFlags[\"HideLast\"] = 8] = \"HideLast\";\n    MonitorWidgetFlags[MonitorWidgetFlags[\"HideGraph\"] = 16] = \"HideGraph\";\n    MonitorWidgetFlags[MonitorWidgetFlags[\"RoundValues\"] = 32] = \"RoundValues\";\n})(MonitorWidgetFlags || (MonitorWidgetFlags = {}));\nvar MonitorWidget = (function (_super) {\n    __extends(MonitorWidget, _super);\n    function MonitorWidget(name, flags, unitName, samples) {\n        var _this = _super.call(this, name) || this;\n        _this.flags = flags;\n        _this.unitName = unitName;\n        _this.samples = samples;\n        var label = document.createElement(\"div\");\n        label.style.cssText = \"text-align: center\";\n        label.textContent = _this.name;\n        var text = document.createElement(\"div\");\n        if ((flags & MonitorWidgetFlags.HideMin) === 0) {\n            _this.minText = document.createElement(\"div\");\n            text.appendChild(_this.minText);\n        }\n        else {\n            _this.minText = null;\n        }\n        if ((flags & MonitorWidgetFlags.HideMax) === 0) {\n            _this.maxText = document.createElement(\"div\");\n            text.appendChild(_this.maxText);\n        }\n        else {\n            _this.maxText = null;\n        }\n        if ((flags & MonitorWidgetFlags.HideMean) === 0) {\n            _this.meanText = document.createElement(\"div\");\n            text.appendChild(_this.meanText);\n        }\n        else {\n            _this.meanText = null;\n        }\n        if ((flags & MonitorWidgetFlags.HideLast) === 0) {\n            _this.lastText = document.createElement(\"div\");\n            text.appendChild(_this.lastText);\n        }\n        else {\n            _this.lastText = null;\n        }\n        _this.element.appendChild(label);\n        _this.element.appendChild(text);\n        if ((flags & MonitorWidgetFlags.HideGraph) === 0) {\n            _this.canvas = document.createElement(\"canvas\");\n            _this.canvas.style.cssText = \"display: block; padding: 0; margin: 0\";\n            _this.canvas.width = MonitorGraphWidth;\n            _this.canvas.height = MonitorGraphHeight;\n            _this.ctx = _this.canvas.getContext(\"2d\");\n            _this.element.appendChild(_this.canvas);\n        }\n        else {\n            _this.canvas = null;\n            _this.ctx = null;\n        }\n        return _this;\n    }\n    MonitorWidget.prototype.sync = function () {\n        var _this = this;\n        var result = this.samples.calc();\n        var scale = MonitorGraphHeight / (result.max * 1.2);\n        var min;\n        var max;\n        var mean;\n        var last;\n        if ((this.flags & MonitorWidgetFlags.RoundValues) === 0) {\n            min = result.min.toFixed(2);\n            max = result.max.toFixed(2);\n            mean = result.mean.toFixed(2);\n            last = result.last.toFixed(2);\n        }\n        else {\n            min = Math.round(result.min).toString();\n            max = Math.round(result.max).toString();\n            mean = Math.round(result.mean).toString();\n            last = Math.round(result.last).toString();\n        }\n        if (this.minText !== null) {\n            this.minText.textContent = \"min: \\u00A0\" + min + this.unitName;\n        }\n        if (this.maxText !== null) {\n            this.maxText.textContent = \"max: \\u00A0\" + max + this.unitName;\n        }\n        if (this.meanText !== null) {\n            this.meanText.textContent = \"mean: \" + mean + this.unitName;\n        }\n        if (this.lastText !== null) {\n            this.lastText.textContent = \"last: \" + last + this.unitName;\n        }\n        if (this.ctx !== null) {\n            this.ctx.fillStyle = \"#010\";\n            this.ctx.fillRect(0, 0, MonitorGraphWidth, MonitorGraphHeight);\n            this.ctx.fillStyle = \"#0f0\";\n            this.samples.each(function (v, i) {\n                _this.ctx.fillRect(i, MonitorGraphHeight, 1, -(v * scale));\n            });\n        }\n    };\n    return MonitorWidget;\n}(Widget));\nvar CounterWidget = (function (_super) {\n    __extends(CounterWidget, _super);\n    function CounterWidget(name, counter) {\n        var _this = _super.call(this, name) || this;\n        _this.counter = counter;\n        _this.text = document.createElement(\"div\");\n        _this.element.appendChild(_this.text);\n        return _this;\n    }\n    CounterWidget.prototype.sync = function () {\n        this.text.textContent = this.name + \": \" + this.counter.value;\n    };\n    return CounterWidget;\n}(Widget));\n\nvar container = null;\nvar initialized = false;\n/**\n * Initialize Performance Monitor.\n */\nfunction initPerfMonitor(options) {\n    if (!initialized) {\n        if (options.container) {\n            container = options.container;\n        }\n        initialized = true;\n    }\n}\n/**\n * Check that everything is properly initialized.\n */\nfunction checkInit() {\n    if (!container) {\n        container = document.createElement(\"div\");\n        container.style.cssText = \"position: fixed;\" +\n            \"opacity: 0.9;\" +\n            \"right: 0;\" +\n            \"bottom: 0\";\n        document.body.appendChild(container);\n    }\n    initialized = true;\n}\n/**\n * Start FPS monitor\n */\nfunction startFPSMonitor(flags) {\n    if (flags === void 0) { flags = MonitorWidgetFlags.HideMin | MonitorWidgetFlags.HideMax |\n        MonitorWidgetFlags.HideMean | MonitorWidgetFlags.RoundValues; }\n    checkInit();\n    var data = new MonitorSamples(MonitorMaxSamples);\n    var w = new MonitorWidget(\"FPS\", flags, \"\", data);\n    container.appendChild(w.element);\n    var alpha = 2 / 121;\n    var last = 0;\n    var fps = 60;\n    function update(now) {\n        if (last > 0) {\n            fps += alpha * ((1000 / (now - last)) - fps);\n        }\n        last = now;\n        data.addSample(fps);\n        w.invalidate();\n        requestAnimationFrame(update);\n    }\n    requestAnimationFrame(update);\n}\n/**\n * Start Memory Monitor\n */\nfunction startMemMonitor(flags) {\n    if (flags === void 0) { flags = MonitorWidgetFlags.HideMin | MonitorWidgetFlags.HideMean; }\n    checkInit();\n    if (performance.memory === undefined) {\n        return;\n    }\n    var data = new MonitorSamples(MonitorMaxSamples);\n    var w = new MonitorWidget(\"Memory\", flags, \"MB\", data);\n    container.appendChild(w.element);\n    function update() {\n        data.addSample(Math.round(performance.memory.usedJSHeapSize / (1024 * 1024)));\n        w.invalidate();\n        setTimeout(update, 30);\n    }\n    update();\n}\nvar ProfilerDetails = (function () {\n    function ProfilerDetails(name, unitName, flags) {\n        this.data = new MonitorSamples(MonitorMaxSamples);\n        this.widget = new MonitorWidget(name, flags, unitName, this.data);\n        this.startTime = -1;\n    }\n    return ProfilerDetails;\n}());\nvar profilerInstances = {};\nvar CounterDetails = (function () {\n    function CounterDetails(name, interval) {\n        var _this = this;\n        this.data = interval === undefined ? new BasicCounter() : new SlidingCounter(interval);\n        this.widget = new CounterWidget(name, this.data);\n        this.data.onChange = function () {\n            _this.widget.invalidate();\n        };\n    }\n    return CounterDetails;\n}());\nvar counterInstances = {};\n/**\n * Initialize profiler and insert into container.\n */\nfunction initProfiler(name, flags) {\n    if (flags === void 0) { flags = 0; }\n    checkInit();\n    var profiler = profilerInstances[name];\n    if (profiler === void 0) {\n        profilerInstances[name] = profiler = new ProfilerDetails(name, \"ms\", flags);\n        container.appendChild(profiler.widget.element);\n    }\n}\n/**\n * Initialize counter and insert into container.\n */\nfunction initCounter(name, interval) {\n    checkInit();\n    var counter = counterInstances[name];\n    if (counter === void 0) {\n        counterInstances[name] = counter = new CounterDetails(name, interval);\n        container.appendChild(counter.widget.element);\n    }\n}\nfunction startProfile(name) {\n    var profiler = profilerInstances[name];\n    if (profiler !== void 0) {\n        profiler.startTime = performance.now();\n    }\n}\nfunction endProfile(name) {\n    var now = performance.now();\n    var profiler = profilerInstances[name];\n    if (profiler !== void 0 && profiler.startTime !== -1) {\n        profiler.data.addSample(now - profiler.startTime);\n        profiler.widget.invalidate();\n    }\n}\nfunction count(name, value) {\n    if (value === void 0) { value = 1; }\n    var counter = counterInstances[name];\n    if (counter !== void 0) {\n        counter.data.inc(value);\n    }\n}\n/**\n * lookup a profile by name\n * @param name the name of the profile to lookup\n */\nfunction getProfile(name) {\n    return profilerInstances[name];\n}\n/**\n * lookup a counter by name\n * @param name the name of the counter to lookup\n */\nfunction getCounter(name) {\n    return counterInstances[name];\n}\n\nexport { initPerfMonitor, startFPSMonitor, startMemMonitor, ProfilerDetails, CounterDetails, initProfiler, initCounter, startProfile, endProfile, count, getProfile, getCounter, MonitorSamplesResult, MonitorMaxSamples, MonitorSamples, BasicCounter, SlidingCounter, Widget, MonitorWidgetFlags, MonitorWidget, CounterWidget };\n","import { startFPSMonitor, startMemMonitor, initProfiler } from \"perf-monitor\";\nlet mutations = 0.5;\nlet N = 50;\nexport function getMutations() {\n    return mutations;\n}\nexport function getN() {\n    return N;\n}\nfunction parseQueryString(a) {\n    if (a.length === 0) {\n        return {};\n    }\n    const b = {};\n    for (let i = 0; i < a.length; ++i) {\n        const p = a[i].split(\"=\", 2);\n        if (p.length === 1) {\n            b[p[0]] = \"\";\n        }\n        else {\n            b[p[0]] = decodeURIComponent(p[1].replace(/\\+/g, \" \"));\n        }\n    }\n    return b;\n}\nexport function init() {\n    const qs = parseQueryString(window.location.search.substr(1).split(\"&\"));\n    if (qs[\"n\"] !== void 0) {\n        N = parseInt(qs[\"n\"], 10);\n    }\n    if (qs[\"m\"] !== void 0) {\n        mutations = parseFloat(qs[\"m\"]);\n    }\n    document.addEventListener(\"DOMContentLoaded\", () => {\n        startFPSMonitor();\n        startMemMonitor();\n        initProfiler(\"view update\");\n        const sliderContainer = document.createElement(\"div\");\n        sliderContainer.style.display = \"flex\";\n        const slider = document.createElement(\"input\");\n        slider.type = \"range\";\n        slider.style.marginBottom = \"10px\";\n        slider.style.marginTop = \"5px\";\n        const text = document.createElement(\"label\");\n        text.textContent = \"mutations : \" + (mutations * 100).toFixed(0) + \"%\";\n        slider.addEventListener(\"change\", (e) => {\n            mutations = Number.parseFloat(e.target.value) / 100;\n            text.textContent = \"mutations : \" + (mutations * 100).toFixed(0) + \"%\";\n        });\n        sliderContainer.appendChild(text);\n        sliderContainer.appendChild(slider);\n        document.body.insertBefore(sliderContainer, document.body.firstChild);\n    });\n}\n","function randomQuery() {\n    const elapsed = Math.random() * 15;\n    let query;\n    if (Math.random() < 0.1) {\n        query = \"vacuum\";\n    }\n    else if (Math.random() < 0.2) {\n        query = \"<IDLE> in transaction\";\n    }\n    else {\n        query = \"SELECT blah FROM something\";\n    }\n    return { elapsed, query };\n}\nfunction randomQueries() {\n    const queries = [];\n    const r = Math.floor((Math.random() * 10) + 1);\n    for (let i = 0; i < r; i++) {\n        queries.push(randomQuery());\n    }\n    return queries;\n}\nconst EMPTY_QUERY = { elapsed: 0, query: \"***\" };\nlet _nextId = 0;\nfunction createDB(name, id) {\n    if (id === void 0) {\n        id = _nextId++;\n    }\n    return { id, name, queries: randomQueries() };\n}\nexport function getTopFiveQueries(db) {\n    const qs = db.queries.slice(0, 5);\n    qs.sort((a, b) => a.elapsed - b.elapsed);\n    while (qs.length < 5) {\n        qs.push(EMPTY_QUERY);\n    }\n    return qs;\n}\nexport function createState(n) {\n    const state = [];\n    for (let i = 0; i < n; i++) {\n        state.push(createDB(\"cluster\" + (i + 1)));\n        state.push(createDB(\"cluster\" + (i + 1) + \" slave\"));\n    }\n    return state;\n}\nexport function randomUpdate(state, r) {\n    for (let i = 0; i < state.length; i++) {\n        if (Math.random() < r) {\n            const { id, name } = state[i];\n            state[i] = createDB(name, id);\n        }\n    }\n}\nexport function entryFormatElapsed(v) {\n    if (v === 0) {\n        return \"\";\n    }\n    if (v > 60) {\n        const minutes = Math.floor(v / 60);\n        const comps = (v % 60).toFixed(2).split(\".\");\n        const seconds = comps[0].padStart(2, \"0\");\n        const ms = comps[1];\n        return minutes + \":\" + seconds + \".\" + ms;\n    }\n    return v.toFixed(2);\n}\n","import { _, withNextFrame, render, requestDirtyCheck, statelessComponent, component, useSelect, TrackByKey, key, } from \"ivi\";\nimport { div, span, table, tbody, tr, td } from \"ivi-html\";\nimport { startProfile, endProfile } from \"perf-monitor\";\nimport { init, getN, getMutations } from \"./init\";\nimport { entryFormatElapsed, getTopFiveQueries, createState, randomUpdate } from \"./state\";\ninit();\nconst state = createState(getN());\nconst arrow = div(\"arrow\");\nconst Popover = statelessComponent((query) => (div(\"popover left\", _, [\n    div(\"popover-content\", _, query),\n    arrow,\n])));\nconst QueryCell = ({ elapsed, query }) => (td(elapsed >= 10.0 ? \"Query elapsed warn_long\" :\n    elapsed >= 1.0 ? \"Query elapsed warn\" :\n        \"Query elapsed short\", _, [\n    entryFormatElapsed(elapsed),\n    Popover(query),\n]));\nconst DatabaseList = component((c) => {\n    const getDB = useSelect(c, (idx) => state[idx]);\n    return (idx) => {\n        const db = getDB(idx);\n        const count = db.queries.length;\n        return tr(_, _, [\n            td(\"dbname\", _, db.name),\n            td(\"query-count\", _, span(count >= 20 ? \"label label-important\" :\n                count >= 10 ? \"label label-warning\" :\n                    \"label label-success\", _, count)),\n            getTopFiveQueries(db).map(QueryCell),\n        ]);\n    };\n});\nconst Main = (dbs) => (table(\"table table-striped latest-data\", _, [\n    tbody(_, _, TrackByKey(dbs.map((db, i) => key(db.id, DatabaseList(i))))),\n]));\nconst container = document.getElementById(\"app\");\nwithNextFrame(() => { render(Main(state), container); })();\nfunction tick() {\n    randomUpdate(state, getMutations());\n    startProfile(\"view update\");\n    withNextFrame(requestDirtyCheck)();\n    endProfile(\"view update\");\n    setTimeout(tick, 0);\n}\nsetTimeout(tick, 0);\n"],"sourceRoot":""}