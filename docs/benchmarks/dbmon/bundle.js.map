{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:////home/void/w/ts/ivi/packages/ivi/src/vdom/vnode.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/vdom/factories.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/vdom/context.ts","webpack:////home/void/w/ts/ivi/packages/ivi-scheduler/src/index.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/core/array.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/core/repeatable_task_list.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/core/noop.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/core/error.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/core/feature_detection.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/core/shortcuts.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/dom/namespaces.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/events/sync_events.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/vdom/sync.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/vdom/root.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/scheduler/index.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/vdom/hooks.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/vdom/map.ts","webpack:////home/void/w/ts/ivi/packages/ivi-html/src/index.ts","webpack:///./src/db.ts","webpack:////home/void/w/ts/ivi-examples/node_modules/perf-monitor/dist/es5/perf-monitor.js","webpack:///./src/main.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","VNode","[object Object]","flags","tag","props","className","style","this","_f","_l","_r","_c","_t","_k","_p","_i","_s","_cs","_e","events","text","children","arguments","first","prev","length","last","content","getDOMNode","vnode","component","shouldUpdate","_context","setContext","context","tmp","restoreContext","getContext","rAF","requestAnimationFrame","sMT","fn","Promise","resolve","then","unorderedArrayDeleteByIndex","array","index","pop","unorderedArrayDelete","item","indexOf","runRepeatableTasks","tasks","NOOP","ERROR_HANDLERS","catchError","apply","e","forEach","h","v","opts","window","addEventListener","KeyboardEvent","MouseEvent","IOS_GESTURE_EVENT","nodeProto","Node","elementProto","Element","nodeInsertBefore","insertBefore","nodeRemoveChild","removeChild","nodeReplaceChild","replaceChild","nodeCloneNode","cloneNode","elementSetAttribute","setAttribute","elementRemoveAttribute","setAttributeNS","removeAttribute","SVG_NAMESPACE","syncEvents","a","b","h1","h2","attachEvents","detachEvents","Array","registerEventHandler","unregisterEventHandler","handler","src","add","remove","_remove","parent","_detach","child","hookList","detached","_dirtyCheck","dirtyContext","instance","selector","select","dirty","_sync","update","assign","prevContext","_removeAllChildren","textContent","_instantiate","node","document","createTextNode","svg","createElementNS","createElement","syncAttrs","syncStyle","_render","render","refChild","aFlags","bFlags","aProps","bProps","data","aChild","bChild","_syncChildrenTrackByKeys","textNode","firstChild","nodeValue","descriptor","aStartVNode","bStartVNode","aEndVNode","bEndVNode","step1Synced","outer","next","nextNode","aInnerLength","bInnerLength","lastPosition","bInnerArray","explicitKeyIndex","implicitKeyIndex","Map","set","prevPositionsForB","fill","step2Synced","seq","lis","slice","result","u","j","k","bValue","setProperty","removeProperty","syncAttr","element","ROOTS","findRoot","container","find","dirtyCheck","root","current","onclick","run","_flags","_clock","_microtasks","_mutationEffects","_domLayoutEffects","_beforeMutations","_afterMutations","_frameStartTime","withSchedulerTick","inner","runMicrotasks","clock","withNextFrame","time","performance","now","_handleNextFrame","requestNextFrame","task","push","requestDirtyCheck","useSelect","prevSelector","state","lastChecked","nextState","nextProps","map","div","attrs","css","span","table","tbody","td","tr","Query","elapsed","query","Math","random","EMPTY_QUERY","DB","id","_nextId","queries","floor","rand","qs","sort","extendStatics","MonitorWidgetFlags","MonitorMaxSamples","MonitorSamplesResult","min","max","mean","MonitorSamples","maxSamples","samples","addSample","each","calc","sum","frameTasks","rafId","__extends","setPrototypeOf","__proto__","__","constructor","MonitorGraphHeight","MonitorGraphWidth","Widget","_this","sync","_dirty","cssText","invalidate","Error","MonitorWidget","_super","unitName","label","HideMin","minText","appendChild","HideMax","maxText","HideMean","meanText","HideLast","lastText","HideGraph","canvas","width","height","ctx","scale","RoundValues","toFixed","round","toString","fillStyle","fillRect","perf_monitor_container","CounterWidget","counter","checkInit","body","startFPSMonitor","w","fps","startMemMonitor","undefined","memory","usedJSHeapSize","setTimeout","ProfilerDetails","widget","startTime","profilerInstances","initProfiler","profiler","endProfile","mutations","N","split","decodeURIComponent","replace","parseQueryString","location","search","substr","parseInt","parseFloat","store","dbs","entryFormatElapsed","minutes","comps","counterClasses","count","queryClasses","Popover","DatabaseList","getDB","idx","db","topFiveQueries","getTopFiveQueries","q","Main","sliderContainer","display","slider","type","marginBottom","marginTop","Number","target","getElementById","tick","randomUpdate"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","import { NOOP } from \"../core/noop\";\nimport { objectHasOwnProperty } from \"../core/shortcuts\";\nimport { CSSStyleProps } from \"../dom/style\";\nimport { isVoidElement } from \"../debug/dom\";\nimport { checkVNodeConstructor, checkUniqueKeys } from \"../debug/vnode\";\nimport { EventHandler } from \"../events/event_handler\";\nimport { ComponentDescriptor, Component } from \"./component\";\n\n/**\n * VNode flags.\n */\nexport const enum VNodeFlags {\n  /**\n   * VNode represents a Text node.\n   */\n  Text = 1,\n  /**\n   * VNode represents an Element node.\n   */\n  Element = 1 << 1,\n  /**\n   * VNode is using an element factory to instantiate an Element node.\n   */\n  ElementFactory = 1 << 2,\n  /**\n   * VNode represents a component.\n   */\n  Component = 1 << 3,\n  /**\n   * VNode contains children nodes.\n   */\n  Children = 1 << 4,\n  /**\n   * VNode contains a text content.\n   */\n  TextContent = 1 << 5,\n  /**\n   * VNode is using an explicit key.\n   */\n  Key = 1 << 6,\n  /**\n   * Keyed list.\n   */\n  KeyedList = 1 << 7,\n  /**\n   * Element contains events.\n   */\n  Events = 1 << 8,\n  /**\n   * VNode is an SVGElement.\n   */\n  SvgElement = 1 << 9,\n  /**\n   * Specialized VNode with an update context behavior.\n   */\n  UpdateContext = 1 << 10,\n\n  ElementIdMask = 255 << 11,\n  ElementIdOffset = 11,\n  /**\n   * Dirty checking should be stopped at this node.\n   *\n   * NOTE: It is important that this flag is `1 << 31 === -1`. It allows to use a simple `flags > 0` check in the hot\n   * path of the dirty checking instead of using two checks.\n   */\n  StopDirtyChecking = 1 << 31,\n\n  /**\n   * Flags that should match to be compatible for syncing.\n   */\n  Syncable = 0\n  | Text\n  | Element\n  | ElementFactory\n  | Component\n  | UpdateContext\n  | TextContent\n  | Key\n  | SvgElement\n  | ElementIdMask,\n}\n\n/**\n * Virtual DOM Node.\n *\n * @example\n *\n *     const vnode = div(\"div-class-name\", { id: \"div-id\" })\n *       .e(onClick((e) => console.log(\"click event\", e)))\n *       .c(\"Hello\");\n *\n * @final\n */\nexport class VNode<P = any, N = Node> {\n  /**\n   * Flags, see {@link VNodeFlags} for details.\n   */\n  _f: VNodeFlags;\n  /**\n   * Circular link to previous sibling node (left).\n   */\n  _l: VNode;\n  /**\n   * Next sibling node (right).\n   */\n  _r: VNode | null;\n  /**\n   * Children.\n   */\n  _c: VNode | string | number | null;\n  /**\n   * Tag property contains details about the type of the element.\n   */\n  _t: string | VNode | ComponentDescriptor | null;\n  /**\n   * Children syncing algorithm is using key property to match nodes. Key should be unique among its siblings.\n   */\n  _k: any;\n  /**\n   * Properties.\n   */\n  _p: P | undefined;\n  /**\n   * Reference to HTML node or Component instance.\n   *\n   * It will be available after virtual node is created or synced. Each time VNode is synced, reference will be\n   * transferred from the old VNode to the new one.\n   */\n  _i: N | Component<P> | {} | null;\n  /**\n   * Style.\n   */\n  _s: CSSStyleProps | undefined;\n  /**\n   * Class name.\n   */\n  _cs: string | undefined;\n  /**\n   * Events.\n   */\n  _e: Array<EventHandler | null> | EventHandler | null;\n  /**\n   * Factory function that was used to instantiate this node.\n   *\n   * It is used for debugging and testing purposes.\n   */\n  factory!: Function;\n\n  constructor(\n    flags: number,\n    tag: string | VNode | ComponentDescriptor<any> | null,\n    props: P | undefined,\n    className: string | undefined,\n    style: CSSStyleProps | undefined,\n  ) {\n    this._f = flags;\n    this._l = this;\n    this._r = null;\n    this._c = null;\n    this._t = tag;\n    this._k = 0;\n    this._p = props;\n    this._i = null;\n    this._s = style;\n    this._cs = className;\n    this._e = null;\n    /* istanbul ignore else */\n    if (DEBUG) {\n      checkVNodeConstructor(this);\n      this.factory = NOOP;\n    }\n  }\n\n  /**\n   * Assigns a key.\n   *\n   * Children reconciliation algorithm is using keys to match nodes. Key should be unique among its siblings.\n   *\n   * @param key - Unique key\n   * @returns this node\n   */\n  k(key: any): this {\n    this._f |= VNodeFlags.Key;\n    this._k = key;\n    return this;\n  }\n\n  /**\n   * Assign events.\n   *\n   * @param events - Events\n   * @returns this node\n   */\n  e(events: Array<EventHandler | null> | EventHandler | null): this {\n    /* istanbul ignore else */\n    if (DEBUG) {\n      if ((this._f & VNodeFlags.Text)) {\n        throw new Error(\"Failed to set events, events aren't available on text nodes\");\n      }\n    }\n    if (events !== null) {\n      this._f |= VNodeFlags.Events;\n      this._e = events;\n    }\n    return this;\n  }\n\n  /**\n   * Assigns a text content for ane Element node.\n   *\n   * @param text - Text content.\n   * @returns this node\n   */\n  t(text: string | number): this {\n    /* istanbul ignore else */\n    if (DEBUG) {\n      if (this._c !== null) {\n        throw new Error(\"Failed to set text content, VNode element is already having children\");\n      }\n      if (!(this._f & VNodeFlags.Element)) {\n        throw new Error(\"Failed to set text content, text content is available on element nodes only\");\n      }\n      if (isVoidElement(this._t as string)) {\n        throw new Error(\"Failed to set text content, void elements can't have any children\");\n      }\n      if (this._p) {\n        if (objectHasOwnProperty.call(this._p, \"unsafeHTML\")) {\n          throw new Error(\"Failed to set text content, element is using unsafeHTML attribute\");\n        }\n      }\n    }\n    this._f |= VNodeFlags.StopDirtyChecking | VNodeFlags.TextContent;\n    this._c = text;\n    return this;\n  }\n\n  /**\n   * Assigns children for an Element node.\n   *\n   * @param children - Children can be a simple string, single VNode or recursive list of VNodes with strings and null\n   *   values. It will automatically normalize recursive lists by flattening, filtering out null values and replacing\n   *   strings with text nodes.\n   * @returns this node\n   */\n  c(...children: Array<VNode | string | number | null>): this;\n  c(): this {\n    /* istanbul ignore else */\n    if (DEBUG) {\n      if (this._c !== null) {\n        throw new Error(\"Failed to set children, VNode element is already having children\");\n      }\n      if (!(this._f & VNodeFlags.Element)) {\n        throw new Error(\"Failed to set children, children are available on element nodes only\");\n      }\n      if (isVoidElement(this._t as string)) {\n        throw new Error(\"Failed to set children, void elements can't have any children\");\n      }\n      if (this._p) {\n        if (objectHasOwnProperty.call(this._p, \"unsafeHTML\")) {\n          throw new Error(\"Failed to set children, element is using unsafeHTML attribute\");\n        }\n      }\n    }\n\n    const children: Array<VNode | string | number | null> = arguments as any;\n    let first: VNode<any> | null = null;\n    let prev: VNode<any> | null = null;\n\n    for (let i = 0, p = 0; i < children.length; ++i, ++p) {\n      let n = children[i];\n\n      if (n !== null) {\n        if (typeof n !== \"object\") {\n          n = t(n);\n        }\n        const last = n._l;\n        const flags = n._f;\n        if (last === n) {\n          if ((flags & VNodeFlags.Key) === 0) {\n            n._k = p;\n          }\n        } else if ((flags & VNodeFlags.KeyedList) === 0) {\n          let c: VNode | null = n;\n          do {\n            if ((c!._f & VNodeFlags.Key) === 0) {\n              c!._k = p;\n            }\n            ++p;\n            c = c!._r;\n          } while (c !== null);\n          --p;\n        }\n\n        if (prev !== null) {\n          n._l = prev;\n          prev._r = n;\n        } else {\n          first = n;\n        }\n        prev = last;\n      }\n    }\n    if (first !== null) {\n      first._l = prev!;\n      this._f |= VNodeFlags.Children;\n      this._c = first;\n      /* istanbul ignore else */\n      if (DEBUG) {\n        checkUniqueKeys(first);\n      }\n    }\n\n    return this;\n  }\n}\n\n/**\n * Create a VNode representing a Text node.\n *\n * @param content Text content.\n * @returns VNode object.\n */\nexport const t = (content: string | number): VNode<string | number, Text> =>\n  new VNode(VNodeFlags.Text, null, content, \"\", void 0);\n\n/**\n * getDOMNode retrieves a reference to a DOM node from a VNode object.\n *\n * @param vnode - Virtual DOM node which contains reference to a DOM node.\n * @returns null if VNode doesn't have a reference to a DOM node.\n */\nexport function getDOMNode<T extends Node>(vnode: VNode): T | null {\n  if ((vnode._f & (VNodeFlags.Component | VNodeFlags.UpdateContext)) !== 0) {\n    return getDOMNode<T>(vnode._c as VNode);\n  }\n  return vnode._i as T;\n}\n\n/**\n * getComponent retrieves a reference to a Component instance from a VNode object.\n *\n * @param vnode - Virtual DOM node which contains reference to a Component instance.\n * @returns `null` if `vnode` doesn't have a reference to a Component instance\n */\nexport function getComponent<T extends Component<any>>(vnode: VNode): T | null {\n  /* istanbul ignore else */\n  if (DEBUG) {\n    if ((vnode._f & (VNodeFlags.Component | VNodeFlags.UpdateContext)) === 0) {\n      throw new Error(\"Failed to get component instance: VNode should represent a Component.\");\n    }\n  }\n  return vnode._i as T | null;\n}\n\n/**\n * stopDirtyChecking stops dirty checking process when it goes through this virtual DOM node.\n *\n * @param vnode - Virtual DOM node\n * @returns `vnode`\n */\nexport function stopDirtyChecking<N extends VNode>(vnode: N): N {\n  vnode._f |= VNodeFlags.StopDirtyChecking;\n  return vnode;\n}\n","import { CSSStyleProps } from \"../dom/style\";\nimport { ComponentDescriptor, Component } from \"./component\";\nimport { VNodeFlags, VNode } from \"./vnode\";\n\n/**\n * `element()` creates a virtual DOM node factory that produces elements with predefined attributes and styles.\n *\n * @example\n *\n *     const DivWithIdAttribute = element(div(\"\", { id: \"predefined-id\" }));\n *\n *     render(\n *       DivWithIdAttribute(),\n *       document.getElementById(\"app\")!,\n *     );\n *\n * @param proto - Virtual DOM prototype\n * @returns factory that produces elements with predefined attributes\n */\nexport function element<P, N>(proto: VNode<P, N>): (className?: string, attrs?: P, css?: CSSStyleProps) => VNode<P, N> {\n  const flags = proto._f | VNodeFlags.ElementFactory;\n  return (className?: string, attrs?: P, css?: CSSStyleProps) => (\n    new VNode<P, N>(flags, proto, attrs, className, css)\n  );\n}\n\n/**\n * component creates a virtual DOM node factory that produces nodes for components.\n *\n * @example\n *\n *     const A = component<string>(() => {\n *       let _text;\n *       const click = onClick((ev) => console.log(_text));\n *\n *       return (text) => (\n *         _text = text,\n *         button()\n *           .e(click(text))\n *           .t(\"Click Me\")\n *       );\n *     });\n *\n * @param c - Component function.\n * @param shouldUpdate - `shouldUpdate` function.\n * @returns factory that produces component nodes\n */\nexport function component(\n  c: (c: Component<undefined>) => () => VNode,\n): () => VNode<undefined>;\n\n/**\n * component creates a virtual DOM node factory that produces nodes for components.\n *\n * @example\n *\n *     const A = component<string>(() => {\n *       let _text;\n *       const click = onClick((ev) => console.log(_text));\n *\n *       return (text) => (\n *         _text = text,\n *         button()\n *           .e(click(text))\n *           .t(\"Click Me\")\n *       );\n *     });\n *\n * @param c - Component function.\n * @param shouldUpdate - `shouldUpdate` function.\n * @returns factory that produces component nodes\n */\nexport function component<P>(\n  c: (c: Component<P>) => (props: P) => VNode,\n  shouldUpdate?: undefined extends P ? undefined : (prev: P, next: P) => boolean,\n): undefined extends P ? (props?: P) => VNode<P> : (props: P) => VNode<P>;\n\n/**\n * component creates a virtual DOM node factory that produces nodes for components.\n *\n * @example\n *\n *     const A = component<string>(() => {\n *       let _text;\n *       const click = onClick((ev) => console.log(_text));\n *\n *       return (text) => (\n *         _text = text,\n *         button()\n *           .e(click(text))\n *           .t(\"Click Me\")\n *       );\n *     });\n *\n * @param c - Component function.\n * @param shouldUpdate - `shouldUpdate` function.\n * @returns factory that produces component nodes\n */\nexport function component<P>(\n  c: (c: Component<P>) => (props: P) => VNode,\n  shouldUpdate?: (prev: P, next: P) => boolean,\n): (props: P) => VNode<P> {\n  const d: ComponentDescriptor<P> = { c, shouldUpdate };\n  const f = (props: P) => {\n    const n = new VNode<P>(VNodeFlags.Component, d, props, \"\", void 0);\n    /* istanbul ignore else */\n    if (DEBUG) {\n      n.factory = f;\n    }\n    return n;\n  };\n  return f;\n}\n\n/**\n * statelessComponent creates a virtual DOM node factory that produces nodes for stateless components.\n *\n * @example\n *\n *     const A = statelessComponent<string>(() => {\n *       return (text) => div().t(text);\n *     });\n *\n * @param update - Update function.\n * @param shouldUpdate - `shouldUpdate` function.\n * @returns factory that produces stateless component nodes\n */\nexport function statelessComponent(\n  update: () => VNode,\n): () => VNode<undefined>;\n\n/**\n * statelessComponent creates a virtual DOM node factory that produces nodes for stateless components.\n *\n * @example\n *\n *     const A = statelessComponent<string>(() => {\n *       return (text) => div().t(text);\n *     });\n *\n * @param update - Update function.\n * @param shouldUpdate - `shouldUpdate` function.\n * @returns factory that produces stateless component nodes\n */\nexport function statelessComponent<P>(\n  update: (props: P) => VNode,\n  shouldUpdate?: undefined extends P ? undefined : (prev: P, next: P) => boolean,\n): undefined extends P ? (props?: P) => VNode<P> : (props: P) => VNode<P>;\n\n/**\n * statelessComponent creates a virtual DOM node factory that produces nodes for stateless components.\n *\n * @example\n *\n *     const A = statelessComponent<string>(() => {\n *       return (text) => div().t(text);\n *     });\n *\n * @param update - Update function.\n * @param shouldUpdate - `shouldUpdate` function.\n * @returns factory that produces stateless component nodes\n */\nexport function statelessComponent<P>(\n  update: (props: P) => VNode,\n  shouldUpdate?: undefined extends P ? undefined : (prev: P, next: P) => boolean,\n): (props: P) => VNode<P> {\n  return component(() => update, shouldUpdate);\n}\n\n/**\n * context creates a virtual DOM node that will modify current context.\n *\n * @example\n *\n *     render(\n *       context({ key: 123 },\n *         ChildComponent(),\n *       ),\n *       DOMContainer,\n *     );\n *\n * @param ctx - Context object\n * @param child - child Virtual DOM node\n * @returns context node\n */\nexport function context<T = {}>(ctx: T, child: VNode): VNode<T> {\n  /* istanbul ignore else */\n  if (DEBUG) {\n    if (child._l !== child) {\n      throw new Error(\"Context node contains an invalid child. Child should be a singular VNode.\");\n    }\n  }\n  const n = new VNode<T>(\n    VNodeFlags.UpdateContext,\n    null,\n    ctx,\n    \"\",\n    void 0,\n  );\n  n._c = child;\n  return n;\n}\n","/**\n * Current context.\n */\nlet _context = {};\n\n/**\n * setContext assigns current context.\n *\n * Should be executed before going deeper into Context node.\n *\n * @param context - Current context.\n * @returns previous context\n */\nexport function setContext(context: {}): {} {\n  const tmp = _context;\n  _context = context;\n  return tmp;\n}\n\n/**\n * restoreContext restores previous context.\n *\n * Should be executed after processing Context node.\n *\n * @param context - Previous context.\n */\nexport function restoreContext(context: {}): void {\n  _context = context;\n}\n\n/**\n * getContext retrieves current context.\n *\n * @returns current context\n */\nexport function getContext(): {} {\n  return _context;\n}\n","export const rAF = requestAnimationFrame;\nexport const sMT = (fn: () => void) => { Promise.resolve().then(fn); };\n","/**\n * append pushes item to an array and automatically creates a new array when it doesn't exist.\n *\n * @param array - Array\n * @param item - Item\n * @returns Array\n */\nexport const append = <T>(array: T[] | null, item: T) => array === null ? [item] : (array.push(item), array);\n\n/**\n * unorderedArrayDeleteIndex deletes item from an array with O(1) complexity.\n *\n * It swaps item at `index` position with the last item and removes the last one.\n *\n * @param array - Array\n * @param index - Index of an item to delete\n */\nexport function unorderedArrayDeleteByIndex<T>(array: T[], index: number): void {\n  const length = array.length - 1;\n  const last = array.pop();\n  if (index !== length) {\n    array[index] = last!;\n  }\n}\n\n/**\n * unorderedArrayDelete deletes item from an array with O(1) complexity.\n *\n * It swaps item at `index` position with the last item and deletes the last one.\n *\n * @param array - Array\n * @param item - Item to delete\n */\nexport function unorderedArrayDelete<T>(array: T[], item: T): void {\n  const index = array.indexOf(item);\n  /* istanbul ignore else */\n  if (DEBUG) {\n    if (index === -1) {\n      throw new Error(`Failed to delete an item from an array, item doesn't exist in the array`);\n    }\n  }\n  unorderedArrayDeleteByIndex(array, index);\n}\n","import { unorderedArrayDeleteByIndex } from \"./array\";\n\n/**\n * RepeatableTaskList is a data structure for tasks that will be repeated until they return `true` value.\n */\nexport type RepeatableTaskList = Array<() => boolean | void>;\n\n/**\n * runRepeatableTasks runs repeatable tasks.\n *\n * @param tasks - Repeatable tasks\n */\nexport function runRepeatableTasks(tasks: RepeatableTaskList): void {\n  for (let i = 0; i < tasks.length; ++i) {\n    if (tasks[i]() === true) {\n      unorderedArrayDeleteByIndex(tasks, i--);\n    }\n  }\n}\n","/**\n * NOOP function.\n */\nexport const NOOP = () => { /**/ };\n\n/**\n * NOOP_FALSE function always returns `false` value.\n *\n * @returns `false` value.\n */\nexport const NOOP_FALSE = () => false;\n\n/**\n * NOOP_TRUE function always returns `true` value.\n *\n * @returns `true` value.\n */\nexport const NOOP_TRUE = () => true;\n","const ERROR_HANDLERS: Array<(e: any) => void> = [];\n\n/**\n * addErrorHandler adds an error handler for errors catched by functions decorated with `catchError()`.\n *\n * @param handler error handler.\n */\nexport function addErrorHandler(handler: (e: any) => void): void {\n  ERROR_HANDLERS.push(handler);\n}\n\n/**\n * catchError is a decorator that catches exceptions and invokes error handlers registered with `addErrorHandler()`.\n *\n * @noinline\n * @throws\n * @param fn - Function to decorate\n * @returns function decorated with a catchError\n */\nexport function catchError<T>(fn: (...args: any[]) => T): (...args: any[]) => T;\nexport function catchError<T>(fn: () => T): (...args: any[]) => T {\n  return function () {\n    try {\n      return fn.apply(void 0, arguments);\n    } catch (e) {\n      ERROR_HANDLERS.forEach((h) => { h(e); });\n      throw e;\n    }\n  };\n}\n","/**\n * Feature Detection is used to implement polyfills or just disable some features when browser doesn't support them.\n * For example, when browser doesn't support passive events, we can just ignore it and always use active events.\n */\n\n/* istanbul ignore next */\n/**\n * Passive event listeners are a new feature in the DOM spec that enable developers to opt-in to better scroll\n * performance by eliminating the need for scrolling to block on touch and wheel event listeners. Developers can\n * annotate touch and wheel listeners with {passive: true} to indicate that they will never invoke preventDefault.\n *\n * https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n */\nexport const PASSIVE_EVENTS = /*#__PURE__*/((TARGET === \"electron\") ? true :\n  (() => {\n    let v = false;\n    try {\n      // Test via a getter in the options object to see if the passive property is accessed\n      const opts = Object.defineProperty({}, \"passive\", {\n        get() {\n          v = true;\n        },\n      });\n      window.addEventListener(\"test\", null as any as (ev: Event) => void, opts);\n    } catch (e) {\n      // ignore\n    }\n    return v;\n  })());\n\n/* istanbul ignore next */\n/**\n * `key` property is available on KeyboardEvent instances.\n */\nexport const KEYBOARD_EVENT_KEY = /*#__PURE__*/(\n  (TARGET === \"electron\") ||\n  (TARGET === \"evergreen\") ||\n  KeyboardEvent.prototype.hasOwnProperty(\"key\")\n);\n\n/* istanbul ignore next */\n/**\n * `buttons` property is available on MouseEvent instances.\n */\nexport const MOUSE_EVENT_BUTTONS = /*#__PURE__*/(\n  (TARGET === \"electron\") ||\n  (TARGET === \"evergreen\") ||\n  MouseEvent.prototype.hasOwnProperty(\"buttons\")\n);\n\n/* istanbul ignore next */\n/**\n * Touch Events support.\n */\nexport const TOUCH_EVENTS = (\"ontouchstart\" in window);\n\n/* istanbul ignore next */\n/**\n * Pointer Events support.\n */\nexport const POINTER_EVENTS = ((TARGET === \"electron\") || (\"PointerEvent\" in window));\n\n/* istanbul ignore next */\n/**\n * InputDeviceCapabilities support.\n *\n * http://wicg.github.io/InputDeviceCapabilities/\n */\nexport const INPUT_DEVICE_CAPABILITIES = ((TARGET === \"electron\") || \"InputDeviceCapabilities\" in window);\n\n/* istanbul ignore next */\n/**\n * iOS proprietary GestureEvent.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/GestureEvent}\n */\nexport const IOS_GESTURE_EVENT = (TARGET !== \"electron\") && (\"GestureEvent\" in window);\n","const nodeProto = Node.prototype;\nconst elementProto = Element.prototype;\n\n/**\n * Shortcut for an `Object.prototype.hasOwnProperty`.\n */\nexport const objectHasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Shortcut for a `Node.prototype.insertBefore`.\n */\nexport const nodeInsertBefore = nodeProto.insertBefore;\n\n/**\n * Shortcut for a `Node.prototype.removeChild`.\n */\nexport const nodeRemoveChild = nodeProto.removeChild;\n\n/**\n * Shortcut for a `Node.prototype.replaceChild`.\n */\nexport const nodeReplaceChild = nodeProto.replaceChild;\n\n/**\n * Shortcut for a `Node.prototype.cloneNode`.\n */\nexport const nodeCloneNode = nodeProto.cloneNode;\n\n/**\n * Shortcut for an `Element.prototype.setAttribute`.\n */\nexport const elementSetAttribute = elementProto.setAttribute;\n\n/**\n * Shortcut for an `Element.prototype.setAttributeNS`.\n */\nexport const elementSetAttributeNS = elementProto.setAttributeNS;\n\n/**\n * Shortcut for an `Element.prototype.removeAttribute`.\n */\nexport const elementRemoveAttribute = elementProto.removeAttribute;\n\n/**\n * Shortcut for an `undefined` value.\n */\nexport const _ = void 0;\n","export const SVG_NAMESPACE = \"http://www.w3.org/2000/svg\";\nexport const XLINK_NAMESPACE = \"http://www.w3.org/1999/xlink\";\nexport const XML_NAMESPACE = \"http://www.w3.org/XML/1998/namespace\";\n","import { EventHandlerFlags } from \"./flags\";\nimport { EventHandler } from \"./event_handler\";\n\n/**\n * syncEvents syncs event handlers and invokes EventSource callbacks when event handler is attached or detached.\n *\n * @param a Old event handlers.\n * @param b New event handlers.\n */\nexport function syncEvents(\n  a: Array<EventHandler | null> | EventHandler | null,\n  b: Array<EventHandler | null> | EventHandler | null,\n): void {\n  let i: number;\n  let h1: EventHandler | null;\n  let h2: EventHandler | null;\n\n  if (a === null) {\n    attachEvents(b!);\n  } else if (b === null) {\n    detachEvents(a);\n  } else {\n    if (a instanceof Array) {\n      if (b instanceof Array) {\n        i = 0;\n        while (i < a.length && i < b.length) {\n          h1 = a[i];\n          h2 = b[i++];\n          if (h1 !== h2) {\n            if (h2 !== null) {\n              registerEventHandler(h2);\n            }\n            if (h1 !== null) {\n              unregisterEventHandler(h1);\n            }\n          }\n        }\n        while (i < b.length) {\n          h1 = b[i++];\n          if (h1 !== null) {\n            registerEventHandler(h1);\n          }\n        }\n        while (i < a.length) {\n          h1 = a[i++];\n          if (h1 !== null) {\n            unregisterEventHandler(h1);\n          }\n        }\n      } else {\n        registerEventHandler(b as EventHandler);\n\n        for (i = 0; i < a.length; ++i) {\n          h1 = a[i];\n          if (h1 !== null) {\n            unregisterEventHandler(h1);\n          }\n        }\n      }\n    } else {\n      attachEvents(b);\n      unregisterEventHandler(a as EventHandler);\n    }\n  }\n}\n\n/**\n * attachEvents attaches event handlers and invokes EventSource callbacks.\n *\n * @param events Event handlers.\n */\nexport function attachEvents(events: Array<EventHandler | null> | EventHandler): void {\n  if (events instanceof Array) {\n    for (let i = 0; i < events.length; ++i) {\n      const h = events[i];\n      if (h !== null) {\n        registerEventHandler(h);\n      }\n    }\n  } else {\n    registerEventHandler(events as EventHandler);\n  }\n}\n\n/**\n * detachEvents detaches events handles and invokes EventSource callbacks.\n *\n * @param events Event handlers.\n */\nexport function detachEvents(events: Array<EventHandler | null> | EventHandler): void {\n  if (events instanceof Array) {\n    for (let i = 0; i < events.length; ++i) {\n      const h = events[i];\n      if (h !== null) {\n        unregisterEventHandler(h);\n      }\n    }\n  } else {\n    unregisterEventHandler(events as EventHandler);\n  }\n}\n\n/**\n * registerEventHandler is a shortcut for Event Handler registration.\n *\n * @param handler Event Handler.\n */\nfunction registerEventHandler(handler: EventHandler<any>): void {\n  /* istanbul ignore else */\n  if (DEBUG) {\n    handler.flags |= EventHandlerFlags.Active;\n  }\n  handler.src.add(handler);\n}\n\n/**\n * unregisterEventHandler is a shortcut for Event Handler unregistration.\n *\n * @param handler Event Handler.\n */\nfunction unregisterEventHandler(handler: EventHandler<any>): void {\n  /* istanbul ignore else */\n  if (DEBUG) {\n    handler.flags &= ~EventHandlerFlags.Active;\n  }\n  handler.src.remove(handler);\n}\n","import {\n  nodeRemoveChild, nodeInsertBefore, elementRemoveAttribute, elementSetAttribute, nodeCloneNode, nodeReplaceChild,\n} from \"../core/shortcuts\";\nimport { SVG_NAMESPACE } from \"../dom/namespaces\";\nimport { CSSStyleProps } from \"../dom/style\";\nimport { syncEvents, attachEvents, detachEvents } from \"../events/sync_events\";\nimport { AttributeDirective } from \"./attribute_directive\";\nimport { VNodeFlags, VNode, getDOMNode } from \"./vnode\";\nimport { ComponentDescriptor, Component } from \"./component\";\nimport { setContext, getContext, restoreContext } from \"./context\";\n\n/**\n * Removes VNode.\n *\n * @param parent - Parent DOM node\n * @param vnode - Virtual DOM node to remove\n */\nexport function _remove(parent: Node, vnode: VNode): void {\n  /* istanbul ignore else */\n  if (DEBUG) {\n    parent.removeChild(getDOMNode(vnode)!);\n  } else {\n    nodeRemoveChild.call(parent, getDOMNode(vnode)!);\n  }\n  _detach(vnode);\n}\n\n/**\n * Recursively detach all nodes.\n *\n * @param vnode - Virtual DOM node\n */\nfunction _detach(vnode: VNode): void {\n  const flags = vnode._f;\n\n  if ((flags & (VNodeFlags.Children | VNodeFlags.Component | VNodeFlags.UpdateContext)) !== 0) {\n    let child = vnode._c as VNode | null;\n    while (child !== null) {\n      _detach(child);\n      child = child._r;\n    }\n\n    if ((flags & VNodeFlags.Component) !== 0) {\n      const hookList = (vnode._i as Component).detached;\n      if (hookList !== null) {\n        if (typeof hookList === \"function\") {\n          hookList();\n        } else {\n          for (let i = 0; i < hookList.length; i++) {\n            hookList[i](true);\n          }\n        }\n      }\n    }\n  }\n\n  if ((flags & VNodeFlags.Events) !== 0) {\n    detachEvents(vnode._e!);\n  }\n}\n\n/**\n * Recursively perform dirty checking.\n *\n * @param parent - Parent DOM Node\n * @param vnode - VNode\n * @param context - Current context\n * @param dirtyContext - Context is dirty\n */\nexport function _dirtyCheck(parent: Node, vnode: VNode, dirtyContext: boolean): void {\n  const flags = vnode._f;\n\n  if ((flags & (\n    VNodeFlags.StopDirtyChecking | // StopDirtyChecking will convert this value to -value\n    VNodeFlags.Children | VNodeFlags.Component | VNodeFlags.UpdateContext\n  )) > 0) {\n    const instance = vnode._i as Node | Component;\n    let child = vnode._c as VNode | null;\n    if ((flags & VNodeFlags.Children) !== 0) {\n      while (child !== null) {\n        _dirtyCheck(instance as Node, child, dirtyContext);\n        child = child._r;\n      }\n    } else if ((flags & VNodeFlags.Component) !== 0) {\n      const selector = (instance as Component).select;\n      if (((instance as Component).dirty === true) || (selector !== null && selector(getContext()) === true)) {\n        _sync(\n          parent,\n          child!,\n          vnode._c = DEBUG ?\n            shouldBeSingleVNode((instance as Component).update!(vnode._p)) :\n                /* istanbul ignore next */(instance as Component).update!(vnode._p),\n          dirtyContext,\n        );\n      } else {\n        _dirtyCheck(parent, child!, dirtyContext);\n      }\n    } else { // (flags & VNodeFlags.UpdateContext)\n      if (dirtyContext === true) {\n        vnode._i = { ...getContext(), ...vnode._p };\n      }\n      const prevContext = setContext(vnode._i as {});\n      _dirtyCheck(parent, child!, dirtyContext);\n      restoreContext(prevContext);\n    }\n  }\n}\n\n/**\n * Remove all children.\n *\n * `detach()` lifecycle methods will be invoked for all children and their subtrees.\n *\n * @param parent - Parent DOM element\n * @param vnode - First Virtual DOM node\n */\nfunction _removeAllChildren(parent: Node, vnode: VNode): void;\nfunction _removeAllChildren(parent: Node, vnode: VNode | null): void {\n  parent.textContent = \"\";\n  do {\n    _detach(vnode!);\n    vnode = vnode!._r;\n  } while (vnode !== null);\n}\n\n/**\n * Render virtual DOM node.\n *\n * @param parent - Parent DOM element\n * @param vnode - Virtual DOM node to render\n * @param context - Current context\n * @returns Rendered DOM Node\n */\nfunction _instantiate(parent: Node, vnode: VNode): Node {\n  /* istanbul ignore else */\n  if (DEBUG) {\n    if (vnode._i !== null) {\n      throw new Error(\"VNode is already have a reference to an instance. VNodes can't be used mutliple times, \" +\n        \"clone VNode with `cloneVNode`.\");\n    }\n  }\n\n  const flags = vnode._f;\n  const props = vnode._p;\n  let instance: Node | Component | null = null;\n  let node: Node;\n\n  if ((flags & VNodeFlags.Text) !== 0) {\n    instance = node = document.createTextNode(props as string);\n  } else {\n    const tag = vnode._t;\n    if ((flags & VNodeFlags.Events) !== 0) {\n      attachEvents(vnode._e!);\n    }\n    if ((flags & VNodeFlags.Element) !== 0) {\n      const svg = (flags & VNodeFlags.SvgElement) !== 0;\n      if ((flags & VNodeFlags.ElementFactory) === 0) {\n        node = svg ?\n          document.createElementNS(SVG_NAMESPACE, tag as string) :\n          document.createElement(tag as string);\n      } else {\n        if ((tag as VNode)._i === null) {\n          _instantiate(parent, (tag as VNode));\n        }\n        /* istanbul ignore else */\n        if (DEBUG) {\n          node = ((tag as VNode)._i as Node).cloneNode(true);\n        } else {\n          node = nodeCloneNode.call((tag as VNode)._i as Node, true);\n        }\n      }\n      instance = node;\n\n      const className = vnode._cs;\n      if (className) {\n        /**\n         * SVGElement.className returns `SVGAnimatedString`\n         */\n        if (svg === true) {\n          /* istanbul ignore else */\n          if (DEBUG) {\n            (node as Element).setAttribute(\"class\", className);\n          } else {\n            elementSetAttribute.call(node as Element, \"class\", className);\n          }\n        } else {\n          (node as Element).className = className;\n        }\n      }\n\n      if (props !== void 0) {\n        syncAttrs(node as Element, void 0, props);\n      }\n      if (vnode._s !== void 0) {\n        syncStyle(node as HTMLElement, void 0, vnode._s);\n      }\n\n      if ((flags & VNodeFlags.Children) !== 0) {\n        let child = vnode._c as VNode | null;\n        while (child !== null) {\n          _render(node, null, child);\n          child = child._r;\n        }\n      } else if ((flags & VNodeFlags.TextContent) !== 0 && vnode._c !== \"\") {\n        node.textContent = vnode._c as string;\n      }\n    } else if ((flags & VNodeFlags.Component) !== 0) {\n      instance = { dirty: false, update: null, select: null, detached: null };\n      const render = (tag as ComponentDescriptor).c(instance);\n      instance.update = render;\n      node = _instantiate(\n        parent,\n        vnode._c = DEBUG ?\n          shouldBeSingleVNode(render(props)) :\n            /* istanbul ignore next */render(props),\n      );\n    } else {\n      const prevContext = setContext(instance = { ...getContext(), ...props });\n      node = _instantiate(parent, vnode._c as VNode);\n      restoreContext(prevContext);\n    }\n  }\n\n  vnode._i = instance;\n  return node;\n}\n\n/**\n * Render virtual DOM node into container and invoke `attached()` lifecycle methods after node is inserted into\n * container.\n *\n * It is important that `attached()` methods are invoked only after DOM nodes have been inserted into container, so it\n * goes twice through the entire vnode tree, first time when everything is rendered and the second time when\n * `attached()` methods are invoked.\n *\n * @param parent - Parent DOM element\n * @param refChild - Reference to the next DOM node, when it is `null` child will be inserted at the end\n * @param vnode - Virtual DOM node\n * @returns Rendered DOM Node\n */\nexport function _render(parent: Node, refChild: Node | null, vnode: VNode): void {\n  /* istanbul ignore else */\n  if (DEBUG) {\n    parent.insertBefore(_instantiate(parent, vnode), refChild);\n  } else {\n    nodeInsertBefore.call(parent, _instantiate(parent, vnode), refChild);\n  }\n}\n\n/**\n * Sync virtual DOM nodes.\n *\n * When node `a` is synced with node `b`, `a` node should be considered as destroyed, and any access to it after sync\n * is an undefined behavior.\n *\n * @param parent - Parent DOM element\n * @param a - Previous virtual DOM node\n * @param b - Next virtual DOM node\n * @param context - Current context\n * @param dirtyContext - Context is dirty\n */\nexport function _sync(parent: Node, a: VNode, b: VNode, dirtyContext: boolean): void {\n  if (a === b) {\n    _dirtyCheck(parent, b, dirtyContext);\n    return;\n  }\n\n  /* istanbul ignore else */\n  if (DEBUG) {\n    if (b._i !== null) {\n      throw new Error(\"VNode is already have a reference to an instance. VNodes can't be used mutliple times\");\n    }\n  }\n\n  let instance;\n  const aFlags = a._f;\n  const bFlags = b._f;\n  if (\n    (((aFlags ^ bFlags) & VNodeFlags.Syncable) === 0) &&\n    ((aFlags & (VNodeFlags.ElementFactory | VNodeFlags.Component)) === 0 || a._t === b._t) &&\n    (a._k === b._k)\n  ) {\n    const aProps = a._p;\n    const bProps = b._p;\n    b._i = instance = a._i;\n\n    if ((bFlags & VNodeFlags.Text) !== 0) {\n      if (aProps !== bProps) {\n        (instance as Text).data = bProps as string;\n      }\n    } else {\n      const aChild = a._c;\n      let bChild = b._c;\n\n      if (a._e !== b._e) {\n        syncEvents(a._e, b._e);\n      }\n\n      if ((bFlags & VNodeFlags.Element) !== 0) {\n        let className = b._cs;\n        if (a._cs !== className) {\n          if (className === void 0) {\n            className = \"\";\n          }\n          if ((bFlags & VNodeFlags.SvgElement) !== 0) {\n            /* istanbul ignore else */\n            if (DEBUG) {\n              (instance as Element).setAttribute(\"class\", className);\n            } else {\n              elementSetAttribute.call(instance, \"class\", className);\n            }\n          } else {\n            (instance as Element).className = className;\n          }\n        }\n\n        if (aProps !== bProps) {\n          syncAttrs(instance as Element, aProps, bProps);\n        }\n        if (a._s !== b._s) {\n          syncStyle(instance as HTMLElement, a._s, b._s);\n        }\n\n        if (aChild !== bChild) {\n          if ((aFlags & VNodeFlags.TextContent) === 0) {\n            if (aChild === null) {\n              do {\n                _render(instance as Element, null, bChild as VNode);\n                bChild = (bChild as VNode)._r;\n              } while (bChild !== null);\n            } else if (bChild === null) {\n              _removeAllChildren(instance as Element, aChild as VNode);\n            } else {\n              _syncChildrenTrackByKeys(instance as Element, aChild as VNode, bChild as VNode, dirtyContext);\n            }\n          } else {\n            const textNode = (instance as Element).firstChild as Text | null;\n            if (textNode !== null) {\n              textNode.nodeValue = bChild as string;\n            } else {\n              (instance as Element).textContent = bChild as string;\n            }\n          }\n        }\n      } else { // (VNodeFlags.Component | VNodeFlags.UpdateContext)\n        if ((bFlags & VNodeFlags.Component) !== 0) {\n          const descriptor = b._t as ComponentDescriptor;\n\n          if (\n            ((instance as Component).dirty === true) ||\n            (\n              (aProps !== bProps) &&\n              (descriptor.shouldUpdate === void 0 || descriptor.shouldUpdate(aProps, bProps) === true)\n            )\n          ) {\n            _sync(\n              parent,\n              aChild as VNode,\n              b._c = DEBUG ?\n                shouldBeSingleVNode((instance as Component).update!(bProps)) :\n                /* istanbul ignore next */(instance as Component).update!(bProps),\n              dirtyContext,\n            );\n            (instance as Component).dirty = false;\n          } else {\n            b._c = aChild as VNode;\n            _dirtyCheck(parent, b, dirtyContext);\n          }\n        } else { // ((bFlags & VNodeFlags.UpdateContext) !== 0)\n          if (aProps !== bProps || dirtyContext === true) {\n            instance = { ...getContext(), ...bProps };\n            dirtyContext = true;\n          }\n          b._i = instance as {};\n          const context = setContext(instance);\n          _sync(parent, aChild as VNode, bChild as VNode, dirtyContext);\n          restoreContext(context);\n        }\n      }\n    }\n  } else {\n    /* istanbul ignore else */\n    if (DEBUG) {\n      parent.replaceChild(_instantiate(parent, b), getDOMNode(a)!);\n    } else {\n      nodeReplaceChild.call(parent, _instantiate(parent, b), getDOMNode(a)!);\n    }\n    _detach(a);\n  }\n}\n\n/**\n * Sync children.\n *\n * High-level overview of the algorithm that is implemented in this function (this overview doesn't include some details\n * how it handles nodes with implicit keys and many small tricks to reduce memory allocations and unnecessary work).\n *\n * This algorithm finds a minimum[1] number of DOM operations. It works in several steps:\n *\n * 1. Find common suffix and prefix.\n *\n * This optimization technique is searching for nodes with identical keys by simultaneously iterating over nodes in the\n * old children list `A` and new children list `B` from both sides:\n *\n *  A: -> [a b c d] <-\n *  B: -> [a b d] <-\n *\n * Here we can skip nodes \"a\" and \"b\" at the begininng, and node \"d\" at the end.\n *\n *  A: -> [c] <-\n *  B: -> [] <-\n *\n * Here it will check if the size of one of the list is equal to zero. When length of the old children list is zero,\n * it will insert all remaining nodes from the new list, and when length of the new children list is zero, it will\n * remove all remaining nodes from the old list.\n *\n * When algorithm can't find a solution with this simple optimization technique, it will go to the next step of the\n * algorithm. For example:\n *\n *  A: -> [a b c d e f g] <-\n *  B: -> [a c b h f e g] <-\n *\n * Nodes \"a\" and \"g\" at the edges are the same, skipping them.\n *\n *  A: -> [b c d e f] <-\n *  B: -> [c b h f e] <-\n *\n * Here we are stuck, so we need to switch to the next step.\n *\n * 2. Look for removed and inserted nodes, and simultaneously check if one of the nodes is moved.\n *\n * First we create an array `P` with the length of the new children list and assign to each position value `-1`, it has\n * a meaning of a new node that should be inserted. Later we will assign node positions in the old children list to this\n * array.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *  P: [. . . . .] // . == -1\n *\n * Then we need to build an index `I` that maps keys with node positions of the remaining nodes from the new children\n * list.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *  P: [. . . . .] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1,\n *    h: 2,\n *    f: 3,\n *    e: 4,\n *  }\n *  last = 0\n *\n * With this index, we start to iterate over the remaining nodes from the old children list and check if we can find a\n * node with the same key in the index. If we can't find any node, it means that it should be removed, otherwise we\n * assign position of the node in the old children list to the positions array.\n *\n *  A: [b c d e f]\n *      ^\n *  B: [c b h f e]\n *  P: [. 0 . . .] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1, <-\n *    h: 2,\n *    f: 3,\n *    e: 4,\n *  }\n *  last = 1\n *\n * When we assigning positions to the positions array, we also keep a position of the last seen node in the new children\n * list, if the last seen position is larger than current position of the node at the new list, then we are switching\n * `moved` flag to `true`.\n *\n *  A: [b c d e f]\n *        ^\n *  B: [c b h f e]\n *  P: [1 0 . . .] // . == -1\n *  I: {\n *    c: 0, <-\n *    b: 1,\n *    h: 2,\n *    f: 3,\n *    e: 4,\n *  }\n *  last = 1 // last > 0; moved = true\n *\n * The last position `1` is larger than current position of the node at the new list `0`, switching `moved` flag to\n * `true`.\n *\n *  A: [b c d e f]\n *          ^\n *  B: [c b h f e]\n *  P: [1 0 . . .] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1,\n *    h: 2,\n *    f: 3,\n *    e: 4,\n *  }\n *  moved = true\n *\n * Node with key \"d\" doesn't exist in the index, removing node.\n *\n *  A: [b c d e f]\n *            ^\n *  B: [c b h f e]\n *  P: [1 0 . . 3] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1,\n *    h: 2,\n *    f: 3,\n *    e: 4, <-\n *  }\n *  moved = true\n *\n * Assign position for `e`.\n *\n *  A: [b c d e f]\n *              ^\n *  B: [c b h f e]\n *  P: [1 0 . 4 3] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1,\n *    h: 2,\n *    f: 3, <-\n *    e: 4,\n *  }\n *  moved = true\n *\n * Assign position for 'f'.\n *\n * At this point we are checking if `moved` flag is on, or if the length of the old children list minus the number of\n * removed nodes isn't equal to the length of the new children list. If any of this conditions is true, then we are\n * going to the next step.\n *\n * 3. Find minimum number of moves if `moved` flag is on, or insert new nodes if the length is changed.\n *\n * When `moved` flag is on, we need to find the\n * [longest increasing subsequence](http://en.wikipedia.org/wiki/Longest_increasing_subsequence) in the positions array,\n * and move all nodes that doesn't belong to this subsequence.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *  moved = true\n *\n * Now we just need to simultaneously iterate over the new children list and LIS from the end and check if the current\n * position is equal to a value from LIS.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *              ^  // new_pos == 4\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *              ^  // new_pos == 4\n *  moved = true\n *\n * Node \"e\" stays at the same place.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *            ^    // new_pos == 3\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *            ^    // new_pos != 1\n *  moved = true\n *\n * Node \"f\" is moved, move it before the next node \"e\".\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *          ^      // new_pos == 2\n *  P: [1 0 . 4 3] // . == -1\n *          ^      // old_pos == -1\n *  LIS:     [1 4]\n *            ^\n *  moved = true\n *\n * Node \"h\" has a `-1` value in the positions array, insert new node \"h\".\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *        ^        // new_pos == 1\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *            ^    // new_pos == 1\n *  moved = true\n *\n * Node \"b\" stays at the same place.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *      ^          // new_pos == 0\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *          ^      // new_pos != undefined\n *  moved = true\n *\n * Node \"c\" is moved, move it before the next node \"b\".\n *\n * When moved flag is off, we don't need to find LIS, and we just iterate over the new children list and check its\n * current position in the positions array, if it is `-1`, then we insert new node.\n *\n * [1] Actually it is almost minimum number of dom ops, when node is removed and another one is inserted at the same\n * place, instead of insert and remove dom ops, we can use one replace op. It will make everything even more\n * complicated, and other use cases will be slower, so I don't think that it is worth to use replace here.\n *\n * @param parent - Parent DOM element\n * @param aStartVNode - Previous virtual DOM node\n * @param bStartVNode - Next virtual DOM node\n * @param dirtyContext - Context is dirty\n */\nfunction _syncChildrenTrackByKeys(\n  parent: Node,\n  aStartVNode: VNode,\n  bStartVNode: VNode,\n  dirtyContext: boolean,\n): void;\nfunction _syncChildrenTrackByKeys(\n  parent: Node,\n  aStartVNode: VNode | null, // should not be null, it is a workaroud to slightly reduce code size\n  bStartVNode: VNode | null, // should not be null, it is a workaroud to slightly reduce code size\n  dirtyContext: boolean,\n): void {\n  let aEndVNode = aStartVNode!._l!;\n  let bEndVNode = bStartVNode!._l!;\n  let i: number | undefined = 0;\n  let step1Synced = 0;\n\n  // Step 1\n  outer: while (1) {\n    // Sync nodes with the same key at the beginning.\n    while (\n      (aStartVNode!._k === bStartVNode!._k) &&\n      (((aStartVNode!._f ^ bStartVNode!._f) & VNodeFlags.Key) === 0)\n    ) {\n      _sync(parent, aStartVNode!, bStartVNode!, dirtyContext);\n      step1Synced++;\n      if (aStartVNode === aEndVNode) {\n        i = 1;\n      } else {\n        aStartVNode = aStartVNode!._r;\n      }\n      if (bStartVNode === bEndVNode) {\n        i |= 2;\n        break outer;\n      } else {\n        bStartVNode = bStartVNode!._r;\n      }\n      if (i) {\n        break outer;\n      }\n    }\n\n    // Sync nodes with the same key at the end.\n    while (\n      (aEndVNode!._k === bEndVNode!._k) &&\n      (((aEndVNode!._f ^ bEndVNode!._f) & VNodeFlags.Key) === 0)\n    ) {\n      _sync(parent, aEndVNode, bEndVNode, dirtyContext);\n      step1Synced++;\n      if (aStartVNode === aEndVNode) {\n        i = 1;\n      } else {\n        aEndVNode = aEndVNode._l;\n      }\n      if (bStartVNode === bEndVNode) {\n        i |= 2;\n        break outer;\n      } else {\n        bEndVNode = bEndVNode._l;\n      }\n      if (i) {\n        break outer;\n      }\n    }\n\n    break;\n  }\n\n  if (i) {\n    if (i < 3) {\n      if (i < 2) {\n        // All nodes from a are synced, insert the rest from b.\n        const next = nextNode(bEndVNode);\n        while (1) {\n          _render(parent, next, bStartVNode!);\n          if (bStartVNode === bEndVNode) {\n            break;\n          }\n          bStartVNode = bStartVNode!._r;\n        }\n      } else {\n        // All nodes from b are synced, remove the rest from a.\n        while (1) {\n          _remove(parent, aStartVNode!);\n          if (aStartVNode === aEndVNode) {\n            break;\n          }\n          aStartVNode = aStartVNode!._r;\n        }\n      }\n    }\n  } else { // Step 2\n    // Inner length after prefix/suffix optimization.\n    let aInnerLength = 0;\n    let bInnerLength = 0;\n\n    // When lastPosition === 1000000000, it means that one of the nodes in the wrong position.\n    let lastPosition = 0;\n\n    const bInnerArray: VNode[] = [];\n    // Reverse indexes for keys.\n    let explicitKeyIndex: Map<any, number> | undefined;\n    let implicitKeyIndex: Map<number, number> | undefined;\n    let key;\n\n    // Temporary vnode\n    let vnode = bStartVNode;\n    while (1) {\n      key = vnode!._k;\n      if (vnode!._f & VNodeFlags.Key) {\n        if (explicitKeyIndex === void 0) {\n          explicitKeyIndex = new Map<any, number>();\n        }\n        explicitKeyIndex.set(key, bInnerLength);\n      } else {\n        if (implicitKeyIndex === void 0) {\n          implicitKeyIndex = new Map<number, number>();\n        }\n        implicitKeyIndex.set(key, bInnerLength);\n      }\n      bInnerArray[bInnerLength++] = vnode!;\n      if (vnode === bEndVNode) {\n        break;\n      }\n      vnode = vnode!._r;\n    }\n\n    // Mark all nodes as inserted (-1).\n    const prevPositionsForB = new Array<number>(bInnerLength).fill(-1);\n\n    let step2Synced = 0;\n    vnode = aStartVNode;\n    while (1) {\n      key = vnode!._k;\n      i = (vnode!._f & VNodeFlags.Key) !== 0 ?\n        explicitKeyIndex === void 0 ? void 0 : explicitKeyIndex.get(key) :\n        implicitKeyIndex === void 0 ? void 0 : implicitKeyIndex.get(key);\n\n      if (i === void 0) {\n        vnode!._k = null;\n      } else {\n        lastPosition = (lastPosition > i) ? 1000000000 : i;\n        prevPositionsForB[i] = aInnerLength;\n        _sync(parent, vnode!, bInnerArray[i], dirtyContext);\n        step2Synced++;\n      }\n      aInnerLength++;\n      if (vnode === aEndVNode) {\n        break;\n      }\n      vnode = vnode!._r;\n    }\n\n    if (!step1Synced && !step2Synced) {\n      // Noone is synced, remove all children with one dom op.\n      _removeAllChildren(parent, aStartVNode!);\n      do {\n        _render(parent, null, bStartVNode!);\n        bStartVNode = bStartVNode!._r;\n      } while (bStartVNode !== null);\n    } else {\n      i = aInnerLength - step2Synced;\n      while (i > 0) {\n        if (aStartVNode!._k === null) {\n          _remove(parent, aStartVNode!);\n          i--;\n        }\n        aStartVNode = aStartVNode!._r;\n      }\n\n      // Step 3\n      if (lastPosition === 1000000000) {\n        const seq = lis(prevPositionsForB);\n        i = seq.length - 1;\n        while (bInnerLength > 0) {\n          if (prevPositionsForB[--bInnerLength] < 0) {\n            _render(parent, nextNode(bEndVNode), bEndVNode);\n          } else {\n            if (i < 0 || bInnerLength !== seq[i]) {\n              /* istanbul ignore else */\n              if (DEBUG) {\n                parent.insertBefore(getDOMNode(bEndVNode)!, nextNode(bEndVNode));\n              } else {\n                nodeInsertBefore.call(parent, getDOMNode(bEndVNode)!, nextNode(bEndVNode));\n              }\n            } else {\n              i--;\n            }\n          }\n          bEndVNode = bEndVNode._l;\n        }\n      } else if (step2Synced !== bInnerLength) {\n        while (bInnerLength > 0) {\n          if (prevPositionsForB[--bInnerLength] < 0) {\n            _render(parent, nextNode(bEndVNode), bEndVNode);\n          }\n          bEndVNode = bEndVNode._l;\n        }\n      }\n    }\n  }\n}\n\n/**\n * Retrieves a next DOM node from a virtual DOM node.\n *\n * @param vnode - Virtual DOM node\n * @returns Next DOM node\n */\nfunction nextNode(vnode: VNode): Node | null {\n  const next = vnode._r;\n  return next === null ? null : getDOMNode(next);\n}\n\n/**\n * Slightly modified Longest Increased Subsequence algorithm, it ignores items that have -1 value, they're representing\n * new items.\n *\n * {@link http://en.wikipedia.org/wiki/Longest_increasing_subsequence}\n *\n * @param a - Array of numbers\n * @returns Longest increasing subsequence\n * @noinline\n */\nfunction lis(a: number[]): number[] {\n  const p = a.slice();\n  const result: number[] = [];\n  result[0] = 0;\n  let n = 0;\n  let u: number;\n  let v: number;\n  let j: number;\n\n  for (let i = 0; i < a.length; ++i) {\n    const k = a[i];\n    if (k === -1) {\n      continue;\n    }\n\n    j = result[n];\n    if (a[j] < k) {\n      p[i] = j;\n      result[++n] = i;\n      continue;\n    }\n\n    u = 0;\n    v = n;\n\n    while (u < v) {\n      j = ((u + v) / 2) | 0;\n      if (a[result[j]] < k) {\n        u = j + 1;\n      } else {\n        v = j;\n      }\n    }\n\n    if (k < a[result[u]]) {\n      if (u > 0) {\n        p[i] = result[u - 1];\n      }\n      result[u] = i;\n    }\n  }\n\n  v = result[n];\n\n  while (n >= 0) {\n    result[n--] = v;\n    v = p[v];\n  }\n\n  return result;\n}\n\n/**\n * Sync DOM styles.\n *\n * @param node - HTML or SVG Element\n * @param a - Prev styles\n * @param b - Next styles\n */\nfunction syncStyle(\n  node: HTMLElement | SVGElement,\n  a: CSSStyleProps | undefined,\n  b: CSSStyleProps | undefined,\n): void {\n  const style = node.style;\n  let key: string;\n  let bValue;\n\n  if (a === void 0) {\n    // a is empty, insert all styles from b.\n    for (key in b!) {\n      bValue = (b as { [key: string]: string })[key];\n      if (bValue !== void 0) {\n        style.setProperty(key, bValue);\n      }\n    }\n  } else if (b !== void 0) {\n    for (key in b) {\n      bValue = (b as { [key: string]: string })[key];\n      if ((a as { [key: string]: string })[key] !== bValue) {\n        if (bValue !== void 0) {\n          style.setProperty(key, bValue);\n        } else {\n          style.removeProperty(key);\n        }\n      }\n    }\n  }\n}\n\n/**\n * Set DOM attribute.\n *\n * @param element - DOM Element\n * @param key - Attribute name\n * @param prev - Previous value\n * @param next - Next value\n */\nfunction syncAttr(\n  element: Element,\n  key: string,\n  prev: string | number | boolean | AttributeDirective<any> | undefined,\n  next: string | number | boolean | AttributeDirective<any> | undefined,\n): void {\n  if (prev !== next) {\n    if (typeof next === \"object\") {\n      next.u(\n        element,\n        key,\n        prev === void 0 ? void 0 : (prev as AttributeDirective<any>).v,\n        next.v,\n      );\n    } else {\n      if (typeof next === \"boolean\") {\n        next = next ? \"\" : void 0;\n      }\n      if (next === void 0) {\n        elementRemoveAttribute.call(element, key);\n      } else {\n        elementSetAttribute.call(element, key, next);\n      }\n    }\n  }\n}\n\n/**\n * Sync DOM attributes.\n *\n * @param element - DOM element\n * @param a - Prev DOM properties\n * @param b - Next DOM properties\n */\nfunction syncAttrs(\n  element: Element,\n  a: { [key: string]: string | number | boolean | AttributeDirective<any> | undefined } | undefined,\n  b: { [key: string]: string | number | boolean | AttributeDirective<any> | undefined } | undefined,\n): void {\n  let key: string;\n\n  if (a === void 0) {\n    // a is empty, insert all attributes from b.\n    for (key in b!) {\n      syncAttr(element, key, void 0, b![key]);\n    }\n  } else if (b !== void 0) {\n    for (key in b) {\n      syncAttr(element, key, a[key], b[key]);\n    }\n  }\n}\n\n/**\n * Check virtual DOM node returned from a `render()` function in `DEBUG` mode.\n *\n * @param vnode - Virtual DOM node\n * @return `vnode`\n */\nfunction shouldBeSingleVNode<T extends VNode>(vnode: T): T {\n  if (vnode._l !== vnode) {\n    throw new Error(\"Invalid render function. Render function should return singular VNode.\");\n  }\n  return vnode;\n}\n","import { IOS_GESTURE_EVENT } from \"../core/feature_detection\";\nimport { NOOP } from \"../core/noop\";\nimport { unorderedArrayDelete } from \"../core/array\";\nimport { checkNestingViolations } from \"../debug/html_nesting_rules\";\nimport { VNode } from \"./vnode\";\nimport { _render, _sync, _remove, _dirtyCheck } from \"./sync\";\n\n/**\n * Root.\n */\nexport interface Root {\n  /**\n   * Container element.\n   */\n  container: Element;\n  /**\n   * Next virtual DOM node.\n   */\n  next: VNode | null | undefined;\n  /**\n   * Current virtual DOM node.\n   */\n  current: VNode | null;\n}\n\n/**\n * Root nodes.\n */\nexport const ROOTS = [] as Root[];\n\n/**\n * Find root node of a container.\n *\n * @param container - DOM Node that contains root node\n * @returns root node or undefined when root node doesn't exist\n */\nexport const findRoot = (container: Element) => ROOTS.find((r) => r.container === container);\n\n/**\n * Performs a dirty checking.\n */\nexport function dirtyCheck() {\n  for (let i = 0; i < ROOTS.length; ++i) {\n    const root = ROOTS[i];\n    const { container, current, next } = root;\n    root.next = void 0;\n\n    if (next) {\n      if (current) {\n        _sync(container, current, next, false);\n      } else {\n        _render(container, null, next);\n        /* istanbul ignore if */\n        /**\n         * Fix for the Mouse Event bubbling on iOS devices.\n         *\n         * #quirks\n         *\n         * http://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\n         */\n        if (TARGET === \"browser\" && IOS_GESTURE_EVENT) {\n          (container as HTMLElement).onclick = NOOP;\n        }\n      }\n      root.current = next;\n    } else if (current) {\n      if (next === null) {\n        _remove(container, current);\n        unorderedArrayDelete(ROOTS, root);\n        --i;\n      } else {\n        _dirtyCheck(container, current, false);\n      }\n    }\n\n    /* istanbul ignore else */\n    if (DEBUG) {\n      if (root.current) {\n        checkNestingViolations(container, root.current);\n      }\n    }\n  }\n}\n","import { sMT, rAF } from \"ivi-scheduler\";\nimport { runRepeatableTasks, RepeatableTaskList } from \"../core/repeatable_task_list\";\nimport { NOOP } from \"../core/noop\";\nimport { catchError } from \"../core/error\";\nimport { printWarn } from \"../debug/print\";\nimport { VNode } from \"../vdom/vnode\";\nimport { Component } from \"../vdom/component\";\nimport { ROOTS, findRoot, dirtyCheck } from \"../vdom/root\";\n\n/**\n * Update flags.\n */\nexport const enum UpdateFlags {\n  /**\n   * Forces synchronous update.\n   */\n  RequestSyncUpdate = 1,\n}\n\n/**\n * Scheduler flags.\n */\nconst enum SchedulerFlags {\n  /**\n   * Running inside of a scheduler context.\n   */\n  Running = 1,\n  /**\n   * Scheduler tick is pending for an execution.\n   */\n  TickPending = 1 << 1,\n  /**\n   * Frame update is pending for an execution.\n   */\n  NextFramePending = 1 << 2,\n  /**\n   * Sync Frame update is pending for an execution.\n   */\n  NextSyncFramePending = 1 << 3,\n  /**\n   * Running inside of a frame update context.\n   */\n  UpdatingFrame = 1 << 4,\n  /**\n   * Dirty checking is pending for an execution.\n   */\n  DirtyCheckPending = 1 << 5,\n}\n\nconst enum SchedulerDebugFlags {\n  DirtyCheckingFinished = 1,\n  MutationsFinished = 1 << 1,\n  LayoutFinished = 1 << 2,\n}\n\n/**\n * Task list.\n */\ninterface TaskList { v: Array<() => void>; }\n\n/**\n * createTaskList creates a task list.\n *\n * @returns task list\n */\nconst createTaskList = () => ({ v: [] }) as TaskList;\n\n/**\n * Execute tasks from the `TaskList`.\n *\n * @param t - Task list\n */\nfunction run(t: TaskList) {\n  while (t.v.length > 0) {\n    const tasks = t.v;\n    let i = 0;\n    t.v = [];\n    do {\n      tasks[i++]();\n    } while (i < tasks.length);\n  }\n}\n\nlet _flags: SchedulerFlags = 0;\nlet _debugFlags: SchedulerDebugFlags;\n/** istanbul ignore else */\nif (DEBUG) {\n  _debugFlags = 0;\n}\nlet _clock = 1;\nconst _microtasks = createTaskList();\nconst _mutationEffects = createTaskList();\nconst _domLayoutEffects = createTaskList();\nconst _beforeMutations = [] as RepeatableTaskList;\nconst _afterMutations = [] as RepeatableTaskList;\nlet _frameStartTime = 0;\n\n/**\n * withSchedulerTick wraps `inner` function into a scheduler context execution.\n *\n * @param inner - Inner function.\n * @returns function that will be executed in a scheduler context.\n */\nexport const withSchedulerTick = <T extends any[]>(inner: (...args: T) => void) => (\n  catchError(function () {\n    _flags |= SchedulerFlags.Running;\n    inner.apply(void 0, arguments);\n    run(_microtasks);\n    _flags &= ~(SchedulerFlags.Running | SchedulerFlags.TickPending);\n    ++_clock;\n  })\n) as (...args: T) => void;\n\nconst runMicrotasks = withSchedulerTick(NOOP);\n\n/**\n * clock returns monotonically increasing clock value.\n *\n * @returns current clock value.\n */\nexport const clock = () => _clock;\n\n/**\n * scheduleMicrotask adds task to the microtask queue.\n *\n * @param task - Microtask.\n */\nexport function scheduleMicrotask(task: () => void): void {\n  _microtasks.v.push(task);\n  if ((_flags & (SchedulerFlags.Running | SchedulerFlags.TickPending)) === 0) {\n    _flags |= SchedulerFlags.TickPending;\n    sMT(runMicrotasks);\n  }\n}\n\n/**\n * beforeMutations adds a hook that will be executed before DOM mutations.\n *\n * @param fn - hook.\n */\nexport function beforeMutations(fn: () => boolean | void): void {\n  _beforeMutations.push(fn);\n}\n\n/**\n * afterMutations adds a hook that will be executed after DOM mutations.\n *\n * @param fn - hook.\n */\nexport function afterMutations(fn: () => boolean | void): void {\n  _afterMutations.push(fn);\n}\n\n/**\n * frameStartTime returns current frame start time.\n *\n * @returns current frame start time.\n */\nexport const frameStartTime = () => _frameStartTime;\n\n/**\n * withNextFrame wraps `inner` function into a scheduler frame update context.\n *\n * @param inner - Inner function.\n * @returns function that will be executed in a frame update context.\n */\nexport const withNextFrame = (inner: (time?: number) => void) => (\n  withSchedulerTick((time?: number) => {\n    _flags |= SchedulerFlags.UpdatingFrame;\n    inner(time);\n\n    if ((_flags & SchedulerFlags.NextFramePending) !== 0) {\n      _frameStartTime = time === void 0 ? performance.now() : time;\n\n      runRepeatableTasks(_beforeMutations);\n      if ((_flags & SchedulerFlags.DirtyCheckPending) !== 0) {\n        dirtyCheck();\n      }\n      /** istanbul ignore else */\n      if (DEBUG) {\n        _debugFlags |= SchedulerDebugFlags.DirtyCheckingFinished;\n      }\n      run(_mutationEffects);\n      /** istanbul ignore else */\n      if (DEBUG) {\n        _debugFlags |= SchedulerDebugFlags.MutationsFinished;\n      }\n      runRepeatableTasks(_afterMutations);\n      run(_domLayoutEffects);\n      /** istanbul ignore else */\n      if (DEBUG) {\n        _debugFlags |= SchedulerDebugFlags.LayoutFinished;\n      }\n    }\n    _flags &= ~(\n      SchedulerFlags.UpdatingFrame |\n      SchedulerFlags.NextFramePending |\n      SchedulerFlags.NextSyncFramePending |\n      SchedulerFlags.DirtyCheckPending\n    );\n    /** istanbul ignore else */\n    if (DEBUG) {\n      _debugFlags &= ~(\n        SchedulerDebugFlags.DirtyCheckingFinished |\n        SchedulerDebugFlags.MutationsFinished |\n        SchedulerDebugFlags.LayoutFinished\n      );\n    }\n  })\n);\n\n/**\n * Frame tasks scheduler event handler.\n *\n * @param t Current time.\n */\nconst _handleNextFrame = withNextFrame(NOOP);\n\n/**\n * requestNextFrame requests an update for next frame.\n */\nexport function requestNextFrame(flags?: UpdateFlags): void {\n  if (\n    (flags !== void 0) &&\n    ((flags & UpdateFlags.RequestSyncUpdate) !== 0) &&\n    ((_flags & SchedulerFlags.NextSyncFramePending) === 0)\n  ) {\n    _flags |= SchedulerFlags.NextFramePending | SchedulerFlags.NextSyncFramePending;\n    if ((_flags & SchedulerFlags.UpdatingFrame) === 0) {\n      scheduleMicrotask(_handleNextFrame);\n    }\n  } else if ((_flags & SchedulerFlags.NextFramePending) === 0) {\n    _flags |= SchedulerFlags.NextFramePending;\n    if ((_flags & SchedulerFlags.UpdatingFrame) === 0) {\n      rAF(_handleNextFrame);\n    }\n  }\n}\n\n/**\n * Adds a write DOM task to the queue.\n *\n * @param fn - Write DOM task\n */\nexport function scheduleMutationEffect(fn: () => void, flags?: UpdateFlags): void {\n  /** istanbul ignore else */\n  if (DEBUG) {\n    if (_flags & SchedulerFlags.UpdatingFrame) {\n      if (_debugFlags & SchedulerDebugFlags.MutationsFinished) {\n        printWarn(\"Mutation effect is scheduled after mutations were finished\");\n      }\n    }\n  }\n  _mutationEffects.v.push(fn);\n  requestNextFrame(flags);\n}\n\n/**\n * Adds a DOM layout task to the queue.\n *\n * @param fn - Read DOM task\n */\nexport function scheduleLayoutEffect(fn: () => void, flags?: UpdateFlags): void {\n  /** istanbul ignore else */\n  if (DEBUG) {\n    if (_flags & SchedulerFlags.UpdatingFrame) {\n      if (_debugFlags & SchedulerDebugFlags.MutationsFinished) {\n        printWarn(\"Layout effect is scheduled after layout were finished\");\n      }\n    }\n  }\n  _domLayoutEffects.v.push(fn);\n  requestNextFrame(flags);\n}\n\nexport function requestDirtyCheck(flags?: UpdateFlags) {\n  /** istanbul ignore else */\n  if (DEBUG) {\n    if (_flags & SchedulerFlags.UpdatingFrame) {\n      if (_debugFlags & SchedulerDebugFlags.MutationsFinished) {\n        printWarn(\"Dirty checking is scheduled after dirty checking were finished\");\n      }\n    }\n  }\n  _flags |= SchedulerFlags.DirtyCheckPending;\n  requestNextFrame(flags);\n}\n\n/**\n * Invalidate component.\n *\n * @param c - Component instance\n * @param flags - See {@link UpdateFlags} for details.\n */\nexport function invalidate<P>(c: Component<P>, flags?: UpdateFlags): void {\n  c.dirty = true;\n  requestDirtyCheck(flags);\n}\n\n/**\n * dirty requests a dirty checking and returns current monotonic clock value.\n *\n * @param flags - See {@link UpdateFlags} for details.\n * @returns current monotonic clock value.\n */\nexport const dirty = (flags?: UpdateFlags) => (requestDirtyCheck(flags), _clock);\n\n/**\n * Render virtual DOM node into the container.\n *\n * @param next - Virtual DOM node to render\n * @param container - DOM Node that will contain rendered node\n * @param flags - See {@link UpdateFlags} for details\n */\nexport function render(next: VNode | null, container: Element, flags?: UpdateFlags): void {\n  /* istanbul ignore else */\n  if (DEBUG) {\n    /**\n     * Rendering into the <body> element is disabled to make it possible to fix iOS quirk with click events.\n     */\n    if (container === document.body) {\n      throw new Error(\"Rendering into the <body> element aren't allowed\");\n    }\n    if (!document.body.contains(container)) {\n      throw new Error(\"Container element should be attached to the document\");\n    }\n  }\n\n  const root = findRoot(container);\n  if (root) {\n    root.next = next;\n  } else {\n    ROOTS.push({ container, next, current: null });\n  }\n\n  requestDirtyCheck(flags);\n}\n","import { EMPTY_OBJECT } from \"../core/empty_object\";\nimport { Component } from \"./component\";\nimport { getContext } from \"./context\";\nimport { clock, scheduleMicrotask, scheduleMutationEffect, scheduleLayoutEffect } from \"../scheduler\";\n\nfunction addHook<T extends Function>(hooks: null | T | T[], hook: T): T | T[] {\n  if (hooks === null) {\n    return hook;\n  }\n  if (typeof hooks === \"function\") {\n    return [hooks, hook];\n  }\n  hooks.push(hook);\n  return hooks;\n}\n\n/**\n * useSelect creates a selector hook.\n *\n * @example\n *\n *     const C = component<number>((h) => {\n *       const selector = useSelect<string, number, { data: string[] }>(c,\n *         (id, context) => context.data[id],\n *       );\n *\n *       return (id) => div().t(selector(id));\n *     });\n *\n * @param c - Component instance.\n * @param selector - Selector function.\n * @returns Selector hook.\n */\nexport function useSelect<T>(\n  c: Component,\n  selector: (props?: undefined, context?: undefined, prev?: T | undefined) => T,\n): () => T;\n\n/**\n * useSelect creates a selector hook.\n *\n * @example\n *\n *     const C = component<number>((h) => {\n *       const selector = useSelect<string, number, { data: string[] }>(c,\n *         (id, context) => context.data[id],\n *       );\n *\n *       return (id) => div().t(selector(id));\n *     });\n *\n * @param c - Component instance.\n * @param selector - Selector function.\n * @returns Selector hook.\n */\nexport function useSelect<T, P>(\n  c: Component,\n  selector: (props: P, context?: undefined, prev?: T | undefined) => T,\n  shouldUpdate?: undefined extends P ? undefined : (prev: P, next: P) => boolean,\n): undefined extends P ? () => T : (props: P) => T;\n\n/**\n * useSelect creates a selector hook.\n *\n * @example\n *\n *     const C = component<number>((h) => {\n *       const selector = useSelect<string, number, { data: string[] }>(c,\n *         (id, context) => context.data[id],\n *       );\n *\n *       return (id) => div().t(selector(id));\n *     });\n *\n * @param c - Component instance.\n * @param selector - Selector function.\n * @returns Selector hook.\n */\nexport function useSelect<T, P, C>(\n  c: Component,\n  selector: (props: P, context: C, prev?: T | undefined) => T,\n  shouldUpdate?: undefined extends P ? undefined : (prev: P, next: P) => boolean,\n): undefined extends P ? () => T : (props: P) => T;\n\n/**\n * useSelect creates a selector hook.\n *\n * @example\n *\n *     const C = component<number>((c) => {\n *       const selector = useSelect<string, number, { data: string[] }>(c,\n *         (id, context) => context.data[id],\n *       );\n *\n *       return (id) => div().t(selector(id));\n *     });\n *\n * @param c - Component instance.\n * @param selector - Selector function.\n * @returns Selector hook.\n */\nexport function useSelect<T, P, C extends {}>(\n  c: Component,\n  selector: (props: P, context: C, prev: T | undefined) => T,\n  shouldUpdate?: (prev: P, next: P) => boolean,\n): (props: P) => T {\n  const prevSelector = c.select;\n  let lastChecked = 0;\n  let state: T | undefined;\n  let props: P;\n\n  c.select = (context: {}) => {\n    if (prevSelector !== null && prevSelector(context) === true) {\n      return true;\n    }\n    if (state !== void 0) {\n      const nextState = selector(props, context as C, state);\n      lastChecked = clock();\n      if (state !== nextState) {\n        state = nextState;\n        return true;\n      }\n    }\n    return false;\n  };\n\n  return (nextProps: P) => {\n    if (\n      (state !== void 0) &&\n      ((shouldUpdate !== void 0 && shouldUpdate(props, nextProps) === true) || (props !== nextProps))\n    ) {\n      state = void 0;\n    }\n    if (state === void 0 || lastChecked < clock()) {\n      state = selector(nextProps, getContext() as C, state);\n    }\n    props = nextProps;\n    return state;\n  };\n}\n\n/**\n * useDetached creates a detached hook.\n *\n * @example\n *\n *     const C = component((h) => {\n *       useDetached(h, () => {\n *         console.log(\"detached\");\n *       });\n *\n *       return () => div();\n *     });\n *\n * @param c - Component instance.\n * @param hook - Detached hook.\n */\nexport function useDetached(c: Component, hook: () => void): void {\n  c.detached = addHook(c.detached, hook);\n}\n\nfunction withEffect<P>(fn: (effect: () => void) => void): (\n  c: Component,\n  hook: (props?: P) => (() => void) | void,\n  shouldUpdate?: (prev: P, next: P) => boolean,\n) => (props: P) => void {\n  return (c, hook, shouldUpdate) => {\n    let reset: (() => void) | void;\n    let props: P | undefined = EMPTY_OBJECT as P;\n    let detached = false;\n    const handler = (d?: boolean) => {\n      if (reset !== void 0) {\n        reset();\n      }\n      if (d !== true) {\n        reset = hook(props);\n        if (reset !== void 0 && !detached) {\n          detached = true;\n          useDetached(c, handler);\n        }\n      }\n    };\n\n    return (nextProps: P) => {\n      if (\n        props === EMPTY_OBJECT ||\n        (shouldUpdate !== void 0 && shouldUpdate(props as P, nextProps) === true) ||\n        props !== nextProps\n      ) {\n        props = nextProps;\n        fn(handler);\n      }\n    };\n  };\n}\n\nconst _useEffect = /*#__PURE__*/withEffect<any>(scheduleMicrotask);\nconst _useMutationEffect = /*#__PURE__*/withEffect<any>(scheduleMutationEffect);\nconst _useLayoutEffect = /*#__PURE__*/withEffect<any>(scheduleLayoutEffect);\n\n/**\n * useEffect creates a side effect hook.\n *\n * @example\n *\n *     const Counter = component<number>((c) => {\n *       let i = 0;\n *       const timer = useEffect<number>(c, (delay) => {\n *         const tid = setInterval(() => {\n *           i++;\n *           invalidate(c);\n *         }, delay);\n *         return () => { clearInterval(tid); };\n *       });\n *\n *       return (delay) => (\n *         timer(delay),\n *\n *         div().t(i),\n *       );\n *     });\n *\n * @param c - Component instance.\n * @param hook - Side effect function.\n * @param shouldUpdate - Should update function.\n * @returns side effect hook\n */\nexport function useEffect(\n  c: Component,\n  hook: () => (() => void) | void,\n): () => void;\n\n/**\n * useEffect creates a side effect hook.\n *\n * @example\n *\n *     const Counter = component<number>((c) => {\n *       let i = 0;\n *       const timer = useEffect<number>(c, (delay) => {\n *         const tid = setInterval(() => {\n *           i++;\n *           invalidate(c);\n *         }, delay);\n *         return () => { clearInterval(tid); };\n *       });\n *\n *       return (delay) => (\n *         timer(delay),\n *\n *         div().t(i),\n *       );\n *     });\n *\n * @param c - Component instance.\n * @param hook - Side effect function.\n * @param shouldUpdate - Should update function.\n * @returns side effect hook\n */\nexport function useEffect<P>(\n  c: Component,\n  hook: (props: P) => (() => void) | void,\n  shouldUpdate?: (prev: P, next: P) => boolean,\n): (props: P) => void;\n\n/**\n * useEffect creates a side effect hook.\n *\n * @example\n *\n *     const Counter = component<number>((c) => {\n *       let i = 0;\n *       const timer = useEffect<number>(c, (delay) => {\n *         const tid = setInterval(() => {\n *           i++;\n *           invalidate(c);\n *         }, delay);\n *         return () => { clearInterval(tid); };\n *       });\n *\n *       return (delay) => (\n *         timer(delay),\n *\n *         div().t(i),\n *       );\n *     });\n *\n * @param c - Component instance.\n * @param hook - Side effect function.\n * @param shouldUpdate - Should update function.\n * @returns side effect hook\n */\nexport function useEffect<P>(\n  c: Component,\n  hook: (props: P) => (() => void) | void,\n  shouldUpdate?: (prev: P, next: P) => boolean,\n): (props: P) => void {\n  return _useEffect(c, hook, shouldUpdate);\n}\n\nexport function useMutationEffect(\n  c: Component,\n  hook: () => (() => void) | void,\n): () => void;\nexport function useMutationEffect<P>(\n  c: Component,\n  hook: (props: P) => (() => void) | void,\n  shouldUpdate?: (prev: P, next: P) => boolean,\n): (props: P) => void;\nexport function useMutationEffect<P>(\n  c: Component,\n  hook: (props: P) => (() => void) | void,\n  shouldUpdate?: (prev: P, next: P) => boolean,\n): (props: P) => void {\n  return _useMutationEffect(c, hook, shouldUpdate);\n}\n\nexport function useLayoutEffect(\n  c: Component,\n  hook: () => (() => void) | void,\n): () => void;\nexport function useLayoutEffect<P>(\n  c: Component,\n  hook: (props: P) => (() => void) | void,\n  shouldUpdate?: (prev: P, next: P) => boolean,\n): (props: P) => void;\nexport function useLayoutEffect<P>(\n  c: Component,\n  hook: (props: P) => (() => void) | void,\n  shouldUpdate?: (prev: P, next: P) => boolean,\n): (props: P) => void {\n  return _useLayoutEffect(c, hook, shouldUpdate);\n}\n","import { VNodeFlags, VNode } from \"./vnode\";\n\n/**\n * map creates a children collection with the results of calling a provided function on every element in the calling\n * array.\n *\n * @example\n *\n *     render(\n *       div().c(\n *         map([1, 2, 3], (item) => div().k(item)),\n *       ),\n *       DOMContainer,\n *     );\n *\n * @param items - Array\n * @param fn - Function that produces an element for the children collection\n * @returns Virtual DOM collection\n */\nexport function map<T, U>(array: Array<T>, fn: (item: T, index: number) => VNode<U> | null): VNode<U> | null {\n  let first: VNode<any> | null = null;\n  let prev: VNode<any> | null = null;\n  for (let i = 0; i < array.length; ++i) {\n    const n = fn(array[i], i);\n    if (n !== null) {\n      /* istanbul ignore else */\n      if (DEBUG) {\n        if ((n._f & VNodeFlags.Key) === 0) {\n          throw new Error(`VNodes created with a map() function should have an explicit key`);\n        }\n        if (n._l !== n) {\n          throw new Error(`VNodes created with a map() function should be a singular nodes`);\n        }\n      }\n      if (prev !== null) {\n        n._l = prev;\n        prev._r = n;\n      } else {\n        first = n;\n      }\n      prev = n;\n    }\n  }\n  if (first !== null) {\n    first._l = prev!;\n    first._f |= VNodeFlags.KeyedList;\n    return first;\n  }\n  return null;\n}\n\n/**\n * mapRange creates a children collection with the results of calling a provided function on every number in the\n * provided range.\n *\n * @example\n *\n *     const items = [1, 2, 3];\n *\n *     render(\n *       div().c(\n *         mapRange(0, items.length, (i) => div().k(items[i])),\n *       ),\n *       DOMContainer,\n *     );\n *\n * @param start - Range start\n * @param end - Range end\n * @param fn - Function that produces an element for the children collection\n * @returns Virtual DOM collection\n */\nexport function mapRange<T>(start: number, end: number, fn: (idx: number) => VNode<T> | null): VNode<T> | null {\n  const length = end - start;\n  let first: VNode<any> | null = null;\n  let prev: VNode<any> | null = null;\n  while (start < length) {\n    const n = fn(start++);\n    if (n !== null) {\n      /* istanbul ignore else */\n      if (DEBUG) {\n        if ((n._f & VNodeFlags.Key) === 0) {\n          throw new Error(`VNodes created with a mapRange() function should have an explicit key`);\n        }\n        if (n._l !== n) {\n          throw new Error(`VNodes created with a mapRange() function should be a singular nodes`);\n        }\n      }\n      if (prev !== null) {\n        n._l = prev;\n        prev._r = n;\n      } else {\n        first = n;\n      }\n      prev = n;\n    }\n  }\n  if (first !== null) {\n    first._l = prev!;\n    first._f |= VNodeFlags.KeyedList;\n    return first;\n  }\n  return null;\n}\n\n/**\n * mapIterable creates a children collection from an `IterableIterator` object.\n *\n * @example\n *\n *     const items = [1, 2, 3];\n *\n *     render(\n *       div().c(mapIterable(function* () {\n *         for (const item of items) {\n *           yield div().k(item);\n *         }\n *       }())),\n *       DOMContainer,\n *     );\n *\n * @param iterable - Iterable iterator\n * @returns Virtual DOM collection\n */\nexport function mapIterable<T>(iterable: IterableIterator<VNode<T>>): VNode<T> | null {\n  let first: VNode<any> | null = null;\n  let prev: VNode<any> | null = null;\n\n  for (const n of iterable) {\n    /* istanbul ignore else */\n    if (DEBUG) {\n      if ((n._f & VNodeFlags.Key) === 0) {\n        throw new Error(`VNodes created with a mapIterable() function should have an explicit key`);\n      }\n      if (n._l !== n) {\n        throw new Error(`VNodes created with a mapIterable() function should be a singular nodes`);\n      }\n    }\n    if (prev !== null) {\n      n._l = prev;\n      prev._r = n;\n    } else {\n      first = n;\n    }\n    prev = n;\n  }\n\n  if (first !== null) {\n    first._l = prev!;\n    first._f |= VNodeFlags.KeyedList;\n    return first;\n  }\n  return null;\n}\n","import {\n  HTMLAnchorElementAttrs, HTMLElementAttrs, HTMLAreaElementAttrs, HTMLAudioElementAttrs,\n  HTMLBaseElementAttrs, HTMLBodyElementAttrs, HTMLBRElementAttrs, HTMLButtonElementAttrs,\n  HTMLCanvasElementAttrs, HTMLQuoteElementAttrs, HTMLTableCaptionElementAttrs, HTMLTableColElementAttrs,\n  HTMLModElementAttrs, HTMLDivElementAttrs, HTMLDListElementAttrs, HTMLFieldSetElementAttrs, HTMLFormElementAttrs,\n  HTMLHeadElementAttrs, HTMLHeadingElementAttrs, HTMLHRElementAttrs, HTMLHtmlElementAttrs, HTMLIFrameElementAttrs,\n  HTMLImageElementAttrs, HTMLInputElementAttrs, HTMLLabelElementAttrs, HTMLLegendElementAttrs, HTMLLIElementAttrs,\n  HTMLLinkElementAttrs, HTMLMapElementAttrs, HTMLMenuElementAttrs, HTMLMetaElementAttrs, HTMLMeterElementAttrs,\n  HTMLOListElementAttrs, HTMLOptGroupElementAttrs, HTMLOptionElementAttrs, HTMLParagraphElementAttrs,\n  HTMLPictureElementAttrs, HTMLPreElementAttrs, HTMLProgressElementAttrs, HTMLScriptElementAttrs,\n  HTMLSelectElementAttrs, HTMLSourceElementAttrs, HTMLSpanElementAttrs, HTMLStyleElementAttrs,\n  HTMLTableDataCellElementAttrs, HTMLTableElementAttrs, HTMLTableHeaderCellElementAttrs, HTMLTableRowElementAttrs,\n  HTMLTableSectionElementAttrs, HTMLTemplateElementAttrs, HTMLTextAreaElementAttrs, HTMLTitleElementAttrs,\n  HTMLTrackElementAttrs, HTMLUListElementAttrs, HTMLVideoElementAttrs,\n  CSSStyleProps,\n\n  ATTRIBUTE_DIRECTIVE_SKIP_UNDEFINED,\n\n  VNode, VNodeFlags, AttributeDirective,\n} from \"ivi\";\n\nconst enum TagId {\n  A = 1,\n  Abbr = 2,\n  Address = 3,\n  Area = 4,\n  Article = 5,\n  Aside = 6,\n  B = 7,\n  Base = 8,\n  Bdo = 9,\n  Blockquote = 10,\n  Body = 11,\n  Br = 12,\n  Button = 13,\n  Canvas = 14,\n  Caption = 15,\n  Cite = 16,\n  Code = 17,\n  Col = 18,\n  Colgroup = 19,\n  Dd = 20,\n  Del = 21,\n  Dfn = 22,\n  Div = 23,\n  Dl = 24,\n  Dt = 25,\n  Em = 26,\n  Fieldset = 27,\n  Figcaption = 28,\n  Figure = 29,\n  Footer = 30,\n  Form = 31,\n  H1 = 32,\n  H2 = 33,\n  H3 = 34,\n  H4 = 35,\n  H5 = 36,\n  H6 = 37,\n  Head = 38,\n  Header = 39,\n  Hgroup = 40,\n  Hr = 41,\n  Html = 42,\n  I = 43,\n  Iframe = 44,\n  Img = 45,\n  Input = 46,\n  Ins = 47,\n  Kbd = 48,\n  Label = 49,\n  Legend = 50,\n  Li = 51,\n  Link = 52,\n  Main = 53,\n  Map = 54,\n  Mark = 55,\n  Menu = 56,\n  Meta = 57,\n  Meter = 58,\n  Nav = 59,\n  Noscript = 60,\n  Ol = 61,\n  Optgroup = 62,\n  Option = 63,\n  P = 64,\n  Picture = 65,\n  Pre = 66,\n  Progress = 67,\n  Q = 68,\n  Rt = 69,\n  Ruby = 70,\n  S = 71,\n  Samp = 72,\n  Script = 73,\n  Section = 74,\n  Select = 75,\n  Source = 76,\n  Span = 77,\n  Strong = 78,\n  Style = 79,\n  Sub = 80,\n  Sup = 81,\n  Table = 82,\n  Tbody = 83,\n  Td = 84,\n  Template = 85,\n  Textarea = 86,\n  Tfoot = 87,\n  Th = 88,\n  Thead = 89,\n  Time = 90,\n  Title = 91,\n  Tr = 92,\n  Track = 93,\n  U = 94,\n  Ul = 95,\n  Wbr = 96,\n  Audio = 97,\n  Video = 98,\n}\n\n/**\n * {@link AttributeDirective} with `\"\"` value and {@link updateValue} sync function.\n */\nconst VALUE_EMPTY_STRING: AttributeDirective<string | number> = { v: \"\", u: updateValue };\n\n/**\n * {@link AttributeDirective} with `false` value and {@link updateChecked} sync function.\n */\nconst CHECKED_FALSE: AttributeDirective<boolean> = { v: false, u: updateChecked };\n\n/**\n * {@link AttributeDirective} with `true` value and {@link updateChecked} sync function.\n */\nconst CHECKED_TRUE: AttributeDirective<boolean> = { v: true, u: updateChecked };\n\n/**\n * Synchronization function for {@link AttributeDirective} created with {@link VALUE} function.\n *\n * @param element - Target element\n * @param key - Attribute key\n * @param prev - Previous value\n * @param next - Next value\n */\nfunction updateValue(\n  element: Element,\n  key: string,\n  prev: string | number | undefined,\n  next: string | number | undefined,\n) {\n  if (prev === void 0) {\n    if (next !== \"\") {\n      (element as HTMLInputElement | HTMLTextAreaElement).value = next as string;\n    }\n  } else {\n    if ((element as HTMLInputElement | HTMLTextAreaElement).value !== next) {\n      (element as HTMLInputElement | HTMLTextAreaElement).value = next as string;\n    }\n  }\n}\n\n/**\n * Synchronization function for {@link AttributeDirective} created with {@link CHECKED} function.\n *\n * @param element - Target element\n * @param key - Attribute key\n * @param prev - Previous value\n * @param next - Next value\n */\nfunction updateChecked(\n  element: Element,\n  key: string,\n  prev: boolean | undefined,\n  next: boolean | undefined,\n) {\n  if (prev === void 0) {\n    if (next) {\n      (element as HTMLInputElement).checked = next;\n    }\n  } else {\n    if ((element as HTMLInputElement).checked !== next) {\n      (element as HTMLInputElement).checked = next!;\n    }\n  }\n}\n\n/**\n * VALUE function creates a {@link AttributeDirective} that assigns a `value` property to an HTMLInputElement or\n * HTMLTextAreaElement.\n *\n * `undefined` values are ignored.\n *\n * @example\n *\n *   const e = input(\"\", { value: VALUE(\"value\") });\n *\n * @param v - Value\n * @returns {@link AttributeDirective}\n */\nexport function VALUE(v: string | number | undefined): AttributeDirective<string | number> {\n  return (v === void 0) ?\n    ATTRIBUTE_DIRECTIVE_SKIP_UNDEFINED :\n    v === \"\" ?\n      VALUE_EMPTY_STRING :\n      { v, u: updateValue };\n}\n\n/**\n * CHECKED function creates a {@link AttributeDirective} that assigns a `checked` property to an HTMLInputElement.\n *\n * `undefined` values are ignored.\n *\n * @example\n *\n *   const e = input(\"\", { checked: CHECKED(true) });\n *\n * @param v - Checked value\n * @returns {@link AttributeDirective}\n */\nexport function CHECKED(v: boolean | undefined): AttributeDirective<boolean> {\n  return (v === void 0) ?\n    ATTRIBUTE_DIRECTIVE_SKIP_UNDEFINED as any as AttributeDirective<boolean> :\n    v ? CHECKED_TRUE : CHECKED_FALSE;\n}\n\n/* tslint:disable:max-line-length */\n/**\n * Creates Virtual DOM HTML element <a>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <a>\n */\nexport const a = (className?: string, attrs?: HTMLAnchorElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLAnchorElementAttrs | undefined, HTMLAnchorElement>(\n    VNodeFlags.Element | (TagId.A << VNodeFlags.ElementIdOffset),\n    \"a\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <abbr>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/abbr}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <abbr>\n */\nexport const abbr = (className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLElementAttrs | undefined, HTMLElement>(\n    VNodeFlags.Element | (TagId.Abbr << VNodeFlags.ElementIdOffset),\n    \"abbr\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <address>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/address}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <address>\n */\nexport const address = (className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLElementAttrs | undefined, HTMLElement>(\n    VNodeFlags.Element | (TagId.Address << VNodeFlags.ElementIdOffset),\n    \"address\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <article>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/article}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <article>\n */\nexport const article = (className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLElementAttrs | undefined, HTMLElement>(\n    VNodeFlags.Element | (TagId.Article << VNodeFlags.ElementIdOffset),\n    \"article\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <aside>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/aside}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <aside>\n */\nexport const aside = (className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLElementAttrs | undefined, HTMLElement>(\n    VNodeFlags.Element | (TagId.Aside << VNodeFlags.ElementIdOffset),\n    \"aside\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <b>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/b}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <b>\n */\nexport const b = (className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLElementAttrs | undefined, HTMLElement>(\n    VNodeFlags.Element | (TagId.B << VNodeFlags.ElementIdOffset),\n    \"b\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <base>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/base}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <base>\n */\nexport const base = (className?: string, attrs?: HTMLBaseElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLBaseElementAttrs | undefined, HTMLBaseElement>(\n    VNodeFlags.Element | (TagId.Base << VNodeFlags.ElementIdOffset),\n    \"base\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <bdo>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/bdo}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <bdo>\n */\nexport const bdo = (className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLElementAttrs | undefined, HTMLElement>(\n    VNodeFlags.Element | (TagId.Bdo << VNodeFlags.ElementIdOffset),\n    \"bdo\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <blockquote>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/blockquote}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <blockquote>\n */\nexport const blockquote = (className?: string, attrs?: HTMLQuoteElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLQuoteElementAttrs | undefined, HTMLQuoteElement>(\n    VNodeFlags.Element | (TagId.Blockquote << VNodeFlags.ElementIdOffset),\n    \"blockquote\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <body>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/body}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <body>\n */\nexport const body = (className?: string, attrs?: HTMLBodyElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLBodyElementAttrs | undefined, HTMLBodyElement>(\n    VNodeFlags.Element | (TagId.Body << VNodeFlags.ElementIdOffset),\n    \"body\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <br>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/br}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <br>\n */\nexport const br = (className?: string, attrs?: HTMLBRElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLBRElementAttrs | undefined, HTMLBRElement>(\n    VNodeFlags.Element | (TagId.Br << VNodeFlags.ElementIdOffset),\n    \"br\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <button>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <button>\n */\nexport const button = (className?: string, attrs?: HTMLButtonElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLButtonElementAttrs | undefined, HTMLButtonElement>(\n    VNodeFlags.Element | (TagId.Button << VNodeFlags.ElementIdOffset),\n    \"button\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <canvas>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <canvas>\n */\nexport const canvas = (className?: string, attrs?: HTMLCanvasElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLCanvasElementAttrs | undefined, HTMLCanvasElement>(\n    VNodeFlags.Element | (TagId.Canvas << VNodeFlags.ElementIdOffset),\n    \"canvas\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <caption>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <caption>\n */\nexport const caption = (className?: string, attrs?: HTMLTableCaptionElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLTableCaptionElementAttrs | undefined, HTMLTableCaptionElement>(\n    VNodeFlags.Element | (TagId.Caption << VNodeFlags.ElementIdOffset),\n    \"caption\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <cite>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/cite}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <cite>\n */\nexport const cite = (className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLElementAttrs | undefined, HTMLElement>(\n    VNodeFlags.Element | (TagId.Cite << VNodeFlags.ElementIdOffset),\n    \"cite\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <code>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/code}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <code>\n */\nexport const code = (className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLElementAttrs | undefined, HTMLElement>(\n    VNodeFlags.Element | (TagId.Code << VNodeFlags.ElementIdOffset),\n    \"code\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <col>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/col}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <col>\n */\nexport const col = (className?: string, attrs?: HTMLTableColElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLTableColElementAttrs | undefined, HTMLTableColElement>(\n    VNodeFlags.Element | (TagId.Col << VNodeFlags.ElementIdOffset),\n    \"col\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <colgroup>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/colgroup}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <colgroup>\n */\nexport const colgroup = (className?: string, attrs?: HTMLTableColElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLTableColElementAttrs | undefined, HTMLTableColElement>(\n    VNodeFlags.Element | (TagId.Colgroup << VNodeFlags.ElementIdOffset),\n    \"colgroup\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <del>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/del}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <del>\n */\nexport const del = (className?: string, attrs?: HTMLModElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLModElementAttrs | undefined, HTMLModElement>(\n    VNodeFlags.Element | (TagId.Del << VNodeFlags.ElementIdOffset),\n    \"del\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <dfn>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dfn}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <dfn>\n */\nexport const dfn = (className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLElementAttrs | undefined, HTMLElement>(\n    VNodeFlags.Element | (TagId.Dfn << VNodeFlags.ElementIdOffset),\n    \"dfn\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <div>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <div>\n */\nexport const div = (className?: string, attrs?: HTMLDivElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLDivElementAttrs | undefined, HTMLDivElement>(\n    VNodeFlags.Element | (TagId.Div << VNodeFlags.ElementIdOffset),\n    \"div\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <dd>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dd}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <dd>\n */\nexport const dd = (className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLElementAttrs | undefined, HTMLElement>(\n    VNodeFlags.Element | (TagId.Dd << VNodeFlags.ElementIdOffset),\n    \"dd\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <dl>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dl}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <dl>\n */\nexport const dl = (className?: string, attrs?: HTMLDListElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLDListElementAttrs | undefined, HTMLDListElement>(\n    VNodeFlags.Element | (TagId.Dl << VNodeFlags.ElementIdOffset),\n    \"dl\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <dt>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dt}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <dt>\n */\nexport const dt = (className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLElementAttrs | undefined, HTMLElement>(\n    VNodeFlags.Element | (TagId.Dt << VNodeFlags.ElementIdOffset),\n    \"dt\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <em>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/em}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <em>\n */\nexport const em = (className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLElementAttrs | undefined, HTMLElement>(\n    VNodeFlags.Element | (TagId.Em << VNodeFlags.ElementIdOffset),\n    \"em\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <fieldset>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/fieldset}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <fieldset>\n */\nexport const fieldset = (className?: string, attrs?: HTMLFieldSetElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLFieldSetElementAttrs | undefined, HTMLFieldSetElement>(\n    VNodeFlags.Element | (TagId.Fieldset << VNodeFlags.ElementIdOffset),\n    \"fieldset\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <figcaption>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/figcaption}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <figcaption>\n */\nexport const figcaption = (className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLElementAttrs | undefined, HTMLElement>(\n    VNodeFlags.Element | (TagId.Figcaption << VNodeFlags.ElementIdOffset),\n    \"figcaption\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <figure>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/figure}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <figure>\n */\nexport const figure = (className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLElementAttrs | undefined, HTMLElement>(\n    VNodeFlags.Element | (TagId.Figure << VNodeFlags.ElementIdOffset),\n    \"figure\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <footer>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/footer}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <footer>\n */\nexport const footer = (className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLElementAttrs | undefined, HTMLElement>(\n    VNodeFlags.Element | (TagId.Footer << VNodeFlags.ElementIdOffset),\n    \"footer\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <form>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <form>\n */\nexport const form = (className?: string, attrs?: HTMLFormElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLFormElementAttrs | undefined, HTMLFormElement>(\n    VNodeFlags.Element | (TagId.Form << VNodeFlags.ElementIdOffset),\n    \"form\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <h1>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h1}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <h1>\n */\nexport const h1 = (className?: string, attrs?: HTMLHeadingElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLHeadingElementAttrs | undefined, HTMLHeadingElement>(\n    VNodeFlags.Element | (TagId.H1 << VNodeFlags.ElementIdOffset),\n    \"h1\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <h2>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h2}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <h2>\n */\nexport const h2 = (className?: string, attrs?: HTMLHeadingElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLHeadingElementAttrs | undefined, HTMLHeadingElement>(\n    VNodeFlags.Element | (TagId.H2 << VNodeFlags.ElementIdOffset),\n    \"h2\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <h3>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h3}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <h3>\n */\nexport const h3 = (className?: string, attrs?: HTMLHeadingElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLHeadingElementAttrs | undefined, HTMLHeadingElement>(\n    VNodeFlags.Element | (TagId.H3 << VNodeFlags.ElementIdOffset),\n    \"h3\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <h4>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h4}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <h4>\n */\nexport const h4 = (className?: string, attrs?: HTMLHeadingElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLHeadingElementAttrs | undefined, HTMLHeadingElement>(\n    VNodeFlags.Element | (TagId.H4 << VNodeFlags.ElementIdOffset),\n    \"h4\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <h5>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h5}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <h5>\n */\nexport const h5 = (className?: string, attrs?: HTMLHeadingElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLHeadingElementAttrs | undefined, HTMLHeadingElement>(\n    VNodeFlags.Element | (TagId.H5 << VNodeFlags.ElementIdOffset),\n    \"h5\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <h6>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h6}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <h6>\n */\nexport const h6 = (className?: string, attrs?: HTMLHeadingElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLHeadingElementAttrs | undefined, HTMLHeadingElement>(\n    VNodeFlags.Element | (TagId.H6 << VNodeFlags.ElementIdOffset),\n    \"h6\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <head>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/head}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <head>\n */\nexport const head = (className?: string, attrs?: HTMLHeadElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLHeadElementAttrs | undefined, HTMLHeadElement>(\n    VNodeFlags.Element | (TagId.Head << VNodeFlags.ElementIdOffset),\n    \"head\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <header>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/header}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <header>\n */\nexport const header = (className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLElementAttrs | undefined, HTMLElement>(\n    VNodeFlags.Element | (TagId.Header << VNodeFlags.ElementIdOffset),\n    \"header\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <hgroup>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/hgroup}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <hgroup>\n */\nexport const hgroup = (className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLElementAttrs | undefined, HTMLElement>(\n    VNodeFlags.Element | (TagId.Hgroup << VNodeFlags.ElementIdOffset),\n    \"hgroup\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <hr>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/hr}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <hr>\n */\nexport const hr = (className?: string, attrs?: HTMLHRElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLHRElementAttrs | undefined, HTMLHRElement>(\n    VNodeFlags.Element | (TagId.Hr << VNodeFlags.ElementIdOffset),\n    \"hr\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <html>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/html}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <html>\n */\nexport const html = (className?: string, attrs?: HTMLHtmlElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLHtmlElementAttrs | undefined, HTMLHtmlElement>(\n    VNodeFlags.Element | (TagId.Html << VNodeFlags.ElementIdOffset),\n    \"html\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <i>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/i}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <i>\n */\nexport const i = (className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLElementAttrs | undefined, HTMLElement>(\n    VNodeFlags.Element | (TagId.I << VNodeFlags.ElementIdOffset),\n    \"i\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <iframe>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <iframe>\n */\nexport const iframe = (className?: string, attrs?: HTMLIFrameElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLIFrameElementAttrs | undefined, HTMLIFrameElement>(\n    VNodeFlags.Element | (TagId.Iframe << VNodeFlags.ElementIdOffset),\n    \"iframe\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <img>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <img>\n */\nexport const img = (className?: string, attrs?: HTMLImageElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLImageElementAttrs | undefined, HTMLImageElement>(\n    VNodeFlags.Element | (TagId.Img << VNodeFlags.ElementIdOffset),\n    \"img\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <area>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/area}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <area>\n */\nexport const imgArea = (className?: string, attrs?: HTMLAreaElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLAreaElementAttrs | undefined, HTMLAreaElement>(\n    VNodeFlags.Element | (TagId.Area << VNodeFlags.ElementIdOffset),\n    \"area\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <map>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/map}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <map>\n */\nexport const imgMap = (className?: string, attrs?: HTMLMapElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLMapElementAttrs | undefined, HTMLMapElement>(\n    VNodeFlags.Element | (TagId.Map << VNodeFlags.ElementIdOffset),\n    \"map\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <ins>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ins}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <ins>\n */\nexport const ins = (className?: string, attrs?: HTMLModElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLModElementAttrs | undefined, HTMLModElement>(\n    VNodeFlags.Element | (TagId.Ins << VNodeFlags.ElementIdOffset),\n    \"ins\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <kbd>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/kbd}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <kbd>\n */\nexport const kbd = (className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLElementAttrs | undefined, HTMLElement>(\n    VNodeFlags.Element | (TagId.Kbd << VNodeFlags.ElementIdOffset),\n    \"kbd\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <label>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/label}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <label>\n */\nexport const label = (className?: string, attrs?: HTMLLabelElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLLabelElementAttrs | undefined, HTMLLabelElement>(\n    VNodeFlags.Element | (TagId.Label << VNodeFlags.ElementIdOffset),\n    \"label\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <legend>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/legend}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <legend>\n */\nexport const legend = (className?: string, attrs?: HTMLLegendElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLLegendElementAttrs | undefined, HTMLLegendElement>(\n    VNodeFlags.Element | (TagId.Legend << VNodeFlags.ElementIdOffset),\n    \"legend\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <li>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/li}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <li>\n */\nexport const li = (className?: string, attrs?: HTMLLIElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLLIElementAttrs | undefined, HTMLLIElement>(\n    VNodeFlags.Element | (TagId.Li << VNodeFlags.ElementIdOffset),\n    \"li\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <link>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <link>\n */\nexport const link = (className?: string, attrs?: HTMLLinkElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLLinkElementAttrs | undefined, HTMLLinkElement>(\n    VNodeFlags.Element | (TagId.Link << VNodeFlags.ElementIdOffset),\n    \"link\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <main>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/main}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <main>\n */\nexport const main = (className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLElementAttrs | undefined, HTMLElement>(\n    VNodeFlags.Element | (TagId.Main << VNodeFlags.ElementIdOffset),\n    \"main\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <mark>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/mark}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <mark>\n */\nexport const mark = (className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLElementAttrs | undefined, HTMLElement>(\n    VNodeFlags.Element | (TagId.Mark << VNodeFlags.ElementIdOffset),\n    \"mark\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <menu>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/menu}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <menu>\n */\nexport const menu = (className?: string, attrs?: HTMLMenuElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLMenuElementAttrs | undefined, HTMLMenuElement>(\n    VNodeFlags.Element | (TagId.Menu << VNodeFlags.ElementIdOffset),\n    \"menu\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <meta>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <meta>\n */\nexport const meta = (className?: string, attrs?: HTMLMetaElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLMetaElementAttrs | undefined, HTMLMetaElement>(\n    VNodeFlags.Element | (TagId.Meta << VNodeFlags.ElementIdOffset),\n    \"meta\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <meter>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meter}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <meter>\n */\nexport const meter = (className?: string, attrs?: HTMLMeterElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLMeterElementAttrs | undefined, HTMLMeterElement>(\n    VNodeFlags.Element | (TagId.Meter << VNodeFlags.ElementIdOffset),\n    \"meter\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <nav>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/nav}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <nav>\n */\nexport const nav = (className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLElementAttrs | undefined, HTMLElement>(\n    VNodeFlags.Element | (TagId.Nav << VNodeFlags.ElementIdOffset),\n    \"nav\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <noscript>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/noscript}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <noscript>\n */\nexport const noscript = (className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLElementAttrs | undefined, HTMLElement>(\n    VNodeFlags.Element | (TagId.Noscript << VNodeFlags.ElementIdOffset),\n    \"noscript\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <ol>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ol}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <ol>\n */\nexport const ol = (className?: string, attrs?: HTMLOListElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLOListElementAttrs | undefined, HTMLOListElement>(\n    VNodeFlags.Element | (TagId.Ol << VNodeFlags.ElementIdOffset),\n    \"ol\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <optgroup>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/optgroup}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <optgroup>\n */\nexport const optgroup = (className?: string, attrs?: HTMLOptGroupElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLOptGroupElementAttrs | undefined, HTMLOptGroupElement>(\n    VNodeFlags.Element | (TagId.Optgroup << VNodeFlags.ElementIdOffset),\n    \"optgroup\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <option>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <option>\n */\nexport const option = (className?: string, attrs?: HTMLOptionElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLOptionElementAttrs | undefined, HTMLOptionElement>(\n    VNodeFlags.Element | (TagId.Option << VNodeFlags.ElementIdOffset),\n    \"option\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <p>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/p}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <p>\n */\nexport const p = (className?: string, attrs?: HTMLParagraphElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLParagraphElementAttrs | undefined, HTMLParagraphElement>(\n    VNodeFlags.Element | (TagId.P << VNodeFlags.ElementIdOffset),\n    \"p\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <picture>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/picture}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <picture>\n */\nexport const picture = (className?: string, attrs?: HTMLPictureElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLPictureElementAttrs | undefined, HTMLPictureElement>(\n    VNodeFlags.Element | (TagId.Picture << VNodeFlags.ElementIdOffset),\n    \"picture\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <pre>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/pre}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <pre>\n */\nexport const pre = (className?: string, attrs?: HTMLPreElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLPreElementAttrs | undefined, HTMLPreElement>(\n    VNodeFlags.Element | (TagId.Pre << VNodeFlags.ElementIdOffset),\n    \"pre\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <progress>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/progress}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <progress>\n */\nexport const progress = (className?: string, attrs?: HTMLProgressElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLProgressElementAttrs | undefined, HTMLProgressElement>(\n    VNodeFlags.Element | (TagId.Progress << VNodeFlags.ElementIdOffset),\n    \"progress\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <q>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/q}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <q>\n */\nexport const q = (className?: string, attrs?: HTMLQuoteElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLQuoteElementAttrs | undefined, HTMLQuoteElement>(\n    VNodeFlags.Element | (TagId.Q << VNodeFlags.ElementIdOffset),\n    \"q\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <rt>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/rt}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <rt>\n */\nexport const rt = (className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLElementAttrs | undefined, HTMLElement>(\n    VNodeFlags.Element | (TagId.Rt << VNodeFlags.ElementIdOffset),\n    \"rt\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <ruby>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ruby}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <ruby>\n */\nexport const ruby = (className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLElementAttrs | undefined, HTMLElement>(\n    VNodeFlags.Element | (TagId.Ruby << VNodeFlags.ElementIdOffset),\n    \"ruby\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <s>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/s}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <s>\n */\nexport const s = (className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLElementAttrs | undefined, HTMLElement>(\n    VNodeFlags.Element | (TagId.S << VNodeFlags.ElementIdOffset),\n    \"s\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <samp>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/samp}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <samp>\n */\nexport const samp = (className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLElementAttrs | undefined, HTMLElement>(\n    VNodeFlags.Element | (TagId.Samp << VNodeFlags.ElementIdOffset),\n    \"samp\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <script>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <script>\n */\nexport const script = (className?: string, attrs?: HTMLScriptElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLScriptElementAttrs | undefined, HTMLScriptElement>(\n    VNodeFlags.Element | (TagId.Script << VNodeFlags.ElementIdOffset),\n    \"script\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <section>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/section}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <section>\n */\nexport const section = (className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLElementAttrs | undefined, HTMLElement>(\n    VNodeFlags.Element | (TagId.Section << VNodeFlags.ElementIdOffset),\n    \"section\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <select>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <select>\n */\nexport const select = (className?: string, attrs?: HTMLSelectElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLSelectElementAttrs | undefined, HTMLSelectElement>(\n    VNodeFlags.Element | (TagId.Select << VNodeFlags.ElementIdOffset),\n    \"select\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <source>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/source}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <source>\n */\nexport const source = (className?: string, attrs?: HTMLSourceElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLSourceElementAttrs | undefined, HTMLSourceElement>(\n    VNodeFlags.Element | (TagId.Source << VNodeFlags.ElementIdOffset),\n    \"source\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <span>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <span>\n */\nexport const span = (className?: string, attrs?: HTMLSpanElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLSpanElementAttrs | undefined, HTMLSpanElement>(\n    VNodeFlags.Element | (TagId.Span << VNodeFlags.ElementIdOffset),\n    \"span\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <strong>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/strong}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <strong>\n */\nexport const strong = (className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLElementAttrs | undefined, HTMLElement>(\n    VNodeFlags.Element | (TagId.Strong << VNodeFlags.ElementIdOffset),\n    \"strong\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <style>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/style}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <style>\n */\nexport const style = (className?: string, attrs?: HTMLStyleElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLStyleElementAttrs | undefined, HTMLStyleElement>(\n    VNodeFlags.Element | (TagId.Style << VNodeFlags.ElementIdOffset),\n    \"style\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <sub>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/sub}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <sub>\n */\nexport const sub = (className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLElementAttrs | undefined, HTMLElement>(\n    VNodeFlags.Element | (TagId.Sub << VNodeFlags.ElementIdOffset),\n    \"sub\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <sup>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/sup}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <sup>\n */\nexport const sup = (className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLElementAttrs | undefined, HTMLElement>(\n    VNodeFlags.Element | (TagId.Sup << VNodeFlags.ElementIdOffset),\n    \"sup\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <table>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/table}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <table>\n */\nexport const table = (className?: string, attrs?: HTMLTableElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLTableElementAttrs | undefined, HTMLTableElement>(\n    VNodeFlags.Element | (TagId.Table << VNodeFlags.ElementIdOffset),\n    \"table\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <tbody>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tbody}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <tbody>\n */\nexport const tbody = (className?: string, attrs?: HTMLTableSectionElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLTableSectionElementAttrs | undefined, HTMLTableSectionElement>(\n    VNodeFlags.Element | (TagId.Tbody << VNodeFlags.ElementIdOffset),\n    \"tbody\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <td>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/td}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <td>\n */\nexport const td = (className?: string, attrs?: HTMLTableDataCellElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLTableDataCellElementAttrs | undefined, HTMLTableDataCellElement>(\n    VNodeFlags.Element | (TagId.Td << VNodeFlags.ElementIdOffset),\n    \"td\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <template>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/template}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <template>\n */\nexport const template = (className?: string, attrs?: HTMLTemplateElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLTemplateElementAttrs | undefined, HTMLTemplateElement>(\n    VNodeFlags.Element | (TagId.Template << VNodeFlags.ElementIdOffset),\n    \"template\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <tfoot>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tfoot}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <tfoot>\n */\nexport const tfoot = (className?: string, attrs?: HTMLTableSectionElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLTableSectionElementAttrs | undefined, HTMLTableSectionElement>(\n    VNodeFlags.Element | (TagId.Tfoot << VNodeFlags.ElementIdOffset),\n    \"tfoot\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <th>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/th}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <th>\n */\nexport const th = (className?: string, attrs?: HTMLTableHeaderCellElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLTableHeaderCellElementAttrs | undefined, HTMLTableHeaderCellElement>(\n    VNodeFlags.Element | (TagId.Th << VNodeFlags.ElementIdOffset),\n    \"th\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <thead>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/thead}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <thead>\n */\nexport const thead = (className?: string, attrs?: HTMLTableSectionElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLTableSectionElementAttrs | undefined, HTMLTableSectionElement>(\n    VNodeFlags.Element | (TagId.Thead << VNodeFlags.ElementIdOffset),\n    \"thead\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <time>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/time}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <time>\n */\nexport const time = (className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLElementAttrs | undefined, HTMLElement>(\n    VNodeFlags.Element | (TagId.Time << VNodeFlags.ElementIdOffset),\n    \"time\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <title>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/title}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <title>\n */\nexport const title = (className?: string, attrs?: HTMLTitleElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLTitleElementAttrs | undefined, HTMLTitleElement>(\n    VNodeFlags.Element | (TagId.Title << VNodeFlags.ElementIdOffset),\n    \"title\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <tr>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tr}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <tr>\n */\nexport const tr = (className?: string, attrs?: HTMLTableRowElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLTableRowElementAttrs | undefined, HTMLTableRowElement>(\n    VNodeFlags.Element | (TagId.Tr << VNodeFlags.ElementIdOffset),\n    \"tr\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <track>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/track}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <track>\n */\nexport const track = (className?: string, attrs?: HTMLTrackElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLTrackElementAttrs | undefined, HTMLTrackElement>(\n    VNodeFlags.Element | (TagId.Track << VNodeFlags.ElementIdOffset),\n    \"track\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <u>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/u}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <u>\n */\nexport const u = (className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLElementAttrs | undefined, HTMLElement>(\n    VNodeFlags.Element | (TagId.U << VNodeFlags.ElementIdOffset),\n    \"u\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <ul>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ul}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <ul>\n */\nexport const ul = (className?: string, attrs?: HTMLUListElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLUListElementAttrs | undefined, HTMLUListElement>(\n    VNodeFlags.Element | (TagId.Ul << VNodeFlags.ElementIdOffset),\n    \"ul\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <wbr>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/wbr}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <wbr>\n */\nexport const wbr = (className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLElementAttrs | undefined, HTMLElement>(\n    VNodeFlags.Element | (TagId.Wbr << VNodeFlags.ElementIdOffset),\n    \"wbr\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <textarea>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <textarea>\n */\nexport const textarea = (className?: string, attrs?: HTMLTextAreaElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLTextAreaElementAttrs | undefined, HTMLTextAreaElement>(\n    VNodeFlags.Element | (TagId.Textarea << VNodeFlags.ElementIdOffset),\n    \"textarea\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <input>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <input>\n */\nexport const input = (className?: string, attrs?: HTMLInputElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLInputElementAttrs | undefined, HTMLInputElement>(\n    VNodeFlags.Element | (TagId.Input << VNodeFlags.ElementIdOffset),\n    \"input\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <audio>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <audio>\n */\nexport const audio = (className?: string, attrs?: HTMLAudioElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLAudioElementAttrs | undefined, HTMLAudioElement>(\n    VNodeFlags.Element | (TagId.Audio << VNodeFlags.ElementIdOffset),\n    \"audio\",\n    attrs,\n    className,\n    css,\n  )\n);\n\n/**\n * Creates Virtual DOM HTML element <video>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <video>\n */\nexport const video = (className?: string, attrs?: HTMLVideoElementAttrs, css?: CSSStyleProps) => (\n  new VNode<HTMLVideoElementAttrs | undefined, HTMLVideoElement>(\n    VNodeFlags.Element | (TagId.Video << VNodeFlags.ElementIdOffset),\n    \"video\",\n    attrs,\n    className,\n    css,\n  )\n);\n","/**\n * @final\n */\nexport class Query {\n    constructor(elapsed, query) {\n        this.elapsed = elapsed;\n        this.query = query;\n    }\n    static rand() {\n        const elapsed = Math.random() * 15;\n        let query;\n        if (Math.random() < 0.1) {\n            query = \"vacuum\";\n        }\n        else if (Math.random() < 0.2) {\n            query = \"<IDLE> in transaction\";\n        }\n        else {\n            query = \"SELECT blah FROM something\";\n        }\n        return new Query(elapsed, query);\n    }\n}\nconst EMPTY_QUERY = new Query(0, \"***\");\n/**\n * @final\n */\nexport class DB {\n    constructor(name) {\n        this.id = DB._nextId++;\n        this.name = name;\n        this.queries = null;\n        this.update();\n    }\n    update() {\n        const queries = [];\n        const r = Math.floor((Math.random() * 10) + 1);\n        for (let j = 0; j < r; j++) {\n            queries.push(Query.rand());\n        }\n        this.queries = queries;\n    }\n    getTopFiveQueries() {\n        const qs = this.queries.slice(0, 5);\n        qs.sort(function (a, b) {\n            return a.elapsed - b.elapsed;\n        });\n        while (qs.length < 5) {\n            qs.push(EMPTY_QUERY);\n        }\n        return qs;\n    }\n}\nDB._nextId = 0;\n/**\n * @final\n */\nexport class DBList {\n    constructor(n) {\n        this.dbs = [];\n        for (let i = 0; i < n; i++) {\n            this.dbs.push(new DB(\"cluster\" + (i + 1)));\n            this.dbs.push(new DB(\"cluster\" + (i + 1) + \" slave\"));\n        }\n    }\n    update() {\n        const dbs = this.dbs;\n        for (let i = 0; i < dbs.length; i++) {\n            dbs[i] = new DB(dbs[i].name);\n        }\n    }\n    randomUpdate(r) {\n        const dbs = this.dbs;\n        for (let i = 0; i < dbs.length; i++) {\n            if (Math.random() < r) {\n                dbs[i] = new DB(dbs[i].name);\n            }\n        }\n    }\n}\n","var MonitorMaxSamples = 100;\nvar MonitorSamplesResult = (function () {\n    function MonitorSamplesResult(min, max, mean, last) {\n        this.min = min;\n        this.max = max;\n        this.mean = mean;\n        this.last = last;\n    }\n    return MonitorSamplesResult;\n}());\n/**\n * Profile Samples.\n */\nvar MonitorSamples = (function () {\n    function MonitorSamples(maxSamples) {\n        this.samples = [];\n        this.maxSamples = maxSamples;\n        this._i = -1;\n    }\n    MonitorSamples.prototype.addSample = function (v) {\n        this._i = (this._i + 1) % this.maxSamples;\n        this.samples[this._i] = v;\n    };\n    MonitorSamples.prototype.each = function (fn) {\n        var samples = this.samples;\n        for (var i = 0; i < samples.length; i++) {\n            fn(samples[(this._i + 1 + i) % samples.length], i);\n        }\n    };\n    MonitorSamples.prototype.calc = function () {\n        var samples = this.samples;\n        if (samples.length === 0) {\n            return new MonitorSamplesResult(0, 0, 0, 0);\n        }\n        var min = samples[(this._i + 1) % samples.length];\n        var max = min;\n        var sum = 0;\n        for (var i = 0; i < samples.length; i++) {\n            var k = samples[(this._i + 1 + i) % samples.length];\n            if (k < min) {\n                min = k;\n            }\n            if (k > max) {\n                max = k;\n            }\n            sum += k;\n        }\n        var last = samples[this._i];\n        var mean = sum / samples.length;\n        return new MonitorSamplesResult(min, max, mean, last);\n    };\n    return MonitorSamples;\n}());\n\n/**\n * Basic Counter.\n */\nvar BasicCounter = (function () {\n    function BasicCounter() {\n        this.value = 0;\n        this.onChange = null;\n    }\n    BasicCounter.prototype.inc = function (value) {\n        if (value > 0) {\n            this.value += value;\n            this.onChange();\n        }\n    };\n    return BasicCounter;\n}());\nvar TimestampedValue = (function () {\n    function TimestampedValue(timestamp, value) {\n        this.value = value;\n        this.next = null;\n    }\n    return TimestampedValue;\n}());\n/**\n * Sliding Counter counts how many times `inc` method were called during `interval` period.\n */\nvar SlidingCounter = (function () {\n    function SlidingCounter(interval) {\n        var _this = this;\n        this._dec = function () {\n            var now = performance.now();\n            while (_this._firstTimestamp !== null) {\n                var nextTimestamp = _this._firstTimestamp;\n                if (now >= nextTimestamp.value) {\n                    _this.value -= nextTimestamp.value;\n                    _this._firstTimestamp = _this._firstTimestamp.next;\n                }\n                else {\n                    setTimeout(_this._dec, Math.ceil(nextTimestamp.value - now));\n                    break;\n                }\n            }\n            if (_this._firstTimestamp === null) {\n                _this._lastTimestamp = null;\n            }\n            _this.onChange();\n        };\n        this.interval = interval;\n        this.value = 0;\n        this.onChange = null;\n        this._firstTimestamp = null;\n        this._lastTimestamp = null;\n    }\n    SlidingCounter.prototype.inc = function (value) {\n        if (value > 0) {\n            var timestamp = new TimestampedValue(performance.now() + this.interval, value);\n            if (this._firstTimestamp === null) {\n                this._firstTimestamp = timestamp;\n                setTimeout(this._dec, this.interval);\n            }\n            else {\n                this._lastTimestamp.next = timestamp;\n            }\n            this._lastTimestamp = timestamp;\n            this.value += value;\n            this.onChange();\n        }\n    };\n    return SlidingCounter;\n}());\n\nvar frameTasks = [];\nvar rafId = -1;\n/**\n * Schedule new task that will be executed on the next frame.\n */\nfunction scheduleNextFrameTask(task) {\n    frameTasks.push(task);\n    if (rafId === -1) {\n        requestAnimationFrame(function (t) {\n            rafId = -1;\n            var tasks = frameTasks;\n            frameTasks = [];\n            for (var i = 0; i < tasks.length; i++) {\n                tasks[i]();\n            }\n        });\n    }\n}\n\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar MonitorGraphHeight = 30;\nvar MonitorGraphWidth = MonitorMaxSamples;\nvar Widget = (function () {\n    function Widget(name) {\n        var _this = this;\n        this._sync = function () {\n            _this.sync();\n            _this._dirty = false;\n        };\n        this.name = name;\n        this.element = document.createElement(\"div\");\n        this.element.style.cssText = \"padding: 2px;\" +\n            \"background-color: #020;\" +\n            \"font-family: monospace;\" +\n            \"font-size: 12px;\" +\n            \"color: #0f0\";\n        this._dirty = false;\n        this.invalidate();\n    }\n    Widget.prototype.invalidate = function () {\n        if (!this._dirty) {\n            this._dirty = true;\n            scheduleNextFrameTask(this._sync);\n        }\n    };\n    Widget.prototype.sync = function () {\n        throw new Error(\"sync method not implemented\");\n    };\n    return Widget;\n}());\nvar MonitorWidgetFlags;\n(function (MonitorWidgetFlags) {\n    MonitorWidgetFlags[MonitorWidgetFlags[\"HideMin\"] = 1] = \"HideMin\";\n    MonitorWidgetFlags[MonitorWidgetFlags[\"HideMax\"] = 2] = \"HideMax\";\n    MonitorWidgetFlags[MonitorWidgetFlags[\"HideMean\"] = 4] = \"HideMean\";\n    MonitorWidgetFlags[MonitorWidgetFlags[\"HideLast\"] = 8] = \"HideLast\";\n    MonitorWidgetFlags[MonitorWidgetFlags[\"HideGraph\"] = 16] = \"HideGraph\";\n    MonitorWidgetFlags[MonitorWidgetFlags[\"RoundValues\"] = 32] = \"RoundValues\";\n})(MonitorWidgetFlags || (MonitorWidgetFlags = {}));\nvar MonitorWidget = (function (_super) {\n    __extends(MonitorWidget, _super);\n    function MonitorWidget(name, flags, unitName, samples) {\n        var _this = _super.call(this, name) || this;\n        _this.flags = flags;\n        _this.unitName = unitName;\n        _this.samples = samples;\n        var label = document.createElement(\"div\");\n        label.style.cssText = \"text-align: center\";\n        label.textContent = _this.name;\n        var text = document.createElement(\"div\");\n        if ((flags & MonitorWidgetFlags.HideMin) === 0) {\n            _this.minText = document.createElement(\"div\");\n            text.appendChild(_this.minText);\n        }\n        else {\n            _this.minText = null;\n        }\n        if ((flags & MonitorWidgetFlags.HideMax) === 0) {\n            _this.maxText = document.createElement(\"div\");\n            text.appendChild(_this.maxText);\n        }\n        else {\n            _this.maxText = null;\n        }\n        if ((flags & MonitorWidgetFlags.HideMean) === 0) {\n            _this.meanText = document.createElement(\"div\");\n            text.appendChild(_this.meanText);\n        }\n        else {\n            _this.meanText = null;\n        }\n        if ((flags & MonitorWidgetFlags.HideLast) === 0) {\n            _this.lastText = document.createElement(\"div\");\n            text.appendChild(_this.lastText);\n        }\n        else {\n            _this.lastText = null;\n        }\n        _this.element.appendChild(label);\n        _this.element.appendChild(text);\n        if ((flags & MonitorWidgetFlags.HideGraph) === 0) {\n            _this.canvas = document.createElement(\"canvas\");\n            _this.canvas.style.cssText = \"display: block; padding: 0; margin: 0\";\n            _this.canvas.width = MonitorGraphWidth;\n            _this.canvas.height = MonitorGraphHeight;\n            _this.ctx = _this.canvas.getContext(\"2d\");\n            _this.element.appendChild(_this.canvas);\n        }\n        else {\n            _this.canvas = null;\n            _this.ctx = null;\n        }\n        return _this;\n    }\n    MonitorWidget.prototype.sync = function () {\n        var _this = this;\n        var result = this.samples.calc();\n        var scale = MonitorGraphHeight / (result.max * 1.2);\n        var min;\n        var max;\n        var mean;\n        var last;\n        if ((this.flags & MonitorWidgetFlags.RoundValues) === 0) {\n            min = result.min.toFixed(2);\n            max = result.max.toFixed(2);\n            mean = result.mean.toFixed(2);\n            last = result.last.toFixed(2);\n        }\n        else {\n            min = Math.round(result.min).toString();\n            max = Math.round(result.max).toString();\n            mean = Math.round(result.mean).toString();\n            last = Math.round(result.last).toString();\n        }\n        if (this.minText !== null) {\n            this.minText.textContent = \"min: \\u00A0\" + min + this.unitName;\n        }\n        if (this.maxText !== null) {\n            this.maxText.textContent = \"max: \\u00A0\" + max + this.unitName;\n        }\n        if (this.meanText !== null) {\n            this.meanText.textContent = \"mean: \" + mean + this.unitName;\n        }\n        if (this.lastText !== null) {\n            this.lastText.textContent = \"last: \" + last + this.unitName;\n        }\n        if (this.ctx !== null) {\n            this.ctx.fillStyle = \"#010\";\n            this.ctx.fillRect(0, 0, MonitorGraphWidth, MonitorGraphHeight);\n            this.ctx.fillStyle = \"#0f0\";\n            this.samples.each(function (v, i) {\n                _this.ctx.fillRect(i, MonitorGraphHeight, 1, -(v * scale));\n            });\n        }\n    };\n    return MonitorWidget;\n}(Widget));\nvar CounterWidget = (function (_super) {\n    __extends(CounterWidget, _super);\n    function CounterWidget(name, counter) {\n        var _this = _super.call(this, name) || this;\n        _this.counter = counter;\n        _this.text = document.createElement(\"div\");\n        _this.element.appendChild(_this.text);\n        return _this;\n    }\n    CounterWidget.prototype.sync = function () {\n        this.text.textContent = this.name + \": \" + this.counter.value;\n    };\n    return CounterWidget;\n}(Widget));\n\nvar container = null;\nvar initialized = false;\n/**\n * Initialize Performance Monitor.\n */\nfunction initPerfMonitor(options) {\n    if (!initialized) {\n        if (options.container) {\n            container = options.container;\n        }\n        initialized = true;\n    }\n}\n/**\n * Check that everything is properly initialized.\n */\nfunction checkInit() {\n    if (!container) {\n        container = document.createElement(\"div\");\n        container.style.cssText = \"position: fixed;\" +\n            \"opacity: 0.9;\" +\n            \"right: 0;\" +\n            \"bottom: 0\";\n        document.body.appendChild(container);\n    }\n    initialized = true;\n}\n/**\n * Start FPS monitor\n */\nfunction startFPSMonitor(flags) {\n    if (flags === void 0) { flags = MonitorWidgetFlags.HideMin | MonitorWidgetFlags.HideMax |\n        MonitorWidgetFlags.HideMean | MonitorWidgetFlags.RoundValues; }\n    checkInit();\n    var data = new MonitorSamples(MonitorMaxSamples);\n    var w = new MonitorWidget(\"FPS\", flags, \"\", data);\n    container.appendChild(w.element);\n    var alpha = 2 / 121;\n    var last = 0;\n    var fps = 60;\n    function update(now) {\n        if (last > 0) {\n            fps += alpha * ((1000 / (now - last)) - fps);\n        }\n        last = now;\n        data.addSample(fps);\n        w.invalidate();\n        requestAnimationFrame(update);\n    }\n    requestAnimationFrame(update);\n}\n/**\n * Start Memory Monitor\n */\nfunction startMemMonitor(flags) {\n    if (flags === void 0) { flags = MonitorWidgetFlags.HideMin | MonitorWidgetFlags.HideMean; }\n    checkInit();\n    if (performance.memory === undefined) {\n        return;\n    }\n    var data = new MonitorSamples(MonitorMaxSamples);\n    var w = new MonitorWidget(\"Memory\", flags, \"MB\", data);\n    container.appendChild(w.element);\n    function update() {\n        data.addSample(Math.round(performance.memory.usedJSHeapSize / (1024 * 1024)));\n        w.invalidate();\n        setTimeout(update, 30);\n    }\n    update();\n}\nvar ProfilerDetails = (function () {\n    function ProfilerDetails(name, unitName, flags) {\n        this.data = new MonitorSamples(MonitorMaxSamples);\n        this.widget = new MonitorWidget(name, flags, unitName, this.data);\n        this.startTime = -1;\n    }\n    return ProfilerDetails;\n}());\nvar profilerInstances = {};\nvar CounterDetails = (function () {\n    function CounterDetails(name, interval) {\n        var _this = this;\n        this.data = interval === undefined ? new BasicCounter() : new SlidingCounter(interval);\n        this.widget = new CounterWidget(name, this.data);\n        this.data.onChange = function () {\n            _this.widget.invalidate();\n        };\n    }\n    return CounterDetails;\n}());\nvar counterInstances = {};\n/**\n * Initialize profiler and insert into container.\n */\nfunction initProfiler(name, flags) {\n    if (flags === void 0) { flags = 0; }\n    checkInit();\n    var profiler = profilerInstances[name];\n    if (profiler === void 0) {\n        profilerInstances[name] = profiler = new ProfilerDetails(name, \"ms\", flags);\n        container.appendChild(profiler.widget.element);\n    }\n}\n/**\n * Initialize counter and insert into container.\n */\nfunction initCounter(name, interval) {\n    checkInit();\n    var counter = counterInstances[name];\n    if (counter === void 0) {\n        counterInstances[name] = counter = new CounterDetails(name, interval);\n        container.appendChild(counter.widget.element);\n    }\n}\nfunction startProfile(name) {\n    var profiler = profilerInstances[name];\n    if (profiler !== void 0) {\n        profiler.startTime = performance.now();\n    }\n}\nfunction endProfile(name) {\n    var now = performance.now();\n    var profiler = profilerInstances[name];\n    if (profiler !== void 0 && profiler.startTime !== -1) {\n        profiler.data.addSample(now - profiler.startTime);\n        profiler.widget.invalidate();\n    }\n}\nfunction count(name, value) {\n    if (value === void 0) { value = 1; }\n    var counter = counterInstances[name];\n    if (counter !== void 0) {\n        counter.data.inc(value);\n    }\n}\n/**\n * lookup a profile by name\n * @param name the name of the profile to lookup\n */\nfunction getProfile(name) {\n    return profilerInstances[name];\n}\n/**\n * lookup a counter by name\n * @param name the name of the counter to lookup\n */\nfunction getCounter(name) {\n    return counterInstances[name];\n}\n\nexport { initPerfMonitor, startFPSMonitor, startMemMonitor, ProfilerDetails, CounterDetails, initProfiler, initCounter, startProfile, endProfile, count, getProfile, getCounter, MonitorSamplesResult, MonitorMaxSamples, MonitorSamples, BasicCounter, SlidingCounter, Widget, MonitorWidgetFlags, MonitorWidget, CounterWidget };\n","import { component, useSelect, render, map, requestDirtyCheck, withNextFrame } from \"ivi\";\nimport { div, tr, td, span, table, tbody } from \"ivi-html\";\nimport { DBList } from \"./db\";\nimport { startFPSMonitor, startMemMonitor, initProfiler, startProfile, endProfile } from \"perf-monitor\";\nlet mutations = 0.5;\nlet N = 50;\nconst qs = parseQueryString(window.location.search.substr(1).split(\"&\"));\nif (qs[\"n\"] !== undefined) {\n    N = parseInt(qs[\"n\"], 10);\n}\nif (qs[\"m\"] !== undefined) {\n    mutations = parseFloat(qs[\"m\"]);\n}\nconst store = new DBList(N);\nfunction entryFormatElapsed(v) {\n    if (v === 0) {\n        return \"\";\n    }\n    if (v > 60) {\n        const minutes = Math.floor(v / 60);\n        const comps = (v % 60).toFixed(2).split(\".\");\n        const seconds = comps[0];\n        const ms = comps[1];\n        return minutes + \":\" + seconds + \".\" + ms;\n    }\n    return v.toFixed(2);\n}\nfunction counterClasses(count) {\n    if (count >= 20) {\n        return \"label label-important\";\n    }\n    else if (count >= 10) {\n        return \"label label-warning\";\n    }\n    return \"label label-success\";\n}\nfunction queryClasses(elapsed) {\n    if (elapsed > 0) {\n        if (elapsed >= 10.0) {\n            return \"Query elapsed warn_long\";\n        }\n        else if (elapsed >= 1.0) {\n            return \"Query elapsed warn\";\n        }\n        return \"Query elapsed short\";\n    }\n    return \"\";\n}\nconst Popover = component(() => (query) => (div(\"popover left\").c(div(\"popover-content\").t(query), div(\"arrow\"))));\nconst DatabaseList = component((h) => {\n    const getDB = useSelect(h, (idx) => store.dbs[idx]);\n    return (idx) => {\n        const db = getDB(idx);\n        const topFiveQueries = db.getTopFiveQueries();\n        const count = db.queries.length;\n        return tr().c(td(\"dbname\").t(db.name), td(\"query-count\").c(span(counterClasses(count)).t(count)), map(topFiveQueries, (q, i) => (td(queryClasses(q.elapsed)).k(i).c(entryFormatElapsed(q.elapsed), Popover(q.query)))));\n    };\n});\nconst Main = component(() => (props) => (table(\"table table-striped latest-data\").c(tbody().c(map(props.dbs, (db, i) => DatabaseList(i).k(db.id))))));\nfunction parseQueryString(a) {\n    if (a.length === 0) {\n        return {};\n    }\n    const b = {};\n    for (let i = 0; i < a.length; ++i) {\n        const p = a[i].split(\"=\", 2);\n        if (p.length === 1) {\n            b[p[0]] = \"\";\n        }\n        else {\n            b[p[0]] = decodeURIComponent(p[1].replace(/\\+/g, \" \"));\n        }\n    }\n    return b;\n}\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    startFPSMonitor();\n    startMemMonitor();\n    initProfiler(\"view update\");\n    const sliderContainer = document.createElement(\"div\");\n    sliderContainer.style.display = \"flex\";\n    const slider = document.createElement(\"input\");\n    slider.type = \"range\";\n    slider.style.marginBottom = \"10px\";\n    slider.style.marginTop = \"5px\";\n    const text = document.createElement(\"label\");\n    text.textContent = \"mutations : \" + (mutations * 100).toFixed(0) + \"%\";\n    slider.addEventListener(\"change\", (e) => {\n        mutations = Number.parseFloat(e.target.value) / 100;\n        text.textContent = \"mutations : \" + (mutations * 100).toFixed(0) + \"%\";\n    });\n    sliderContainer.appendChild(text);\n    sliderContainer.appendChild(slider);\n    document.body.insertBefore(sliderContainer, document.body.firstChild);\n    const container = document.getElementById(\"app\");\n    render(Main(store), container);\n    function tick() {\n        store.randomUpdate(mutations);\n        startProfile(\"view update\");\n        withNextFrame(requestDirtyCheck)();\n        endProfile(\"view update\");\n        setTimeout(tick, 0);\n    }\n    setTimeout(tick, 0);\n});\n"],"sourceRoot":""}