{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:////home/void/w/ts/ivi/packages/ivi/src/vdom/operations.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/vdom/factories.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/core/shortcuts.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/core/clock.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/core/token.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/core/observable.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/core/box.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/core/error.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/core/noop.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/core/array.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/core/repeatable_task_list.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/dom/shortcuts.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/dom/namespaces.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/vdom/state.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/vdom/context.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/vdom/reconciler.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/vdom/root.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/scheduler/index.ts","webpack:////home/void/w/ts/ivi/packages/ivi-html/src/index.ts","webpack:////home/void/w/ts/ivi-examples/node_modules/perf-monitor/dist/es5/perf-monitor.js","webpack:///./src/init.ts","webpack:///./src/state.ts","webpack:///./src/main.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","createOpType","f","TRACK_BY_KEY","createValueOp","v","createContainerOp","createDOMElementOp","operations_key","k","TrackByKey","items","elementFactory","tag","flags","htmlElementFactory","component","e1","e2","type","p1","p2","statelessComponent","_","_clock","clock","advanceClock","TASK_TOKEN","DIRTY_CHECK_TOKEN","UNMOUNT_TOKEN","_deps","observable","mut","watch","push","saveObservableDependencies","deps","dirtyCheckWatchList","length","box","ERROR_HANDLERS","error","catchError","fn","apply","arguments","e","forEach","h","NOOP","unorderedArrayDeleteByIndex","array","index","last","pop","runRepeatableTasks","tasks","getDescriptor","getOwnPropertyDescriptor","nodeProto","Node","shortcuts_elementProto","Element","doc","document","objectHasOwnProperty","nodeInsertBefore","insertBefore","nodeRemoveChild","removeChild","nodeCloneNode","replaceChild","cloneNode","elementSetAttribute","setAttribute","elementRemoveAttribute","setAttributeNS","removeAttribute","nodeSetTextContent","set","elementSetClassName","htmlElementGetStyle","HTMLElement","svgElementGetStyle","SVGElement","SVG_NAMESPACE","createStateNode","_nextNode","context_n","setContext","_dirtyCheck","parentElement","opState","moveNode","singleChild","state","_update","_unmountWalk","children","u","_unmountRemove","_unmount","_mountText","op","node","createTextNode","_createElement","svg","tagName","createElementNS","createElement","_updateClassName","_updateAttrs","_mountObject","opType","prevState","_mount","Array","_mountFragment","childrenOps","newChildren","nextOp","nodeValue","opStateChildren","prevData1","nextData1","prevData2","nextData2","nextValue","_updateChildrenTrackByKeys","a","b","j","result","aEnd","bEnd","start","outer","pos","updated","aLength","bLength","sources","keyIndex","Map","seq","lis","slice","element","className","_updateStyle","style","bValue","setProperty","removeProperty","matchCount","keys","_updateAttr","prev","next","ROOTS","findRoot","predicate","find","dirtyCheck","root","container","run","_flags","_frameStartTime","_resolvedPromise","Promise","resolve","_microtasks","_mutationEffects","_layoutEffects","_beforeMutations","_afterMutations","withSchedulerTick","inner","runMicrotasks","withNextFrame","time","_handleNextFrame","_handleNextFrameSync","requestNextFrame","task","then","requestAnimationFrame","requestDirtyCheck","render","div","span","table","tbody","td","tr","extendStatics","MonitorWidgetFlags","MonitorMaxSamples","MonitorSamplesResult","min","max","mean","this","MonitorSamples","maxSamples","samples","_i","addSample","each","calc","sum","frameTasks","rafId","__extends","setPrototypeOf","__proto__","__","constructor","MonitorGraphHeight","MonitorGraphWidth","Widget","_this","_sync","sync","_dirty","cssText","invalidate","Error","MonitorWidget","_super","unitName","label","textContent","text","HideMin","minText","appendChild","HideMax","maxText","HideMean","meanText","HideLast","lastText","HideGraph","canvas","width","height","ctx","getContext","scale","RoundValues","toFixed","Math","round","toString","fillStyle","fillRect","perf_monitor_container","CounterWidget","counter","checkInit","body","startFPSMonitor","data","w","fps","update","now","startMemMonitor","undefined","performance","memory","usedJSHeapSize","setTimeout","ProfilerDetails","widget","startTime","profilerInstances","initProfiler","profiler","endProfile","mutations","N","parseQueryString","split","decodeURIComponent","replace","randomQuery","query","elapsed","random","randomQueries","queries","floor","EMPTY_QUERY","_nextId","createDB","id","getTopFiveQueries","db","qs","sort","randomUpdate","entryFormatElapsed","minutes","comps","padStart","window","location","search","substr","parseInt","parseFloat","addEventListener","sliderContainer","display","slider","marginBottom","marginTop","Number","target","firstChild","init","main_state","createState","arrow","Popover","QueryCell","DatabaseList","odb","count","map","Main","dbs","main_container","getElementById","tick"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","/**\n * Operation nodes are using several different shapes to reduce memory consumption, but it is important that we don't\n * use too many different shapes to make sure that call-sites won't switch into megamorphic state. All operations\n * are just aliases to three different shapes: `ValueOp`, `ContainerOp` and `DOMElementOp`.\n */\nimport { EventHandler } from \"../events/event_handler\";\nimport { NodeFlags } from \"./node_flags\";\nimport { ElementProtoDescriptor } from \"./element_proto\";\nimport { ComponentDescriptor } from \"./component\";\nimport { ContextDescriptor, ContextState } from \"./context\";\n\n/**\n * Key is an object that is used by TrackByKey operations to track operations.\n *\n * @typeparam K Key type.\n * @typeparam V Value type.\n */\nexport interface Key<K, V> {\n  /**\n   * Key.\n   */\n  readonly k: K;\n  /**\n   * Value.\n   */\n  readonly v: V;\n}\n\n/**\n * Operation type.\n */\nexport interface OpType {\n  /**\n   * See {@link NodeFlags} for details.\n   */\n  readonly f: NodeFlags;\n  /**\n   * Operation type descriptor.\n   */\n  readonly d:\n  | ComponentDescriptor\n  | ElementProtoDescriptor\n  | ContextDescriptor\n  | string\n  | null;\n}\n\n/**\n * createOpType creates {@link OpType} instances.\n *\n * @param f See {@link NodeFlags} for details.\n * @param d Operation type descriptor.\n * @returns {@link OpType} instance.\n */\nexport const createOpType = (\n  f: NodeFlags,\n  d: ComponentDescriptor | ElementProtoDescriptor | ContextDescriptor | string | null,\n): OpType => ({ f, d });\n\n/**\n * OpType for Events nodes.\n */\nexport const EVENTS = createOpType(NodeFlags.Events, null);\n\n/**\n * OpType for Context state nodes.\n */\nexport const SET_CONTEXT_STATE = createOpType(NodeFlags.Context | NodeFlags.SetContextState, null);\n\n/**\n * OpType for TrackByKey nodes.\n */\nexport const TRACK_BY_KEY = createOpType(NodeFlags.TrackByKey, null);\n\n/**\n * Operation with a value.\n *\n * @typeparam T Operation data type.\n */\nexport interface ValueOp<T = any> {\n  /**\n   * Operation type.\n   */\n  readonly t: OpType;\n  /**\n   * Value.\n   */\n  readonly v: T;\n}\n\n/**\n * Container operation.\n *\n * @typeparam T Operation data type.\n */\nexport interface ContainerOp<T = any, C = any> extends ValueOp<T> {\n  /**\n   * Children.\n   */\n  readonly c: C;\n}\n\n/**\n * DOM Element operation.\n *\n * @typeparam T Operation data type.\n */\nexport interface DOMElementOp<T = any> extends ContainerOp<T | undefined, Op> {\n  /**\n   * Class name.\n   */\n  readonly n: string | undefined;\n}\n\n/**\n * Events operation.\n */\nexport interface EventsOp extends ContainerOp<EventHandler, Op> { }\n\n/**\n * Context operation.\n */\nexport interface ContextOp<T = any> extends ContainerOp<T, Op> { }\n\n/**\n * Set context state operation.\n */\nexport interface SetContextStateOp extends ContainerOp<ContextState, Op> { }\n\n/**\n * TrackByKey operation.\n */\nexport type TrackByKeyOp<K = any, V = any> = ValueOp<Key<K, V>[]>;\n\n/**\n * Component operation.\n */\nexport interface ComponentOp<T = any, C = any> extends ContainerOp<T, C> { }\n\n/**\n * Operation node.\n */\nexport type OpNode =\n  | ValueOp\n  | ContainerOp\n  | DOMElementOp\n  | EventsOp\n  | ContextOp\n  | SetContextStateOp\n  | TrackByKeyOp\n  | ComponentOp;\n\n/**\n * Operation.\n */\nexport type Op = string | number | OpNode | OpArray | null;\n\n/**\n * Recursive operation array.\n */\nexport interface OpArray extends Array<Op> { }\n\n/**\n * createValueOp creates a {@link ValueOp} instance.\n *\n * @typeparam T Operation data type.\n * @param t Operation type.\n * @param v Operation value.\n * @returns {@link ValueOp} instance.\n */\nexport const createValueOp = <T>(t: OpType, v: T): ValueOp<T> => ({ t, v });\n\n/**\n * createContainerOp creates a {@link ContainerOp} instance.\n *\n * @typeparam T Operation data type.\n * @param t Operation type.\n * @param v Operation value.\n * @param c Operation children.\n * @returns {@link ContainerOp} instance.\n */\nexport const createContainerOp = <T, C>(t: OpType, v: T, c: C): ContainerOp<T, C> => ({ t, v, c });\n\n/**\n * createDOMElementOp creates a {@link DOMElementOp} instance.\n *\n * @typeparam T Operation data type.\n * @param t Operation type.\n * @param v Operation value.\n * @param c Operation children.\n * @param n Class name.\n * @returns {@link DOMElementOp} instance.\n */\nexport const createDOMElementOp = <T>(\n  t: OpType,\n  v: T,\n  c: Op,\n  n: string | undefined,\n): DOMElementOp<T> => ({ t, v, c, n });\n\n/**\n * Operation factory for event handlers.\n *\n * @example\n *\n *     render(\n *       Events(onClick(() => { console.log(\"clicked\"); }),\n *         ChildComponent(),\n *       ),\n *       DOMContainer,\n *     );\n *\n * @param v Event handlers.\n * @param c Children operation nodes.\n * @returns Events handler operation.\n */\nexport const Events = (\n  v: EventHandler,\n  c: Op,\n): EventsOp => createContainerOp(EVENTS, v, c);\n\n/**\n * Operation factory for set context state operation.\n *\n * @param v Context state.\n * @param c Children operation nodes.\n * @returns Set context state operation.\n */\nexport const SetContextState = (\n  v: ContextState,\n  c: Op,\n): SetContextStateOp => createContainerOp(SET_CONTEXT_STATE, v, c);\n\n/**\n * key creates a {@link Key} instance.\n *\n * @typeparam K Key type.\n * @typeparam V Value type.\n * @param k Key.\n * @param v Value.\n * @returns {@link Key} instance.\n */\nexport const key = <K, V>(k: K, v: V): Key<K, V> => ({ k, v });\n\n/**\n * Operation factory for track by key nodes.\n *\n * @example\n *\n *     const items = [1, 2, 3];\n *     render(\n *       TrackByKey(items.map((item) => key(item, div(_, _, item))),\n *       DOMContainer,\n *     );\n *\n * @typeparam K Key type.\n * @param items Keyed operations.\n * @returns Track by key operation.\n */\nexport const TrackByKey = process.env.NODE_ENV !== \"production\" ?\n  <T>(items: Key<T, Op>[]) => {\n    const keys = new Set<T>();\n    for (let i = 0; i < items.length; i++) {\n      const { k } = items[i];\n      if (keys.has(k)) {\n        throw new Error(`Invalid key, found duplicated key: ${k}`);\n      }\n      keys.add(k);\n    }\n    return createValueOp(TRACK_BY_KEY, items);\n  } :\n  /* istanbul ignore next */ <T>(items: Key<T, Op>[]) => createValueOp(TRACK_BY_KEY, items);\n","import { checkElement } from \"../debug/element\";\nimport { NodeFlags } from \"./node_flags\";\nimport { Op, DOMElementOp, ComponentOp, createOpType, createDOMElementOp, createContainerOp } from \"./operations\";\nimport { Component } from \"./component\";\n\n/**\n * elementFactory creates a factory for DOM elements.\n *\n * @param tag HTML element tag name.\n * @param flags Node flags.\n * @returns HTML element operation factory.\n */\nexport function elementFactory<T, U>(tag: string, flags: NodeFlags) {\n  const t = createOpType(flags, tag);\n  return process.env.NODE_ENV !== \"production\" ?\n    (n?: string, v?: T, c: Op = null) => {\n      checkElement(tag, v, (flags & NodeFlags.Svg) !== 0);\n      return createDOMElementOp(t, v, c, n);\n    } :\n    /* istanbul ignore next */(n?: string, v?: T, c: Op = null) => createDOMElementOp(t, v, c, n);\n}\n\n/**\n * htmlElementFactory creates a factory for HTML elements.\n *\n * @param tag HTML element tag name.\n * @returns HTML element operation factory.\n */\nexport const htmlElementFactory: <T, U>(tag: string) => (\n  className?: string,\n  attrs?: T,\n  children?: Op,\n) => DOMElementOp<T | undefined> = (tag: string) => elementFactory(tag, NodeFlags.Element);\n\n/**\n * svgElementFactory creates a factory for SVG elements.\n *\n * @param tag SVG element tag name.\n * @returns SVG element operation factory.\n */\nexport const svgElementFactory: <T, U>(tag: string) => (\n  className?: string,\n  attrs?: T,\n  children?: Op,\n) => DOMElementOp<T | undefined> = (tag: string) => elementFactory(tag, NodeFlags.Element | NodeFlags.Svg);\n\n/**\n * `elementProto()` creates a factory that produces elements with predefined attributes.\n *\n * @example\n *\n *     const DivWithIdAttribute = elementProto(div(_, { id: \"predefined-id\" }));\n *\n *     render(\n *       DivWithIdAttribute(\"class-name\", { title: \"Title\" }, \"Hello World\"),\n *       document.getElementById(\"app\")!,\n *     );\n *\n * @param p Element prototype.\n * @returns Factory that produces elements with predefined attributes.\n */\nexport function elementProto<T>(p: DOMElementOp<T>) {\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== \"production\") {\n    if (p.c !== null) {\n      throw new Error(`Invalid OpNode, element prototypes can't have any children`);\n    }\n    checkElement(p.t.d as string, p.v, (p.t.f & NodeFlags.Svg) !== 0);\n  }\n  const t = createOpType(p.t.f | NodeFlags.ElementProto, { n: null, p });\n  return (n?: string, v?: T, c: Op = null) => createDOMElementOp(t, v, c, n);\n}\n\n/**\n * component creates a factory that produces component nodes.\n *\n * @example\n *\n *     const A = component<string>(() => {\n *       let _text;\n *       const click = onClick(() => { console.log(_text); });\n *\n *       return (text) => (\n *         _text = text,\n *         Events(click,\n *           button(_, _, \"Click Me\"),\n *         )\n *       );\n *     });\n *\n * @param c Component function.\n * @returns Factory that produces component nodes.\n */\nexport function component(\n  c: (c: Component) => () => Op,\n): () => ComponentOp<undefined>;\n\n/**\n * component creates a factory that produces component nodes.\n *\n * @example\n *\n *     const A = component<string>(() => {\n *       let _text;\n *       const click = onClick(() => { console.log(_text); });\n *\n *       return (text) => (\n *         _text = text,\n *         Events(click,\n *           button(_, _, \"Click Me\"),\n *         )\n *       );\n *     });\n *\n * @param c Component function.\n * @param e1 `areEqual` function that checks `p1` for equality.\n * @param e2 `areEqual` function that checks `p2` for equality.\n * @returns Factory that produces component nodes.\n */\nexport function component<P1, P2 = undefined>(\n  c: (c: Component) => (p1: P1, p2: P2) => Op,\n  areEqual1?: undefined extends P1 ? undefined : (prev: P1, next: P1) => boolean,\n  areEqual2?: undefined extends P2 ? undefined : (prev: P2, next: P2) => boolean,\n): undefined extends P1 ?\n  (undefined extends P2 ? (p1?: P1, p2?: P2) => ComponentOp<P1, P2> : (p1: P1, p2: P2) => ComponentOp<P1, P2>) :\n  (undefined extends P2 ? (p1?: P1, p2?: P2) => ComponentOp<P1, P2> : (p1: P1, p2: P2) => ComponentOp<P1, P2>);\n\n/**\n * component creates a factory that produces component nodes.\n *\n * @example\n *\n *     const A = component<string>(() => {\n *       let _text;\n *       const click = onClick(() => { console.log(_text); });\n *\n *       return (text) => (\n *         _text = text,\n *         Events(click,\n *           button(_, _, \"Click Me\"),\n *         )\n *       );\n *     });\n *\n * @param c Component function.\n * @param e1 `areEqual` function that checks `p1` for equality.\n * @param e2 `areEqual` function that checks `p2` for equality.\n * @returns Factory that produces component nodes.\n */\nexport function component<P1, P2 = undefined>(\n  c: (c: Component) => (p1: P1, p2: P2) => Op,\n  e1?: (prev: P1, next: P1) => boolean,\n  e2?: (prev: P2, next: P2) => boolean,\n): (p1: P1, p2: P2) => ComponentOp<P1, P2> {\n  const type = createOpType(NodeFlags.Component, { c, e1, e2 });\n  return (p1: P1, p2: P2) => createContainerOp(type, p1, p2);\n}\n\n/**\n * statelessComponent creates an factory that produces stateless components nodes.\n *\n * @example\n *\n *     const A = statelessComponent<string>((text) => div(_, _, text));\n *\n * @param update Update function.\n * @returns Factory that produces stateless component nodes.\n */\nexport function statelessComponent(\n  update: () => Op,\n): () => ComponentOp<undefined>;\n\n/**\n * statelessComponent creates an factory that produces stateless components nodes.\n *\n * @example\n *\n *     const A = statelessComponent<string>((text) => div(_, _, text));\n *\n * @param update Update function.\n * @param areEqual1 `areEqual` function that checks `p1` for equality.\n * @param areEqual1 `areEqual` function that checks `p2` for equality.\n * @returns Factory that produces stateless component nodes.\n */\nexport function statelessComponent<P1, P2 = undefined>(\n  update: (p1: P1, p2: P2) => Op,\n  areEqual1?: undefined extends P1 ? undefined : (prev: P1, next: P1) => boolean,\n  areEqual2?: undefined extends P2 ? undefined : (prev: P2, next: P2) => boolean,\n): undefined extends P1 ?\n  (undefined extends P2 ? (p1?: P1, p2?: P2) => ComponentOp<P1, P2> : (p1: P1, p2: P2) => ComponentOp<P1, P2>) :\n  (undefined extends P2 ? (p1?: P1, p2?: P2) => ComponentOp<P1, P2> : (p1: P1, p2: P2) => ComponentOp<P1, P2>);\n\n/**\n * statelessComponent creates an factory that produces stateless components nodes.\n *\n * @example\n *\n *     const A = statelessComponent<string>((text) => div(_, _, text));\n *\n * @param c Update function.\n * @param e1 `areEqual` function that checks `p1` for equality.\n * @param e2 `areEqual` function that checks `p2` for equality.\n * @returns Factory that produces stateless component nodes.\n */\nexport function statelessComponent<P1, P2 = undefined>(\n  c: (p1: P1, p2: P2) => Op,\n  e1?: undefined extends P1 ? undefined : (prev: P1, next: P1) => boolean,\n  e2?: undefined extends P2 ? undefined : (prev: P2, next: P2) => boolean,\n): (p1: P1, p2: P2) => ComponentOp<P1, P2> {\n  const f = (_: Component) => c;\n  return component(f, e1, e2);\n}\n","/**\n * Shortcut for an `undefined` value.\n */\nexport const _ = void 0;\n","/**\n * Monotonically increasing clock.\n */\nlet _clock = 1;\n\n/**\n * clock returns monotonically increasing clock value.\n *\n * @returns current clock value.\n */\nexport function clock() {\n  return _clock;\n}\n\n/**\n * advanceClock increments clock value.\n */\nexport function advanceClock() {\n  _clock++;\n}\n","export interface TaskToken {\n  readonly $$label?: \"ivi-task-token\";\n}\n\nexport interface DirtyCheckToken {\n  readonly $$label?: \"ivi-dirty-check-token\";\n}\n\nexport interface UnmountToken {\n  readonly $$label?: \"ivi-unmount-token\";\n}\n\n/**\n * Task token.\n */\nexport const TASK_TOKEN: TaskToken = (\n  process.env.NODE_ENV !== \"production\" ? Object.freeze({}) : /* istanbul ignore next */{}\n);\n\n/**\n * Dirty check token.\n */\nexport const DIRTY_CHECK_TOKEN: DirtyCheckToken = (\n  process.env.NODE_ENV !== \"production\" ? Object.freeze({}) : /* istanbul ignore next */{}\n);\n\n/**\n * Unmount token.\n */\nexport const UNMOUNT_TOKEN: UnmountToken = (\n  process.env.NODE_ENV !== \"production\" ? Object.freeze({}) : /* istanbul ignore next */{}\n);\n\n/**\n * Empty object.\n */\nexport const EMPTY_OBJECT = process.env.NODE_ENV !== \"production\" ? Object.freeze({}) : /* istanbul ignore next */{};\n\n/**\n * Empty array.\n */\nexport const EMPTY_ARRAY = process.env.NODE_ENV !== \"production\" ? Object.freeze([]) : /* istanbul ignore next */[];\n","import { clock } from \"./clock\";\nimport { DirtyCheckToken, DIRTY_CHECK_TOKEN } from \"./token\";\n\n/**\n * Coarse-grained observables (directed graph, pull) and dirty checking.\n *\n * IMPLEMENTATION DETAILS:\n *\n * Observable (40b overhead) values are simple objects that store a time (monotonically increasing clock) `t` when\n * they were updated last time and a value `v` . Computed (~212-356b overhead) values and side effects create a\n * directed graph with edges pointing to observables and other computed values. Each time any observable value is\n * modified, dirty checking algorithm goes through all side effects and checks if any of the dependencies were modified\n * and when one of the dependencies is modified it will rerun side effect.\n *\n * Computeds and side effects automatically reset all edges every time they are reevaluated.\n *\n * CAVEATS:\n *\n * - \"memory leaking\" computed values. All glitch-free solutions that pull data in side effects are having the same\n *   issue, previous value is always stored to prevent unnecessary computations when dependencies are changed but the\n *   resulting value is the same. One of the solutions to deal with computeds that can store a lot of outdated data\n *   could be to create a custom garbage collector that will nullify outdated computed values (`lastCheck < clock()`).\n * - Large number of side effects can cause performance problems. Dirty checking algorithm checks all side effects each\n *   time something is updated.\n *\n * TRADEOFFS:\n *\n * vs redux-like selectors (directed graph, pull) (`useSelect()` in ivi < 0.28.0)\n *\n * PROS:\n *\n * - Slightly better performance.\n * - Less verbose API, especially when working with mutable data structures and normalized data.\n * - Stateless components can use context and watch observables/computeds.\n * - Composable API.\n *\n * vs fine-grained observables (undirected graph, push-pull) and autotracking (Vue, MobX)\n *\n * PROS:\n *\n * - Significantly better performance with complex data processing algorithms (especially with map/reduce algorithms).\n * - Significantly less memory consumption.\n *\n * CONS:\n *\n * - Verbose API, all edges are created explicitly with `watch()` function. Autotracking solutions implicitly create\n *   all edges.\n * - Updates trigger more updates than it is necessary.\n * - Dirty checking requires to check all side effects each time something is updated. Push-pull solutions are creating\n *   undirected graphs so that when observable value is updated they can go through the graph and find all side effects\n *   that use this observable value.\n * - Complex use cases that can be easily solved with Vue or MobX require completely different solutions. For example,\n *   when we need to sort a list of items, instead of watching every item, we will need to create a `signal()` that will\n *   be emitted each time when observable value is modified. Use cases like \"highlighting all items that match a list of\n *   rules\" would require creating custom data structures like inverted indexes, ordered maps(rb-tree), etc.\n * - Significantly higher learning curve (requires basic knowledge of data structures and algorithms).\n *\n * @example\n *     // Computed value\n *     const a = observable(1);\n *     const b = observable(2);\n *     const sum = computed(() => watch(a) + watch(b));\n *     const A = statelessComponent(() => div(_, _, watch(sum)()));\n *\n *     // Basic selector with immutable state\n *     const A = component((c) => {\n *       const getValue = selector(() => STATE.value);\n *       return () => div(_, _, watch(getValue)());\n *     });\n *\n *     // Memoized selector with immutable state\n *     const A = component((c) => {\n *       const getValue = selector((prev) => (\n *         prev !== void 0 && prev.a === STATE.a && prev.b === STATE.b ? prev :\n *           { a: STATE.a, b: STATE.b, result: STATE.a + STATE.b };\n *       ));\n *       return () => div(_, _, watch(getValue)());\n *     });\n *\n *     // Composition\n *     const a = observable(1);\n *     const A = component((c) => {\n *       const getValue = memo((i) => computed(() => watch(a) + i));\n *       return (i) => div(_, _, watch(getValue(i))());\n *     });\n */\n\n/**\n * Observable value.\n */\nexport interface Observable<T> {\n  /**\n   * Time.\n   */\n  t: number;\n  /**\n   * Value.\n   */\n  v: T;\n}\n\n/**\n * Infers observable value type.\n */\nexport type ObservableValue<T> = T extends Observable<infer U> ? U : never;\n\n/**\n * List of observable dependencies.\n *\n * First value in an array contains time of the last update.\n */\nexport type WatchList = null | [number, ...Array<Observable<any> | ((token?: DirtyCheckToken, time?: number) => any)>];\n\nlet _deps: WatchList = null;\n\n/**\n * Creates an observable value.\n *\n * @param v Value.\n * @returns {@link Observable} value.\n */\nexport const observable = <T>(v: T): Observable<T> => ({ t: clock(), v });\n\n/**\n * Applies a function to an observable value.\n *\n * @example\n *     const a = observable(1);\n *     apply(a, (v) => v + 1);\n *\n * @param v Observable value.\n * @param fn Function to apply.\n */\nexport function apply<T>(v: Observable<T>, fn: (v: T) => T): void {\n  v.t = clock();\n  v.v = fn(v.v);\n}\n\n/**\n * Assigns a new value to an observable value.\n *\n * @example\n *     const a = observable(1);\n *     assign(a, 2);\n *\n * @param v Observable value.\n * @param n New value.\n */\nexport function assign<T>(v: Observable<T>, n: T): void {\n  v.t = clock();\n  v.v = n;\n}\n\n/**\n * Mutates observable value.\n *\n * @example\n *     const a = observable({ value: 1 });\n *     mut(a).value = 2;\n *\n * @param v Observable value.\n * @returns Stored value.\n */\nexport const mut = <T>(v: Observable<T>): T => (v.t = clock(), v.v);\n\n/**\n * Creates an observable signal.\n *\n * @returns {@link Observable} value.\n */\nexport const signal = (): Observable<null> => observable(null);\n\n/**\n * Emits a signal.\n */\nexport function emit(s: Observable<null>): void {\n  s.t = clock();\n}\n\nlet watchEnabled = 0;\nexport function enableWatch() {\n  watchEnabled++;\n}\n\nexport function disableWatch() {\n  watchEnabled--;\n}\n\n/**\n * watch adds an observable to the list of dependencies.\n *\n * @param v Observable or computed value.\n */\nexport function watch<T extends () => any>(v: T): T;\nexport function watch<T extends Observable<any>>(v: T): ObservableValue<T>;\nexport function watch<T extends Observable<any> | (() => any)>(v: T): any {\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== \"production\") {\n    if (watchEnabled < 1) {\n      throw Error(\"Invalid watch() invocation. watch() should be invoked in a watcher context (components, computeds)\");\n    }\n  }\n  if (process.env.IVI_TARGET !== \"ssr\") {\n    if (_deps === null) {\n      _deps = [clock(), v];\n    } else {\n      _deps.push(v);\n    }\n  }\n  return typeof v === \"function\" ? v : (v as Observable<any>).v;\n}\n\n/**\n * saveObservableDependencies returns a {@link WatchList} and resets current dependencies.\n *\n * @returns Current {@link WatchList}.\n */\nexport function saveObservableDependencies(): WatchList {\n  const deps = _deps;\n  _deps = null;\n  return deps;\n}\n\nexport function restoreObservableDependencies(deps: WatchList): void {\n  _deps = deps;\n}\n\nexport function dirtyCheckWatchList(deps: WatchList): boolean {\n  const t = deps![0];\n  for (let i = 1; i < deps!.length; i++) {\n    const v = deps![i];\n    if (typeof v === \"object\") {\n      if (v.t > t) {\n        return true;\n      }\n    } else {\n      return (v as (token?: DirtyCheckToken, time?: number) => any)(DIRTY_CHECK_TOKEN, t);\n    }\n  }\n  return false;\n}\n\n/**\n * computed creates a computed value.\n *\n * @param fn Computed function.\n * @returns Computed value.\n */\nexport function computed<T>(fn: (prev?: T) => T): () => T {\n  let lastCheck = 0;\n  let lastUpdate = 0;\n  let value: T | undefined = void 0;\n  let deps: WatchList = null;\n  return ((token?: DirtyCheckToken, time?: number) => {\n    const now = clock();\n    if (lastCheck < now) {\n      lastCheck = now;\n      if (deps === null || dirtyCheckWatchList(deps) === true) {\n        const prevDeps = saveObservableDependencies();\n        /* istanbul ignore else */\n        if (process.env.NODE_ENV !== \"production\") {\n          enableWatch();\n        }\n        const nextValue = fn(value);\n        /* istanbul ignore else */\n        if (process.env.NODE_ENV !== \"production\") {\n          disableWatch();\n        }\n        deps = saveObservableDependencies();\n        restoreObservableDependencies(prevDeps);\n        if (value !== nextValue) {\n          value = nextValue;\n          lastUpdate = now;\n        }\n      }\n    }\n    return (token === DIRTY_CHECK_TOKEN) ? lastUpdate > time! : value;\n  }) as () => T;\n}\n\n/**\n * selector creates a dirty checking selector.\n *\n * @param fn Computed function.\n * @returns Computed value.\n */\nexport function selector<T>(fn: (prev?: T) => T): () => T {\n  let lastCheck = 0;\n  let lastUpdate = 0;\n  let value: T | undefined = void 0;\n  return ((token?: DirtyCheckToken, time?: number) => {\n    const now = clock();\n    if (lastCheck < now) {\n      lastCheck = now;\n      const nextValue = fn(value);\n      if (value !== nextValue) {\n        value = nextValue;\n        lastUpdate = now;\n      }\n    }\n    return (token === DIRTY_CHECK_TOKEN) ? lastUpdate > time! : value;\n  }) as () => T;\n}\n","/**\n * Boxed value.\n *\n * @typeparam T Value type.\n */\nexport interface Box<T> {\n  v: T;\n}\n\n/**\n * box creates a boxed value.\n *\n * @typeparam T Value type.\n * @param v Value.\n * @returns Boxed value.\n */\nexport const box = <T>(v: T) => ({ v });\n","const ERROR_HANDLERS: Array<(e: any) => void> = [];\nlet error = false;\n\n/**\n * addErrorHandler adds an error handler for errors catched by functions decorated with `catchError()`.\n *\n * @param handler error handler.\n */\nexport function addErrorHandler(handler: (e: any) => void): void {\n  ERROR_HANDLERS.push(handler);\n}\n\n/**\n * catchError is a decorator that catches exceptions and invokes error handlers registered with `addErrorHandler()`.\n *\n * @noinline\n * @throws\n * @param fn - Function to decorate\n * @returns function decorated with a catchError\n */\nexport function catchError<T>(fn: (...args: any[]) => T): (...args: any[]) => T;\nexport function catchError<T>(fn: Function): (...args: any[]) => T {\n  return function () {\n    if (!error) {\n      try {\n        return fn.apply(void 0, arguments);\n      } catch (e) {\n        error = true;\n        ERROR_HANDLERS.forEach((h) => { h(e); });\n        throw e;\n      }\n    }\n  };\n}\n","/**\n * NOOP function.\n */\nexport const NOOP = () => { /**/ };\n\n/**\n * NOOP_FALSE function always returns `false` value.\n *\n * @returns `false` value.\n */\nexport const NOOP_FALSE = () => false;\n\n/**\n * NOOP_TRUE function always returns `true` value.\n *\n * @returns `true` value.\n */\nexport const NOOP_TRUE = () => true;\n","/**\n * append pushes item to an array and automatically creates a new array when it doesn't exist.\n *\n * @typeparam T Item type.\n * @param array Array.\n * @param item Item to append.\n * @returns Array.\n */\nexport const append = <T>(array: T[] | null, item: T) => array === null ? [item] : (array.push(item), array);\n\n/**\n * unorderedArrayDeleteByIndex deletes item from an array with O(1) complexity.\n *\n * It swaps item at `index` position with the last item and removes the last one.\n *\n * @typeparam T Item type.\n * @param array Array.\n * @param index Index of an item to delete.\n */\nexport function unorderedArrayDeleteByIndex<T>(array: T[], index: number): void {\n  const length = array.length - 1;\n  const last = array.pop();\n  if (index !== length) {\n    array[index] = last!;\n  }\n}\n\n/**\n * unorderedArrayDelete deletes item from an array with O(1) complexity.\n *\n * It swaps item at `index` position with the last item and deletes the last one.\n *\n * @typeparam T Item type.\n * @param array Array.\n * @param item Item to delete.\n */\nexport function unorderedArrayDelete<T>(array: T[], item: T): void {\n  const index = array.indexOf(item);\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== \"production\") {\n    if (index === -1) {\n      throw new Error(`Failed to delete an item from an array, item doesn't exist in the array`);\n    }\n  }\n  unorderedArrayDeleteByIndex(array, index);\n}\n\n/**\n * Finds index for insert in an ordered array.\n *\n * @example\n *\n *     const a = [1, 3, 4];\n *     a.splice(orderedArrayFindIndexForInsert(a, (a, b) => a - b, 2), 0, 2);\n *\n * @param array Ordered array.\n * @param cmp Comparator function.\n * @param value Value.\n * @returns Index for insert.\n */\nexport function orderedArrayFindIndexForInsert<T>(array: T[], cmp: (a: T, b: T) => number, value: T): number {\n  let low = 0;\n  let high = array.length;\n  let mid;\n  let c;\n\n  while (low < high) {\n    mid = (low + high) >>> 1;\n    c = cmp(array[mid], value);\n    if (c < 0) {\n      low = mid + 1;\n    } else if (c > 0) {\n      high = mid;\n    } else {\n      return mid + 1; // one less item to shift\n    }\n  }\n  return low;\n}\n","import { unorderedArrayDeleteByIndex } from \"./array\";\n\n/**\n * RepeatableTaskList is a data structure for tasks that will be repeated until they return `true` value.\n */\nexport type RepeatableTaskList = Array<() => boolean | void>;\n\n/**\n * runRepeatableTasks runs repeatable tasks.\n *\n * @param tasks Repeatable tasks.\n */\nexport function runRepeatableTasks(tasks: RepeatableTaskList): void {\n  for (let i = 0; i < tasks.length; ++i) {\n    if (tasks[i]() === true) {\n      unorderedArrayDeleteByIndex(tasks, i--);\n    }\n  }\n}\n","/**\n * Shortcuts for DOM methods and properties are used to reduce megamorphic callsites in the codebase.\n *\n * In many synthetic microbenchmarks it is most likely will be slower, unless synthetic benchmark is implemented with\n * many different html/svg elements. But it is definitely should make it faster in complex real applications.\n *\n * Since Chrome 74, issue with native accessors is finally fixed: https://bugs.chromium.org/p/v8/issues/detail?id=8820\n */\n\n/**\n * `Object.getOwnPropertyDescriptor(o, p)`\n *\n * @param o Object.\n * @param p Property name.\n * @returns Property Descriptor.\n */\nconst getDescriptor = (o: any, p: string | number | symbol) => Object.getOwnPropertyDescriptor(o, p);\n\nconst nodeProto = process.env.IVI_TARGET === \"ssr\" ? void 0 : Node.prototype;\nconst elementProto = process.env.IVI_TARGET === \"ssr\" ? void 0 : Element.prototype;\n\n/**\n * Shortcut for a `Document`.\n */\nexport const doc = (process.env.IVI_TARGET === \"ssr\" ? void 0 : document) as Document;\n\n/**\n * Shortcut for an `Object.prototype.hasOwnProperty`.\n */\nexport const objectHasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Shortcut for a `Node.prototype.insertBefore`.\n */\nexport const nodeInsertBefore = process.env.IVI_TARGET === \"ssr\" ? void 0 : nodeProto!.insertBefore;\n\n/**\n * Shortcut for a `Node.prototype.removeChild`.\n */\nexport const nodeRemoveChild = process.env.IVI_TARGET === \"ssr\" ? void 0 : nodeProto!.removeChild;\n\n/**\n * Shortcut for a `Node.prototype.replaceChild`.\n */\nexport const nodeReplaceChild = process.env.IVI_TARGET === \"ssr\" ? void 0 : nodeProto!.replaceChild;\n\n/**\n * Shortcut for a `Node.prototype.cloneNode`.\n */\nexport const nodeCloneNode = process.env.IVI_TARGET === \"ssr\" ? void 0 : nodeProto!.cloneNode;\n\n/**\n * Shortcut for an `Element.prototype.setAttribute`.\n */\nexport const elementSetAttribute = process.env.IVI_TARGET === \"ssr\" ? void 0 : elementProto!.setAttribute;\n\n/**\n * Shortcut for an `Element.prototype.setAttributeNS`.\n */\nexport const elementSetAttributeNS = process.env.IVI_TARGET === \"ssr\" ? void 0 : elementProto!.setAttributeNS;\n\n/**\n * Shortcut for an `Element.prototype.removeAttribute`.\n */\nexport const elementRemoveAttribute = process.env.IVI_TARGET === \"ssr\" ? void 0 : elementProto!.removeAttribute;\n\n/**\n * Shortcut for a `Node.textContent = value`.\n */\nexport const nodeSetTextContent = (\n  process.env.IVI_TARGET === \"ssr\" ? void 0 :\n    getDescriptor(nodeProto, \"textContent\")!.set\n);\n\n/**\n * Shortcut for an `Element.className = value`.\n */\nexport const elementSetClassName = (\n  process.env.IVI_TARGET === \"ssr\" ? void 0 :\n    getDescriptor(elementProto, \"className\")!.set\n);\n\n/**\n * Shortcut for a `HTMLElement.style`.\n */\nexport const htmlElementGetStyle = (\n  process.env.IVI_TARGET === \"ssr\" ? void 0 :\n    getDescriptor(HTMLElement.prototype, \"style\")!.get\n);\n\n/**\n * Shortcut for a `SVGElement.style`.\n */\nexport const svgElementGetStyle = (\n  process.env.IVI_TARGET === \"ssr\" ? void 0 :\n    getDescriptor(SVGElement.prototype, \"style\")!.get\n);\n","export const SVG_NAMESPACE = \"http://www.w3.org/2000/svg\";\nexport const XLINK_NAMESPACE = \"http://www.w3.org/1999/xlink\";\nexport const XML_NAMESPACE = \"http://www.w3.org/XML/1998/namespace\";\n","import { NodeFlags } from \"./node_flags\";\nimport { Op } from \"./operations\";\n\n/**\n * Operation state.\n *\n * @typeparam T Internal state type.\n */\nexport interface OpState<T = any> {\n  /**\n   * Operation.\n   */\n  o: Op;\n  /**\n   * See {@link NodeFlags} for details.\n   */\n  f: NodeFlags;\n  /**\n   * State for children operations.\n   */\n  c: OpState | Array<OpState | null> | null;\n  /**\n   * Current state.\n   */\n  s: T;\n}\n\n/**\n * createStateNode creates a {@link StateNode} instance.\n *\n * @param op Operation.\n * @returns {@link StateNode} instance.\n */\nexport const createStateNode = (o: Op): OpState => (\n  { f: 0, o, c: null, s: null }\n);\n","import { Observable, observable, watch } from \"../core\";\nimport { createOpType, createContainerOp, OpType, ContextOp, Op } from \"./operations\";\nimport { NodeFlags } from \"./node_flags\";\n\n/**\n * Context descriptor.\n */\nexport interface ContextDescriptor<T = any> {\n  /**\n   * Retrieves context value.\n   */\n  get(): T;\n  /**\n   * Creates a context operation.\n   */\n  set(value: T, children: Op): ContextOp<T>;\n}\n\n/**\n * Context state.\n */\nexport interface ContextState<T = any> {\n  /**\n   * Next state.\n   */\n  readonly n: ContextState | null;\n  /**\n   * Descriptor.\n   */\n  readonly d: ContextDescriptor<T>;\n  /**\n   * Context value.\n   */\n  readonly v: Observable<T>;\n}\n\n/**\n * Current context.\n */\nlet n: ContextState | null = null;\n\n/**\n * Used for detecting invalid `ContextDescriptor()` invocations in DEBUG mode.\n */\nlet contextEnabled = false;\n\n/**\n * Enable checking for invalid `context()` invocations in DEBUG mode.\n */\nexport function enableContext() {\n  contextEnabled = true;\n}\n\n/**\n * Disable checking for invalid `context()` invocations in DEBUG mode.\n */\nexport function disableContext() {\n  contextEnabled = false;\n}\n\n/**\n * Reset current context.\n */\nexport function resetContext() {\n  n = null;\n}\n\n/**\n * pushContext creates a new context state and pushes it to the context stack.\n *\n * @param d Context descriptor.\n * @param v Context value.\n * @returns New {@link ContextState}.\n */\nexport function pushContext<T = any>(d: ContextDescriptor<T>, v: T): ContextState<T> {\n  return n = { n, d, v: observable(v) };\n}\n\n/**\n * getContext retrieves current context.\n *\n * @returns current context.\n */\nexport function getContext(): ContextState | null {\n  return n;\n}\n\n/**\n * setContext assigns current context.\n *\n * Should be executed before going deeper into context node.\n *\n * @param c Current context.\n */\nexport function setContext(c: ContextState | null): ContextState | null {\n  return n = c;\n}\n\n/**\n * contextValue creates a context descriptor.\n *\n * @example\n *\n *     const { set: StoreContext, get: getStore } = contextValue<Store>();\n *     const Component = component((c) => {\n *       const getValue = useSelect(c, () => getStore().value);\n *       return () => getValue();\n *     });\n *     render(\n *       StoreContext(store,\n *         Component(),\n *       ),\n *       container,\n *     );\n *\n * @returns {@link ContextDescriptor}\n */\nexport function contextValue<T = any>(): ContextDescriptor<T> {\n  let type: OpType;\n  const d = {\n    get: (): T | void => {\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== \"production\") {\n        if (!contextEnabled) {\n          throw Error(\"Invalid context invocation\");\n        }\n      }\n\n      let next = n;\n      while (next !== null) {\n        if (next.d === d) {\n          return watch(next.v);\n        }\n        next = next.n;\n      }\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== \"production\") {\n        throw Error(\"Unable to find context value\");\n      }\n    },\n    set: (v: T, c: Op) => createContainerOp(type, v, c),\n  };\n  type = createOpType(NodeFlags.Context, d as ContextDescriptor<T>);\n  return d as ContextDescriptor<T>;\n}\n","/**\n * If you think that some code in this module is weird, you aren't alone :) There are many code fragments in this module\n * that would be considered as a \"bad practice\" by the community, in most cases it is implemented this way because every\n * function in this module is on a hot path. It is better to overoptimize some small module, instead of pushing\n * performance issues into user space.\n */\nimport {\n  UNMOUNT_TOKEN, dirtyCheckWatchList, saveObservableDependencies, assign, enableWatch, disableWatch,\n} from \"../core\";\nimport {\n  doc, objectHasOwnProperty,\n  nodeInsertBefore, nodeRemoveChild, elementSetAttribute, nodeCloneNode, nodeSetTextContent, elementRemoveAttribute,\n  elementSetClassName, htmlElementGetStyle, svgElementGetStyle,\n} from \"../dom/shortcuts\";\nimport { SVG_NAMESPACE } from \"../dom/namespaces\";\nimport { CSSStyleProps } from \"../dom/style\";\nimport { NodeFlags } from \"./node_flags\";\nimport { AttributeDirective } from \"./attribute_directive\";\nimport { OpNode, DOMElementOp, EventsOp, ContextOp, TrackByKeyOp, ComponentOp, OpArray, Key, Op } from \"./operations\";\nimport { OpState, createStateNode } from \"./state\";\nimport { ElementProtoDescriptor } from \"./element_proto\";\nimport { ComponentDescriptor, ComponentState } from \"./component\";\nimport { setContext, pushContext, ContextDescriptor, ContextState } from \"./context\";\n\n/**\n * Simple workaround that efficiently solves a lot of issues with fragments, nested `TrackByKey` ops and holes\n * (`null` ops).\n *\n * Reconciler always goes through the tree from right to left and updates `_nextNode` value when it goes through nodes\n * associated with DOM nodes, so when we need to insert a new DOM node, we can just take it from this variable instead\n * of recursively searching for a next DOM node.\n */\nlet _nextNode!: Node | null;\n\nexport function _resetState(): void {\n  _nextNode = null;\n}\n\n/**\n * VisitNodesDirective controls the traversal algorithm.\n */\nexport const enum VisitNodesDirective {\n  /**\n   * Continue traversing the tree.\n   */\n  Continue = 0,\n  /**\n   * Stops immediately.\n   */\n  StopImmediate = 1,\n  /**\n   * Stops traversing through children nodes.\n   */\n  Stop = 1 << 1,\n}\n\n/**\n * visitNodes traverses the operation state tree and invokes `visitor` function for each state node.\n *\n * @param opState State node.\n * @param visitor Visitor function.\n * @returns {@link VisitNodesFlags}\n */\nexport function visitNodes(opState: OpState, visitor: (opState: OpState) => VisitNodesDirective): VisitNodesDirective;\nexport function visitNodes(\n  opState: OpState | null,\n  visitor: (opState: OpState) => VisitNodesDirective,\n): VisitNodesDirective {\n  let i = visitor(opState!);\n  if (i !== VisitNodesDirective.Continue) {\n    return (i & VisitNodesDirective.StopImmediate);\n  }\n\n  const { f, c } = opState!;\n  if ((f & (NodeFlags.Fragment | NodeFlags.TrackByKey)) !== 0) {\n    for (i = 0; i < (c as Array<OpState | null>).length; i++) {\n      if (\n        (opState = (c as Array<OpState | null>)[i]) !== null &&\n        (visitNodes(opState, visitor) & VisitNodesDirective.StopImmediate) !== 0\n      ) {\n        return VisitNodesDirective.StopImmediate;\n      }\n    }\n  } else if (c !== null) {\n    return visitNodes(c as OpState, visitor);\n  }\n  return VisitNodesDirective.Continue;\n}\n\n/**\n * getDOMNode retrieves closest DOM node from the {@link OpState} instance.\n *\n * @param opState State node.\n * @returns DOM node.\n */\nexport function getDOMNode(opState: OpState): Node | null;\nexport function getDOMNode(opState: OpState | Array<OpState | null> | null): Node | null {\n  let i = (opState as OpState).f;\n  let c: OpState | null;\n  if ((i & (NodeFlags.Element | NodeFlags.Text)) === 0) {\n    opState = (opState as OpState).c;\n    if ((i & (NodeFlags.Fragment | NodeFlags.TrackByKey)) !== 0) {\n      for (i = 0; i < (opState as Array<OpState | null>).length; i++) {\n        if ((c = (opState as Array<OpState | null>)[i]) !== null) {\n          return getDOMNode(c);\n        }\n      }\n      return null;\n    }\n    return (opState === null) ? null : getDOMNode(opState as OpState);\n  }\n  return (opState as OpState).s as Node;\n}\n\nexport function _dirtyCheck(\n  parentElement: Element,\n  opState: OpState,\n  moveNode: boolean,\n  singleChild: boolean,\n): void {\n  const flags = opState.f;\n  const c = opState.c;\n  let state;\n  let i;\n  let r;\n\n  if ((flags & (NodeFlags.Element | NodeFlags.Text)) !== 0) {\n    state = opState.s as Node;\n    if (moveNode === true) {\n      nodeInsertBefore!.call(parentElement, state, _nextNode);\n    }\n    if (c !== null) {\n      _nextNode = null;\n      _dirtyCheck(state as Element, c as OpState, false, true);\n    }\n    _nextNode = state;\n  } else if ((flags & NodeFlags.Component) !== 0) {\n    state = opState.s as ComponentState;\n    if (\n      ((flags & NodeFlags.Dirty) !== 0) ||\n      (state.d !== null && dirtyCheckWatchList(state.d) === true)\n    ) {\n      r = opState.o as ComponentOp;\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== \"production\") {\n        enableWatch();\n      }\n      r = state.r!(r.v, r.c);\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== \"production\") {\n        disableWatch();\n      }\n      state.d = saveObservableDependencies();\n      opState.c = _update(\n        parentElement,\n        c as OpState | null,\n        r,\n        moveNode,\n        singleChild,\n      );\n    } else if (c !== null) {\n      _dirtyCheck(parentElement, c as OpState, moveNode, singleChild);\n    }\n  } else if ((flags & (NodeFlags.Fragment | NodeFlags.TrackByKey)) !== 0) {\n    i = (c as Array<OpState | null>).length;\n    while (i > 0) {\n      if ((state = (c as Array<OpState | null>)[--i]) !== null) {\n        _dirtyCheck(parentElement, state, moveNode, false);\n      }\n    }\n  } else if ((flags & NodeFlags.Events) !== 0) {\n    _dirtyCheck(parentElement, c as OpState, moveNode, singleChild);\n  } else { // ((f & NodeFlags.Context) !== 0)\n    state = setContext(opState.s);\n    _dirtyCheck(parentElement, c as OpState, moveNode, singleChild);\n    setContext(state);\n  }\n}\n\nfunction _unmountWalk(opState: OpState): void {\n  const flags = opState.f;\n  let children;\n  let i;\n  let v;\n\n  if ((children = opState.c) !== null) {\n    if ((flags & (NodeFlags.Fragment | NodeFlags.TrackByKey)) !== 0) {\n      for (i = 0; i < (children as Array<OpState | null>).length; i++) {\n        if ((v = (children as Array<OpState | null>)[i]) !== null) {\n          _unmountWalk(v);\n        }\n      }\n    } else {\n      _unmountWalk(children as OpState);\n    }\n  }\n\n  if ((flags & NodeFlags.Component) !== 0) {\n    if ((v = (opState.s as ComponentState).u) !== null) {\n      if (typeof v === \"function\") {\n        v(UNMOUNT_TOKEN);\n      } else {\n        for (i = 0; i < v.length; i++) {\n          v[i](UNMOUNT_TOKEN);\n        }\n      }\n    }\n  }\n}\n\nfunction _unmountRemove(parentElement: Element, opState: OpState, singleChild: boolean): void;\nfunction _unmountRemove(\n  parentElement: Element,\n  opState: OpState | Array<OpState | null> | null,\n  singleChild: boolean,\n): void {\n  let i = (opState as OpState).f;\n  let c;\n\n  if ((i & (NodeFlags.Element | NodeFlags.Text)) !== 0) {\n    nodeRemoveChild!.call(parentElement, (opState as OpState).s as Node);\n  } else {\n    opState = (opState as OpState).c;\n    if ((i & (NodeFlags.TrackByKey | NodeFlags.Fragment)) !== 0) {\n      if (singleChild === true) {\n        nodeSetTextContent!.call(parentElement, \"\");\n      } else {\n        for (i = 0; i < (opState as Array<OpState | null>).length; ++i) {\n          if ((c = (opState as Array<OpState | null>)[i]) !== null) {\n            _unmountRemove(parentElement, c, false);\n          }\n        }\n      }\n    } else if (opState !== null) {\n      _unmountRemove(parentElement, opState as OpState, singleChild);\n    }\n  }\n}\n\nexport function _unmount(parentElement: Element, opState: OpState, singleChild: boolean): void {\n  _unmountRemove(parentElement, opState, singleChild);\n  _unmountWalk(opState);\n}\n\nfunction _mountText(\n  parentElement: Element,\n  opState: OpState,\n  op: string | number,\n) {\n  const node = doc.createTextNode(op as string);\n  nodeInsertBefore!.call(parentElement, node, _nextNode);\n  _nextNode = node;\n  opState.s = node;\n  opState.f = NodeFlags.Text;\n}\n\nfunction _createElement(node: Element | undefined, op: DOMElementOp): Element {\n  const { t, v, n } = op;\n  const svg = (t.f & NodeFlags.Svg) !== 0;\n  if (node === void 0) {\n    const tagName = t.d as string;\n    node = svg ?\n      doc.createElementNS(SVG_NAMESPACE, tagName) :\n      doc.createElement(tagName);\n  }\n\n  if (n) {\n    _updateClassName(node, n, svg);\n  }\n\n  if (v !== void 0) {\n    _updateAttrs(node, void 0, v, svg);\n  }\n\n  return node;\n}\n\nfunction _mountObject(\n  parentElement: Element,\n  opState: OpState,\n  op: OpNode,\n): void {\n  const opType = op.t; // polymorphic callsite\n  const flags = opType.f;\n  let prevState;\n  let value;\n  let node;\n  let i;\n\n  if ((flags & NodeFlags.Component) !== 0) {\n    opState.s = prevState = { r: null, d: null, u: null } as ComponentState;\n    // Reusing value variable.\n    prevState.r = value = (opType.d as ComponentDescriptor).c(opState);\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== \"production\") {\n      enableWatch();\n    }\n    node = value((op as ComponentOp).v, (op as ComponentOp).c);\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== \"production\") {\n      disableWatch();\n    }\n    prevState.d = saveObservableDependencies();\n    opState.c = _mount(parentElement, node);\n    opState.f |= flags;\n  } else {\n    if ((flags & NodeFlags.Element) !== 0) {\n      value = opType.d;\n      if ((flags & NodeFlags.ElementProto) !== 0) {\n        node = (value as ElementProtoDescriptor).n as Element;\n        if (node === null) {\n          (value as ElementProtoDescriptor).n = node = _createElement(\n            void 0,\n            (value as ElementProtoDescriptor).p,\n          );\n        }\n        node = nodeCloneNode!.call(node, false) as Element;\n      }\n      opState.s = node = _createElement(node, op as DOMElementOp);\n\n      prevState = _nextNode;\n      if ((value = (op as DOMElementOp).c) !== null) {\n        _nextNode = null;\n        opState.c = _mount(node, value);\n      }\n      _nextNode = node;\n      nodeInsertBefore!.call(parentElement, node, prevState);\n    } else if ((flags & (NodeFlags.Events | NodeFlags.Context)) !== 0) {\n      if ((flags & NodeFlags.Context) !== 0) {\n        opState.s = prevState = ((flags & NodeFlags.SetContextState) !== 0) ?\n          setContext((op as ContextOp).v) :\n          pushContext(opType.d as ContextDescriptor, (op as ContextOp).v);\n        opState.c = _mount(parentElement, (op as ContextOp).c);\n        setContext(prevState);\n      } else {\n        opState.c = _mount(parentElement, (op as EventsOp).c);\n      }\n    } else { // ((opFlags & NodeFlags.TrackByKey) !== 0)\n      node = (op as TrackByKeyOp).v;\n      i = node.length;\n      opState.c = value = Array(i);\n      while (i > 0) {\n        value[--i] = _mount(parentElement, node[i].v);\n      }\n    }\n    opState.f = flags;\n  }\n}\n\nfunction _mountFragment(\n  parentElement: Element,\n  opState: OpState,\n  childrenOps: OpArray,\n): void {\n  let i = childrenOps.length;\n  const newChildren = Array(i);\n  while (i > 0) {\n    newChildren[--i] = _mount(parentElement, childrenOps[i]);\n  }\n  opState.c = newChildren;\n  opState.f = NodeFlags.Fragment;\n}\n\nexport function _mount(\n  parentElement: Element,\n  op: Op,\n): OpState | null {\n  if (op !== null) {\n    const opState = createStateNode(op);\n    if (typeof op === \"object\") {\n      if (op instanceof Array) {\n        _mountFragment(parentElement, opState, op);\n      } else {\n        _mountObject(parentElement, opState, op);\n      }\n    } else {\n      _mountText(parentElement, opState, op);\n    }\n    return opState;\n  }\n  return null;\n}\n\n/**\n * _update updates a stateNode with a next operation.\n *\n * @param parentElement Parent DOM Element.\n * @param opState Operation state.\n * @param nextOp Next operation.\n * @param moveNode DOM Element should be moved.\n * @param singleChild Parent DOM Element contains a single child.\n * @returns OpNode state.\n */\nexport function _update(\n  parentElement: Element,\n  opState: OpState | null,\n  nextOp: Op,\n  moveNode: boolean,\n  singleChild: boolean,\n): OpState | null {\n  if (nextOp === null) {\n    if (opState !== null) {\n      _unmount(parentElement, opState, singleChild);\n    }\n    return null;\n  }\n  if (opState === null) {\n    return _mount(parentElement, nextOp);\n  }\n  const { f, o, s } = opState;\n\n  if ((f & NodeFlags.Text) !== 0) {\n    if (typeof nextOp !== \"object\") {\n      // Reassign to reduce memory consumption even if nextOp is strictly equal to the prev op.\n      opState.o = nextOp;\n      if (o !== nextOp) {\n        (s as Node).nodeValue = nextOp as string;\n      }\n      if (moveNode === true) {\n        nodeInsertBefore!.call(parentElement, s as Node, _nextNode);\n      }\n      _nextNode = s as Node;\n    } else {\n      nodeRemoveChild!.call(parentElement, s as Node);\n      return _mount(parentElement, nextOp);\n    }\n  } else {\n    // Here we don't need to reassign nextOp because op should always be an object, and strict equality will guarantee\n    // that this object is occupying the same memory region.\n    if (o === nextOp) {\n      _dirtyCheck(parentElement, opState, moveNode, singleChild);\n      return opState;\n    }\n    if (\n      ((f & NodeFlags.Fragment) !== 0 ?\n        !(nextOp instanceof Array) :\n        (\n          nextOp instanceof Array ||\n          (o as OpNode).t !== (nextOp as OpNode).t // polymorphic callsites\n        )\n      )\n    ) {\n      _unmount(parentElement, opState, singleChild);\n      return _mount(parentElement, nextOp);\n    }\n    opState.o = nextOp;\n    const opStateChildren = opState.c;\n    let prevData1;\n    let nextData1;\n    let prevData2;\n    let nextData2;\n    let nextValue;\n    let i;\n\n    if ((f & NodeFlags.Component) !== 0) {\n      prevData1 = (o as ComponentOp).v;\n      prevData2 = (o as ComponentOp).c;\n      nextData1 = (nextOp as ComponentOp).v;\n      nextData2 = (nextOp as ComponentOp).c;\n      nextValue = (nextOp as ComponentOp).t.d as ComponentDescriptor;\n      // Prioritize checking 2nd property as it is most likely will be used to pass children nodes or custom render\n      // function, so it won't have any complex `areEqual` checking.\n      if (\n        (\n          (prevData2 !== nextData2) &&\n          (nextValue.e2 === void 0 || nextValue.e2(prevData2, nextData2) !== true)\n        ) || (\n          (prevData1 !== nextData1) &&\n          (nextValue.e1 === void 0 || nextValue.e1(prevData1, nextData1) !== true)\n        )\n      ) {\n        /* istanbul ignore else */\n        if (process.env.NODE_ENV !== \"production\") {\n          enableWatch();\n        }\n        nextData1 = (s as ComponentState).r!(nextData1, nextData2);\n        /* istanbul ignore else */\n        if (process.env.NODE_ENV !== \"production\") {\n          disableWatch();\n        }\n        (s as ComponentState).d = saveObservableDependencies();\n\n        opState.c = _update(\n          parentElement,\n          opStateChildren as OpState,\n          nextData1,\n          moveNode,\n          singleChild,\n        );\n      } else {\n        _dirtyCheck(parentElement, opState, moveNode, singleChild);\n      }\n    } else {\n      if ((f & NodeFlags.Element) !== 0) {\n        i = (f & NodeFlags.Svg) !== 0;\n\n        if ((o as DOMElementOp).n !== (nextValue = (nextOp as DOMElementOp).n)) {\n          if (nextValue === void 0) {\n            nextValue = \"\";\n          }\n          _updateClassName(s as Element, nextValue, i);\n        }\n\n        if ((o as DOMElementOp).v !== (nextValue = (nextOp as DOMElementOp).v)) {\n          _updateAttrs(s as Element, (o as DOMElementOp).v, nextValue, i);\n        }\n\n        if (moveNode === true) {\n          nodeInsertBefore!.call(parentElement, s as Element, _nextNode);\n        }\n\n        _nextNode = null;\n        opState.c = _update(s as Element, opStateChildren as OpState, (nextOp as DOMElementOp).c, false, true);\n        _nextNode = s as Node;\n      } else if ((f & (NodeFlags.Fragment | NodeFlags.TrackByKey)) !== 0) {\n        if ((f & NodeFlags.Fragment) !== 0) {\n          i = (nextOp as OpArray).length;\n          if (i === 0) {\n            _unmount(parentElement, opState, singleChild);\n          } else {\n            prevData1 = (opStateChildren as Array<OpState | null>).length;\n            if (i !== prevData1) {\n              opState.c = nextValue = Array(i);\n              while (prevData1 > i) {\n                nextData1 = (opStateChildren as Array<OpState | null>)[--prevData1];\n                if (nextData1 !== null) {\n                  _unmount(parentElement, nextData1, false);\n                }\n              }\n              while (i > prevData1) {\n                nextValue[--i] = _mount(parentElement, (nextOp as OpArray)[i]);\n              }\n            } else {\n              nextValue = (opStateChildren as Array<OpState | null>);\n            }\n            while (i > 0) {\n              nextValue[--i] = _update(\n                parentElement,\n                (opStateChildren as Array<OpState | null>)[i],\n                (nextOp as OpArray)[i],\n                moveNode,\n                false,\n              );\n            }\n          }\n        } else {\n          _updateChildrenTrackByKeys(\n            parentElement,\n            opState,\n            (o as TrackByKeyOp).v,\n            (nextOp as TrackByKeyOp).v,\n            moveNode,\n            singleChild,\n          );\n        }\n      } else if ((f & NodeFlags.Events) !== 0) {\n        opState.c = _update(\n          parentElement,\n          opStateChildren as OpState,\n          (nextOp as EventsOp).c,\n          moveNode,\n          singleChild,\n        );\n      } else { // if ((flags & NodeFlags.Context) !== 0) {\n        nextData1 = (nextOp as ContextOp).v;\n        if ((f & NodeFlags.SetContextState) !== 0) {\n          opState.s = nextData1;\n        } else {\n          nextValue = (s as ContextState).v;\n          if (nextValue.v !== nextData1) {\n            assign(nextValue, nextData1);\n          }\n        }\n        nextValue = setContext(opState.s);\n        opState.c = _update(\n          parentElement,\n          opStateChildren as OpState,\n          (nextOp as ContextOp).c,\n          moveNode,\n          singleChild,\n        );\n        setContext(nextValue);\n      }\n    }\n  }\n\n  return opState;\n}\n\n/**\n * Update children list with track by key algorithm.\n *\n * High-level overview of the algorithm that is implemented in this function (slightly outdated, but the key ideas are\n * the same).\n *\n * This algorithm finds a minimum[1] number of DOM operations. It works in several steps:\n *\n * 1. Find common suffix and prefix.\n *\n * This optimization technique is searching for nodes with identical keys by simultaneously iterating over nodes in the\n * old children list `A` and new children list `B` from both sides:\n *\n *  A: -> [a b c d] <-\n *  B: -> [a b d] <-\n *\n * Here we can skip nodes \"a\" and \"b\" at the begininng, and node \"d\" at the end.\n *\n *  A: -> [c] <-\n *  B: -> [] <-\n *\n * Here it will check if the size of one of the list is equal to zero. When length of the old children list is zero,\n * it will insert all remaining nodes from the new list, and when length of the new children list is zero, it will\n * remove all remaining nodes from the old list.\n *\n * When algorithm can't find a solution with this simple optimization technique, it will go to the next step of the\n * algorithm. For example:\n *\n *  A: -> [a b c d e f g] <-\n *  B: -> [a c b h f e g] <-\n *\n * Nodes \"a\" and \"g\" at the edges are the same, skipping them.\n *\n *  A: -> [b c d e f] <-\n *  B: -> [c b h f e] <-\n *\n * Here we are stuck, so we need to switch to the next step.\n *\n * 2. Look for removed and inserted nodes, and simultaneously check if one of the nodes is moved.\n *\n * First we create an array `P` with the length of the new children list and assign to each position value `-1`, it has\n * a meaning of a new node that should be inserted. Later we will assign node positions in the old children list to this\n * array.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *  P: [. . . . .] // . == -1\n *\n * Then we need to build an index `I` that maps keys with node positions of the remaining nodes from the new children\n * list.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *  P: [. . . . .] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1,\n *    h: 2,\n *    f: 3,\n *    e: 4,\n *  }\n *  last = 0\n *\n * With this index, we start to iterate over the remaining nodes from the old children list and check if we can find a\n * node with the same key in the index. If we can't find any node, it means that it should be removed, otherwise we\n * assign position of the node in the old children list to the positions array.\n *\n *  A: [b c d e f]\n *      ^\n *  B: [c b h f e]\n *  P: [. 0 . . .] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1, <-\n *    h: 2,\n *    f: 3,\n *    e: 4,\n *  }\n *  last = 1\n *\n * When we assigning positions to the positions array, we also keep a position of the last seen node in the new children\n * list, if the last seen position is larger than current position of the node at the new list, then we are switching\n * `moved` flag to `true`.\n *\n *  A: [b c d e f]\n *        ^\n *  B: [c b h f e]\n *  P: [1 0 . . .] // . == -1\n *  I: {\n *    c: 0, <-\n *    b: 1,\n *    h: 2,\n *    f: 3,\n *    e: 4,\n *  }\n *  last = 1 // last > 0; moved = true\n *\n * The last position `1` is larger than current position of the node at the new list `0`, switching `moved` flag to\n * `true`.\n *\n *  A: [b c d e f]\n *          ^\n *  B: [c b h f e]\n *  P: [1 0 . . .] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1,\n *    h: 2,\n *    f: 3,\n *    e: 4,\n *  }\n *  moved = true\n *\n * Node with key \"d\" doesn't exist in the index, removing node.\n *\n *  A: [b c d e f]\n *            ^\n *  B: [c b h f e]\n *  P: [1 0 . . 3] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1,\n *    h: 2,\n *    f: 3,\n *    e: 4, <-\n *  }\n *  moved = true\n *\n * Assign position for `e`.\n *\n *  A: [b c d e f]\n *              ^\n *  B: [c b h f e]\n *  P: [1 0 . 4 3] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1,\n *    h: 2,\n *    f: 3, <-\n *    e: 4,\n *  }\n *  moved = true\n *\n * Assign position for 'f'.\n *\n * At this point we are checking if `moved` flag is on, or if the length of the old children list minus the number of\n * removed nodes isn't equal to the length of the new children list. If any of this conditions is true, then we are\n * going to the next step.\n *\n * 3. Find minimum number of moves if `moved` flag is on, or insert new nodes if the length is changed.\n *\n * When `moved` flag is on, we need to find the\n * [longest increasing subsequence](http://en.wikipedia.org/wiki/Longest_increasing_subsequence) in the positions array,\n * and move all nodes that doesn't belong to this subsequence.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *  moved = true\n *\n * Now we just need to simultaneously iterate over the new children list and LIS from the end and check if the current\n * position is equal to a value from LIS.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *              ^  // new_pos == 4\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *              ^  // new_pos == 4\n *  moved = true\n *\n * Node \"e\" stays at the same place.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *            ^    // new_pos == 3\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *            ^    // new_pos != 1\n *  moved = true\n *\n * Node \"f\" is moved, move it before the next node \"e\".\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *          ^      // new_pos == 2\n *  P: [1 0 . 4 3] // . == -1\n *          ^      // old_pos == -1\n *  LIS:     [1 4]\n *            ^\n *  moved = true\n *\n * Node \"h\" has a `-1` value in the positions array, insert new node \"h\".\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *        ^        // new_pos == 1\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *            ^    // new_pos == 1\n *  moved = true\n *\n * Node \"b\" stays at the same place.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *      ^          // new_pos == 0\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *          ^      // new_pos != undefined\n *  moved = true\n *\n * Node \"c\" is moved, move it before the next node \"b\".\n *\n * When moved flag is off, we don't need to find LIS, and we just iterate over the new children list and check its\n * current position in the positions array, if it is `-1`, then we insert new node.\n *\n * [1] Actually it is almost minimum number of dom ops, when node is removed and another one is inserted at the same\n * place, instead of insert and remove dom ops, we can use one replace op. It will make everything even more\n * complicated, and other use cases will be slower, so I don't think that it is worth to use replace here.\n *\n * NOTE: There are many variations of this algorithm that are used by many UI libraries and many implementations are\n * still using an old optimization technique that were removed several years ago from this implementation. This\n * optimization were used to improve performance of simple moves/swaps:\n *\n *  A: -> [a b c]\n *  B:    [c b a] <-\n *\n * This optimization were removed because it breaks the promise that insert and remove operations shouldn't trigger a\n * move operation. ivi prioritizes predictability and correctness over performance. For example:\n *\n *  A: -> [a b]\n *  B:    [c a] <-\n *\n * In this case, this optimization will move `a`, then this algo will remove `b` and insert `c`. Instead of just\n * removing `b` and inserting `c`.\n *\n * @param parentElement Parent DOM element.\n * @param opState OpNode state for a TrackByKey operation.\n * @param a Previous operations.\n * @param b Next operations.\n * @param moveNode Children DOM nodes should be moved.\n * @param singleChild Parent DOM element contains a single node.\n * @noinline\n */\nfunction _updateChildrenTrackByKeys(\n  parentElement: Element,\n  opState: OpState,\n  a: Key<any, OpNode>[],\n  b: Key<any, OpNode>[],\n  moveNode: boolean,\n  singleChild: boolean,\n): void {\n  let i = b.length;\n  let j: number | undefined = a.length;\n  const result = Array(i);\n\n  if (i === 0) { // New children list is empty.\n    if (j > 0) { // Unmount nodes from the old children list.\n      _unmount(parentElement, opState, singleChild);\n    }\n  } else if (j === 0) { // Old children list is empty.\n    while (i > 0) { // Mount nodes from the new children list.\n      result[--i] = _mount(parentElement, b[i].v);\n    }\n  } else {\n    const opStateChildren = opState.c as Array<OpState | null>;\n    let aEnd = j - 1; // a.length - 1\n    let bEnd = i - 1; // b.length - 1\n    let start = 0;\n    let node: OpNode | Key<any, OpNode> | OpState | null = b[bEnd];\n\n    // Step 1\n    outer: while (true) {\n      // Update nodes with the same key at the end.\n      while (a[aEnd].k === node.k) {\n        result[bEnd] = _update(parentElement, opStateChildren[aEnd--], node.v, moveNode, false);\n        if (start > --bEnd || start > aEnd) {\n          break outer;\n        }\n        node = b[bEnd];\n      }\n\n      // Update nodes with the same key at the beginning.\n      while (a[start].k === b[start].k && ++start <= aEnd && start <= bEnd) {\n        // delayed update (all updates should be performed from right-to-left).\n      }\n\n      break;\n    }\n\n    if (start > aEnd) {\n      // All nodes from `a` are updated, insert the rest from `b`.\n      while (bEnd >= start) {\n        result[bEnd] = _mount(parentElement, b[bEnd--].v);\n      }\n    } else if (start > bEnd) {\n      // All nodes from `b` are updated, remove the rest from `a`.\n      i = start;\n      do {\n        if ((node = opStateChildren[i++]) !== null) {\n          _unmount(parentElement, node, false);\n        }\n      } while (i <= aEnd);\n    } else { // Step 2\n      // When `pos === 99999999`, it means that one of the nodes is in the wrong position and we should rearrange nodes\n      // with lis-based algorithm.\n      let pos = 0;\n      // Number of updated nodes after prefix/suffix phase. It is used for an optimization that removes all child nodes\n      // with `textContent=\"\"` when there are no updated nodes.\n      let updated = 0;\n\n      const aLength = aEnd - start + 1;\n      const bLength = bEnd - start + 1;\n      const sources = Array(bLength); // Maps positions in the new children list to positions in the old children list.\n      const keyIndex = new Map<any, number>(); // Maps keys to their positions in the new children list.\n      for (i = 0; i < bLength; ++i) {\n        j = i + start;\n        sources[i] = -1; // Special value `-1` indicates that node doesn't exist in the old children list.\n        keyIndex.set(b[j].k, j);\n      }\n\n      for (i = start; i <= aEnd && updated < bLength; ++i) {\n        j = keyIndex.get(a[i].k);\n        if (j !== void 0) {\n          pos = (pos < j) ? j : 99999999;\n          ++updated;\n          sources[j - start] = i;\n          result[j] = opStateChildren[i];\n          // remove updated nodes from previous array, so that we could remove the rest from the document.\n          opStateChildren[i] = null;\n        }\n      }\n\n      if (aLength === a.length && updated === 0) {\n        // Zero updated nodes in step 1 and 2, remove all nodes and insert new ones.\n        _unmount(parentElement, opState, singleChild);\n        while (bEnd >= 0) {\n          result[bEnd] = _mount(parentElement, b[bEnd--].v);\n        }\n      } else {\n        // Step 3\n        // Remove nodes that weren't updated in the old children list.\n        for (i = start; i <= aEnd; i++) {\n          if ((node = opStateChildren[i]) !== null) {\n            _unmount(parentElement, node, false);\n          }\n        }\n\n        i = bLength;\n        if (moveNode === true || pos !== 99999999) {\n          while (i > 0) {\n            pos = --i + start;\n            node = b[pos].v;\n            result[pos] = (sources[i] === -1) ?\n              _mount(parentElement, node) :\n              _update(parentElement, result[pos], node, moveNode, false);\n          }\n        } else {\n          const seq = lis(sources);\n          j = seq.length - 1;\n          while (i > 0) {\n            pos = --i + start;\n            node = b[pos].v;\n            if (sources[i] === -1) {\n              result[pos] = _mount(parentElement, node);\n            } else {\n              if (j < 0 || i !== seq[j]) {\n                moveNode = true;\n              } else {\n                --j;\n              }\n              result[pos] = _update(parentElement, result[pos], node, moveNode, false);\n              moveNode = false;\n            }\n          }\n        }\n      }\n    }\n\n    // update nodes from Step 1 (prefix only)\n    while (start > 0) {\n      result[--start] = _update(parentElement, opStateChildren[start], b[start].v, moveNode, false);\n    }\n  }\n  opState.c = result;\n}\n\n/**\n * Slightly modified Longest Increased Subsequence algorithm, it ignores items that have -1 value, they're representing\n * new items.\n *\n * {@link http://en.wikipedia.org/wiki/Longest_increasing_subsequence}\n *\n * It is possible to use typed arrays in this function, and it will make it faster in most javascript engines, but for\n * some reason instantiating small typed arrays is slower in synthetic microbenchmarks on V8\n * {@link https://gist.github.com/localvoid/88da772d987794605f7fa4a078bce4d6} (maybe there is something wrong in this\n * benchmarks, if someone want to spend more time on optimizations, I'd recommend to double check everything).\n *\n * To solve problem with instantiation, we could just reuse arrays, but in my opinion it isn't worth to overcomplicate\n * this algorithm since it is already extremely fast and it is highly unlikely that it will be even noticeable in the\n * profiler. Usually when there is an update in the real applications, it triggers reordering of one dynamic children\n * list, that is why I prefer to keep it simple.\n *\n * @param a - Array of numbers\n * @returns Longest increasing subsequence\n * @noinline\n */\nfunction lis(a: number[]): number[] {\n  const p = a.slice();\n  // result is instantiated as an empty array to prevent instantiation with CoW backing store.\n  const result: number[] = [];\n  let n = 0;\n  let i = 0;\n  let u: number;\n  let v: number;\n  let j: number;\n\n  result[0] = 0;\n  for (; i < a.length; ++i) {\n    const k = a[i];\n    if (k > -1) {\n      j = result[n];\n      if (a[j] < k) {\n        p[i] = j;\n        result[++n] = i;\n      } else {\n        u = 0;\n        v = n;\n\n        while (u < v) {\n          j = (u + v) >> 1;\n          if (a[result[j]] < k) {\n            u = j + 1;\n          } else {\n            v = j;\n          }\n        }\n\n        if (k < a[result[u]]) {\n          if (u > 0) {\n            p[i] = result[u - 1];\n          }\n          result[u] = i;\n        }\n      }\n    }\n  }\n\n  v = result[n];\n\n  while (n >= 0) {\n    result[n--] = v;\n    v = p[v];\n  }\n\n  return result;\n}\n\n/**\n * Update DOM classname.\n *\n * @param element DOM Element.\n * @param className Class name.\n * @param svg SVG Element.\n */\nfunction _updateClassName(element: Element, className: string, svg: boolean): void {\n  /**\n   * SVGElement.className returns `SVGAnimatedString`.\n   *\n   * #quirks\n   */\n  if (svg === true) {\n    elementSetAttribute!.call(element, \"class\", className);\n  } else {\n    elementSetClassName!.call((element as HTMLElement), className);\n  }\n}\n\n/**\n * Update DOM styles.\n *\n * @param element HTML or SVG Element.\n * @param a Prev styles.\n * @param b Next styles.\n */\nfunction _updateStyle(\n  element: HTMLElement | SVGElement,\n  a: CSSStyleProps | undefined,\n  b: CSSStyleProps | undefined,\n  svg: boolean,\n): void {\n  const style = svg === true ? svgElementGetStyle!.call(element) : htmlElementGetStyle!.call(element);\n  let key: string;\n  let bValue;\n\n  if (a === void 0) {\n    // a is empty, insert all styles from b.\n    for (key in b!) {\n      bValue = (b as { [key: string]: string })[key];\n      if (bValue !== void 0) {\n        style.setProperty(key, bValue);\n      }\n    }\n  } else if (b === void 0) {\n    // b is empty, remove all styles from a\n    for (key in a) {\n      if ((a as { [key: string]: string })[key] !== void 0) {\n        style.removeProperty(key);\n      }\n    }\n  } else {\n    let matchCount = 0;\n    let i = 0;\n    for (key in a) {\n      const aValue = a[key];\n      bValue = (objectHasOwnProperty.call(b, key) === true) ? (matchCount++ , b[key]) : void 0;\n      if (aValue !== bValue) {\n        if (bValue !== void 0) {\n          style.setProperty(key, bValue);\n        } else {\n          style.removeProperty(key);\n        }\n      }\n    }\n\n    const keys = Object.keys(b);\n    for (; matchCount < keys.length && i < keys.length; ++i) {\n      key = keys[i];\n      if (objectHasOwnProperty.call(a, key) === false) {\n        bValue = b[key];\n        ++matchCount;\n        if (bValue !== void 0) {\n          style.setProperty(key, b[key]);\n        }\n      }\n    }\n  }\n}\n\n/**\n * Update DOM attributes.\n *\n * @param element DOM element.\n * @param a Prev DOM attributes.\n * @param b Next DOM attributes.\n */\nfunction _updateAttrs(\n  element: Element,\n  a: { [key: string]: string | number | boolean | AttributeDirective<any> | CSSStyleProps | undefined } | undefined,\n  b: { [key: string]: string | number | boolean | AttributeDirective<any> | CSSStyleProps | undefined } | undefined,\n  svg: boolean,\n): void {\n  let key: string;\n\n  if (a === void 0) {\n    // a is empty, insert all attributes from b.\n    for (key in b!) {\n      _updateAttr(element, key, void 0, b![key], svg);\n    }\n  } else if (b === void 0) {\n    // b is empty, remove all attributes from a.\n    for (key in a) {\n      _updateAttr(element, key, a[key], void 0, svg);\n    }\n  } else {\n    let matchCount = 0;\n    let i = 0;\n    for (key in a) {\n      _updateAttr(\n        element,\n        key,\n        a[key],\n        (objectHasOwnProperty.call(b, key) === true) ? (matchCount++ , b[key]) : void 0,\n        svg,\n      );\n    }\n\n    const keys = Object.keys(b);\n    for (; matchCount < keys.length && i < keys.length; ++i) {\n      key = keys[i];\n      if (objectHasOwnProperty.call(a, key) === false) {\n        _updateAttr(element, key, void 0, b[key], svg);\n        ++matchCount;\n      }\n    }\n  }\n}\n\n/**\n * Update DOM attribute.\n *\n * @param element DOM Element.\n * @param key Attribute name.\n * @param prev Previous value.\n * @param next Next value.\n */\nfunction _updateAttr(\n  element: Element,\n  key: string,\n  prev: string | number | boolean | AttributeDirective<any> | CSSStyleProps | undefined,\n  next: string | number | boolean | AttributeDirective<any> | CSSStyleProps | undefined,\n  svg: boolean,\n): void {\n  if (key !== \"style\") {\n    if (typeof next === \"object\") {\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== \"production\") {\n        if (typeof prev !== \"object\" && prev !== void 0) {\n          throw new Error(\n            `Invalid DOM attribute, transitioning from basic values to attribute directives isn't allowed`,\n          );\n        }\n      }\n      (next as AttributeDirective<any>).u!(\n        element,\n        key,\n        prev === void 0 ? void 0 : (prev as AttributeDirective<any>).v,\n        next.v,\n      );\n    } else if (typeof prev === \"object\") {\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== \"production\") {\n        if (typeof next !== \"object\" && next !== void 0) {\n          throw new Error(\n            `Invalid DOM attribute, transitioning from attribute directives to basic values isn't allowed`,\n          );\n        }\n      }\n      (prev as AttributeDirective<any>).u!(\n        element,\n        key,\n        (prev as AttributeDirective<any>).v,\n        void 0,\n      );\n    } else if (prev !== next) {\n      if (typeof next === \"boolean\") {\n        next = next ? \"\" : void 0;\n      }\n      if (next === void 0) {\n        if (prev !== void 0 && prev !== false) {\n          elementRemoveAttribute!.call(element, key);\n        }\n      } else {\n        elementSetAttribute!.call(element, key, next as string);\n      }\n    }\n  } else if (prev !== next) {\n    _updateStyle(element as HTMLElement, prev as CSSStyleProps, next as CSSStyleProps, svg);\n  }\n}\n","import { Op } from \"./operations\";\nimport { OpState } from \"./state\";\nimport { _mount, _update, _unmount, _dirtyCheck, _resetState } from \"./reconciler\";\nimport { enableContext, disableContext } from \"./context\";\n\n/**\n * Root.\n */\nexport interface Root {\n  /**\n   * Container element.\n   */\n  container: Element | null;\n  /**\n   * Current state.\n   */\n  state: OpState | null;\n  /**\n   * Next operation.\n   */\n  next: Op | undefined;\n}\n\n/**\n * Root nodes.\n */\nexport const ROOTS = [] as Root[];\n\n/**\n * Find root node of a container.\n *\n * @param predicate - Find predicate.\n * @returns root node or undefined when root node doesn't exist.\n */\nexport const findRoot = (predicate: (root: Root) => boolean) => ROOTS.find(predicate);\n\n/**\n * Performs a dirty checking.\n */\nexport function dirtyCheck() {\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== \"production\") {\n    enableContext();\n  }\n  for (let i = 0; i < ROOTS.length; ++i) {\n    const root = ROOTS[i];\n    const { container, state, next } = root;\n    _resetState();\n    if (next !== void 0) {\n      root.next = void 0;\n      root.state = _update(container!, state, next, false, true);\n    } else if (state !== null) {\n      _dirtyCheck(container!, state, false, true);\n    }\n  }\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== \"production\") {\n    disableContext();\n  }\n}\n","import {\n  NOOP, catchError, runRepeatableTasks, RepeatableTaskList, box, Box, TaskToken, TASK_TOKEN, advanceClock,\n} from \"../core\";\nimport { printWarn } from \"../debug/print\";\nimport { doc } from \"../dom/shortcuts\";\nimport { NodeFlags } from \"../vdom/node_flags\";\nimport { Op } from \"../vdom/operations\";\nimport { Component } from \"../vdom/component\";\nimport { ROOTS, findRoot, dirtyCheck } from \"../vdom/root\";\n\n/**\n * Update flags.\n */\nexport const enum UpdateFlags {\n  /**\n   * Forces synchronous update.\n   */\n  RequestSyncUpdate = 1,\n}\n\n/**\n * Scheduler flags.\n */\nconst enum SchedulerFlags {\n  /**\n   * Running inside of a scheduler context.\n   */\n  Running = 1,\n  /**\n   * Scheduler tick is pending for an execution.\n   */\n  TickPending = 1 << 1,\n  /**\n   * Frame update is pending for an execution.\n   */\n  NextFramePending = 1 << 2,\n  /**\n   * Sync Frame update is pending for an execution.\n   */\n  NextSyncFramePending = 1 << 3,\n  /**\n   * Running inside of a frame update context.\n   */\n  UpdatingFrame = 1 << 4,\n  /**\n   * Dirty checking is pending for an execution.\n   */\n  DirtyCheckPending = 1 << 5,\n}\n\nconst enum SchedulerDebugFlags {\n  DirtyCheckingFinished = 1,\n  MutationsFinished = 1 << 1,\n  LayoutFinished = 1 << 2,\n}\n\n/**\n * Task list.\n */\ntype TaskList = Box<Array<(token: TaskToken) => void>>;\n\n/**\n * Execute tasks from the `TaskList`.\n *\n * @param t - Task list\n */\nfunction run(t: TaskList) {\n  while (t.v.length > 0) {\n    const tasks = t.v;\n    t.v = [];\n    for (let i = 0; i < tasks.length; ++i) {\n      tasks[i](TASK_TOKEN);\n    }\n  }\n}\n\nlet _flags: SchedulerFlags = 0;\nlet _debugFlags: SchedulerDebugFlags = 0;\n\nlet _frameStartTime = 0;\nconst _resolvedPromise = Promise.resolve();\nconst _microtasks = box<Array<(token: TaskToken) => void>>([]);\nconst _mutationEffects = box<Array<(token: TaskToken) => void>>([]);\nconst _layoutEffects = box<Array<(token: TaskToken) => void>>([]);\nconst _beforeMutations = [] as RepeatableTaskList;\nconst _afterMutations = [] as RepeatableTaskList;\n\n/**\n * withSchedulerTick wraps `inner` function into a scheduler context execution.\n *\n * @typeparam T Arguments.\n * @param inner Inner function.\n * @returns function that will be executed in a scheduler context.\n */\nexport const withSchedulerTick = <T extends any[]>(inner: (...args: T) => void) => (\n  catchError(function () {\n    _flags |= SchedulerFlags.Running;\n    inner.apply(void 0, arguments as unknown as T);\n    run(_microtasks);\n    _flags &= ~(SchedulerFlags.Running | SchedulerFlags.TickPending);\n    advanceClock();\n  })\n) as (...args: T) => void;\n\nconst runMicrotasks = withSchedulerTick(NOOP);\n\n/**\n * scheduleMicrotask adds task to the microtask queue.\n *\n * @param task Microtask.\n */\nexport function scheduleMicrotask(task: (token: TaskToken) => void): void {\n  _microtasks.v.push(task);\n  if ((_flags & (SchedulerFlags.Running | SchedulerFlags.TickPending)) === 0) {\n    _flags |= SchedulerFlags.TickPending;\n    _resolvedPromise.then(runMicrotasks);\n  }\n}\n\n/**\n * beforeMutations adds a hook that will be executed before DOM mutations.\n *\n * @param fn Hook function.\n */\nexport function beforeMutations(fn: () => boolean | void): void {\n  _beforeMutations.push(fn);\n}\n\n/**\n * afterMutations adds a hook that will be executed after DOM mutations.\n *\n * @param fn Hook function.\n */\nexport function afterMutations(fn: () => boolean | void): void {\n  _afterMutations.push(fn);\n}\n\n/**\n * frameStartTime returns current frame start time.\n *\n * @returns current frame start time.\n */\nexport const frameStartTime = () => _frameStartTime;\n\n/**\n * withNextFrame wraps `inner` function into a scheduler frame update context.\n *\n * @param inner Inner function.\n * @returns function that will be executed in a frame update context.\n */\nexport const withNextFrame = (inner: (time?: number) => void) => (\n  withSchedulerTick((time?: number) => {\n    _flags |= SchedulerFlags.UpdatingFrame;\n    inner(time);\n\n    if ((_flags & SchedulerFlags.NextFramePending) !== 0) {\n      if (time !== void 0) {\n        _frameStartTime = time;\n      }\n\n      runRepeatableTasks(_beforeMutations);\n      if ((_flags & SchedulerFlags.DirtyCheckPending) !== 0) {\n        dirtyCheck();\n      }\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== \"production\") {\n        _debugFlags |= SchedulerDebugFlags.DirtyCheckingFinished;\n      }\n      run(_mutationEffects);\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== \"production\") {\n        _debugFlags |= SchedulerDebugFlags.MutationsFinished;\n      }\n      runRepeatableTasks(_afterMutations);\n      run(_layoutEffects);\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== \"production\") {\n        _debugFlags |= SchedulerDebugFlags.LayoutFinished;\n      }\n    }\n    _flags &= ~(\n      SchedulerFlags.UpdatingFrame |\n      SchedulerFlags.NextFramePending |\n      SchedulerFlags.NextSyncFramePending |\n      SchedulerFlags.DirtyCheckPending\n    );\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== \"production\") {\n      _debugFlags &= ~(\n        SchedulerDebugFlags.DirtyCheckingFinished |\n        SchedulerDebugFlags.MutationsFinished |\n        SchedulerDebugFlags.LayoutFinished\n      );\n    }\n  })\n);\n\n/**\n * Frame tasks scheduler event handler.\n *\n * @param t Current time.\n */\nconst _handleNextFrame = withNextFrame(NOOP);\nconst _handleNextFrameSync = () => { _handleNextFrame(); };\n\n/**\n * requestNextFrame requests an update for next frame.\n *\n * @param flags See {@link UpdateFlags} for details.\n */\nexport function requestNextFrame(flags?: UpdateFlags): void {\n  if (\n    (flags !== void 0) &&\n    ((flags & UpdateFlags.RequestSyncUpdate) !== 0) &&\n    ((_flags & SchedulerFlags.NextSyncFramePending) === 0)\n  ) {\n    _flags |= SchedulerFlags.NextFramePending | SchedulerFlags.NextSyncFramePending;\n    if ((_flags & SchedulerFlags.UpdatingFrame) === 0) {\n      scheduleMicrotask(_handleNextFrameSync);\n    }\n  } else if ((_flags & SchedulerFlags.NextFramePending) === 0) {\n    _flags |= SchedulerFlags.NextFramePending;\n    if ((_flags & SchedulerFlags.UpdatingFrame) === 0) {\n      requestAnimationFrame(_handleNextFrame);\n    }\n  }\n}\n\n/**\n * Adds a write DOM task to the queue.\n *\n * @param fn Write DOM task.\n * @param flags See {@link UpdateFlags} for details.\n */\nexport function scheduleMutationEffect(fn: (token: TaskToken) => void, flags?: UpdateFlags): void {\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== \"production\") {\n    if (_flags & SchedulerFlags.UpdatingFrame) {\n      if (_debugFlags & SchedulerDebugFlags.MutationsFinished) {\n        printWarn(\"Mutation effect is scheduled after mutations were finished\");\n      }\n    }\n  }\n  _mutationEffects.v.push(fn);\n  requestNextFrame(flags);\n}\n\n/**\n * Adds a DOM layout task to the queue.\n *\n * @param fn Read DOM task\n * @param flags See {@link UpdateFlags} for details.\n */\nexport function scheduleLayoutEffect(fn: (token: TaskToken) => void, flags?: UpdateFlags): void {\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== \"production\") {\n    if (_flags & SchedulerFlags.UpdatingFrame) {\n      if (_debugFlags & SchedulerDebugFlags.MutationsFinished) {\n        printWarn(\"Layout effect is scheduled after layout were finished\");\n      }\n    }\n  }\n  _layoutEffects.v.push(fn);\n  requestNextFrame(flags);\n}\n\n/**\n * Request dirty checking.\n *\n * @param flags See {@link UpdateFlags} for details.\n */\nexport function requestDirtyCheck(flags?: UpdateFlags): void {\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== \"production\") {\n    if (_flags & SchedulerFlags.UpdatingFrame) {\n      if (_debugFlags & SchedulerDebugFlags.MutationsFinished) {\n        printWarn(\"Dirty checking is scheduled after dirty checking were finished\");\n      }\n    }\n  }\n  _flags |= SchedulerFlags.DirtyCheckPending;\n  requestNextFrame(flags);\n}\n\n/**\n * Invalidate component.\n *\n * @param c Component instance.\n * @param flags See {@link UpdateFlags} for details.\n */\nexport function invalidate(c: Component, flags?: UpdateFlags): void {\n  c.f |= NodeFlags.Dirty;\n  requestDirtyCheck(flags);\n}\n\n/**\n * Render operation into the container.\n *\n * @param next Operation to render.\n * @param container DOM Node that will contain rendered operation.\n * @param flags See {@link UpdateFlags} for details.\n */\nexport function render(next: Op, container: Element, flags?: UpdateFlags): void {\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== \"production\") {\n    /**\n     * Rendering into the <body> element is disabled to make it possible to fix iOS quirk with click events.\n     */\n    if (container === doc.body) {\n      throw new Error(\"Rendering into the <body> element aren't allowed\");\n    }\n    if (!doc.body.contains(container)) {\n      throw new Error(\"Container element should be attached to the document\");\n    }\n  }\n\n  const root = findRoot((v) => v.container === container);\n  if (root) {\n    root.next = next;\n  } else {\n    ROOTS.push({ container, state: null, next });\n  }\n\n  requestDirtyCheck(flags);\n}\n","import {\n  HTMLAnchorElementAttrs, HTMLElementAttrs, HTMLAreaElementAttrs, HTMLAudioElementAttrs,\n  HTMLBaseElementAttrs, HTMLBodyElementAttrs, HTMLBRElementAttrs, HTMLButtonElementAttrs,\n  HTMLCanvasElementAttrs, HTMLQuoteElementAttrs, HTMLTableCaptionElementAttrs, HTMLTableColElementAttrs,\n  HTMLModElementAttrs, HTMLDivElementAttrs, HTMLDListElementAttrs, HTMLFieldSetElementAttrs, HTMLFormElementAttrs,\n  HTMLHeadElementAttrs, HTMLHeadingElementAttrs, HTMLHRElementAttrs, HTMLHtmlElementAttrs, HTMLIFrameElementAttrs,\n  HTMLImageElementAttrs, HTMLInputElementAttrs, HTMLLabelElementAttrs, HTMLLegendElementAttrs, HTMLLIElementAttrs,\n  HTMLLinkElementAttrs, HTMLMapElementAttrs, HTMLMenuElementAttrs, HTMLMetaElementAttrs, HTMLMeterElementAttrs,\n  HTMLOListElementAttrs, HTMLOptGroupElementAttrs, HTMLOptionElementAttrs, HTMLParagraphElementAttrs,\n  HTMLPictureElementAttrs, HTMLPreElementAttrs, HTMLProgressElementAttrs, HTMLScriptElementAttrs,\n  HTMLSelectElementAttrs, HTMLSourceElementAttrs, HTMLSpanElementAttrs, HTMLStyleElementAttrs,\n  HTMLTableDataCellElementAttrs, HTMLTableElementAttrs, HTMLTableHeaderCellElementAttrs, HTMLTableRowElementAttrs,\n  HTMLTableSectionElementAttrs, HTMLTemplateElementAttrs, HTMLTextAreaElementAttrs, HTMLTitleElementAttrs,\n  HTMLTrackElementAttrs, HTMLUListElementAttrs, HTMLVideoElementAttrs,\n\n  AttributeDirective, elementFactory, htmlElementFactory, NodeFlags,\n  emitAttribute, emitChildren, escapeAttributeValue, escapeText, IGNORE_RENDER_TO_STRING,\n} from \"ivi\";\n\n/**\n * {@link AttributeDirective} with `\"\"` value and {@link updateValue} sync function.\n */\nconst VALUE_EMPTY: AttributeDirective<string> = { v: \"\", u: updateValue };\n\n/**\n * {@link AttributeDirective} with `false` value and {@link updateChecked} sync function.\n */\nconst CHECKED_FALSE: AttributeDirective<boolean> = { v: false, u: updateChecked };\n\n/**\n * {@link AttributeDirective} with `true` value and {@link updateChecked} sync function.\n */\nconst CHECKED_TRUE: AttributeDirective<boolean> = { v: true, u: updateChecked };\n\n/**\n * {@link AttributeDirective} with `true` value that emits `checked` attribute.\n */\nconst CHECKED_TRUE_RENDER_TO_STRING: AttributeDirective<boolean> = { v: true, s: () => { emitAttribute(\"checked\"); } };\n\n/**\n * Render to string function for an {@link AttributeDirective} created with {@link VALUE} function.\n *\n * @param key Attribute key.\n * @param value Value.\n */\nfunction renderToStringValue(key: string, value: string) {\n  emitAttribute(`value=\"${escapeAttributeValue(value)}\"`);\n}\n\n/**\n * Render to string function for an {@link AttributeDirective} created with {@link CONTENT} function.\n *\n * @param key Attribute key.\n * @param value Value.\n */\nfunction renderToStringContent(key: string, value: string) {\n  emitChildren(escapeText(value));\n}\n\n/**\n * Synchronization function for {@link AttributeDirective} created with {@link VALUE} function.\n *\n * @param element Target element.\n * @param key Attribute key.\n * @param prev Previous value.\n * @param next Next value.\n */\nfunction updateValue(\n  element: Element,\n  key: string,\n  prev: string | undefined,\n  next: string | undefined,\n) {\n  if (prev === void 0) {\n    if (next !== \"\") {\n      (element as HTMLInputElement | HTMLTextAreaElement).value = next!;\n    }\n  } else if (next !== void 0 && ((element as HTMLInputElement | HTMLTextAreaElement).value !== next)) {\n    (element as HTMLInputElement | HTMLTextAreaElement).value = next;\n  }\n}\n\n/**\n * Synchronization function for {@link AttributeDirective} created with {@link CHECKED} function.\n *\n * @param element Target element.\n * @param key Attribute key.\n * @param prev Previous value.\n * @param next Next value.\n */\nfunction updateChecked(\n  element: Element,\n  key: string,\n  prev: boolean | undefined,\n  next: boolean | undefined,\n) {\n  if (prev === void 0) {\n    if (next) {\n      (element as HTMLInputElement).checked = next;\n    }\n  } else if (next !== void 0) {\n    if ((element as HTMLInputElement).checked !== next) {\n      (element as HTMLInputElement).checked = next!;\n    }\n  }\n}\n\n/**\n * VALUE function creates a {@link AttributeDirective} that assigns a `value` property to an HTMLInputElement.\n *\n * @example\n *\n *   const e = input(\"\", { value: VALUE(\"value\") });\n *\n * @param v Value.\n * @returns {@link AttributeDirective}\n */\nexport const VALUE = (v: string): AttributeDirective<string> => (\n  process.env.IVI_TARGET === \"ssr\" ?\n    v === \"\" ? IGNORE_RENDER_TO_STRING : { v, s: renderToStringValue } :\n    v === \"\" ? VALUE_EMPTY : { v, u: updateValue }\n);\n\n/**\n * CONTENT function creates a {@link AttributeDirective} that assigns a `value` property to an HTMLTextAreaElement.\n *\n * @example\n *\n *   const e = textarea(\"\", { content: CONTENT(\"content\") });\n *\n * @param v Value.\n * @returns {@link AttributeDirective}\n */\nexport const CONTENT = (\n  process.env.IVI_TARGET === \"ssr\" ?\n    (v: string): AttributeDirective<string> => (\n      v === \"\" ? IGNORE_RENDER_TO_STRING : ({ v, s: renderToStringContent })\n    ) :\n    VALUE\n);\n\n/**\n * CHECKED function creates a {@link AttributeDirective} that assigns a `checked` property to an HTMLInputElement.\n *\n * @example\n *\n *   const e = input(\"\", { checked: CHECKED(true) });\n *\n * @param v Checked value.\n * @returns {@link AttributeDirective}\n */\nexport const CHECKED = (v: boolean): AttributeDirective<boolean> => (\n  process.env.IVI_TARGET === \"ssr\" ?\n    v ? CHECKED_TRUE_RENDER_TO_STRING : IGNORE_RENDER_TO_STRING :\n    v ? CHECKED_TRUE : CHECKED_FALSE\n);\n\n/* tslint:disable:max-line-length */\n/**\n * Creates OpNode HTML element <a>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <a>\n */\nexport const a = /*#__PURE__*/htmlElementFactory<HTMLAnchorElementAttrs, HTMLAnchorElement>(\"a\");\n\n/**\n * Creates OpNode HTML element <abbr>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/abbr}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <abbr>\n */\nexport const abbr = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"abbr\");\n\n/**\n * Creates OpNode HTML element <address>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/address}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <address>\n */\nexport const address = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"address\");\n\n/**\n * Creates OpNode HTML element <article>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/article}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <article>\n */\nexport const article = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"article\");\n\n/**\n * Creates OpNode HTML element <aside>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/aside}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <aside>\n */\nexport const aside = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"aside\");\n\n/**\n * Creates OpNode HTML element <b>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/b}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <b>\n */\nexport const b = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"b\");\n\n/**\n * Creates OpNode HTML element <base>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/base}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <base>\n */\nexport const base = /*#__PURE__*/elementFactory<HTMLBaseElementAttrs, HTMLBaseElement>(\"base\", NodeFlags.Element | NodeFlags.VoidElement);\n\n/**\n * Creates OpNode HTML element <bdo>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/bdo}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <bdo>\n */\nexport const bdo = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"bdo\");\n\n/**\n * Creates OpNode HTML element <blockquote>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/blockquote}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <blockquote>\n */\nexport const blockquote = /*#__PURE__*/htmlElementFactory<HTMLQuoteElementAttrs, HTMLQuoteElement>(\"blockquote\");\n\n/**\n * Creates OpNode HTML element <body>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/body}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <body>\n */\nexport const body = /*#__PURE__*/htmlElementFactory<HTMLBodyElementAttrs, HTMLBodyElement>(\"body\");\n\n/**\n * Creates OpNode HTML element <br>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/br}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <br>\n */\nexport const br = /*#__PURE__*/elementFactory<HTMLBRElementAttrs, HTMLBRElement>(\"br\", NodeFlags.Element | NodeFlags.VoidElement);\n\n/**\n * Creates OpNode HTML element <button>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <button>\n */\nexport const button = /*#__PURE__*/htmlElementFactory<HTMLButtonElementAttrs, HTMLButtonElement>(\"button\");\n\n/**\n * Creates OpNode HTML element <canvas>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <canvas>\n */\nexport const canvas = /*#__PURE__*/htmlElementFactory<HTMLCanvasElementAttrs, HTMLCanvasElement>(\"canvas\");\n\n/**\n * Creates OpNode HTML element <caption>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <caption>\n */\nexport const caption = /*#__PURE__*/htmlElementFactory<HTMLTableCaptionElementAttrs, HTMLTableCaptionElement>(\"caption\");\n\n/**\n * Creates OpNode HTML element <cite>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/cite}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <cite>\n */\nexport const cite = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"cite\");\n\n/**\n * Creates OpNode HTML element <code>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/code}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <code>\n */\nexport const code = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"code\");\n\n/**\n * Creates OpNode HTML element <col>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/col}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <col>\n */\nexport const col = /*#__PURE__*/elementFactory<HTMLTableColElementAttrs, HTMLTableColElement>(\"col\", NodeFlags.Element | NodeFlags.VoidElement);\n\n/**\n * Creates OpNode HTML element <colgroup>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/colgroup}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <colgroup>\n */\nexport const colgroup = /*#__PURE__*/htmlElementFactory<HTMLTableColElementAttrs, HTMLTableColElement>(\"colgroup\");\n\n/**\n * Creates OpNode HTML element <del>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/del}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <del>\n */\nexport const del = /*#__PURE__*/htmlElementFactory<HTMLModElementAttrs, HTMLModElement>(\"del\");\n\n/**\n * Creates OpNode HTML element <dfn>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dfn}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <dfn>\n */\nexport const dfn = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"dfn\");\n\n/**\n * Creates OpNode HTML element <div>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <div>\n */\nexport const div = /*#__PURE__*/htmlElementFactory<HTMLDivElementAttrs, HTMLDivElement>(\"div\");\n\n/**\n * Creates OpNode HTML element <dd>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dd}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <dd>\n */\nexport const dd = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"dd\");\n\n/**\n * Creates OpNode HTML element <dl>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dl}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <dl>\n */\nexport const dl = /*#__PURE__*/htmlElementFactory<HTMLDListElementAttrs, HTMLDListElement>(\"dl\");\n\n/**\n * Creates OpNode HTML element <dt>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dt}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <dt>\n */\nexport const dt = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"dt\");\n\n/**\n * Creates OpNode HTML element <em>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/em}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <em>\n */\nexport const em = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"em\");\n\n/**\n * Creates OpNode HTML element <fieldset>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/fieldset}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <fieldset>\n */\nexport const fieldset = /*#__PURE__*/htmlElementFactory<HTMLFieldSetElementAttrs, HTMLFieldSetElement>(\"fieldset\");\n\n/**\n * Creates OpNode HTML element <figcaption>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/figcaption}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <figcaption>\n */\nexport const figcaption = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"figcaption\");\n\n/**\n * Creates OpNode HTML element <figure>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/figure}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <figure>\n */\nexport const figure = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"figure\");\n\n/**\n * Creates OpNode HTML element <footer>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/footer}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <footer>\n */\nexport const footer = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"footer\");\n\n/**\n * Creates OpNode HTML element <form>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <form>\n */\nexport const form = /*#__PURE__*/htmlElementFactory<HTMLFormElementAttrs, HTMLFormElement>(\"form\");\n\n/**\n * Creates OpNode HTML element <h1>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h1}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <h1>\n */\nexport const h1 = /*#__PURE__*/htmlElementFactory<HTMLHeadingElementAttrs, HTMLHeadingElement>(\"h1\");\n\n/**\n * Creates OpNode HTML element <h2>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h2}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <h2>\n */\nexport const h2 = /*#__PURE__*/htmlElementFactory<HTMLHeadingElementAttrs, HTMLHeadingElement>(\"h2\");\n\n/**\n * Creates OpNode HTML element <h3>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h3}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <h3>\n */\nexport const h3 = /*#__PURE__*/htmlElementFactory<HTMLHeadingElementAttrs, HTMLHeadingElement>(\"h3\");\n\n/**\n * Creates OpNode HTML element <h4>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h4}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <h4>\n */\nexport const h4 = /*#__PURE__*/htmlElementFactory<HTMLHeadingElementAttrs, HTMLHeadingElement>(\"h4\");\n\n/**\n * Creates OpNode HTML element <h5>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h5}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <h5>\n */\nexport const h5 = /*#__PURE__*/htmlElementFactory<HTMLHeadingElementAttrs, HTMLHeadingElement>(\"h5\");\n\n/**\n * Creates OpNode HTML element <h6>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h6}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <h6>\n */\nexport const h6 = /*#__PURE__*/htmlElementFactory<HTMLHeadingElementAttrs, HTMLHeadingElement>(\"h6\");\n\n/**\n * Creates OpNode HTML element <head>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/head}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <head>\n */\nexport const head = /*#__PURE__*/htmlElementFactory<HTMLHeadElementAttrs, HTMLHeadElement>(\"head\");\n\n/**\n * Creates OpNode HTML element <header>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/header}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <header>\n */\nexport const header = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"header\");\n\n/**\n * Creates OpNode HTML element <hgroup>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/hgroup}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <hgroup>\n */\nexport const hgroup = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"hgroup\");\n\n/**\n * Creates OpNode HTML element <hr>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/hr}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <hr>\n */\nexport const hr = /*#__PURE__*/elementFactory<HTMLHRElementAttrs, HTMLHRElement>(\"hr\", NodeFlags.Element | NodeFlags.VoidElement);\n\n/**\n * Creates OpNode HTML element <html>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/html}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <html>\n */\nexport const html = /*#__PURE__*/htmlElementFactory<HTMLHtmlElementAttrs, HTMLHtmlElement>(\"html\");\n\n/**\n * Creates OpNode HTML element <i>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/i}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <i>\n */\nexport const i = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"i\");\n\n/**\n * Creates OpNode HTML element <iframe>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <iframe>\n */\nexport const iframe = /*#__PURE__*/htmlElementFactory<HTMLIFrameElementAttrs, HTMLIFrameElement>(\"iframe\");\n\n/**\n * Creates OpNode HTML element <img>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <img>\n */\nexport const img = /*#__PURE__*/elementFactory<HTMLImageElementAttrs, HTMLImageElement>(\"img\", NodeFlags.Element | NodeFlags.VoidElement);\n\n/**\n * Creates OpNode HTML element <area>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/area}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <area>\n */\nexport const area = /*#__PURE__*/elementFactory<HTMLAreaElementAttrs, HTMLAreaElement>(\"area\", NodeFlags.Element | NodeFlags.VoidElement);\n\n/**\n * Creates OpNode HTML element <map>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/map}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <map>\n */\nexport const map = /*#__PURE__*/htmlElementFactory<HTMLMapElementAttrs, HTMLMapElement>(\"map\");\n\n/**\n * Creates OpNode HTML element <ins>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ins}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <ins>\n */\nexport const ins = /*#__PURE__*/htmlElementFactory<HTMLModElementAttrs, HTMLModElement>(\"ins\");\n\n/**\n * Creates OpNode HTML element <kbd>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/kbd}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <kbd>\n */\nexport const kbd = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"kbd\");\n\n/**\n * Creates OpNode HTML element <label>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/label}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <label>\n */\nexport const label = /*#__PURE__*/htmlElementFactory<HTMLLabelElementAttrs, HTMLLabelElement>(\"label\");\n\n/**\n * Creates OpNode HTML element <legend>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/legend}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <legend>\n */\nexport const legend = /*#__PURE__*/htmlElementFactory<HTMLLegendElementAttrs, HTMLLegendElement>(\"legend\");\n\n/**\n * Creates OpNode HTML element <li>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/li}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <li>\n */\nexport const li = /*#__PURE__*/htmlElementFactory<HTMLLIElementAttrs, HTMLLIElement>(\"li\");\n\n/**\n * Creates OpNode HTML element <link>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <link>\n */\nexport const link = /*#__PURE__*/elementFactory<HTMLLinkElementAttrs, HTMLLinkElement>(\"link\", NodeFlags.Element | NodeFlags.VoidElement);\n\n/**\n * Creates OpNode HTML element <main>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/main}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <main>\n */\nexport const main = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"main\");\n\n/**\n * Creates OpNode HTML element <mark>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/mark}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <mark>\n */\nexport const mark = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"mark\");\n\n/**\n * Creates OpNode HTML element <menu>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/menu}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <menu>\n */\nexport const menu = /*#__PURE__*/htmlElementFactory<HTMLMenuElementAttrs, HTMLMenuElement>(\"menu\");\n\n/**\n * Creates OpNode HTML element <meta>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <meta>\n */\nexport const meta = /*#__PURE__*/elementFactory<HTMLMetaElementAttrs, HTMLMetaElement>(\"meta\", NodeFlags.Element | NodeFlags.VoidElement);\n\n/**\n * Creates OpNode HTML element <meter>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meter}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <meter>\n */\nexport const meter = /*#__PURE__*/htmlElementFactory<HTMLMeterElementAttrs, HTMLMeterElement>(\"meter\");\n\n/**\n * Creates OpNode HTML element <nav>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/nav}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <nav>\n */\nexport const nav = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"nav\");\n\n/**\n * Creates OpNode HTML element <noscript>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/noscript}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <noscript>\n */\nexport const noscript = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"noscript\");\n\n/**\n * Creates OpNode HTML element <ol>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ol}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <ol>\n */\nexport const ol = /*#__PURE__*/htmlElementFactory<HTMLOListElementAttrs, HTMLOListElement>(\"ol\");\n\n/**\n * Creates OpNode HTML element <optgroup>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/optgroup}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <optgroup>\n */\nexport const optgroup = /*#__PURE__*/htmlElementFactory<HTMLOptGroupElementAttrs, HTMLOptGroupElement>(\"optgroup\");\n\n/**\n * Creates OpNode HTML element <option>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <option>\n */\nexport const option = /*#__PURE__*/htmlElementFactory<HTMLOptionElementAttrs, HTMLOptionElement>(\"option\");\n\n/**\n * Creates OpNode HTML element <p>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/p}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <p>\n */\nexport const p = /*#__PURE__*/htmlElementFactory<HTMLParagraphElementAttrs, HTMLParagraphElement>(\"p\");\n\n/**\n * Creates OpNode HTML element <picture>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/picture}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <picture>\n */\nexport const picture = /*#__PURE__*/htmlElementFactory<HTMLPictureElementAttrs, HTMLPictureElement>(\"picture\");\n\n/**\n * Creates OpNode HTML element <pre>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/pre}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <pre>\n */\nexport const pre = /*#__PURE__*/elementFactory<HTMLPreElementAttrs, HTMLPreElement>(\"pre\", NodeFlags.Element | NodeFlags.NewlineEatingElement);\n\n/**\n * Creates OpNode HTML element <progress>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/progress}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <progress>\n */\nexport const progress = /*#__PURE__*/htmlElementFactory<HTMLProgressElementAttrs, HTMLProgressElement>(\"progress\");\n\n/**\n * Creates OpNode HTML element <q>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/q}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <q>\n */\nexport const q = /*#__PURE__*/htmlElementFactory<HTMLQuoteElementAttrs, HTMLQuoteElement>(\"q\");\n\n/**\n * Creates OpNode HTML element <rt>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/rt}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <rt>\n */\nexport const rt = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"rt\");\n\n/**\n * Creates OpNode HTML element <ruby>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ruby}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <ruby>\n */\nexport const ruby = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"ruby\");\n\n/**\n * Creates OpNode HTML element <s>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/s}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <s>\n */\nexport const s = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"s\");\n\n/**\n * Creates OpNode HTML element <samp>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/samp}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <samp>\n */\nexport const samp = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"samp\");\n\n/**\n * Creates OpNode HTML element <script>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <script>\n */\nexport const script = /*#__PURE__*/htmlElementFactory<HTMLScriptElementAttrs, HTMLScriptElement>(\"script\");\n\n/**\n * Creates OpNode HTML element <section>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/section}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <section>\n */\nexport const section = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"section\");\n\n/**\n * Creates OpNode HTML element <select>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <select>\n */\nexport const select = /*#__PURE__*/htmlElementFactory<HTMLSelectElementAttrs, HTMLSelectElement>(\"select\");\n\n/**\n * Creates OpNode HTML element <source>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/source}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <source>\n */\nexport const source = /*#__PURE__*/elementFactory<HTMLSourceElementAttrs, HTMLSourceElement>(\"source\", NodeFlags.Element | NodeFlags.VoidElement);\n\n/**\n * Creates OpNode HTML element <span>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <span>\n */\nexport const span = /*#__PURE__*/htmlElementFactory<HTMLSpanElementAttrs, HTMLSpanElement>(\"span\");\n\n/**\n * Creates OpNode HTML element <strong>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/strong}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <strong>\n */\nexport const strong = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"strong\");\n\n/**\n * Creates OpNode HTML element <style>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/style}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <style>\n */\nexport const style = /*#__PURE__*/htmlElementFactory<HTMLStyleElementAttrs, HTMLStyleElement>(\"style\");\n\n/**\n * Creates OpNode HTML element <sub>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/sub}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <sub>\n */\nexport const sub = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"sub\");\n\n/**\n * Creates OpNode HTML element <sup>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/sup}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <sup>\n */\nexport const sup = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"sup\");\n\n/**\n * Creates OpNode HTML element <table>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/table}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <table>\n */\nexport const table = /*#__PURE__*/htmlElementFactory<HTMLTableElementAttrs, HTMLTableElement>(\"table\");\n\n/**\n * Creates OpNode HTML element <tbody>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tbody}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <tbody>\n */\nexport const tbody = /*#__PURE__*/htmlElementFactory<HTMLTableSectionElementAttrs, HTMLTableSectionElement>(\"tbody\");\n\n/**\n * Creates OpNode HTML element <td>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/td}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <td>\n */\nexport const td = /*#__PURE__*/htmlElementFactory<HTMLTableDataCellElementAttrs, HTMLTableDataCellElement>(\"td\");\n\n/**\n * Creates OpNode HTML element <template>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/template}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <template>\n */\nexport const template = /*#__PURE__*/htmlElementFactory<HTMLTemplateElementAttrs, HTMLTemplateElement>(\"template\");\n\n/**\n * Creates OpNode HTML element <tfoot>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tfoot}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <tfoot>\n */\nexport const tfoot = /*#__PURE__*/htmlElementFactory<HTMLTableSectionElementAttrs, HTMLTableSectionElement>(\"tfoot\");\n\n/**\n * Creates OpNode HTML element <th>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/th}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <th>\n */\nexport const th = /*#__PURE__*/htmlElementFactory<HTMLTableHeaderCellElementAttrs, HTMLTableHeaderCellElement>(\"th\");\n\n/**\n * Creates OpNode HTML element <thead>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/thead}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <thead>\n */\nexport const thead = /*#__PURE__*/htmlElementFactory<HTMLTableSectionElementAttrs, HTMLTableSectionElement>(\"thead\");\n\n/**\n * Creates OpNode HTML element <time>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/time}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <time>\n */\nexport const time = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"time\");\n\n/**\n * Creates OpNode HTML element <title>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/title}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <title>\n */\nexport const title = /*#__PURE__*/htmlElementFactory<HTMLTitleElementAttrs, HTMLTitleElement>(\"title\");\n\n/**\n * Creates OpNode HTML element <tr>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tr}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <tr>\n */\nexport const tr = /*#__PURE__*/htmlElementFactory<HTMLTableRowElementAttrs, HTMLTableRowElement>(\"tr\");\n\n/**\n * Creates OpNode HTML element <track>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/track}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <track>\n */\nexport const track = /*#__PURE__*/elementFactory<HTMLTrackElementAttrs, HTMLTrackElement>(\"track\", NodeFlags.Element | NodeFlags.VoidElement);\n\n/**\n * Creates OpNode HTML element <u>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/u}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <u>\n */\nexport const u = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"u\");\n\n/**\n * Creates OpNode HTML element <ul>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ul}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <ul>\n */\nexport const ul = /*#__PURE__*/htmlElementFactory<HTMLUListElementAttrs, HTMLUListElement>(\"ul\");\n\n/**\n * Creates OpNode HTML element <wbr>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/wbr}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <wbr>\n */\nexport const wbr = /*#__PURE__*/elementFactory<HTMLElementAttrs, HTMLElement>(\"wbr\", NodeFlags.Element | NodeFlags.VoidElement);\n\n/**\n * Creates OpNode HTML element <textarea>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <textarea>\n */\nexport const textarea = /*#__PURE__*/elementFactory<HTMLTextAreaElementAttrs, HTMLTextAreaElement>(\"textarea\", NodeFlags.Element | NodeFlags.NewlineEatingElement);\n\n/**\n * Creates OpNode HTML element <input>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <input>\n */\nexport const input = /*#__PURE__*/elementFactory<HTMLInputElementAttrs, HTMLInputElement>(\"input\", NodeFlags.Element | NodeFlags.VoidElement);\n\n/**\n * Creates OpNode HTML element <audio>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <audio>\n */\nexport const audio = /*#__PURE__*/htmlElementFactory<HTMLAudioElementAttrs, HTMLAudioElement>(\"audio\");\n\n/**\n * Creates OpNode HTML element <video>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <video>\n */\nexport const video = /*#__PURE__*/htmlElementFactory<HTMLVideoElementAttrs, HTMLVideoElement>(\"video\");\n","var MonitorMaxSamples = 100;\nvar MonitorSamplesResult = (function () {\n    function MonitorSamplesResult(min, max, mean, last) {\n        this.min = min;\n        this.max = max;\n        this.mean = mean;\n        this.last = last;\n    }\n    return MonitorSamplesResult;\n}());\n/**\n * Profile Samples.\n */\nvar MonitorSamples = (function () {\n    function MonitorSamples(maxSamples) {\n        this.samples = [];\n        this.maxSamples = maxSamples;\n        this._i = -1;\n    }\n    MonitorSamples.prototype.addSample = function (v) {\n        this._i = (this._i + 1) % this.maxSamples;\n        this.samples[this._i] = v;\n    };\n    MonitorSamples.prototype.each = function (fn) {\n        var samples = this.samples;\n        for (var i = 0; i < samples.length; i++) {\n            fn(samples[(this._i + 1 + i) % samples.length], i);\n        }\n    };\n    MonitorSamples.prototype.calc = function () {\n        var samples = this.samples;\n        if (samples.length === 0) {\n            return new MonitorSamplesResult(0, 0, 0, 0);\n        }\n        var min = samples[(this._i + 1) % samples.length];\n        var max = min;\n        var sum = 0;\n        for (var i = 0; i < samples.length; i++) {\n            var k = samples[(this._i + 1 + i) % samples.length];\n            if (k < min) {\n                min = k;\n            }\n            if (k > max) {\n                max = k;\n            }\n            sum += k;\n        }\n        var last = samples[this._i];\n        var mean = sum / samples.length;\n        return new MonitorSamplesResult(min, max, mean, last);\n    };\n    return MonitorSamples;\n}());\n\n/**\n * Basic Counter.\n */\nvar BasicCounter = (function () {\n    function BasicCounter() {\n        this.value = 0;\n        this.onChange = null;\n    }\n    BasicCounter.prototype.inc = function (value) {\n        if (value > 0) {\n            this.value += value;\n            this.onChange();\n        }\n    };\n    return BasicCounter;\n}());\nvar TimestampedValue = (function () {\n    function TimestampedValue(timestamp, value) {\n        this.value = value;\n        this.next = null;\n    }\n    return TimestampedValue;\n}());\n/**\n * Sliding Counter counts how many times `inc` method were called during `interval` period.\n */\nvar SlidingCounter = (function () {\n    function SlidingCounter(interval) {\n        var _this = this;\n        this._dec = function () {\n            var now = performance.now();\n            while (_this._firstTimestamp !== null) {\n                var nextTimestamp = _this._firstTimestamp;\n                if (now >= nextTimestamp.value) {\n                    _this.value -= nextTimestamp.value;\n                    _this._firstTimestamp = _this._firstTimestamp.next;\n                }\n                else {\n                    setTimeout(_this._dec, Math.ceil(nextTimestamp.value - now));\n                    break;\n                }\n            }\n            if (_this._firstTimestamp === null) {\n                _this._lastTimestamp = null;\n            }\n            _this.onChange();\n        };\n        this.interval = interval;\n        this.value = 0;\n        this.onChange = null;\n        this._firstTimestamp = null;\n        this._lastTimestamp = null;\n    }\n    SlidingCounter.prototype.inc = function (value) {\n        if (value > 0) {\n            var timestamp = new TimestampedValue(performance.now() + this.interval, value);\n            if (this._firstTimestamp === null) {\n                this._firstTimestamp = timestamp;\n                setTimeout(this._dec, this.interval);\n            }\n            else {\n                this._lastTimestamp.next = timestamp;\n            }\n            this._lastTimestamp = timestamp;\n            this.value += value;\n            this.onChange();\n        }\n    };\n    return SlidingCounter;\n}());\n\nvar frameTasks = [];\nvar rafId = -1;\n/**\n * Schedule new task that will be executed on the next frame.\n */\nfunction scheduleNextFrameTask(task) {\n    frameTasks.push(task);\n    if (rafId === -1) {\n        requestAnimationFrame(function (t) {\n            rafId = -1;\n            var tasks = frameTasks;\n            frameTasks = [];\n            for (var i = 0; i < tasks.length; i++) {\n                tasks[i]();\n            }\n        });\n    }\n}\n\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar MonitorGraphHeight = 30;\nvar MonitorGraphWidth = MonitorMaxSamples;\nvar Widget = (function () {\n    function Widget(name) {\n        var _this = this;\n        this._sync = function () {\n            _this.sync();\n            _this._dirty = false;\n        };\n        this.name = name;\n        this.element = document.createElement(\"div\");\n        this.element.style.cssText = \"padding: 2px;\" +\n            \"background-color: #020;\" +\n            \"font-family: monospace;\" +\n            \"font-size: 12px;\" +\n            \"color: #0f0\";\n        this._dirty = false;\n        this.invalidate();\n    }\n    Widget.prototype.invalidate = function () {\n        if (!this._dirty) {\n            this._dirty = true;\n            scheduleNextFrameTask(this._sync);\n        }\n    };\n    Widget.prototype.sync = function () {\n        throw new Error(\"sync method not implemented\");\n    };\n    return Widget;\n}());\nvar MonitorWidgetFlags;\n(function (MonitorWidgetFlags) {\n    MonitorWidgetFlags[MonitorWidgetFlags[\"HideMin\"] = 1] = \"HideMin\";\n    MonitorWidgetFlags[MonitorWidgetFlags[\"HideMax\"] = 2] = \"HideMax\";\n    MonitorWidgetFlags[MonitorWidgetFlags[\"HideMean\"] = 4] = \"HideMean\";\n    MonitorWidgetFlags[MonitorWidgetFlags[\"HideLast\"] = 8] = \"HideLast\";\n    MonitorWidgetFlags[MonitorWidgetFlags[\"HideGraph\"] = 16] = \"HideGraph\";\n    MonitorWidgetFlags[MonitorWidgetFlags[\"RoundValues\"] = 32] = \"RoundValues\";\n})(MonitorWidgetFlags || (MonitorWidgetFlags = {}));\nvar MonitorWidget = (function (_super) {\n    __extends(MonitorWidget, _super);\n    function MonitorWidget(name, flags, unitName, samples) {\n        var _this = _super.call(this, name) || this;\n        _this.flags = flags;\n        _this.unitName = unitName;\n        _this.samples = samples;\n        var label = document.createElement(\"div\");\n        label.style.cssText = \"text-align: center\";\n        label.textContent = _this.name;\n        var text = document.createElement(\"div\");\n        if ((flags & MonitorWidgetFlags.HideMin) === 0) {\n            _this.minText = document.createElement(\"div\");\n            text.appendChild(_this.minText);\n        }\n        else {\n            _this.minText = null;\n        }\n        if ((flags & MonitorWidgetFlags.HideMax) === 0) {\n            _this.maxText = document.createElement(\"div\");\n            text.appendChild(_this.maxText);\n        }\n        else {\n            _this.maxText = null;\n        }\n        if ((flags & MonitorWidgetFlags.HideMean) === 0) {\n            _this.meanText = document.createElement(\"div\");\n            text.appendChild(_this.meanText);\n        }\n        else {\n            _this.meanText = null;\n        }\n        if ((flags & MonitorWidgetFlags.HideLast) === 0) {\n            _this.lastText = document.createElement(\"div\");\n            text.appendChild(_this.lastText);\n        }\n        else {\n            _this.lastText = null;\n        }\n        _this.element.appendChild(label);\n        _this.element.appendChild(text);\n        if ((flags & MonitorWidgetFlags.HideGraph) === 0) {\n            _this.canvas = document.createElement(\"canvas\");\n            _this.canvas.style.cssText = \"display: block; padding: 0; margin: 0\";\n            _this.canvas.width = MonitorGraphWidth;\n            _this.canvas.height = MonitorGraphHeight;\n            _this.ctx = _this.canvas.getContext(\"2d\");\n            _this.element.appendChild(_this.canvas);\n        }\n        else {\n            _this.canvas = null;\n            _this.ctx = null;\n        }\n        return _this;\n    }\n    MonitorWidget.prototype.sync = function () {\n        var _this = this;\n        var result = this.samples.calc();\n        var scale = MonitorGraphHeight / (result.max * 1.2);\n        var min;\n        var max;\n        var mean;\n        var last;\n        if ((this.flags & MonitorWidgetFlags.RoundValues) === 0) {\n            min = result.min.toFixed(2);\n            max = result.max.toFixed(2);\n            mean = result.mean.toFixed(2);\n            last = result.last.toFixed(2);\n        }\n        else {\n            min = Math.round(result.min).toString();\n            max = Math.round(result.max).toString();\n            mean = Math.round(result.mean).toString();\n            last = Math.round(result.last).toString();\n        }\n        if (this.minText !== null) {\n            this.minText.textContent = \"min: \\u00A0\" + min + this.unitName;\n        }\n        if (this.maxText !== null) {\n            this.maxText.textContent = \"max: \\u00A0\" + max + this.unitName;\n        }\n        if (this.meanText !== null) {\n            this.meanText.textContent = \"mean: \" + mean + this.unitName;\n        }\n        if (this.lastText !== null) {\n            this.lastText.textContent = \"last: \" + last + this.unitName;\n        }\n        if (this.ctx !== null) {\n            this.ctx.fillStyle = \"#010\";\n            this.ctx.fillRect(0, 0, MonitorGraphWidth, MonitorGraphHeight);\n            this.ctx.fillStyle = \"#0f0\";\n            this.samples.each(function (v, i) {\n                _this.ctx.fillRect(i, MonitorGraphHeight, 1, -(v * scale));\n            });\n        }\n    };\n    return MonitorWidget;\n}(Widget));\nvar CounterWidget = (function (_super) {\n    __extends(CounterWidget, _super);\n    function CounterWidget(name, counter) {\n        var _this = _super.call(this, name) || this;\n        _this.counter = counter;\n        _this.text = document.createElement(\"div\");\n        _this.element.appendChild(_this.text);\n        return _this;\n    }\n    CounterWidget.prototype.sync = function () {\n        this.text.textContent = this.name + \": \" + this.counter.value;\n    };\n    return CounterWidget;\n}(Widget));\n\nvar container = null;\nvar initialized = false;\n/**\n * Initialize Performance Monitor.\n */\nfunction initPerfMonitor(options) {\n    if (!initialized) {\n        if (options.container) {\n            container = options.container;\n        }\n        initialized = true;\n    }\n}\n/**\n * Check that everything is properly initialized.\n */\nfunction checkInit() {\n    if (!container) {\n        container = document.createElement(\"div\");\n        container.style.cssText = \"position: fixed;\" +\n            \"opacity: 0.9;\" +\n            \"right: 0;\" +\n            \"bottom: 0\";\n        document.body.appendChild(container);\n    }\n    initialized = true;\n}\n/**\n * Start FPS monitor\n */\nfunction startFPSMonitor(flags) {\n    if (flags === void 0) { flags = MonitorWidgetFlags.HideMin | MonitorWidgetFlags.HideMax |\n        MonitorWidgetFlags.HideMean | MonitorWidgetFlags.RoundValues; }\n    checkInit();\n    var data = new MonitorSamples(MonitorMaxSamples);\n    var w = new MonitorWidget(\"FPS\", flags, \"\", data);\n    container.appendChild(w.element);\n    var alpha = 2 / 121;\n    var last = 0;\n    var fps = 60;\n    function update(now) {\n        if (last > 0) {\n            fps += alpha * ((1000 / (now - last)) - fps);\n        }\n        last = now;\n        data.addSample(fps);\n        w.invalidate();\n        requestAnimationFrame(update);\n    }\n    requestAnimationFrame(update);\n}\n/**\n * Start Memory Monitor\n */\nfunction startMemMonitor(flags) {\n    if (flags === void 0) { flags = MonitorWidgetFlags.HideMin | MonitorWidgetFlags.HideMean; }\n    checkInit();\n    if (performance.memory === undefined) {\n        return;\n    }\n    var data = new MonitorSamples(MonitorMaxSamples);\n    var w = new MonitorWidget(\"Memory\", flags, \"MB\", data);\n    container.appendChild(w.element);\n    function update() {\n        data.addSample(Math.round(performance.memory.usedJSHeapSize / (1024 * 1024)));\n        w.invalidate();\n        setTimeout(update, 30);\n    }\n    update();\n}\nvar ProfilerDetails = (function () {\n    function ProfilerDetails(name, unitName, flags) {\n        this.data = new MonitorSamples(MonitorMaxSamples);\n        this.widget = new MonitorWidget(name, flags, unitName, this.data);\n        this.startTime = -1;\n    }\n    return ProfilerDetails;\n}());\nvar profilerInstances = {};\nvar CounterDetails = (function () {\n    function CounterDetails(name, interval) {\n        var _this = this;\n        this.data = interval === undefined ? new BasicCounter() : new SlidingCounter(interval);\n        this.widget = new CounterWidget(name, this.data);\n        this.data.onChange = function () {\n            _this.widget.invalidate();\n        };\n    }\n    return CounterDetails;\n}());\nvar counterInstances = {};\n/**\n * Initialize profiler and insert into container.\n */\nfunction initProfiler(name, flags) {\n    if (flags === void 0) { flags = 0; }\n    checkInit();\n    var profiler = profilerInstances[name];\n    if (profiler === void 0) {\n        profilerInstances[name] = profiler = new ProfilerDetails(name, \"ms\", flags);\n        container.appendChild(profiler.widget.element);\n    }\n}\n/**\n * Initialize counter and insert into container.\n */\nfunction initCounter(name, interval) {\n    checkInit();\n    var counter = counterInstances[name];\n    if (counter === void 0) {\n        counterInstances[name] = counter = new CounterDetails(name, interval);\n        container.appendChild(counter.widget.element);\n    }\n}\nfunction startProfile(name) {\n    var profiler = profilerInstances[name];\n    if (profiler !== void 0) {\n        profiler.startTime = performance.now();\n    }\n}\nfunction endProfile(name) {\n    var now = performance.now();\n    var profiler = profilerInstances[name];\n    if (profiler !== void 0 && profiler.startTime !== -1) {\n        profiler.data.addSample(now - profiler.startTime);\n        profiler.widget.invalidate();\n    }\n}\nfunction count(name, value) {\n    if (value === void 0) { value = 1; }\n    var counter = counterInstances[name];\n    if (counter !== void 0) {\n        counter.data.inc(value);\n    }\n}\n/**\n * lookup a profile by name\n * @param name the name of the profile to lookup\n */\nfunction getProfile(name) {\n    return profilerInstances[name];\n}\n/**\n * lookup a counter by name\n * @param name the name of the counter to lookup\n */\nfunction getCounter(name) {\n    return counterInstances[name];\n}\n\nexport { initPerfMonitor, startFPSMonitor, startMemMonitor, ProfilerDetails, CounterDetails, initProfiler, initCounter, startProfile, endProfile, count, getProfile, getCounter, MonitorSamplesResult, MonitorMaxSamples, MonitorSamples, BasicCounter, SlidingCounter, Widget, MonitorWidgetFlags, MonitorWidget, CounterWidget };\n","import { startFPSMonitor, startMemMonitor, initProfiler } from \"perf-monitor\";\nlet mutations = 0.5;\nlet N = 50;\nexport function getMutations() {\n    return mutations;\n}\nexport function getN() {\n    return N;\n}\nfunction parseQueryString(a) {\n    if (a.length === 0) {\n        return {};\n    }\n    const b = {};\n    for (let i = 0; i < a.length; ++i) {\n        const p = a[i].split(\"=\", 2);\n        if (p.length === 1) {\n            b[p[0]] = \"\";\n        }\n        else {\n            b[p[0]] = decodeURIComponent(p[1].replace(/\\+/g, \" \"));\n        }\n    }\n    return b;\n}\nexport function init() {\n    const qs = parseQueryString(window.location.search.substr(1).split(\"&\"));\n    if (qs[\"n\"] !== void 0) {\n        N = parseInt(qs[\"n\"], 10);\n    }\n    if (qs[\"m\"] !== void 0) {\n        mutations = parseFloat(qs[\"m\"]);\n    }\n    document.addEventListener(\"DOMContentLoaded\", () => {\n        startFPSMonitor();\n        startMemMonitor();\n        initProfiler(\"view update\");\n        const sliderContainer = document.createElement(\"div\");\n        sliderContainer.style.display = \"flex\";\n        const slider = document.createElement(\"input\");\n        slider.type = \"range\";\n        slider.style.marginBottom = \"10px\";\n        slider.style.marginTop = \"5px\";\n        const text = document.createElement(\"label\");\n        text.textContent = \"mutations : \" + (mutations * 100).toFixed(0) + \"%\";\n        slider.addEventListener(\"change\", (e) => {\n            mutations = Number.parseFloat(e.target.value) / 100;\n            text.textContent = \"mutations : \" + (mutations * 100).toFixed(0) + \"%\";\n        });\n        sliderContainer.appendChild(text);\n        sliderContainer.appendChild(slider);\n        document.body.insertBefore(sliderContainer, document.body.firstChild);\n    });\n}\n","import { observable, mut } from \"ivi\";\nfunction randomQuery() {\n    const elapsed = Math.random() * 15;\n    let query;\n    if (Math.random() < 0.1) {\n        query = \"vacuum\";\n    }\n    else if (Math.random() < 0.2) {\n        query = \"<IDLE> in transaction\";\n    }\n    else {\n        query = \"SELECT blah FROM something\";\n    }\n    return { elapsed, query };\n}\nfunction randomQueries() {\n    const queries = [];\n    const r = Math.floor((Math.random() * 10) + 1);\n    for (let i = 0; i < r; i++) {\n        queries.push(randomQuery());\n    }\n    return queries;\n}\nconst EMPTY_QUERY = { elapsed: 0, query: \"***\" };\nlet _nextId = 0;\nfunction createDB(name, id) {\n    if (id === void 0) {\n        id = _nextId++;\n    }\n    return observable({ id, name, queries: randomQueries() });\n}\nexport function getTopFiveQueries(db) {\n    const qs = db.queries.slice(0, 5);\n    qs.sort((a, b) => a.elapsed - b.elapsed);\n    while (qs.length < 5) {\n        qs.push(EMPTY_QUERY);\n    }\n    return qs;\n}\nexport function createState(n) {\n    const state = [];\n    for (let i = 0; i < n; i++) {\n        state.push(createDB(\"cluster\" + (i + 1)));\n        state.push(createDB(\"cluster\" + (i + 1) + \" slave\"));\n    }\n    return state;\n}\nexport function randomUpdate(state, r) {\n    for (let i = 0; i < state.length; i++) {\n        if (Math.random() < r) {\n            mut(state[i]).queries = randomQueries();\n        }\n    }\n}\nexport function entryFormatElapsed(v) {\n    if (v === 0) {\n        return \"\";\n    }\n    if (v > 60) {\n        const minutes = Math.floor(v / 60);\n        const comps = (v % 60).toFixed(2).split(\".\");\n        const seconds = comps[0].padStart(2, \"0\");\n        const ms = comps[1];\n        return minutes + \":\" + seconds + \".\" + ms;\n    }\n    return v.toFixed(2);\n}\n","import { _, withNextFrame, render, requestDirtyCheck, statelessComponent, TrackByKey, key, watch, } from \"ivi\";\nimport { div, span, table, tbody, tr, td } from \"ivi-html\";\nimport { startProfile, endProfile } from \"perf-monitor\";\nimport { init, getN, getMutations } from \"./init\";\nimport { entryFormatElapsed, getTopFiveQueries, createState, randomUpdate } from \"./state\";\ninit();\nconst state = createState(getN());\nconst arrow = div(\"arrow\");\n// const W = component<Op>(() => (c) => c);\nconst Popover = statelessComponent((query) => (div(\"popover left\", _, [\n    div(\"popover-content\", _, query),\n    arrow,\n])));\nconst QueryCell = ({ elapsed, query }) => (td(elapsed >= 10.0 ? \"Query elapsed warn_long\" :\n    elapsed >= 1.0 ? \"Query elapsed warn\" :\n        \"Query elapsed short\", _, [\n    entryFormatElapsed(elapsed),\n    Popover(query),\n]));\nconst DatabaseList = statelessComponent((odb) => {\n    const db = watch(odb);\n    const count = db.queries.length;\n    return tr(_, _, [\n        td(\"dbname\", _, db.name),\n        td(\"query-count\", _, span(count >= 20 ? \"label label-important\" :\n            count >= 10 ? \"label label-warning\" :\n                \"label label-success\", _, count)),\n        getTopFiveQueries(db).map(QueryCell),\n    ]);\n});\nconst Main = (dbs) => (table(\"table table-striped latest-data\", _, [\n    tbody(_, _, TrackByKey(dbs.map((db) => key(db.v.id, DatabaseList(db))))),\n]));\nconst container = document.getElementById(\"app\");\nwithNextFrame(() => { render(Main(state), container); })();\nfunction tick() {\n    randomUpdate(state, getMutations());\n    startProfile(\"view update\");\n    withNextFrame(requestDirtyCheck)();\n    endProfile(\"view update\");\n    setTimeout(tick, 0);\n}\nsetTimeout(tick, 0);\n"],"sourceRoot":""}