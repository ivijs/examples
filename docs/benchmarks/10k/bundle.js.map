{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:////home/void/w/ts/ivi/packages/ivi/src/vdom/operations.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/vdom/factories.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/core/error.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/core/noop.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/core/array.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/core/repeatable_task_list.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/dom/feature_detection.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/dom/shortcuts.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/dom/namespaces.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/vdom/state.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/vdom/context.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/vdom/reconciler.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/core/empty_object.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/vdom/root.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/scheduler/index.ts","webpack:////home/void/w/ts/ivi/packages/ivi-scheduler/src/index.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/vdom/hooks.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/core/shortcuts.ts","webpack:////home/void/w/ts/ivi/packages/ivi-html/src/index.ts","webpack:////home/void/w/ts/ivi-examples/node_modules/perf-monitor/dist/es5/perf-monitor.js","webpack:///./src/main.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","createOpType","f","CONTEXT","TRACK_BY_KEY","createOpNode","Context","v","operations_key","k","TrackByKey","items","elementFactory","tag","flags","type","a","htmlElementFactory","ERROR_HANDLERS","catchError","fn","apply","arguments","e","forEach","h","NOOP","unorderedArrayDeleteByIndex","array","index","length","last","pop","runRepeatableTasks","tasks","opts","[object Object]","window","addEventListener","KeyboardEvent","MouseEvent","IOS_GESTURE_EVENT","nodeProto","Node","shortcuts_elementProto","Element","objectHasOwnProperty","nodeInsertBefore","insertBefore","nodeRemoveChild","removeChild","nodeCloneNode","replaceChild","cloneNode","elementSetAttribute","setAttribute","elementRemoveAttribute","setAttributeNS","removeAttribute","SVG_NAMESPACE","createStateNode","_nextNode","_deepStateFlags","_dirtyContext","_context","setContext","tmp","restoreContext","context","_pushDeepState","_popDeepState","prev","current","getDOMNode","opState","children","_dirtyCheck","parentElement","moveNode","singleChild","state","deepState","_update","_moveNodes","assign","prevContext","domNode","_unmountWalk","u","_unmountRemove","textContent","_unmount","_mountText","op","node","document","createTextNode","_createElement","opType","svg","tagName","createElementNS","createElement","_updateClassName","_updateAttrs","_mountObject","deepStateFlags","prevState","_mount","descriptor","Array","_mountFragment","childrenOps","newChildren","stateNode","nextOp","nodeValue","b","opStateChildren","prevData","nextData","nextValue","su","_updateChildrenTrackByKeys","dirtyContext","j","result","aEnd","bEnd","start","outer","pos","updated","aLength","bLength","sources","keyIndex","Map","set","seq","lis","slice","element","className","_updateStyle","style","bValue","setProperty","removeProperty","matchCount","keys","_updateAttr","next","ROOTS","findRoot","predicate","find","dirtyCheck","root","container","run","_flags","_clock","_microtasks","_mutationEffects","_domLayoutEffects","_beforeMutations","_afterMutations","_frameStartTime","withSchedulerTick","inner","runMicrotasks","clock","scheduleMicrotask","task","cb","push","Promise","resolve","then","withNextFrame","time","performance","now","_handleNextFrame","requestNextFrame","requestAnimationFrame","requestDirtyCheck","render","onclick","useSelect","component","selector","shouldUpdate","prevSelector","props","lastChecked","nextState","nextProps","_","div","span","extendStatics","MonitorWidgetFlags","MonitorMaxSamples","MonitorSamplesResult","min","max","mean","this","MonitorSamples","maxSamples","samples","_i","addSample","each","calc","sum","frameTasks","rafId","__extends","setPrototypeOf","__proto__","__","constructor","MonitorGraphHeight","MonitorGraphWidth","Widget","_this","_sync","sync","_dirty","cssText","invalidate","Error","MonitorWidget","_super","unitName","label","text","HideMin","minText","appendChild","HideMax","maxText","HideMean","meanText","HideLast","lastText","HideGraph","canvas","width","height","ctx","getContext","scale","RoundValues","toFixed","Math","round","toString","fillStyle","fillRect","perf_monitor_container","CounterWidget","counter","checkInit","body","startFPSMonitor","data","w","fps","update","startMemMonitor","undefined","memory","usedJSHeapSize","setTimeout","ProfilerDetails","widget","startTime","profilerInstances","initProfiler","profiler","startProfile","endProfile","randomColor","floor","random","generateData","updateData","mutations","Pixel","getColor","background","factories_component","PixelImage","rows","offset","cols","statelessComponent","sliderContainer","margin","slider","Number","parseFloat","target","firstChild","getElementById","tick"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","import { EventHandler } from \"../events/event_handler\";\nimport { NodeFlags } from \"./node_flags\";\nimport { ElementProtoDescriptor } from \"./element_proto\";\nimport { ComponentDescriptor, StatelessComponentDescriptor } from \"./component\";\n\n/**\n * Operation type.\n */\nexport interface OpType {\n  /**\n   * See {@link NodeFlags} for details.\n   */\n  readonly f: NodeFlags;\n  /**\n   * Operation type descriptor.\n   */\n  readonly d: StatelessComponentDescriptor | ComponentDescriptor | ElementProtoDescriptor | string | null;\n}\n\n/**\n * createOpType creates {@link OpType} instances.\n *\n * @param f See {@link NodeFlags} for details.\n * @param d Operation type descriptor.\n * @returns {@link OpType} instance.\n */\nexport const createOpType = (\n  f: NodeFlags,\n  d: StatelessComponentDescriptor | ComponentDescriptor | ElementProtoDescriptor | string | null,\n): OpType => ({ f, d });\n\n/**\n * OpType for Events nodes.\n */\nexport const EVENTS = createOpType(NodeFlags.Events, null);\n\n/**\n * OpType for Context nodes.\n */\nexport const CONTEXT = createOpType(NodeFlags.Context, null);\n\n/**\n * OpType for TrackByKey nodes.\n */\nexport const TRACK_BY_KEY = createOpType(NodeFlags.TrackByKey, null);\n\n/**\n * Operation node.\n *\n * @typeparam T Operation data type.\n */\nexport interface OpNode<T = any> {\n  /**\n   * Operation type.\n   */\n  readonly t: OpType;\n  /**\n   * Operation data.\n   */\n  readonly d: T;\n}\n\n/**\n * createOpNode creates an {@link OpNode} instance.\n *\n * @typeparam T Operation data type.\n * @param t Operation type.\n * @param d Operation data.\n * @returns {@link OpNode} instance.\n */\nexport const createOpNode = <T>(t: OpType, d: T): OpNode<T> => ({ t, d });\n\n/**\n * Operation data for element operations.\n *\n * @typeparam T Element attributes type.\n */\nexport interface ElementData<T = any> {\n  /**\n   * Element class name.\n   */\n  readonly n: string | undefined;\n  /**\n   * Element attributes.\n   */\n  readonly a: T | undefined;\n  /**\n   * Children operations.\n   */\n  readonly c: Op;\n}\n\n/**\n * Operation.\n */\nexport type Op = string | number | OpNode | OpArray | null;\n\n/**\n * Recursive operation array.\n */\nexport interface OpArray extends Readonly<Array<Op>> { }\n\n/**\n * Generic operation data for operations that has children nodes.\n *\n * @typeparam T Additional data type.\n */\nexport interface OpData<T = any> {\n  /**\n   * Generic value.\n   */\n  readonly v: T;\n  /**\n   * Children operation nodes.\n   */\n  readonly c: Op;\n}\n\n/**\n * Operation data for Events operations.\n */\nexport type EventsData = OpData<EventHandler>;\n\n/**\n * Operation data for Context operations.\n */\nexport type ContextData = OpData<{}>;\n\n/**\n * Operation factory for event handlers.\n *\n * @example\n *\n *     render(\n *       Events(onClick(() => { console.log(\"clicked\"); }),\n *         ChildComponent(),\n *       ),\n *       DOMContainer,\n *     );\n *\n * @param v Event handlers.\n * @param c Children operation nodes.\n * @returns Events handler operation.\n */\nexport const Events = (\n  v: EventHandler,\n  c: Op,\n): OpNode<EventsData> => createOpNode(EVENTS, { v, c });\n\n/**\n * Operation factory for context nodes.\n *\n * @example\n *\n *     render(\n *       Context({ key: 123 },\n *         ChildComponent(),\n *       ),\n *       DOMContainer,\n *     );\n *\n * @param v Context object.\n * @param c Children operation nodes.\n * @returns Context operation.\n */\nexport const Context = (v: {}, c: Op): OpNode<ContextData> => createOpNode(CONTEXT, { v, c });\n\n/**\n * Key is an object that is used by TrackByKey operations to track operations.\n *\n * @typeparam K Key type.\n * @typeparam V Value type.\n */\nexport interface Key<K, V> {\n  /**\n   * Key.\n   */\n  readonly k: K;\n  /**\n   * Value.\n   */\n  readonly v: V;\n}\n\n/**\n * key creates a {@link Key} instance.\n *\n * @typeparam K Key type.\n * @typeparam V Value type.\n * @param k Key.\n * @param v Value.\n * @returns {@link Key} instance.\n */\nexport const key = <K, V>(k: K, v: V): Key<K, V> => ({ k, v });\n\n/**\n * Operation factory for track by key nodes.\n *\n * @example\n *\n *     const items = [1, 2, 3];\n *     render(\n *       TrackByKey(items.map((item) => key(item, div(_, _, item))),\n *       DOMContainer,\n *     );\n *\n * @typeparam K Key type.\n * @param items Keyed operations.\n * @returns Track by key operation.\n */\nexport const TrackByKey = __IVI_DEBUG__ ?\n  <T>(items: Key<T, Op>[]) => {\n    const keys = new Set<T>();\n    for (let i = 0; i < items.length; i++) {\n      const { k } = items[i];\n      if (keys.has(k)) {\n        throw new Error(`Invalid key, found duplicated key: ${k}`);\n      }\n      keys.add(k);\n    }\n    return createOpNode(TRACK_BY_KEY, items);\n  } :\n  /* istanbul ignore next */ <T>(items: Key<T, Op>[]) => createOpNode(TRACK_BY_KEY, items);\n","import { checkElement } from \"../debug/element\";\nimport { NodeFlags } from \"./node_flags\";\nimport { OpNode, Op, ElementData, createOpNode, createOpType } from \"./operations\";\nimport { Component } from \"./component\";\n\n/**\n * elementFactory creates a factory for DOM elements.\n *\n * @param tag HTML element tag name.\n * @param flags Node flags.\n * @returns HTML element operation factory.\n */\nexport function elementFactory<T, U>(tag: string, flags: NodeFlags) {\n  const type = createOpType(flags, tag);\n  return __IVI_DEBUG__ ?\n    (n?: string, a?: T, c: Op = null) => {\n      checkElement(tag, a, (flags & NodeFlags.Svg) !== 0);\n      return createOpNode<ElementData<T>>(type, { n, a, c });\n    } :\n    /* istanbul ignore next */(n?: string, a?: T, c: Op = null) => createOpNode<ElementData<T>>(type, { n, a, c });\n}\n\n/**\n * htmlElementFactory creates a factory for HTML elements.\n *\n * @param tag HTML element tag name.\n * @returns HTML element operation factory.\n */\nexport const htmlElementFactory: <T, U>(tag: string) => (\n  className?: string,\n  attrs?: T,\n  children?: Op,\n) => OpNode<ElementData<T>> = (tag: string) => elementFactory(tag, NodeFlags.Element);\n\n/**\n * svgElementFactory creates a factory for SVG elements.\n *\n * @param tag SVG element tag name.\n * @returns SVG element operation factory.\n */\nexport const svgElementFactory: <T, U>(tag: string) => (\n  className?: string,\n  attrs?: T,\n  children?: Op,\n) => OpNode<ElementData<T>> = (tag: string) => elementFactory(tag, NodeFlags.Element | NodeFlags.Svg);\n\n/**\n * `elementProto()` creates a factory that produces elements with predefined attributes.\n *\n * @example\n *\n *     const DivWithIdAttribute = elementProto(div(_, { id: \"predefined-id\" }));\n *\n *     render(\n *       DivWithIdAttribute(\"class-name\", { title: \"Title\" }, \"Hello World\"),\n *       document.getElementById(\"app\")!,\n *     );\n *\n * @param p Element prototype.\n * @returns Factory that produces elements with predefined attributes.\n */\nexport function elementProto<T>(p: OpNode<ElementData<T>>) {\n  /* istanbul ignore else */\n  if (__IVI_DEBUG__) {\n    if (p.d.c !== null) {\n      throw new Error(`Invalid OpNode, element prototypes can't have any children`);\n    }\n    checkElement(p.t.d as string, p.d.a, (p.t.f & NodeFlags.Svg) !== 0);\n  }\n  const type = createOpType(p.t.f | NodeFlags.ElementProto, { n: null, p });\n  return (n?: string, a?: T, c: Op = null) => createOpNode<ElementData<T>>(type, { n, a, c });\n}\n\n/**\n * component creates a factory that produces component nodes.\n *\n * @example\n *\n *     const A = component<string>(() => {\n *       let _text;\n *       const click = onClick(() => { console.log(_text); });\n *\n *       return (text) => (\n *         _text = text,\n *         Events(click,\n *           button(_, _, \"Click Me\"),\n *         )\n *       );\n *     });\n *\n * @param c Component function.\n * @param shouldUpdate `shouldUpdate` function.\n * @returns Factory that produces component nodes.\n */\nexport function component(\n  c: (c: Component) => () => Op,\n): () => OpNode<undefined>;\n\n/**\n * component creates a factory that produces component nodes.\n *\n * @example\n *\n *     const A = component<string>(() => {\n *       let _text;\n *       const click = onClick(() => { console.log(_text); });\n *\n *       return (text) => (\n *         _text = text,\n *         Events(click,\n *           button(_, _, \"Click Me\"),\n *         )\n *       );\n *     });\n *\n * @param c Component function.\n * @param shouldUpdate `shouldUpdate` function.\n * @returns Factory that produces component nodes.\n */\nexport function component<P>(\n  c: (c: Component) => (props: P) => Op,\n  shouldUpdate?: undefined extends P ? undefined : (prev: P, next: P) => boolean,\n): undefined extends P ? (props?: P) => OpNode<P> : (props: P) => OpNode<P>;\n\n/**\n * component creates a factory that produces component nodes.\n *\n * @example\n *\n *     const A = component<string>(() => {\n *       let _text;\n *       const click = onClick(() => { console.log(_text); });\n *\n *       return (text) => (\n *         _text = text,\n *         Events(click,\n *           button(_, _, \"Click Me\"),\n *         )\n *       );\n *     });\n *\n * @param c Component function.\n * @param su `shouldUpdate` function.\n * @returns Factory that produces component nodes.\n */\nexport function component<P>(\n  c: (c: Component) => (props: P) => Op,\n  su?: (prev: P, next: P) => boolean,\n): (props: P) => OpNode<P> {\n  const type = createOpType(NodeFlags.Component | NodeFlags.Stateful | NodeFlags.DirtyCheck, { c, su });\n  return (props: P) => createOpNode(type, props);\n}\n\n/**\n * statelessComponent creates an factory that produces stateless components nodes.\n *\n * @example\n *\n *     const A = statelessComponent<string>((text) => div(_, _, text));\n *\n * @param update Update function.\n * @param shouldUpdate `shouldUpdate` function.\n * @returns Factory that produces stateless component nodes.\n */\nexport function statelessComponent(\n  update: () => Op,\n): () => OpNode<undefined>;\n\n/**\n * statelessComponent creates an factory that produces stateless components nodes.\n *\n * @example\n *\n *     const A = statelessComponent<string>((text) => div(_, _, text));\n *\n * @param update Update function.\n * @param su `shouldUpdate` function.\n * @returns Factory that produces stateless component nodes.\n */\nexport function statelessComponent<P>(\n  update: (props: P) => Op,\n  su?: undefined extends P ? undefined : (prev: P, next: P) => boolean,\n): undefined extends P ? (props?: P) => OpNode<P> : (props: P) => OpNode<P>;\n\n/**\n * statelessComponent creates an factory that produces stateless components nodes.\n *\n * @example\n *\n *     const A = statelessComponent<string>((text) => div(_, _, text));\n *\n * @param c Update function.\n * @param su `shouldUpdate` function.\n * @returns Factory that produces stateless component nodes.\n */\nexport function statelessComponent<P>(\n  c: (props: P) => Op,\n  su?: undefined extends P ? undefined : (prev: P, next: P) => boolean,\n): (props: P) => OpNode<P> {\n  const type = createOpType(NodeFlags.Component, { c, su });\n  return (props: P) => createOpNode(type, props);\n}\n","const ERROR_HANDLERS: Array<(e: any) => void> = [];\n\n/**\n * addErrorHandler adds an error handler for errors catched by functions decorated with `catchError()`.\n *\n * @param handler error handler.\n */\nexport function addErrorHandler(handler: (e: any) => void): void {\n  ERROR_HANDLERS.push(handler);\n}\n\n/**\n * catchError is a decorator that catches exceptions and invokes error handlers registered with `addErrorHandler()`.\n *\n * @noinline\n * @throws\n * @param fn - Function to decorate\n * @returns function decorated with a catchError\n */\nexport function catchError<T>(fn: (...args: any[]) => T): (...args: any[]) => T;\nexport function catchError<T>(fn: Function): (...args: any[]) => T {\n  return function () {\n    try {\n      return fn.apply(void 0, arguments);\n    } catch (e) {\n      ERROR_HANDLERS.forEach((h) => { h(e); });\n      throw e;\n    }\n  };\n}\n","/**\n * NOOP function.\n */\nexport const NOOP = () => { /**/ };\n\n/**\n * NOOP_FALSE function always returns `false` value.\n *\n * @returns `false` value.\n */\nexport const NOOP_FALSE = () => false;\n\n/**\n * NOOP_TRUE function always returns `true` value.\n *\n * @returns `true` value.\n */\nexport const NOOP_TRUE = () => true;\n","/**\n * append pushes item to an array and automatically creates a new array when it doesn't exist.\n *\n * @typeparam T Item type.\n * @param array Array.\n * @param item Item to append.\n * @returns Array.\n */\nexport const append = <T>(array: T[] | null, item: T) => array === null ? [item] : (array.push(item), array);\n\n/**\n * unorderedArrayDeleteByIndex deletes item from an array with O(1) complexity.\n *\n * It swaps item at `index` position with the last item and removes the last one.\n *\n * @typeparam T Item type.\n * @param array Array.\n * @param index Index of an item to delete.\n */\nexport function unorderedArrayDeleteByIndex<T>(array: T[], index: number): void {\n  const length = array.length - 1;\n  const last = array.pop();\n  if (index !== length) {\n    array[index] = last!;\n  }\n}\n\n/**\n * unorderedArrayDelete deletes item from an array with O(1) complexity.\n *\n * It swaps item at `index` position with the last item and deletes the last one.\n *\n * @typeparam T Item type.\n * @param array Array.\n * @param item Item to delete.\n */\nexport function unorderedArrayDelete<T>(array: T[], item: T): void {\n  const index = array.indexOf(item);\n  /* istanbul ignore else */\n  if (__IVI_DEBUG__) {\n    if (index === -1) {\n      throw new Error(`Failed to delete an item from an array, item doesn't exist in the array`);\n    }\n  }\n  unorderedArrayDeleteByIndex(array, index);\n}\n","import { unorderedArrayDeleteByIndex } from \"./array\";\n\n/**\n * RepeatableTaskList is a data structure for tasks that will be repeated until they return `true` value.\n */\nexport type RepeatableTaskList = Array<() => boolean | void>;\n\n/**\n * runRepeatableTasks runs repeatable tasks.\n *\n * @param tasks Repeatable tasks.\n */\nexport function runRepeatableTasks(tasks: RepeatableTaskList): void {\n  for (let i = 0; i < tasks.length; ++i) {\n    if (tasks[i]() === true) {\n      unorderedArrayDeleteByIndex(tasks, i--);\n    }\n  }\n}\n","/**\n * Feature Detection is used to implement polyfills or just disable some features when browser doesn't support them.\n * For example, when browser doesn't support passive events, we can just ignore it and always use active events.\n */\n\n/* istanbul ignore next */\n/**\n * Passive event listeners are a new feature in the DOM spec that enable developers to opt-in to better scroll\n * performance by eliminating the need for scrolling to block on touch and wheel event listeners. Developers can\n * annotate touch and wheel listeners with {passive: true} to indicate that they will never invoke preventDefault.\n *\n * https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n */\nexport const PASSIVE_EVENTS = /*#__PURE__*/((__IVI_TARGET__ === \"electron\") ? true :\n  (() => {\n    let v = false;\n    try {\n      // Test via a getter in the options object to see if the passive property is accessed\n      const opts = Object.defineProperty({}, \"passive\", {\n        get() {\n          v = true;\n        },\n      });\n      window.addEventListener(\"test\", null as any as (ev: Event) => void, opts);\n    } catch (e) {\n      // ignore\n    }\n    return v;\n  })());\n\n/* istanbul ignore next */\n/**\n * `key` property is available on KeyboardEvent instances.\n */\nexport const KEYBOARD_EVENT_KEY = /*#__PURE__*/(\n  (__IVI_TARGET__ === \"electron\") ||\n  (__IVI_TARGET__ === \"evergreen\") ||\n  KeyboardEvent.prototype.hasOwnProperty(\"key\")\n);\n\n/* istanbul ignore next */\n/**\n * `buttons` property is available on MouseEvent instances.\n */\nexport const MOUSE_EVENT_BUTTONS = /*#__PURE__*/(\n  (__IVI_TARGET__ === \"electron\") ||\n  (__IVI_TARGET__ === \"evergreen\") ||\n  MouseEvent.prototype.hasOwnProperty(\"buttons\")\n);\n\n/* istanbul ignore next */\n/**\n * Touch Events support.\n */\nexport const TOUCH_EVENTS = (\"ontouchstart\" in window);\n\n/* istanbul ignore next */\n/**\n * Pointer Events support.\n */\nexport const POINTER_EVENTS = ((__IVI_TARGET__ === \"electron\") || (\"PointerEvent\" in window));\n\n/* istanbul ignore next */\n/**\n * InputDeviceCapabilities support.\n *\n * http://wicg.github.io/InputDeviceCapabilities/\n */\nexport const INPUT_DEVICE_CAPABILITIES = ((__IVI_TARGET__ === \"electron\") || \"InputDeviceCapabilities\" in window);\n\n/* istanbul ignore next */\n/**\n * iOS proprietary GestureEvent.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/GestureEvent}\n */\nexport const IOS_GESTURE_EVENT = (__IVI_TARGET__ !== \"electron\") && (\"GestureEvent\" in window);\n","const nodeProto = Node.prototype;\nconst elementProto = Element.prototype;\n\n/**\n * Shortcut for an `Object.prototype.hasOwnProperty`.\n */\nexport const objectHasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Shortcut for a `Node.prototype.insertBefore`.\n */\nexport const nodeInsertBefore = (\n  __IVI_DEBUG__ ?\n    function <T extends Node>(this: Node, newChild: T, refChild: Node | null): T {\n      return this.insertBefore(newChild, refChild);\n    } :\n    /* istanbul ignore next */nodeProto.insertBefore\n);\n\n/**\n * Shortcut for a `Node.prototype.removeChild`.\n */\nexport const nodeRemoveChild = (\n  __IVI_DEBUG__ ?\n    function <T extends Node>(this: Node, oldChild: T): T {\n      return this.removeChild(oldChild);\n    } :\n    /* istanbul ignore next */nodeProto.removeChild\n);\n\n/**\n * Shortcut for a `Node.prototype.replaceChild`.\n */\nexport const nodeReplaceChild = (\n  __IVI_DEBUG__ ?\n    function <T extends Node>(this: Node, newChild: Node, oldChild: T): T {\n      return this.replaceChild(newChild, oldChild);\n    } :\n    /* istanbul ignore next */nodeProto.replaceChild\n);\n\n/**\n * Shortcut for a `Node.prototype.cloneNode`.\n */\nexport const nodeCloneNode = (\n  __IVI_DEBUG__ ?\n    function (this: Node, deep?: boolean): Node {\n      return this.cloneNode(deep);\n    } :\n    /* istanbul ignore next */nodeProto.cloneNode\n);\n\n/**\n * Shortcut for an `Element.prototype.setAttribute`.\n */\nexport const elementSetAttribute = (\n  __IVI_DEBUG__ ?\n    function (this: Element, qualifiedName: string, value: string): void {\n      this.setAttribute(qualifiedName, value);\n    } :\n    /* istanbul ignore next */elementProto.setAttribute\n);\n\n/**\n * Shortcut for an `Element.prototype.setAttributeNS`.\n */\nexport const elementSetAttributeNS = (\n  __IVI_DEBUG__ ?\n    function (this: Element, namespace: string | null, qualifiedName: string, value: string): void {\n      this.setAttributeNS(namespace, qualifiedName, value);\n    } :\n    /* istanbul ignore next */elementProto.setAttributeNS\n);\n\n/**\n * Shortcut for an `Element.prototype.removeAttribute`.\n */\nexport const elementRemoveAttribute = (\n  __IVI_DEBUG__ ?\n    function (this: Element, qualifiedName: string): void {\n      this.removeAttribute(qualifiedName);\n    } :\n    /* istanbul ignore next */elementProto.removeAttribute\n);\n","export const SVG_NAMESPACE = \"http://www.w3.org/2000/svg\";\nexport const XLINK_NAMESPACE = \"http://www.w3.org/1999/xlink\";\nexport const XML_NAMESPACE = \"http://www.w3.org/XML/1998/namespace\";\n","import { NodeFlags } from \"./node_flags\";\nimport { Op } from \"./operations\";\n\n/**\n * Operation state.\n *\n * @typeparam T Internal state type.\n */\nexport interface OpState<T = any> {\n  /**\n   * Operation.\n   */\n  o: Op;\n  /**\n   * See {@link NodeFlags} for details.\n   */\n  f: NodeFlags;\n  /**\n   * State for children operations.\n   */\n  c: OpState | Array<OpState | null> | null;\n  /**\n   * Current state.\n   */\n  s: T;\n}\n\n/**\n * createStateNode creates a {@link StateNode} instance.\n *\n * @param op Operation.\n * @returns {@link StateNode} instance.\n */\nexport const createStateNode = (o: Op): OpState => (\n  { o, f: 0, c: null, s: null }\n);\n","import { EMPTY_OBJECT } from \"../core\";\n\n/**\n * Current context.\n */\nlet _context = EMPTY_OBJECT;\n\n/**\n * Used for detecting invalid `context()` invocations in DEBUG mode.\n */\nlet _contextEnabled = false;\n\n/**\n * Enable checking for invalid `context()` invocations in DEBUG mode.\n */\nexport function enableContext() {\n  _contextEnabled = true;\n}\n\n/**\n * Disable checking for invalid `context()` invocations in DEBUG mode.\n */\nexport function disableContext() {\n  _contextEnabled = false;\n}\n\n/**\n * setContext assigns current context.\n *\n * Should be executed before going deeper into Context node.\n *\n * @param c Current context.\n * @returns previous context\n */\nexport function setContext(c: {}): {} {\n  const tmp = _context;\n  _context = c;\n  return tmp;\n}\n\n/**\n * restoreContext restores previous context.\n *\n * Should be executed after processing Context node.\n *\n * @param c Previous context.\n */\nexport function restoreContext(c: {}): void {\n  _context = c;\n}\n\n/**\n * context retrieves current context.\n *\n * @typeparam Context type.\n * @returns current context\n */\nexport function context<T extends {}>(): T {\n  /* istanbul ignore else */\n  if (__IVI_DEBUG__) {\n    if (!_contextEnabled) {\n      throw new Error(`Invalid context() invocation. Context can't be used outside of a reconciliation phase`);\n    }\n  }\n  return _context as T;\n}\n","import {\n  objectHasOwnProperty, nodeInsertBefore, nodeRemoveChild, elementSetAttribute, nodeCloneNode, elementRemoveAttribute,\n} from \"../dom/shortcuts\";\nimport { SVG_NAMESPACE } from \"../dom/namespaces\";\nimport { CSSStyleProps } from \"../dom/style\";\nimport { NodeFlags } from \"./node_flags\";\nimport { AttributeDirective } from \"./attribute_directive\";\nimport { OpNode, ElementData, OpArray, Key, OpData, ContextData, Op, EventsData } from \"./operations\";\nimport { OpState, createStateNode } from \"./state\";\nimport { ElementProtoDescriptor } from \"./element_proto\";\nimport { ComponentDescriptor, ComponentHooks, StatelessComponentDescriptor } from \"./component\";\nimport { context, setContext, restoreContext } from \"./context\";\n\nlet _nextNode!: Node | null;\nlet _deepStateFlags!: NodeFlags;\nlet _dirtyContext!: boolean;\n\nexport function _resetState(): void {\n  _nextNode = null;\n  _deepStateFlags = 0;\n  _dirtyContext = false;\n}\n\nfunction _pushDeepState(): NodeFlags {\n  const s = _deepStateFlags;\n  _deepStateFlags = 0;\n  return s;\n}\n\nfunction _popDeepState(prev: NodeFlags, current: NodeFlags): NodeFlags {\n  const r = current | _deepStateFlags;\n  _deepStateFlags |= prev;\n  return r;\n}\n\nexport function visitNodes(\n  currentOpState: OpState,\n  filter: NodeFlags,\n  visitor: (opState: OpState) => void | boolean,\n): boolean {\n  const flags = currentOpState.f;\n  if ((flags & filter) === filter) {\n    if (visitor(currentOpState) === true) {\n      return true;\n    }\n  }\n\n  const children = currentOpState.c;\n  if ((flags & (NodeFlags.Fragment | NodeFlags.TrackByKey)) !== 0) {\n    for (let i = 0; i < (children as Array<OpState | null>).length; i++) {\n      const c = (children as Array<OpState | null>)[i];\n      if (c !== null) {\n        if (visitNodes(c, filter, visitor) === true) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n  if (children !== null) {\n    return visitNodes(children as OpState, filter, visitor);\n  }\n  return false;\n}\n\n/**\n * getDOMNode retrieves closest DOM node from the {@link OpState} instance.\n *\n * @param opState State node.\n * @returns DOM node.\n */\nexport function getDOMNode(opState: OpState): Node | null {\n  const flags = opState.f;\n  if ((flags & (NodeFlags.Element | NodeFlags.Text)) === 0) {\n    const children = opState.c;\n    if ((flags & (NodeFlags.Fragment | NodeFlags.TrackByKey)) !== 0) {\n      for (let i = 0; i < (children as Array<OpState | null>).length; i++) {\n        const c = (children as Array<OpState | null>)[i];\n        if (c !== null) {\n          return getDOMNode(c);\n        }\n      }\n      return null;\n    }\n    if (children === null) {\n      return null;\n    }\n    return getDOMNode(children as OpState);\n  }\n  return opState.s as Node;\n}\n\nexport function _dirtyCheck(\n  parentElement: Element,\n  opState: OpState,\n  moveNode: boolean,\n  singleChild: boolean,\n): void {\n  const { f, c } = opState;\n  let state;\n  let deepState;\n  let i;\n\n  if ((f & NodeFlags.Component) !== 0) {\n    state = opState.s as ComponentHooks;\n    deepState = _pushDeepState();\n    if (\n      ((f & NodeFlags.Stateful) !== 0) && (\n        ((f & NodeFlags.Dirty) !== 0) ||\n        (state.s !== null && state.s() === true)\n      )\n    ) {\n      opState.c = _update(\n        parentElement,\n        c as OpState,\n        state.r!((opState.o as OpNode).d),\n        moveNode,\n        singleChild,\n      );\n    } else if ((f & NodeFlags.DeepStateDirtyCheck) !== 0) {\n      _dirtyCheck(parentElement, c as OpState, moveNode, singleChild);\n    } else {\n      if (moveNode === true) {\n        _moveNodes(parentElement, opState);\n      } else {\n        _nextNode = getDOMNode(opState);\n      }\n    }\n    opState.f = (opState.f & NodeFlags.SelfFlags) | _deepStateFlags;\n    _deepStateFlags |= deepState | ((opState.f & NodeFlags.DeepStateFlags) << NodeFlags.DeepStateShift);\n  } else if ((f & NodeFlags.DeepStateDirtyCheck) !== 0) {\n    deepState = _pushDeepState();\n    if ((f & (NodeFlags.Element | NodeFlags.Text)) !== 0) {\n      state = opState.s as Node;\n      if (moveNode === true) {\n        nodeInsertBefore.call(parentElement, state, _nextNode);\n      }\n      if (c !== null) {\n        _dirtyCheck(state as Element, c as OpState, false, true);\n      }\n      _nextNode = state;\n    } else if ((f & (NodeFlags.Fragment | NodeFlags.TrackByKey)) !== 0) {\n      i = (c as Array<OpState | null>).length;\n      while (--i >= 0) {\n        if ((state = (c as Array<OpState | null>)[i]) !== null) {\n          _dirtyCheck(parentElement, state, moveNode, false);\n        }\n      }\n    } else if ((f & NodeFlags.Events) !== 0) {\n      _dirtyCheck(parentElement, opState.c as OpState, moveNode, singleChild);\n    } else { // Context\n      if (_dirtyContext === true) {\n        opState.s = { ...context(), ...(opState.o as OpNode<ContextData>).d.v };\n      }\n      const prevContext = setContext(opState.s as {});\n      _dirtyCheck(parentElement, opState.c as OpState, moveNode, singleChild);\n      restoreContext(prevContext);\n    }\n    opState.f = _popDeepState(deepState, opState.f);\n  } else {\n    if (moveNode === true) {\n      _moveNodes(parentElement, opState);\n    } else {\n      _nextNode = getDOMNode(opState);\n    }\n  }\n}\n\nfunction _moveNodes(parentElement: Element, opState: OpState) {\n  const flags = opState.f;\n  if ((flags & (NodeFlags.Element | NodeFlags.Text)) !== 0) {\n    const domNode = opState.s as Node;\n    nodeInsertBefore.call(parentElement, domNode, _nextNode);\n    _nextNode = domNode;\n  } else {\n    const children = opState.c;\n    if ((flags & (NodeFlags.Fragment | NodeFlags.TrackByKey)) !== 0) {\n      let i = (children as Array<OpState | null>).length;\n      while (--i >= 0) {\n        const c = (children as Array<OpState | null>)[i];\n        if (c !== null) {\n          _moveNodes(parentElement, c);\n        }\n      }\n    } else if (children !== null) {\n      _moveNodes(parentElement, children as OpState);\n    }\n  }\n}\n\nfunction _unmountWalk(opState: OpState): void {\n  const flags = opState.f;\n  let i;\n  let v;\n\n  if ((flags & NodeFlags.DeepStateUnmount) !== 0) {\n    const children = opState.c;\n    if (children !== null) {\n      if ((flags & (NodeFlags.Fragment | NodeFlags.TrackByKey)) !== 0) {\n        for (i = 0; i < (children as Array<OpState | null>).length; i++) {\n          if ((v = (children as Array<OpState | null>)[i]) !== null) {\n            _unmountWalk(v);\n          }\n        }\n      } else {\n        _unmountWalk(children as OpState);\n      }\n    }\n  }\n\n  if ((flags & NodeFlags.Unmount) !== 0) {\n    v = (opState.s as ComponentHooks).u;\n    if (v !== null) {\n      if (typeof v === \"function\") {\n        v();\n      } else {\n        for (i = 0; i < v.length; i++) {\n          v[i](true);\n        }\n      }\n    }\n  }\n}\n\nfunction _unmountRemove(parentElement: Element, opState: OpState, singleChild: boolean): void {\n  const flags = opState.f;\n\n  if ((flags & (NodeFlags.Element | NodeFlags.Text)) !== 0) {\n    nodeRemoveChild.call(parentElement, opState.s as Node);\n  } else {\n    const children = opState.c;\n    if ((flags & (NodeFlags.TrackByKey | NodeFlags.Fragment)) !== 0) {\n      if (singleChild === true) {\n        parentElement.textContent = \"\";\n      } else {\n        for (let i = 0; i < (children as Array<OpState | null>).length; ++i) {\n          const c = (children as Array<OpState | null>)[i];\n          if (c !== null) {\n            _unmountRemove(parentElement, c, false);\n          }\n        }\n      }\n    } else if (children !== null) {\n      _unmountRemove(parentElement, children as OpState, singleChild);\n    }\n  }\n}\n\nexport function _unmount(parentElement: Element, opState: OpState, singleChild: boolean): void {\n  _unmountRemove(parentElement, opState, singleChild);\n  _unmountWalk(opState);\n}\n\nfunction _mountText(\n  parentElement: Element,\n  opState: OpState,\n  op: string | number,\n) {\n  const node = document.createTextNode(op as string);\n  nodeInsertBefore.call(parentElement, node, _nextNode);\n  _nextNode = node;\n  opState.s = node;\n  opState.f = NodeFlags.Text;\n}\n\nfunction _createElement(node: Element | undefined, op: OpNode<ElementData>): Element {\n  const opType = op.t;\n  const { n, a } = op.d;\n  const svg = (opType.f & NodeFlags.Svg) !== 0;\n  if (node === void 0) {\n    const tagName = opType.d as string;\n    node = svg ?\n      document.createElementNS(SVG_NAMESPACE, tagName) :\n      document.createElement(tagName);\n  }\n\n  if (n) {\n    _updateClassName(node, n, svg);\n  }\n\n  if (a !== void 0) {\n    _updateAttrs(node, void 0, a);\n  }\n\n  return node;\n}\n\nfunction _mountObject(\n  parentElement: Element,\n  opState: OpState,\n  op: OpNode,\n): void {\n  const { t, d } = op;\n  const flags = t.f;\n  let deepStateFlags;\n  let prevState;\n  let value;\n\n  if ((flags & NodeFlags.Component) !== 0) {\n    deepStateFlags = _pushDeepState();\n    if ((flags & NodeFlags.Stateful) !== 0) {\n      opState.s = prevState = { r: null, s: null, u: null } as ComponentHooks;\n      // Reusing value variable.\n      (prevState as ComponentHooks).r = value = (op.t.d as ComponentDescriptor).c(opState);\n    } else {\n      value = (op.t.d as StatelessComponentDescriptor).c;\n    }\n    opState.c = _mount(parentElement, value(d));\n    opState.f = (opState.f & NodeFlags.SelfFlags) | flags | _deepStateFlags;\n    _deepStateFlags |= deepStateFlags | ((opState.f & NodeFlags.DeepStateFlags) << NodeFlags.DeepStateShift);\n  } else {\n    deepStateFlags = _pushDeepState();\n    if ((flags & NodeFlags.Element) !== 0) {\n      const descriptor = t.d;\n      let node: Element | undefined;\n      if ((flags & NodeFlags.ElementProto) !== 0) {\n        node = (descriptor as ElementProtoDescriptor).n as Element;\n        if (node === null) {\n          (descriptor as ElementProtoDescriptor).n = node = _createElement(\n            void 0,\n            (descriptor as ElementProtoDescriptor).p,\n          );\n        }\n        node = nodeCloneNode.call(node, false) as Element;\n      }\n      opState.s = node = _createElement(node, op);\n\n      prevState = _nextNode;\n      _nextNode = null;\n      value = d.c;\n      if (value !== null) {\n        opState.c = _mount(node, value);\n      }\n      nodeInsertBefore.call(parentElement, node, prevState);\n      _nextNode = node;\n    } else if ((flags & (NodeFlags.Events | NodeFlags.Context)) !== 0) {\n      if ((flags & NodeFlags.Context) !== 0) {\n        prevState = setContext(\n          opState.s = { ...context(), ...(d as OpData<ContextData>).v },\n        );\n        opState.c = _mount(parentElement, (d as OpData<ContextData>).c);\n        restoreContext(prevState);\n      } else {\n        opState.c = _mount(parentElement, (d as OpData<ContextData>).c);\n      }\n    } else { // ((opFlags & NodeFlags.TrackByKey) !== 0)\n      let i = (d as Key<any, OpNode>[]).length;\n      opState.c = value = Array(i);\n      while (--i >= 0) {\n        value[i] = _mount(parentElement, (d as Key<any, OpNode>[])[i].v);\n      }\n    }\n    opState.f = _popDeepState(deepStateFlags, flags);\n  }\n}\n\nfunction _mountFragment(\n  parentElement: Element,\n  opState: OpState,\n  childrenOps: OpArray,\n): void {\n  let i = childrenOps.length;\n  const newChildren = Array(i);\n  const deepStateFlags = _pushDeepState();\n  while (--i >= 0) {\n    newChildren[i] = _mount(parentElement, childrenOps[i]);\n  }\n  opState.c = newChildren;\n  opState.f = _popDeepState(deepStateFlags, NodeFlags.Fragment);\n}\n\nexport function _mount(\n  parentElement: Element,\n  op: Op,\n): OpState | null {\n  if (op !== null) {\n    const stateNode = createStateNode(op);\n    if (typeof op === \"object\") {\n      if (op instanceof Array) {\n        _mountFragment(parentElement, stateNode, op);\n      } else {\n        _mountObject(parentElement, stateNode, op);\n      }\n    } else {\n      _mountText(parentElement, stateNode, op);\n    }\n    return stateNode;\n  }\n  return null;\n}\n\nfunction _hasDifferentType(\n  a: OpNode | OpArray,\n  b: OpNode | OpArray | string | number,\n): boolean {\n  if (typeof b !== \"object\") {\n    return true;\n  }\n  if (a instanceof Array) {\n    return !(b instanceof Array);\n  }\n  return (b instanceof Array || a.t !== b.t);\n}\n\n/**\n * _update updates a stateNode with a next operation.\n *\n * @param parentElement Parent DOM Element.\n * @param opState Operation state.\n * @param nextOp Next operation.\n * @param moveNode DOM Element should be moved.\n * @param singleChild Parent DOM Element contains a single child.\n * @returns OpNode state.\n */\nexport function _update(\n  parentElement: Element,\n  opState: OpState | null,\n  nextOp: Op,\n  moveNode: boolean,\n  singleChild: boolean,\n): OpState | null {\n  if (nextOp === null) {\n    if (opState !== null) {\n      _unmount(parentElement, opState, singleChild);\n    }\n    return null;\n  }\n  if (opState === null) {\n    return _mount(parentElement, nextOp);\n  }\n  const { o, s } = opState;\n  let flags = opState.f;\n\n  if ((flags & NodeFlags.Text) !== 0) {\n    if (typeof nextOp !== \"object\") {\n      // Reassign to reduce memory consumption even if nextOp is strictly equal to the prev op.\n      opState.o = nextOp;\n      if (o !== nextOp) {\n        (s as Node).nodeValue = nextOp as string;\n      }\n      if (moveNode === true) {\n        nodeInsertBefore.call(parentElement, s as Node, _nextNode);\n      }\n      _nextNode = s as Node;\n    } else {\n      nodeRemoveChild.call(parentElement, s as Node);\n      return _mount(parentElement, nextOp);\n    }\n  } else {\n    // Here we don't need to reassign nextOp because op should always be an object, and strict equality will guarantee\n    // that this object is occupying the same memory region.\n    if (o === nextOp) {\n      _dirtyCheck(parentElement, opState, moveNode, singleChild);\n      return opState;\n    }\n    if (_hasDifferentType(o as OpNode | OpArray, nextOp) === true) {\n      _unmount(parentElement, opState, singleChild);\n      return _mount(parentElement, nextOp);\n    }\n    opState.o = nextOp;\n    const opStateChildren = opState.c;\n    let deepStateFlags;\n    let prevData;\n    let nextData;\n    let nextValue;\n\n    if ((flags & NodeFlags.Component) !== 0) {\n      prevData = (o as OpNode).d;\n      nextData = (nextOp as OpNode).d;\n      const descriptor = ((nextOp as OpNode).t.d as StatelessComponentDescriptor | ComponentDescriptor);\n      if (\n        ((flags & NodeFlags.Dirty) !== 0) ||\n        (\n          (prevData !== nextData) &&\n          (descriptor.su === void 0 || descriptor.su(prevData, nextData) === true)\n        )\n      ) {\n        deepStateFlags = _pushDeepState();\n        opState.c = _update(\n          parentElement,\n          opStateChildren as OpState,\n          ((flags & NodeFlags.Stateful) !== 0) ?\n            (opState.s as ComponentHooks).r!(nextData) :\n            (descriptor as StatelessComponentDescriptor).c(nextData),\n          moveNode,\n          singleChild,\n        );\n        // opState.f can be changed after `_update()`.\n        flags = opState.f;\n        opState.f = (flags & NodeFlags.SelfFlags) | _deepStateFlags;\n        _deepStateFlags |= deepStateFlags | ((flags & NodeFlags.DeepStateFlags) << NodeFlags.DeepStateShift);\n      } else {\n        _dirtyCheck(parentElement, opState, moveNode, singleChild);\n      }\n    } else {\n      deepStateFlags = _pushDeepState();\n      if ((flags & NodeFlags.Element) !== 0) {\n        prevData = (o as OpNode<ElementData>).d;\n        nextData = (nextOp as OpNode<ElementData>).d;\n        if (moveNode === true) {\n          nodeInsertBefore.call(parentElement, s, _nextNode);\n        }\n\n        nextValue = nextData.n;\n        if (prevData.n !== nextValue) {\n          if (nextValue === void 0) {\n            nextValue = \"\";\n          }\n          _updateClassName(s, nextValue, (flags & NodeFlags.Svg) !== 0);\n        }\n\n        nextValue = nextData.a;\n        if (prevData.a !== nextValue) {\n          _updateAttrs(s as Element, prevData.a, nextValue);\n        }\n\n        nextValue = nextData.c;\n        if (prevData.c !== nextValue) {\n          _nextNode = null;\n          opState.c = _update(s as Element, opStateChildren as OpState, nextValue, false, true);\n        }\n\n        _nextNode = s as Node;\n      } else if ((flags & (NodeFlags.Fragment | NodeFlags.TrackByKey)) !== 0) {\n        if ((flags & NodeFlags.Fragment) !== 0) {\n          let i = (nextOp as OpArray).length;\n          // When there is a different length for statically positioned elements, it is much more likely that internal\n          // elements should have a different internal state, so it is better to destroy previous state and instantiate\n          // a new one. This heuristics is slightly different from React, but it should be better at handling some\n          // use cases.\n          if ((opStateChildren as Array<OpState | null>).length === i) {\n            while (--i >= 0) {\n              (opStateChildren as Array<OpState | null>)[i] =\n                _update(\n                  parentElement,\n                  (opStateChildren as Array<OpState | null>)[i],\n                  (nextOp as OpArray)[i],\n                  moveNode,\n                  false);\n            }\n          } else {\n            _unmount(parentElement, opState, singleChild);\n            _mountFragment(parentElement, opState, nextOp as OpArray);\n          }\n        } else {\n          _updateChildrenTrackByKeys(\n            parentElement,\n            opState,\n            (o as OpNode).d,\n            (nextOp as OpNode).d,\n            moveNode,\n            singleChild,\n          );\n        }\n      } else if ((flags & NodeFlags.Events) !== 0) {\n        opState.c = _update(\n          parentElement,\n          opStateChildren as OpState,\n          (nextOp as OpNode<EventsData>).d.c,\n          moveNode,\n          singleChild,\n        );\n      } else { // if ((stateFlags & NodeFlags.Context) !== 0) {\n        const dirtyContext = _dirtyContext;\n        nextData = (nextOp as OpNode<ContextData>).d;\n        nextValue = nextData.v;\n        if ((o as OpNode<ContextData>).d.v !== nextValue || _dirtyContext === true) {\n          opState.s = { ...context(), ...nextValue };\n          _dirtyContext = true;\n        }\n        // reusing variable name, it is actually a previous value in the context stack.\n        nextValue = setContext(opState.s as {});\n        _update(parentElement, opStateChildren as OpState, nextData.c, moveNode, singleChild);\n        restoreContext(nextValue);\n        _dirtyContext = dirtyContext;\n      }\n      opState.f = _popDeepState(deepStateFlags, opState.f);\n    }\n  }\n\n  return opState;\n}\n\n/**\n * Update children list with track by key algorithm.\n *\n * High-level overview of the algorithm that is implemented in this function (slightly outdated, but the key ideas are\n * the same).\n *\n * This algorithm finds a minimum[1] number of DOM operations. It works in several steps:\n *\n * 1. Find common suffix and prefix.\n *\n * This optimization technique is searching for nodes with identical keys by simultaneously iterating over nodes in the\n * old children list `A` and new children list `B` from both sides:\n *\n *  A: -> [a b c d] <-\n *  B: -> [a b d] <-\n *\n * Here we can skip nodes \"a\" and \"b\" at the begininng, and node \"d\" at the end.\n *\n *  A: -> [c] <-\n *  B: -> [] <-\n *\n * Here it will check if the size of one of the list is equal to zero. When length of the old children list is zero,\n * it will insert all remaining nodes from the new list, and when length of the new children list is zero, it will\n * remove all remaining nodes from the old list.\n *\n * When algorithm can't find a solution with this simple optimization technique, it will go to the next step of the\n * algorithm. For example:\n *\n *  A: -> [a b c d e f g] <-\n *  B: -> [a c b h f e g] <-\n *\n * Nodes \"a\" and \"g\" at the edges are the same, skipping them.\n *\n *  A: -> [b c d e f] <-\n *  B: -> [c b h f e] <-\n *\n * Here we are stuck, so we need to switch to the next step.\n *\n * 2. Look for removed and inserted nodes, and simultaneously check if one of the nodes is moved.\n *\n * First we create an array `P` with the length of the new children list and assign to each position value `-1`, it has\n * a meaning of a new node that should be inserted. Later we will assign node positions in the old children list to this\n * array.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *  P: [. . . . .] // . == -1\n *\n * Then we need to build an index `I` that maps keys with node positions of the remaining nodes from the new children\n * list.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *  P: [. . . . .] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1,\n *    h: 2,\n *    f: 3,\n *    e: 4,\n *  }\n *  last = 0\n *\n * With this index, we start to iterate over the remaining nodes from the old children list and check if we can find a\n * node with the same key in the index. If we can't find any node, it means that it should be removed, otherwise we\n * assign position of the node in the old children list to the positions array.\n *\n *  A: [b c d e f]\n *      ^\n *  B: [c b h f e]\n *  P: [. 0 . . .] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1, <-\n *    h: 2,\n *    f: 3,\n *    e: 4,\n *  }\n *  last = 1\n *\n * When we assigning positions to the positions array, we also keep a position of the last seen node in the new children\n * list, if the last seen position is larger than current position of the node at the new list, then we are switching\n * `moved` flag to `true`.\n *\n *  A: [b c d e f]\n *        ^\n *  B: [c b h f e]\n *  P: [1 0 . . .] // . == -1\n *  I: {\n *    c: 0, <-\n *    b: 1,\n *    h: 2,\n *    f: 3,\n *    e: 4,\n *  }\n *  last = 1 // last > 0; moved = true\n *\n * The last position `1` is larger than current position of the node at the new list `0`, switching `moved` flag to\n * `true`.\n *\n *  A: [b c d e f]\n *          ^\n *  B: [c b h f e]\n *  P: [1 0 . . .] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1,\n *    h: 2,\n *    f: 3,\n *    e: 4,\n *  }\n *  moved = true\n *\n * Node with key \"d\" doesn't exist in the index, removing node.\n *\n *  A: [b c d e f]\n *            ^\n *  B: [c b h f e]\n *  P: [1 0 . . 3] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1,\n *    h: 2,\n *    f: 3,\n *    e: 4, <-\n *  }\n *  moved = true\n *\n * Assign position for `e`.\n *\n *  A: [b c d e f]\n *              ^\n *  B: [c b h f e]\n *  P: [1 0 . 4 3] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1,\n *    h: 2,\n *    f: 3, <-\n *    e: 4,\n *  }\n *  moved = true\n *\n * Assign position for 'f'.\n *\n * At this point we are checking if `moved` flag is on, or if the length of the old children list minus the number of\n * removed nodes isn't equal to the length of the new children list. If any of this conditions is true, then we are\n * going to the next step.\n *\n * 3. Find minimum number of moves if `moved` flag is on, or insert new nodes if the length is changed.\n *\n * When `moved` flag is on, we need to find the\n * [longest increasing subsequence](http://en.wikipedia.org/wiki/Longest_increasing_subsequence) in the positions array,\n * and move all nodes that doesn't belong to this subsequence.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *  moved = true\n *\n * Now we just need to simultaneously iterate over the new children list and LIS from the end and check if the current\n * position is equal to a value from LIS.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *              ^  // new_pos == 4\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *              ^  // new_pos == 4\n *  moved = true\n *\n * Node \"e\" stays at the same place.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *            ^    // new_pos == 3\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *            ^    // new_pos != 1\n *  moved = true\n *\n * Node \"f\" is moved, move it before the next node \"e\".\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *          ^      // new_pos == 2\n *  P: [1 0 . 4 3] // . == -1\n *          ^      // old_pos == -1\n *  LIS:     [1 4]\n *            ^\n *  moved = true\n *\n * Node \"h\" has a `-1` value in the positions array, insert new node \"h\".\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *        ^        // new_pos == 1\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *            ^    // new_pos == 1\n *  moved = true\n *\n * Node \"b\" stays at the same place.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *      ^          // new_pos == 0\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *          ^      // new_pos != undefined\n *  moved = true\n *\n * Node \"c\" is moved, move it before the next node \"b\".\n *\n * When moved flag is off, we don't need to find LIS, and we just iterate over the new children list and check its\n * current position in the positions array, if it is `-1`, then we insert new node.\n *\n * [1] Actually it is almost minimum number of dom ops, when node is removed and another one is inserted at the same\n * place, instead of insert and remove dom ops, we can use one replace op. It will make everything even more\n * complicated, and other use cases will be slower, so I don't think that it is worth to use replace here.\n *\n * @param parentElement Parent DOM element.\n * @param opState OpNode state for a TrackByKey operation.\n * @param a Previous operations.\n * @param b Next operations.\n * @param moveNode Children DOM nodes should be moved.\n * @param singleChild Parent DOM element contains a single node.\n * @noinline\n */\nfunction _updateChildrenTrackByKeys(\n  parentElement: Element,\n  opState: OpState,\n  a: Key<any, OpNode>[],\n  b: Key<any, OpNode>[],\n  moveNode: boolean,\n  singleChild: boolean,\n): void {\n  let i = b.length;\n  let j: number | undefined = a.length;\n  const result = Array(i);\n\n  if (i === 0) { // New children list is empty.\n    if (j > 0) { // Unmount nodes from the old children list.\n      _unmount(parentElement, opState, singleChild);\n    }\n  } else if (j === 0) { // Old children list is empty.\n    while (--i >= 0) { // Mount nodes from the new children list.\n      result[i] = _mount(parentElement, b[i].v);\n    }\n  } else {\n    const opStateChildren = opState.c as Array<OpState | null>;\n    let aEnd = j - 1; // a.length - 1\n    let bEnd = i - 1; // b.length - 1\n    let start = 0;\n    let node: OpNode | Key<any, OpNode> | OpState | null = b[bEnd];\n\n    // Step 1\n    outer: while (true) {\n      // Update nodes with the same key at the end.\n      while (a[aEnd].k === node.k) {\n        result[bEnd] = _update(parentElement, opStateChildren[aEnd--], node.v, moveNode, false);\n        if (start > --bEnd || start > aEnd) {\n          break outer;\n        }\n        node = b[bEnd];\n      }\n\n      // Update nodes with the same key at the beginning.\n      while (a[start].k === b[start].k) {\n        // delayed update (all updates should be performed from right-to-left).\n        if (++start > aEnd || start > bEnd) {\n          break outer;\n        }\n      }\n\n      break;\n    }\n\n    if (start > aEnd) {\n      // All nodes from `a` are updated, insert the rest from `b`.\n      while (bEnd >= start) {\n        result[bEnd] = _mount(parentElement, b[bEnd--].v);\n      }\n    } else if (start > bEnd) {\n      // All nodes from `b` are updated, remove the rest from `a`.\n      i = start;\n      do {\n        if ((node = opStateChildren[i++]) !== null) {\n          _unmount(parentElement, node, false);\n        }\n      } while (i <= aEnd);\n    } else { // Step 2\n      // When `pos === -1`, it means that one of the nodes is in the wrong position and we should rearrange nodes with\n      // lis-based algorithm.\n      let pos = 0;\n      // Number of updated nodes after prefix/suffix phase. It is used for an optimization that removes all child nodes\n      // with `textContent=\"\"` when there are no updated nodes.\n      let updated = 0;\n\n      const aLength = aEnd - start + 1;\n      const bLength = bEnd - start + 1;\n      const sources = Array(bLength); // Maps positions in the new children list to positions in the old children list.\n      const keyIndex = new Map<any, number>(); // Maps keys to their positions in the new children list.\n      for (i = 0; i < bLength; ++i) {\n        j = i + start;\n        sources[i] = -1; // Special value `-1` indicates that node doesn't exist in the old children list.\n        keyIndex.set(b[j].k, j);\n      }\n\n      for (i = start; i <= aEnd && updated < bLength; ++i) {\n        j = keyIndex.get(a[i].k);\n        if (j !== void 0) {\n          pos = (j < pos) ? j : -1;\n          ++updated;\n          sources[j - start] = i;\n          result[j] = opStateChildren[i];\n          // remove updated nodes from previous array, so that we could remove the rest from the document.\n          opStateChildren[i] = null;\n        }\n      }\n\n      if (aLength === a.length && updated === 0) {\n        // Zero updated nodes in step 1 and 2, remove all nodes and insert new ones.\n        _unmount(parentElement, opState, singleChild);\n        while (bEnd >= 0) {\n          result[bEnd] = _mount(parentElement, b[bEnd--].v);\n        }\n      } else {\n        // Step 3\n        // Remove nodes that weren't updated in the old children list.\n        for (i = start; i <= aEnd; i++) {\n          if ((node = opStateChildren[i]) !== null) {\n            _unmount(parentElement, node, false);\n          }\n        }\n\n        i = bLength;\n        if (moveNode === true || pos !== -1) {\n          while (--i >= 0) {\n            pos = start + i;\n            node = b[pos].v;\n            result[pos] = (sources[i] === -1) ?\n              _mount(parentElement, node) :\n              _update(parentElement, result[pos], node, moveNode, false);\n          }\n        } else {\n          const seq = lis(sources);\n          j = seq.length - 1;\n          while (--i >= 0) {\n            pos = start + i;\n            node = b[pos].v;\n            if (sources[i] === -1) {\n              result[pos] = _mount(parentElement, node);\n            } else {\n              if (j < 0 || i !== seq[j]) {\n                moveNode = true;\n              } else {\n                --j;\n              }\n              result[pos] = _update(parentElement, result[pos], node, moveNode, false);\n              moveNode = false;\n            }\n          }\n        }\n      }\n    }\n\n    // update nodes from Step 1 (prefix only)\n    while (--start >= 0) {\n      result[start] = _update(parentElement, opStateChildren[start], b[start].v, moveNode, false);\n    }\n  }\n  opState.c = result;\n}\n\n/**\n * Slightly modified Longest Increased Subsequence algorithm, it ignores items that have -1 value, they're representing\n * new items.\n *\n * {@link http://en.wikipedia.org/wiki/Longest_increasing_subsequence}\n *\n * It is possible to use typed arrays in this function, and it will make it faster in most javascript engines, but for\n * some reason instantiating small typed arrays is slower in synthetic microbenchmarks on V8\n * {@link https://gist.github.com/localvoid/88da772d987794605f7fa4a078bce4d6} (maybe there is something wrong in this\n * benchmarks, if someone want to spend more time on optimizations, I'd recommend to double check everything).\n *\n * To solve problem with instantiation, we could just reuse arrays, but in my opinion it isn't worth to overcomplicate\n * this algorithm since it is already extremely fast and it is highly unlikely that it will be even noticeable in the\n * profiler. Usually when there is an update in the real applications, it triggers reordering of one dynamic children\n * list, that is why I prefer to keep it simple.\n *\n * @param a - Array of numbers\n * @returns Longest increasing subsequence\n * @noinline\n */\nfunction lis(a: number[]): number[] {\n  const p = a.slice();\n  // result is instantiated as an empty array to prevent instantiation with CoW backing store.\n  const result: number[] = [];\n  let n = 0;\n  let i = 0;\n  let u: number;\n  let v: number;\n  let j: number;\n\n  result[0] = 0;\n  for (; i < a.length; ++i) {\n    const k = a[i];\n    if (k > -1) {\n      j = result[n];\n      if (a[j] < k) {\n        p[i] = j;\n        result[++n] = i;\n      } else {\n        u = 0;\n        v = n;\n\n        while (u < v) {\n          j = (u + v) >> 1;\n          if (a[result[j]] < k) {\n            u = j + 1;\n          } else {\n            v = j;\n          }\n        }\n\n        if (k < a[result[u]]) {\n          if (u > 0) {\n            p[i] = result[u - 1];\n          }\n          result[u] = i;\n        }\n      }\n    }\n  }\n\n  v = result[n];\n\n  while (n >= 0) {\n    result[n--] = v;\n    v = p[v];\n  }\n\n  return result;\n}\n\n/**\n * Update DOM classname.\n *\n * @param element DOM Element.\n * @param className Class name.\n * @param svg SVG Element.\n */\nfunction _updateClassName(element: Element, className: string, svg: boolean): void {\n  /**\n   * SVGElement.className returns `SVGAnimatedString`.\n   *\n   * #quirks\n   */\n  if (svg === true) {\n    elementSetAttribute.call(element, \"class\", className);\n  } else {\n    (element as HTMLElement).className = className;\n  }\n}\n\n/**\n * Update DOM styles.\n *\n * @param element HTML or SVG Element.\n * @param a Prev styles.\n * @param b Next styles.\n */\nfunction _updateStyle(\n  element: HTMLElement | SVGElement,\n  a: CSSStyleProps | undefined,\n  b: CSSStyleProps | undefined,\n): void {\n  const style = element.style;\n  let key: string;\n  let bValue;\n\n  if (a === void 0) {\n    // a is empty, insert all styles from b.\n    for (key in b!) {\n      bValue = (b as { [key: string]: string })[key];\n      if (bValue !== void 0) {\n        style.setProperty(key, bValue);\n      }\n    }\n  } else if (b === void 0) {\n    // b is empty, remove all styles from a\n    for (key in a) {\n      style.removeProperty(key);\n    }\n  } else {\n    let matchCount = 0;\n    let i = 0;\n    for (key in a) {\n      const aValue = a[key];\n      bValue = (objectHasOwnProperty.call(b, key) === true) ? (matchCount++ , b[key]) : void 0;\n      if (aValue !== bValue) {\n        if (bValue !== void 0) {\n          style.setProperty(key, bValue);\n        } else {\n          style.removeProperty(key);\n        }\n      }\n    }\n\n    const keys = Object.keys(b);\n    for (; matchCount < keys.length && i < keys.length; ++i) {\n      key = keys[i];\n      if (objectHasOwnProperty.call(a, key) === false) {\n        style.setProperty(key, b[key]);\n        ++matchCount;\n      }\n    }\n  }\n}\n\n/**\n * Update DOM attributes.\n *\n * @param element DOM element.\n * @param a Prev DOM attributes.\n * @param b Next DOM attributes.\n */\nfunction _updateAttrs(\n  element: Element,\n  a: { [key: string]: string | number | boolean | AttributeDirective<any> | CSSStyleProps | undefined } | undefined,\n  b: { [key: string]: string | number | boolean | AttributeDirective<any> | CSSStyleProps | undefined } | undefined,\n): void {\n  let key: string;\n\n  if (a === void 0) {\n    // a is empty, insert all attributes from b.\n    for (key in b!) {\n      _updateAttr(element, key, void 0, b![key]);\n    }\n  } else if (b === void 0) {\n    // b is empty, remove all attributes from a.\n    for (key in a) {\n      _updateAttr(element, key, a[key], void 0);\n    }\n  } else {\n    let matchCount = 0;\n    let i = 0;\n    for (key in a) {\n      _updateAttr(\n        element,\n        key,\n        a[key],\n        (objectHasOwnProperty.call(b, key) === true) ? (matchCount++ , b[key]) : void 0,\n      );\n    }\n\n    const keys = Object.keys(b);\n    for (; matchCount < keys.length && i < keys.length; ++i) {\n      key = keys[i];\n      if (objectHasOwnProperty.call(a, key) === false) {\n        _updateAttr(element, key, void 0, b[key]);\n        ++matchCount;\n      }\n    }\n  }\n}\n\n/**\n * Update DOM attribute.\n *\n * @param element DOM Element.\n * @param key Attribute name.\n * @param prev Previous value.\n * @param next Next value.\n */\nfunction _updateAttr(\n  element: Element,\n  key: string,\n  prev: string | number | boolean | AttributeDirective<any> | CSSStyleProps | undefined,\n  next: string | number | boolean | AttributeDirective<any> | CSSStyleProps | undefined,\n): void {\n  if (key !== \"style\") {\n    if (typeof next === \"object\") {\n      next.u(\n        element,\n        key,\n        prev === void 0 ? void 0 : (prev as AttributeDirective<any>).v,\n        next.v,\n      );\n    } else if (prev !== next) {\n      if (typeof prev === \"object\") {\n        prev.u(\n          element,\n          key,\n          (prev as AttributeDirective<any>).v,\n          void 0,\n        );\n      } else {\n        if (typeof next === \"boolean\") {\n          next = next ? \"\" : void 0;\n        }\n        if (next === void 0) {\n          elementRemoveAttribute.call(element, key);\n        } else {\n          elementSetAttribute.call(element, key, next as string);\n        }\n      }\n    }\n  } else if (prev !== next) {\n    _updateStyle(element as HTMLElement, prev as CSSStyleProps, next as CSSStyleProps);\n  }\n}\n","/**\n * Empty object.\n */\nexport const EMPTY_OBJECT = /* istanbul ignore else */__IVI_DEBUG__ ? Object.freeze({}) : {};\n","import { checkNestingViolations } from \"../debug/html_nesting_rules\";\nimport { Op } from \"./operations\";\nimport { OpState } from \"./state\";\nimport { _mount, _update, _unmount, _dirtyCheck, _resetState } from \"./reconciler\";\nimport { enableContext, disableContext } from \"./context\";\n\n/**\n * Root.\n */\nexport interface Root {\n  /**\n   * Container element.\n   */\n  container: Element | null;\n  /**\n   * Current state.\n   */\n  state: OpState | null;\n  /**\n   * Next operation.\n   */\n  next: Op | undefined;\n}\n\n/**\n * Root nodes.\n */\nexport const ROOTS = [] as Root[];\n\n/**\n * Find root node of a container.\n *\n * @param predicate - Find predicate.\n * @returns root node or undefined when root node doesn't exist.\n */\nexport const findRoot = (predicate: (root: Root) => boolean) => ROOTS.find(predicate);\n\n/**\n * Performs a dirty checking.\n */\nexport function dirtyCheck() {\n  /* istanbul ignore else */\n  if (__IVI_DEBUG__) {\n    enableContext();\n  }\n  for (let i = 0; i < ROOTS.length; ++i) {\n    const root = ROOTS[i];\n    const { container, state, next } = root;\n    _resetState();\n    if (next !== void 0) {\n      root.next = void 0;\n      root.state = _update(container!, state, next, false, true);\n    } else if (state !== null) {\n      _dirtyCheck(container!, state, false, true);\n    }\n\n    /* istanbul ignore else */\n    if (__IVI_DEBUG__) {\n      if (root.state) {\n        checkNestingViolations(container!, root.state);\n      }\n    }\n  }\n  /* istanbul ignore else */\n  if (__IVI_DEBUG__) {\n    disableContext();\n  }\n}\n","import { sMT, rAF } from \"ivi-scheduler\";\nimport { NOOP, catchError, runRepeatableTasks, RepeatableTaskList } from \"../core\";\nimport { printWarn } from \"../debug/print\";\nimport { IOS_GESTURE_EVENT } from \"../dom/feature_detection\";\nimport { NodeFlags } from \"../vdom/node_flags\";\nimport { Op } from \"../vdom/operations\";\nimport { Component } from \"../vdom/component\";\nimport { ROOTS, findRoot, dirtyCheck } from \"../vdom/root\";\n\n/**\n * Update flags.\n */\nexport const enum UpdateFlags {\n  /**\n   * Forces synchronous update.\n   */\n  RequestSyncUpdate = 1,\n}\n\n/**\n * Scheduler flags.\n */\nconst enum SchedulerFlags {\n  /**\n   * Running inside of a scheduler context.\n   */\n  Running = 1,\n  /**\n   * Scheduler tick is pending for an execution.\n   */\n  TickPending = 1 << 1,\n  /**\n   * Frame update is pending for an execution.\n   */\n  NextFramePending = 1 << 2,\n  /**\n   * Sync Frame update is pending for an execution.\n   */\n  NextSyncFramePending = 1 << 3,\n  /**\n   * Running inside of a frame update context.\n   */\n  UpdatingFrame = 1 << 4,\n  /**\n   * Dirty checking is pending for an execution.\n   */\n  DirtyCheckPending = 1 << 5,\n}\n\nconst enum SchedulerDebugFlags {\n  DirtyCheckingFinished = 1,\n  MutationsFinished = 1 << 1,\n  LayoutFinished = 1 << 2,\n}\n\n/**\n * Task list.\n */\ninterface TaskList { v: Array<() => void>; }\n\n/**\n * createTaskList creates a task list.\n *\n * @returns task list\n */\nconst createTaskList = () => ({ v: [] }) as TaskList;\n\n/**\n * Execute tasks from the `TaskList`.\n *\n * @param t - Task list\n */\nfunction run(t: TaskList) {\n  while (t.v.length > 0) {\n    const tasks = t.v;\n    let i = 0;\n    t.v = [];\n    do {\n      tasks[i++]();\n    } while (i < tasks.length);\n  }\n}\n\nlet _flags: SchedulerFlags = 0;\nlet _debugFlags: SchedulerDebugFlags;\n/* istanbul ignore else */\nif (__IVI_DEBUG__) {\n  _debugFlags = 0;\n}\nlet _clock = 1;\nconst _microtasks = createTaskList();\nconst _mutationEffects = createTaskList();\nconst _domLayoutEffects = createTaskList();\nconst _beforeMutations = [] as RepeatableTaskList;\nconst _afterMutations = [] as RepeatableTaskList;\nlet _frameStartTime = 0;\n\n/**\n * withSchedulerTick wraps `inner` function into a scheduler context execution.\n *\n * @typeparam T Arguments.\n * @param inner Inner function.\n * @returns function that will be executed in a scheduler context.\n */\nexport const withSchedulerTick = <T extends any[]>(inner: (...args: T) => void) => (\n  catchError(function () {\n    _flags |= SchedulerFlags.Running;\n    inner.apply(void 0, arguments as unknown as T);\n    run(_microtasks);\n    _flags &= ~(SchedulerFlags.Running | SchedulerFlags.TickPending);\n    ++_clock;\n  })\n) as (...args: T) => void;\n\nconst runMicrotasks = withSchedulerTick(NOOP);\n\n/**\n * clock returns monotonically increasing clock value.\n *\n * @returns current clock value.\n */\nexport const clock = () => _clock;\n\n/**\n * scheduleMicrotask adds task to the microtask queue.\n *\n * @param task Microtask.\n */\nexport function scheduleMicrotask(task: () => void): void {\n  _microtasks.v.push(task);\n  if ((_flags & (SchedulerFlags.Running | SchedulerFlags.TickPending)) === 0) {\n    _flags |= SchedulerFlags.TickPending;\n    sMT(runMicrotasks);\n  }\n}\n\n/**\n * beforeMutations adds a hook that will be executed before DOM mutations.\n *\n * @param fn Hook function.\n */\nexport function beforeMutations(fn: () => boolean | void): void {\n  _beforeMutations.push(fn);\n}\n\n/**\n * afterMutations adds a hook that will be executed after DOM mutations.\n *\n * @param fn Hook function.\n */\nexport function afterMutations(fn: () => boolean | void): void {\n  _afterMutations.push(fn);\n}\n\n/**\n * frameStartTime returns current frame start time.\n *\n * @returns current frame start time.\n */\nexport const frameStartTime = () => _frameStartTime;\n\n/**\n * withNextFrame wraps `inner` function into a scheduler frame update context.\n *\n * @param inner Inner function.\n * @returns function that will be executed in a frame update context.\n */\nexport const withNextFrame = (inner: (time?: number) => void) => (\n  withSchedulerTick((time?: number) => {\n    _flags |= SchedulerFlags.UpdatingFrame;\n    inner(time);\n\n    if ((_flags & SchedulerFlags.NextFramePending) !== 0) {\n      _frameStartTime = time === void 0 ? performance.now() : time;\n\n      runRepeatableTasks(_beforeMutations);\n      if ((_flags & SchedulerFlags.DirtyCheckPending) !== 0) {\n        dirtyCheck();\n      }\n      /* istanbul ignore else */\n      if (__IVI_DEBUG__) {\n        _debugFlags |= SchedulerDebugFlags.DirtyCheckingFinished;\n      }\n      run(_mutationEffects);\n      /* istanbul ignore else */\n      if (__IVI_DEBUG__) {\n        _debugFlags |= SchedulerDebugFlags.MutationsFinished;\n      }\n      runRepeatableTasks(_afterMutations);\n      run(_domLayoutEffects);\n      /* istanbul ignore else */\n      if (__IVI_DEBUG__) {\n        _debugFlags |= SchedulerDebugFlags.LayoutFinished;\n      }\n    }\n    _flags &= ~(\n      SchedulerFlags.UpdatingFrame |\n      SchedulerFlags.NextFramePending |\n      SchedulerFlags.NextSyncFramePending |\n      SchedulerFlags.DirtyCheckPending\n    );\n    /* istanbul ignore else */\n    if (__IVI_DEBUG__) {\n      _debugFlags &= ~(\n        SchedulerDebugFlags.DirtyCheckingFinished |\n        SchedulerDebugFlags.MutationsFinished |\n        SchedulerDebugFlags.LayoutFinished\n      );\n    }\n  })\n);\n\n/**\n * Frame tasks scheduler event handler.\n *\n * @param t Current time.\n */\nconst _handleNextFrame = withNextFrame(NOOP);\n\n/**\n * requestNextFrame requests an update for next frame.\n *\n * @param flags See {@link UpdateFlags} for details.\n */\nexport function requestNextFrame(flags?: UpdateFlags): void {\n  if (\n    (flags !== void 0) &&\n    ((flags & UpdateFlags.RequestSyncUpdate) !== 0) &&\n    ((_flags & SchedulerFlags.NextSyncFramePending) === 0)\n  ) {\n    _flags |= SchedulerFlags.NextFramePending | SchedulerFlags.NextSyncFramePending;\n    if ((_flags & SchedulerFlags.UpdatingFrame) === 0) {\n      scheduleMicrotask(_handleNextFrame);\n    }\n  } else if ((_flags & SchedulerFlags.NextFramePending) === 0) {\n    _flags |= SchedulerFlags.NextFramePending;\n    if ((_flags & SchedulerFlags.UpdatingFrame) === 0) {\n      rAF(_handleNextFrame);\n    }\n  }\n}\n\n/**\n * Adds a write DOM task to the queue.\n *\n * @param fn Write DOM task.\n * @param flags See {@link UpdateFlags} for details.\n */\nexport function scheduleMutationEffect(fn: () => void, flags?: UpdateFlags): void {\n  /* istanbul ignore else */\n  if (__IVI_DEBUG__) {\n    if (_flags & SchedulerFlags.UpdatingFrame) {\n      if (_debugFlags & SchedulerDebugFlags.MutationsFinished) {\n        printWarn(\"Mutation effect is scheduled after mutations were finished\");\n      }\n    }\n  }\n  _mutationEffects.v.push(fn);\n  requestNextFrame(flags);\n}\n\n/**\n * Adds a DOM layout task to the queue.\n *\n * @param fn Read DOM task\n * @param flags See {@link UpdateFlags} for details.\n */\nexport function scheduleLayoutEffect(fn: () => void, flags?: UpdateFlags): void {\n  /* istanbul ignore else */\n  if (__IVI_DEBUG__) {\n    if (_flags & SchedulerFlags.UpdatingFrame) {\n      if (_debugFlags & SchedulerDebugFlags.MutationsFinished) {\n        printWarn(\"Layout effect is scheduled after layout were finished\");\n      }\n    }\n  }\n  _domLayoutEffects.v.push(fn);\n  requestNextFrame(flags);\n}\n\n/**\n * Request dirty checking.\n *\n * @param flags See {@link UpdateFlags} for details.\n */\nexport function requestDirtyCheck(flags?: UpdateFlags): void {\n  /* istanbul ignore else */\n  if (__IVI_DEBUG__) {\n    if (_flags & SchedulerFlags.UpdatingFrame) {\n      if (_debugFlags & SchedulerDebugFlags.MutationsFinished) {\n        printWarn(\"Dirty checking is scheduled after dirty checking were finished\");\n      }\n    }\n  }\n  _flags |= SchedulerFlags.DirtyCheckPending;\n  requestNextFrame(flags);\n}\n\n/**\n * Invalidate component.\n *\n * @param c Component instance.\n * @param flags See {@link UpdateFlags} for details.\n */\nexport function invalidate(c: Component, flags?: UpdateFlags): void {\n  c.f |= NodeFlags.Dirty;\n  requestDirtyCheck(flags);\n}\n\n/**\n * dirty requests a dirty checking and returns current monotonic clock value.\n *\n * @param flags See {@link UpdateFlags} for details.\n * @returns current monotonic clock value.\n */\nexport const dirty = (flags?: UpdateFlags) => (requestDirtyCheck(flags), _clock);\n\n/**\n * Render operation into the container.\n *\n * @param next Operation to render.\n * @param container DOM Node that will contain rendered operation.\n * @param flags See {@link UpdateFlags} for details.\n */\nexport function render(next: Op, container: Element, flags?: UpdateFlags): void {\n  /* istanbul ignore else */\n  if (__IVI_DEBUG__) {\n    /**\n     * Rendering into the <body> element is disabled to make it possible to fix iOS quirk with click events.\n     */\n    if (container === document.body) {\n      throw new Error(\"Rendering into the <body> element aren't allowed\");\n    }\n    if (!document.body.contains(container)) {\n      throw new Error(\"Container element should be attached to the document\");\n    }\n  }\n\n  const root = findRoot((v) => v.container === container);\n  if (root) {\n    root.next = next;\n  } else {\n    ROOTS.push({ container, state: null, next });\n    /* istanbul ignore if */\n    /**\n     * Fix for the Mouse Event bubbling on iOS devices.\n     *\n     * #quirks\n     *\n     * http://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\n     *\n     * Fixed in Safari TP71: https://trac.webkit.org/changeset/237978/webkit/\n     */\n    if (__IVI_TARGET__ === \"browser\" && IOS_GESTURE_EVENT) {\n      (container as HTMLElement).onclick = NOOP;\n    }\n  }\n\n  requestDirtyCheck(flags);\n}\n","export function rAF(cb: (time?: number) => void): void {\n  requestAnimationFrame(cb);\n}\n\nexport function sMT(cb: () => void): void {\n  Promise.resolve().then(cb);\n}\n","import { EMPTY_OBJECT } from \"../core\";\nimport { NodeFlags } from \"./node_flags\";\nimport { Component } from \"./component\";\nimport { clock, scheduleMicrotask, scheduleMutationEffect, scheduleLayoutEffect } from \"../scheduler\";\n\nfunction addHook<T extends Function>(hooks: null | T | T[], hook: T): T | T[] {\n  if (hooks === null) {\n    return hook;\n  }\n  if (typeof hooks === \"function\") {\n    return [hooks, hook];\n  }\n  hooks.push(hook);\n  return hooks;\n}\n\n/**\n * useSelect creates a selector hook.\n *\n * @example\n *\n *     const C = component<number>((c) => {\n *       const selector = useSelect<string, number>(c,\n *         (id, context) => getContext<{ data: string[] }>.data[id],\n *       );\n *\n *       return (id) => div(_, _, selector(id));\n *     });\n *\n * @typeparam T Selector result type.\n * @param component Component instance.\n * @param selector Selector function.\n * @returns Selector hook.\n */\nexport function useSelect<T>(\n  component: Component,\n  selector: (props?: undefined, prev?: T | undefined) => T,\n): () => T;\n\n/**\n * useSelect creates a selector hook.\n *\n * @example\n *\n *     const C = component<number>((c) => {\n *       const selector = useSelect<string, number>(c,\n *         (id, context) => getContext<{ data: string[] }>.data[id],\n *       );\n *\n *       return (id) => div(_, _, selector(id));\n *     });\n *\n * @typeparam T Selector result type.\n * @typeparam P Selector props type.\n * @param component Component instance.\n * @param selector Selector function.\n * @param shouldUpdate Should update fucntion.\n * @returns Selector hook.\n */\nexport function useSelect<T, P>(\n  component: Component,\n  selector: (props: P, prev?: T | undefined) => T,\n  shouldUpdate?: undefined extends P ? undefined : (prev: P, next: P) => boolean,\n): undefined extends P ? () => T : (props: P) => T;\n\nexport function useSelect<T, P>(\n  component: Component,\n  selector: (props: P, prev: T | undefined) => T,\n  shouldUpdate?: (prev: P, next: P) => boolean,\n): (props: P) => T {\n  /* istanbul ignore next */\n  if (__IVI_TARGET__ === \"ssr\") {\n    return (nextProps: P) => selector(nextProps, void 0);\n  }\n\n  const prevSelector = component.s.s;\n  let lastChecked = 0;\n  let state: T | undefined;\n  let props: P;\n\n  component.s.s = () => {\n    if (prevSelector !== null && prevSelector() === true) {\n      return true;\n    }\n    if (state !== void 0) {\n      const nextState = selector(props, state);\n      lastChecked = clock();\n      if (state !== nextState) {\n        state = nextState;\n        return true;\n      }\n    }\n    return false;\n  };\n\n  return (nextProps: P) => {\n    if (\n      (state !== void 0) &&\n      ((shouldUpdate !== void 0 && shouldUpdate(props, nextProps) === true) || (props !== nextProps))\n    ) {\n      state = void 0;\n    }\n    if (state === void 0 || lastChecked < clock()) {\n      state = selector(nextProps, state);\n    }\n    props = nextProps;\n    return state;\n  };\n}\n\n/**\n * useUnmount creates an unmount hook.\n *\n * @example\n *\n *     const C = component((c) => {\n *       useUnmount(c, () => {\n *         console.log(\"unmounted\");\n *       });\n *\n *       return () => div();\n *     });\n *\n * @param component Component instance.\n * @param hook Unmount hook.\n */\nexport function useUnmount(component: Component, hook: () => void): void {\n  /* istanbul ignore else */\n  if (__IVI_TARGET__ !== \"ssr\") {\n    component.f |= NodeFlags.Unmount;\n    const hooks = component.s;\n    hooks.u = addHook(hooks.u, hook);\n  }\n}\n\nfunction withEffect<P>(fn: (effect: () => void) => void): (\n  component: Component,\n  hook: (props?: P) => (() => void) | void,\n  shouldUpdate?: (prev: P, next: P) => boolean,\n) => (props: P) => void {\n  return (stateNode, hook, shouldUpdate) => {\n    let reset: (() => void) | void;\n    let props: P | undefined = EMPTY_OBJECT as P;\n    let unmount = false;\n    const handler = (d?: boolean) => {\n      if (reset !== void 0) {\n        reset();\n      }\n      if (d !== true) {\n        reset = hook(props);\n        if (reset !== void 0 && !unmount) {\n          unmount = true;\n          useUnmount(stateNode, handler);\n        }\n      }\n    };\n\n    return (nextProps: P) => {\n      if (\n        props === EMPTY_OBJECT ||\n        (shouldUpdate !== void 0 && shouldUpdate(props as P, nextProps) === true) ||\n        props !== nextProps\n      ) {\n        props = nextProps;\n        fn(handler);\n      }\n    };\n  };\n}\n\n/**\n * useEffect creates a side effect hook.\n *\n * @example\n *\n *     const Counter = component<number>((c) => {\n *       let i = 0;\n *       const timer = useEffect<number>(c, (delay) => {\n *         const tid = setInterval(() => {\n *           i++;\n *           invalidate(c);\n *         }, delay);\n *         return () => { clearInterval(tid); };\n *       });\n *\n *       return (delay) => (\n *         timer(delay),\n *\n *         div(_, _, i),\n *       );\n *     });\n *\n * @typeparam T Hook props type.\n * @param component Component instance.\n * @param hook Side effect function.\n * @param shouldUpdate Should update function.\n * @returns Side effect hook\n */\nexport const useEffect: <T = undefined>(\n  component: Component,\n  hook: undefined extends T ? () => (() => void) | void : (props: T) => (() => void) | void,\n  shouldUpdate?: undefined extends T ? undefined : (prev: T, next: T) => boolean,\n) => undefined extends T ? () => void : (props: T) => void = __IVI_TARGET__ === \"ssr\" ?\n    /* istanbul ignore next */(props: any) => { /**/ } :\n    (/*#__PURE__*/withEffect(scheduleMicrotask)) as any;\n\n/**\n * useMutationEffect creates a DOM mutation effect hook.\n *\n * @typeparam T Hook props type.\n * @param stateNode Component instance.\n * @param hook DOM mutation function.\n * @param shouldUpdate Should update function.\n * @returns Side effect hook\n */\nexport const useMutationEffect: <T = undefined>(\n  component: Component,\n  hook: undefined extends T ? () => (() => void) | void : (props: T) => (() => void) | void,\n  shouldUpdate?: undefined extends T ? undefined : (prev: T, next: T) => boolean,\n) => undefined extends T ? () => void : (props: T) => void = __IVI_TARGET__ === \"ssr\" ?\n    /* istanbul ignore next */(props: any) => { /**/ } :\n    (/*#__PURE__*/withEffect(scheduleMutationEffect)) as any;\n\n/**\n * useLayoutEffect creates a DOM layout effect hook.\n *\n * @typeparam T Hook props type.\n * @param component Component instance.\n * @param hook DOM layout function.\n * @param shouldUpdate Should update function.\n * @returns Side effect hook\n */\nexport const useLayoutEffect: <T = undefined>(\n  component: Component,\n  hook: undefined extends T ? () => (() => void) | void : (props: T) => (() => void) | void,\n  shouldUpdate?: undefined extends T ? undefined : (prev: T, next: T) => boolean,\n) => undefined extends T ? () => void : (props: T) => void = __IVI_TARGET__ === \"ssr\" ?\n    /* istanbul ignore next */(props: any) => { /**/ } :\n    (/*#__PURE__*/withEffect(scheduleLayoutEffect)) as any;\n","/**\n * Shortcut for an `undefined` value.\n */\nexport const _ = void 0;\n","import {\n  HTMLAnchorElementAttrs, HTMLElementAttrs, HTMLAreaElementAttrs, HTMLAudioElementAttrs,\n  HTMLBaseElementAttrs, HTMLBodyElementAttrs, HTMLBRElementAttrs, HTMLButtonElementAttrs,\n  HTMLCanvasElementAttrs, HTMLQuoteElementAttrs, HTMLTableCaptionElementAttrs, HTMLTableColElementAttrs,\n  HTMLModElementAttrs, HTMLDivElementAttrs, HTMLDListElementAttrs, HTMLFieldSetElementAttrs, HTMLFormElementAttrs,\n  HTMLHeadElementAttrs, HTMLHeadingElementAttrs, HTMLHRElementAttrs, HTMLHtmlElementAttrs, HTMLIFrameElementAttrs,\n  HTMLImageElementAttrs, HTMLInputElementAttrs, HTMLLabelElementAttrs, HTMLLegendElementAttrs, HTMLLIElementAttrs,\n  HTMLLinkElementAttrs, HTMLMapElementAttrs, HTMLMenuElementAttrs, HTMLMetaElementAttrs, HTMLMeterElementAttrs,\n  HTMLOListElementAttrs, HTMLOptGroupElementAttrs, HTMLOptionElementAttrs, HTMLParagraphElementAttrs,\n  HTMLPictureElementAttrs, HTMLPreElementAttrs, HTMLProgressElementAttrs, HTMLScriptElementAttrs,\n  HTMLSelectElementAttrs, HTMLSourceElementAttrs, HTMLSpanElementAttrs, HTMLStyleElementAttrs,\n  HTMLTableDataCellElementAttrs, HTMLTableElementAttrs, HTMLTableHeaderCellElementAttrs, HTMLTableRowElementAttrs,\n  HTMLTableSectionElementAttrs, HTMLTemplateElementAttrs, HTMLTextAreaElementAttrs, HTMLTitleElementAttrs,\n  HTMLTrackElementAttrs, HTMLUListElementAttrs, HTMLVideoElementAttrs,\n\n  AttributeDirective, elementFactory, htmlElementFactory, NodeFlags,\n  emitAttribute, emitChildren, escapeAttributeValue, escapeText, IGNORE_RENDER_TO_STRING,\n} from \"ivi\";\n\n/**\n * {@link AttributeDirective} with `\"\"` value and {@link updateValue} sync function.\n */\nconst VALUE_EMPTY: AttributeDirective<string | number> = { v: \"\", u: updateValue };\n\n/**\n * {@link AttributeDirective} with `false` value and {@link updateChecked} sync function.\n */\nconst CHECKED_FALSE: AttributeDirective<boolean> = { v: false, u: updateChecked };\n\n/**\n * {@link AttributeDirective} with `true` value and {@link updateChecked} sync function.\n */\nconst CHECKED_TRUE: AttributeDirective<boolean> = { v: true, u: updateChecked };\n\n/**\n * {@link AttributeDirective} with `true` value that emits `checked` attribute.\n */\nconst CHECKED_TRUE_RENDER_TO_STRING: AttributeDirective<boolean> = { v: true, s: () => { emitAttribute(\"checked\"); } };\n\n/**\n * Render to string function for an {@link AttributeDirective} created with {@link VALUE} function.\n *\n * @param key Attribute key.\n * @param value Value.\n */\nfunction renderToStringValue(key: string, value: string | number) {\n  emitAttribute(`value=\"${escapeAttributeValue(value)}\"`);\n}\n\n/**\n * Render to string function for an {@link AttributeDirective} created with {@link CONTENT} function.\n *\n * @param key Attribute key.\n * @param value Value.\n */\nfunction renderToStringContent(key: string, value: string | number) {\n  emitChildren(escapeText(value));\n}\n\n/**\n * Synchronization function for {@link AttributeDirective} created with {@link VALUE} function.\n *\n * @param element Target element.\n * @param key Attribute key.\n * @param prev Previous value.\n * @param next Next value.\n */\nfunction updateValue(\n  element: Element,\n  key: string,\n  prev: string | number | undefined,\n  next: string | number | undefined,\n) {\n  if (prev === void 0) {\n    if (next !== \"\") {\n      (element as HTMLInputElement | HTMLTextAreaElement).value = next as string;\n    }\n  } else if (next !== void 0) {\n    if ((element as HTMLInputElement | HTMLTextAreaElement).value !== next) {\n      (element as HTMLInputElement | HTMLTextAreaElement).value = next as string;\n    }\n  }\n}\n\n/**\n * Synchronization function for {@link AttributeDirective} created with {@link CHECKED} function.\n *\n * @param element Target element.\n * @param key Attribute key.\n * @param prev Previous value.\n * @param next Next value.\n */\nfunction updateChecked(\n  element: Element,\n  key: string,\n  prev: boolean | undefined,\n  next: boolean | undefined,\n) {\n  if (prev === void 0) {\n    if (next) {\n      (element as HTMLInputElement).checked = next;\n    }\n  } else if (next !== void 0) {\n    if ((element as HTMLInputElement).checked !== next) {\n      (element as HTMLInputElement).checked = next!;\n    }\n  }\n}\n\n/**\n * VALUE function creates a {@link AttributeDirective} that assigns a `value` property to an HTMLInputElement.\n *\n * @example\n *\n *   const e = input(\"\", { value: VALUE(\"value\") });\n *\n * @param v Value.\n * @returns {@link AttributeDirective}\n */\nexport const VALUE = (v: string | number): AttributeDirective<string | number> => (\n  __IVI_TARGET__ === \"ssr\" ?\n    v === \"\" ? IGNORE_RENDER_TO_STRING : { v, s: renderToStringValue } :\n    v === \"\" ? VALUE_EMPTY : { v, u: updateValue }\n);\n\n/**\n * CONTENT function creates a {@link AttributeDirective} that assigns a `value` property to an HTMLTextAreaElement.\n *\n * @example\n *\n *   const e = textarea(\"\", { content: CONTENT(\"content\") });\n *\n * @param v Value.\n * @returns {@link AttributeDirective}\n */\nexport const CONTENT = (\n  __IVI_TARGET__ === \"ssr\" ?\n    (v: string | number): AttributeDirective<string | number> => (\n      v === \"\" ? IGNORE_RENDER_TO_STRING : ({ v, s: renderToStringContent })\n    ) :\n    VALUE\n);\n\n/**\n * CHECKED function creates a {@link AttributeDirective} that assigns a `checked` property to an HTMLInputElement.\n *\n * @example\n *\n *   const e = input(\"\", { checked: CHECKED(true) });\n *\n * @param v Checked value.\n * @returns {@link AttributeDirective}\n */\nexport const CHECKED = (v: boolean): AttributeDirective<boolean> => (\n  __IVI_TARGET__ === \"ssr\" ?\n    v ? CHECKED_TRUE_RENDER_TO_STRING : IGNORE_RENDER_TO_STRING :\n    v ? CHECKED_TRUE : CHECKED_FALSE\n);\n\n/* tslint:disable:max-line-length */\n/**\n * Creates OpNode HTML element <a>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <a>\n */\nexport const a = /*#__PURE__*/htmlElementFactory<HTMLAnchorElementAttrs, HTMLAnchorElement>(\"a\");\n\n/**\n * Creates OpNode HTML element <abbr>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/abbr}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <abbr>\n */\nexport const abbr = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"abbr\");\n\n/**\n * Creates OpNode HTML element <address>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/address}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <address>\n */\nexport const address = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"address\");\n\n/**\n * Creates OpNode HTML element <article>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/article}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <article>\n */\nexport const article = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"article\");\n\n/**\n * Creates OpNode HTML element <aside>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/aside}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <aside>\n */\nexport const aside = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"aside\");\n\n/**\n * Creates OpNode HTML element <b>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/b}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <b>\n */\nexport const b = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"b\");\n\n/**\n * Creates OpNode HTML element <base>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/base}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <base>\n */\nexport const base = /*#__PURE__*/elementFactory<HTMLBaseElementAttrs, HTMLBaseElement>(\"base\", NodeFlags.Element | NodeFlags.VoidElement);\n\n/**\n * Creates OpNode HTML element <bdo>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/bdo}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <bdo>\n */\nexport const bdo = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"bdo\");\n\n/**\n * Creates OpNode HTML element <blockquote>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/blockquote}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <blockquote>\n */\nexport const blockquote = /*#__PURE__*/htmlElementFactory<HTMLQuoteElementAttrs, HTMLQuoteElement>(\"blockquote\");\n\n/**\n * Creates OpNode HTML element <body>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/body}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <body>\n */\nexport const body = /*#__PURE__*/htmlElementFactory<HTMLBodyElementAttrs, HTMLBodyElement>(\"body\");\n\n/**\n * Creates OpNode HTML element <br>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/br}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <br>\n */\nexport const br = /*#__PURE__*/elementFactory<HTMLBRElementAttrs, HTMLBRElement>(\"br\", NodeFlags.Element | NodeFlags.VoidElement);\n\n/**\n * Creates OpNode HTML element <button>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <button>\n */\nexport const button = /*#__PURE__*/htmlElementFactory<HTMLButtonElementAttrs, HTMLButtonElement>(\"button\");\n\n/**\n * Creates OpNode HTML element <canvas>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <canvas>\n */\nexport const canvas = /*#__PURE__*/htmlElementFactory<HTMLCanvasElementAttrs, HTMLCanvasElement>(\"canvas\");\n\n/**\n * Creates OpNode HTML element <caption>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <caption>\n */\nexport const caption = /*#__PURE__*/htmlElementFactory<HTMLTableCaptionElementAttrs, HTMLTableCaptionElement>(\"caption\");\n\n/**\n * Creates OpNode HTML element <cite>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/cite}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <cite>\n */\nexport const cite = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"cite\");\n\n/**\n * Creates OpNode HTML element <code>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/code}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <code>\n */\nexport const code = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"code\");\n\n/**\n * Creates OpNode HTML element <col>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/col}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <col>\n */\nexport const col = /*#__PURE__*/elementFactory<HTMLTableColElementAttrs, HTMLTableColElement>(\"col\", NodeFlags.Element | NodeFlags.VoidElement);\n\n/**\n * Creates OpNode HTML element <colgroup>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/colgroup}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <colgroup>\n */\nexport const colgroup = /*#__PURE__*/htmlElementFactory<HTMLTableColElementAttrs, HTMLTableColElement>(\"colgroup\");\n\n/**\n * Creates OpNode HTML element <del>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/del}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <del>\n */\nexport const del = /*#__PURE__*/htmlElementFactory<HTMLModElementAttrs, HTMLModElement>(\"del\");\n\n/**\n * Creates OpNode HTML element <dfn>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dfn}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <dfn>\n */\nexport const dfn = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"dfn\");\n\n/**\n * Creates OpNode HTML element <div>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <div>\n */\nexport const div = /*#__PURE__*/htmlElementFactory<HTMLDivElementAttrs, HTMLDivElement>(\"div\");\n\n/**\n * Creates OpNode HTML element <dd>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dd}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <dd>\n */\nexport const dd = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"dd\");\n\n/**\n * Creates OpNode HTML element <dl>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dl}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <dl>\n */\nexport const dl = /*#__PURE__*/htmlElementFactory<HTMLDListElementAttrs, HTMLDListElement>(\"dl\");\n\n/**\n * Creates OpNode HTML element <dt>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dt}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <dt>\n */\nexport const dt = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"dt\");\n\n/**\n * Creates OpNode HTML element <em>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/em}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <em>\n */\nexport const em = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"em\");\n\n/**\n * Creates OpNode HTML element <fieldset>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/fieldset}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <fieldset>\n */\nexport const fieldset = /*#__PURE__*/htmlElementFactory<HTMLFieldSetElementAttrs, HTMLFieldSetElement>(\"fieldset\");\n\n/**\n * Creates OpNode HTML element <figcaption>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/figcaption}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <figcaption>\n */\nexport const figcaption = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"figcaption\");\n\n/**\n * Creates OpNode HTML element <figure>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/figure}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <figure>\n */\nexport const figure = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"figure\");\n\n/**\n * Creates OpNode HTML element <footer>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/footer}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <footer>\n */\nexport const footer = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"footer\");\n\n/**\n * Creates OpNode HTML element <form>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <form>\n */\nexport const form = /*#__PURE__*/htmlElementFactory<HTMLFormElementAttrs, HTMLFormElement>(\"form\");\n\n/**\n * Creates OpNode HTML element <h1>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h1}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <h1>\n */\nexport const h1 = /*#__PURE__*/htmlElementFactory<HTMLHeadingElementAttrs, HTMLHeadingElement>(\"h1\");\n\n/**\n * Creates OpNode HTML element <h2>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h2}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <h2>\n */\nexport const h2 = /*#__PURE__*/htmlElementFactory<HTMLHeadingElementAttrs, HTMLHeadingElement>(\"h2\");\n\n/**\n * Creates OpNode HTML element <h3>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h3}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <h3>\n */\nexport const h3 = /*#__PURE__*/htmlElementFactory<HTMLHeadingElementAttrs, HTMLHeadingElement>(\"h3\");\n\n/**\n * Creates OpNode HTML element <h4>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h4}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <h4>\n */\nexport const h4 = /*#__PURE__*/htmlElementFactory<HTMLHeadingElementAttrs, HTMLHeadingElement>(\"h4\");\n\n/**\n * Creates OpNode HTML element <h5>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h5}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <h5>\n */\nexport const h5 = /*#__PURE__*/htmlElementFactory<HTMLHeadingElementAttrs, HTMLHeadingElement>(\"h5\");\n\n/**\n * Creates OpNode HTML element <h6>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h6}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <h6>\n */\nexport const h6 = /*#__PURE__*/htmlElementFactory<HTMLHeadingElementAttrs, HTMLHeadingElement>(\"h6\");\n\n/**\n * Creates OpNode HTML element <head>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/head}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <head>\n */\nexport const head = /*#__PURE__*/htmlElementFactory<HTMLHeadElementAttrs, HTMLHeadElement>(\"head\");\n\n/**\n * Creates OpNode HTML element <header>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/header}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <header>\n */\nexport const header = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"header\");\n\n/**\n * Creates OpNode HTML element <hgroup>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/hgroup}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <hgroup>\n */\nexport const hgroup = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"hgroup\");\n\n/**\n * Creates OpNode HTML element <hr>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/hr}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <hr>\n */\nexport const hr = /*#__PURE__*/elementFactory<HTMLHRElementAttrs, HTMLHRElement>(\"hr\", NodeFlags.Element | NodeFlags.VoidElement);\n\n/**\n * Creates OpNode HTML element <html>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/html}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <html>\n */\nexport const html = /*#__PURE__*/htmlElementFactory<HTMLHtmlElementAttrs, HTMLHtmlElement>(\"html\");\n\n/**\n * Creates OpNode HTML element <i>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/i}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <i>\n */\nexport const i = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"i\");\n\n/**\n * Creates OpNode HTML element <iframe>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <iframe>\n */\nexport const iframe = /*#__PURE__*/htmlElementFactory<HTMLIFrameElementAttrs, HTMLIFrameElement>(\"iframe\");\n\n/**\n * Creates OpNode HTML element <img>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <img>\n */\nexport const img = /*#__PURE__*/elementFactory<HTMLImageElementAttrs, HTMLImageElement>(\"img\", NodeFlags.Element | NodeFlags.VoidElement);\n\n/**\n * Creates OpNode HTML element <area>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/area}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <area>\n */\nexport const area = /*#__PURE__*/elementFactory<HTMLAreaElementAttrs, HTMLAreaElement>(\"area\", NodeFlags.Element | NodeFlags.VoidElement);\n\n/**\n * Creates OpNode HTML element <map>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/map}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <map>\n */\nexport const map = /*#__PURE__*/htmlElementFactory<HTMLMapElementAttrs, HTMLMapElement>(\"map\");\n\n/**\n * Creates OpNode HTML element <ins>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ins}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <ins>\n */\nexport const ins = /*#__PURE__*/htmlElementFactory<HTMLModElementAttrs, HTMLModElement>(\"ins\");\n\n/**\n * Creates OpNode HTML element <kbd>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/kbd}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <kbd>\n */\nexport const kbd = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"kbd\");\n\n/**\n * Creates OpNode HTML element <label>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/label}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <label>\n */\nexport const label = /*#__PURE__*/htmlElementFactory<HTMLLabelElementAttrs, HTMLLabelElement>(\"label\");\n\n/**\n * Creates OpNode HTML element <legend>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/legend}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <legend>\n */\nexport const legend = /*#__PURE__*/htmlElementFactory<HTMLLegendElementAttrs, HTMLLegendElement>(\"legend\");\n\n/**\n * Creates OpNode HTML element <li>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/li}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <li>\n */\nexport const li = /*#__PURE__*/htmlElementFactory<HTMLLIElementAttrs, HTMLLIElement>(\"li\");\n\n/**\n * Creates OpNode HTML element <link>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <link>\n */\nexport const link = /*#__PURE__*/elementFactory<HTMLLinkElementAttrs, HTMLLinkElement>(\"link\", NodeFlags.Element | NodeFlags.VoidElement);\n\n/**\n * Creates OpNode HTML element <main>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/main}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <main>\n */\nexport const main = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"main\");\n\n/**\n * Creates OpNode HTML element <mark>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/mark}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <mark>\n */\nexport const mark = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"mark\");\n\n/**\n * Creates OpNode HTML element <menu>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/menu}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <menu>\n */\nexport const menu = /*#__PURE__*/htmlElementFactory<HTMLMenuElementAttrs, HTMLMenuElement>(\"menu\");\n\n/**\n * Creates OpNode HTML element <meta>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <meta>\n */\nexport const meta = /*#__PURE__*/elementFactory<HTMLMetaElementAttrs, HTMLMetaElement>(\"meta\", NodeFlags.Element | NodeFlags.VoidElement);\n\n/**\n * Creates OpNode HTML element <meter>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meter}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <meter>\n */\nexport const meter = /*#__PURE__*/htmlElementFactory<HTMLMeterElementAttrs, HTMLMeterElement>(\"meter\");\n\n/**\n * Creates OpNode HTML element <nav>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/nav}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <nav>\n */\nexport const nav = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"nav\");\n\n/**\n * Creates OpNode HTML element <noscript>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/noscript}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <noscript>\n */\nexport const noscript = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"noscript\");\n\n/**\n * Creates OpNode HTML element <ol>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ol}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <ol>\n */\nexport const ol = /*#__PURE__*/htmlElementFactory<HTMLOListElementAttrs, HTMLOListElement>(\"ol\");\n\n/**\n * Creates OpNode HTML element <optgroup>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/optgroup}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <optgroup>\n */\nexport const optgroup = /*#__PURE__*/htmlElementFactory<HTMLOptGroupElementAttrs, HTMLOptGroupElement>(\"optgroup\");\n\n/**\n * Creates OpNode HTML element <option>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <option>\n */\nexport const option = /*#__PURE__*/htmlElementFactory<HTMLOptionElementAttrs, HTMLOptionElement>(\"option\");\n\n/**\n * Creates OpNode HTML element <p>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/p}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <p>\n */\nexport const p = /*#__PURE__*/htmlElementFactory<HTMLParagraphElementAttrs, HTMLParagraphElement>(\"p\");\n\n/**\n * Creates OpNode HTML element <picture>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/picture}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <picture>\n */\nexport const picture = /*#__PURE__*/htmlElementFactory<HTMLPictureElementAttrs, HTMLPictureElement>(\"picture\");\n\n/**\n * Creates OpNode HTML element <pre>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/pre}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <pre>\n */\nexport const pre = /*#__PURE__*/elementFactory<HTMLPreElementAttrs, HTMLPreElement>(\"pre\", NodeFlags.Element | NodeFlags.NewlineEatingElement);\n\n/**\n * Creates OpNode HTML element <progress>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/progress}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <progress>\n */\nexport const progress = /*#__PURE__*/htmlElementFactory<HTMLProgressElementAttrs, HTMLProgressElement>(\"progress\");\n\n/**\n * Creates OpNode HTML element <q>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/q}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <q>\n */\nexport const q = /*#__PURE__*/htmlElementFactory<HTMLQuoteElementAttrs, HTMLQuoteElement>(\"q\");\n\n/**\n * Creates OpNode HTML element <rt>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/rt}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <rt>\n */\nexport const rt = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"rt\");\n\n/**\n * Creates OpNode HTML element <ruby>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ruby}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <ruby>\n */\nexport const ruby = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"ruby\");\n\n/**\n * Creates OpNode HTML element <s>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/s}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <s>\n */\nexport const s = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"s\");\n\n/**\n * Creates OpNode HTML element <samp>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/samp}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <samp>\n */\nexport const samp = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"samp\");\n\n/**\n * Creates OpNode HTML element <script>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <script>\n */\nexport const script = /*#__PURE__*/htmlElementFactory<HTMLScriptElementAttrs, HTMLScriptElement>(\"script\");\n\n/**\n * Creates OpNode HTML element <section>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/section}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <section>\n */\nexport const section = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"section\");\n\n/**\n * Creates OpNode HTML element <select>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <select>\n */\nexport const select = /*#__PURE__*/htmlElementFactory<HTMLSelectElementAttrs, HTMLSelectElement>(\"select\");\n\n/**\n * Creates OpNode HTML element <source>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/source}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <source>\n */\nexport const source = /*#__PURE__*/elementFactory<HTMLSourceElementAttrs, HTMLSourceElement>(\"source\", NodeFlags.Element | NodeFlags.VoidElement);\n\n/**\n * Creates OpNode HTML element <span>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <span>\n */\nexport const span = /*#__PURE__*/htmlElementFactory<HTMLSpanElementAttrs, HTMLSpanElement>(\"span\");\n\n/**\n * Creates OpNode HTML element <strong>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/strong}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <strong>\n */\nexport const strong = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"strong\");\n\n/**\n * Creates OpNode HTML element <style>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/style}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <style>\n */\nexport const style = /*#__PURE__*/htmlElementFactory<HTMLStyleElementAttrs, HTMLStyleElement>(\"style\");\n\n/**\n * Creates OpNode HTML element <sub>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/sub}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <sub>\n */\nexport const sub = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"sub\");\n\n/**\n * Creates OpNode HTML element <sup>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/sup}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <sup>\n */\nexport const sup = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"sup\");\n\n/**\n * Creates OpNode HTML element <table>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/table}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <table>\n */\nexport const table = /*#__PURE__*/htmlElementFactory<HTMLTableElementAttrs, HTMLTableElement>(\"table\");\n\n/**\n * Creates OpNode HTML element <tbody>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tbody}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <tbody>\n */\nexport const tbody = /*#__PURE__*/htmlElementFactory<HTMLTableSectionElementAttrs, HTMLTableSectionElement>(\"tbody\");\n\n/**\n * Creates OpNode HTML element <td>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/td}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <td>\n */\nexport const td = /*#__PURE__*/htmlElementFactory<HTMLTableDataCellElementAttrs, HTMLTableDataCellElement>(\"td\");\n\n/**\n * Creates OpNode HTML element <template>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/template}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <template>\n */\nexport const template = /*#__PURE__*/htmlElementFactory<HTMLTemplateElementAttrs, HTMLTemplateElement>(\"template\");\n\n/**\n * Creates OpNode HTML element <tfoot>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tfoot}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <tfoot>\n */\nexport const tfoot = /*#__PURE__*/htmlElementFactory<HTMLTableSectionElementAttrs, HTMLTableSectionElement>(\"tfoot\");\n\n/**\n * Creates OpNode HTML element <th>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/th}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <th>\n */\nexport const th = /*#__PURE__*/htmlElementFactory<HTMLTableHeaderCellElementAttrs, HTMLTableHeaderCellElement>(\"th\");\n\n/**\n * Creates OpNode HTML element <thead>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/thead}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <thead>\n */\nexport const thead = /*#__PURE__*/htmlElementFactory<HTMLTableSectionElementAttrs, HTMLTableSectionElement>(\"thead\");\n\n/**\n * Creates OpNode HTML element <time>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/time}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <time>\n */\nexport const time = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"time\");\n\n/**\n * Creates OpNode HTML element <title>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/title}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <title>\n */\nexport const title = /*#__PURE__*/htmlElementFactory<HTMLTitleElementAttrs, HTMLTitleElement>(\"title\");\n\n/**\n * Creates OpNode HTML element <tr>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tr}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <tr>\n */\nexport const tr = /*#__PURE__*/htmlElementFactory<HTMLTableRowElementAttrs, HTMLTableRowElement>(\"tr\");\n\n/**\n * Creates OpNode HTML element <track>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/track}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <track>\n */\nexport const track = /*#__PURE__*/elementFactory<HTMLTrackElementAttrs, HTMLTrackElement>(\"track\", NodeFlags.Element | NodeFlags.VoidElement);\n\n/**\n * Creates OpNode HTML element <u>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/u}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <u>\n */\nexport const u = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"u\");\n\n/**\n * Creates OpNode HTML element <ul>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ul}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <ul>\n */\nexport const ul = /*#__PURE__*/htmlElementFactory<HTMLUListElementAttrs, HTMLUListElement>(\"ul\");\n\n/**\n * Creates OpNode HTML element <wbr>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/wbr}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <wbr>\n */\nexport const wbr = /*#__PURE__*/elementFactory<HTMLElementAttrs, HTMLElement>(\"wbr\", NodeFlags.Element | NodeFlags.VoidElement);\n\n/**\n * Creates OpNode HTML element <textarea>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <textarea>\n */\nexport const textarea = /*#__PURE__*/elementFactory<HTMLTextAreaElementAttrs, HTMLTextAreaElement>(\"textarea\", NodeFlags.Element | NodeFlags.NewlineEatingElement);\n\n/**\n * Creates OpNode HTML element <input>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <input>\n */\nexport const input = /*#__PURE__*/elementFactory<HTMLInputElementAttrs, HTMLInputElement>(\"input\", NodeFlags.Element | NodeFlags.VoidElement);\n\n/**\n * Creates OpNode HTML element <audio>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <audio>\n */\nexport const audio = /*#__PURE__*/htmlElementFactory<HTMLAudioElementAttrs, HTMLAudioElement>(\"audio\");\n\n/**\n * Creates OpNode HTML element <video>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <video>\n */\nexport const video = /*#__PURE__*/htmlElementFactory<HTMLVideoElementAttrs, HTMLVideoElement>(\"video\");\n","var MonitorMaxSamples = 100;\nvar MonitorSamplesResult = (function () {\n    function MonitorSamplesResult(min, max, mean, last) {\n        this.min = min;\n        this.max = max;\n        this.mean = mean;\n        this.last = last;\n    }\n    return MonitorSamplesResult;\n}());\n/**\n * Profile Samples.\n */\nvar MonitorSamples = (function () {\n    function MonitorSamples(maxSamples) {\n        this.samples = [];\n        this.maxSamples = maxSamples;\n        this._i = -1;\n    }\n    MonitorSamples.prototype.addSample = function (v) {\n        this._i = (this._i + 1) % this.maxSamples;\n        this.samples[this._i] = v;\n    };\n    MonitorSamples.prototype.each = function (fn) {\n        var samples = this.samples;\n        for (var i = 0; i < samples.length; i++) {\n            fn(samples[(this._i + 1 + i) % samples.length], i);\n        }\n    };\n    MonitorSamples.prototype.calc = function () {\n        var samples = this.samples;\n        if (samples.length === 0) {\n            return new MonitorSamplesResult(0, 0, 0, 0);\n        }\n        var min = samples[(this._i + 1) % samples.length];\n        var max = min;\n        var sum = 0;\n        for (var i = 0; i < samples.length; i++) {\n            var k = samples[(this._i + 1 + i) % samples.length];\n            if (k < min) {\n                min = k;\n            }\n            if (k > max) {\n                max = k;\n            }\n            sum += k;\n        }\n        var last = samples[this._i];\n        var mean = sum / samples.length;\n        return new MonitorSamplesResult(min, max, mean, last);\n    };\n    return MonitorSamples;\n}());\n\n/**\n * Basic Counter.\n */\nvar BasicCounter = (function () {\n    function BasicCounter() {\n        this.value = 0;\n        this.onChange = null;\n    }\n    BasicCounter.prototype.inc = function (value) {\n        if (value > 0) {\n            this.value += value;\n            this.onChange();\n        }\n    };\n    return BasicCounter;\n}());\nvar TimestampedValue = (function () {\n    function TimestampedValue(timestamp, value) {\n        this.value = value;\n        this.next = null;\n    }\n    return TimestampedValue;\n}());\n/**\n * Sliding Counter counts how many times `inc` method were called during `interval` period.\n */\nvar SlidingCounter = (function () {\n    function SlidingCounter(interval) {\n        var _this = this;\n        this._dec = function () {\n            var now = performance.now();\n            while (_this._firstTimestamp !== null) {\n                var nextTimestamp = _this._firstTimestamp;\n                if (now >= nextTimestamp.value) {\n                    _this.value -= nextTimestamp.value;\n                    _this._firstTimestamp = _this._firstTimestamp.next;\n                }\n                else {\n                    setTimeout(_this._dec, Math.ceil(nextTimestamp.value - now));\n                    break;\n                }\n            }\n            if (_this._firstTimestamp === null) {\n                _this._lastTimestamp = null;\n            }\n            _this.onChange();\n        };\n        this.interval = interval;\n        this.value = 0;\n        this.onChange = null;\n        this._firstTimestamp = null;\n        this._lastTimestamp = null;\n    }\n    SlidingCounter.prototype.inc = function (value) {\n        if (value > 0) {\n            var timestamp = new TimestampedValue(performance.now() + this.interval, value);\n            if (this._firstTimestamp === null) {\n                this._firstTimestamp = timestamp;\n                setTimeout(this._dec, this.interval);\n            }\n            else {\n                this._lastTimestamp.next = timestamp;\n            }\n            this._lastTimestamp = timestamp;\n            this.value += value;\n            this.onChange();\n        }\n    };\n    return SlidingCounter;\n}());\n\nvar frameTasks = [];\nvar rafId = -1;\n/**\n * Schedule new task that will be executed on the next frame.\n */\nfunction scheduleNextFrameTask(task) {\n    frameTasks.push(task);\n    if (rafId === -1) {\n        requestAnimationFrame(function (t) {\n            rafId = -1;\n            var tasks = frameTasks;\n            frameTasks = [];\n            for (var i = 0; i < tasks.length; i++) {\n                tasks[i]();\n            }\n        });\n    }\n}\n\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar MonitorGraphHeight = 30;\nvar MonitorGraphWidth = MonitorMaxSamples;\nvar Widget = (function () {\n    function Widget(name) {\n        var _this = this;\n        this._sync = function () {\n            _this.sync();\n            _this._dirty = false;\n        };\n        this.name = name;\n        this.element = document.createElement(\"div\");\n        this.element.style.cssText = \"padding: 2px;\" +\n            \"background-color: #020;\" +\n            \"font-family: monospace;\" +\n            \"font-size: 12px;\" +\n            \"color: #0f0\";\n        this._dirty = false;\n        this.invalidate();\n    }\n    Widget.prototype.invalidate = function () {\n        if (!this._dirty) {\n            this._dirty = true;\n            scheduleNextFrameTask(this._sync);\n        }\n    };\n    Widget.prototype.sync = function () {\n        throw new Error(\"sync method not implemented\");\n    };\n    return Widget;\n}());\nvar MonitorWidgetFlags;\n(function (MonitorWidgetFlags) {\n    MonitorWidgetFlags[MonitorWidgetFlags[\"HideMin\"] = 1] = \"HideMin\";\n    MonitorWidgetFlags[MonitorWidgetFlags[\"HideMax\"] = 2] = \"HideMax\";\n    MonitorWidgetFlags[MonitorWidgetFlags[\"HideMean\"] = 4] = \"HideMean\";\n    MonitorWidgetFlags[MonitorWidgetFlags[\"HideLast\"] = 8] = \"HideLast\";\n    MonitorWidgetFlags[MonitorWidgetFlags[\"HideGraph\"] = 16] = \"HideGraph\";\n    MonitorWidgetFlags[MonitorWidgetFlags[\"RoundValues\"] = 32] = \"RoundValues\";\n})(MonitorWidgetFlags || (MonitorWidgetFlags = {}));\nvar MonitorWidget = (function (_super) {\n    __extends(MonitorWidget, _super);\n    function MonitorWidget(name, flags, unitName, samples) {\n        var _this = _super.call(this, name) || this;\n        _this.flags = flags;\n        _this.unitName = unitName;\n        _this.samples = samples;\n        var label = document.createElement(\"div\");\n        label.style.cssText = \"text-align: center\";\n        label.textContent = _this.name;\n        var text = document.createElement(\"div\");\n        if ((flags & MonitorWidgetFlags.HideMin) === 0) {\n            _this.minText = document.createElement(\"div\");\n            text.appendChild(_this.minText);\n        }\n        else {\n            _this.minText = null;\n        }\n        if ((flags & MonitorWidgetFlags.HideMax) === 0) {\n            _this.maxText = document.createElement(\"div\");\n            text.appendChild(_this.maxText);\n        }\n        else {\n            _this.maxText = null;\n        }\n        if ((flags & MonitorWidgetFlags.HideMean) === 0) {\n            _this.meanText = document.createElement(\"div\");\n            text.appendChild(_this.meanText);\n        }\n        else {\n            _this.meanText = null;\n        }\n        if ((flags & MonitorWidgetFlags.HideLast) === 0) {\n            _this.lastText = document.createElement(\"div\");\n            text.appendChild(_this.lastText);\n        }\n        else {\n            _this.lastText = null;\n        }\n        _this.element.appendChild(label);\n        _this.element.appendChild(text);\n        if ((flags & MonitorWidgetFlags.HideGraph) === 0) {\n            _this.canvas = document.createElement(\"canvas\");\n            _this.canvas.style.cssText = \"display: block; padding: 0; margin: 0\";\n            _this.canvas.width = MonitorGraphWidth;\n            _this.canvas.height = MonitorGraphHeight;\n            _this.ctx = _this.canvas.getContext(\"2d\");\n            _this.element.appendChild(_this.canvas);\n        }\n        else {\n            _this.canvas = null;\n            _this.ctx = null;\n        }\n        return _this;\n    }\n    MonitorWidget.prototype.sync = function () {\n        var _this = this;\n        var result = this.samples.calc();\n        var scale = MonitorGraphHeight / (result.max * 1.2);\n        var min;\n        var max;\n        var mean;\n        var last;\n        if ((this.flags & MonitorWidgetFlags.RoundValues) === 0) {\n            min = result.min.toFixed(2);\n            max = result.max.toFixed(2);\n            mean = result.mean.toFixed(2);\n            last = result.last.toFixed(2);\n        }\n        else {\n            min = Math.round(result.min).toString();\n            max = Math.round(result.max).toString();\n            mean = Math.round(result.mean).toString();\n            last = Math.round(result.last).toString();\n        }\n        if (this.minText !== null) {\n            this.minText.textContent = \"min: \\u00A0\" + min + this.unitName;\n        }\n        if (this.maxText !== null) {\n            this.maxText.textContent = \"max: \\u00A0\" + max + this.unitName;\n        }\n        if (this.meanText !== null) {\n            this.meanText.textContent = \"mean: \" + mean + this.unitName;\n        }\n        if (this.lastText !== null) {\n            this.lastText.textContent = \"last: \" + last + this.unitName;\n        }\n        if (this.ctx !== null) {\n            this.ctx.fillStyle = \"#010\";\n            this.ctx.fillRect(0, 0, MonitorGraphWidth, MonitorGraphHeight);\n            this.ctx.fillStyle = \"#0f0\";\n            this.samples.each(function (v, i) {\n                _this.ctx.fillRect(i, MonitorGraphHeight, 1, -(v * scale));\n            });\n        }\n    };\n    return MonitorWidget;\n}(Widget));\nvar CounterWidget = (function (_super) {\n    __extends(CounterWidget, _super);\n    function CounterWidget(name, counter) {\n        var _this = _super.call(this, name) || this;\n        _this.counter = counter;\n        _this.text = document.createElement(\"div\");\n        _this.element.appendChild(_this.text);\n        return _this;\n    }\n    CounterWidget.prototype.sync = function () {\n        this.text.textContent = this.name + \": \" + this.counter.value;\n    };\n    return CounterWidget;\n}(Widget));\n\nvar container = null;\nvar initialized = false;\n/**\n * Initialize Performance Monitor.\n */\nfunction initPerfMonitor(options) {\n    if (!initialized) {\n        if (options.container) {\n            container = options.container;\n        }\n        initialized = true;\n    }\n}\n/**\n * Check that everything is properly initialized.\n */\nfunction checkInit() {\n    if (!container) {\n        container = document.createElement(\"div\");\n        container.style.cssText = \"position: fixed;\" +\n            \"opacity: 0.9;\" +\n            \"right: 0;\" +\n            \"bottom: 0\";\n        document.body.appendChild(container);\n    }\n    initialized = true;\n}\n/**\n * Start FPS monitor\n */\nfunction startFPSMonitor(flags) {\n    if (flags === void 0) { flags = MonitorWidgetFlags.HideMin | MonitorWidgetFlags.HideMax |\n        MonitorWidgetFlags.HideMean | MonitorWidgetFlags.RoundValues; }\n    checkInit();\n    var data = new MonitorSamples(MonitorMaxSamples);\n    var w = new MonitorWidget(\"FPS\", flags, \"\", data);\n    container.appendChild(w.element);\n    var alpha = 2 / 121;\n    var last = 0;\n    var fps = 60;\n    function update(now) {\n        if (last > 0) {\n            fps += alpha * ((1000 / (now - last)) - fps);\n        }\n        last = now;\n        data.addSample(fps);\n        w.invalidate();\n        requestAnimationFrame(update);\n    }\n    requestAnimationFrame(update);\n}\n/**\n * Start Memory Monitor\n */\nfunction startMemMonitor(flags) {\n    if (flags === void 0) { flags = MonitorWidgetFlags.HideMin | MonitorWidgetFlags.HideMean; }\n    checkInit();\n    if (performance.memory === undefined) {\n        return;\n    }\n    var data = new MonitorSamples(MonitorMaxSamples);\n    var w = new MonitorWidget(\"Memory\", flags, \"MB\", data);\n    container.appendChild(w.element);\n    function update() {\n        data.addSample(Math.round(performance.memory.usedJSHeapSize / (1024 * 1024)));\n        w.invalidate();\n        setTimeout(update, 30);\n    }\n    update();\n}\nvar ProfilerDetails = (function () {\n    function ProfilerDetails(name, unitName, flags) {\n        this.data = new MonitorSamples(MonitorMaxSamples);\n        this.widget = new MonitorWidget(name, flags, unitName, this.data);\n        this.startTime = -1;\n    }\n    return ProfilerDetails;\n}());\nvar profilerInstances = {};\nvar CounterDetails = (function () {\n    function CounterDetails(name, interval) {\n        var _this = this;\n        this.data = interval === undefined ? new BasicCounter() : new SlidingCounter(interval);\n        this.widget = new CounterWidget(name, this.data);\n        this.data.onChange = function () {\n            _this.widget.invalidate();\n        };\n    }\n    return CounterDetails;\n}());\nvar counterInstances = {};\n/**\n * Initialize profiler and insert into container.\n */\nfunction initProfiler(name, flags) {\n    if (flags === void 0) { flags = 0; }\n    checkInit();\n    var profiler = profilerInstances[name];\n    if (profiler === void 0) {\n        profilerInstances[name] = profiler = new ProfilerDetails(name, \"ms\", flags);\n        container.appendChild(profiler.widget.element);\n    }\n}\n/**\n * Initialize counter and insert into container.\n */\nfunction initCounter(name, interval) {\n    checkInit();\n    var counter = counterInstances[name];\n    if (counter === void 0) {\n        counterInstances[name] = counter = new CounterDetails(name, interval);\n        container.appendChild(counter.widget.element);\n    }\n}\nfunction startProfile(name) {\n    var profiler = profilerInstances[name];\n    if (profiler !== void 0) {\n        profiler.startTime = performance.now();\n    }\n}\nfunction endProfile(name) {\n    var now = performance.now();\n    var profiler = profilerInstances[name];\n    if (profiler !== void 0 && profiler.startTime !== -1) {\n        profiler.data.addSample(now - profiler.startTime);\n        profiler.widget.invalidate();\n    }\n}\nfunction count(name, value) {\n    if (value === void 0) { value = 1; }\n    var counter = counterInstances[name];\n    if (counter !== void 0) {\n        counter.data.inc(value);\n    }\n}\n/**\n * lookup a profile by name\n * @param name the name of the profile to lookup\n */\nfunction getProfile(name) {\n    return profilerInstances[name];\n}\n/**\n * lookup a counter by name\n * @param name the name of the counter to lookup\n */\nfunction getCounter(name) {\n    return counterInstances[name];\n}\n\nexport { initPerfMonitor, startFPSMonitor, startMemMonitor, ProfilerDetails, CounterDetails, initProfiler, initCounter, startProfile, endProfile, count, getProfile, getCounter, MonitorSamplesResult, MonitorMaxSamples, MonitorSamples, BasicCounter, SlidingCounter, Widget, MonitorWidgetFlags, MonitorWidget, CounterWidget };\n","import { component, withNextFrame, render, _, useSelect, Context, context, TrackByKey, key, statelessComponent, } from \"ivi\";\nimport { span, div } from \"ivi-html\";\nimport { startFPSMonitor, startMemMonitor, initProfiler, startProfile, endProfile } from \"perf-monitor\";\nfunction randomColor() {\n    return \"#\" + Math.floor(Math.random() * 16777215).toString(16);\n}\nfunction generateData() {\n    const result = new Array(10000);\n    for (let i = 0; i < 10000; i++) {\n        result[i] = randomColor();\n    }\n    return result;\n}\nfunction updateData(data, mutations) {\n    if (mutations > 0) {\n        if (mutations === 1) {\n            for (let i = 0; i < 10000; i++) {\n                data[i] = randomColor();\n            }\n        }\n        else {\n            for (let i = 0; i < 10000; i++) {\n                if (Math.random() < mutations) {\n                    data[i] = randomColor();\n                }\n            }\n        }\n    }\n}\nconst Pixel = component((c) => {\n    const getColor = useSelect(c, (i) => context().data[i]);\n    return (i) => span(\"pixel\", { style: { background: getColor(i) } });\n});\nconst PixelImage = statelessComponent(() => {\n    const rows = [];\n    for (let i = 0; i < 100; i++) {\n        const offset = i * 100;\n        const cols = [];\n        for (let j = 0; j < 100; j++) {\n            cols.push(key(j, Pixel(offset + j)));\n        }\n        rows.push(key(i, div(\"row\", _, TrackByKey(cols))));\n    }\n    return div(\"image\", _, TrackByKey(rows));\n});\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    startFPSMonitor();\n    startMemMonitor();\n    initProfiler(\"data update\");\n    initProfiler(\"view update\");\n    let mutations = 0.5;\n    const sliderContainer = document.createElement(\"div\");\n    sliderContainer.style.margin = \"0 auto\";\n    sliderContainer.style.width = \"80%\";\n    const slider = document.createElement(\"input\");\n    slider.type = \"range\";\n    slider.style.width = \"100%\";\n    slider.addEventListener(\"change\", (e) => {\n        mutations = Number.parseFloat(e.target.value) / 100;\n    });\n    sliderContainer.appendChild(slider);\n    document.body.insertBefore(sliderContainer, document.body.firstChild);\n    const data = generateData();\n    const ctx = {\n        data: data,\n    };\n    const container = document.getElementById(\"app\");\n    render(Context(ctx, PixelImage()), container);\n    function tick() {\n        startProfile(\"data update\");\n        updateData(data, mutations);\n        endProfile(\"data update\");\n        startProfile(\"view update\");\n        withNextFrame(() => { render(Context(ctx, PixelImage()), container); })();\n        endProfile(\"view update\");\n        requestAnimationFrame(tick);\n    }\n    requestAnimationFrame(tick);\n});\n"],"sourceRoot":""}