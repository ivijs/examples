{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:////home/void/w/ts/ivi/packages/ivi/src/vdom/vnode.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/vdom/factories.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/core/shortcuts.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/vdom/map.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/core/feature_detection.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/core/noop.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/core/array.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/core/error.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/dom/namespaces.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/events/sync_events.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/vdom/sync.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/vdom/root.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/vdom/scheduler.ts","webpack:////home/void/w/ts/ivi/packages/ivi-html/src/index.ts","webpack:////home/void/w/ts/ivi-examples/node_modules/perf-monitor/dist/es5/perf-monitor.js","webpack:///./src/main.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","VNode","[object Object]","flags","tag","props","className","style","this","_f","_l","_r","_c","_t","_k","_p","_i","_cs","_s","_e","events","text","children","arguments","first","prev","length","last","getDOMNode","vnode","factories_context","ctx","child","nodeProto","Node","elementProto","Element","nodeInsertBefore","insertBefore","nodeRemoveChild","removeChild","nodeReplaceChild","replaceChild","nodeCloneNode","cloneNode","elementSetAttribute","setAttribute","elementRemoveAttribute","setAttributeNS","removeAttribute","mapRange","start","end","fn","v","opts","window","addEventListener","e","KeyboardEvent","MouseEvent","IOS_GESTURE_EVENT","NOOP","unorderedArrayDelete","array","index","pop","ERROR_HANDLERS","SVG_NAMESPACE","syncEvents","a","b","h1","h2","attachEvents","detachEvents","Array","registerEventHandler","unregisterEventHandler","h","handler","src","add","remove","_remove","parent","_detach","_attach","attached","component","detached","_dirtyCheck","context","dirtyContext","instance","_sync","render","updated","connect","selectData","select","assign","_removeAllChildren","textContent","_instantiate","node","document","createTextNode","svg","createElementNS","createElement","syncAttrs","syncStyle","_render","refChild","aFlags","bFlags","aProps","bProps","data","aChild","bChild","_syncChildrenTrackByKeys","textNode","firstChild","nodeValue","propsChanged","shouldUpdate","sc","aStartVNode","bStartVNode","aEndVNode","bEndVNode","step1Synced","outer","next","nextNode","aInnerLength","bInnerLength","lastPosition","bInnerArray","explicitKeyIndex","implicitKeyIndex","Map","set","prevPositionsForB","fill","step2Synced","seq","lis","slice","result","u","j","k","bValue","setProperty","removeProperty","syncAttr","element","ROOTS","findRoot","container","root","_invalidate","EMPTY_CONTEXT","_dirty","invalidateHandler","dirtyCheck","args","invalidate","current","onclick","indexOf","scheduler_render","push","div","attrs","css","span","extendStatics","MonitorWidgetFlags","MonitorMaxSamples","MonitorSamplesResult","min","max","mean","MonitorSamples","maxSamples","samples","addSample","each","calc","sum","frameTasks","rafId","__extends","setPrototypeOf","__proto__","__","constructor","MonitorGraphHeight","MonitorGraphWidth","Widget","_this","sync","cssText","task","requestAnimationFrame","tasks","Error","MonitorWidget","_super","unitName","label","HideMin","minText","appendChild","HideMax","maxText","HideMean","meanText","HideLast","lastText","HideGraph","canvas","width","height","getContext","scale","RoundValues","toFixed","Math","round","toString","fillStyle","fillRect","perf_monitor_container","CounterWidget","counter","checkInit","body","startFPSMonitor","w","fps","update","now","startMemMonitor","undefined","performance","memory","usedJSHeapSize","setTimeout","ProfilerDetails","widget","startTime","profilerInstances","initProfiler","profiler","startProfile","endProfile","randomColor","floor","random","generateData","updateData","mutations","Pixel","descriptor","_prev","color","background","PixelImage","offset","statelessComponent","sliderContainer","margin","slider","type","Number","parseFloat","target","getElementById","tick"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","import { NOOP } from \"../core/noop\";\nimport { objectHasOwnProperty } from \"../core/shortcuts\";\nimport { CSSStyleProps } from \"../dom/style\";\nimport { isVoidElement } from \"../debug/dom\";\nimport { checkVNodeConstructor, checkUniqueKeys } from \"../debug/vnode\";\nimport { EventHandler } from \"../events/event_handler\";\nimport { VNodeFlags } from \"./flags\";\nimport { StatelessComponent } from \"./stateless_component\";\nimport { StatefulComponent, Component } from \"./stateful_component\";\nimport { ConnectDescriptor } from \"./connect_descriptor\";\n\n/**\n * Virtual DOM Node.\n *\n * @example\n *\n *     const vnode = div(\"div-class-name\", { id: \"div-id\" })\n *       .e(onClick((e) => console.log(\"click event\", e)))\n *       .c(\"Hello\");\n *\n * @final\n */\nexport class VNode<P = any, N = Node> {\n  /**\n   * Flags, see {@link VNodeFlags} for details.\n   */\n  _f: VNodeFlags;\n  /**\n   * Circular link to previous sibling node (left).\n   */\n  _l: VNode;\n  /**\n   * Next sibling node (right).\n   */\n  _r: VNode | null;\n  /**\n   * Children.\n   */\n  _c: VNode | string | number | null;\n  /**\n   * Tag property contains details about the type of the element.\n   */\n  _t:\n    | string\n    | VNode\n    | StatefulComponent<any>\n    | StatelessComponent<any>\n    | ConnectDescriptor<any, any, {}>\n    | null;\n  /**\n   * Children syncing algorithm is using key property to match nodes. Key should be unique among its siblings.\n   */\n  _k: any;\n  /**\n   * Properties.\n   */\n  _p: P | undefined;\n  /**\n   * Reference to HTML node or Component instance.\n   *\n   * It will be available after virtual node is created or synced. Each time VNode is synced, reference will be\n   * transferred from the old VNode to the new one.\n   */\n  _i: N | Component<any> | {} | null;\n  /**\n   * Class name.\n   */\n  _cs: string | undefined;\n  /**\n   * Style.\n   */\n  _s: CSSStyleProps | undefined;\n  /**\n   * Events.\n   */\n  _e: Array<EventHandler | null> | EventHandler | null;\n  /**\n   * Factory function that was used to instantiate this node.\n   *\n   * It is used for debugging and testing purposes.\n   */\n  factory!: Function;\n\n  constructor(\n    flags: number,\n    tag:\n      | string\n      | VNode\n      | StatelessComponent<P>\n      | StatefulComponent<P>\n      | ConnectDescriptor<any, any, {}>\n      | null,\n    props: P | undefined,\n    className: string | undefined,\n    style: CSSStyleProps | undefined,\n  ) {\n    this._f = flags;\n    this._l = this;\n    this._r = null;\n    this._c = null;\n    this._t = tag;\n    this._k = 0;\n    this._p = props;\n    this._i = null;\n    this._cs = className;\n    this._s = style;\n    this._e = null;\n    /* istanbul ignore else */\n    if (DEBUG) {\n      checkVNodeConstructor(this);\n      this.factory = NOOP;\n    }\n  }\n\n  /**\n   * Assigns a key.\n   *\n   * Children reconciliation algorithm is using keys to match nodes. Key should be unique among its siblings.\n   *\n   * @param key - Unique key\n   * @returns this node\n   */\n  k(key: any): this {\n    this._f |= VNodeFlags.Key;\n    this._k = key;\n    return this;\n  }\n\n  /**\n   * Assign events.\n   *\n   * @param events - Events\n   * @returns this node\n   */\n  e(events: Array<EventHandler | null> | EventHandler | null): this {\n    /* istanbul ignore else */\n    if (DEBUG) {\n      if ((this._f & VNodeFlags.Text)) {\n        throw new Error(\"Failed to set events, events aren't available on text nodes\");\n      }\n    }\n    if (events !== null) {\n      this._f |= VNodeFlags.Events;\n      this._e = events;\n    }\n    return this;\n  }\n\n  /**\n   * Assigns a text content for ane Element node.\n   *\n   * @param text - Text content.\n   * @returns this node\n   */\n  t(text: string | number): this {\n    /* istanbul ignore else */\n    if (DEBUG) {\n      if (this._c !== null) {\n        throw new Error(\"Failed to set text content, VNode element is already having children\");\n      }\n      if (!(this._f & VNodeFlags.Element)) {\n        throw new Error(\"Failed to set text content, text content is available on element nodes only\");\n      }\n      if (isVoidElement(this._t as string)) {\n        throw new Error(\"Failed to set text content, void elements can't have any children\");\n      }\n      if (this._p) {\n        if (objectHasOwnProperty.call(this._p, \"unsafeHTML\")) {\n          throw new Error(\"Failed to set text content, element is using unsafeHTML attribute\");\n        }\n      }\n    }\n    this._f |= VNodeFlags.StopDirtyChecking | VNodeFlags.TextContent;\n    this._c = text;\n    return this;\n  }\n\n  /**\n   * Assigns children for an Element node.\n   *\n   * @param children - Children can be a simple string, single VNode or recursive list of VNodes with strings and null\n   *   values. It will automatically normalize recursive lists by flattening, filtering out null values and replacing\n   *   strings with text nodes.\n   * @returns this node\n   */\n  c(...children: Array<VNode | string | number | null>): this;\n  c(): this {\n    /* istanbul ignore else */\n    if (DEBUG) {\n      if (this._c !== null) {\n        throw new Error(\"Failed to set children, VNode element is already having children\");\n      }\n      if (!(this._f & VNodeFlags.Element)) {\n        throw new Error(\"Failed to set children, children are available on element nodes only\");\n      }\n      if (isVoidElement(this._t as string)) {\n        throw new Error(\"Failed to set children, void elements can't have any children\");\n      }\n      if (this._p) {\n        if (objectHasOwnProperty.call(this._p, \"unsafeHTML\")) {\n          throw new Error(\"Failed to set children, element is using unsafeHTML attribute\");\n        }\n      }\n    }\n\n    const children: Array<VNode | string | number | null> = arguments as any;\n    let first: VNode<any> | null = null;\n    let prev: VNode<any> | null = null;\n\n    for (let i = 0, p = 0; i < children.length; ++i, ++p) {\n      let n = children[i];\n\n      if (n !== null) {\n        if (typeof n !== \"object\") {\n          n = t(n);\n        }\n        const last = n._l;\n        const flags = n._f;\n        if (last === n) {\n          if ((flags & VNodeFlags.Key) === 0) {\n            n._k = p;\n          }\n        } else if ((flags & VNodeFlags.KeyedList) === 0) {\n          let c: VNode | null = n;\n          do {\n            if ((c!._f & VNodeFlags.Key) === 0) {\n              c!._k = p;\n            }\n            ++p;\n            c = c!._r;\n          } while (c !== null);\n          --p;\n        }\n\n        if (prev !== null) {\n          n._l = prev;\n          prev._r = n;\n        } else {\n          first = n;\n        }\n        prev = last;\n      }\n    }\n    if (first !== null) {\n      first._l = prev!;\n      this._f |= VNodeFlags.Children;\n      this._c = first;\n      /* istanbul ignore else */\n      if (DEBUG) {\n        checkUniqueKeys(first);\n      }\n    }\n\n    return this;\n  }\n}\n\n/**\n * Create a VNode representing a Text node.\n *\n * @param content Text content.\n * @returns VNode object.\n */\nexport function t(content: string | number): VNode<string | number, Text> {\n  return new VNode(VNodeFlags.Text, null, content, \"\", void 0);\n}\n\n/**\n * getDOMNode retrieves a reference to a DOM node from a VNode object.\n *\n * @param vnode - Virtual DOM node which contains reference to a DOM node.\n * @returns null if VNode doesn't have a reference to a DOM node.\n */\nexport function getDOMNode<T extends Node>(vnode: VNode<any, T>): T | null {\n  if ((vnode._f & (\n    VNodeFlags.StatelessComponent |\n    VNodeFlags.StatefulComponent |\n    VNodeFlags.Connect |\n    VNodeFlags.UpdateContext\n  )) !== 0) {\n    return getDOMNode<T>(vnode._c as VNode<any, T>);\n  }\n  return vnode._i as T;\n}\n\n/**\n * getComponent retrieves a reference to a Component instance from a VNode object.\n *\n * @param vnode - Virtual DOM node which contains reference to a Component instance.\n * @returns `null` if `vnode` doesn't have a reference to a Component instance\n */\nexport function getComponent<T extends Component<any>>(vnode: VNode): T | null {\n  /* istanbul ignore else */\n  if (DEBUG) {\n    if ((vnode._f & (\n      VNodeFlags.StatelessComponent |\n      VNodeFlags.StatefulComponent |\n      VNodeFlags.Connect |\n      VNodeFlags.UpdateContext\n    )) === 0) {\n      throw new Error(\"Failed to get component instance: VNode should represent a Component.\");\n    }\n  }\n  return vnode._i as T | null;\n}\n\n/**\n * stopDirtyChecking stops dirty checking process when it goes through this virtual DOM node.\n *\n * @param vnode - Virtual DOM node\n * @returns `vnode`\n */\nexport function stopDirtyChecking<N extends VNode>(vnode: N): N {\n  vnode._f |= VNodeFlags.StopDirtyChecking;\n  return vnode;\n}\n","import { CSSStyleProps } from \"../dom/style\";\nimport { VNodeFlags } from \"./flags\";\nimport { StatelessComponent } from \"./stateless_component\";\nimport { StatefulComponent } from \"./stateful_component\";\nimport { VNode } from \"./vnode\";\nimport { ConnectDescriptor } from \"./connect_descriptor\";\n\n/**\n * `element()` creates a virtual DOM node factory that produces elements with predefined attributes and styles.\n *\n * @example\n *\n *     const DivWithIdAttribute = element(div(\"\", { id: \"predefined-id\" }));\n *\n *     render(\n *       DivWithIdAttribute(),\n *       document.getElementById(\"app\")!,\n *     );\n *\n * @param proto - Virtual DOM prototype\n * @returns factory that produces elements with predefined attributes\n */\nexport function element<P, N>(proto: VNode<P, N>): (className?: string, attrs?: P, css?: CSSStyleProps) => VNode<P, N> {\n  const flags = proto._f | VNodeFlags.ElementFactory;\n  return (className?: string, attrs?: P, css?: CSSStyleProps) => (\n    new VNode<P, N>(\n      flags,\n      proto,\n      attrs,\n      className,\n      css,\n    )\n  );\n}\n\n/**\n * statelessComponent creates a virtual DOM node factory that produces nodes for stateless components.\n *\n * @example\n *\n *     const A = statelessComponent<{ text: string }>(\n *       (props) => div().c(props.text),\n *     );\n *\n *     render(\n *       A({ text: \"Hello\" }),\n *       DOMContainer,\n *     );\n *\n * @param render - Render function\n * @returns factory that produces stateless component nodes\n */\nexport function statelessComponent(c: () => VNode): () => VNode<undefined>;\n\n/**\n * statelessComponent creates a virtual DOM node factory that produces nodes for stateless components.\n *\n * @example\n *\n *     const A = statelessComponent<{ text: string }>(\n *       (props) => div().c(props.text),\n *     );\n *\n *     render(\n *       A({ text: \"Hello\" }),\n *       DOMContainer,\n *     );\n *\n * @param render - Render function\n * @returns factory that produces stateless component nodes\n */\nexport function statelessComponent<P>(\n  render: undefined extends P ? (props?: P) => VNode<any> : (props: P) => VNode<any>,\n): undefined extends P ? (props?: P) => VNode<P> : (props: P) => VNode<P>;\n\n/**\n * statelessComponent creates a virtual DOM node factory that produces nodes for stateless components.\n *\n * @example\n *\n *     const A = statelessComponent<{ text: string }>(\n *       (props) => div().c(props.text),\n *     );\n *\n *     render(\n *       A({ text: \"Hello\" }),\n *       DOMContainer,\n *     );\n *\n * @param render - Render function\n * @returns factory that produces stateless component nodes\n */\nexport function statelessComponent<P>(render: (props: P) => VNode<any>): (props: P) => VNode<P> {\n  const d = { render, shouldUpdate: null };\n  const f = (props: P) => {\n    const n = new VNode<P>(\n      VNodeFlags.StatelessComponent,\n      d,\n      props,\n      \"\",\n      void 0,\n    );\n    /* istanbul ignore else */\n    if (DEBUG) {\n      n.factory = f;\n    }\n    return n;\n  };\n  return f;\n}\n\n/**\n * withShouldUpdate creates a virtual DOM node factory that produces nodes for stateless components with custom\n * `shouldUpdate` function to prevent unnecessary updates.\n *\n * @example\n *\n *     const A = withShouldUpdate<{ text: string }>(\n *       (prevProps, nextProps) => prevProps.text !== nextProps.text,\n *       statelessComponent(\n *         (props) => div().c(props.text),\n *       ),\n *     );\n *\n *     render(\n *       A({ text: \"Hello\" }),\n *       DOMContainer,\n *     );\n *\n * @param shouldUpdate - Function that performs an early check that prevent unnecessary updates\n * @param factory - Factory that produces stateless component nodes\n * @returns factory that produces stateless component nodes\n */\nexport function withShouldUpdate<P>(\n  shouldUpdate: (oldProps: P, newProps: P) => boolean,\n  factory: (props: P) => VNode<P>,\n): (props: P) => VNode<P> {\n  const v = factory(null as any);\n  const d = { render: (v._t as StatelessComponent<P>).render, shouldUpdate };\n  const f = (props: P) => {\n    const n = new VNode<P>(\n      VNodeFlags.StatelessComponent | VNodeFlags.ShouldUpdateHint,\n      d,\n      props,\n      \"\",\n      void 0,\n    );\n    /* istanbul ignore else */\n    if (DEBUG) {\n      n.factory = f;\n    }\n    return n;\n  };\n  return f;\n}\n\n/**\n * statefulComponent creates a virtual DOM node factory that produces nodes for stateful components.\n *\n * @example\n *\n *     const A = component(class extends Component<string> {\n *       onClick = onClick(() => console.log(this.props));\n *\n *       render() {\n *         return (\n *           button()\n *             .e(this.onClick)\n *             .c(\"Click Me\")\n *         );\n *       }\n *     });\n *\n *     render(\n *       A(\"clicked\"),\n *       DOMContainer,\n *     );\n *\n * @param c - Stateful component\n * @returns factory that produces stateful component nodes\n */\nexport function statefulComponent(c: StatefulComponent<undefined>): () => VNode<undefined>;\n\n/**\n * statefulComponent creates a virtual DOM node factory that produces nodes for stateful components.\n *\n * @example\n *\n *     const A = component(class extends Component<string> {\n *       onClick = onClick(() => console.log(this.props));\n *\n *       render() {\n *         return (\n *           button()\n *             .e(this.onClick)\n *             .c(\"Click Me\")\n *         );\n *       }\n *     });\n *\n *     render(\n *       A(\"clicked\"),\n *       DOMContainer,\n *     );\n *\n * @param c - Stateful component\n * @returns factory that produces stateful component nodes\n */\nexport function statefulComponent<P>(\n  c: StatefulComponent<P>,\n): undefined extends P ? (props?: P) => VNode<P> : (props: P) => VNode<P>;\n\n/**\n * statefulComponent creates a virtual DOM node factory that produces nodes for stateful components.\n *\n * @example\n *\n *     const A = component(class extends Component<string> {\n *       onClick = onClick(() => console.log(this.props));\n *\n *       render() {\n *         return (\n *           button()\n *             .e(this.onClick)\n *             .c(\"Click Me\")\n *         );\n *       }\n *     });\n *\n *     render(\n *       A(\"clicked\"),\n *       DOMContainer,\n *     );\n *\n * @param c - Stateful component\n * @returns factory that produces stateful component nodes\n */\nexport function statefulComponent<P>(\n  c: StatefulComponent<P>,\n): (props: P) => VNode<P> {\n  const f = (props: P) => {\n    const n = new VNode<P>(\n      VNodeFlags.StatefulComponent,\n      c,\n      props,\n      \"\",\n      void 0,\n    );\n    /* istanbul ignore else */\n    if (DEBUG) {\n      n.factory = f;\n    }\n    return n;\n  };\n  return f;\n}\n\n/**\n * context creates a virtual DOM node that will modify current context.\n *\n * @example\n *\n *     render(\n *       context({ key: 123 },\n *         ChildComponent(),\n *       ),\n *       DOMContainer,\n *     );\n *\n * @param ctx - Context object\n * @param child - child Virtual DOM node\n * @returns context node\n */\nexport function context<T = {}>(ctx: T, child: VNode): VNode<T> {\n  /* istanbul ignore else */\n  if (DEBUG) {\n    if (child._l !== child) {\n      throw new Error(\"Context node contains an invalid child. Child should be a singular VNode.\");\n    }\n  }\n  const n = new VNode<T>(\n    VNodeFlags.UpdateContext,\n    null,\n    ctx,\n    \"\",\n    void 0,\n  );\n  n._c = child;\n  return n;\n}\n\n/**\n * connect creates a virtual DOM node factory that produces connector nodes.\n *\n * @example\n *\n *     const Connector = connect<string, undefined, { result: string }>(\n *       (prev, props, context) => {\n *         const result = context.result;\n *\n *         return (prev !== null && prev === result) ? prev :\n *           result;\n *       },\n *       (text) => div().c(text),\n *     );\n *\n *     render(\n *       context({ result: \"text\" },\n *         Connector(),\n *       ),\n *       DOMContainer,\n *     );\n *\n * @param select - Selector function\n * @param render - Render function\n * @returns factory that produces connector nodes\n */\nexport function connect<T>(\n  select: (prev: T | null) => T,\n  render: (props: T) => VNode<any>,\n): () => VNode<undefined>;\n\n/**\n * connect creates a virtual DOM node factory that produces connector nodes.\n *\n * @example\n *\n *     const Connector = connect<string, undefined, { result: string }>(\n *       (prev, props, context) => {\n *         const result = context.result;\n *\n *         return (prev !== null && prev === result) ? prev :\n *           result;\n *       },\n *       (text) => div().c(text),\n *     );\n *\n *     render(\n *       context({ result: \"text\" },\n *         Connector(),\n *       ),\n *       DOMContainer,\n *     );\n *\n * @param select - Selector function\n * @param render - Render function\n * @returns factory that produces connector nodes\n */\nexport function connect<T, P>(\n  select: undefined extends P ? (prev: T | null, props?: P) => T : (prev: T | null, props: P) => T,\n  render: (props: T) => VNode<any>,\n): undefined extends P ? () => VNode<P> : (props: P) => VNode<P>;\n\n/**\n * connect creates a virtual DOM node factory that produces connector nodes.\n *\n * @example\n *\n *     const Connector = connect<string, undefined, { result: string }>(\n *       (prev, props, context) => {\n *         const result = context.result;\n *\n *         return (prev !== null && prev === result) ? prev :\n *           result;\n *       },\n *       (text) => div().c(text),\n *     );\n *\n *     render(\n *       context({ result: \"text\" },\n *         Connector(),\n *       ),\n *       DOMContainer,\n *     );\n *\n * @param select - Selector function\n * @param render - Render function\n * @returns factory that produces connector nodes\n */\nexport function connect<T, P, C>(\n  select: (prev: T | null, props: P, context: C) => T,\n  render: (props: T) => VNode<any>,\n): undefined extends P ? () => VNode<P> : (props: P) => VNode<P>;\n\n/**\n * connect creates a virtual DOM node factory that produces connector nodes.\n *\n * @example\n *\n *     const Connector = connect<string, undefined, { result: string }>(\n *       (prev, props, context) => {\n *         const result = context.result;\n *\n *         return (prev !== null && prev === result) ? prev :\n *           result;\n *       },\n *       (text) => div().c(text),\n *     );\n *\n *     render(\n *       context({ result: \"text\" },\n *         Connector(),\n *       ),\n *       DOMContainer,\n *     );\n *\n * @param select - Selector function\n * @param render - Render function\n * @returns factory that produces connector nodes\n */\nexport function connect<T, P, C>(\n  select: (prev: T | null, props: P, context: C) => T,\n  render: (props: T) => VNode<any>,\n): (props: P) => VNode<P> {\n  const descriptor = { select, render };\n  const f = (props: P) => {\n    const n = new VNode<P>(\n      VNodeFlags.Connect,\n      descriptor as ConnectDescriptor<any, any, {}>,\n      props,\n      \"\",\n      void 0,\n    );\n    /* istanbul ignore else */\n    if (DEBUG) {\n      n.factory = f;\n    }\n    return n;\n  };\n  return f;\n}\n","const nodeProto = Node.prototype;\nconst elementProto = Element.prototype;\n\n/**\n * Shortcut for an `Object.prototype.hasOwnProperty`.\n */\nexport const objectHasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Shortcut for a `Node.prototype.insertBefore`.\n */\nexport const nodeInsertBefore = nodeProto.insertBefore;\n\n/**\n * Shortcut for a `Node.prototype.removeChild`.\n */\nexport const nodeRemoveChild = nodeProto.removeChild;\n\n/**\n * Shortcut for a `Node.prototype.replaceChild`.\n */\nexport const nodeReplaceChild = nodeProto.replaceChild;\n\n/**\n * Shortcut for a `Node.prototype.cloneNode`.\n */\nexport const nodeCloneNode = nodeProto.cloneNode;\n\n/**\n * Shortcut for an `Element.prototype.setAttribute`.\n */\nexport const elementSetAttribute = elementProto.setAttribute;\n\n/**\n * Shortcut for an `Element.prototype.setAttributeNS`.\n */\nexport const elementSetAttributeNS = elementProto.setAttributeNS;\n\n/**\n * Shortcut for an `Element.prototype.removeAttribute`.\n */\nexport const elementRemoveAttribute = elementProto.removeAttribute;\n\n/**\n * Shortcut for an `undefined` value.\n */\nexport const _ = void 0;\n","import { VNodeFlags } from \"./flags\";\nimport { VNode } from \"./vnode\";\n\n/**\n * map creates a children collection with the results of calling a provided function on every element in the calling\n * array.\n *\n * @example\n *\n *     render(\n *       div().c(\n *         map([1, 2, 3], (item) => div().k(item)),\n *       ),\n *       DOMContainer,\n *     );\n *\n * @param items - Array\n * @param fn - Function that produces an element for the children collection\n * @returns Virtual DOM collection\n */\nexport function map<T, U>(array: Array<T>, fn: (item: T, index: number) => VNode<U> | null): VNode<U> | null {\n  let first: VNode<any> | null = null;\n  let prev: VNode<any> | null = null;\n  for (let i = 0; i < array.length; ++i) {\n    const n = fn(array[i], i);\n    if (n !== null) {\n      /* istanbul ignore else */\n      if (DEBUG) {\n        if ((n._f & VNodeFlags.Key) === 0) {\n          throw new Error(`VNodes created with a map() function should have an explicit key`);\n        }\n        if (n._l !== n) {\n          throw new Error(`VNodes created with a map() function should be a singular nodes`);\n        }\n      }\n      if (prev !== null) {\n        n._l = prev;\n        prev._r = n;\n      } else {\n        first = n;\n      }\n      prev = n;\n    }\n  }\n  if (first !== null) {\n    first._l = prev!;\n    first._f |= VNodeFlags.KeyedList;\n    return first;\n  }\n  return null;\n}\n\n/**\n * mapRange creates a children collection with the results of calling a provided function on every number in the\n * provided range.\n *\n * @example\n *\n *     const items = [1, 2, 3];\n *\n *     render(\n *       div().c(\n *         mapRange(0, items.length, (i) => div().k(items[i])),\n *       ),\n *       DOMContainer,\n *     );\n *\n * @param start - Range start\n * @param end - Range end\n * @param fn - Function that produces an element for the children collection\n * @returns Virtual DOM collection\n */\nexport function mapRange<T>(start: number, end: number, fn: (idx: number) => VNode<T> | null): VNode<T> | null {\n  const length = end - start;\n  let first: VNode<any> | null = null;\n  let prev: VNode<any> | null = null;\n  while (start < length) {\n    const n = fn(start++);\n    if (n !== null) {\n      /* istanbul ignore else */\n      if (DEBUG) {\n        if ((n._f & VNodeFlags.Key) === 0) {\n          throw new Error(`VNodes created with a mapRange() function should have an explicit key`);\n        }\n        if (n._l !== n) {\n          throw new Error(`VNodes created with a mapRange() function should be a singular nodes`);\n        }\n      }\n      if (prev !== null) {\n        n._l = prev;\n        prev._r = n;\n      } else {\n        first = n;\n      }\n      prev = n;\n    }\n  }\n  if (first !== null) {\n    first._l = prev!;\n    first._f |= VNodeFlags.KeyedList;\n    return first;\n  }\n  return null;\n}\n\n/**\n * mapIterable creates a children collection from an `IterableIterator` object.\n *\n * @example\n *\n *     const items = [1, 2, 3];\n *\n *     render(\n *       div().c(mapIterable(function* () {\n *         for (const item of items) {\n *           yield div().k(item);\n *         }\n *       }())),\n *       DOMContainer,\n *     );\n *\n * @param iterable - Iterable iterator\n * @returns Virtual DOM collection\n */\nexport function mapIterable<T>(iterable: IterableIterator<VNode<T>>): VNode<T> | null {\n  let first: VNode<any> | null = null;\n  let prev: VNode<any> | null = null;\n\n  for (const n of iterable) {\n    /* istanbul ignore else */\n    if (DEBUG) {\n      if ((n._f & VNodeFlags.Key) === 0) {\n        throw new Error(`VNodes created with a mapIterable() function should have an explicit key`);\n      }\n      if (n._l !== n) {\n        throw new Error(`VNodes created with a mapIterable() function should be a singular nodes`);\n      }\n    }\n    if (prev !== null) {\n      n._l = prev;\n      prev._r = n;\n    } else {\n      first = n;\n    }\n    prev = n;\n  }\n\n  if (first !== null) {\n    first._l = prev!;\n    first._f |= VNodeFlags.KeyedList;\n    return first;\n  }\n  return null;\n}\n","/**\n * Feature Detection is used to implement polyfills or just disable some features when browser doesn't support them.\n * For example, when browser doesn't support passive events, we can just ignore it and always use active events.\n */\n\n/* istanbul ignore next */\n/**\n * Passive event listeners are a new feature in the DOM spec that enable developers to opt-in to better scroll\n * performance by eliminating the need for scrolling to block on touch and wheel event listeners. Developers can\n * annotate touch and wheel listeners with {passive: true} to indicate that they will never invoke preventDefault.\n *\n * https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n */\nexport const PASSIVE_EVENTS = /*#__PURE__*/((TARGET === \"electron\") ? true :\n  (() => {\n    let v = false;\n    try {\n      // Test via a getter in the options object to see if the passive property is accessed\n      const opts = Object.defineProperty({}, \"passive\", {\n        get() {\n          v = true;\n        },\n      });\n      window.addEventListener(\"test\", null as any as (ev: Event) => void, opts);\n    } catch (e) {\n      // ignore\n    }\n    return v;\n  })());\n\n/* istanbul ignore next */\n/**\n * `key` property is available on KeyboardEvent instances.\n */\nexport const KEYBOARD_EVENT_KEY = /*#__PURE__*/(\n  (TARGET === \"electron\") ||\n  (TARGET === \"evergreen\") ||\n  KeyboardEvent.prototype.hasOwnProperty(\"key\")\n);\n\n/* istanbul ignore next */\n/**\n * `buttons` property is available on MouseEvent instances.\n */\nexport const MOUSE_EVENT_BUTTONS = /*#__PURE__*/(\n  (TARGET === \"electron\") ||\n  (TARGET === \"evergreen\") ||\n  MouseEvent.prototype.hasOwnProperty(\"buttons\")\n);\n\n/* istanbul ignore next */\n/**\n * Touch Events support.\n */\nexport const TOUCH_EVENTS = (\"ontouchstart\" in window);\n\n/* istanbul ignore next */\n/**\n * Pointer Events support.\n */\nexport const POINTER_EVENTS = ((TARGET === \"electron\") || (\"PointerEvent\" in window));\n\n/* istanbul ignore next */\n/**\n * InputDeviceCapabilities support.\n *\n * http://wicg.github.io/InputDeviceCapabilities/\n */\nexport const INPUT_DEVICE_CAPABILITIES = ((TARGET === \"electron\") || \"InputDeviceCapabilities\" in window);\n\n/* istanbul ignore next */\n/**\n * iOS proprietary GestureEvent.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/GestureEvent}\n */\nexport const IOS_GESTURE_EVENT = (TARGET !== \"electron\") && (\"GestureEvent\" in window);\n","/**\n * NOOP function.\n */\nexport function NOOP(): void {\n  /* tslint:disable:no-empty */\n  /* tslint:enable:no-empty */\n}\n\n/**\n * NOOP_FALSE function always returns `false` value.\n *\n * @returns `false` value.\n */\nexport function NOOP_FALSE(): boolean {\n  return false;\n}\n","/**\n * append pushes item to an array and automatically create a new array when it doesn't exist.\n *\n * @param array - Array\n * @param item - Item\n * @returns Array\n */\nexport function append<T>(array: T[] | null, item: T): T[] {\n  if (array === null) {\n    return [item];\n  }\n  array.push(item);\n  return array;\n}\n\n/**\n * unorderedArrayDelete deletes element from an array with O(1) complexity.\n *\n * It swaps element at `index` position with the last element and removes the last one.\n *\n * @param array - Array\n * @param index - Index of an element to remove\n */\nexport function unorderedArrayDelete<T>(array: T[], index: number): void {\n  const length = array.length - 1;\n  const last = array.pop();\n  if (index !== length) {\n    array[index] = last!;\n  }\n}\n","const ERROR_HANDLERS: Array<(e: any) => void> = [];\n\n/**\n * addErrorHandler adds an error handler for errors catched by functions decorated with `catchError()`.\n *\n * @param handler error handler.\n */\nexport function addErrorHandler(handler: (e: any) => void): void {\n  ERROR_HANDLERS.push(handler);\n}\n\n/**\n * catchError is a decorator that catches exceptions and invokes error handlers registered with `addErrorHandler()`.\n *\n * @noinline\n * @throws\n * @param fn - Function to decorate\n * @returns function decorated with a catchError\n */\nexport function catchError<T>(fn: (...args: any[]) => T): (...args: any[]) => T {\n  return (...args: any[]) => {\n    try {\n      return fn(...args);\n    } catch (e) {\n      for (const handler of ERROR_HANDLERS) {\n        handler(e);\n      }\n      throw e;\n    }\n  };\n}\n","export const SVG_NAMESPACE = \"http://www.w3.org/2000/svg\";\nexport const XLINK_NAMESPACE = \"http://www.w3.org/1999/xlink\";\nexport const XML_NAMESPACE = \"http://www.w3.org/XML/1998/namespace\";\n","import { EventHandlerFlags } from \"./flags\";\nimport { EventHandler } from \"./event_handler\";\n\n/**\n * syncEvents syncs event handlers and invokes EventSource callbacks when event handler is attached or detached.\n *\n * @param a Old event handlers.\n * @param b New event handlers.\n */\nexport function syncEvents(\n  a: Array<EventHandler | null> | EventHandler | null,\n  b: Array<EventHandler | null> | EventHandler | null,\n): void {\n  let i: number;\n  let h1: EventHandler | null;\n  let h2: EventHandler | null;\n\n  if (a === null) {\n    attachEvents(b!);\n  } else if (b === null) {\n    detachEvents(a);\n  } else {\n    if (a instanceof Array) {\n      if (b instanceof Array) {\n        i = 0;\n        while (i < a.length && i < b.length) {\n          h1 = a[i];\n          h2 = b[i++];\n          if (h1 !== h2) {\n            if (h2 !== null) {\n              registerEventHandler(h2);\n            }\n            if (h1 !== null) {\n              unregisterEventHandler(h1);\n            }\n          }\n        }\n        while (i < b.length) {\n          h1 = b[i++];\n          if (h1 !== null) {\n            registerEventHandler(h1);\n          }\n        }\n        while (i < a.length) {\n          h1 = a[i++];\n          if (h1 !== null) {\n            unregisterEventHandler(h1);\n          }\n        }\n      } else {\n        registerEventHandler(b as EventHandler);\n\n        for (i = 0; i < a.length; ++i) {\n          h1 = a[i];\n          if (h1 !== null) {\n            unregisterEventHandler(h1);\n          }\n        }\n      }\n    } else {\n      attachEvents(b);\n      unregisterEventHandler(a as EventHandler);\n    }\n  }\n}\n\n/**\n * attachEvents attaches event handlers and invokes EventSource callbacks.\n *\n * @param events Event handlers.\n */\nexport function attachEvents(events: Array<EventHandler | null> | EventHandler): void {\n  if (events instanceof Array) {\n    for (let i = 0; i < events.length; ++i) {\n      const h = events[i];\n      if (h !== null) {\n        registerEventHandler(h);\n      }\n    }\n  } else {\n    registerEventHandler(events as EventHandler);\n  }\n}\n\n/**\n * detachEvents detaches events handles and invokes EventSource callbacks.\n *\n * @param events Event handlers.\n */\nexport function detachEvents(events: Array<EventHandler | null> | EventHandler): void {\n  if (events instanceof Array) {\n    for (let i = 0; i < events.length; ++i) {\n      const h = events[i];\n      if (h !== null) {\n        unregisterEventHandler(h);\n      }\n    }\n  } else {\n    unregisterEventHandler(events as EventHandler);\n  }\n}\n\n/**\n * registerEventHandler is a shortcut for Event Handler registration.\n *\n * @param handler Event Handler.\n */\nfunction registerEventHandler(handler: EventHandler<any>): void {\n  /* istanbul ignore else */\n  if (DEBUG) {\n    handler.flags |= EventHandlerFlags.Active;\n  }\n  handler.src.add(handler);\n}\n\n/**\n * unregisterEventHandler is a shortcut for Event Handler unregistration.\n *\n * @param handler Event Handler.\n */\nfunction unregisterEventHandler(handler: EventHandler<any>): void {\n  /* istanbul ignore else */\n  if (DEBUG) {\n    handler.flags &= ~EventHandlerFlags.Active;\n  }\n  handler.src.remove(handler);\n}\n","import {\n  nodeRemoveChild, nodeInsertBefore, elementRemoveAttribute, elementSetAttribute, nodeCloneNode, nodeReplaceChild,\n} from \"../core/shortcuts\";\nimport { SVG_NAMESPACE } from \"../dom/namespaces\";\nimport { CSSStyleProps } from \"../dom/style\";\nimport { syncEvents, attachEvents, detachEvents } from \"../events/sync_events\";\nimport { SyncableValue } from \"./syncable_value\";\nimport { VNodeFlags, ComponentFlags } from \"./flags\";\nimport { VNode, getDOMNode } from \"./vnode\";\nimport { ConnectDescriptor } from \"./connect_descriptor\";\nimport { StatelessComponent } from \"./stateless_component\";\nimport { StatefulComponent, Component } from \"./stateful_component\";\n\n/**\n * Removes VNode.\n *\n * @param parent - Parent DOM node\n * @param vnode - Virtual DOM node to remove\n */\nexport function _remove(parent: Node, vnode: VNode): void {\n  /* istanbul ignore else */\n  if (DEBUG) {\n    parent.removeChild(getDOMNode(vnode)!);\n  } else {\n    nodeRemoveChild.call(parent, getDOMNode(vnode)!);\n  }\n  _detach(vnode);\n}\n\n/**\n * Recursively attach all nodes.\n *\n * @param vnode - Virtual DOM node\n */\nfunction _attach(vnode: VNode): void {\n  const flags = vnode._f;\n\n  if ((flags & (\n    VNodeFlags.Children |\n    VNodeFlags.StatelessComponent |\n    VNodeFlags.StatefulComponent |\n    VNodeFlags.Connect |\n    VNodeFlags.UpdateContext\n  )) !== 0) {\n    if ((flags & VNodeFlags.StatefulComponent) !== 0) {\n      (vnode._i as Component<any>).attached();\n    }\n\n    let child = vnode._c as VNode | null;\n    while (child !== null) {\n      _attach(child);\n      child = child._r;\n    }\n  }\n\n  if ((flags & VNodeFlags.Events) !== 0) {\n    attachEvents(vnode._e!);\n  }\n}\n\n/**\n * Recursively detach all nodes.\n *\n * @param vnode - Virtual DOM node\n */\nfunction _detach(vnode: VNode): void {\n  const flags = vnode._f;\n\n  if ((flags & (\n    VNodeFlags.Children |\n    VNodeFlags.StatelessComponent |\n    VNodeFlags.StatefulComponent |\n    VNodeFlags.Connect |\n    VNodeFlags.UpdateContext\n  )) !== 0) {\n    let child = vnode._c as VNode | null;\n    while (child !== null) {\n      _detach(child);\n      child = child._r;\n    }\n\n    if ((flags & VNodeFlags.StatefulComponent) !== 0) {\n      const component = vnode._i as Component<any>;\n      component.flags |= ComponentFlags.Detached;\n      component.detached();\n    }\n  }\n\n  if ((flags & VNodeFlags.Events) !== 0) {\n    detachEvents(vnode._e!);\n  }\n}\n\n/**\n * Recursively perform dirty checking.\n *\n * @param parent - Parent DOM Node\n * @param vnode - VNode\n * @param context - Current context\n * @param dirtyContext - Context is dirty\n */\nexport function _dirtyCheck(parent: Node, vnode: VNode, context: {}, dirtyContext: boolean): void {\n  const flags = vnode._f;\n  let child: VNode | null | undefined;\n  let instance: Node | Component<any> | {} | undefined;\n\n  if ((flags & (\n    VNodeFlags.StopDirtyChecking | // StopDirtyChecking will convert this value to -value\n    VNodeFlags.Children |\n    VNodeFlags.StatelessComponent |\n    VNodeFlags.StatefulComponent |\n    VNodeFlags.Connect |\n    VNodeFlags.UpdateContext\n  )) > 0) {\n    child = vnode._c as VNode | null;\n    if ((flags & VNodeFlags.Children) !== 0) {\n      instance = vnode._i as Node;\n      while (child !== null) {\n        _dirtyCheck(instance as Node, child, context, dirtyContext);\n        child = child._r;\n      }\n    } else if ((flags & VNodeFlags.StatefulComponent) !== 0) {\n      instance = vnode._i as Component<any>;\n      if (((instance as Component<any>).flags & ComponentFlags.Dirty) !== 0) {\n        _sync(\n          parent,\n          child!,\n          vnode._c = DEBUG ?\n            shouldBeSingleVNode((instance as Component<any>).render()) :\n            /* istanbul ignore next */(instance as Component<any>).render(),\n          context,\n          dirtyContext,\n        );\n        (instance as Component<any>).flags &= ~ComponentFlags.Dirty;\n        (instance as Component<any>).updated();\n      } else {\n        _dirtyCheck(parent, child!, context, dirtyContext);\n      }\n    } else { // (flags & (VNodeFlags.StatelessComponent | VNodeFlags.Connect | VNodeFlags.UpdateContext))\n      if ((flags & VNodeFlags.Connect) !== 0) {\n        const connect = vnode._t as ConnectDescriptor<any, any, {}>;\n        instance = vnode._i as {};\n        const selectData = connect.select(instance, vnode._p, context);\n        if (instance === selectData) {\n          _dirtyCheck(parent, child!, context, dirtyContext);\n        } else {\n          vnode._i = selectData;\n          _sync(\n            parent,\n            child!,\n            vnode._c = DEBUG ?\n              shouldBeSingleVNode(connect.render(selectData)) :\n              /* istanbul ignore next */connect.render(selectData),\n            context,\n            dirtyContext,\n          );\n        }\n      } else {\n        if ((flags & VNodeFlags.UpdateContext) !== 0) {\n          if (dirtyContext === true) {\n            vnode._i = { ...context, ...vnode._p };\n          }\n          context = vnode._i as {};\n        }\n        _dirtyCheck(parent, child!, context, dirtyContext);\n      }\n    }\n  }\n}\n\n/**\n * Remove all children.\n *\n * `detach()` lifecycle methods will be invoked for all children and their subtrees.\n *\n * @param parent - Parent DOM element\n * @param vnode - First Virtual DOM node\n */\nfunction _removeAllChildren(parent: Node, vnode: VNode): void;\nfunction _removeAllChildren(parent: Node, vnode: VNode | null): void {\n  parent.textContent = \"\";\n  do {\n    _detach(vnode!);\n    vnode = vnode!._r;\n  } while (vnode !== null);\n}\n\n/**\n * Render virtual DOM node.\n *\n * @param parent - Parent DOM element\n * @param vnode - Virtual DOM node to render\n * @param context - Current context\n * @returns Rendered DOM Node\n */\nfunction _instantiate(parent: Node, vnode: VNode, context: {}): Node {\n  /* istanbul ignore else */\n  if (DEBUG) {\n    if (vnode._i !== null) {\n      throw new Error(\"VNode is already have a reference to an instance. VNodes can't be used mutliple times, \" +\n        \"clone VNode with `cloneVNode`.\");\n    }\n  }\n\n  const flags = vnode._f;\n  const props = vnode._p;\n  let instance: Node | Component<any> | null = null;\n  let node: Node;\n\n  if ((flags & VNodeFlags.Text) !== 0) {\n    instance = node = document.createTextNode(props as string);\n  } else {\n    const tag = vnode._t;\n    if ((flags & (VNodeFlags.Element | VNodeFlags.StatefulComponent)) !== 0) {\n      if ((flags & VNodeFlags.Element) !== 0) {\n        const svg = (flags & VNodeFlags.SvgElement) !== 0;\n        if ((flags & VNodeFlags.ElementFactory) === 0) {\n          node = svg ?\n            document.createElementNS(SVG_NAMESPACE, tag as string) :\n            document.createElement(tag as string);\n        } else {\n          if ((tag as VNode)._i === null) {\n            _instantiate(parent, (tag as VNode), context);\n          }\n          /* istanbul ignore else */\n          if (DEBUG) {\n            node = ((tag as VNode)._i as Node).cloneNode(true);\n          } else {\n            node = nodeCloneNode.call((tag as VNode)._i as Node, true);\n          }\n        }\n        instance = node;\n\n        const className = vnode._cs;\n        if (className) {\n          /**\n           * SVGElement.className returns `SVGAnimatedString`\n           */\n          if (svg === true) {\n            /* istanbul ignore else */\n            if (DEBUG) {\n              (node as Element).setAttribute(\"class\", className);\n            } else {\n              elementSetAttribute.call(node as Element, \"class\", className);\n            }\n          } else {\n            (node as Element).className = className;\n          }\n        }\n\n        if (props !== void 0) {\n          syncAttrs(node as Element, void 0, props);\n        }\n        if (vnode._s !== void 0) {\n          syncStyle(node as HTMLElement, void 0, vnode._s);\n        }\n\n        if ((flags & VNodeFlags.Children) !== 0) {\n          let child = vnode._c as VNode | null;\n          while (child !== null) {\n            /* istanbul ignore else */\n            if (DEBUG) {\n              node.insertBefore(_instantiate(node, child, context), null);\n            } else {\n              nodeInsertBefore.call(node, _instantiate(node, child, context), null);\n            }\n            child = child._r;\n          }\n        } else if ((flags & VNodeFlags.TextContent) !== 0 && vnode._c !== \"\") {\n          node.textContent = vnode._c as string;\n        }\n      } else { // ((flags & VNodeFlags.StatefulComponent) !== 0)\n        instance = new (tag as StatefulComponent<any>)(props);\n        node = _instantiate(\n          parent,\n          vnode._c = DEBUG ?\n            shouldBeSingleVNode(instance.render()) :\n          /* istanbul ignore next */instance.render(),\n          context,\n        );\n      }\n    } else { // ((flags & (VNodeFlags.StatelessComponent | VNodeFlags.UpdateContext | VNodeFlags.Connect)) !== 0)\n      if ((flags & (VNodeFlags.UpdateContext | VNodeFlags.Connect)) !== 0) {\n        if ((flags & VNodeFlags.Connect) !== 0) {\n          const connect = (tag as ConnectDescriptor<any, any, {}>);\n          instance = connect.select(null, props, context);\n          vnode._c = DEBUG ?\n            shouldBeSingleVNode(connect.render(instance)) :\n            /* istanbul ignore next */connect.render(instance);\n        } else {\n          context = instance = { ...context, ...props };\n        }\n      } else {\n        vnode._c = DEBUG ?\n          shouldBeSingleVNode((tag as StatelessComponent<any>).render(props)) :\n          /* istanbul ignore next */(tag as StatelessComponent<any>).render(props);\n      }\n      node = _instantiate(parent, vnode._c as VNode, context);\n    }\n  }\n\n  vnode._i = instance;\n  return node;\n}\n\n/**\n * Render virtual DOM node into container and invoke `attached()` lifecycle methods after node is inserted into\n * container.\n *\n * It is important that `attached()` methods are invoked only after DOM nodes have been inserted into container, so it\n * goes twice through the entire vnode tree, first time when everything is rendered and the second time when\n * `attached()` methods are invoked.\n *\n * @param parent - Parent DOM element\n * @param refChild - Reference to the next DOM node, when it is `null` child will be inserted at the end\n * @param vnode - Virtual DOM node\n * @param context - Current context\n * @returns Rendered DOM Node\n */\nexport function _render(\n  parent: Node,\n  refChild: Node | null,\n  vnode: VNode,\n  context: {},\n): Node {\n  const node = _instantiate(parent, vnode, context);\n  /* istanbul ignore else */\n  if (DEBUG) {\n    parent.insertBefore(node, refChild);\n  } else {\n    nodeInsertBefore.call(parent, node, refChild);\n  }\n  _attach(vnode);\n  return node;\n}\n\n/**\n * Sync virtual DOM nodes.\n *\n * When node `a` is synced with node `b`, `a` node should be considered as destroyed, and any access to it after sync\n * is an undefined behavior.\n *\n * @param parent - Parent DOM element\n * @param a - Previous virtual DOM node\n * @param b - Next virtual DOM node\n * @param context - Current context\n * @param dirtyContext - Context is dirty\n */\nexport function _sync(\n  parent: Node,\n  a: VNode,\n  b: VNode,\n  context: {},\n  dirtyContext: boolean,\n): void {\n  if (a === b) {\n    _dirtyCheck(parent, b, context, dirtyContext);\n    return;\n  }\n\n  /* istanbul ignore else */\n  if (DEBUG) {\n    if (b._i !== null) {\n      throw new Error(\"VNode is already have a reference to an instance. VNodes can't be used mutliple times\");\n    }\n  }\n\n  let instance;\n  const aFlags = a._f;\n  const bFlags = b._f;\n  if (\n    (((aFlags ^ bFlags) & VNodeFlags.Syncable) === 0) &&\n    (\n      (aFlags & (\n        VNodeFlags.ElementFactory |\n        VNodeFlags.StatelessComponent |\n        VNodeFlags.StatefulComponent |\n        VNodeFlags.Connect\n      )) === 0 ||\n      a._t === b._t\n    ) &&\n    a._k === b._k\n  ) {\n    const aProps = a._p;\n    const bProps = b._p;\n    b._i = instance = a._i;\n\n    if ((bFlags & VNodeFlags.Text) !== 0) {\n      if (aProps !== bProps) {\n        (instance as Text).data = bProps as string;\n      }\n    } else {\n      const aChild = a._c;\n      let bChild = b._c;\n\n      if (a._e !== b._e) {\n        syncEvents(a._e, b._e);\n      }\n\n      if ((bFlags & (VNodeFlags.Element | VNodeFlags.StatefulComponent)) !== 0) {\n        if ((bFlags & VNodeFlags.Element) !== 0) {\n          let className = b._cs;\n          if (a._cs !== className) {\n            if (className === void 0) {\n              className = \"\";\n            }\n            if ((bFlags & VNodeFlags.SvgElement) !== 0) {\n              /* istanbul ignore else */\n              if (DEBUG) {\n                (instance as Element).setAttribute(\"class\", className);\n              } else {\n                elementSetAttribute.call(instance, \"class\", className);\n              }\n            } else {\n              (instance as Element).className = className;\n            }\n          }\n\n          if (aProps !== bProps) {\n            syncAttrs(instance as Element, aProps, bProps);\n          }\n          if (a._s !== b._s) {\n            syncStyle(instance as HTMLElement, a._s, b._s);\n          }\n\n          if (aChild !== bChild) {\n            if ((aFlags & VNodeFlags.TextContent) === 0) {\n              if (aChild === null) {\n                do {\n                  _render(instance as Element, null, bChild as VNode, context);\n                  bChild = (bChild as VNode)._r;\n                } while (bChild !== null);\n              } else if (bChild === null) {\n                _removeAllChildren(instance as Element, aChild as VNode);\n              } else {\n                _syncChildrenTrackByKeys(instance as Element, aChild as VNode, bChild as VNode, context, dirtyContext);\n              }\n            } else {\n              const textNode = (instance as Element).firstChild as Text | null;\n              if (textNode !== null) {\n                textNode.nodeValue = bChild as string;\n              } else {\n                (instance as Element).textContent = bChild as string;\n              }\n            }\n          }\n        } else { // VNodeFlags.StatefulComponent\n          if (aProps !== bProps) {\n            (instance as Component<any>).propsChanged(aProps, bProps);\n          }\n          // Reassign props even when they aren't changed to reduce overall memory usage.\n          //\n          // New value always stays alive because it is referenced from virtual dom tree, so instead of keeping\n          // in memory two values even when they are the same, we just always reassign it to the new value.\n          (instance as Component<any>).props = bProps;\n\n          if (\n            (((instance as Component<any>).flags & ComponentFlags.Dirty) !== 0) ||\n            ((instance as Component<any>).shouldUpdate(aProps, bProps) === true)\n          ) {\n            _sync(\n              parent,\n              aChild as VNode,\n              b._c = DEBUG ?\n                shouldBeSingleVNode((instance as Component<any>).render()) :\n                /* istanbul ignore next */(instance as Component<any>).render(),\n              context,\n              dirtyContext,\n            );\n            (instance as Component<any>).flags &= ~ComponentFlags.Dirty;\n            (instance as Component<any>).updated();\n          } else {\n            _dirtyCheck(parent, b._c = aChild as VNode, context, dirtyContext);\n          }\n        }\n      } else { // (VNodeFlags.StatelessComponent | VNodeFlags.UpdateContext | VNodeFlags.Connect)\n        if ((bFlags & (VNodeFlags.UpdateContext | VNodeFlags.Connect)) !== 0) {\n          if ((bFlags & VNodeFlags.Connect) !== 0) {\n            const connect = b._t as ConnectDescriptor<any, any, {}>;\n            const selectData = b._i = connect.select(instance, bProps, context);\n            if (instance === selectData) {\n              _dirtyCheck(parent, b._c = aChild as VNode, context, dirtyContext);\n            } else {\n              _sync(\n                parent,\n                aChild as VNode,\n                b._c = DEBUG ?\n                  shouldBeSingleVNode(connect.render(selectData)) :\n                    /* istanbul ignore next */connect.render(selectData),\n                context,\n                dirtyContext,\n              );\n            }\n          } else {\n            if (aProps !== bProps) {\n              dirtyContext = true;\n            }\n            b._i = context = (dirtyContext === true) ?\n              { ...context, ...bProps } :\n              instance as {};\n            _sync(parent, aChild as VNode, bChild as VNode, context, dirtyContext);\n          }\n        } else { // VNodeFlags.StatelessComponent\n          const sc = b._t as StatelessComponent<any>;\n          if (\n            (aProps !== bProps) &&\n            ((bFlags & VNodeFlags.ShouldUpdateHint) === 0 || sc.shouldUpdate!(aProps, bProps) === true)\n          ) {\n            _sync(\n              parent,\n              aChild as VNode,\n              b._c = DEBUG ?\n                shouldBeSingleVNode(sc.render(bProps)) :\n                  /* istanbul ignore next */sc.render(bProps),\n              context,\n              dirtyContext,\n            );\n          } else {\n            _dirtyCheck(parent, b._c = aChild as VNode, context, dirtyContext);\n          }\n        }\n      }\n    }\n  } else {\n    instance = _instantiate(parent, b, context);\n    /* istanbul ignore else */\n    if (DEBUG) {\n      parent.replaceChild(instance, getDOMNode(a)!);\n    } else {\n      nodeReplaceChild.call(parent, instance, getDOMNode(a)!);\n    }\n    _detach(a);\n    _attach(b);\n  }\n}\n\n/**\n * Sync children.\n *\n * High-level overview of the algorithm that is implemented in this function (this overview doesn't include some details\n * how it handles nodes with implicit keys and many small tricks to reduce memory allocations and unnecessary work).\n *\n * This algorithm finds a minimum[1] number of DOM operations. It works in several steps:\n *\n * 1. Find common suffix and prefix.\n *\n * This optimization technique is searching for nodes with identical keys by simultaneously iterating over nodes in the\n * old children list `A` and new children list `B` from both sides:\n *\n *  A: -> [a b c d] <-\n *  B: -> [a b d] <-\n *\n * Here we can skip nodes \"a\" and \"b\" at the begininng, and node \"d\" at the end.\n *\n *  A: -> [c] <-\n *  B: -> [] <-\n *\n * Here it will check if the size of one of the list is equal to zero. When length of the old children list is zero,\n * it will insert all remaining nodes from the new list, and when length of the new children list is zero, it will\n * remove all remaining nodes from the old list.\n *\n * When algorithm can't find a solution with this simple optimization technique, it will go to the next step of the\n * algorithm. For example:\n *\n *  A: -> [a b c d e f g] <-\n *  B: -> [a c b h f e g] <-\n *\n * Nodes \"a\" and \"g\" at the edges are the same, skipping them.\n *\n *  A: -> [b c d e f] <-\n *  B: -> [c b h f e] <-\n *\n * Here we are stuck, so we need to switch to the next step.\n *\n * 2. Look for removed and inserted nodes, and simultaneously check if one of the nodes is moved.\n *\n * First we create an array `P` with the length of the new children list and assign to each position value `-1`, it has\n * a meaning of a new node that should be inserted. Later we will assign node positions in the old children list to this\n * array.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *  P: [. . . . .] // . == -1\n *\n * Then we need to build an index `I` that maps keys with node positions of the remaining nodes from the new children\n * list.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *  P: [. . . . .] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1,\n *    h: 2,\n *    f: 3,\n *    e: 4,\n *  }\n *  last = 0\n *\n * With this index, we start to iterate over the remaining nodes from the old children list and check if we can find a\n * node with the same key in the index. If we can't find any node, it means that it should be removed, otherwise we\n * assign position of the node in the old children list to the positions array.\n *\n *  A: [b c d e f]\n *      ^\n *  B: [c b h f e]\n *  P: [. 0 . . .] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1, <-\n *    h: 2,\n *    f: 3,\n *    e: 4,\n *  }\n *  last = 1\n *\n * When we assigning positions to the positions array, we also keep a position of the last seen node in the new children\n * list, if the last seen position is larger than current position of the node at the new list, then we are switching\n * `moved` flag to `true`.\n *\n *  A: [b c d e f]\n *        ^\n *  B: [c b h f e]\n *  P: [1 0 . . .] // . == -1\n *  I: {\n *    c: 0, <-\n *    b: 1,\n *    h: 2,\n *    f: 3,\n *    e: 4,\n *  }\n *  last = 1 // last > 0; moved = true\n *\n * The last position `1` is larger than current position of the node at the new list `0`, switching `moved` flag to\n * `true`.\n *\n *  A: [b c d e f]\n *          ^\n *  B: [c b h f e]\n *  P: [1 0 . . .] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1,\n *    h: 2,\n *    f: 3,\n *    e: 4,\n *  }\n *  moved = true\n *\n * Node with key \"d\" doesn't exist in the index, removing node.\n *\n *  A: [b c d e f]\n *            ^\n *  B: [c b h f e]\n *  P: [1 0 . . 3] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1,\n *    h: 2,\n *    f: 3,\n *    e: 4, <-\n *  }\n *  moved = true\n *\n * Assign position for `e`.\n *\n *  A: [b c d e f]\n *              ^\n *  B: [c b h f e]\n *  P: [1 0 . 4 3] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1,\n *    h: 2,\n *    f: 3, <-\n *    e: 4,\n *  }\n *  moved = true\n *\n * Assign position for 'f'.\n *\n * At this point we are checking if `moved` flag is on, or if the length of the old children list minus the number of\n * removed nodes isn't equal to the length of the new children list. If any of this conditions is true, then we are\n * going to the next step.\n *\n * 3. Find minimum number of moves if `moved` flag is on, or insert new nodes if the length is changed.\n *\n * When `moved` flag is on, we need to find the\n * [longest increasing subsequence](http://en.wikipedia.org/wiki/Longest_increasing_subsequence) in the positions array,\n * and move all nodes that doesn't belong to this subsequence.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *  moved = true\n *\n * Now we just need to simultaneously iterate over the new children list and LIS from the end and check if the current\n * position is equal to a value from LIS.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *              ^  // new_pos == 4\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *              ^  // new_pos == 4\n *  moved = true\n *\n * Node \"e\" stays at the same place.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *            ^    // new_pos == 3\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *            ^    // new_pos != 1\n *  moved = true\n *\n * Node \"f\" is moved, move it before the next node \"e\".\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *          ^      // new_pos == 2\n *  P: [1 0 . 4 3] // . == -1\n *          ^      // old_pos == -1\n *  LIS:     [1 4]\n *            ^\n *  moved = true\n *\n * Node \"h\" has a `-1` value in the positions array, insert new node \"h\".\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *        ^        // new_pos == 1\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *            ^    // new_pos == 1\n *  moved = true\n *\n * Node \"b\" stays at the same place.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *      ^          // new_pos == 0\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *          ^      // new_pos != undefined\n *  moved = true\n *\n * Node \"c\" is moved, move it before the next node \"b\".\n *\n * When moved flag is off, we don't need to find LIS, and we just iterate over the new children list and check its\n * current position in the positions array, if it is `-1`, then we insert new node.\n *\n * [1] Actually it is almost minimum number of dom ops, when node is removed and another one is inserted at the same\n * place, instead of insert and remove dom ops, we can use one replace op. It will make everything even more\n * complicated, and other use cases will be slower, so I don't think that it is worth to use replace here.\n *\n * @param parent - Parent DOM element\n * @param aStartVNode - Previous virtual DOM node\n * @param bStartVNode - Next virtual DOM node\n * @param context - Current context\n * @param dirtyContext - Context is dirty\n */\nfunction _syncChildrenTrackByKeys(\n  parent: Node,\n  aStartVNode: VNode,\n  bStartVNode: VNode,\n  context: {},\n  dirtyContext: boolean,\n): void;\nfunction _syncChildrenTrackByKeys(\n  parent: Node,\n  aStartVNode: VNode | null, // should not be null, it is a workaroud to slightly reduce code size\n  bStartVNode: VNode | null, // should not be null, it is a workaroud to slightly reduce code size\n  context: {},\n  dirtyContext: boolean,\n): void {\n  let aEndVNode = aStartVNode!._l!;\n  let bEndVNode = bStartVNode!._l!;\n  let i: number | undefined = 0;\n  let step1Synced = 0;\n\n  // Step 1\n  outer: while (1) {\n    // Sync nodes with the same key at the beginning.\n    while (\n      (aStartVNode!._k === bStartVNode!._k) &&\n      (((aStartVNode!._f ^ bStartVNode!._f) & VNodeFlags.Key) === 0)\n    ) {\n      _sync(parent, aStartVNode!, bStartVNode!, context, dirtyContext);\n      step1Synced++;\n      if (aStartVNode === aEndVNode) {\n        i = 1;\n      } else {\n        aStartVNode = aStartVNode!._r;\n      }\n      if (bStartVNode === bEndVNode) {\n        i |= 2;\n        break outer;\n      } else {\n        bStartVNode = bStartVNode!._r;\n      }\n      if (i) {\n        break outer;\n      }\n    }\n\n    // Sync nodes with the same key at the end.\n    while (\n      (aEndVNode!._k === bEndVNode!._k) &&\n      (((aEndVNode!._f ^ bEndVNode!._f) & VNodeFlags.Key) === 0)\n    ) {\n      _sync(parent, aEndVNode, bEndVNode, context, dirtyContext);\n      step1Synced++;\n      if (aStartVNode === aEndVNode) {\n        i = 1;\n      } else {\n        aEndVNode = aEndVNode._l;\n      }\n      if (bStartVNode === bEndVNode) {\n        i |= 2;\n        break outer;\n      } else {\n        bEndVNode = bEndVNode._l;\n      }\n      if (i) {\n        break outer;\n      }\n    }\n\n    break;\n  }\n\n  if (i) {\n    if (i < 3) {\n      if (i < 2) {\n        // All nodes from a are synced, insert the rest from b.\n        const next = nextNode(bEndVNode);\n        while (1) {\n          _render(parent, next, bStartVNode!, context);\n          if (bStartVNode === bEndVNode) {\n            break;\n          }\n          bStartVNode = bStartVNode!._r;\n        }\n      } else {\n        // All nodes from b are synced, remove the rest from a.\n        while (1) {\n          _remove(parent, aStartVNode!);\n          if (aStartVNode === aEndVNode) {\n            break;\n          }\n          aStartVNode = aStartVNode!._r;\n        }\n      }\n    }\n  } else { // Step 2\n    // Inner length after prefix/suffix optimization.\n    let aInnerLength = 0;\n    let bInnerLength = 0;\n\n    // When lastPosition === 1000000000, it means that one of the nodes in the wrong position.\n    let lastPosition = 0;\n\n    const bInnerArray: VNode[] = [];\n    // Reverse indexes for keys.\n    let explicitKeyIndex: Map<any, number> | undefined;\n    let implicitKeyIndex: Map<number, number> | undefined;\n    let key;\n\n    // Temporary vnode\n    let vnode = bStartVNode;\n    while (1) {\n      key = vnode!._k;\n      if (vnode!._f & VNodeFlags.Key) {\n        if (explicitKeyIndex === void 0) {\n          explicitKeyIndex = new Map<any, number>();\n        }\n        explicitKeyIndex.set(key, bInnerLength);\n      } else {\n        if (implicitKeyIndex === void 0) {\n          implicitKeyIndex = new Map<number, number>();\n        }\n        implicitKeyIndex.set(key, bInnerLength);\n      }\n      bInnerArray[bInnerLength++] = vnode!;\n      if (vnode === bEndVNode) {\n        break;\n      }\n      vnode = vnode!._r;\n    }\n\n    // Mark all nodes as inserted (-1).\n    const prevPositionsForB = new Array<number>(bInnerLength).fill(-1);\n\n    let step2Synced = 0;\n    vnode = aStartVNode;\n    while (1) {\n      key = vnode!._k;\n      i = (vnode!._f & VNodeFlags.Key) !== 0 ?\n        explicitKeyIndex === void 0 ? void 0 : explicitKeyIndex.get(key) :\n        implicitKeyIndex === void 0 ? void 0 : implicitKeyIndex.get(key);\n\n      if (i === void 0) {\n        vnode!._k = null;\n      } else {\n        lastPosition = (lastPosition > i) ? 1000000000 : i;\n        prevPositionsForB[i] = aInnerLength;\n        _sync(parent, vnode!, bInnerArray[i], context, dirtyContext);\n        step2Synced++;\n      }\n      aInnerLength++;\n      if (vnode === aEndVNode) {\n        break;\n      }\n      vnode = vnode!._r;\n    }\n\n    if (!step1Synced && !step2Synced) {\n      // Noone is synced, remove all children with one dom op.\n      _removeAllChildren(parent, aStartVNode!);\n      do {\n        _render(parent, null, bStartVNode!, context);\n        bStartVNode = bStartVNode!._r;\n      } while (bStartVNode !== null);\n    } else {\n      i = aInnerLength - step2Synced;\n      while (i > 0) {\n        if (aStartVNode!._k === null) {\n          _remove(parent, aStartVNode!);\n          i--;\n        }\n        aStartVNode = aStartVNode!._r;\n      }\n\n      // Step 3\n      if (lastPosition === 1000000000) {\n        const seq = lis(prevPositionsForB);\n        i = seq.length - 1;\n        while (bInnerLength > 0) {\n          if (prevPositionsForB[--bInnerLength] < 0) {\n            _render(parent, nextNode(bEndVNode), bEndVNode, context);\n          } else {\n            if (i < 0 || bInnerLength !== seq[i]) {\n              /* istanbul ignore else */\n              if (DEBUG) {\n                parent.insertBefore(getDOMNode(bEndVNode)!, nextNode(bEndVNode));\n              } else {\n                nodeInsertBefore.call(parent, getDOMNode(bEndVNode)!, nextNode(bEndVNode));\n              }\n            } else {\n              i--;\n            }\n          }\n          bEndVNode = bEndVNode._l;\n        }\n      } else if (step2Synced !== bInnerLength) {\n        while (bInnerLength > 0) {\n          if (prevPositionsForB[--bInnerLength] < 0) {\n            _render(parent, nextNode(bEndVNode), bEndVNode, context);\n          }\n          bEndVNode = bEndVNode._l;\n        }\n      }\n    }\n  }\n}\n\n/**\n * Retrieves a next DOM node from a virtual DOM node.\n *\n * @param vnode - Virtual DOM node\n * @returns Next DOM node\n */\nfunction nextNode(vnode: VNode): Node | null {\n  const next = vnode._r;\n  return next === null ? null : getDOMNode(next);\n}\n\n/**\n * Slightly modified Longest Increased Subsequence algorithm, it ignores items that have -1 value, they're representing\n * new items.\n *\n * {@link http://en.wikipedia.org/wiki/Longest_increasing_subsequence}\n *\n * @param a - Array of numbers\n * @returns Longest increasing subsequence\n * @noinline\n */\nfunction lis(a: number[]): number[] {\n  const p = a.slice();\n  const result: number[] = [];\n  result[0] = 0;\n  let n = 0;\n  let u: number;\n  let v: number;\n  let j: number;\n\n  for (let i = 0; i < a.length; ++i) {\n    const k = a[i];\n    if (k === -1) {\n      continue;\n    }\n\n    j = result[n];\n    if (a[j] < k) {\n      p[i] = j;\n      result[++n] = i;\n      continue;\n    }\n\n    u = 0;\n    v = n;\n\n    while (u < v) {\n      j = ((u + v) / 2) | 0;\n      if (a[result[j]] < k) {\n        u = j + 1;\n      } else {\n        v = j;\n      }\n    }\n\n    if (k < a[result[u]]) {\n      if (u > 0) {\n        p[i] = result[u - 1];\n      }\n      result[u] = i;\n    }\n  }\n\n  v = result[n];\n\n  while (n >= 0) {\n    result[n--] = v;\n    v = p[v];\n  }\n\n  return result;\n}\n\n/**\n * Sync DOM styles.\n *\n * @param node - HTML or SVG Element\n * @param a - Prev styles\n * @param b - Next styles\n */\nfunction syncStyle(\n  node: HTMLElement | SVGElement,\n  a: CSSStyleProps | undefined,\n  b: CSSStyleProps | undefined,\n): void {\n  const style = node.style;\n  let key: string;\n  let bValue;\n\n  if (a === void 0) {\n    // a is empty, insert all styles from b.\n    for (key in b!) {\n      bValue = (b as { [key: string]: string })[key];\n      if (bValue !== void 0) {\n        style.setProperty(key, bValue);\n      }\n    }\n  } else if (b !== void 0) {\n    for (key in b) {\n      bValue = (b as { [key: string]: string })[key];\n      if ((a as { [key: string]: string })[key] !== bValue) {\n        if (bValue !== void 0) {\n          style.setProperty(key, bValue);\n        } else {\n          style.removeProperty(key);\n        }\n      }\n    }\n  }\n}\n\n/**\n * Set DOM attribute.\n *\n * @param element - DOM Element\n * @param key - Attribute name\n * @param prev - Previous value\n * @param next - Next value\n */\nfunction syncAttr(\n  element: Element,\n  key: string,\n  prev: string | number | boolean | SyncableValue<any> | undefined,\n  next: string | number | boolean | SyncableValue<any> | undefined,\n): void {\n  if (prev !== next) {\n    if (typeof next === \"object\") {\n      next.s(\n        element,\n        key,\n        prev === void 0 ? void 0 : (prev as SyncableValue<any>).v,\n        next.v,\n      );\n    } else {\n      if (typeof next === \"boolean\") {\n        next = next ? \"\" : void 0;\n      }\n      if (next === void 0) {\n        elementRemoveAttribute.call(element, key);\n      } else {\n        elementSetAttribute.call(element, key, next);\n      }\n    }\n  }\n}\n\n/**\n * Sync DOM attributes.\n *\n * @param element - DOM element\n * @param a - Prev DOM properties\n * @param b - Next DOM properties\n */\nfunction syncAttrs(\n  element: Element,\n  a: { [key: string]: string | number | boolean | SyncableValue<any> | undefined } | undefined,\n  b: { [key: string]: string | number | boolean | SyncableValue<any> | undefined } | undefined,\n): void {\n  let key: string;\n\n  if (a === void 0) {\n    // a is empty, insert all attributes from b.\n    for (key in b!) {\n      syncAttr(element, key, void 0, b![key]);\n    }\n  } else if (b !== void 0) {\n    for (key in b) {\n      syncAttr(element, key, a[key], b[key]);\n    }\n  }\n}\n\n/**\n * Check virtual DOM node returned from a `render()` function in `DEBUG` mode.\n *\n * @param vnode - Virtual DOM node\n * @return `vnode`\n */\nfunction shouldBeSingleVNode<T extends VNode>(vnode: T): T {\n  if (vnode._l !== vnode) {\n    throw new Error(\"Invalid render function. Render function should return singular VNode.\");\n  }\n  return vnode;\n}\n","import { VNode } from \"./vnode\";\n\n/**\n * Root.\n */\nexport interface Root {\n  /**\n   * Container element.\n   */\n  container: Element;\n  /**\n   * Next virtual DOM node.\n   */\n  next: VNode | null | undefined;\n  /**\n   * Current virtual DOM node.\n   */\n  current: VNode | null;\n}\n\n/**\n * Root nodes.\n */\nexport const ROOTS = [] as Root[];\n\n/**\n * Find Root node in container.\n *\n * @param container - DOM Node that contains root node\n * @returns root node or undefined when root node doesn't exist\n */\nexport function findRoot(container: Element): Root | void {\n  for (const root of ROOTS) {\n    if (root.container === container) {\n      return root;\n    }\n  }\n}\n","import { IOS_GESTURE_EVENT } from \"../core/feature_detection\";\nimport { NOOP } from \"../core/noop\";\nimport { unorderedArrayDelete } from \"../core/array\";\nimport { catchError } from \"../core/error\";\nimport { checkNestingViolations } from \"../debug/html_nesting_rules\";\nimport { InvalidateFlags, InvalidateFunction } from \"./invalidate\";\nimport { VNode } from \"./vnode\";\nimport { _render, _sync, _remove, _dirtyCheck } from \"./sync\";\nimport { ROOTS, findRoot } from \"./root\";\n\n/**\n * Invalidate function.\n */\nlet _invalidate: InvalidateFunction;\n\n/**\n * Empty Context object.\n */\nconst EMPTY_CONTEXT = {};\n\n/**\n * Dirty flags:\n *\n * 1 << 0 - Running dirty check\n * 1 << 1 - Pending dirty check\n */\nlet _dirty = 0;\n\n/**\n * Basic synchronous invalidation handler.\n *\n * @example\n *\n *   import { setupScheduler, invalidateHandler } from \"ivi\";\n *\n *   setupScheduler(invalidateHandler);\n */\nexport const invalidateHandler = catchError(() => {\n  _dirty |= 2;\n  while (_dirty === 2) {\n    _dirty >>= 1;\n    dirtyCheck();\n    _dirty ^= 1;\n  }\n});\n\n/**\n * Set up scheduler.\n *\n * @example\n *\n *   import { setupScheduler, invalidateHandler } from \"ivi\";\n *\n *   setupScheduler(invalidateHandler);\n *\n * @param invalidateFn - Invalidate handler\n */\nexport function setupScheduler(invalidateFn: InvalidateFunction): void {\n  _invalidate = invalidateFn;\n}\n\n/**\n * Invalidate view.\n */\nexport function invalidate(flags?: InvalidateFlags): void {\n  /* istanbul ignore else */\n  if (DEBUG) {\n    if (_invalidate === void 0) {\n      throw new Error(`Scheduler hasn't been configured`);\n    }\n  }\n  _invalidate(flags);\n}\n\n/**\n * Performs a dirty checking.\n */\nexport function dirtyCheck() {\n  for (let i = 0; i < ROOTS.length; ++i) {\n    const root = ROOTS[i];\n    const { container, current, next } = root;\n    root.next = void 0;\n\n    if (next) {\n      if (current) {\n        _sync(container, current, next, EMPTY_CONTEXT, false);\n      } else {\n        _render(container, null, next, EMPTY_CONTEXT);\n        /* istanbul ignore if */\n        /**\n         * Fix for the Mouse Event bubbling on iOS devices.\n         *\n         * #quirks\n         *\n         * http://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\n         */\n        if (TARGET === \"browser\" && IOS_GESTURE_EVENT) {\n          (container as HTMLElement).onclick = NOOP;\n        }\n      }\n      root.current = next;\n    } else if (current) {\n      if (next === null) {\n        _remove(container, current);\n        unorderedArrayDelete(ROOTS, ROOTS.indexOf(root));\n        --i;\n      } else {\n        _dirtyCheck(container, current, EMPTY_CONTEXT, false);\n      }\n    }\n\n    /* istanbul ignore else */\n    if (DEBUG) {\n      if (root.current) {\n        checkNestingViolations(container, root.current);\n      }\n    }\n  }\n}\n\n/**\n * Render virtual DOM node into the container.\n *\n * @param next - Virtual DOM node to render\n * @param container - DOM Node that will contain rendered node\n * @param flags - See {@link InvalidateFlags} for details\n */\nexport function render(next: VNode | null, container: Element, flags?: InvalidateFlags): void {\n  /* istanbul ignore else */\n  if (DEBUG) {\n    /**\n     * Rendering into the <body> element is disabled to make it possible to fix iOS quirk with click events.\n     */\n    if (container === document.body) {\n      throw new Error(\"Rendering into the <body> element aren't allowed\");\n    }\n    if (!document.body.contains(container)) {\n      throw new Error(\"Container element should be attached to the document\");\n    }\n  }\n\n  const root = findRoot(container);\n  if (root) {\n    root.next = next;\n  } else {\n    ROOTS.push({ container, next, current: null });\n  }\n\n  invalidate(flags);\n}\n","import {\n  HTMLAnchorElementAttrs, HTMLElementAttrs, HTMLAreaElementAttrs, HTMLAudioElementAttrs,\n  HTMLBaseElementAttrs, HTMLBodyElementAttrs, HTMLBRElementAttrs, HTMLButtonElementAttrs,\n  HTMLCanvasElementAttrs, HTMLQuoteElementAttrs, HTMLTableCaptionElementAttrs, HTMLTableColElementAttrs,\n  HTMLModElementAttrs, HTMLDivElementAttrs, HTMLDListElementAttrs, HTMLFieldSetElementAttrs, HTMLFormElementAttrs,\n  HTMLHeadElementAttrs, HTMLHeadingElementAttrs, HTMLHRElementAttrs, HTMLHtmlElementAttrs, HTMLIFrameElementAttrs,\n  HTMLImageElementAttrs, HTMLInputElementAttrs, HTMLLabelElementAttrs, HTMLLegendElementAttrs, HTMLLIElementAttrs,\n  HTMLLinkElementAttrs, HTMLMapElementAttrs, HTMLMenuElementAttrs, HTMLMetaElementAttrs, HTMLMeterElementAttrs,\n  HTMLOListElementAttrs, HTMLOptGroupElementAttrs, HTMLOptionElementAttrs, HTMLParagraphElementAttrs,\n  HTMLPictureElementAttrs, HTMLPreElementAttrs, HTMLProgressElementAttrs, HTMLScriptElementAttrs,\n  HTMLSelectElementAttrs, HTMLSourceElementAttrs, HTMLSpanElementAttrs, HTMLStyleElementAttrs,\n  HTMLTableDataCellElementAttrs, HTMLTableElementAttrs, HTMLTableHeaderCellElementAttrs, HTMLTableRowElementAttrs,\n  HTMLTableSectionElementAttrs, HTMLTemplateElementAttrs, HTMLTextAreaElementAttrs, HTMLTitleElementAttrs,\n  HTMLTrackElementAttrs, HTMLUListElementAttrs, HTMLVideoElementAttrs,\n  CSSStyleProps,\n\n  SYNCABLE_VALUE_SKIP_UNDEFINED,\n\n  VNode, VNodeFlags, SyncableValue,\n} from \"ivi\";\n\nconst enum TagId {\n  A = 1,\n  Abbr = 2,\n  Address = 3,\n  Area = 4,\n  Article = 5,\n  Aside = 6,\n  B = 7,\n  Base = 8,\n  Bdo = 9,\n  Blockquote = 10,\n  Body = 11,\n  Br = 12,\n  Button = 13,\n  Canvas = 14,\n  Caption = 15,\n  Cite = 16,\n  Code = 17,\n  Col = 18,\n  Colgroup = 19,\n  Dd = 20,\n  Del = 21,\n  Dfn = 22,\n  Div = 23,\n  Dl = 24,\n  Dt = 25,\n  Em = 26,\n  Fieldset = 27,\n  Figcaption = 28,\n  Figure = 29,\n  Footer = 30,\n  Form = 31,\n  H1 = 32,\n  H2 = 33,\n  H3 = 34,\n  H4 = 35,\n  H5 = 36,\n  H6 = 37,\n  Head = 38,\n  Header = 39,\n  Hgroup = 40,\n  Hr = 41,\n  Html = 42,\n  I = 43,\n  Iframe = 44,\n  Img = 45,\n  Input = 46,\n  Ins = 47,\n  Kbd = 48,\n  Label = 49,\n  Legend = 50,\n  Li = 51,\n  Link = 52,\n  Main = 53,\n  Map = 54,\n  Mark = 55,\n  Menu = 56,\n  Meta = 57,\n  Meter = 58,\n  Nav = 59,\n  Noscript = 60,\n  Ol = 61,\n  Optgroup = 62,\n  Option = 63,\n  P = 64,\n  Picture = 65,\n  Pre = 66,\n  Progress = 67,\n  Q = 68,\n  Rt = 69,\n  Ruby = 70,\n  S = 71,\n  Samp = 72,\n  Script = 73,\n  Section = 74,\n  Select = 75,\n  Source = 76,\n  Span = 77,\n  Strong = 78,\n  Style = 79,\n  Sub = 80,\n  Sup = 81,\n  Table = 82,\n  Tbody = 83,\n  Td = 84,\n  Template = 85,\n  Textarea = 86,\n  Tfoot = 87,\n  Th = 88,\n  Thead = 89,\n  Time = 90,\n  Title = 91,\n  Tr = 92,\n  Track = 93,\n  U = 94,\n  Ul = 95,\n  Wbr = 96,\n  Audio = 97,\n  Video = 98,\n}\n\n/**\n * {@link SyncableValue} with `\"\"` value and {@link syncValue} sync function.\n */\nconst VALUE_EMPTY_STRING: SyncableValue<string | number> = { v: \"\", s: syncValue };\n\n/**\n * {@link SyncableValue} with `false` value and {@link syncChecked} sync function.\n */\nconst CHECKED_FALSE: SyncableValue<boolean> = { v: false, s: syncChecked };\n\n/**\n * {@link SyncableValue} with `true` value and {@link syncChecked} sync function.\n */\nconst CHECKED_TRUE: SyncableValue<boolean> = { v: true, s: syncChecked };\n\n/**\n * Synchronization function for {@link SyncableValue} created with {@link VALUE} function.\n *\n * @param element - Target element\n * @param key - Attribute key\n * @param prev - Previous value\n * @param next - Next value\n */\nfunction syncValue(\n  element: Element,\n  key: string,\n  prev: string | number | undefined,\n  next: string | number | undefined,\n) {\n  if (prev === void 0) {\n    if (next !== \"\") {\n      (element as HTMLInputElement | HTMLTextAreaElement).value = next as string;\n    }\n  } else {\n    if ((element as HTMLInputElement | HTMLTextAreaElement).value !== next) {\n      (element as HTMLInputElement | HTMLTextAreaElement).value = next as string;\n    }\n  }\n}\n\n/**\n * Synchronization function for {@link SyncableValue} created with {@link CHECKED} function.\n *\n * @param element - Target element\n * @param key - Attribute key\n * @param prev - Previous value\n * @param next - Next value\n */\nfunction syncChecked(\n  element: Element,\n  key: string,\n  prev: boolean | undefined,\n  next: boolean | undefined,\n) {\n  if (prev === void 0) {\n    if (next) {\n      (element as HTMLInputElement).checked = next;\n    }\n  } else {\n    if ((element as HTMLInputElement).checked !== next) {\n      (element as HTMLInputElement).checked = next!;\n    }\n  }\n}\n\n/**\n * VALUE function creates a {@link SyncableValue} that assigns a `value` property to an HTMLInputElement or\n * HTMLTextAreaElement.\n *\n * `undefined` values are ignored.\n *\n * @example\n *\n *   const e = input(\"\", { value: VALUE(\"value\") });\n *\n * @param v - Value\n * @returns {@link SyncableValue}\n */\nexport function VALUE(v: string | number | undefined): SyncableValue<string | number> {\n  return (v === void 0) ?\n    SYNCABLE_VALUE_SKIP_UNDEFINED :\n    v === \"\" ?\n      VALUE_EMPTY_STRING :\n      { v, s: syncValue };\n}\n\n/**\n * CHECKED function creates a {@link SyncableValue} that assigns a `checked` property to an HTMLInputElement.\n *\n * `undefined` values are ignored.\n *\n * @example\n *\n *   const e = input(\"\", { checked: CHECKED(true) });\n *\n * @param v - Checked value\n * @returns {@link SyncableValue}\n */\nexport function CHECKED(v: boolean | undefined): SyncableValue<boolean> {\n  return (v === void 0) ?\n    SYNCABLE_VALUE_SKIP_UNDEFINED as any as SyncableValue<boolean> :\n    v ? CHECKED_TRUE : CHECKED_FALSE;\n}\n\n/* tslint:disable:max-line-length */\n/**\n * Creates Virtual DOM HTML element <a>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <a>\n */\nexport function a(className?: string, attrs?: HTMLAnchorElementAttrs, css?: CSSStyleProps): VNode<HTMLAnchorElementAttrs | undefined, HTMLAnchorElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.A << VNodeFlags.ElementIdOffset),\n    \"a\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <abbr>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/abbr}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <abbr>\n */\nexport function abbr(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Abbr << VNodeFlags.ElementIdOffset),\n    \"abbr\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <address>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/address}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <address>\n */\nexport function address(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Address << VNodeFlags.ElementIdOffset),\n    \"address\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <article>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/article}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <article>\n */\nexport function article(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Article << VNodeFlags.ElementIdOffset),\n    \"article\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <aside>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/aside}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <aside>\n */\nexport function aside(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Aside << VNodeFlags.ElementIdOffset),\n    \"aside\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <b>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/b}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <b>\n */\nexport function b(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.B << VNodeFlags.ElementIdOffset),\n    \"b\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <base>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/base}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <base>\n */\nexport function base(className?: string, attrs?: HTMLBaseElementAttrs, css?: CSSStyleProps): VNode<HTMLBaseElementAttrs | undefined, HTMLBaseElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Base << VNodeFlags.ElementIdOffset),\n    \"base\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <bdo>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/bdo}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <bdo>\n */\nexport function bdo(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Bdo << VNodeFlags.ElementIdOffset),\n    \"bdo\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <blockquote>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/blockquote}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <blockquote>\n */\nexport function blockquote(className?: string, attrs?: HTMLQuoteElementAttrs, css?: CSSStyleProps): VNode<HTMLQuoteElementAttrs | undefined, HTMLQuoteElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Blockquote << VNodeFlags.ElementIdOffset),\n    \"blockquote\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <body>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/body}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <body>\n */\nexport function body(className?: string, attrs?: HTMLBodyElementAttrs, css?: CSSStyleProps): VNode<HTMLBodyElementAttrs | undefined, HTMLBodyElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Body << VNodeFlags.ElementIdOffset),\n    \"body\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <br>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/br}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <br>\n */\nexport function br(className?: string, attrs?: HTMLBRElementAttrs, css?: CSSStyleProps): VNode<HTMLBRElementAttrs | undefined, HTMLBRElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Br << VNodeFlags.ElementIdOffset),\n    \"br\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <button>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <button>\n */\nexport function button(className?: string, attrs?: HTMLButtonElementAttrs, css?: CSSStyleProps): VNode<HTMLButtonElementAttrs | undefined, HTMLButtonElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Button << VNodeFlags.ElementIdOffset),\n    \"button\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <canvas>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <canvas>\n */\nexport function canvas(className?: string, attrs?: HTMLCanvasElementAttrs, css?: CSSStyleProps): VNode<HTMLCanvasElementAttrs | undefined, HTMLCanvasElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Canvas << VNodeFlags.ElementIdOffset),\n    \"canvas\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <caption>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <caption>\n */\nexport function caption(className?: string, attrs?: HTMLTableCaptionElementAttrs, css?: CSSStyleProps): VNode<HTMLTableCaptionElementAttrs | undefined, HTMLTableCaptionElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Caption << VNodeFlags.ElementIdOffset),\n    \"caption\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <cite>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/cite}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <cite>\n */\nexport function cite(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Cite << VNodeFlags.ElementIdOffset),\n    \"cite\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <code>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/code}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <code>\n */\nexport function code(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Code << VNodeFlags.ElementIdOffset),\n    \"code\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <col>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/col}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <col>\n */\nexport function col(className?: string, attrs?: HTMLTableColElementAttrs, css?: CSSStyleProps): VNode<HTMLTableColElementAttrs | undefined, HTMLTableColElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Col << VNodeFlags.ElementIdOffset),\n    \"col\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <colgroup>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/colgroup}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <colgroup>\n */\nexport function colgroup(className?: string, attrs?: HTMLTableColElementAttrs, css?: CSSStyleProps): VNode<HTMLTableColElementAttrs | undefined, HTMLTableColElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Colgroup << VNodeFlags.ElementIdOffset),\n    \"colgroup\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <del>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/del}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <del>\n */\nexport function del(className?: string, attrs?: HTMLModElementAttrs, css?: CSSStyleProps): VNode<HTMLModElementAttrs | undefined, HTMLModElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Del << VNodeFlags.ElementIdOffset),\n    \"del\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <dfn>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dfn}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <dfn>\n */\nexport function dfn(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Dfn << VNodeFlags.ElementIdOffset),\n    \"dfn\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <div>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <div>\n */\nexport function div(className?: string, attrs?: HTMLDivElementAttrs, css?: CSSStyleProps): VNode<HTMLDivElementAttrs | undefined, HTMLDivElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Div << VNodeFlags.ElementIdOffset),\n    \"div\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <dd>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dd}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <dd>\n */\nexport function dd(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Dd << VNodeFlags.ElementIdOffset),\n    \"dd\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <dl>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dl}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <dl>\n */\nexport function dl(className?: string, attrs?: HTMLDListElementAttrs, css?: CSSStyleProps): VNode<HTMLDListElementAttrs | undefined, HTMLDListElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Dl << VNodeFlags.ElementIdOffset),\n    \"dl\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <dt>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dt}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <dt>\n */\nexport function dt(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Dt << VNodeFlags.ElementIdOffset),\n    \"dt\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <em>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/em}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <em>\n */\nexport function em(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Em << VNodeFlags.ElementIdOffset),\n    \"em\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <fieldset>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/fieldset}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <fieldset>\n */\nexport function fieldset(className?: string, attrs?: HTMLFieldSetElementAttrs, css?: CSSStyleProps): VNode<HTMLFieldSetElementAttrs | undefined, HTMLFieldSetElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Fieldset << VNodeFlags.ElementIdOffset),\n    \"fieldset\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <figcaption>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/figcaption}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <figcaption>\n */\nexport function figcaption(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Figcaption << VNodeFlags.ElementIdOffset),\n    \"figcaption\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <figure>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/figure}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <figure>\n */\nexport function figure(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Figure << VNodeFlags.ElementIdOffset),\n    \"figure\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <footer>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/footer}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <footer>\n */\nexport function footer(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Footer << VNodeFlags.ElementIdOffset),\n    \"footer\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <form>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <form>\n */\nexport function form(className?: string, attrs?: HTMLFormElementAttrs, css?: CSSStyleProps): VNode<HTMLFormElementAttrs | undefined, HTMLFormElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Form << VNodeFlags.ElementIdOffset),\n    \"form\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <h1>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h1}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <h1>\n */\nexport function h1(className?: string, attrs?: HTMLHeadingElementAttrs, css?: CSSStyleProps): VNode<HTMLHeadingElementAttrs | undefined, HTMLHeadingElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.H1 << VNodeFlags.ElementIdOffset),\n    \"h1\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <h2>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h2}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <h2>\n */\nexport function h2(className?: string, attrs?: HTMLHeadingElementAttrs, css?: CSSStyleProps): VNode<HTMLHeadingElementAttrs | undefined, HTMLHeadingElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.H2 << VNodeFlags.ElementIdOffset),\n    \"h2\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <h3>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h3}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <h3>\n */\nexport function h3(className?: string, attrs?: HTMLHeadingElementAttrs, css?: CSSStyleProps): VNode<HTMLHeadingElementAttrs | undefined, HTMLHeadingElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.H3 << VNodeFlags.ElementIdOffset),\n    \"h3\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <h4>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h4}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <h4>\n */\nexport function h4(className?: string, attrs?: HTMLHeadingElementAttrs, css?: CSSStyleProps): VNode<HTMLHeadingElementAttrs | undefined, HTMLHeadingElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.H4 << VNodeFlags.ElementIdOffset),\n    \"h4\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <h5>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h5}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <h5>\n */\nexport function h5(className?: string, attrs?: HTMLHeadingElementAttrs, css?: CSSStyleProps): VNode<HTMLHeadingElementAttrs | undefined, HTMLHeadingElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.H5 << VNodeFlags.ElementIdOffset),\n    \"h5\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <h6>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h6}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <h6>\n */\nexport function h6(className?: string, attrs?: HTMLHeadingElementAttrs, css?: CSSStyleProps): VNode<HTMLHeadingElementAttrs | undefined, HTMLHeadingElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.H6 << VNodeFlags.ElementIdOffset),\n    \"h6\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <head>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/head}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <head>\n */\nexport function head(className?: string, attrs?: HTMLHeadElementAttrs, css?: CSSStyleProps): VNode<HTMLHeadElementAttrs | undefined, HTMLHeadElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Head << VNodeFlags.ElementIdOffset),\n    \"head\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <header>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/header}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <header>\n */\nexport function header(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Header << VNodeFlags.ElementIdOffset),\n    \"header\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <hgroup>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/hgroup}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <hgroup>\n */\nexport function hgroup(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Hgroup << VNodeFlags.ElementIdOffset),\n    \"hgroup\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <hr>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/hr}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <hr>\n */\nexport function hr(className?: string, attrs?: HTMLHRElementAttrs, css?: CSSStyleProps): VNode<HTMLHRElementAttrs | undefined, HTMLHRElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Hr << VNodeFlags.ElementIdOffset),\n    \"hr\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <html>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/html}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <html>\n */\nexport function html(className?: string, attrs?: HTMLHtmlElementAttrs, css?: CSSStyleProps): VNode<HTMLHtmlElementAttrs | undefined, HTMLHtmlElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Html << VNodeFlags.ElementIdOffset),\n    \"html\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <i>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/i}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <i>\n */\nexport function i(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.I << VNodeFlags.ElementIdOffset),\n    \"i\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <iframe>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <iframe>\n */\nexport function iframe(className?: string, attrs?: HTMLIFrameElementAttrs, css?: CSSStyleProps): VNode<HTMLIFrameElementAttrs | undefined, HTMLIFrameElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Iframe << VNodeFlags.ElementIdOffset),\n    \"iframe\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <img>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <img>\n */\nexport function img(className?: string, attrs?: HTMLImageElementAttrs, css?: CSSStyleProps): VNode<HTMLImageElementAttrs | undefined, HTMLImageElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Img << VNodeFlags.ElementIdOffset),\n    \"img\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <area>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/area}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <area>\n */\nexport function imgArea(className?: string, attrs?: HTMLAreaElementAttrs, css?: CSSStyleProps): VNode<HTMLAreaElementAttrs | undefined, HTMLAreaElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Area << VNodeFlags.ElementIdOffset),\n    \"area\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <map>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/map}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <map>\n */\nexport function imgMap(className?: string, attrs?: HTMLMapElementAttrs, css?: CSSStyleProps): VNode<HTMLMapElementAttrs | undefined, HTMLMapElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Map << VNodeFlags.ElementIdOffset),\n    \"map\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <ins>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ins}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <ins>\n */\nexport function ins(className?: string, attrs?: HTMLModElementAttrs, css?: CSSStyleProps): VNode<HTMLModElementAttrs | undefined, HTMLModElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Ins << VNodeFlags.ElementIdOffset),\n    \"ins\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <kbd>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/kbd}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <kbd>\n */\nexport function kbd(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Kbd << VNodeFlags.ElementIdOffset),\n    \"kbd\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <label>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/label}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <label>\n */\nexport function label(className?: string, attrs?: HTMLLabelElementAttrs, css?: CSSStyleProps): VNode<HTMLLabelElementAttrs | undefined, HTMLLabelElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Label << VNodeFlags.ElementIdOffset),\n    \"label\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <legend>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/legend}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <legend>\n */\nexport function legend(className?: string, attrs?: HTMLLegendElementAttrs, css?: CSSStyleProps): VNode<HTMLLegendElementAttrs | undefined, HTMLLegendElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Legend << VNodeFlags.ElementIdOffset),\n    \"legend\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <li>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/li}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <li>\n */\nexport function li(className?: string, attrs?: HTMLLIElementAttrs, css?: CSSStyleProps): VNode<HTMLLIElementAttrs | undefined, HTMLLIElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Li << VNodeFlags.ElementIdOffset),\n    \"li\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <link>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <link>\n */\nexport function link(className?: string, attrs?: HTMLLinkElementAttrs, css?: CSSStyleProps): VNode<HTMLLinkElementAttrs | undefined, HTMLLinkElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Link << VNodeFlags.ElementIdOffset),\n    \"link\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <main>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/main}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <main>\n */\nexport function main(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Main << VNodeFlags.ElementIdOffset),\n    \"main\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <mark>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/mark}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <mark>\n */\nexport function mark(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Mark << VNodeFlags.ElementIdOffset),\n    \"mark\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <menu>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/menu}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <menu>\n */\nexport function menu(className?: string, attrs?: HTMLMenuElementAttrs, css?: CSSStyleProps): VNode<HTMLMenuElementAttrs | undefined, HTMLMenuElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Menu << VNodeFlags.ElementIdOffset),\n    \"menu\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <meta>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <meta>\n */\nexport function meta(className?: string, attrs?: HTMLMetaElementAttrs, css?: CSSStyleProps): VNode<HTMLMetaElementAttrs | undefined, HTMLMetaElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Meta << VNodeFlags.ElementIdOffset),\n    \"meta\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <meter>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meter}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <meter>\n */\nexport function meter(className?: string, attrs?: HTMLMeterElementAttrs, css?: CSSStyleProps): VNode<HTMLMeterElementAttrs | undefined, HTMLMeterElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Meter << VNodeFlags.ElementIdOffset),\n    \"meter\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <nav>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/nav}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <nav>\n */\nexport function nav(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Nav << VNodeFlags.ElementIdOffset),\n    \"nav\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <noscript>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/noscript}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <noscript>\n */\nexport function noscript(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Noscript << VNodeFlags.ElementIdOffset),\n    \"noscript\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <ol>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ol}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <ol>\n */\nexport function ol(className?: string, attrs?: HTMLOListElementAttrs, css?: CSSStyleProps): VNode<HTMLOListElementAttrs | undefined, HTMLOListElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Ol << VNodeFlags.ElementIdOffset),\n    \"ol\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <optgroup>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/optgroup}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <optgroup>\n */\nexport function optgroup(className?: string, attrs?: HTMLOptGroupElementAttrs, css?: CSSStyleProps): VNode<HTMLOptGroupElementAttrs | undefined, HTMLOptGroupElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Optgroup << VNodeFlags.ElementIdOffset),\n    \"optgroup\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <option>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <option>\n */\nexport function option(className?: string, attrs?: HTMLOptionElementAttrs, css?: CSSStyleProps): VNode<HTMLOptionElementAttrs | undefined, HTMLOptionElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Option << VNodeFlags.ElementIdOffset),\n    \"option\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <p>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/p}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <p>\n */\nexport function p(className?: string, attrs?: HTMLParagraphElementAttrs, css?: CSSStyleProps): VNode<HTMLParagraphElementAttrs | undefined, HTMLParagraphElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.P << VNodeFlags.ElementIdOffset),\n    \"p\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <picture>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/picture}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <picture>\n */\nexport function picture(className?: string, attrs?: HTMLPictureElementAttrs, css?: CSSStyleProps): VNode<HTMLPictureElementAttrs | undefined, HTMLPictureElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Picture << VNodeFlags.ElementIdOffset),\n    \"picture\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <pre>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/pre}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <pre>\n */\nexport function pre(className?: string, attrs?: HTMLPreElementAttrs, css?: CSSStyleProps): VNode<HTMLPreElementAttrs | undefined, HTMLPreElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Pre << VNodeFlags.ElementIdOffset),\n    \"pre\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <progress>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/progress}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <progress>\n */\nexport function progress(className?: string, attrs?: HTMLProgressElementAttrs, css?: CSSStyleProps): VNode<HTMLProgressElementAttrs | undefined, HTMLProgressElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Progress << VNodeFlags.ElementIdOffset),\n    \"progress\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <q>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/q}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <q>\n */\nexport function q(className?: string, attrs?: HTMLQuoteElementAttrs, css?: CSSStyleProps): VNode<HTMLQuoteElementAttrs | undefined, HTMLQuoteElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Q << VNodeFlags.ElementIdOffset),\n    \"q\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <rt>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/rt}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <rt>\n */\nexport function rt(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Rt << VNodeFlags.ElementIdOffset),\n    \"rt\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <ruby>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ruby}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <ruby>\n */\nexport function ruby(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Ruby << VNodeFlags.ElementIdOffset),\n    \"ruby\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <s>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/s}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <s>\n */\nexport function s(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.S << VNodeFlags.ElementIdOffset),\n    \"s\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <samp>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/samp}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <samp>\n */\nexport function samp(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Samp << VNodeFlags.ElementIdOffset),\n    \"samp\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <script>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <script>\n */\nexport function script(className?: string, attrs?: HTMLScriptElementAttrs, css?: CSSStyleProps): VNode<HTMLScriptElementAttrs | undefined, HTMLScriptElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Script << VNodeFlags.ElementIdOffset),\n    \"script\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <section>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/section}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <section>\n */\nexport function section(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Section << VNodeFlags.ElementIdOffset),\n    \"section\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <select>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <select>\n */\nexport function select(className?: string, attrs?: HTMLSelectElementAttrs, css?: CSSStyleProps): VNode<HTMLSelectElementAttrs | undefined, HTMLSelectElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Select << VNodeFlags.ElementIdOffset),\n    \"select\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <source>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/source}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <source>\n */\nexport function source(className?: string, attrs?: HTMLSourceElementAttrs, css?: CSSStyleProps): VNode<HTMLSourceElementAttrs | undefined, HTMLSourceElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Source << VNodeFlags.ElementIdOffset),\n    \"source\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <span>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <span>\n */\nexport function span(className?: string, attrs?: HTMLSpanElementAttrs, css?: CSSStyleProps): VNode<HTMLSpanElementAttrs | undefined, HTMLSpanElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Span << VNodeFlags.ElementIdOffset),\n    \"span\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <strong>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/strong}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <strong>\n */\nexport function strong(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Strong << VNodeFlags.ElementIdOffset),\n    \"strong\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <style>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/style}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <style>\n */\nexport function style(className?: string, attrs?: HTMLStyleElementAttrs, css?: CSSStyleProps): VNode<HTMLStyleElementAttrs | undefined, HTMLStyleElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Style << VNodeFlags.ElementIdOffset),\n    \"style\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <sub>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/sub}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <sub>\n */\nexport function sub(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Sub << VNodeFlags.ElementIdOffset),\n    \"sub\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <sup>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/sup}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <sup>\n */\nexport function sup(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Sup << VNodeFlags.ElementIdOffset),\n    \"sup\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <table>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/table}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <table>\n */\nexport function table(className?: string, attrs?: HTMLTableElementAttrs, css?: CSSStyleProps): VNode<HTMLTableElementAttrs | undefined, HTMLTableElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Table << VNodeFlags.ElementIdOffset),\n    \"table\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <tbody>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tbody}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <tbody>\n */\nexport function tbody(className?: string, attrs?: HTMLTableSectionElementAttrs, css?: CSSStyleProps): VNode<HTMLTableSectionElementAttrs | undefined, HTMLTableSectionElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Tbody << VNodeFlags.ElementIdOffset),\n    \"tbody\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <td>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/td}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <td>\n */\nexport function td(className?: string, attrs?: HTMLTableDataCellElementAttrs, css?: CSSStyleProps): VNode<HTMLTableDataCellElementAttrs | undefined, HTMLTableDataCellElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Td << VNodeFlags.ElementIdOffset),\n    \"td\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <template>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/template}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <template>\n */\nexport function template(className?: string, attrs?: HTMLTemplateElementAttrs, css?: CSSStyleProps): VNode<HTMLTemplateElementAttrs | undefined, HTMLTemplateElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Template << VNodeFlags.ElementIdOffset),\n    \"template\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <tfoot>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tfoot}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <tfoot>\n */\nexport function tfoot(className?: string, attrs?: HTMLTableSectionElementAttrs, css?: CSSStyleProps): VNode<HTMLTableSectionElementAttrs | undefined, HTMLTableSectionElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Tfoot << VNodeFlags.ElementIdOffset),\n    \"tfoot\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <th>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/th}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <th>\n */\nexport function th(className?: string, attrs?: HTMLTableHeaderCellElementAttrs, css?: CSSStyleProps): VNode<HTMLTableHeaderCellElementAttrs | undefined, HTMLTableHeaderCellElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Th << VNodeFlags.ElementIdOffset),\n    \"th\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <thead>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/thead}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <thead>\n */\nexport function thead(className?: string, attrs?: HTMLTableSectionElementAttrs, css?: CSSStyleProps): VNode<HTMLTableSectionElementAttrs | undefined, HTMLTableSectionElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Thead << VNodeFlags.ElementIdOffset),\n    \"thead\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <time>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/time}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <time>\n */\nexport function time(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Time << VNodeFlags.ElementIdOffset),\n    \"time\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <title>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/title}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <title>\n */\nexport function title(className?: string, attrs?: HTMLTitleElementAttrs, css?: CSSStyleProps): VNode<HTMLTitleElementAttrs | undefined, HTMLTitleElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Title << VNodeFlags.ElementIdOffset),\n    \"title\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <tr>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tr}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <tr>\n */\nexport function tr(className?: string, attrs?: HTMLTableRowElementAttrs, css?: CSSStyleProps): VNode<HTMLTableRowElementAttrs | undefined, HTMLTableRowElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Tr << VNodeFlags.ElementIdOffset),\n    \"tr\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <track>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/track}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <track>\n */\nexport function track(className?: string, attrs?: HTMLTrackElementAttrs, css?: CSSStyleProps): VNode<HTMLTrackElementAttrs | undefined, HTMLTrackElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Track << VNodeFlags.ElementIdOffset),\n    \"track\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <u>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/u}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <u>\n */\nexport function u(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.U << VNodeFlags.ElementIdOffset),\n    \"u\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <ul>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ul}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <ul>\n */\nexport function ul(className?: string, attrs?: HTMLUListElementAttrs, css?: CSSStyleProps): VNode<HTMLUListElementAttrs | undefined, HTMLUListElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Ul << VNodeFlags.ElementIdOffset),\n    \"ul\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <wbr>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/wbr}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <wbr>\n */\nexport function wbr(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Wbr << VNodeFlags.ElementIdOffset),\n    \"wbr\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <textarea>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <textarea>\n */\nexport function textarea(className?: string, attrs?: HTMLTextAreaElementAttrs, css?: CSSStyleProps): VNode<HTMLTextAreaElementAttrs | undefined, HTMLTextAreaElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Textarea << VNodeFlags.ElementIdOffset),\n    \"textarea\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <input>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <input>\n */\nexport function input(className?: string, attrs?: HTMLInputElementAttrs, css?: CSSStyleProps): VNode<HTMLInputElementAttrs | undefined, HTMLInputElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Input << VNodeFlags.ElementIdOffset),\n    \"input\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <audio>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <audio>\n */\nexport function audio(className?: string, attrs?: HTMLAudioElementAttrs, css?: CSSStyleProps): VNode<HTMLAudioElementAttrs | undefined, HTMLAudioElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Audio << VNodeFlags.ElementIdOffset),\n    \"audio\",\n    attrs,\n    className,\n    css,\n  );\n}\n\n/**\n * Creates Virtual DOM HTML element <video>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video}\n *\n * @param className - Class name\n * @param attrs - Attributes\n * @param css - Styles\n * @returns Virtual DOM HTML element <video>\n */\nexport function video(className?: string, attrs?: HTMLVideoElementAttrs, css?: CSSStyleProps): VNode<HTMLVideoElementAttrs | undefined, HTMLVideoElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Video << VNodeFlags.ElementIdOffset),\n    \"video\",\n    attrs,\n    className,\n    css,\n  );\n}\n","var MonitorMaxSamples = 100;\nvar MonitorSamplesResult = (function () {\n    function MonitorSamplesResult(min, max, mean, last) {\n        this.min = min;\n        this.max = max;\n        this.mean = mean;\n        this.last = last;\n    }\n    return MonitorSamplesResult;\n}());\n/**\n * Profile Samples.\n */\nvar MonitorSamples = (function () {\n    function MonitorSamples(maxSamples) {\n        this.samples = [];\n        this.maxSamples = maxSamples;\n        this._i = -1;\n    }\n    MonitorSamples.prototype.addSample = function (v) {\n        this._i = (this._i + 1) % this.maxSamples;\n        this.samples[this._i] = v;\n    };\n    MonitorSamples.prototype.each = function (fn) {\n        var samples = this.samples;\n        for (var i = 0; i < samples.length; i++) {\n            fn(samples[(this._i + 1 + i) % samples.length], i);\n        }\n    };\n    MonitorSamples.prototype.calc = function () {\n        var samples = this.samples;\n        if (samples.length === 0) {\n            return new MonitorSamplesResult(0, 0, 0, 0);\n        }\n        var min = samples[(this._i + 1) % samples.length];\n        var max = min;\n        var sum = 0;\n        for (var i = 0; i < samples.length; i++) {\n            var k = samples[(this._i + 1 + i) % samples.length];\n            if (k < min) {\n                min = k;\n            }\n            if (k > max) {\n                max = k;\n            }\n            sum += k;\n        }\n        var last = samples[this._i];\n        var mean = sum / samples.length;\n        return new MonitorSamplesResult(min, max, mean, last);\n    };\n    return MonitorSamples;\n}());\n\n/**\n * Basic Counter.\n */\nvar BasicCounter = (function () {\n    function BasicCounter() {\n        this.value = 0;\n        this.onChange = null;\n    }\n    BasicCounter.prototype.inc = function (value) {\n        if (value > 0) {\n            this.value += value;\n            this.onChange();\n        }\n    };\n    return BasicCounter;\n}());\nvar TimestampedValue = (function () {\n    function TimestampedValue(timestamp, value) {\n        this.value = value;\n        this.next = null;\n    }\n    return TimestampedValue;\n}());\n/**\n * Sliding Counter counts how many times `inc` method were called during `interval` period.\n */\nvar SlidingCounter = (function () {\n    function SlidingCounter(interval) {\n        var _this = this;\n        this._dec = function () {\n            var now = performance.now();\n            while (_this._firstTimestamp !== null) {\n                var nextTimestamp = _this._firstTimestamp;\n                if (now >= nextTimestamp.value) {\n                    _this.value -= nextTimestamp.value;\n                    _this._firstTimestamp = _this._firstTimestamp.next;\n                }\n                else {\n                    setTimeout(_this._dec, Math.ceil(nextTimestamp.value - now));\n                    break;\n                }\n            }\n            if (_this._firstTimestamp === null) {\n                _this._lastTimestamp = null;\n            }\n            _this.onChange();\n        };\n        this.interval = interval;\n        this.value = 0;\n        this.onChange = null;\n        this._firstTimestamp = null;\n        this._lastTimestamp = null;\n    }\n    SlidingCounter.prototype.inc = function (value) {\n        if (value > 0) {\n            var timestamp = new TimestampedValue(performance.now() + this.interval, value);\n            if (this._firstTimestamp === null) {\n                this._firstTimestamp = timestamp;\n                setTimeout(this._dec, this.interval);\n            }\n            else {\n                this._lastTimestamp.next = timestamp;\n            }\n            this._lastTimestamp = timestamp;\n            this.value += value;\n            this.onChange();\n        }\n    };\n    return SlidingCounter;\n}());\n\nvar frameTasks = [];\nvar rafId = -1;\n/**\n * Schedule new task that will be executed on the next frame.\n */\nfunction scheduleNextFrameTask(task) {\n    frameTasks.push(task);\n    if (rafId === -1) {\n        requestAnimationFrame(function (t) {\n            rafId = -1;\n            var tasks = frameTasks;\n            frameTasks = [];\n            for (var i = 0; i < tasks.length; i++) {\n                tasks[i]();\n            }\n        });\n    }\n}\n\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar MonitorGraphHeight = 30;\nvar MonitorGraphWidth = MonitorMaxSamples;\nvar Widget = (function () {\n    function Widget(name) {\n        var _this = this;\n        this._sync = function () {\n            _this.sync();\n            _this._dirty = false;\n        };\n        this.name = name;\n        this.element = document.createElement(\"div\");\n        this.element.style.cssText = \"padding: 2px;\" +\n            \"background-color: #020;\" +\n            \"font-family: monospace;\" +\n            \"font-size: 12px;\" +\n            \"color: #0f0\";\n        this._dirty = false;\n        this.invalidate();\n    }\n    Widget.prototype.invalidate = function () {\n        if (!this._dirty) {\n            this._dirty = true;\n            scheduleNextFrameTask(this._sync);\n        }\n    };\n    Widget.prototype.sync = function () {\n        throw new Error(\"sync method not implemented\");\n    };\n    return Widget;\n}());\nvar MonitorWidgetFlags;\n(function (MonitorWidgetFlags) {\n    MonitorWidgetFlags[MonitorWidgetFlags[\"HideMin\"] = 1] = \"HideMin\";\n    MonitorWidgetFlags[MonitorWidgetFlags[\"HideMax\"] = 2] = \"HideMax\";\n    MonitorWidgetFlags[MonitorWidgetFlags[\"HideMean\"] = 4] = \"HideMean\";\n    MonitorWidgetFlags[MonitorWidgetFlags[\"HideLast\"] = 8] = \"HideLast\";\n    MonitorWidgetFlags[MonitorWidgetFlags[\"HideGraph\"] = 16] = \"HideGraph\";\n    MonitorWidgetFlags[MonitorWidgetFlags[\"RoundValues\"] = 32] = \"RoundValues\";\n})(MonitorWidgetFlags || (MonitorWidgetFlags = {}));\nvar MonitorWidget = (function (_super) {\n    __extends(MonitorWidget, _super);\n    function MonitorWidget(name, flags, unitName, samples) {\n        var _this = _super.call(this, name) || this;\n        _this.flags = flags;\n        _this.unitName = unitName;\n        _this.samples = samples;\n        var label = document.createElement(\"div\");\n        label.style.cssText = \"text-align: center\";\n        label.textContent = _this.name;\n        var text = document.createElement(\"div\");\n        if ((flags & MonitorWidgetFlags.HideMin) === 0) {\n            _this.minText = document.createElement(\"div\");\n            text.appendChild(_this.minText);\n        }\n        else {\n            _this.minText = null;\n        }\n        if ((flags & MonitorWidgetFlags.HideMax) === 0) {\n            _this.maxText = document.createElement(\"div\");\n            text.appendChild(_this.maxText);\n        }\n        else {\n            _this.maxText = null;\n        }\n        if ((flags & MonitorWidgetFlags.HideMean) === 0) {\n            _this.meanText = document.createElement(\"div\");\n            text.appendChild(_this.meanText);\n        }\n        else {\n            _this.meanText = null;\n        }\n        if ((flags & MonitorWidgetFlags.HideLast) === 0) {\n            _this.lastText = document.createElement(\"div\");\n            text.appendChild(_this.lastText);\n        }\n        else {\n            _this.lastText = null;\n        }\n        _this.element.appendChild(label);\n        _this.element.appendChild(text);\n        if ((flags & MonitorWidgetFlags.HideGraph) === 0) {\n            _this.canvas = document.createElement(\"canvas\");\n            _this.canvas.style.cssText = \"display: block; padding: 0; margin: 0\";\n            _this.canvas.width = MonitorGraphWidth;\n            _this.canvas.height = MonitorGraphHeight;\n            _this.ctx = _this.canvas.getContext(\"2d\");\n            _this.element.appendChild(_this.canvas);\n        }\n        else {\n            _this.canvas = null;\n            _this.ctx = null;\n        }\n        return _this;\n    }\n    MonitorWidget.prototype.sync = function () {\n        var _this = this;\n        var result = this.samples.calc();\n        var scale = MonitorGraphHeight / (result.max * 1.2);\n        var min;\n        var max;\n        var mean;\n        var last;\n        if ((this.flags & MonitorWidgetFlags.RoundValues) === 0) {\n            min = result.min.toFixed(2);\n            max = result.max.toFixed(2);\n            mean = result.mean.toFixed(2);\n            last = result.last.toFixed(2);\n        }\n        else {\n            min = Math.round(result.min).toString();\n            max = Math.round(result.max).toString();\n            mean = Math.round(result.mean).toString();\n            last = Math.round(result.last).toString();\n        }\n        if (this.minText !== null) {\n            this.minText.textContent = \"min: \\u00A0\" + min + this.unitName;\n        }\n        if (this.maxText !== null) {\n            this.maxText.textContent = \"max: \\u00A0\" + max + this.unitName;\n        }\n        if (this.meanText !== null) {\n            this.meanText.textContent = \"mean: \" + mean + this.unitName;\n        }\n        if (this.lastText !== null) {\n            this.lastText.textContent = \"last: \" + last + this.unitName;\n        }\n        if (this.ctx !== null) {\n            this.ctx.fillStyle = \"#010\";\n            this.ctx.fillRect(0, 0, MonitorGraphWidth, MonitorGraphHeight);\n            this.ctx.fillStyle = \"#0f0\";\n            this.samples.each(function (v, i) {\n                _this.ctx.fillRect(i, MonitorGraphHeight, 1, -(v * scale));\n            });\n        }\n    };\n    return MonitorWidget;\n}(Widget));\nvar CounterWidget = (function (_super) {\n    __extends(CounterWidget, _super);\n    function CounterWidget(name, counter) {\n        var _this = _super.call(this, name) || this;\n        _this.counter = counter;\n        _this.text = document.createElement(\"div\");\n        _this.element.appendChild(_this.text);\n        return _this;\n    }\n    CounterWidget.prototype.sync = function () {\n        this.text.textContent = this.name + \": \" + this.counter.value;\n    };\n    return CounterWidget;\n}(Widget));\n\nvar container = null;\nvar initialized = false;\n/**\n * Initialize Performance Monitor.\n */\nfunction initPerfMonitor(options) {\n    if (!initialized) {\n        if (options.container) {\n            container = options.container;\n        }\n        initialized = true;\n    }\n}\n/**\n * Check that everything is properly initialized.\n */\nfunction checkInit() {\n    if (!container) {\n        container = document.createElement(\"div\");\n        container.style.cssText = \"position: fixed;\" +\n            \"opacity: 0.9;\" +\n            \"right: 0;\" +\n            \"bottom: 0\";\n        document.body.appendChild(container);\n    }\n    initialized = true;\n}\n/**\n * Start FPS monitor\n */\nfunction startFPSMonitor(flags) {\n    if (flags === void 0) { flags = MonitorWidgetFlags.HideMin | MonitorWidgetFlags.HideMax |\n        MonitorWidgetFlags.HideMean | MonitorWidgetFlags.RoundValues; }\n    checkInit();\n    var data = new MonitorSamples(MonitorMaxSamples);\n    var w = new MonitorWidget(\"FPS\", flags, \"\", data);\n    container.appendChild(w.element);\n    var alpha = 2 / 121;\n    var last = 0;\n    var fps = 60;\n    function update(now) {\n        if (last > 0) {\n            fps += alpha * ((1000 / (now - last)) - fps);\n        }\n        last = now;\n        data.addSample(fps);\n        w.invalidate();\n        requestAnimationFrame(update);\n    }\n    requestAnimationFrame(update);\n}\n/**\n * Start Memory Monitor\n */\nfunction startMemMonitor(flags) {\n    if (flags === void 0) { flags = MonitorWidgetFlags.HideMin | MonitorWidgetFlags.HideMean; }\n    checkInit();\n    if (performance.memory === undefined) {\n        return;\n    }\n    var data = new MonitorSamples(MonitorMaxSamples);\n    var w = new MonitorWidget(\"Memory\", flags, \"MB\", data);\n    container.appendChild(w.element);\n    function update() {\n        data.addSample(Math.round(performance.memory.usedJSHeapSize / (1024 * 1024)));\n        w.invalidate();\n        setTimeout(update, 30);\n    }\n    update();\n}\nvar ProfilerDetails = (function () {\n    function ProfilerDetails(name, unitName, flags) {\n        this.data = new MonitorSamples(MonitorMaxSamples);\n        this.widget = new MonitorWidget(name, flags, unitName, this.data);\n        this.startTime = -1;\n    }\n    return ProfilerDetails;\n}());\nvar profilerInstances = {};\nvar CounterDetails = (function () {\n    function CounterDetails(name, interval) {\n        var _this = this;\n        this.data = interval === undefined ? new BasicCounter() : new SlidingCounter(interval);\n        this.widget = new CounterWidget(name, this.data);\n        this.data.onChange = function () {\n            _this.widget.invalidate();\n        };\n    }\n    return CounterDetails;\n}());\nvar counterInstances = {};\n/**\n * Initialize profiler and insert into container.\n */\nfunction initProfiler(name, flags) {\n    if (flags === void 0) { flags = 0; }\n    checkInit();\n    var profiler = profilerInstances[name];\n    if (profiler === void 0) {\n        profilerInstances[name] = profiler = new ProfilerDetails(name, \"ms\", flags);\n        container.appendChild(profiler.widget.element);\n    }\n}\n/**\n * Initialize counter and insert into container.\n */\nfunction initCounter(name, interval) {\n    checkInit();\n    var counter = counterInstances[name];\n    if (counter === void 0) {\n        counterInstances[name] = counter = new CounterDetails(name, interval);\n        container.appendChild(counter.widget.element);\n    }\n}\nfunction startProfile(name) {\n    var profiler = profilerInstances[name];\n    if (profiler !== void 0) {\n        profiler.startTime = performance.now();\n    }\n}\nfunction endProfile(name) {\n    var now = performance.now();\n    var profiler = profilerInstances[name];\n    if (profiler !== void 0 && profiler.startTime !== -1) {\n        profiler.data.addSample(now - profiler.startTime);\n        profiler.widget.invalidate();\n    }\n}\nfunction count(name, value) {\n    if (value === void 0) { value = 1; }\n    var counter = counterInstances[name];\n    if (counter !== void 0) {\n        counter.data.inc(value);\n    }\n}\n/**\n * lookup a profile by name\n * @param name the name of the profile to lookup\n */\nfunction getProfile(name) {\n    return profilerInstances[name];\n}\n/**\n * lookup a counter by name\n * @param name the name of the counter to lookup\n */\nfunction getCounter(name) {\n    return counterInstances[name];\n}\n\nexport { initPerfMonitor, startFPSMonitor, startMemMonitor, ProfilerDetails, CounterDetails, initProfiler, initCounter, startProfile, endProfile, count, getProfile, getCounter, MonitorSamplesResult, MonitorMaxSamples, MonitorSamples, BasicCounter, SlidingCounter, Widget, MonitorWidgetFlags, MonitorWidget, CounterWidget };\n","import { statelessComponent, render, context, connect, mapRange, _, setupScheduler, invalidateHandler } from \"ivi\";\nimport { span, div } from \"ivi-html\";\nimport { startFPSMonitor, startMemMonitor, initProfiler, startProfile, endProfile } from \"perf-monitor\";\nfunction randomColor() {\n    return \"#\" + Math.floor(Math.random() * 16777215).toString(16);\n}\nfunction generateData() {\n    const result = new Array(10000);\n    for (let i = 0; i < 10000; i++) {\n        result[i] = randomColor();\n    }\n    return result;\n}\nfunction updateData(data, mutations) {\n    if (mutations > 0) {\n        if (mutations === 1) {\n            for (let i = 0; i < 10000; i++) {\n                data[i] = randomColor();\n            }\n        }\n        else {\n            for (let i = 0; i < 10000; i++) {\n                if (Math.random() < mutations) {\n                    data[i] = randomColor();\n                }\n            }\n        }\n    }\n}\nconst Pixel = connect((_prev, props, ctx) => ctx.data[props], (color) => span(\"pixel\", _, { \"background\": color }));\nconst PixelImage = statelessComponent(() => (div(\"image\").c(mapRange(0, 100, (i) => {\n    const offset = i * 100;\n    return div(\"row\").k(i).c(mapRange(0, 100, (j) => Pixel(offset + j).k(j)));\n}))));\nsetupScheduler(invalidateHandler);\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    startFPSMonitor();\n    startMemMonitor();\n    initProfiler(\"data update\");\n    initProfiler(\"view update\");\n    let mutations = 0.5;\n    const sliderContainer = document.createElement(\"div\");\n    sliderContainer.style.margin = \"0 auto\";\n    sliderContainer.style.width = \"80%\";\n    const slider = document.createElement(\"input\");\n    slider.type = \"range\";\n    slider.style.width = \"100%\";\n    slider.addEventListener(\"change\", (e) => {\n        mutations = Number.parseFloat(e.target.value) / 100;\n    });\n    sliderContainer.appendChild(slider);\n    document.body.insertBefore(sliderContainer, document.body.firstChild);\n    const data = generateData();\n    const ctx = {\n        data: data,\n    };\n    const container = document.getElementById(\"app\");\n    render(context(ctx, PixelImage()), container);\n    function tick() {\n        startProfile(\"data update\");\n        updateData(data, mutations);\n        endProfile(\"data update\");\n        startProfile(\"view update\");\n        render(context(ctx, PixelImage()), container);\n        endProfile(\"view update\");\n        requestAnimationFrame(tick);\n    }\n    requestAnimationFrame(tick);\n});\n"],"sourceRoot":""}