{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:////home/void/w/ts/ivi-examples/node_modules/ivi/src/vdom/vnode.ts","webpack:////home/void/w/ts/ivi-examples/node_modules/ivi/src/vdom/vnode_factories.ts","webpack:////home/void/w/ts/ivi-examples/node_modules/tslib/tslib.es6.js","webpack:////home/void/w/ts/ivi-examples/node_modules/ivi-core/src/array.ts","webpack:////home/void/w/ts/ivi-examples/node_modules/ivi-core/src/feature_detection.ts","webpack:////home/void/w/ts/ivi-examples/node_modules/ivi-core/src/noop.ts","webpack:////home/void/w/ts/ivi-examples/node_modules/ivi-core/src/error.ts","webpack:////home/void/w/ts/ivi-examples/node_modules/ivi-core/src/repeatable_task_list.ts","webpack:////home/void/w/ts/ivi-examples/node_modules/ivi-scheduler/src/index.ts","webpack:////home/void/w/ts/ivi-examples/node_modules/ivi-core/src/shortcuts.ts","webpack:////home/void/w/ts/ivi-examples/node_modules/ivi-core/src/const.ts","webpack:////home/void/w/ts/ivi-examples/node_modules/ivi/src/events/sync_events.ts","webpack:////home/void/w/ts/ivi-examples/node_modules/ivi/src/vdom/sync_dom.ts","webpack:////home/void/w/ts/ivi-examples/node_modules/ivi/src/vdom/implementation.ts","webpack:////home/void/w/ts/ivi-examples/node_modules/ivi/src/vdom/root.ts","webpack:////home/void/w/ts/ivi-examples/node_modules/ivi/src/vdom/vnode_collections.ts","webpack:////home/void/w/ts/ivi-examples/node_modules/ivi-html/src/index.ts","webpack:////home/void/w/ts/ivi-examples/node_modules/perf-monitor/dist/es5/perf-monitor.js","webpack:///./src/main.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","VNode","flags","tag","props","className","style","this","_f","_l","_r","_c","_t","_k","_p","_i","_cs","_s","_e","k","e","events","children","arguments","first","prev","length","last","getDOMNode","vnode","vnode_factories_context","ctx","child","setPrototypeOf","Array","__assign","assign","__values","iterator","next","done","unorderedArrayDelete","array","index","pop","opts","window","addEventListener","KeyboardEvent","MouseEvent","IOS_GESTURE_EVENT","NOOP","ERROR_HANDLERS","catchError","fn","args","apply","_a","ERROR_HANDLERS_1","handler","runRepeatableTasks","tasks","run","a","tasks_1","task","_flags","_microtasks","_beforeUpdate","_afterUpdate","_updateDOMHandler","_currentFrame","f","w","_nextFrame","_autofocusedElement","runMicrotasks","module_autofocus","node","Element","_requestNextFrame","requestAnimationFrame","_handleNextFrame","requestNextFrame","Promise","resolve","then","push","time","frame","focus","addFrameTaskWrite","triggerNextFrame","performance","now","nodeProto","Node","elementProto","nodeInsertBefore","insertBefore","nodeRemoveChild","removeChild","nodeReplaceChild","replaceChild","nodeCloneNode","cloneNode","elementSetAttribute","setAttribute","elementRemoveAttribute","setAttributeNS","removeAttribute","SVG_NAMESPACE","syncEvents","b","h1","h2","attachEvents","detachEvents","registerEventHandler","unregisterEventHandler","h","src","add","remove","syncStyle","bValue","setProperty","removeProperty","syncDOMAttr","element","v","syncDOMAttrs","removeVNode","parent","_detach","_attach","attached","component","detached","dirtyCheck","context","dirtyContext","instance","syncVNode","render","updated","connect","selectData","select","_removeAllChildren","firstVNode","textContent","_render","document","createTextNode","svg","createElementNS","createElement","renderVNode","refChild","aFlags","bFlags","aProps","bProps","data","aChild","bChild","_syncChildrenTrackByKeys","propsChanged","shouldUpdate","prevSelectData","sc","aStartVNode","bStartVNode","aEndVNode","bEndVNode","step1Synced","outer","nextNode","aInnerLength","bInnerLength","lastPosition","bInnerArray","explicitKeyIndex","implicitKeyIndex","Map","set","prevPositionsForB","fill","step2Synced","seq","lis","slice","result","u","j","ROOTS","EMPTY_CONTEXT","_pendingUpdate","findRoot","container","ROOTS_1","ROOTS_1_1","root","_update","update","current","onclick","indexOf","root_render","renderNextFrame","updateNextFrame","mapRange","start","end","div","attrs","css","MonitorWidgetFlags","MonitorMaxSamples","MonitorSamplesResult","min","max","mean","MonitorSamples","maxSamples","samples","addSample","each","calc","sum","frameTasks","rafId","perf_monitor_extends","extendStatics","__proto__","__","constructor","MonitorGraphHeight","MonitorGraphWidth","Widget","_this","_sync","sync","_dirty","cssText","invalidate","Error","MonitorWidget","_super","unitName","label","text","HideMin","minText","appendChild","HideMax","maxText","HideMean","meanText","HideLast","lastText","HideGraph","canvas","width","height","getContext","scale","RoundValues","toFixed","Math","round","toString","fillStyle","fillRect","perf_monitor_container","CounterWidget","counter","checkInit","body","startFPSMonitor","fps","startMemMonitor","undefined","memory","usedJSHeapSize","setTimeout","ProfilerDetails","widget","startTime","profilerInstances","initProfiler","profiler","startProfile","endProfile","randomColor","floor","random","generateData","updateData","mutations","descriptor","Pixel","color","background","PixelImage","colors","offset","sliderContainer","margin","slider","type","Number","parseFloat","target","firstChild","getElementById","tick"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","import { CSSStyleProps, NOOP, objectHasOwnProperty } from \"ivi-core\";\nimport { checkVNodeConstructor, checkUniqueKeys } from \"../dev_mode/vnode\";\nimport { EventHandler } from \"../events/event_handler\";\nimport { VNodeFlags } from \"./flags\";\nimport { StatelessComponent, StatefulComponent, Component } from \"./component\";\nimport { ConnectDescriptor } from \"./connect_descriptor\";\nimport { isVoidElement } from \"../dev_mode/dom\";\n\n/**\n * Virtual DOM Node.\n *\n * @example\n *\n *     const vnode = div(\"div-class-name\", { id: \"div-id\" })\n *       .e(onClick((e) => console.log(\"click event\", e)))\n *       .c(\"Hello\");\n *\n * @final\n */\nexport class VNode<P = any, N = Node> {\n  /**\n   * Flags, see {@link VNodeFlags} for details.\n   */\n  _f: VNodeFlags;\n  /**\n   * Circular link to previous sibling node (left).\n   */\n  _l: VNode;\n  /**\n   * Next sibling node (right).\n   */\n  _r: VNode | null;\n  /**\n   * Children.\n   */\n  _c: VNode | null;\n  /**\n   * Tag property contains details about the type of the element.\n   */\n  _t:\n    | string\n    | VNode\n    | StatefulComponent<any>\n    | StatelessComponent<any>\n    | ConnectDescriptor<any, any, {}>\n    | null;\n  /**\n   * Children syncing algorithm is using key property to match nodes. Key should be unique among its siblings.\n   */\n  _k: any;\n  /**\n   * Properties.\n   */\n  _p: P | undefined;\n  /**\n   * Reference to HTML node or Component instance.\n   *\n   * It will be available after virtual node is created or synced. Each time VNode is synced, reference will be\n   * transferred from the old VNode to the new one.\n   */\n  _i: N | Component<any> | {} | null;\n  /**\n   * Class name.\n   */\n  _cs: string;\n  /**\n   * Style.\n   */\n  _s: CSSStyleProps | undefined;\n  /**\n   * Events.\n   */\n  _e: Array<EventHandler | null> | EventHandler | null;\n  /**\n   * Factory function that was used to instantiate this node.\n   *\n   * It is used for debugging and testing purposes.\n   */\n  factory!: Function;\n\n  constructor(\n    flags: number,\n    tag:\n      | string\n      | VNode\n      | StatelessComponent<P>\n      | StatefulComponent<P>\n      | ConnectDescriptor<any, any, {}>\n      | null,\n    props: P | undefined,\n    className: string,\n    style: CSSStyleProps | undefined,\n  ) {\n    this._f = flags;\n    this._l = this;\n    this._r = null;\n    this._c = null;\n    this._t = tag;\n    this._k = 0;\n    this._p = props;\n    this._i = null;\n    this._cs = className;\n    this._s = style;\n    this._e = null;\n    /* istanbul ignore else */\n    if (DEBUG) {\n      checkVNodeConstructor(this);\n      this.factory = NOOP;\n    }\n  }\n\n  /**\n   * Assigns a key.\n   *\n   * Children reconciliation algorithm is using keys to match nodes. Key should be unique among its siblings.\n   *\n   * @param key - Unique key\n   * @returns this node\n   */\n  k(key: any): this {\n    this._f |= VNodeFlags.Key;\n    this._k = key;\n    return this;\n  }\n\n  /**\n   * Assign events.\n   *\n   * @param events - Events\n   * @returns this node\n   */\n  e(events: Array<EventHandler | null> | EventHandler | null): this {\n    /* istanbul ignore else */\n    if (DEBUG) {\n      if ((this._f & VNodeFlags.Text)) {\n        throw new Error(\"Failed to set events, events aren't available on text nodes\");\n      }\n    }\n    if (events !== null) {\n      this._f |= VNodeFlags.Events;\n      this._e = events;\n    }\n    return this;\n  }\n\n  /**\n   * Assigns children for an Element node.\n   *\n   * @param children - Children can be a simple string, single VNode or recursive list of VNodes with strings and null\n   *   values. It will automatically normalize recursive lists by flattening, filtering out null values and replacing\n   *   strings with text nodes.\n   * @returns this node\n   */\n  c(...children: Array<VNode | string | number | null>): this;\n  c(): this {\n    /* istanbul ignore else */\n    if (DEBUG) {\n      if (this._c !== null) {\n        throw new Error(\"Failed to set children, VNode element is already having children\");\n      }\n      if (!(this._f & VNodeFlags.Element)) {\n        throw new Error(\"Failed to set children, children are available on element nodes only\");\n      }\n      if (isVoidElement(this._t as string)) {\n        throw new Error(\"Failed to set children, void elements can't have any children\");\n      }\n      if (this._p) {\n        if (objectHasOwnProperty.call(this._p, \"unsafeHTML\")) {\n          throw new Error(\"Failed to set children, element is using unsafeHTML attribute\");\n        }\n      }\n    }\n\n    const children: Array<VNode | string | number | null> = arguments as any;\n    let first: VNode<any> | null = null;\n    let prev: VNode<any> | null = null;\n\n    for (let i = 0, p = 0; i < children.length; ++i, ++p) {\n      let n = children[i];\n\n      if (n !== null) {\n        if (typeof n !== \"object\") {\n          n = new VNode<string | number>(VNodeFlags.Text, null, n, \"\", void 0);\n        }\n        const last = n._l;\n        const flags = n._f;\n        if (last === n) {\n          if ((flags & VNodeFlags.Key) === 0) {\n            n._k = p;\n          }\n        } else if ((flags & VNodeFlags.KeyedList) === 0) {\n          let c: VNode | null = n;\n          do {\n            if ((c!._f & VNodeFlags.Key) === 0) {\n              c!._k = p;\n            }\n            ++p;\n            c = c!._r;\n          } while (c !== null);\n          --p;\n        }\n\n        if (prev !== null) {\n          n._l = prev;\n          prev._r = n;\n        } else {\n          first = n;\n        }\n        prev = last;\n      }\n    }\n    if (first !== null) {\n      first._l = prev!;\n      this._c = first;\n      /* istanbul ignore else */\n      if (DEBUG) {\n        checkUniqueKeys(first);\n      }\n    }\n\n    return this;\n  }\n}\n\n/**\n * getDOMNode retrieves a reference to a DOM node from a VNode object.\n *\n * @param vnode - Virtual DOM node which contains reference to a DOM node.\n * @returns null if VNode doesn't have a reference to a DOM node.\n */\nexport function getDOMNode<T extends Node>(vnode: VNode<any, T>): T | null {\n  if ((vnode._f & (\n    VNodeFlags.StatelessComponent |\n    VNodeFlags.StatefulComponent |\n    VNodeFlags.Connect |\n    VNodeFlags.UpdateContext\n  )) !== 0) {\n    return getDOMNode<T>(vnode._c as VNode<any, T>);\n  }\n  return vnode._i as T;\n}\n\n/**\n * getComponent retrieves a reference to a Component instance from a VNode object.\n *\n * @param vnode - Virtual DOM node which contains reference to a Component instance.\n * @returns `null` if `vnode` doesn't have a reference to a Component instance\n */\nexport function getComponent<T extends Component<any>>(vnode: VNode): T | null {\n  /* istanbul ignore else */\n  if (DEBUG) {\n    if ((vnode._f & (\n      VNodeFlags.StatelessComponent |\n      VNodeFlags.StatefulComponent |\n      VNodeFlags.Connect |\n      VNodeFlags.UpdateContext\n    )) === 0) {\n      throw new Error(\"Failed to get component instance: VNode should represent a Component.\");\n    }\n  }\n  return vnode._i as T | null;\n}\n\n/**\n * autofocus makes an element focused after instantiation.\n *\n * @param vnode - Virtual DOM node\n * @return `vnode`\n */\nexport function autofocus<N extends VNode>(vnode: N): N {\n  /* istanbul ignore else */\n  if (DEBUG) {\n    if (!(vnode._f & (\n      VNodeFlags.Element |\n      VNodeFlags.StatelessComponent |\n      VNodeFlags.StatefulComponent |\n      VNodeFlags.Connect |\n      VNodeFlags.UpdateContext\n    ))) {\n      throw new Error(\"Failed to set autofocus, autofocus is available on element and component nodes only.\");\n    }\n  }\n  vnode._f |= VNodeFlags.Autofocus;\n  return vnode;\n}\n\n/**\n * stopDirtyChecking stops dirty checking process when it goes through this virtual DOM node.\n *\n * @param vnode - Virtual DOM node\n * @returns `vnode`\n */\nexport function stopDirtyChecking<N extends VNode>(vnode: N): N {\n  vnode._f |= VNodeFlags.StopDirtyChecking;\n  return vnode;\n}\n","import { VNodeFlags } from \"./flags\";\nimport { StatefulComponent, StatelessComponent } from \"./component\";\nimport { VNode } from \"./vnode\";\nimport { ConnectDescriptor } from \"./connect_descriptor\";\n\n/**\n * statelessComponent creates a virtual DOM node factory that produces nodes for stateless components.\n *\n * @example\n *\n *     const A = statelessComponent<{ text: string }>(\n *       (props) => div().c(props.text),\n *     );\n *\n *     render(\n *       A({ text: \"Hello\" }),\n *       DOMContainer,\n *     );\n *\n * @param render - Render function\n * @returns factory that produces stateless component nodes\n */\nexport function statelessComponent(c: () => VNode): () => VNode<undefined>;\n\n/**\n * statelessComponent creates a virtual DOM node factory that produces nodes for stateless components.\n *\n * @example\n *\n *     const A = statelessComponent<{ text: string }>(\n *       (props) => div().c(props.text),\n *     );\n *\n *     render(\n *       A({ text: \"Hello\" }),\n *       DOMContainer,\n *     );\n *\n * @param render - Render function\n * @returns factory that produces stateless component nodes\n */\nexport function statelessComponent<P>(\n  render: undefined extends P ? (props?: P) => VNode<any> : (props: P) => VNode<any>,\n): undefined extends P ? (props?: P) => VNode<P> : (props: P) => VNode<P>;\n\n/**\n * statelessComponent creates a virtual DOM node factory that produces nodes for stateless components.\n *\n * @example\n *\n *     const A = statelessComponent<{ text: string }>(\n *       (props) => div().c(props.text),\n *     );\n *\n *     render(\n *       A({ text: \"Hello\" }),\n *       DOMContainer,\n *     );\n *\n * @param render - Render function\n * @returns factory that produces stateless component nodes\n */\nexport function statelessComponent<P>(render: (props: P) => VNode<any>): (props: P) => VNode<P> {\n  const d = { render, shouldUpdate: null };\n  const f = (props: P) => {\n    const n = new VNode<P>(\n      VNodeFlags.StatelessComponent,\n      d,\n      props,\n      \"\",\n      void 0,\n    );\n    /* istanbul ignore else */\n    if (DEBUG) {\n      n.factory = f;\n    }\n    return n;\n  };\n  return f;\n}\n\n/**\n * withShouldUpdate creates a virtual DOM node factory that produces nodes for stateless components with custom\n * `shouldUpdate` function to prevent unnecessary updates.\n *\n * @example\n *\n *     const A = withShouldUpdate<{ text: string }>(\n *       (prevProps, nextProps) => prevProps.text !== nextProps.text,\n *       statelessComponent(\n *         (props) => div().c(props.text),\n *       ),\n *     );\n *\n *     render(\n *       A({ text: \"Hello\" }),\n *       DOMContainer,\n *     );\n *\n * @param shouldUpdate - Function that performs an early check that prevent unnecessary updates\n * @param factory - Factory that produces stateless component nodes\n * @returns factory that produces stateless component nodes\n */\nexport function withShouldUpdate<P>(\n  shouldUpdate: (oldProps: P, newProps: P) => boolean,\n  factory: (props: P) => VNode<P>,\n): (props: P) => VNode<P> {\n  const v = factory(null as any);\n  const d = { render: (v._t as StatelessComponent<P>).render, shouldUpdate };\n  const f = (props: P) => {\n    const n = new VNode<P>(\n      VNodeFlags.StatelessComponent | VNodeFlags.ShouldUpdateHint,\n      d,\n      props,\n      \"\",\n      void 0,\n    );\n    /* istanbul ignore else */\n    if (DEBUG) {\n      n.factory = f;\n    }\n    return n;\n  };\n  return f;\n}\n\n/**\n * statefulComponent creates a virtual DOM node factory that produces nodes for stateful components.\n *\n * @example\n *\n *     const A = component(class extends Component<string> {\n *       onClick = onClick(() => console.log(this.props));\n *\n *       render() {\n *         return (\n *           button()\n *             .e(this.onClick)\n *             .c(\"Click Me\")\n *         );\n *       }\n *     });\n *\n *     render(\n *       A(\"clicked\"),\n *       DOMContainer,\n *     );\n *\n * @param c - Stateful component\n * @returns factory that produces stateful component nodes\n */\nexport function statefulComponent(c: StatefulComponent<undefined>): () => VNode<undefined>;\n\n/**\n * statefulComponent creates a virtual DOM node factory that produces nodes for stateful components.\n *\n * @example\n *\n *     const A = component(class extends Component<string> {\n *       onClick = onClick(() => console.log(this.props));\n *\n *       render() {\n *         return (\n *           button()\n *             .e(this.onClick)\n *             .c(\"Click Me\")\n *         );\n *       }\n *     });\n *\n *     render(\n *       A(\"clicked\"),\n *       DOMContainer,\n *     );\n *\n * @param c - Stateful component\n * @returns factory that produces stateful component nodes\n */\nexport function statefulComponent<P>(\n  c: StatefulComponent<P>,\n): undefined extends P ? (props?: P) => VNode<P> : (props: P) => VNode<P>;\n\n/**\n * statefulComponent creates a virtual DOM node factory that produces nodes for stateful components.\n *\n * @example\n *\n *     const A = component(class extends Component<string> {\n *       onClick = onClick(() => console.log(this.props));\n *\n *       render() {\n *         return (\n *           button()\n *             .e(this.onClick)\n *             .c(\"Click Me\")\n *         );\n *       }\n *     });\n *\n *     render(\n *       A(\"clicked\"),\n *       DOMContainer,\n *     );\n *\n * @param c - Stateful component\n * @returns factory that produces stateful component nodes\n */\nexport function statefulComponent<P>(\n  c: StatefulComponent<P>,\n): (props: P) => VNode<P> {\n  const f = (props: P) => {\n    const n = new VNode<P>(\n      VNodeFlags.StatefulComponent,\n      c,\n      props,\n      \"\",\n      void 0,\n    );\n    /* istanbul ignore else */\n    if (DEBUG) {\n      n.factory = f;\n    }\n    return n;\n  };\n  return f;\n}\n\n/**\n * context creates a virtual DOM node that will modify current context.\n *\n * @example\n *\n *     render(\n *       context({ key: 123 },\n *         ChildComponent(),\n *       ),\n *       DOMContainer,\n *     );\n *\n * @param ctx - Context object\n * @param child - child Virtual DOM node\n * @returns context node\n */\nexport function context<T = {}>(ctx: T, child: VNode): VNode<T> {\n  /* istanbul ignore else */\n  if (DEBUG) {\n    if (child._l !== child) {\n      throw new Error(\"Context node contains an invalid child. Child should be a singular VNode.\");\n    }\n  }\n  const n = new VNode<T>(\n    VNodeFlags.UpdateContext,\n    null,\n    ctx,\n    \"\",\n    void 0,\n  );\n  n._c = child;\n  return n;\n}\n\n/**\n * connect creates a virtual DOM node factory that produces connector nodes.\n *\n * @example\n *\n *     const Connector = connect<string, undefined, { result: string }>(\n *       (prev, props, context) => {\n *         const result = context.result;\n *\n *         return (prev !== null && prev === result) ? prev :\n *           result;\n *       },\n *       (text) => div().c(text),\n *     );\n *\n *     render(\n *       context({ result: \"text\" },\n *         Connector(),\n *       ),\n *       DOMContainer,\n *     );\n *\n * @param select - Selector function\n * @param render - Render function\n * @returns factory that produces connector nodes\n */\nexport function connect<T>(\n  select: (prev: T | null) => T,\n  render: (props: T) => VNode<any>,\n): () => VNode<undefined>;\n\n/**\n * connect creates a virtual DOM node factory that produces connector nodes.\n *\n * @example\n *\n *     const Connector = connect<string, undefined, { result: string }>(\n *       (prev, props, context) => {\n *         const result = context.result;\n *\n *         return (prev !== null && prev === result) ? prev :\n *           result;\n *       },\n *       (text) => div().c(text),\n *     );\n *\n *     render(\n *       context({ result: \"text\" },\n *         Connector(),\n *       ),\n *       DOMContainer,\n *     );\n *\n * @param select - Selector function\n * @param render - Render function\n * @returns factory that produces connector nodes\n */\nexport function connect<T, P>(\n  select: undefined extends P ? (prev: T | null, props?: P) => T : (prev: T | null, props: P) => T,\n  render: (props: T) => VNode<any>,\n): undefined extends P ? (props?: P) => VNode<P> : (props: P) => VNode<P>;\n\n/**\n * connect creates a virtual DOM node factory that produces connector nodes.\n *\n * @example\n *\n *     const Connector = connect<string, undefined, { result: string }>(\n *       (prev, props, context) => {\n *         const result = context.result;\n *\n *         return (prev !== null && prev === result) ? prev :\n *           result;\n *       },\n *       (text) => div().c(text),\n *     );\n *\n *     render(\n *       context({ result: \"text\" },\n *         Connector(),\n *       ),\n *       DOMContainer,\n *     );\n *\n * @param select - Selector function\n * @param render - Render function\n * @returns factory that produces connector nodes\n */\nexport function connect<T, P, C>(\n  select: (prev: T | null, props: P, context: C) => T,\n  render: (props: T) => VNode<any>,\n): undefined extends P ? () => VNode<P> : (props: P) => VNode<P>;\n\n/**\n * connect creates a virtual DOM node factory that produces connector nodes.\n *\n * @example\n *\n *     const Connector = connect<string, undefined, { result: string }>(\n *       (prev, props, context) => {\n *         const result = context.result;\n *\n *         return (prev !== null && prev === result) ? prev :\n *           result;\n *       },\n *       (text) => div().c(text),\n *     );\n *\n *     render(\n *       context({ result: \"text\" },\n *         Connector(),\n *       ),\n *       DOMContainer,\n *     );\n *\n * @param select - Selector function\n * @param render - Render function\n * @returns factory that produces connector nodes\n */\nexport function connect<T, P, C>(\n  select: (prev: T | null, props: P, context: C) => T,\n  render: (props: T) => VNode<any>,\n): (props: P) => VNode<P> {\n  const descriptor = { select, render };\n  const f = (props: P) => {\n    const n = new VNode<P>(\n      VNodeFlags.Connect,\n      descriptor as ConnectDescriptor<any, any, {}>,\n      props,\n      \"\",\n      void 0,\n    );\n    /* istanbul ignore else */\n    if (DEBUG) {\n      n.factory = f;\n    }\n    return n;\n  };\n  return f;\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * append pushes item to an array and automatically create a new array when it doesn't exist.\n *\n * @param array - Array\n * @param item - Item\n * @returns Array\n */\nexport function append<T>(array: T[] | null, item: T): T[] {\n  if (array === null) {\n    return [item];\n  }\n  array.push(item);\n  return array;\n}\n\n/**\n * unorderedArrayDelete deletes element from an array with O(1) complexity.\n *\n * It swaps element at `index` position with the last element and removes the last one.\n *\n * @param array - Array\n * @param index - Index of an element to remove\n */\nexport function unorderedArrayDelete<T>(array: T[], index: number): void {\n  const length = array.length - 1;\n  const last = array.pop();\n  if (index !== length) {\n    array[index] = last!;\n  }\n}\n","/**\n * Feature Detection is used to implement polyfills or just disable some features when browser doesn't support them.\n * For example, when browser doesn't support passive events, we can just ignore it and always use active events.\n */\n\n/* istanbul ignore next */\n/**\n * Passive event listeners are a new feature in the DOM spec that enable developers to opt-in to better scroll\n * performance by eliminating the need for scrolling to block on touch and wheel event listeners. Developers can\n * annotate touch and wheel listeners with {passive: true} to indicate that they will never invoke preventDefault.\n *\n * https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n */\nexport const PASSIVE_EVENTS = /*#__PURE__*/((TARGET === \"electron\") ? true :\n  (() => {\n    let v = false;\n    try {\n      // Test via a getter in the options object to see if the passive property is accessed\n      const opts = Object.defineProperty({}, \"passive\", {\n        get() {\n          v = true;\n        },\n      });\n      window.addEventListener(\"test\", null as any as (ev: Event) => void, opts);\n    } catch (e) {\n      // ignore\n    }\n    return v;\n  })());\n\n/* istanbul ignore next */\n/**\n * `key` property is available on KeyboardEvent instances.\n */\nexport const KEYBOARD_EVENT_KEY = /*#__PURE__*/(\n  (TARGET === \"electron\") ||\n  (TARGET === \"evergreen\") ||\n  KeyboardEvent.prototype.hasOwnProperty(\"key\")\n);\n\n/* istanbul ignore next */\n/**\n * `buttons` property is available on MouseEvent instances.\n */\nexport const MOUSE_EVENT_BUTTONS = /*#__PURE__*/(\n  (TARGET === \"electron\") ||\n  (TARGET === \"evergreen\") ||\n  MouseEvent.prototype.hasOwnProperty(\"buttons\")\n);\n\n/* istanbul ignore next */\n/**\n * Touch Events support.\n */\nexport const TOUCH_EVENTS = (\"ontouchstart\" in window);\n\n/* istanbul ignore next */\n/**\n * Pointer Events support.\n */\nexport const POINTER_EVENTS = ((TARGET === \"electron\") || (\"PointerEvent\" in window));\n\n/* istanbul ignore next */\n/**\n * InputDeviceCapabilities support.\n *\n * http://wicg.github.io/InputDeviceCapabilities/\n */\nexport const INPUT_DEVICE_CAPABILITIES = ((TARGET === \"electron\") || \"InputDeviceCapabilities\" in window);\n\n/* istanbul ignore next */\n/**\n * iOS proprietary GestureEvent.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/GestureEvent}\n */\nexport const IOS_GESTURE_EVENT = (TARGET !== \"electron\") && (\"GestureEvent\" in window);\n","/**\n * NOOP function.\n */\nexport function NOOP(): void {\n  /* tslint:disable:no-empty */\n  /* tslint:enable:no-empty */\n}\n\n/**\n * NOOP_FALSE function always returns `false` value.\n *\n * @returns `false` value.\n */\nexport function NOOP_FALSE(): boolean {\n  return false;\n}\n","const ERROR_HANDLERS: Array<(e: any) => void> = [];\n\n/**\n * addErrorHandler adds an error handler for errors catched by functions decorated with `catchError()`.\n *\n * @param handler error handler.\n */\nexport function addErrorHandler(handler: (e: any) => void): void {\n  ERROR_HANDLERS.push(handler);\n}\n\n/**\n * catchError is a decorator that catches exceptions and invokes error handlers registered with `addErrorHandler()`.\n *\n * @noinline\n * @throws\n * @param fn - Function to decorate\n * @returns function decorated with a catchError\n */\nexport function catchError<T>(fn: (...args: any[]) => T): (...args: any[]) => T {\n  return (...args: any[]) => {\n    try {\n      return fn(...args);\n    } catch (e) {\n      for (const handler of ERROR_HANDLERS) {\n        handler(e);\n      }\n      throw e;\n    }\n  };\n}\n","import { unorderedArrayDelete } from \"./array\";\n\n/**\n * RepeatableTaskList is a data structure for tasks that will be repeated until they return `true` value.\n */\nexport type RepeatableTaskList = Array<() => boolean | undefined>;\n\n/**\n * runRepeatableTasks runs repeatable tasks.\n *\n * @param tasks - Repeatable tasks\n */\nexport function runRepeatableTasks(tasks: RepeatableTaskList): void {\n  for (let i = 0; i < tasks.length; ++i) {\n    if (tasks[i]() === true) {\n      unorderedArrayDelete(tasks, i--);\n    }\n  }\n}\n","import { RepeatableTaskList, runRepeatableTasks, NOOP, catchError } from \"ivi-core\";\n\n/**\n * Scheduler flags.\n */\nconst enum SchedulerFlags {\n  Hidden = 1,\n  MicrotaskPending = 1 << 1,\n  TaskPending = 1 << 2,\n  NextFramePending = 1 << 3,\n  CurrentFrameReady = 1 << 4,\n}\n\n/**\n * Frame Tasks Group flags.\n */\nconst enum FrameTasksGroupFlags {\n  /**\n   * Group contains update task.\n   */\n  Update = 1,\n  /**\n   * Group contains \"write\" tasks.\n   */\n  Write = 1 << 1,\n  /**\n   * Group contains \"read\" tasks\".\n   */\n  Read = 1 << 2,\n}\n\n/**\n * Task list.\n */\ninterface TaskList {\n  /**\n   * Tasks.\n   */\n  a: Array<() => void>;\n}\n\n/**\n * createTaskList creates a task list.\n *\n * @returns Task list\n */\nfunction createTaskList(): TaskList {\n  return { a: [] };\n}\n\n/**\n * Execute tasks from the task list.\n *\n * @param t - Task list\n */\nfunction run(t: TaskList) {\n  const tasks = t.a;\n  t.a = [];\n  for (const task of tasks) {\n    task();\n  }\n}\n\n/**\n * FrameTasksGroup contains tasks for read and write DOM tasks.\n *\n * @final\n */\ninterface FrameTasksGroup {\n  /**\n   * See {@link FrameTasksGroupFlags} for details.\n   */\n  f: number;\n  /**\n   * Write DOM task queue.\n   */\n  w: TaskList;\n  /**\n   * Read DOM task queue.\n   */\n  r: TaskList;\n}\n\n/**\n * Creates a {@link FrameTasksGroup}.\n *\n * @returns {@link FrameTasksGroup}\n */\nfunction createFrameTasksGroup(): FrameTasksGroup {\n  return {\n    f: 0,\n    w: createTaskList(),\n    r: createTaskList(),\n  };\n}\n\nlet _flags: SchedulerFlags = 0;\nlet _clock = 0;\nconst _microtasks = createTaskList();\nconst _tasks = createTaskList();\n\nconst _beforeUpdate: RepeatableTaskList = [];\nconst _afterUpdate: RepeatableTaskList = [];\nlet _updateDOMHandler: () => void = NOOP;\nlet _currentFrame = createFrameTasksGroup();\nlet _nextFrame = createFrameTasksGroup();\nlet _currentFrameStartTime = 0;\nlet _autofocusedElement: Element | null = null;\n\nconst runMicrotasks = catchError(() => {\n  while (_microtasks.a.length > 0) {\n    run(_microtasks);\n  }\n\n  _flags ^= SchedulerFlags.MicrotaskPending;\n  ++_clock;\n});\n\n// Task scheduler based on MessageChannel\nconst _taskChannel = /* #__PURE__ */(() => {\n  const c = new MessageChannel();\n  c.port1.onmessage = catchError((ev: MessageEvent) => {\n    _flags ^= SchedulerFlags.TaskPending;\n    run(_tasks);\n    ++_clock;\n  });\n  return c;\n})();\n\n/**\n * clock returns monotonically increasing clock value.\n *\n * @returns current clock value.\n */\nexport function clock(): number {\n  return _clock;\n}\n\n/**\n * scheduleMicrotask adds task to the microtask queue.\n *\n * @param task Microtask.\n */\nexport function scheduleMicrotask(task: () => void): void {\n  if (!(_flags & SchedulerFlags.MicrotaskPending)) {\n    _flags |= SchedulerFlags.MicrotaskPending;\n    Promise.resolve().then(runMicrotasks);\n  }\n  _microtasks.a.push(task);\n}\n\n/**\n * scheduleTask adds task to the task queue.\n *\n * @param task Task.\n */\nexport function scheduleTask(task: () => void): void {\n  if (!(_flags & SchedulerFlags.TaskPending)) {\n    _flags |= SchedulerFlags.TaskPending;\n    _taskChannel.port2.postMessage(0);\n  }\n  _tasks.a.push(task);\n}\n\nexport function isHidden(): boolean {\n  return (_flags & SchedulerFlags.Hidden) !== 0;\n}\n\nexport function setUpdateDOMHandler(handler: () => void): void {\n  _updateDOMHandler = handler;\n}\n\n/**\n * Adds a task that will be executed before each update.\n *\n * @param task - Task that will be executed before each update until it returns `false`.\n */\nexport function beforeUpdate(task: () => boolean | undefined): void {\n  _beforeUpdate.push(task);\n}\n\n/**\n * Adds a task that will be executed after each update.\n *\n * @param task - Task that will be executed after each update until it returns `false`.\n */\nexport function afterUpdate(task: () => boolean | undefined): void {\n  _afterUpdate.push(task);\n}\n\n/**\n * Set autofocused element.\n *\n * @param node - DOM node\n */\nexport function autofocus(node: Node): void {\n  if (node instanceof Element) {\n    _autofocusedElement = node;\n  }\n}\n\n/**\n * frameStartTime returns current frame start time.\n *\n * @returns current frame start time.\n */\nexport function currentFrameStartTime(): number {\n  return _currentFrameStartTime;\n}\n\n/**\n * requestNextFrame triggers next frame tasks execution.\n */\nfunction _requestNextFrame(): void {\n  if (_flags & SchedulerFlags.NextFramePending) {\n    requestAnimationFrame(_handleNextFrame);\n  }\n}\n\n/**\n * requestNextFrame triggers next frame tasks execution.\n */\nexport function requestNextFrame(): void {\n  if (!(_flags & SchedulerFlags.NextFramePending)) {\n    _flags |= SchedulerFlags.NextFramePending;\n    scheduleMicrotask(_requestNextFrame);\n  }\n}\n\n/**\n * Frame tasks scheduler event handler.\n *\n * @param t Current time.\n */\nconst _handleNextFrame = catchError((time: number) => {\n  _flags ^= SchedulerFlags.NextFramePending | SchedulerFlags.CurrentFrameReady;\n  _currentFrameStartTime = time;\n\n  const frame = _nextFrame;\n  _nextFrame = _currentFrame;\n  _currentFrame = frame;\n\n  runRepeatableTasks(_beforeUpdate);\n\n  // Perform read/write batching. Start with executing read DOM tasks, then update components, execute write DOM tasks\n  // and repeat until all read and write tasks are executed.\n  do {\n    while (frame.f & FrameTasksGroupFlags.Read) {\n      frame.f ^= FrameTasksGroupFlags.Read;\n      run(frame.r);\n    }\n\n    while (frame.f & (FrameTasksGroupFlags.Update | FrameTasksGroupFlags.Write)) {\n      if (frame.f & FrameTasksGroupFlags.Write) {\n        frame.f ^= FrameTasksGroupFlags.Write;\n        run(frame.w);\n      }\n\n      if (frame.f & FrameTasksGroupFlags.Update) {\n        frame.f ^= FrameTasksGroupFlags.Update;\n        _updateDOMHandler();\n      }\n    }\n  } while (frame.f & (\n    FrameTasksGroupFlags.Update |\n    FrameTasksGroupFlags.Write |\n    FrameTasksGroupFlags.Read\n  ));\n\n  _flags ^= SchedulerFlags.CurrentFrameReady;\n\n  runRepeatableTasks(_afterUpdate);\n\n  if (_autofocusedElement !== null) {\n    (_autofocusedElement as HTMLElement).focus();\n    _autofocusedElement = null;\n  }\n\n  ++_clock;\n});\n\nfunction addFrameTaskUpdate(frame: FrameTasksGroup): void {\n  frame.f |= FrameTasksGroupFlags.Update;\n}\n\nfunction addFrameTaskWrite(frame: FrameTasksGroup, task: () => void): void {\n  frame.f |= FrameTasksGroupFlags.Write;\n  frame.w.a.push(task);\n}\n\nfunction addFrameTaskRead(frame: FrameTasksGroup, task: () => void): void {\n  frame.f |= FrameTasksGroupFlags.Read;\n  frame.r.a.push(task);\n}\n\nexport function nextFrameUpdate(): void {\n  requestNextFrame();\n  addFrameTaskUpdate(_nextFrame);\n}\n\nexport function nextFrameWrite(task: () => void): void {\n  requestNextFrame();\n  addFrameTaskWrite(_nextFrame, task);\n}\n\nexport function nextFrameRead(task: () => void): void {\n  requestNextFrame();\n  addFrameTaskRead(_nextFrame, task);\n}\n\nexport function currentFrameUpdate(): void {\n  if (_flags & SchedulerFlags.CurrentFrameReady) {\n    addFrameTaskUpdate(_currentFrame);\n  } else {\n    nextFrameUpdate();\n  }\n}\n\nexport function currentFrameWrite(task: () => void): void {\n  if (_flags & SchedulerFlags.CurrentFrameReady) {\n    addFrameTaskWrite(_currentFrame, task);\n  } else {\n    nextFrameWrite(task);\n  }\n}\n\nexport function currentFrameRead(task: () => void): void {\n  if (_flags & SchedulerFlags.CurrentFrameReady) {\n    addFrameTaskRead(_currentFrame, task);\n  } else {\n    nextFrameRead(task);\n  }\n}\n\n/**\n * triggerNextFrame triggers an update for the next frame.\n */\nexport function triggerNextFrame(): void {\n  if (_flags & SchedulerFlags.NextFramePending) {\n    _handleNextFrame(performance.now());\n  }\n}\n","const nodeProto = Node.prototype;\nconst elementProto = Element.prototype;\n\n/**\n * Shortcut for an `Object.prototype.hasOwnProperty`.\n */\nexport const objectHasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Shortcut for a `Node.prototype.insertBefore`.\n */\nexport const nodeInsertBefore = nodeProto.insertBefore;\n\n/**\n * Shortcut for a `Node.prototype.removeChild`.\n */\nexport const nodeRemoveChild = nodeProto.removeChild;\n\n/**\n * Shortcut for a `Node.prototype.replaceChild`.\n */\nexport const nodeReplaceChild = nodeProto.replaceChild;\n\n/**\n * Shortcut for a `Node.prototype.cloneNode`.\n */\nexport const nodeCloneNode = nodeProto.cloneNode;\n\n/**\n * Shortcut for an `Element.prototype.setAttribute`.\n */\nexport const elementSetAttribute = elementProto.setAttribute;\n\n/**\n * Shortcut for an `Element.prototype.setAttributeNS`.\n */\nexport const elementSetAttributeNS = elementProto.setAttributeNS;\n\n/**\n * Shortcut for an `Element.prototype.removeAttribute`.\n */\nexport const elementRemoveAttribute = elementProto.removeAttribute;\n\n/**\n * Shortcut for an `undefined` value.\n */\nexport const _ = void 0;\n","export const SVG_NAMESPACE = \"http://www.w3.org/2000/svg\";\nexport const XLINK_NAMESPACE = \"http://www.w3.org/1999/xlink\";\nexport const XML_NAMESPACE = \"http://www.w3.org/XML/1998/namespace\";\n\n/**\n * KeyboardEvent keyCode values.\n */\nexport const enum KeyCode {\n  WinKeyFFLinux = 0,\n  MacEnter = 3,\n  Backspace = 8,\n  Tab = 9,\n  Clear = 12,\n  Enter = 13,\n  Shift = 16,\n  Control = 17,\n  Alt = 18,\n  Pause = 19,\n  CapsLock = 20,\n  Escape = 27,\n  Space = 32,\n  PageUp = 33,\n  PageDown = 34,\n  End = 35,\n  Home = 36,\n  ArrowLeft = 37,\n  ArrowUp = 38,\n  ArrowRight = 39,\n  ArrowDown = 40,\n  NumNorthEast = 33,\n  NumSouthEast = 34,\n  NumSouthWest = 35,\n  NumNorthWest = 36,\n  NumWest = 37,\n  NumNorth = 38,\n  NumEast = 39,\n  NumSouth = 40,\n  PrintScreen = 44,\n  Insert = 45,\n  NumInsert = 45,\n  Delete = 46,\n  NumDelete = 46,\n  Zero = 48,\n  Ono = 49,\n  Two = 50,\n  Three = 51,\n  Four = 52,\n  Five = 53,\n  Six = 54,\n  Seven = 55,\n  Eight = 56,\n  Nine = 57,\n  FFSemicolon = 59,\n  FFEquals = 61,\n  /**\n   * US keyboard layouts only.\n   */\n  QuestionMark = 63,\n  A = 65,\n  B = 66,\n  C = 67,\n  D = 68,\n  E = 69,\n  F = 70,\n  G = 71,\n  H = 72,\n  I = 73,\n  J = 74,\n  K = 75,\n  L = 76,\n  M = 77,\n  N = 78,\n  O = 79,\n  P = 80,\n  Q = 81,\n  R = 82,\n  S = 83,\n  T = 84,\n  U = 85,\n  V = 86,\n  W = 87,\n  X = 88,\n  Y = 89,\n  Z = 90,\n  Meta = 91,\n  WinKeyLeft = 91,\n  WinKeyRight = 92,\n  ContextMenu = 93,\n  NumZero = 96,\n  NumOne = 97,\n  NumTwo = 98,\n  NumThree = 99,\n  NumFour = 100,\n  NumFive = 101,\n  NumSix = 102,\n  NumSeven = 103,\n  NumEight = 104,\n  NumNine = 105,\n  NumMultiply = 106,\n  NumPlus = 107,\n  NumMinus = 109,\n  NumPeriod = 110,\n  NumDivision = 111,\n  F1 = 112,\n  F2 = 113,\n  F3 = 114,\n  F4 = 115,\n  F5 = 116,\n  F6 = 117,\n  F7 = 118,\n  F8 = 119,\n  F9 = 120,\n  F10 = 121,\n  F11 = 122,\n  F12 = 123,\n  NumLock = 144,\n  ScrollLock = 145,\n  /**\n   * First OS specific media key.\n   */\n  FirstMediaKey = 166,\n  /**\n   * Last OS specific media key.\n   */\n  LastMediaKey = 183,\n  /**\n   * US keyboard layouts only.\n   */\n  Semicolon = 186,\n  /**\n   * US keyboard layouts only.\n   */\n  Dash = 189,\n  /**\n   * US keyboard layouts only.\n   */\n  Equals = 187,\n  /**\n   * US keyboard layouts only.\n   */\n  Comma = 188,\n  /**\n   * US keyboard layouts only.\n   */\n  Period = 190,\n  /**\n   * US keyboard layouts only.\n   */\n  Slash = 191,\n  /**\n   * US keyboard layouts only.\n   */\n  Apostrophe = 192,\n  /**\n   * US keyboard layouts only.\n   */\n  Tilde = 192,\n  /**\n   * US keyboard layouts only.\n   */\n  SingleQuote = 222,\n  /**\n   * US keyboard layouts only.\n   */\n  OpenSquareBracket = 219,\n  /**\n   * US keyboard layouts only.\n   */\n  Backslash = 220,\n  /**\n   * US keyboard layouts only.\n   */\n  CloseSquareBracket = 221,\n  Win = 224,\n  MacFFMeta = 224,\n  WinIME = 229,\n}\n\n/**\n * KeyboardEvent keyLocation values.\n */\nexport const enum KeyLocation {\n  Standard = 0,\n  Left = 1,\n  Right = 2,\n  NumPad = 3,\n  Mobile = 4,\n  Joystick = 5,\n}\n\n/**\n * Flags for MouseEvent buttons property.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons\n */\nexport const enum MouseButtons {\n  Left = 1,\n  Right = 1 << 1,\n  /**\n   * Wheel or middle button.\n   */\n  Middle = 1 << 2,\n  /**\n   * Typically the \"Browser Back\" button.\n   */\n  Fourh = 1 << 3,\n  /**\n   * Typically the \"Browser Forward\" button.\n   */\n  Fifth = 1 << 4,\n}\n\nexport type KeyName =\n  \"Accept\" |\n  \"Add\" |\n  \"Again\" |\n  \"AllCandidates\" |\n  \"Alphanumeric\" |\n  \"Alt\" |\n  \"AltGraph\" |\n  \"Apps\" |\n  \"Attn\" |\n  \"BrowserBack\" |\n  \"BrowserFavorites\" |\n  \"BrowserForward\" |\n  \"BrowserHome\" |\n  \"BrowserRefresh\" |\n  \"BrowserSearch\" |\n  \"BrowserStop\" |\n  \"Camera\" |\n  \"CapsLock\" |\n  \"Clear\" |\n  \"CodeInput\" |\n  \"Compose\" |\n  \"Control\" |\n  \"Crsel\" |\n  \"Convert\" |\n  \"Copy\" |\n  \"Cut\" |\n  \"Decimal\" |\n  \"Divide\" |\n  \"Down\" |\n  \"DownLeft\" |\n  \"DownRight\" |\n  \"Eject\" |\n  \"End\" |\n  \"Enter\" |\n  \"EraseEof\" |\n  \"Execute\" |\n  \"Exsel\" |\n  \"Fn\" |\n  \"F1\" |\n  \"F2\" |\n  \"F3\" |\n  \"F4\" |\n  \"F5\" |\n  \"F6\" |\n  \"F7\" |\n  \"F8\" |\n  \"F9\" |\n  \"F10\" |\n  \"F11\" |\n  \"F12\" |\n  \"F13\" |\n  \"F14\" |\n  \"F15\" |\n  \"F16\" |\n  \"F17\" |\n  \"F18\" |\n  \"F19\" |\n  \"F20\" |\n  \"F21\" |\n  \"F22\" |\n  \"F23\" |\n  \"F24\" |\n  \"FinalMode\" |\n  \"Find\" |\n  \"FullWidth\" |\n  \"HalfWidth\" |\n  \"HangulMode\" |\n  \"HanjaMode\" |\n  \"Help\" |\n  \"Hiragana\" |\n  \"Home\" |\n  \"Insert\" |\n  \"JapaneseHiragana\" |\n  \"JapaneseKatakana\" |\n  \"JapaneseRomaji\" |\n  \"JunjaMode\" |\n  \"KanaMode\" |\n  \"KanjiMode\" |\n  \"Katakana\" |\n  \"LaunchApplication1\" |\n  \"LaunchApplication2\" |\n  \"LaunchMail\" |\n  \"Left\" |\n  \"Menu\" |\n  \"Meta\" |\n  \"MediaNextTrack\" |\n  \"MediaPlayPause\" |\n  \"MediaPreviousTrack\" |\n  \"MediaStop\" |\n  \"ModeChange\" |\n  \"NextCandidate\" |\n  \"Nonconvert\" |\n  \"NumLock\" |\n  \"PageDown\" |\n  \"PageUp\" |\n  \"Paste\" |\n  \"Pause\" |\n  \"Play\" |\n  \"Power\" |\n  \"PreviousCandidate\" |\n  \"PrintScreen\" |\n  \"Process\" |\n  \"Props\" |\n  \"Right\" |\n  \"RomanCharacters\" |\n  \"Scroll\" |\n  \"Select\" |\n  \"SelectMedia\" |\n  \"Separator\" |\n  \"Shift\" |\n  \"Soft1\" |\n  \"Soft2\" |\n  \"Soft3\" |\n  \"Soft4\" |\n  \"Stop\" |\n  \"Subtract\" |\n  \"SymbolLock\" |\n  \"Up\" |\n  \"UpLeft\" |\n  \"UpRight\" |\n  \"Undo\" |\n  \"VolumeDown\" |\n  \"VolumeMute\" |\n  \"VolumeUp\" |\n  \"Win\" |\n  \"Zoom\" |\n  \"Backspace\" |\n  \"Tab\" |\n  \"Cancel\" |\n  \"Esc\" |\n  \"Spacebar\" |\n  \"Del\" |\n  \"DeadGrave\" |\n  \"DeadEacute\" |\n  \"DeadCircumflex\" |\n  \"DeadTilde\" |\n  \"DeadMacron\" |\n  \"DeadBreve\" |\n  \"DeadAboveDot\" |\n  \"DeadUmlaut\" |\n  \"DeadAboveRing\" |\n  \"DeadDoubleacute\" |\n  \"DeadCaron\" |\n  \"DeadCedilla\" |\n  \"DeadOgonek\" |\n  \"DeadIota\" |\n  \"DeadVoicedSound\" |\n  \"DeadSemivoicedSound\" |\n  \"Unidentified\";\n","import { EventHandlerFlags } from \"./flags\";\nimport { EventHandler } from \"./event_handler\";\n\n/**\n * syncEvents syncs event handlers and invokes EventSource callbacks when event handler is attached or detached.\n *\n * @param a Old event handlers.\n * @param b New event handlers.\n */\nexport function syncEvents(\n  a: Array<EventHandler | null> | EventHandler | null,\n  b: Array<EventHandler | null> | EventHandler | null,\n): void {\n  let i: number;\n  let h1: EventHandler | null;\n  let h2: EventHandler | null;\n\n  if (a === null) {\n    attachEvents(b!);\n  } else if (b === null) {\n    detachEvents(a);\n  } else {\n    if (a instanceof Array) {\n      if (b instanceof Array) {\n        i = 0;\n        while (i < a.length && i < b.length) {\n          h1 = a[i];\n          h2 = b[i++];\n          if (h1 !== h2) {\n            if (h2 !== null) {\n              registerEventHandler(h2);\n            }\n            if (h1 !== null) {\n              unregisterEventHandler(h1);\n            }\n          }\n        }\n        while (i < b.length) {\n          h1 = b[i++];\n          if (h1 !== null) {\n            registerEventHandler(h1);\n          }\n        }\n        while (i < a.length) {\n          h1 = a[i++];\n          if (h1 !== null) {\n            unregisterEventHandler(h1);\n          }\n        }\n      } else {\n        registerEventHandler(b as EventHandler);\n\n        for (i = 0; i < a.length; ++i) {\n          h1 = a[i];\n          if (h1 !== null) {\n            unregisterEventHandler(h1);\n          }\n        }\n      }\n    } else {\n      attachEvents(b);\n      unregisterEventHandler(a as EventHandler);\n    }\n  }\n}\n\n/**\n * attachEvents attaches event handlers and invokes EventSource callbacks.\n *\n * @param events Event handlers.\n */\nexport function attachEvents(events: Array<EventHandler | null> | EventHandler): void {\n  if (events instanceof Array) {\n    for (let i = 0; i < events.length; ++i) {\n      const h = events[i];\n      if (h !== null) {\n        registerEventHandler(h);\n      }\n    }\n  } else {\n    registerEventHandler(events as EventHandler);\n  }\n}\n\n/**\n * detachEvents detaches events handles and invokes EventSource callbacks.\n *\n * @param events Event handlers.\n */\nexport function detachEvents(events: Array<EventHandler | null> | EventHandler): void {\n  if (events instanceof Array) {\n    for (let i = 0; i < events.length; ++i) {\n      const h = events[i];\n      if (h !== null) {\n        unregisterEventHandler(h);\n      }\n    }\n  } else {\n    unregisterEventHandler(events as EventHandler);\n  }\n}\n\n/**\n * registerEventHandler is a shortcut for Event Handler registration.\n *\n * @param handler Event Handler.\n */\nfunction registerEventHandler(handler: EventHandler<any>): void {\n  if (DEBUG) {\n    handler.flags |= EventHandlerFlags.Active;\n  }\n  handler.src.add(handler);\n}\n\n/**\n * unregisterEventHandler is a shortcut for Event Handler unregistration.\n *\n * @param handler Event Handler.\n */\nfunction unregisterEventHandler(handler: EventHandler<any>): void {\n  if (DEBUG) {\n    handler.flags &= ~EventHandlerFlags.Active;\n  }\n  handler.src.remove(handler);\n}\n","import { CSSStyleProps, elementRemoveAttribute, elementSetAttribute, SyncableValue } from \"ivi-core\";\n\n/**\n * Sync DOM styles.\n *\n * @param node - HTML or SVG Element\n * @param a - Prev styles\n * @param b - Next styles\n */\nexport function syncStyle(\n  node: HTMLElement | SVGElement,\n  a: CSSStyleProps | undefined,\n  b: CSSStyleProps | undefined,\n): void {\n  const style = node.style;\n  let key: string;\n  let bValue;\n\n  if (a === void 0) {\n    // a is empty, insert all styles from b.\n    for (key in b!) {\n      bValue = (b as { [key: string]: string })[key];\n      if (bValue !== void 0) {\n        style.setProperty(key, bValue);\n      }\n    }\n  } else if (b !== void 0) {\n    for (key in b) {\n      bValue = (b as { [key: string]: string })[key];\n      if ((a as { [key: string]: string })[key] !== bValue) {\n        if (bValue !== void 0) {\n          style.setProperty(key, bValue);\n        } else {\n          style.removeProperty(key);\n        }\n      }\n    }\n  }\n}\n\n/**\n * Set DOM attribute.\n *\n * @param element - DOM Element\n * @param key - Attribute name\n * @param prev - Previous value\n * @param next - Next value\n */\nfunction syncDOMAttr(\n  element: Element,\n  key: string,\n  prev: string | number | boolean | SyncableValue<any> | undefined,\n  next: string | number | boolean | SyncableValue<any> | undefined,\n): void {\n  if (typeof next === \"object\") {\n    next.s(\n      element,\n      key,\n      prev === void 0 ? void 0 : (prev as SyncableValue<any>).v,\n      next.v,\n    );\n  } else if (prev !== next) {\n    if (typeof next === \"boolean\") {\n      next = next ? \"\" : void 0;\n    }\n    if (next === void 0) {\n      elementRemoveAttribute.call(element, key);\n    } else {\n      elementSetAttribute.call(element, key, next);\n    }\n  }\n}\n\n/**\n * Sync DOM attributes.\n *\n * @param element - DOM element\n * @param a - Prev DOM properties\n * @param b - Next DOM properties\n */\nexport function syncDOMAttrs(\n  element: Element,\n  a: { [key: string]: string | number | boolean | SyncableValue<any> | undefined } | undefined,\n  b: { [key: string]: string | number | boolean | SyncableValue<any> | undefined } | undefined,\n): void {\n  let key: string;\n\n  if (a === void 0) {\n    // a is empty, insert all attributes from b.\n    for (key in b!) {\n      syncDOMAttr(element, key, void 0, b![key]);\n    }\n  } else if (b !== void 0) {\n    for (key in b) {\n      syncDOMAttr(element, key, a[key], b[key]);\n    }\n  }\n}\n","/**\n * DO NOT MOVE THIS FUNCTIONS TO SEPARATE MODULES!\n *\n * There are so many circular dependencies between functions in this module, so just leave it all here instead of\n * creating many circular dependencies between JS modules.\n */\n\nimport {\n  SVG_NAMESPACE, nodeRemoveChild, nodeInsertBefore, elementSetAttribute, nodeCloneNode, nodeReplaceChild,\n} from \"ivi-core\";\nimport { autofocus } from \"ivi-scheduler\";\nimport { syncEvents, attachEvents, detachEvents } from \"../events/sync_events\";\nimport { VNodeFlags, ComponentFlags } from \"./flags\";\nimport { VNode, getDOMNode } from \"./vnode\";\nimport { ConnectDescriptor } from \"./connect_descriptor\";\nimport { StatefulComponent, StatelessComponent, Component } from \"./component\";\nimport { syncDOMAttrs, syncStyle } from \"./sync_dom\";\n\n/**\n * Removes VNode.\n *\n * @param parent - Parent DOM node\n * @param vnode - Virtual DOM node to remove\n */\nexport function removeVNode(parent: Node, vnode: VNode): void {\n  /* istanbul ignore else */\n  if (DEBUG) {\n    parent.removeChild(getDOMNode(vnode)!);\n  } else {\n    nodeRemoveChild.call(parent, getDOMNode(vnode)!);\n  }\n  _detach(vnode);\n}\n\n/**\n * Recursively attach all nodes.\n *\n * @param vnode - Virtual DOM node\n */\nfunction _attach(vnode: VNode): void {\n  const flags = vnode._f;\n  if ((flags & VNodeFlags.StatefulComponent) !== 0) {\n    (vnode._i as Component<any>).attached();\n  }\n\n  let child = vnode._c;\n  while (child !== null) {\n    _attach(child);\n    child = child._r;\n  }\n\n  if ((flags & VNodeFlags.Events) !== 0) {\n    attachEvents(vnode._e!);\n  }\n}\n\n/**\n * Recursively detach all nodes.\n *\n * @param vnode - Virtual DOM node\n */\nfunction _detach(vnode: VNode): void {\n  let child = vnode._c;\n  while (child !== null) {\n    _detach(child);\n    child = child._r;\n  }\n\n  const flags = vnode._f;\n  if ((flags & VNodeFlags.StatefulComponent) !== 0) {\n    const component = vnode._i as Component<any>;\n    component.flags |= ComponentFlags.Detached;\n    component.detached();\n  }\n\n  if ((flags & VNodeFlags.Events) !== 0) {\n    detachEvents(vnode._e!);\n  }\n}\n\n/**\n * Recursively perform dirty checking.\n *\n * @param parent - Parent DOM Node\n * @param vnode - VNode\n * @param context - Current context\n * @param dirtyContext - Context is dirty\n */\nexport function dirtyCheck(parent: Node, vnode: VNode, context: {}, dirtyContext: boolean): void {\n  const flags = vnode._f;\n  let child: VNode | null | undefined;\n  let instance: Node | Component<any> | {} | undefined;\n\n  if ((flags & (\n    VNodeFlags.StopDirtyChecking | // StopDirtyChecking will convert this value to -value\n    VNodeFlags.Element |\n    VNodeFlags.StatelessComponent |\n    VNodeFlags.StatefulComponent |\n    VNodeFlags.Connect |\n    VNodeFlags.UpdateContext\n  )) > 0) {\n    child = vnode._c;\n    if ((flags & VNodeFlags.Element) !== 0) {\n      instance = vnode._i as Node;\n      while (child !== null) {\n        dirtyCheck(instance as Node, child, context, dirtyContext);\n        child = child._r;\n      }\n    } else if ((flags & VNodeFlags.StatefulComponent) !== 0) {\n      instance = vnode._i as Component<any>;\n      if (((instance as Component<any>).flags & ComponentFlags.Dirty) !== 0) {\n        syncVNode(\n          parent,\n          child!,\n          vnode._c = DEBUG ?\n            shouldBeSingleVNode((instance as Component<any>).render()) :\n            /* istanbul ignore next */(instance as Component<any>).render(),\n          context,\n          dirtyContext,\n        );\n        (instance as Component<any>).flags &= ~ComponentFlags.Dirty;\n        (instance as Component<any>).updated();\n      } else {\n        dirtyCheck(parent, child!, context, dirtyContext);\n      }\n    } else { // (flags & (VNodeFlags.StatelessComponent | VNodeFlags.Connect | VNodeFlags.UpdateContext))\n      if ((flags & VNodeFlags.Connect) !== 0) {\n        const connect = vnode._t as ConnectDescriptor<any, any, {}>;\n        instance = vnode._i as {};\n        const selectData = connect.select(instance, vnode._p, context);\n        if (instance === selectData) {\n          dirtyCheck(parent, child!, context, dirtyContext);\n        } else {\n          vnode._i = selectData;\n          syncVNode(\n            parent,\n            child!,\n            vnode._c = DEBUG ?\n              shouldBeSingleVNode(connect.render(selectData)) :\n              /* istanbul ignore next */connect.render(selectData),\n            context,\n            dirtyContext,\n          );\n        }\n      } else {\n        if ((flags & VNodeFlags.UpdateContext) !== 0) {\n          if (dirtyContext === true) {\n            vnode._i = { ...context, ...vnode._p };\n          }\n          context = vnode._i as {};\n        }\n        dirtyCheck(parent, child!, context, dirtyContext);\n      }\n    }\n  }\n}\n\n/**\n * Remove all children.\n *\n * `detach()` lifecycle methods will be invoked for all children and their subtrees.\n *\n * @param parent - Parent DOM element\n * @param firstVNode - First Virtual DOM node\n */\nfunction _removeAllChildren(parent: Node, firstVNode: VNode): void {\n  parent.textContent = \"\";\n  let vnode: VNode | null = firstVNode;\n  do {\n    _detach(vnode);\n    vnode = vnode._r;\n  } while (vnode !== null);\n}\n\n/**\n * Render virtual DOM node.\n *\n * @param parent - Parent DOM element\n * @param vnode - Virtual DOM node to render\n * @param context - Current context\n * @returns Rendered DOM Node\n */\nfunction _render(parent: Node, vnode: VNode, context: {}): Node {\n  /* istanbul ignore else */\n  if (DEBUG) {\n    if (vnode._i !== null) {\n      throw new Error(\"VNode is already have a reference to an instance. VNodes can't be used mutliple times, \" +\n        \"clone VNode with `cloneVNode`.\");\n    }\n  }\n\n  const flags = vnode._f;\n  const props = vnode._p;\n  let instance: Node | Component<any> | null = null;\n  let node: Node;\n\n  if ((flags & VNodeFlags.Text) !== 0) {\n    instance = node = document.createTextNode(props as string);\n  } else {\n    const tag = vnode._t;\n    if ((flags & (VNodeFlags.Element | VNodeFlags.StatefulComponent)) !== 0) {\n      if ((flags & VNodeFlags.Element) !== 0) {\n        const svg = (flags & VNodeFlags.SvgElement) !== 0;\n        if ((flags & VNodeFlags.ElementFactory) === 0) {\n          node = svg ?\n            document.createElementNS(SVG_NAMESPACE, tag as string) :\n            document.createElement(tag as string);\n        } else {\n          if ((tag as VNode)._i === null) {\n            _render(parent, (tag as VNode), context);\n          }\n          /* istanbul ignore else */\n          if (DEBUG) {\n            node = ((tag as VNode)._i as Node).cloneNode(false);\n          } else {\n            node = nodeCloneNode.call((tag as VNode)._i as Node, false);\n          }\n        }\n        instance = node;\n\n        const className = vnode._cs;\n        if (className !== \"\") {\n          /**\n           * SVGElement.className returns `SVGAnimatedString`\n           */\n          if (svg === true) {\n            /* istanbul ignore else */\n            if (DEBUG) {\n              (node as Element).setAttribute(\"class\", className);\n            } else {\n              elementSetAttribute.call(node as Element, \"class\", className);\n            }\n          } else {\n            (node as Element).className = className;\n          }\n        }\n\n        if (props !== void 0) {\n          syncDOMAttrs(node as Element, void 0, props);\n        }\n        if (vnode._s !== void 0) {\n          syncStyle(node as HTMLElement, void 0, vnode._s);\n        }\n\n        let child = vnode._c;\n        while (child !== null) {\n          /* istanbul ignore else */\n          if (DEBUG) {\n            node.insertBefore(_render(node, child, context), null);\n          } else {\n            nodeInsertBefore.call(node, _render(node, child, context), null);\n          }\n          child = child._r;\n        }\n      } else { // ((flags & VNodeFlags.StatefulComponent) !== 0)\n        const component = instance = new (tag as StatefulComponent<any>)(props);\n        const root = vnode._c = DEBUG ?\n          shouldBeSingleVNode(component.render()) :\n          /* istanbul ignore next */component.render();\n        node = _render(parent, root, context);\n      }\n    } else { // ((flags & (VNodeFlags.StatelessComponent | VNodeFlags.UpdateContext | VNodeFlags.Connect)) !== 0)\n      if ((flags & (VNodeFlags.UpdateContext | VNodeFlags.Connect)) !== 0) {\n        if ((flags & VNodeFlags.Connect) !== 0) {\n          const connect = (tag as ConnectDescriptor<any, any, {}>);\n          const selectData = instance = connect.select(null, props, context);\n          vnode._c = DEBUG ?\n            shouldBeSingleVNode(connect.render(selectData)) :\n            /* istanbul ignore next */connect.render(selectData);\n        } else {\n          context = instance = { ...context, ...props };\n        }\n      } else {\n        vnode._c = DEBUG ?\n          shouldBeSingleVNode((tag as StatelessComponent<any>).render(props)) :\n          /* istanbul ignore next */(tag as StatelessComponent<any>).render(props);\n      }\n      node = _render(parent, vnode._c!, context);\n    }\n\n    if ((flags & VNodeFlags.Autofocus) !== 0) {\n      autofocus(node as Element);\n    }\n  }\n\n  vnode._i = instance;\n  return node;\n}\n\n/**\n * Render virtual DOM node into container and invoke `attached()` lifecycle methods after node is inserted into\n * container.\n *\n * It is important that `attached()` methods are invoked only after DOM nodes have been inserted into container, so it\n * goes twice through the entire vnode tree, first time when everything is rendered and the second time when\n * `attached()` methods are invoked.\n *\n * @param parent - Parent DOM element\n * @param refChild - Reference to the next DOM node, when it is `null` child will be inserted at the end\n * @param vnode - Virtual DOM node\n * @param context - Current context\n * @returns Rendered DOM Node\n */\nexport function renderVNode(\n  parent: Node,\n  refChild: Node | null,\n  vnode: VNode,\n  context: {},\n): Node {\n  const node = _render(parent, vnode, context);\n  /* istanbul ignore else */\n  if (DEBUG) {\n    parent.insertBefore(node, refChild);\n  } else {\n    nodeInsertBefore.call(parent, node, refChild);\n  }\n  _attach(vnode);\n  return node;\n}\n\n/**\n * Sync virtual DOM nodes.\n *\n * When node `a` is synced with node `b`, `a` node should be considered as destroyed, and any access to it after sync\n * is an undefined behavior.\n *\n * @param parent - Parent DOM element\n * @param a - Previous virtual DOM node\n * @param b - Next virtual DOM node\n * @param context - Current context\n * @param dirtyContext - Context is dirty\n */\nexport function syncVNode(\n  parent: Node,\n  a: VNode,\n  b: VNode,\n  context: {},\n  dirtyContext: boolean,\n): void {\n  if (a === b) {\n    dirtyCheck(parent, b, context, dirtyContext);\n    return;\n  }\n\n  /* istanbul ignore else */\n  if (DEBUG) {\n    if (b._i !== null) {\n      throw new Error(\"VNode is already have a reference to an instance. VNodes can't be used mutliple times\");\n    }\n  }\n\n  let instance;\n  const aFlags = a._f;\n  const bFlags = b._f;\n  if (\n    (((aFlags ^ bFlags) & VNodeFlags.Syncable) === 0) &&\n    (\n      (aFlags & (\n        VNodeFlags.ElementFactory |\n        VNodeFlags.StatelessComponent |\n        VNodeFlags.StatefulComponent |\n        VNodeFlags.Connect\n      )) === 0 ||\n      a._t === b._t\n    ) &&\n    a._k === b._k\n  ) {\n    const aProps = a._p;\n    const bProps = b._p;\n    b._i = instance = a._i;\n\n    if ((bFlags & VNodeFlags.Text) !== 0) {\n      if (aProps !== bProps) {\n        (instance as Text).data = bProps as string;\n      }\n    } else {\n      const aChild = a._c;\n      let bChild = b._c;\n\n      if (a._e !== b._e) {\n        syncEvents(a._e, b._e);\n      }\n\n      if ((bFlags & (VNodeFlags.Element | VNodeFlags.StatefulComponent)) !== 0) {\n        if ((bFlags & VNodeFlags.Element) !== 0) {\n          const className = b._cs;\n          if (a._cs !== className) {\n            if ((bFlags & VNodeFlags.SvgElement) !== 0) {\n              /* istanbul ignore else */\n              if (DEBUG) {\n                (instance as Element).setAttribute(\"class\", className);\n              } else {\n                elementSetAttribute.call(instance, \"class\", className);\n              }\n            } else {\n              (instance as Element).className = className;\n            }\n          }\n\n          if (aProps !== bProps) {\n            syncDOMAttrs(instance as Element, aProps, bProps);\n          }\n          if (a._s !== b._s) {\n            syncStyle(instance as HTMLElement, a._s, b._s);\n          }\n\n          if (aChild !== bChild) {\n            if (aChild === null) {\n              do {\n                renderVNode(instance as Element, null, bChild!, context);\n                bChild = bChild!._r;\n              } while (bChild !== null);\n            } else if (bChild === null) {\n              _removeAllChildren(instance as Element, aChild as VNode);\n            } else {\n              _syncChildrenTrackByKeys(instance as Element, aChild as VNode, bChild as VNode, context, dirtyContext);\n            }\n          }\n        } else { // VNodeFlags.StatefulComponent\n          if (aProps !== bProps) {\n            (instance as Component<any>).propsChanged(aProps, bProps);\n          }\n          // Reassign props even when they aren't changed to reduce overall memory usage.\n          //\n          // New value always stays alive because it is referenced from virtual dom tree, so instead of keeping\n          // in memory two values even when they are the same, we just always reassign it to the new value.\n          (instance as Component<any>).props = bProps;\n\n          if (\n            (((instance as Component<any>).flags & ComponentFlags.Dirty) !== 0) ||\n            ((instance as Component<any>).shouldUpdate(aProps, bProps) === true)\n          ) {\n            syncVNode(\n              parent,\n              aChild as VNode,\n              b._c = DEBUG ?\n                shouldBeSingleVNode((instance as Component<any>).render()) :\n                /* istanbul ignore next */(instance as Component<any>).render(),\n              context,\n              dirtyContext,\n            );\n            (instance as Component<any>).flags &= ~ComponentFlags.Dirty;\n            (instance as Component<any>).updated();\n          } else {\n            dirtyCheck(parent, b._c = aChild!, context, dirtyContext);\n          }\n        }\n      } else { // (VNodeFlags.StatelessComponent | VNodeFlags.UpdateContext | VNodeFlags.Connect)\n        if ((bFlags & (VNodeFlags.UpdateContext | VNodeFlags.Connect)) !== 0) {\n          if ((bFlags & VNodeFlags.Connect) !== 0) {\n            const connect = b._t as ConnectDescriptor<any, any, {}>;\n            const prevSelectData = instance;\n            const selectData = b._i = connect.select(prevSelectData, bProps, context);\n            if (prevSelectData === selectData) {\n              dirtyCheck(parent, b._c = aChild!, context, dirtyContext);\n            } else {\n              syncVNode(\n                parent,\n                aChild!,\n                b._c = DEBUG ?\n                  shouldBeSingleVNode(connect.render(selectData)) :\n                    /* istanbul ignore next */connect.render(selectData),\n                context,\n                dirtyContext,\n              );\n            }\n          } else {\n            if (aProps !== bProps) {\n              dirtyContext = true;\n            }\n            b._i = context = (dirtyContext === true) ?\n              { ...context, ...bProps } :\n              instance as {};\n            syncVNode(parent, aChild!, bChild!, context, dirtyContext);\n          }\n        } else { // VNodeFlags.StatelessComponent\n          const sc = b._t as StatelessComponent<any>;\n          if (\n            (aProps !== bProps) &&\n            ((bFlags & VNodeFlags.ShouldUpdateHint) === 0 || sc.shouldUpdate!(aProps, bProps) === true)\n          ) {\n            syncVNode(\n              parent,\n              aChild!,\n              b._c = DEBUG ?\n                shouldBeSingleVNode(sc.render(bProps)) :\n                  /* istanbul ignore next */sc.render(bProps),\n              context,\n              dirtyContext,\n            );\n          } else {\n            dirtyCheck(parent, b._c = aChild!, context, dirtyContext);\n          }\n        }\n      }\n    }\n  } else {\n    instance = _render(parent, b, context);\n    /* istanbul ignore else */\n    if (DEBUG) {\n      parent.replaceChild(instance, getDOMNode(a)!);\n    } else {\n      nodeReplaceChild.call(parent, instance, getDOMNode(a)!);\n    }\n    _detach(a);\n    _attach(b);\n  }\n}\n\n/**\n * Sync children.\n *\n * High-level overview of the algorithm that is implemented in this function (this overview doesn't include some details\n * how it handles nodes with implicit keys and many small tricks to reduce memory allocations and unnecessary work).\n *\n * This algorithm finds a minimum[1] number of DOM operations. It works in several steps:\n *\n * 1. Find common suffix and prefix.\n *\n * This optimization technique is searching for nodes with identical keys by simultaneously iterating over nodes in the\n * old children list `A` and new children list `B` from both sides:\n *\n *  A: -> [a b c d] <-\n *  B: -> [a b d] <-\n *\n * Here we can skip nodes \"a\" and \"b\" at the begininng, and node \"d\" at the end.\n *\n *  A: -> [c] <-\n *  B: -> [] <-\n *\n * Here it will check if the size of one of the list is equal to zero. When length of the old children list is zero,\n * it will insert all remaining nodes from the new list, and when length of the new children list is zero, it will\n * remove all remaining nodes from the old list.\n *\n * When algorithm can't find a solution with this simple optimization technique, it will go to the next step of the\n * algorithm. For example:\n *\n *  A: -> [a b c d e f g] <-\n *  B: -> [a c b h f e g] <-\n *\n * Nodes \"a\" and \"g\" at the edges are the same, skipping them.\n *\n *  A: -> [b c d e f] <-\n *  B: -> [c b h f e] <-\n *\n * Here we are stuck, so we need to switch to the next step.\n *\n * 2. Look for removed and inserted nodes, and simultaneously check if one of the nodes is moved.\n *\n * First we create an array `P` with the length of the new children list and assign to each position value `-1`, it has\n * a meaning of a new node that should be inserted. Later we will assign node positions in the old children list to this\n * array.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *  P: [. . . . .] // . == -1\n *\n * Then we need to build an index `I` that maps keys with node positions of the remaining nodes from the new children\n * list.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *  P: [. . . . .] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1,\n *    h: 2,\n *    f: 3,\n *    e: 4,\n *  }\n *  last = 0\n *\n * With this index, we start to iterate over the remaining nodes from the old children list and check if we can find a\n * node with the same key in the index. If we can't find any node, it means that it should be removed, otherwise we\n * assign position of the node in the old children list to the positions array.\n *\n *  A: [b c d e f]\n *      ^\n *  B: [c b h f e]\n *  P: [. 0 . . .] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1, <-\n *    h: 2,\n *    f: 3,\n *    e: 4,\n *  }\n *  last = 1\n *\n * When we assigning positions to the positions array, we also keep a position of the last seen node in the new children\n * list, if the last seen position is larger than current position of the node at the new list, then we are switching\n * `moved` flag to `true`.\n *\n *  A: [b c d e f]\n *        ^\n *  B: [c b h f e]\n *  P: [1 0 . . .] // . == -1\n *  I: {\n *    c: 0, <-\n *    b: 1,\n *    h: 2,\n *    f: 3,\n *    e: 4,\n *  }\n *  last = 1 // last > 0; moved = true\n *\n * The last position `1` is larger than current position of the node at the new list `0`, switching `moved` flag to\n * `true`.\n *\n *  A: [b c d e f]\n *          ^\n *  B: [c b h f e]\n *  P: [1 0 . . .] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1,\n *    h: 2,\n *    f: 3,\n *    e: 4,\n *  }\n *  moved = true\n *\n * Node with key \"d\" doesn't exist in the index, removing node.\n *\n *  A: [b c d e f]\n *            ^\n *  B: [c b h f e]\n *  P: [1 0 . . 3] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1,\n *    h: 2,\n *    f: 3,\n *    e: 4, <-\n *  }\n *  moved = true\n *\n * Assign position for `e`.\n *\n *  A: [b c d e f]\n *              ^\n *  B: [c b h f e]\n *  P: [1 0 . 4 3] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1,\n *    h: 2,\n *    f: 3, <-\n *    e: 4,\n *  }\n *  moved = true\n *\n * Assign position for 'f'.\n *\n * At this point we are checking if `moved` flag is on, or if the length of the old children list minus the number of\n * removed nodes isn't equal to the length of the new children list. If any of this conditions is true, then we are\n * going to the next step.\n *\n * 3. Find minimum number of moves if `moved` flag is on, or insert new nodes if the length is changed.\n *\n * When `moved` flag is on, we need to find the\n * [longest increasing subsequence](http://en.wikipedia.org/wiki/Longest_increasing_subsequence) in the positions array,\n * and move all nodes that doesn't belong to this subsequence.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *  moved = true\n *\n * Now we just need to simultaneously iterate over the new children list and LIS from the end and check if the current\n * position is equal to a value from LIS.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *              ^  // new_pos == 4\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *              ^  // new_pos == 4\n *  moved = true\n *\n * Node \"e\" stays at the same place.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *            ^    // new_pos == 3\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *            ^    // new_pos != 1\n *  moved = true\n *\n * Node \"f\" is moved, move it before the next node \"e\".\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *          ^      // new_pos == 2\n *  P: [1 0 . 4 3] // . == -1\n *          ^      // old_pos == -1\n *  LIS:     [1 4]\n *            ^\n *  moved = true\n *\n * Node \"h\" has a `-1` value in the positions array, insert new node \"h\".\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *        ^        // new_pos == 1\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *            ^    // new_pos == 1\n *  moved = true\n *\n * Node \"b\" stays at the same place.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *      ^          // new_pos == 0\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *          ^      // new_pos != undefined\n *  moved = true\n *\n * Node \"c\" is moved, move it before the next node \"b\".\n *\n * When moved flag is off, we don't need to find LIS, and we just iterate over the new children list and check its\n * current position in the positions array, if it is `-1`, then we insert new node.\n *\n * [1] Actually it is almost minimum number of dom ops, when node is removed and another one is inserted at the same\n * place, instead of insert and remove dom ops, we can use one replace op. It will make everything even more\n * complicated, and other use cases will be slower, so I don't think that it is worth to use replace here.\n *\n * @param parent - Parent DOM element\n * @param aStartVNode - Previous virtual DOM node\n * @param bStartVNode - Next virtual DOM node\n * @param context - Current context\n * @param dirtyContext - Context is dirty\n */\nfunction _syncChildrenTrackByKeys(\n  parent: Node,\n  aStartVNode: VNode,\n  bStartVNode: VNode,\n  context: {},\n  dirtyContext: boolean,\n): void;\nfunction _syncChildrenTrackByKeys(\n  parent: Node,\n  aStartVNode: VNode | null, // should not be null, it is a workaroud to slightly reduce code size\n  bStartVNode: VNode | null, // should not be null, it is a workaroud to slightly reduce code size\n  context: {},\n  dirtyContext: boolean,\n): void {\n  let aEndVNode = aStartVNode!._l!;\n  let bEndVNode = bStartVNode!._l!;\n  let i: number | undefined = 0;\n  let step1Synced = 0;\n\n  // Step 1\n  outer: while (1) {\n    // Sync nodes with the same key at the beginning.\n    while (\n      (aStartVNode!._k === bStartVNode!._k) &&\n      (((aStartVNode!._f ^ bStartVNode!._f) & VNodeFlags.Key) === 0)\n    ) {\n      syncVNode(parent, aStartVNode!, bStartVNode!, context, dirtyContext);\n      step1Synced++;\n      if (aStartVNode === aEndVNode) {\n        i = 1;\n      } else {\n        aStartVNode = aStartVNode!._r;\n      }\n      if (bStartVNode === bEndVNode) {\n        i |= 2;\n      } else {\n        bStartVNode = bStartVNode!._r;\n      }\n      if (i) {\n        break outer;\n      }\n    }\n\n    // Sync nodes with the same key at the end.\n    while (\n      (aEndVNode!._k === bEndVNode!._k) &&\n      (((aEndVNode!._f ^ bEndVNode!._f) & VNodeFlags.Key) === 0)\n    ) {\n      syncVNode(parent, aEndVNode, bEndVNode, context, dirtyContext);\n      step1Synced++;\n      if (aStartVNode === aEndVNode) {\n        i = 1;\n      } else {\n        aEndVNode = aEndVNode._l;\n      }\n      if (bStartVNode === bEndVNode) {\n        i |= 2;\n      } else {\n        bEndVNode = bEndVNode._l;\n      }\n      if (i) {\n        break outer;\n      }\n    }\n\n    break;\n  }\n\n  if (i) {\n    if (i < 3) {\n      if (i < 2) {\n        // All nodes from a are synced, insert the rest from b.\n        const next = nextNode(bEndVNode);\n        while (1) {\n          renderVNode(parent, next, bStartVNode!, context);\n          if (bStartVNode === bEndVNode) {\n            break;\n          }\n          bStartVNode = bStartVNode!._r;\n        }\n      } else {\n        // All nodes from b are synced, remove the rest from a.\n        while (1) {\n          removeVNode(parent, aStartVNode!);\n          if (aStartVNode === aEndVNode) {\n            break;\n          }\n          aStartVNode = aStartVNode!._r;\n        }\n      }\n    }\n  } else { // Step 2\n    // Inner length after prefix/suffix optimization.\n    let aInnerLength = 0;\n    let bInnerLength = 0;\n\n    // When lastPosition === 1000000000, it means that one of the nodes in the wrong position.\n    let lastPosition = 0;\n\n    const bInnerArray: VNode[] = [];\n    // Reverse indexes for keys.\n    let explicitKeyIndex: Map<any, number> | undefined;\n    let implicitKeyIndex: Map<number, number> | undefined;\n    let key;\n\n    // Temporary vnode\n    let vnode = bStartVNode;\n    while (1) {\n      key = vnode!._k;\n      if (vnode!._f & VNodeFlags.Key) {\n        if (explicitKeyIndex === void 0) {\n          explicitKeyIndex = new Map<any, number>();\n        }\n        explicitKeyIndex.set(key, bInnerLength);\n      } else {\n        if (implicitKeyIndex === void 0) {\n          implicitKeyIndex = new Map<number, number>();\n        }\n        implicitKeyIndex.set(key, bInnerLength);\n      }\n      bInnerArray[bInnerLength++] = vnode!;\n      if (vnode === bEndVNode) {\n        break;\n      }\n      vnode = vnode!._r;\n    }\n\n    // Mark all nodes as inserted (-1).\n    const prevPositionsForB = new Array<number>(bInnerLength).fill(-1);\n\n    let step2Synced = 0;\n    vnode = aStartVNode;\n    while (1) {\n      key = vnode!._k;\n      if (vnode!._f & VNodeFlags.Key) {\n        i = explicitKeyIndex ? explicitKeyIndex.get(key) : void 0;\n      } else {\n        i = implicitKeyIndex ? implicitKeyIndex.get(key) : void 0;\n      }\n\n      if (i === void 0) {\n        vnode!._k = null;\n      } else {\n        lastPosition = (lastPosition > i) ? 1000000000 : i;\n        prevPositionsForB[i] = aInnerLength;\n        syncVNode(parent, vnode!, bInnerArray[i], context, dirtyContext);\n        step2Synced++;\n      }\n      aInnerLength++;\n      if (vnode === aEndVNode) {\n        break;\n      }\n      vnode = vnode!._r;\n    }\n\n    if (!step1Synced && !step2Synced) {\n      // Noone is synced, remove all children with one dom op.\n      _removeAllChildren(parent, aStartVNode!);\n      do {\n        renderVNode(parent, null, bStartVNode!, context);\n        bStartVNode = bStartVNode!._r;\n      } while (bStartVNode !== null);\n    } else {\n      i = aInnerLength - step2Synced;\n      while (i > 0) {\n        if (aStartVNode!._k === null) {\n          removeVNode(parent, aStartVNode!);\n          i--;\n        }\n        aStartVNode = aStartVNode!._r;\n      }\n\n      // Step 3\n      if (lastPosition === 1000000000) {\n        const seq = lis(prevPositionsForB);\n        i = seq.length - 1;\n        while (bInnerLength > 0) {\n          if (prevPositionsForB[--bInnerLength] < 0) {\n            renderVNode(parent, nextNode(bEndVNode), bEndVNode, context);\n          } else {\n            if (i < 0 || bInnerLength !== seq[i]) {\n              /* istanbul ignore else */\n              if (DEBUG) {\n                parent.insertBefore(getDOMNode(bEndVNode)!, nextNode(bEndVNode));\n              } else {\n                nodeInsertBefore.call(parent, getDOMNode(bEndVNode)!, nextNode(bEndVNode));\n              }\n            } else {\n              i--;\n            }\n          }\n          bEndVNode = bEndVNode._l;\n        }\n      } else if (step2Synced !== bInnerLength) {\n        while (bInnerLength > 0) {\n          if (prevPositionsForB[--bInnerLength] < 0) {\n            renderVNode(parent, nextNode(bEndVNode), bEndVNode, context);\n          }\n          bEndVNode = bEndVNode._l;\n        }\n      }\n    }\n  }\n}\n\n/**\n * Retrieves a next DOM node from a virtual DOM node.\n *\n * @param vnode - Virtual DOM node\n * @returns Next DOM node\n */\nfunction nextNode(vnode: VNode): Node | null {\n  const next = vnode._r;\n  return next === null ? null : getDOMNode(next);\n}\n\n/**\n * Slightly modified Longest Increased Subsequence algorithm, it ignores items that have -1 value, they're representing\n * new items.\n *\n * {@link http://en.wikipedia.org/wiki/Longest_increasing_subsequence}\n *\n * @param a - Array of numbers\n * @returns Longest increasing subsequence\n * @noinline\n */\nfunction lis(a: number[]): number[] {\n  const p = a.slice();\n  const result: number[] = [];\n  result[0] = 0;\n  let n = 0;\n  let u: number;\n  let v: number;\n  let j: number;\n\n  for (let i = 0; i < a.length; ++i) {\n    const k = a[i];\n    if (k === -1) {\n      continue;\n    }\n\n    j = result[n];\n    if (a[j] < k) {\n      p[i] = j;\n      result[++n] = i;\n      continue;\n    }\n\n    u = 0;\n    v = n;\n\n    while (u < v) {\n      j = ((u + v) / 2) | 0;\n      if (a[result[j]] < k) {\n        u = j + 1;\n      } else {\n        v = j;\n      }\n    }\n\n    if (k < a[result[u]]) {\n      if (u > 0) {\n        p[i] = result[u - 1];\n      }\n      result[u] = i;\n    }\n  }\n\n  v = result[n];\n\n  while (n >= 0) {\n    result[n--] = v;\n    v = p[v];\n  }\n\n  return result;\n}\n\n/**\n * Check virtual DOM node returned from a `render()` function in `DEBUG` mode.\n *\n * @param vnode - Virtual DOM node\n * @return `vnode`\n */\nfunction shouldBeSingleVNode<T extends VNode>(vnode: T): T {\n  if (vnode._l !== vnode) {\n    throw new Error(\"Invalid render function. Render function should return singular VNode.\");\n  }\n  return vnode;\n}\n","import { IOS_GESTURE_EVENT, NOOP, unorderedArrayDelete } from \"ivi-core\";\nimport { setUpdateDOMHandler, nextFrameWrite, triggerNextFrame } from \"ivi-scheduler\";\nimport { VNode } from \"./vnode\";\nimport { renderVNode, syncVNode, removeVNode, dirtyCheck } from \"./implementation\";\nimport { checkNestingViolations } from \"../dev_mode/html_nesting_rules\";\n\n/**\n * Root.\n */\nexport interface Root {\n  /**\n   * Container element.\n   */\n  container: Element;\n  /**\n   * Next virtual DOM node.\n   */\n  next: VNode | null | undefined;\n  /**\n   * Current virtual DOM node.\n   */\n  current: VNode | null;\n}\n\n/**\n * Root nodes.\n */\nexport const ROOTS = [] as Root[];\n\n/**\n * Empty Context object.\n */\nconst EMPTY_CONTEXT = {};\n\nlet _pendingUpdate = 0;\n\n/**\n * Find Root node in container.\n *\n * @param container - DOM Node that contains root node\n * @returns root node or undefined when root node doesn't exist\n */\nexport function findRoot(container: Element): Root | void {\n  for (const root of ROOTS) {\n    if (root.container === container) {\n      return root;\n    }\n  }\n}\n\n/**\n * Update root nodes.\n */\nfunction _update() {\n  if (_pendingUpdate) {\n    _pendingUpdate = 0;\n    setUpdateDOMHandler(update);\n    for (let i = 0; i < ROOTS.length; ++i) {\n      const root = ROOTS[i];\n      const container = root.container;\n      const prev = root.current;\n      const next = root.next;\n      root.next = void 0;\n\n      if (next) {\n        if (prev) {\n          syncVNode(container, prev, next, EMPTY_CONTEXT, false);\n        } else {\n          renderVNode(container, null, next, EMPTY_CONTEXT);\n          /* istanbul ignore if */\n          /**\n           * Fix for the Mouse Event bubbling on iOS devices.\n           *\n           * #quirks\n           *\n           * http://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\n           */\n          if (TARGET === \"browser\" && IOS_GESTURE_EVENT) {\n            (container as HTMLElement).onclick = NOOP;\n          }\n        }\n        root.current = next;\n      } else if (prev) {\n        if (next === null) {\n          removeVNode(container, prev);\n          unorderedArrayDelete(ROOTS, ROOTS.indexOf(root));\n          --i;\n        } else {\n          dirtyCheck(container, prev, EMPTY_CONTEXT, false);\n        }\n      }\n\n      /* istanbul ignore else */\n      if (DEBUG) {\n        if (root.current) {\n          checkNestingViolations(container, root.current);\n        }\n      }\n    }\n  }\n}\n\n/**\n * Render virtual DOM node into container.\n *\n * @param vnode - Virtual DOM node to render\n * @param container - DOM Node that will contain rendered node\n */\nexport function render(vnode: VNode | null, container: Element): void {\n  renderNextFrame(vnode, container);\n  triggerNextFrame();\n}\n\n/**\n * Render virtual DOM node into container on the next frame.\n *\n * @param next - Virtual DOM node to render\n * @param container - DOM Node that will contain rendered node\n */\nexport function renderNextFrame(next: VNode | null, container: Element): void {\n  /* istanbul ignore else */\n  if (DEBUG) {\n    /**\n     * Rendering into the <body> element is disabled to make it possible to fix iOS quirk with click events.\n     */\n    if (container === document.body) {\n      throw new Error(\"Rendering in the <body> aren't allowed\");\n    }\n    if (!document.body.contains(container)) {\n      throw new Error(\"Container element should be attached to the document\");\n    }\n  }\n\n  const root = findRoot(container);\n  if (root) {\n    root.next = next;\n  } else {\n    ROOTS.push({ container, next, current: null });\n  }\n\n  updateNextFrame();\n}\n\n/**\n * Update dirty components.\n */\nexport function update() {\n  updateNextFrame();\n  triggerNextFrame();\n}\n\n/**\n * Add a task to update dirty components that will be executed at the next frame.\n */\nexport function updateNextFrame() {\n  if (!_pendingUpdate) {\n    _pendingUpdate = 1;\n    nextFrameWrite(_update);\n  }\n}\n","import { VNodeFlags } from \"./flags\";\nimport { VNode } from \"./vnode\";\n\n/**\n * fragment is a variadic function that creates a children collection.\n *\n * @example\n *\n *     const content = children(\n *       p().c(\"Paragraph 1\"),\n *       p().c(\"Paragraph 2\"),\n *     );\n *\n *     render(\n *       div().c(\n *         h1().c(\"Title\"),\n *         content,\n *       ),\n *       DOMContainer,\n *     );\n *\n * @param args - Children\n * @returns Virtual DOM collection\n */\nexport function fragment(...args: Array<VNode | string | number | null>): VNode | null;\n\n/**\n * fragment is a variadic function that creates a children collection.\n *\n * @example\n *\n *     const content = children(\n *       p().c(\"Paragraph 1\"),\n *       p().c(\"Paragraph 2\"),\n *     );\n *\n *     render(\n *       div().c(\n *         h1().c(\"Title\"),\n *         content,\n *       ),\n *       DOMContainer,\n *     );\n *\n * @returns Virtual DOM collection\n */\nexport function fragment(): VNode | null {\n  const args: Array<VNode | string | number | null> = arguments as any;\n  let first: VNode<any> | null = null;\n  let prev: VNode<any> | null = null;\n\n  for (let i = 0; i < args.length; ++i) {\n    let n = args[i];\n\n    if (n !== null) {\n      if (typeof n !== \"object\") {\n        n = new VNode<string | number>(VNodeFlags.Text, null, n, \"\", void 0);\n      }\n      const last = n._l;\n      if (prev !== null) {\n        n._l = prev;\n        prev._r = n;\n      } else {\n        first = n;\n      }\n      prev = last;\n    }\n  }\n  if (first !== null) {\n    first._l = prev!;\n  }\n\n  return first;\n}\n\n/**\n * map creates a children collection with the results of calling a provided function on every element in the calling\n * array.\n *\n * @example\n *\n *     render(\n *       div().c(\n *         map([1, 2, 3], (item) => div().k(item)),\n *       ),\n *       DOMContainer,\n *     );\n *\n * @param items - Array\n * @param fn - Function that produces an element for the children collection\n * @returns Virtual DOM collection\n */\nexport function map<T, U>(array: Array<T>, fn: (item: T, index: number) => VNode<U> | null): VNode<U> | null {\n  let first: VNode<any> | null = null;\n  let prev: VNode<any> | null = null;\n  for (let i = 0; i < array.length; ++i) {\n    const n = fn(array[i], i);\n    if (n !== null) {\n      /* istanbul ignore else */\n      if (DEBUG) {\n        if ((n._f & VNodeFlags.Key) === 0) {\n          throw new Error(`VNodes created with a map() function should have an explicit key`);\n        }\n        if (n._l !== n) {\n          throw new Error(`VNodes created with a map() function should be a singular nodes`);\n        }\n      }\n      if (prev !== null) {\n        n._l = prev;\n        prev._r = n;\n      } else {\n        first = n;\n      }\n      prev = n;\n    }\n  }\n  if (first !== null) {\n    first._l = prev!;\n    first._f |= VNodeFlags.KeyedList;\n    return first;\n  }\n  return null;\n}\n\n/**\n * mapRange creates a children collection with the results of calling a provided function on every number in the\n * provided range.\n *\n * @example\n *\n *     const items = [1, 2, 3];\n *\n *     render(\n *       div().c(\n *         mapRange(0, items.length, (i) => div().k(items[i])),\n *       ),\n *       DOMContainer,\n *     );\n *\n * @param start - Range start\n * @param end - Range end\n * @param fn - Function that produces an element for the children collection\n * @returns Virtual DOM collection\n */\nexport function mapRange<T>(start: number, end: number, fn: (idx: number) => VNode<T> | null): VNode<T> | null {\n  const length = end - start;\n  let first: VNode<any> | null = null;\n  let prev: VNode<any> | null = null;\n  while (start < length) {\n    const n = fn(start++);\n    if (n !== null) {\n      /* istanbul ignore else */\n      if (DEBUG) {\n        if ((n._f & VNodeFlags.Key) === 0) {\n          throw new Error(`VNodes created with a mapRange() function should have an explicit key`);\n        }\n        if (n._l !== n) {\n          throw new Error(`VNodes created with a mapRange() function should be a singular nodes`);\n        }\n      }\n      if (prev !== null) {\n        n._l = prev;\n        prev._r = n;\n      } else {\n        first = n;\n      }\n      prev = n;\n    }\n  }\n  if (first !== null) {\n    first._l = prev!;\n    first._f |= VNodeFlags.KeyedList;\n    return first;\n  }\n  return null;\n}\n\n/**\n * mapIterable creates a children collection from an `IterableIterator` object.\n *\n * @example\n *\n *     const items = [1, 2, 3];\n *\n *     render(\n *       div().c(mapIterable(function* () {\n *         for (const item of items) {\n *           yield div().k(item);\n *         }\n *       }())),\n *       DOMContainer,\n *     );\n *\n * @param iterable - Iterable iterator\n * @returns Virtual DOM collection\n */\nexport function mapIterable<T>(iterable: IterableIterator<VNode<T>>): VNode<T> | null {\n  let first: VNode<any> | null = null;\n  let prev: VNode<any> | null = null;\n\n  for (const n of iterable) {\n    /* istanbul ignore else */\n    if (DEBUG) {\n      if ((n._f & VNodeFlags.Key) === 0) {\n        throw new Error(`VNodes created with a mapIterable() function should have an explicit key`);\n      }\n      if (n._l !== n) {\n        throw new Error(`VNodes created with a mapIterable() function should be a singular nodes`);\n      }\n    }\n    if (prev !== null) {\n      n._l = prev;\n      prev._r = n;\n    } else {\n      first = n;\n    }\n    prev = n;\n  }\n\n  if (first !== null) {\n    first._l = prev!;\n    first._f |= VNodeFlags.KeyedList;\n    return first;\n  }\n  return null;\n}\n","import {\n  HTMLAnchorElementAttrs, HTMLElementAttrs, HTMLAreaElementAttrs, HTMLAudioElementAttrs,\n  HTMLBaseElementAttrs, HTMLBodyElementAttrs, HTMLBRElementAttrs, HTMLButtonElementAttrs,\n  HTMLCanvasElementAttrs, HTMLQuoteElementAttrs, HTMLTableCaptionElementAttrs, HTMLTableColElementAttrs,\n  HTMLDataListElementAttrs, HTMLModElementAttrs, HTMLDivElementAttrs,\n  HTMLDListElementAttrs, HTMLEmbedElementAttrs, HTMLFieldSetElementAttrs, HTMLFormElementAttrs,\n  HTMLHeadElementAttrs, HTMLHeadingElementAttrs, HTMLHRElementAttrs,\n  HTMLHtmlElementAttrs, HTMLIFrameElementAttrs, HTMLImageElementAttrs, HTMLInputElementAttrs, HTMLLabelElementAttrs,\n  HTMLLegendElementAttrs, HTMLLIElementAttrs, HTMLLinkElementAttrs, HTMLMapElementAttrs,\n  HTMLMenuElementAttrs, HTMLMetaElementAttrs, HTMLMeterElementAttrs, HTMLObjectElementAttrs, HTMLOListElementAttrs,\n  HTMLOptGroupElementAttrs, HTMLOptionElementAttrs, HTMLParagraphElementAttrs, HTMLParamElementAttrs,\n  HTMLPictureElementAttrs, HTMLPreElementAttrs, HTMLProgressElementAttrs, HTMLScriptElementAttrs,\n  HTMLSelectElementAttrs, HTMLSourceElementAttrs, HTMLSpanElementAttrs, HTMLStyleElementAttrs,\n  HTMLTableDataCellElementAttrs, HTMLTableElementAttrs, HTMLTableHeaderCellElementAttrs, HTMLTableRowElementAttrs,\n  HTMLTableSectionElementAttrs, HTMLTemplateElementAttrs, HTMLTextAreaElementAttrs, HTMLTitleElementAttrs,\n  HTMLTrackElementAttrs, HTMLUListElementAttrs, HTMLVideoElementAttrs,\n  CSSStyleProps,\n\n  SYNCABLE_VALUE_SKIP_UNDEFINED,\n} from \"ivi-core\";\nimport { VNode, VNodeFlags, SyncableValue } from \"ivi\";\n\nconst enum TagId {\n  A = 1,\n  Abbr = 2,\n  Acronym = 3,\n  Address = 4,\n  Area = 5,\n  Article = 6,\n  Aside = 7,\n  B = 8,\n  Base = 9,\n  Basefont = 10,\n  Bdo = 11,\n  Big = 12,\n  Blockquote = 13,\n  Body = 14,\n  Br = 15,\n  Button = 16,\n  Canvas = 17,\n  Caption = 18,\n  Center = 19,\n  Cite = 20,\n  Code = 21,\n  Col = 22,\n  Colgroup = 23,\n  Data = 24,\n  Datalist = 25,\n  Dd = 26,\n  Del = 27,\n  Dfn = 28,\n  Dir = 29,\n  Div = 30,\n  Dl = 31,\n  Dt = 32,\n  Em = 33,\n  Embed = 34,\n  Fieldset = 35,\n  Figcaption = 36,\n  Figure = 37,\n  Font = 38,\n  Footer = 39,\n  Form = 40,\n  Frame = 41,\n  Frameset = 42,\n  H1 = 43,\n  H2 = 44,\n  H3 = 45,\n  H4 = 46,\n  H5 = 47,\n  H6 = 48,\n  Head = 49,\n  Header = 50,\n  Hgroup = 51,\n  Hr = 52,\n  Html = 53,\n  I = 54,\n  Iframe = 55,\n  Img = 56,\n  Input = 57,\n  Ins = 58,\n  Kbd = 59,\n  Label = 60,\n  Legend = 61,\n  Li = 62,\n  Link = 63,\n  Listing = 64,\n  Main = 65,\n  Map = 66,\n  Mark = 67,\n  Menu = 68,\n  Meta = 69,\n  Meter = 70,\n  Nav = 71,\n  Nobr = 72,\n  Noframes = 73,\n  Noscript = 74,\n  Object = 75,\n  Ol = 76,\n  Optgroup = 77,\n  Option = 78,\n  P = 79,\n  Param = 80,\n  Picture = 81,\n  Plaintext = 82,\n  Pre = 83,\n  Progress = 84,\n  Q = 85,\n  Rt = 86,\n  Ruby = 87,\n  S = 88,\n  Samp = 89,\n  Script = 90,\n  Section = 91,\n  Select = 92,\n  Small = 93,\n  Source = 94,\n  Span = 95,\n  Strike = 96,\n  Strong = 97,\n  Style = 98,\n  Sub = 99,\n  Sup = 100,\n  Table = 101,\n  Tbody = 102,\n  Td = 103,\n  Template = 104,\n  Textarea = 105,\n  Tfoot = 106,\n  Th = 107,\n  Thead = 108,\n  Time = 109,\n  Title = 110,\n  Tr = 111,\n  Track = 112,\n  Tt = 113,\n  U = 114,\n  Ul = 115,\n  Wbr = 116,\n  Xmp = 117,\n  Audio = 118,\n  Video = 119,\n}\n\n/**\n * {@link SyncableValue} with `\"\"` value and {@link syncValue} sync function.\n */\nconst VALUE_EMPTY_STRING: SyncableValue<string | number> = { v: \"\", s: syncValue };\n\n/**\n * {@link SyncableValue} with `false` value and {@link syncChecked} sync function.\n */\nconst CHECKED_FALSE: SyncableValue<boolean> = { v: false, s: syncChecked };\n\n/**\n * {@link SyncableValue} with `true` value and {@link syncChecked} sync function.\n */\nconst CHECKED_TRUE: SyncableValue<boolean> = { v: true, s: syncChecked };\n\n/**\n * Synchronization function for {@link SyncableValue} created with {@link VALUE} function.\n *\n * @param element - Target element\n * @param key - Attribute key\n * @param prev - Previous value\n * @param next - Next value\n */\nfunction syncValue(\n  element: Element,\n  key: string,\n  prev: string | number | undefined,\n  next: string | number | undefined,\n) {\n  if (prev === void 0) {\n    if (next !== \"\") {\n      (element as HTMLInputElement | HTMLTextAreaElement).value = next as string;\n    }\n  } else {\n    if ((element as HTMLInputElement | HTMLTextAreaElement).value !== next) {\n      (element as HTMLInputElement | HTMLTextAreaElement).value = next as string;\n    }\n  }\n}\n\n/**\n * Synchronization function for {@link SyncableValue} created with {@link CHECKED} function.\n *\n * @param element - Target element\n * @param key - Attribute key\n * @param prev - Previous value\n * @param next - Next value\n */\nfunction syncChecked(\n  element: Element,\n  key: string,\n  prev: boolean | undefined,\n  next: boolean | undefined,\n) {\n  if (prev === void 0) {\n    if (next) {\n      (element as HTMLInputElement).checked = next;\n    }\n  } else {\n    if ((element as HTMLInputElement).checked !== next) {\n      (element as HTMLInputElement).checked = next!;\n    }\n  }\n}\n\n/**\n * VALUE function creates a {@link SyncableValue} that assigns a `value` property to an HTMLInputElement or\n * HTMLTextAreaElement.\n *\n * `undefined` values are ignored.\n *\n * @example\n *\n *   const e = input(\"\", { value: VALUE(\"value\") });\n *\n * @param v - Value\n * @returns {@link SyncableValue}\n */\nexport function VALUE(v: string | number | undefined): SyncableValue<string | number> {\n  return (v === void 0) ?\n    SYNCABLE_VALUE_SKIP_UNDEFINED :\n    v === \"\" ?\n      VALUE_EMPTY_STRING :\n      { v, s: syncValue };\n}\n\n/**\n * CHECKED function creates a {@link SyncableValue} that assigns a `checked` property to an HTMLInputElement.\n *\n * `undefined` values are ignored.\n *\n * @example\n *\n *   const e = input(\"\", { checked: CHECKED(true) });\n *\n * @param v - Checked value\n * @returns {@link SyncableValue}\n */\nexport function CHECKED(v: boolean | undefined): SyncableValue<boolean> {\n  return (v === void 0) ?\n    SYNCABLE_VALUE_SKIP_UNDEFINED as any as SyncableValue<boolean> :\n    v ? CHECKED_TRUE : CHECKED_FALSE;\n}\n\n/**\n * Create a VNode representing a Text node.\n *\n * @param content Text content.\n * @returns VNode object.\n */\nexport function t(content: string | number): VNode<string | number, Text> {\n  return new VNode(VNodeFlags.Text, null, content, \"\", void 0);\n}\n\n/* tslint:disable:max-line-length */\n\nexport function a(className?: string, attrs?: HTMLAnchorElementAttrs, css?: CSSStyleProps): VNode<HTMLAnchorElementAttrs | undefined, HTMLAnchorElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.A << VNodeFlags.ElementIdOffset),\n    \"a\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function abbr(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Abbr << VNodeFlags.ElementIdOffset),\n    \"abbr\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function acronym(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Acronym << VNodeFlags.ElementIdOffset),\n    \"acronym\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function address(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Address << VNodeFlags.ElementIdOffset),\n    \"address\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function area(className?: string, attrs?: HTMLAreaElementAttrs, css?: CSSStyleProps): VNode<HTMLAreaElementAttrs | undefined, HTMLAreaElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Area << VNodeFlags.ElementIdOffset),\n    \"area\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function article(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Article << VNodeFlags.ElementIdOffset),\n    \"article\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function aside(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Aside << VNodeFlags.ElementIdOffset),\n    \"aside\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function b(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.B << VNodeFlags.ElementIdOffset),\n    \"b\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function base(className?: string, attrs?: HTMLBaseElementAttrs, css?: CSSStyleProps): VNode<HTMLBaseElementAttrs | undefined, HTMLBaseElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Base << VNodeFlags.ElementIdOffset),\n    \"base\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function bdo(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Bdo << VNodeFlags.ElementIdOffset),\n    \"bdo\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function big(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Big << VNodeFlags.ElementIdOffset),\n    \"big\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function blockquote(className?: string, attrs?: HTMLQuoteElementAttrs, css?: CSSStyleProps): VNode<HTMLQuoteElementAttrs | undefined, HTMLQuoteElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Blockquote << VNodeFlags.ElementIdOffset),\n    \"blockquote\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function body(className?: string, attrs?: HTMLBodyElementAttrs, css?: CSSStyleProps): VNode<HTMLBodyElementAttrs | undefined, HTMLBodyElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Body << VNodeFlags.ElementIdOffset),\n    \"body\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function br(className?: string, attrs?: HTMLBRElementAttrs, css?: CSSStyleProps): VNode<HTMLBRElementAttrs | undefined, HTMLBRElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Br << VNodeFlags.ElementIdOffset),\n    \"br\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function button(className?: string, attrs?: HTMLButtonElementAttrs, css?: CSSStyleProps): VNode<HTMLButtonElementAttrs | undefined, HTMLButtonElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Button << VNodeFlags.ElementIdOffset),\n    \"button\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function canvas(className?: string, attrs?: HTMLCanvasElementAttrs, css?: CSSStyleProps): VNode<HTMLCanvasElementAttrs | undefined, HTMLCanvasElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Canvas << VNodeFlags.ElementIdOffset),\n    \"canvas\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function caption(className?: string, attrs?: HTMLTableCaptionElementAttrs, css?: CSSStyleProps): VNode<HTMLTableCaptionElementAttrs | undefined, HTMLTableCaptionElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Caption << VNodeFlags.ElementIdOffset),\n    \"caption\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function center(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Center << VNodeFlags.ElementIdOffset),\n    \"center\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function cite(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Cite << VNodeFlags.ElementIdOffset),\n    \"cite\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function code(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Code << VNodeFlags.ElementIdOffset),\n    \"code\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function col(className?: string, attrs?: HTMLTableColElementAttrs, css?: CSSStyleProps): VNode<HTMLTableColElementAttrs | undefined, HTMLTableColElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Col << VNodeFlags.ElementIdOffset),\n    \"col\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function colgroup(className?: string, attrs?: HTMLTableColElementAttrs, css?: CSSStyleProps): VNode<HTMLTableColElementAttrs | undefined, HTMLTableColElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Colgroup << VNodeFlags.ElementIdOffset),\n    \"colgroup\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function data(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Data << VNodeFlags.ElementIdOffset),\n    \"data\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function datalist(className?: string, attrs?: HTMLDataListElementAttrs, css?: CSSStyleProps): VNode<HTMLDataListElementAttrs | undefined, HTMLDataListElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Datalist << VNodeFlags.ElementIdOffset),\n    \"datalist\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function dd(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Dd << VNodeFlags.ElementIdOffset),\n    \"dd\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function del(className?: string, attrs?: HTMLModElementAttrs, css?: CSSStyleProps): VNode<HTMLModElementAttrs | undefined, HTMLModElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Del << VNodeFlags.ElementIdOffset),\n    \"del\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function dfn(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Dfn << VNodeFlags.ElementIdOffset),\n    \"dfn\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function div(className?: string, attrs?: HTMLDivElementAttrs, css?: CSSStyleProps): VNode<HTMLDivElementAttrs | undefined, HTMLDivElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Div << VNodeFlags.ElementIdOffset),\n    \"div\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function dl(className?: string, attrs?: HTMLDListElementAttrs, css?: CSSStyleProps): VNode<HTMLDListElementAttrs | undefined, HTMLDListElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Dl << VNodeFlags.ElementIdOffset),\n    \"dl\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function dt(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Dt << VNodeFlags.ElementIdOffset),\n    \"dt\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function em(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Em << VNodeFlags.ElementIdOffset),\n    \"em\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function embed(className?: string, attrs?: HTMLEmbedElementAttrs, css?: CSSStyleProps): VNode<HTMLEmbedElementAttrs | undefined, HTMLEmbedElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Embed << VNodeFlags.ElementIdOffset),\n    \"embed\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function fieldset(className?: string, attrs?: HTMLFieldSetElementAttrs, css?: CSSStyleProps): VNode<HTMLFieldSetElementAttrs | undefined, HTMLFieldSetElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Fieldset << VNodeFlags.ElementIdOffset),\n    \"fieldset\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function figcaption(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Figcaption << VNodeFlags.ElementIdOffset),\n    \"figcaption\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function figure(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Figure << VNodeFlags.ElementIdOffset),\n    \"figure\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function footer(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Footer << VNodeFlags.ElementIdOffset),\n    \"footer\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function form(className?: string, attrs?: HTMLFormElementAttrs, css?: CSSStyleProps): VNode<HTMLFormElementAttrs | undefined, HTMLFormElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Form << VNodeFlags.ElementIdOffset),\n    \"form\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function h1(className?: string, attrs?: HTMLHeadingElementAttrs, css?: CSSStyleProps): VNode<HTMLHeadingElementAttrs | undefined, HTMLHeadingElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.H1 << VNodeFlags.ElementIdOffset),\n    \"h1\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function h2(className?: string, attrs?: HTMLHeadingElementAttrs, css?: CSSStyleProps): VNode<HTMLHeadingElementAttrs | undefined, HTMLHeadingElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.H2 << VNodeFlags.ElementIdOffset),\n    \"h2\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function h3(className?: string, attrs?: HTMLHeadingElementAttrs, css?: CSSStyleProps): VNode<HTMLHeadingElementAttrs | undefined, HTMLHeadingElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.H3 << VNodeFlags.ElementIdOffset),\n    \"h3\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function h4(className?: string, attrs?: HTMLHeadingElementAttrs, css?: CSSStyleProps): VNode<HTMLHeadingElementAttrs | undefined, HTMLHeadingElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.H4 << VNodeFlags.ElementIdOffset),\n    \"h4\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function h5(className?: string, attrs?: HTMLHeadingElementAttrs, css?: CSSStyleProps): VNode<HTMLHeadingElementAttrs | undefined, HTMLHeadingElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.H5 << VNodeFlags.ElementIdOffset),\n    \"h5\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function h6(className?: string, attrs?: HTMLHeadingElementAttrs, css?: CSSStyleProps): VNode<HTMLHeadingElementAttrs | undefined, HTMLHeadingElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.H6 << VNodeFlags.ElementIdOffset),\n    \"h6\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function head(className?: string, attrs?: HTMLHeadElementAttrs, css?: CSSStyleProps): VNode<HTMLHeadElementAttrs | undefined, HTMLHeadElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Head << VNodeFlags.ElementIdOffset),\n    \"head\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function header(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Header << VNodeFlags.ElementIdOffset),\n    \"header\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function hgroup(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Hgroup << VNodeFlags.ElementIdOffset),\n    \"hgroup\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function hr(className?: string, attrs?: HTMLHRElementAttrs, css?: CSSStyleProps): VNode<HTMLHRElementAttrs | undefined, HTMLHRElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Hr << VNodeFlags.ElementIdOffset),\n    \"hr\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function html(className?: string, attrs?: HTMLHtmlElementAttrs, css?: CSSStyleProps): VNode<HTMLHtmlElementAttrs | undefined, HTMLHtmlElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Html << VNodeFlags.ElementIdOffset),\n    \"html\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function i(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.I << VNodeFlags.ElementIdOffset),\n    \"i\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function iframe(className?: string, attrs?: HTMLIFrameElementAttrs, css?: CSSStyleProps): VNode<HTMLIFrameElementAttrs | undefined, HTMLIFrameElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Iframe << VNodeFlags.ElementIdOffset),\n    \"iframe\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function img(className?: string, attrs?: HTMLImageElementAttrs, css?: CSSStyleProps): VNode<HTMLImageElementAttrs | undefined, HTMLImageElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Img << VNodeFlags.ElementIdOffset),\n    \"img\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function ins(className?: string, attrs?: HTMLModElementAttrs, css?: CSSStyleProps): VNode<HTMLModElementAttrs | undefined, HTMLModElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Ins << VNodeFlags.ElementIdOffset),\n    \"ins\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function kbd(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Kbd << VNodeFlags.ElementIdOffset),\n    \"kbd\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function label(className?: string, attrs?: HTMLLabelElementAttrs, css?: CSSStyleProps): VNode<HTMLLabelElementAttrs | undefined, HTMLLabelElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Label << VNodeFlags.ElementIdOffset),\n    \"label\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function legend(className?: string, attrs?: HTMLLegendElementAttrs, css?: CSSStyleProps): VNode<HTMLLegendElementAttrs | undefined, HTMLLegendElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Legend << VNodeFlags.ElementIdOffset),\n    \"legend\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function li(className?: string, attrs?: HTMLLIElementAttrs, css?: CSSStyleProps): VNode<HTMLLIElementAttrs | undefined, HTMLLIElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Li << VNodeFlags.ElementIdOffset),\n    \"li\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function link(className?: string, attrs?: HTMLLinkElementAttrs, css?: CSSStyleProps): VNode<HTMLLinkElementAttrs | undefined, HTMLLinkElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Link << VNodeFlags.ElementIdOffset),\n    \"link\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function listing(className?: string, attrs?: HTMLPreElementAttrs, css?: CSSStyleProps): VNode<HTMLPreElementAttrs | undefined, HTMLPreElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Listing << VNodeFlags.ElementIdOffset),\n    \"listing\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function main(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Main << VNodeFlags.ElementIdOffset),\n    \"main\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function map(className?: string, attrs?: HTMLMapElementAttrs, css?: CSSStyleProps): VNode<HTMLMapElementAttrs | undefined, HTMLMapElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Map << VNodeFlags.ElementIdOffset),\n    \"map\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function mark(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Mark << VNodeFlags.ElementIdOffset),\n    \"mark\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function menu(className?: string, attrs?: HTMLMenuElementAttrs, css?: CSSStyleProps): VNode<HTMLMenuElementAttrs | undefined, HTMLMenuElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Menu << VNodeFlags.ElementIdOffset),\n    \"menu\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function meta(className?: string, attrs?: HTMLMetaElementAttrs, css?: CSSStyleProps): VNode<HTMLMetaElementAttrs | undefined, HTMLMetaElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Meta << VNodeFlags.ElementIdOffset),\n    \"meta\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function meter(className?: string, attrs?: HTMLMeterElementAttrs, css?: CSSStyleProps): VNode<HTMLMeterElementAttrs | undefined, HTMLMeterElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Meter << VNodeFlags.ElementIdOffset),\n    \"meter\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function nav(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Nav << VNodeFlags.ElementIdOffset),\n    \"nav\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function nobr(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Nobr << VNodeFlags.ElementIdOffset),\n    \"nobr\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function noframes(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Noframes << VNodeFlags.ElementIdOffset),\n    \"noframes\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function noscript(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Noscript << VNodeFlags.ElementIdOffset),\n    \"noscript\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function object(className?: string, attrs?: HTMLObjectElementAttrs, css?: CSSStyleProps): VNode<HTMLObjectElementAttrs | undefined, HTMLObjectElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Object << VNodeFlags.ElementIdOffset),\n    \"object\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function ol(className?: string, attrs?: HTMLOListElementAttrs, css?: CSSStyleProps): VNode<HTMLOListElementAttrs | undefined, HTMLOListElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Ol << VNodeFlags.ElementIdOffset),\n    \"ol\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function optgroup(className?: string, attrs?: HTMLOptGroupElementAttrs, css?: CSSStyleProps): VNode<HTMLOptGroupElementAttrs | undefined, HTMLOptGroupElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Optgroup << VNodeFlags.ElementIdOffset),\n    \"optgroup\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function option(className?: string, attrs?: HTMLOptionElementAttrs, css?: CSSStyleProps): VNode<HTMLOptionElementAttrs | undefined, HTMLOptionElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Option << VNodeFlags.ElementIdOffset),\n    \"option\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function p(className?: string, attrs?: HTMLParagraphElementAttrs, css?: CSSStyleProps): VNode<HTMLParagraphElementAttrs | undefined, HTMLParagraphElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.P << VNodeFlags.ElementIdOffset),\n    \"p\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function param(className?: string, attrs?: HTMLParamElementAttrs, css?: CSSStyleProps): VNode<HTMLParamElementAttrs | undefined, HTMLParamElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Param << VNodeFlags.ElementIdOffset),\n    \"param\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function picture(className?: string, attrs?: HTMLPictureElementAttrs, css?: CSSStyleProps): VNode<HTMLPictureElementAttrs | undefined, HTMLPictureElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Picture << VNodeFlags.ElementIdOffset),\n    \"picture\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function plaintext(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Plaintext << VNodeFlags.ElementIdOffset),\n    \"plaintext\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function pre(className?: string, attrs?: HTMLPreElementAttrs, css?: CSSStyleProps): VNode<HTMLPreElementAttrs | undefined, HTMLPreElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Pre << VNodeFlags.ElementIdOffset),\n    \"pre\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function progress(className?: string, attrs?: HTMLProgressElementAttrs, css?: CSSStyleProps): VNode<HTMLProgressElementAttrs | undefined, HTMLProgressElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Progress << VNodeFlags.ElementIdOffset),\n    \"progress\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function q(className?: string, attrs?: HTMLQuoteElementAttrs, css?: CSSStyleProps): VNode<HTMLQuoteElementAttrs | undefined, HTMLQuoteElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Q << VNodeFlags.ElementIdOffset),\n    \"q\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function rt(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Rt << VNodeFlags.ElementIdOffset),\n    \"rt\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function ruby(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Ruby << VNodeFlags.ElementIdOffset),\n    \"ruby\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function s(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.S << VNodeFlags.ElementIdOffset),\n    \"s\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function samp(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Samp << VNodeFlags.ElementIdOffset),\n    \"samp\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function script(className?: string, attrs?: HTMLScriptElementAttrs, css?: CSSStyleProps): VNode<HTMLScriptElementAttrs | undefined, HTMLScriptElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Script << VNodeFlags.ElementIdOffset),\n    \"script\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function section(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Section << VNodeFlags.ElementIdOffset),\n    \"section\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function select(className?: string, attrs?: HTMLSelectElementAttrs, css?: CSSStyleProps): VNode<HTMLSelectElementAttrs | undefined, HTMLSelectElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Select << VNodeFlags.ElementIdOffset),\n    \"select\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function small(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Small << VNodeFlags.ElementIdOffset),\n    \"small\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function source(className?: string, attrs?: HTMLSourceElementAttrs, css?: CSSStyleProps): VNode<HTMLSourceElementAttrs | undefined, HTMLSourceElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Source << VNodeFlags.ElementIdOffset),\n    \"source\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function span(className?: string, attrs?: HTMLSpanElementAttrs, css?: CSSStyleProps): VNode<HTMLSpanElementAttrs | undefined, HTMLSpanElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Span << VNodeFlags.ElementIdOffset),\n    \"span\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function strike(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Strike << VNodeFlags.ElementIdOffset),\n    \"strike\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function strong(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Strong << VNodeFlags.ElementIdOffset),\n    \"strong\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function style(className?: string, attrs?: HTMLStyleElementAttrs, css?: CSSStyleProps): VNode<HTMLStyleElementAttrs | undefined, HTMLStyleElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Style << VNodeFlags.ElementIdOffset),\n    \"style\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function sub(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Sub << VNodeFlags.ElementIdOffset),\n    \"sub\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function sup(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Sup << VNodeFlags.ElementIdOffset),\n    \"sup\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function table(className?: string, attrs?: HTMLTableElementAttrs, css?: CSSStyleProps): VNode<HTMLTableElementAttrs | undefined, HTMLTableElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Table << VNodeFlags.ElementIdOffset),\n    \"table\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function tbody(className?: string, attrs?: HTMLTableSectionElementAttrs, css?: CSSStyleProps): VNode<HTMLTableSectionElementAttrs | undefined, HTMLTableSectionElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Tbody << VNodeFlags.ElementIdOffset),\n    \"tbody\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function td(className?: string, attrs?: HTMLTableDataCellElementAttrs, css?: CSSStyleProps): VNode<HTMLTableDataCellElementAttrs | undefined, HTMLTableDataCellElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Td << VNodeFlags.ElementIdOffset),\n    \"td\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function template(className?: string, attrs?: HTMLTemplateElementAttrs, css?: CSSStyleProps): VNode<HTMLTemplateElementAttrs | undefined, HTMLTemplateElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Template << VNodeFlags.ElementIdOffset),\n    \"template\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function tfoot(className?: string, attrs?: HTMLTableSectionElementAttrs, css?: CSSStyleProps): VNode<HTMLTableSectionElementAttrs | undefined, HTMLTableSectionElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Tfoot << VNodeFlags.ElementIdOffset),\n    \"tfoot\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function th(className?: string, attrs?: HTMLTableHeaderCellElementAttrs, css?: CSSStyleProps): VNode<HTMLTableHeaderCellElementAttrs | undefined, HTMLTableHeaderCellElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Th << VNodeFlags.ElementIdOffset),\n    \"th\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function thead(className?: string, attrs?: HTMLTableSectionElementAttrs, css?: CSSStyleProps): VNode<HTMLTableSectionElementAttrs | undefined, HTMLTableSectionElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Thead << VNodeFlags.ElementIdOffset),\n    \"thead\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function time(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Time << VNodeFlags.ElementIdOffset),\n    \"time\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function title(className?: string, attrs?: HTMLTitleElementAttrs, css?: CSSStyleProps): VNode<HTMLTitleElementAttrs | undefined, HTMLTitleElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Title << VNodeFlags.ElementIdOffset),\n    \"title\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function tr(className?: string, attrs?: HTMLTableRowElementAttrs, css?: CSSStyleProps): VNode<HTMLTableRowElementAttrs | undefined, HTMLTableRowElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Tr << VNodeFlags.ElementIdOffset),\n    \"tr\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function track(className?: string, attrs?: HTMLTrackElementAttrs, css?: CSSStyleProps): VNode<HTMLTrackElementAttrs | undefined, HTMLTrackElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Track << VNodeFlags.ElementIdOffset),\n    \"track\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function tt(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Tt << VNodeFlags.ElementIdOffset),\n    \"tt\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function u(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.U << VNodeFlags.ElementIdOffset),\n    \"u\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function ul(className?: string, attrs?: HTMLUListElementAttrs, css?: CSSStyleProps): VNode<HTMLUListElementAttrs | undefined, HTMLUListElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Ul << VNodeFlags.ElementIdOffset),\n    \"ul\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function wbr(className?: string, attrs?: HTMLElementAttrs, css?: CSSStyleProps): VNode<HTMLElementAttrs | undefined, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Wbr << VNodeFlags.ElementIdOffset),\n    \"wbr\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function xmp(className?: string, attrs?: HTMLPreElementAttrs, css?: CSSStyleProps): VNode<HTMLPreElementAttrs | undefined, HTMLPreElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Xmp << VNodeFlags.ElementIdOffset),\n    \"xmp\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\n\n// Textarea / Input Elements:\nexport function textarea(className?: string, attrs?: HTMLTextAreaElementAttrs, css?: CSSStyleProps): VNode<HTMLTextAreaElementAttrs | undefined, HTMLTextAreaElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Textarea << VNodeFlags.ElementIdOffset),\n    \"textarea\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\nexport function input(className?: string, attrs?: HTMLInputElementAttrs, css?: CSSStyleProps): VNode<HTMLInputElementAttrs | undefined, HTMLInputElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Input << VNodeFlags.ElementIdOffset),\n    \"input\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\n\n// Media Elements:\nexport function audio(className?: string, attrs?: HTMLAudioElementAttrs, css?: CSSStyleProps): VNode<HTMLAudioElementAttrs | undefined, HTMLAudioElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Audio << VNodeFlags.ElementIdOffset),\n    \"audio\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\n\nexport function video(className?: string, attrs?: HTMLVideoElementAttrs, css?: CSSStyleProps): VNode<HTMLVideoElementAttrs | undefined, HTMLVideoElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Video << VNodeFlags.ElementIdOffset),\n    \"video\",\n    attrs,\n    className === void 0 ? \"\" : className,\n    css,\n  );\n}\n","var MonitorMaxSamples = 100;\nvar MonitorSamplesResult = (function () {\n    function MonitorSamplesResult(min, max, mean, last) {\n        this.min = min;\n        this.max = max;\n        this.mean = mean;\n        this.last = last;\n    }\n    return MonitorSamplesResult;\n}());\n/**\n * Profile Samples.\n */\nvar MonitorSamples = (function () {\n    function MonitorSamples(maxSamples) {\n        this.samples = [];\n        this.maxSamples = maxSamples;\n        this._i = -1;\n    }\n    MonitorSamples.prototype.addSample = function (v) {\n        this._i = (this._i + 1) % this.maxSamples;\n        this.samples[this._i] = v;\n    };\n    MonitorSamples.prototype.each = function (fn) {\n        var samples = this.samples;\n        for (var i = 0; i < samples.length; i++) {\n            fn(samples[(this._i + 1 + i) % samples.length], i);\n        }\n    };\n    MonitorSamples.prototype.calc = function () {\n        var samples = this.samples;\n        if (samples.length === 0) {\n            return new MonitorSamplesResult(0, 0, 0, 0);\n        }\n        var min = samples[(this._i + 1) % samples.length];\n        var max = min;\n        var sum = 0;\n        for (var i = 0; i < samples.length; i++) {\n            var k = samples[(this._i + 1 + i) % samples.length];\n            if (k < min) {\n                min = k;\n            }\n            if (k > max) {\n                max = k;\n            }\n            sum += k;\n        }\n        var last = samples[this._i];\n        var mean = sum / samples.length;\n        return new MonitorSamplesResult(min, max, mean, last);\n    };\n    return MonitorSamples;\n}());\n\n/**\n * Basic Counter.\n */\nvar BasicCounter = (function () {\n    function BasicCounter() {\n        this.value = 0;\n        this.onChange = null;\n    }\n    BasicCounter.prototype.inc = function (value) {\n        if (value > 0) {\n            this.value += value;\n            this.onChange();\n        }\n    };\n    return BasicCounter;\n}());\nvar TimestampedValue = (function () {\n    function TimestampedValue(timestamp, value) {\n        this.value = value;\n        this.next = null;\n    }\n    return TimestampedValue;\n}());\n/**\n * Sliding Counter counts how many times `inc` method were called during `interval` period.\n */\nvar SlidingCounter = (function () {\n    function SlidingCounter(interval) {\n        var _this = this;\n        this._dec = function () {\n            var now = performance.now();\n            while (_this._firstTimestamp !== null) {\n                var nextTimestamp = _this._firstTimestamp;\n                if (now >= nextTimestamp.value) {\n                    _this.value -= nextTimestamp.value;\n                    _this._firstTimestamp = _this._firstTimestamp.next;\n                }\n                else {\n                    setTimeout(_this._dec, Math.ceil(nextTimestamp.value - now));\n                    break;\n                }\n            }\n            if (_this._firstTimestamp === null) {\n                _this._lastTimestamp = null;\n            }\n            _this.onChange();\n        };\n        this.interval = interval;\n        this.value = 0;\n        this.onChange = null;\n        this._firstTimestamp = null;\n        this._lastTimestamp = null;\n    }\n    SlidingCounter.prototype.inc = function (value) {\n        if (value > 0) {\n            var timestamp = new TimestampedValue(performance.now() + this.interval, value);\n            if (this._firstTimestamp === null) {\n                this._firstTimestamp = timestamp;\n                setTimeout(this._dec, this.interval);\n            }\n            else {\n                this._lastTimestamp.next = timestamp;\n            }\n            this._lastTimestamp = timestamp;\n            this.value += value;\n            this.onChange();\n        }\n    };\n    return SlidingCounter;\n}());\n\nvar frameTasks = [];\nvar rafId = -1;\n/**\n * Schedule new task that will be executed on the next frame.\n */\nfunction scheduleNextFrameTask(task) {\n    frameTasks.push(task);\n    if (rafId === -1) {\n        requestAnimationFrame(function (t) {\n            rafId = -1;\n            var tasks = frameTasks;\n            frameTasks = [];\n            for (var i = 0; i < tasks.length; i++) {\n                tasks[i]();\n            }\n        });\n    }\n}\n\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar MonitorGraphHeight = 30;\nvar MonitorGraphWidth = MonitorMaxSamples;\nvar Widget = (function () {\n    function Widget(name) {\n        var _this = this;\n        this._sync = function () {\n            _this.sync();\n            _this._dirty = false;\n        };\n        this.name = name;\n        this.element = document.createElement(\"div\");\n        this.element.style.cssText = \"padding: 2px;\" +\n            \"background-color: #020;\" +\n            \"font-family: monospace;\" +\n            \"font-size: 12px;\" +\n            \"color: #0f0\";\n        this._dirty = false;\n        this.invalidate();\n    }\n    Widget.prototype.invalidate = function () {\n        if (!this._dirty) {\n            this._dirty = true;\n            scheduleNextFrameTask(this._sync);\n        }\n    };\n    Widget.prototype.sync = function () {\n        throw new Error(\"sync method not implemented\");\n    };\n    return Widget;\n}());\nvar MonitorWidgetFlags;\n(function (MonitorWidgetFlags) {\n    MonitorWidgetFlags[MonitorWidgetFlags[\"HideMin\"] = 1] = \"HideMin\";\n    MonitorWidgetFlags[MonitorWidgetFlags[\"HideMax\"] = 2] = \"HideMax\";\n    MonitorWidgetFlags[MonitorWidgetFlags[\"HideMean\"] = 4] = \"HideMean\";\n    MonitorWidgetFlags[MonitorWidgetFlags[\"HideLast\"] = 8] = \"HideLast\";\n    MonitorWidgetFlags[MonitorWidgetFlags[\"HideGraph\"] = 16] = \"HideGraph\";\n    MonitorWidgetFlags[MonitorWidgetFlags[\"RoundValues\"] = 32] = \"RoundValues\";\n})(MonitorWidgetFlags || (MonitorWidgetFlags = {}));\nvar MonitorWidget = (function (_super) {\n    __extends(MonitorWidget, _super);\n    function MonitorWidget(name, flags, unitName, samples) {\n        var _this = _super.call(this, name) || this;\n        _this.flags = flags;\n        _this.unitName = unitName;\n        _this.samples = samples;\n        var label = document.createElement(\"div\");\n        label.style.cssText = \"text-align: center\";\n        label.textContent = _this.name;\n        var text = document.createElement(\"div\");\n        if ((flags & MonitorWidgetFlags.HideMin) === 0) {\n            _this.minText = document.createElement(\"div\");\n            text.appendChild(_this.minText);\n        }\n        else {\n            _this.minText = null;\n        }\n        if ((flags & MonitorWidgetFlags.HideMax) === 0) {\n            _this.maxText = document.createElement(\"div\");\n            text.appendChild(_this.maxText);\n        }\n        else {\n            _this.maxText = null;\n        }\n        if ((flags & MonitorWidgetFlags.HideMean) === 0) {\n            _this.meanText = document.createElement(\"div\");\n            text.appendChild(_this.meanText);\n        }\n        else {\n            _this.meanText = null;\n        }\n        if ((flags & MonitorWidgetFlags.HideLast) === 0) {\n            _this.lastText = document.createElement(\"div\");\n            text.appendChild(_this.lastText);\n        }\n        else {\n            _this.lastText = null;\n        }\n        _this.element.appendChild(label);\n        _this.element.appendChild(text);\n        if ((flags & MonitorWidgetFlags.HideGraph) === 0) {\n            _this.canvas = document.createElement(\"canvas\");\n            _this.canvas.style.cssText = \"display: block; padding: 0; margin: 0\";\n            _this.canvas.width = MonitorGraphWidth;\n            _this.canvas.height = MonitorGraphHeight;\n            _this.ctx = _this.canvas.getContext(\"2d\");\n            _this.element.appendChild(_this.canvas);\n        }\n        else {\n            _this.canvas = null;\n            _this.ctx = null;\n        }\n        return _this;\n    }\n    MonitorWidget.prototype.sync = function () {\n        var _this = this;\n        var result = this.samples.calc();\n        var scale = MonitorGraphHeight / (result.max * 1.2);\n        var min;\n        var max;\n        var mean;\n        var last;\n        if ((this.flags & MonitorWidgetFlags.RoundValues) === 0) {\n            min = result.min.toFixed(2);\n            max = result.max.toFixed(2);\n            mean = result.mean.toFixed(2);\n            last = result.last.toFixed(2);\n        }\n        else {\n            min = Math.round(result.min).toString();\n            max = Math.round(result.max).toString();\n            mean = Math.round(result.mean).toString();\n            last = Math.round(result.last).toString();\n        }\n        if (this.minText !== null) {\n            this.minText.textContent = \"min: \\u00A0\" + min + this.unitName;\n        }\n        if (this.maxText !== null) {\n            this.maxText.textContent = \"max: \\u00A0\" + max + this.unitName;\n        }\n        if (this.meanText !== null) {\n            this.meanText.textContent = \"mean: \" + mean + this.unitName;\n        }\n        if (this.lastText !== null) {\n            this.lastText.textContent = \"last: \" + last + this.unitName;\n        }\n        if (this.ctx !== null) {\n            this.ctx.fillStyle = \"#010\";\n            this.ctx.fillRect(0, 0, MonitorGraphWidth, MonitorGraphHeight);\n            this.ctx.fillStyle = \"#0f0\";\n            this.samples.each(function (v, i) {\n                _this.ctx.fillRect(i, MonitorGraphHeight, 1, -(v * scale));\n            });\n        }\n    };\n    return MonitorWidget;\n}(Widget));\nvar CounterWidget = (function (_super) {\n    __extends(CounterWidget, _super);\n    function CounterWidget(name, counter) {\n        var _this = _super.call(this, name) || this;\n        _this.counter = counter;\n        _this.text = document.createElement(\"div\");\n        _this.element.appendChild(_this.text);\n        return _this;\n    }\n    CounterWidget.prototype.sync = function () {\n        this.text.textContent = this.name + \": \" + this.counter.value;\n    };\n    return CounterWidget;\n}(Widget));\n\nvar container = null;\nvar initialized = false;\n/**\n * Initialize Performance Monitor.\n */\nfunction initPerfMonitor(options) {\n    if (!initialized) {\n        if (options.container) {\n            container = options.container;\n        }\n        initialized = true;\n    }\n}\n/**\n * Check that everything is properly initialized.\n */\nfunction checkInit() {\n    if (!container) {\n        container = document.createElement(\"div\");\n        container.style.cssText = \"position: fixed;\" +\n            \"opacity: 0.9;\" +\n            \"right: 0;\" +\n            \"bottom: 0\";\n        document.body.appendChild(container);\n    }\n    initialized = true;\n}\n/**\n * Start FPS monitor\n */\nfunction startFPSMonitor(flags) {\n    if (flags === void 0) { flags = MonitorWidgetFlags.HideMin | MonitorWidgetFlags.HideMax |\n        MonitorWidgetFlags.HideMean | MonitorWidgetFlags.RoundValues; }\n    checkInit();\n    var data = new MonitorSamples(MonitorMaxSamples);\n    var w = new MonitorWidget(\"FPS\", flags, \"\", data);\n    container.appendChild(w.element);\n    var alpha = 2 / 121;\n    var last = 0;\n    var fps = 60;\n    function update(now) {\n        if (last > 0) {\n            fps += alpha * ((1000 / (now - last)) - fps);\n        }\n        last = now;\n        data.addSample(fps);\n        w.invalidate();\n        requestAnimationFrame(update);\n    }\n    requestAnimationFrame(update);\n}\n/**\n * Start Memory Monitor\n */\nfunction startMemMonitor(flags) {\n    if (flags === void 0) { flags = MonitorWidgetFlags.HideMin | MonitorWidgetFlags.HideMean; }\n    checkInit();\n    if (performance.memory === undefined) {\n        return;\n    }\n    var data = new MonitorSamples(MonitorMaxSamples);\n    var w = new MonitorWidget(\"Memory\", flags, \"MB\", data);\n    container.appendChild(w.element);\n    function update() {\n        data.addSample(Math.round(performance.memory.usedJSHeapSize / (1024 * 1024)));\n        w.invalidate();\n        setTimeout(update, 30);\n    }\n    update();\n}\nvar ProfilerDetails = (function () {\n    function ProfilerDetails(name, unitName, flags) {\n        this.data = new MonitorSamples(MonitorMaxSamples);\n        this.widget = new MonitorWidget(name, flags, unitName, this.data);\n        this.startTime = -1;\n    }\n    return ProfilerDetails;\n}());\nvar profilerInstances = {};\nvar CounterDetails = (function () {\n    function CounterDetails(name, interval) {\n        var _this = this;\n        this.data = interval === undefined ? new BasicCounter() : new SlidingCounter(interval);\n        this.widget = new CounterWidget(name, this.data);\n        this.data.onChange = function () {\n            _this.widget.invalidate();\n        };\n    }\n    return CounterDetails;\n}());\nvar counterInstances = {};\n/**\n * Initialize profiler and insert into container.\n */\nfunction initProfiler(name, flags) {\n    if (flags === void 0) { flags = 0; }\n    checkInit();\n    var profiler = profilerInstances[name];\n    if (profiler === void 0) {\n        profilerInstances[name] = profiler = new ProfilerDetails(name, \"ms\", flags);\n        container.appendChild(profiler.widget.element);\n    }\n}\n/**\n * Initialize counter and insert into container.\n */\nfunction initCounter(name, interval) {\n    checkInit();\n    var counter = counterInstances[name];\n    if (counter === void 0) {\n        counterInstances[name] = counter = new CounterDetails(name, interval);\n        container.appendChild(counter.widget.element);\n    }\n}\nfunction startProfile(name) {\n    var profiler = profilerInstances[name];\n    if (profiler !== void 0) {\n        profiler.startTime = performance.now();\n    }\n}\nfunction endProfile(name) {\n    var now = performance.now();\n    var profiler = profilerInstances[name];\n    if (profiler !== void 0 && profiler.startTime !== -1) {\n        profiler.data.addSample(now - profiler.startTime);\n        profiler.widget.invalidate();\n    }\n}\nfunction count(name, value) {\n    if (value === void 0) { value = 1; }\n    var counter = counterInstances[name];\n    if (counter !== void 0) {\n        counter.data.inc(value);\n    }\n}\n/**\n * lookup a profile by name\n * @param name the name of the profile to lookup\n */\nfunction getProfile(name) {\n    return profilerInstances[name];\n}\n/**\n * lookup a counter by name\n * @param name the name of the counter to lookup\n */\nfunction getCounter(name) {\n    return counterInstances[name];\n}\n\nexport { initPerfMonitor, startFPSMonitor, startMemMonitor, ProfilerDetails, CounterDetails, initProfiler, initCounter, startProfile, endProfile, count, getProfile, getCounter, MonitorSamplesResult, MonitorMaxSamples, MonitorSamples, BasicCounter, SlidingCounter, Widget, MonitorWidgetFlags, MonitorWidget, CounterWidget };\n","import { statelessComponent, render, context, connect, mapRange, _ } from \"ivi\";\nimport { span, div } from \"ivi-html\";\nimport { startFPSMonitor, startMemMonitor, initProfiler, startProfile, endProfile } from \"perf-monitor\";\nfunction randomColor() {\n    return \"#\" + Math.floor(Math.random() * 16777215).toString(16);\n}\nfunction generateData() {\n    var result = new Array(10000);\n    for (var i = 0; i < 10000; i++) {\n        result[i] = randomColor();\n    }\n    return result;\n}\nfunction updateData(data, mutations) {\n    if (mutations > 0) {\n        if (mutations === 1) {\n            for (var i = 0; i < 10000; i++) {\n                data[i] = randomColor();\n            }\n        }\n        else {\n            for (var i = 0; i < 10000; i++) {\n                if (Math.random() < mutations) {\n                    data[i] = randomColor();\n                }\n            }\n        }\n    }\n}\nvar Pixel = connect(function (prev, props, ctx) {\n    var color = ctx.data[props];\n    if (prev && prev.color === color) {\n        return prev;\n    }\n    return { color: color };\n}, function (props) {\n    return span(\"pixel\", _, { \"background\": props.color });\n});\nvar PixelImage = statelessComponent(function (colors) { return (div(\"image\").c(mapRange(0, 100, function (i) {\n    var offset = i * 100;\n    return div(\"row\").k(i).c(mapRange(0, 100, function (j) { return Pixel(offset + j).k(j); }));\n}))); });\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n    startFPSMonitor();\n    startMemMonitor();\n    initProfiler(\"data update\");\n    initProfiler(\"view update\");\n    var mutations = 0.5;\n    var sliderContainer = document.createElement(\"div\");\n    sliderContainer.style.margin = \"0 auto\";\n    sliderContainer.style.width = \"80%\";\n    var slider = document.createElement(\"input\");\n    slider.type = \"range\";\n    slider.style.width = \"100%\";\n    slider.addEventListener(\"change\", function (e) {\n        mutations = Number.parseFloat(e.target.value) / 100;\n    });\n    sliderContainer.appendChild(slider);\n    document.body.insertBefore(sliderContainer, document.body.firstChild);\n    var data = generateData();\n    var ctx = {\n        data: data,\n    };\n    var container = document.getElementById(\"app\");\n    render(context(ctx, PixelImage(data)), container);\n    function tick() {\n        startProfile(\"data update\");\n        updateData(data, mutations);\n        endProfile(\"data update\");\n        startProfile(\"view update\");\n        render(context(ctx, PixelImage(data)), container);\n        endProfile(\"view update\");\n        requestAnimationFrame(tick);\n    }\n    requestAnimationFrame(tick);\n});\n"],"sourceRoot":""}