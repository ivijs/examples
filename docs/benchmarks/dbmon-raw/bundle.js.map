{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:////home/void/w/ts/ivi/packages/ivi/src/core/shortcuts.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/vdom/operations.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/core/token.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/core/box.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/core/error.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/core/noop.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/core/array.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/core/repeatable_task_list.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/dom/shortcuts.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/dom/namespaces.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/vdom/state.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/vdom/context.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/vdom/reconciler.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/vdom/root.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/scheduler/index.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/vdom/factories.ts","webpack:////home/void/w/ts/ivi/packages/ivi-html/src/index.ts","webpack:////home/void/w/ts/ivi-examples/node_modules/perf-monitor/dist/es5/perf-monitor.js","webpack:///./src/css.ts","webpack:///./src/init.ts","webpack:///./src/state.ts","webpack:///./src/main.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_","createOpType","f","TRACK_BY_KEY","createOpNode","operations_key","k","v","TrackByKey","items","TASK_TOKEN","SELECT_TOKEN","UNMOUNT_TOKEN","box","ERROR_HANDLERS","error","catchError","fn","apply","arguments","e","forEach","h","NOOP","unorderedArrayDeleteByIndex","array","index","length","last","pop","runRepeatableTasks","tasks","getDescriptor","getOwnPropertyDescriptor","nodeProto","Node","elementProto","Element","doc","document","objectHasOwnProperty","nodeInsertBefore","insertBefore","nodeRemoveChild","removeChild","nodeCloneNode","replaceChild","cloneNode","elementSetAttribute","setAttribute","elementRemoveAttribute","setAttributeNS","removeAttribute","nodeSetTextContent","set","elementSetClassName","htmlElementGetStyle","HTMLElement","svgElementGetStyle","SVGElement","SVG_NAMESPACE","createStateNode","_nextNode","_deepStateFlags","context_n","pushContext","setContext","_pushDeepState","_popDeepState","prev","current","getDOMNode","opState","_dirtyCheck","parentElement","moveNode","singleChild","state","deepState","_update","_moveNodes","flags","children","_unmountWalk","u","_unmountRemove","_unmount","_mountText","op","node","createTextNode","_createElement","opType","svg","a","tagName","createElementNS","createElement","_updateClassName","_updateAttrs","_mountObject","deepStateFlags","prevState","_mount","Array","_mountFragment","childrenOps","newChildren","nextOp","nodeValue","opStateChildren","prevData","nextData","nextValue","_updateChildrenTrackByKeys","b","j","result","aEnd","bEnd","start","outer","pos","updated","aLength","bLength","sources","keyIndex","Map","seq","lis","slice","element","className","_updateStyle","style","bValue","setProperty","removeProperty","matchCount","keys","_updateAttr","next","ROOTS","findRoot","predicate","find","dirtyCheck","root","container","run","_flags","_frameStartTime","_resolvedPromise","Promise","resolve","_microtasks","_mutationEffects","_layoutEffects","_beforeMutations","_afterMutations","withSchedulerTick","inner","runMicrotasks","withNextFrame","time","_handleNextFrame","_handleNextFrameSync","requestNextFrame","task","push","then","requestAnimationFrame","requestDirtyCheck","render","elementFactory","tag","type","htmlElementFactory","div","span","table","tbody","td","tr","extendStatics","MonitorWidgetFlags","MonitorMaxSamples","MonitorSamplesResult","min","max","mean","this","MonitorSamples","maxSamples","samples","_i","addSample","each","calc","sum","frameTasks","rafId","__extends","setPrototypeOf","__proto__","__","constructor","MonitorGraphHeight","MonitorGraphWidth","Widget","_this","_sync","sync","_dirty","cssText","invalidate","Error","MonitorWidget","_super","unitName","label","textContent","text","HideMin","minText","appendChild","HideMax","maxText","HideMean","meanText","HideLast","lastText","HideGraph","canvas","width","height","ctx","getContext","scale","RoundValues","toFixed","Math","round","toString","fillStyle","fillRect","perf_monitor_container","CounterWidget","counter","checkInit","body","startFPSMonitor","data","w","fps","update","now","startMemMonitor","undefined","performance","memory","usedJSHeapSize","setTimeout","ProfilerDetails","widget","startTime","profilerInstances","initProfiler","profiler","endProfile","queryClassName","elapsed","countClassName","count","mutations","N","parseQueryString","split","decodeURIComponent","replace","randomQuery","query","random","randomQueries","queries","floor","EMPTY_QUERY","_nextId","createDB","id","getTopFiveQueries","db","qs","sort","randomUpdate","entryFormatElapsed","minutes","comps","padStart","arrow","Popover","Cell","Row","topFiveQueries","Main","dbs","map","window","location","search","substr","parseInt","parseFloat","addEventListener","sliderContainer","display","slider","marginBottom","marginTop","Number","target","firstChild","init","main_state","createState","main_container","getElementById","tick"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","/**\n * Shortcut for an `undefined` value.\n */\nexport const _ = void 0;\n","import { EventHandler } from \"../events/event_handler\";\nimport { NodeFlags } from \"./node_flags\";\nimport { ElementProtoDescriptor } from \"./element_proto\";\nimport { ComponentDescriptor, StatelessComponentDescriptor } from \"./component\";\nimport { ContextDescriptor, ContextState } from \"./context\";\n\n/**\n * Operation type.\n */\nexport interface OpType {\n  /**\n   * See {@link NodeFlags} for details.\n   */\n  readonly f: NodeFlags;\n  /**\n   * Operation type descriptor.\n   */\n  readonly d:\n  | StatelessComponentDescriptor\n  | ComponentDescriptor\n  | ElementProtoDescriptor\n  | ContextDescriptor\n  | string\n  | null;\n}\n\n/**\n * createOpType creates {@link OpType} instances.\n *\n * @param f See {@link NodeFlags} for details.\n * @param d Operation type descriptor.\n * @returns {@link OpType} instance.\n */\nexport const createOpType = (\n  f: NodeFlags,\n  d: StatelessComponentDescriptor | ComponentDescriptor | ElementProtoDescriptor | ContextDescriptor | string | null,\n): OpType => ({ f, d });\n\n/**\n * OpType for Events nodes.\n */\nexport const EVENTS = createOpType(NodeFlags.Events, null);\n\n/**\n * OpType for Context state nodes.\n */\nexport const SET_CONTEXT_STATE = createOpType(NodeFlags.Context | NodeFlags.SetContextState, null);\n\n/**\n * OpType for TrackByKey nodes.\n */\nexport const TRACK_BY_KEY = createOpType(NodeFlags.TrackByKey, null);\n\n/**\n * Operation node.\n *\n * @typeparam T Operation data type.\n */\nexport interface OpNode<T = any> {\n  /**\n   * Operation type.\n   */\n  readonly t: OpType;\n  /**\n   * Operation data.\n   */\n  readonly d: T;\n}\n\n/**\n * createOpNode creates an {@link OpNode} instance.\n *\n * @typeparam T Operation data type.\n * @param t Operation type.\n * @param d Operation data.\n * @returns {@link OpNode} instance.\n */\nexport const createOpNode = <T>(t: OpType, d: T): OpNode<T> => ({ t, d });\n\n/**\n * Operation data for element operations.\n *\n * @typeparam T Element attributes type.\n */\nexport interface ElementData<T = any> {\n  /**\n   * Element class name.\n   */\n  readonly n: string | undefined;\n  /**\n   * Element attributes.\n   */\n  readonly a: T | undefined;\n  /**\n   * Children operations.\n   */\n  readonly c: Op;\n}\n\n/**\n * Element operation.\n */\nexport type ElementOp<T = any> = OpNode<ElementData>;\n\n/**\n * Operation.\n */\nexport type Op = string | number | OpNode | OpArray | null;\n\n/**\n * Recursive operation array.\n */\nexport interface OpArray extends Array<Op> { }\n\n/**\n * Generic operation data for operations that has children nodes.\n *\n * @typeparam T Additional data type.\n */\nexport interface OpData<T = any> {\n  /**\n   * Generic value.\n   */\n  readonly v: T;\n  /**\n   * Children operation nodes.\n   */\n  readonly c: Op;\n}\n\n/**\n * Operation data for Events operations.\n */\nexport type EventsData = OpData<EventHandler>;\n\n/**\n * Events operation.\n */\nexport type EventsOp = OpNode<EventsData>;\n\n/**\n * Operation data for Context operations.\n */\nexport type ContextData<T = any> = OpData<T>;\n\n/**\n * Context operation.\n */\nexport type ContextOp<T = any> = OpNode<ContextData<T>>;\n\n/**\n * Set context state operation.\n */\nexport type SetContextStateOp = OpNode<OpData<ContextState>>;\n\n/**\n * Operation factory for event handlers.\n *\n * @example\n *\n *     render(\n *       Events(onClick(() => { console.log(\"clicked\"); }),\n *         ChildComponent(),\n *       ),\n *       DOMContainer,\n *     );\n *\n * @param v Event handlers.\n * @param c Children operation nodes.\n * @returns Events handler operation.\n */\nexport const Events = (\n  v: EventHandler,\n  c: Op,\n): OpNode<EventsData> => createOpNode(EVENTS, { v, c });\n\n/**\n * Operation factory for set context state operation.\n *\n * @param v Context state.\n * @param c Children operation nodes.\n * @returns Set context state operation.\n */\nexport const SetContextState = (v: ContextState, c: Op) => createOpNode(SET_CONTEXT_STATE, { v, c });\n\n/**\n * Key is an object that is used by TrackByKey operations to track operations.\n *\n * @typeparam K Key type.\n * @typeparam V Value type.\n */\nexport interface Key<K, V> {\n  /**\n   * Key.\n   */\n  readonly k: K;\n  /**\n   * Value.\n   */\n  readonly v: V;\n}\n\n/**\n * key creates a {@link Key} instance.\n *\n * @typeparam K Key type.\n * @typeparam V Value type.\n * @param k Key.\n * @param v Value.\n * @returns {@link Key} instance.\n */\nexport const key = <K, V>(k: K, v: V): Key<K, V> => ({ k, v });\n\n/**\n * TrackByKey operation.\n */\nexport type TrackByKeyOp<K, V> = OpNode<Key<K, V>>;\n\n/**\n * Operation factory for track by key nodes.\n *\n * @example\n *\n *     const items = [1, 2, 3];\n *     render(\n *       TrackByKey(items.map((item) => key(item, div(_, _, item))),\n *       DOMContainer,\n *     );\n *\n * @typeparam K Key type.\n * @param items Keyed operations.\n * @returns Track by key operation.\n */\nexport const TrackByKey = process.env.NODE_ENV !== \"production\" ?\n  <T>(items: Key<T, Op>[]) => {\n    const keys = new Set<T>();\n    for (let i = 0; i < items.length; i++) {\n      const { k } = items[i];\n      if (keys.has(k)) {\n        throw new Error(`Invalid key, found duplicated key: ${k}`);\n      }\n      keys.add(k);\n    }\n    return createOpNode(TRACK_BY_KEY, items);\n  } :\n  /* istanbul ignore next */ <T>(items: Key<T, Op>[]) => createOpNode(TRACK_BY_KEY, items);\n","export interface TaskToken {\n  readonly $$label?: \"ivi-task-token\";\n}\n\nexport interface SelectToken {\n  readonly $$label?: \"ivi-select-token\";\n}\n\nexport interface UnmountToken {\n  readonly $$label?: \"ivi-unmount-token\";\n}\n\n/**\n * Task token.\n */\nexport const TASK_TOKEN: TaskToken = (\n  process.env.NODE_ENV !== \"production\" ? Object.freeze({}) : /* istanbul ignore next */{}\n);\n\n/**\n * Select token.\n */\nexport const SELECT_TOKEN: SelectToken = (\n  process.env.NODE_ENV !== \"production\" ? Object.freeze({}) : /* istanbul ignore next */{}\n);\n\n/**\n * Unmount token.\n */\nexport const UNMOUNT_TOKEN: UnmountToken = (\n  process.env.NODE_ENV !== \"production\" ? Object.freeze({}) : /* istanbul ignore next */{}\n);\n\n/**\n * Empty object.\n */\nexport const EMPTY_OBJECT = process.env.NODE_ENV !== \"production\" ? Object.freeze({}) : /* istanbul ignore next */{};\n\n/**\n * Empty array.\n */\nexport const EMPTY_ARRAY = process.env.NODE_ENV !== \"production\" ? Object.freeze([]) : /* istanbul ignore next */[];\n","/**\n * Boxed value.\n *\n * @typeparam T Value type.\n */\nexport interface Box<T> {\n  v: T;\n}\n\n/**\n * box creates a boxed value.\n *\n * @typeparam T Value type.\n * @param v Value.\n * @returns Boxed value.\n */\nexport const box = <T>(v: T) => ({ v });\n","const ERROR_HANDLERS: Array<(e: any) => void> = [];\nlet error = false;\n\n/**\n * addErrorHandler adds an error handler for errors catched by functions decorated with `catchError()`.\n *\n * @param handler error handler.\n */\nexport function addErrorHandler(handler: (e: any) => void): void {\n  ERROR_HANDLERS.push(handler);\n}\n\n/**\n * catchError is a decorator that catches exceptions and invokes error handlers registered with `addErrorHandler()`.\n *\n * @noinline\n * @throws\n * @param fn - Function to decorate\n * @returns function decorated with a catchError\n */\nexport function catchError<T>(fn: (...args: any[]) => T): (...args: any[]) => T;\nexport function catchError<T>(fn: Function): (...args: any[]) => T {\n  return function () {\n    if (!error) {\n      try {\n        return fn.apply(void 0, arguments);\n      } catch (e) {\n        error = true;\n        ERROR_HANDLERS.forEach((h) => { h(e); });\n        throw e;\n      }\n    }\n  };\n}\n","/**\n * NOOP function.\n */\nexport const NOOP = () => { /**/ };\n\n/**\n * NOOP_FALSE function always returns `false` value.\n *\n * @returns `false` value.\n */\nexport const NOOP_FALSE = () => false;\n\n/**\n * NOOP_TRUE function always returns `true` value.\n *\n * @returns `true` value.\n */\nexport const NOOP_TRUE = () => true;\n","/**\n * append pushes item to an array and automatically creates a new array when it doesn't exist.\n *\n * @typeparam T Item type.\n * @param array Array.\n * @param item Item to append.\n * @returns Array.\n */\nexport const append = <T>(array: T[] | null, item: T) => array === null ? [item] : (array.push(item), array);\n\n/**\n * unorderedArrayDeleteByIndex deletes item from an array with O(1) complexity.\n *\n * It swaps item at `index` position with the last item and removes the last one.\n *\n * @typeparam T Item type.\n * @param array Array.\n * @param index Index of an item to delete.\n */\nexport function unorderedArrayDeleteByIndex<T>(array: T[], index: number): void {\n  const length = array.length - 1;\n  const last = array.pop();\n  if (index !== length) {\n    array[index] = last!;\n  }\n}\n\n/**\n * unorderedArrayDelete deletes item from an array with O(1) complexity.\n *\n * It swaps item at `index` position with the last item and deletes the last one.\n *\n * @typeparam T Item type.\n * @param array Array.\n * @param item Item to delete.\n */\nexport function unorderedArrayDelete<T>(array: T[], item: T): void {\n  const index = array.indexOf(item);\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== \"production\") {\n    if (index === -1) {\n      throw new Error(`Failed to delete an item from an array, item doesn't exist in the array`);\n    }\n  }\n  unorderedArrayDeleteByIndex(array, index);\n}\n","import { unorderedArrayDeleteByIndex } from \"./array\";\n\n/**\n * RepeatableTaskList is a data structure for tasks that will be repeated until they return `true` value.\n */\nexport type RepeatableTaskList = Array<() => boolean | void>;\n\n/**\n * runRepeatableTasks runs repeatable tasks.\n *\n * @param tasks Repeatable tasks.\n */\nexport function runRepeatableTasks(tasks: RepeatableTaskList): void {\n  for (let i = 0; i < tasks.length; ++i) {\n    if (tasks[i]() === true) {\n      unorderedArrayDeleteByIndex(tasks, i--);\n    }\n  }\n}\n","/**\n * Shortcuts for DOM methods and properties are used to reduce megamorphic callsites in the codebase.\n *\n * In many synthetic microbenchmarks it is most likely will be slower, unless synthetic benchmark is implemented with\n * many different html/svg elements. But it is definitely should make it faster in complex real applications.\n *\n * Since Chrome 74, issue with native accessors is finally fixed: https://bugs.chromium.org/p/v8/issues/detail?id=8820\n */\n\n/**\n * `Object.getOwnPropertyDescriptor(o, p)`\n *\n * @param o Object.\n * @param p Property name.\n * @returns Property Descriptor.\n */\nconst getDescriptor = (o: any, p: string | number | symbol) => Object.getOwnPropertyDescriptor(o, p);\n\nconst nodeProto = process.env.IVI_TARGET === \"ssr\" ? void 0 : Node.prototype;\nconst elementProto = process.env.IVI_TARGET === \"ssr\" ? void 0 : Element.prototype;\n\n/**\n * Shortcut for a `Document`.\n */\nexport const doc = (process.env.IVI_TARGET === \"ssr\" ? void 0 : document) as Document;\n\n/**\n * Shortcut for an `Object.prototype.hasOwnProperty`.\n */\nexport const objectHasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Shortcut for a `Node.prototype.insertBefore`.\n */\nexport const nodeInsertBefore = process.env.IVI_TARGET === \"ssr\" ? void 0 : nodeProto!.insertBefore;\n\n/**\n * Shortcut for a `Node.prototype.removeChild`.\n */\nexport const nodeRemoveChild = process.env.IVI_TARGET === \"ssr\" ? void 0 : nodeProto!.removeChild;\n\n/**\n * Shortcut for a `Node.prototype.replaceChild`.\n */\nexport const nodeReplaceChild = process.env.IVI_TARGET === \"ssr\" ? void 0 : nodeProto!.replaceChild;\n\n/**\n * Shortcut for a `Node.prototype.cloneNode`.\n */\nexport const nodeCloneNode = process.env.IVI_TARGET === \"ssr\" ? void 0 : nodeProto!.cloneNode;\n\n/**\n * Shortcut for an `Element.prototype.setAttribute`.\n */\nexport const elementSetAttribute = process.env.IVI_TARGET === \"ssr\" ? void 0 : elementProto!.setAttribute;\n\n/**\n * Shortcut for an `Element.prototype.setAttributeNS`.\n */\nexport const elementSetAttributeNS = process.env.IVI_TARGET === \"ssr\" ? void 0 : elementProto!.setAttributeNS;\n\n/**\n * Shortcut for an `Element.prototype.removeAttribute`.\n */\nexport const elementRemoveAttribute = process.env.IVI_TARGET === \"ssr\" ? void 0 : elementProto!.removeAttribute;\n\n/**\n * Shortcut for a `Node.textContent = value`.\n */\nexport const nodeSetTextContent = (\n  process.env.IVI_TARGET === \"ssr\" ? void 0 :\n    getDescriptor(nodeProto, \"textContent\")!.set\n);\n\n/**\n * Shortcut for an `Element.className = value`.\n */\nexport const elementSetClassName = (\n  process.env.IVI_TARGET === \"ssr\" ? void 0 :\n    getDescriptor(elementProto, \"className\")!.set\n);\n\n/**\n * Shortcut for a `HTMLElement.style`.\n */\nexport const htmlElementGetStyle = (\n  process.env.IVI_TARGET === \"ssr\" ? void 0 :\n    getDescriptor(HTMLElement.prototype, \"style\")!.get\n);\n\n/**\n * Shortcut for a `SVGElement.style`.\n */\nexport const svgElementGetStyle = (\n  process.env.IVI_TARGET === \"ssr\" ? void 0 :\n    getDescriptor(SVGElement.prototype, \"style\")!.get\n);\n","export const SVG_NAMESPACE = \"http://www.w3.org/2000/svg\";\nexport const XLINK_NAMESPACE = \"http://www.w3.org/1999/xlink\";\nexport const XML_NAMESPACE = \"http://www.w3.org/XML/1998/namespace\";\n","import { NodeFlags } from \"./node_flags\";\nimport { Op } from \"./operations\";\n\n/**\n * Operation state.\n *\n * @typeparam T Internal state type.\n */\nexport interface OpState<T = any> {\n  /**\n   * Operation.\n   */\n  o: Op;\n  /**\n   * See {@link NodeFlags} for details.\n   */\n  f: NodeFlags;\n  /**\n   * State for children operations.\n   */\n  c: OpState | Array<OpState | null> | null;\n  /**\n   * Current state.\n   */\n  s: T;\n}\n\n/**\n * createStateNode creates a {@link StateNode} instance.\n *\n * @param op Operation.\n * @returns {@link StateNode} instance.\n */\nexport const createStateNode = (o: Op): OpState => (\n  { o, f: 0, c: null, s: null }\n);\n","import { createOpType, createOpNode, OpType, ContextOp, Op } from \"./operations\";\nimport { NodeFlags } from \"./node_flags\";\n\n/**\n * Context descriptor.\n */\nexport interface ContextDescriptor<T = any> {\n  /**\n   * Retrieves context value.\n   */\n  get(): T;\n  /**\n   * Creates a context operation.\n   */\n  set(value: T, children: Op): ContextOp<T>;\n}\n\n/**\n * Context state.\n */\nexport interface ContextState<T = any> {\n  /**\n   * Next state.\n   */\n  readonly n: ContextState | null;\n  /**\n   * Descriptor.\n   */\n  readonly d: ContextDescriptor<T>;\n  /**\n   * Context value.\n   */\n  v: T;\n}\n\n/**\n * Current context.\n */\nlet n: ContextState | null = null;\n\n/**\n * Used for detecting invalid `ContextDescriptor()` invocations in DEBUG mode.\n */\nlet contextEnabled = false;\n\n/**\n * Enable checking for invalid `context()` invocations in DEBUG mode.\n */\nexport function enableContext() {\n  contextEnabled = true;\n}\n\n/**\n * Disable checking for invalid `context()` invocations in DEBUG mode.\n */\nexport function disableContext() {\n  contextEnabled = false;\n}\n\n/**\n * Reset current context.\n */\nexport function resetContext() {\n  n = null;\n}\n\n/**\n * pushContext creates a new context state and pushes it to the context stack.\n *\n * @param d Context descriptor.\n * @param v Context value.\n * @returns New {@link ContextState}.\n */\nexport function pushContext<T = any>(d: ContextDescriptor<T>, v: T): ContextState<T> {\n  return n = { n, d, v };\n}\n\n/**\n * getContext retrieves current context.\n *\n * @returns current context.\n */\nexport function getContext(): ContextState | null {\n  return n;\n}\n\n/**\n * setContext assigns current context.\n *\n * Should be executed before going deeper into context node.\n *\n * @param c Current context.\n */\nexport function setContext(c: ContextState | null): ContextState | null {\n  return n = c;\n}\n\n/**\n * contextValue creates a context descriptor.\n *\n * @example\n *\n *     const { set: StoreContext, get: getStore } = contextValue<Store>();\n *     const Component = component((c) => {\n *       const getValue = useSelect(c, () => getStore().value);\n *       return () => getValue();\n *     });\n *     render(\n *       StoreContext(store,\n *         Component(),\n *       ),\n *       container,\n *     );\n *\n * @returns {@link ContextDescriptor}\n */\nexport function contextValue<T = any>(): ContextDescriptor<T> {\n  let type: OpType;\n  const d = {\n    get: (): T | void => {\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== \"production\") {\n        if (!contextEnabled) {\n          throw Error(\"Invalid context invocation\");\n        }\n      }\n\n      let next = n;\n      while (next !== null) {\n        if (next.d === d) {\n          return next.v;\n        }\n        next = next.n;\n      }\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== \"production\") {\n        throw Error(\"Unable to find context value\");\n      }\n    },\n    set: (v: T, c: Op) => createOpNode(type, { v, c }),\n  };\n  type = createOpType(NodeFlags.Context, d as ContextDescriptor<T>);\n  return d as ContextDescriptor<T>;\n}\n","import { SELECT_TOKEN, UNMOUNT_TOKEN } from \"../core\";\nimport {\n  doc, objectHasOwnProperty,\n  nodeInsertBefore, nodeRemoveChild, elementSetAttribute, nodeCloneNode, nodeSetTextContent, elementRemoveAttribute,\n  elementSetClassName, htmlElementGetStyle, svgElementGetStyle,\n} from \"../dom/shortcuts\";\nimport { SVG_NAMESPACE } from \"../dom/namespaces\";\nimport { CSSStyleProps } from \"../dom/style\";\nimport { NodeFlags } from \"./node_flags\";\nimport { AttributeDirective } from \"./attribute_directive\";\nimport { OpNode, ElementData, OpArray, Key, ContextData, Op, EventsData } from \"./operations\";\nimport { OpState, createStateNode } from \"./state\";\nimport { ElementProtoDescriptor } from \"./element_proto\";\nimport { ComponentDescriptor, ComponentHooks, StatelessComponentDescriptor } from \"./component\";\nimport { setContext, pushContext, ContextDescriptor, ContextState } from \"./context\";\n\nlet _nextNode!: Node | null;\nlet _deepStateFlags!: NodeFlags;\n\nexport function _resetState(): void {\n  _nextNode = null;\n  _deepStateFlags = 0;\n}\n\nfunction _pushDeepState(): NodeFlags {\n  const s = _deepStateFlags;\n  _deepStateFlags = 0;\n  return s;\n}\n\nconst _popDeepState = (prev: NodeFlags, current: NodeFlags): NodeFlags => (\n  current |= _deepStateFlags,\n  _deepStateFlags |= prev,\n  current\n);\n\n/**\n * VisitNodesDirective controls the traversal algorithm.\n */\nexport const enum VisitNodesDirective {\n  /**\n   * Continue traversing the tree.\n   */\n  Continue = 0,\n  /**\n   * Stops immediately.\n   */\n  StopImmediate = 1,\n  /**\n   * Stops traversing through children nodes.\n   */\n  Stop = 1 << 1,\n}\n\n/**\n * visitNodes traverses the operation state tree and invokes `visitor` function for each state node.\n *\n * @param opState State node.\n * @param visitor Visitor function.\n * @returns {@link VisitNodesFlags}\n */\nexport function visitNodes(opState: OpState, visitor: (opState: OpState) => VisitNodesDirective): VisitNodesDirective;\nexport function visitNodes(\n  opState: OpState | null,\n  visitor: (opState: OpState) => VisitNodesDirective,\n): VisitNodesDirective {\n  let i = visitor(opState!);\n  if (i !== VisitNodesDirective.Continue) {\n    return (i & VisitNodesDirective.StopImmediate);\n  }\n\n  const { f, c } = opState!;\n  if ((f & (NodeFlags.Fragment | NodeFlags.TrackByKey)) !== 0) {\n    for (i = 0; i < (c as Array<OpState | null>).length; i++) {\n      if (\n        (opState = (c as Array<OpState | null>)[i]) !== null &&\n        (visitNodes(opState, visitor) & VisitNodesDirective.StopImmediate) !== 0\n      ) {\n        return VisitNodesDirective.StopImmediate;\n      }\n    }\n  } else if (c !== null) {\n    return visitNodes(c as OpState, visitor);\n  }\n  return VisitNodesDirective.Continue;\n}\n\n/**\n * getDOMNode retrieves closest DOM node from the {@link OpState} instance.\n *\n * @param opState State node.\n * @returns DOM node.\n */\nexport function getDOMNode(opState: OpState): Node | null;\nexport function getDOMNode(opState: OpState | Array<OpState | null> | null): Node | null {\n  let i = (opState as OpState).f;\n  let c: OpState | null;\n  if ((i & (NodeFlags.Element | NodeFlags.Text)) === 0) {\n    opState = (opState as OpState).c;\n    if ((i & (NodeFlags.Fragment | NodeFlags.TrackByKey)) !== 0) {\n      for (i = 0; i < (opState as Array<OpState | null>).length; i++) {\n        if ((c = (opState as Array<OpState | null>)[i]) !== null) {\n          return getDOMNode(c);\n        }\n      }\n      return null;\n    }\n    if (opState === null) {\n      return null;\n    }\n    return getDOMNode(opState as OpState);\n  }\n  return (opState as OpState).s as Node;\n}\n\nexport function _dirtyCheck(\n  parentElement: Element,\n  opState: OpState,\n  moveNode: boolean,\n  singleChild: boolean,\n): void {\n  const f = opState.f;\n  let state;\n  let deepState;\n  let c;\n  let i;\n\n  if ((f & NodeFlags.Component) !== 0) {\n    state = opState.s as ComponentHooks;\n    c = opState.c as OpState | null;\n    deepState = _pushDeepState();\n    if (\n      ((f & NodeFlags.Stateful) !== 0) && (\n        ((f & NodeFlags.Dirty) !== 0) ||\n        (state.s !== null && state.s(SELECT_TOKEN) === true)\n      )\n    ) {\n      opState.c = _update(\n        parentElement,\n        c,\n        state.r!((opState.o as OpNode).d),\n        moveNode,\n        singleChild,\n      );\n    } else if ((f & NodeFlags.DeepStateDirtyCheck) !== 0) {\n      _dirtyCheck(parentElement, c as OpState, moveNode, singleChild);\n    } else {\n      if (moveNode === true) {\n        _moveNodes(parentElement, opState);\n      } else {\n        _nextNode = getDOMNode(opState);\n      }\n    }\n    opState.f = (opState.f & NodeFlags.SelfFlags) | _deepStateFlags;\n    _deepStateFlags |= deepState | ((opState.f & NodeFlags.DeepStateFlags) << NodeFlags.DeepStateShift);\n  } else if ((f & NodeFlags.DeepStateDirtyCheck) !== 0) {\n    // Checking for `children === null` is unnecessary, `DeepStateDirtyCheck` flag guarantees that element should\n    // have children nodes.\n    deepState = _pushDeepState();\n    c = opState.c as OpState | Array<OpState | null>;\n    if ((f & (NodeFlags.Element | NodeFlags.Text)) !== 0) {\n      state = opState.s as Node;\n      if (moveNode === true) {\n        nodeInsertBefore!.call(parentElement, state, _nextNode);\n      }\n      _dirtyCheck(state as Element, c as OpState, false, true);\n      _nextNode = state;\n    } else if ((f & (NodeFlags.Fragment | NodeFlags.TrackByKey)) !== 0) {\n      i = (c as Array<OpState | null>).length;\n      while (i > 0) {\n        if ((state = (c as Array<OpState | null>)[--i]) !== null) {\n          _dirtyCheck(parentElement, state, moveNode, false);\n        }\n      }\n    } else if ((f & NodeFlags.Events) !== 0) {\n      _dirtyCheck(parentElement, c as OpState, moveNode, singleChild);\n    } else {  // ((f & NodeFlags.Context) !== 0)\n      state = setContext(opState.s);\n      _dirtyCheck(parentElement, c as OpState, moveNode, singleChild);\n      setContext(state);\n    }\n    opState.f = _popDeepState(deepState, opState.f);\n  } else {\n    if (moveNode === true) {\n      _moveNodes(parentElement, opState);\n    } else {\n      _nextNode = getDOMNode(opState);\n    }\n  }\n}\n\nfunction _moveNodes(parentElement: Element, opState: OpState) {\n  const flags = opState.f;\n  let children;\n  let c;\n  let i;\n  if ((flags & (NodeFlags.Element | NodeFlags.Text)) !== 0) {\n    c = opState.s as Node;\n    nodeInsertBefore!.call(parentElement, c, _nextNode);\n    _nextNode = c;\n  } else {\n    children = opState.c;\n    if ((flags & (NodeFlags.Fragment | NodeFlags.TrackByKey)) !== 0) {\n      i = (children as Array<OpState | null>).length;\n      while (i > 0) {\n        if ((c = (children as Array<OpState | null>)[--i]) !== null) {\n          _moveNodes(parentElement, c);\n        }\n      }\n    } else if (children !== null) {\n      _moveNodes(parentElement, children as OpState);\n    }\n  }\n}\n\nfunction _unmountWalk(opState: OpState): void {\n  const flags = opState.f;\n  let children;\n  let i;\n  let v;\n\n  if ((flags & NodeFlags.DeepStateUnmount) !== 0) {\n    if ((children = opState.c) !== null) {\n      if ((flags & (NodeFlags.Fragment | NodeFlags.TrackByKey)) !== 0) {\n        for (i = 0; i < (children as Array<OpState | null>).length; i++) {\n          if ((v = (children as Array<OpState | null>)[i]) !== null) {\n            _unmountWalk(v);\n          }\n        }\n      } else {\n        _unmountWalk(children as OpState);\n      }\n    }\n  }\n\n  if ((flags & NodeFlags.Unmount) !== 0) {\n    if ((v = (opState.s as ComponentHooks).u) !== null) {\n      if (typeof v === \"function\") {\n        v(UNMOUNT_TOKEN);\n      } else {\n        for (i = 0; i < v.length; i++) {\n          v[i](UNMOUNT_TOKEN);\n        }\n      }\n    }\n  }\n}\n\nfunction _unmountRemove(parentElement: Element, opState: OpState, singleChild: boolean): void;\nfunction _unmountRemove(\n  parentElement: Element,\n  opState: OpState | Array<OpState | null> | null,\n  singleChild: boolean,\n): void {\n  let i = (opState as OpState).f;\n  let c;\n\n  if ((i & (NodeFlags.Element | NodeFlags.Text)) !== 0) {\n    nodeRemoveChild!.call(parentElement, (opState as OpState).s as Node);\n  } else {\n    opState = (opState as OpState).c;\n    if ((i & (NodeFlags.TrackByKey | NodeFlags.Fragment)) !== 0) {\n      if (singleChild === true) {\n        nodeSetTextContent!.call(parentElement, \"\");\n      } else {\n        for (i = 0; i < (opState as Array<OpState | null>).length; ++i) {\n          if ((c = (opState as Array<OpState | null>)[i]) !== null) {\n            _unmountRemove(parentElement, c, false);\n          }\n        }\n      }\n    } else if (opState !== null) {\n      _unmountRemove(parentElement, opState as OpState, singleChild);\n    }\n  }\n}\n\nexport function _unmount(parentElement: Element, opState: OpState, singleChild: boolean): void {\n  _unmountRemove(parentElement, opState, singleChild);\n  _unmountWalk(opState);\n}\n\nfunction _mountText(\n  parentElement: Element,\n  opState: OpState,\n  op: string | number,\n) {\n  const node = doc.createTextNode(op as string);\n  nodeInsertBefore!.call(parentElement, node, _nextNode);\n  _nextNode = node;\n  opState.s = node;\n  opState.f = NodeFlags.Text;\n}\n\nfunction _createElement(node: Element | undefined, op: OpNode<ElementData>): Element {\n  const opType = op.t;\n  const svg = (opType.f & NodeFlags.Svg) !== 0;\n  const { n, a } = op.d;\n  if (node === void 0) {\n    const tagName = opType.d as string;\n    node = svg ?\n      doc.createElementNS(SVG_NAMESPACE, tagName) :\n      doc.createElement(tagName);\n  }\n\n  if (n) {\n    _updateClassName(node, n, svg);\n  }\n\n  if (a !== void 0) {\n    _updateAttrs(node, void 0, a, svg);\n  }\n\n  return node;\n}\n\nfunction _mountObject(\n  parentElement: Element,\n  opState: OpState,\n  op: OpNode,\n): void {\n  const { t, d } = op;\n  const flags = t.f;\n  let deepStateFlags;\n  let prevState;\n  let value;\n  let node: Element | undefined;\n  let i;\n\n  if ((flags & NodeFlags.Component) !== 0) {\n    deepStateFlags = _pushDeepState();\n    if ((flags & NodeFlags.Stateful) !== 0) {\n      opState.s = prevState = { r: null, s: null, u: null } as ComponentHooks;\n      // Reusing value variable.\n      (prevState as ComponentHooks).r = value = (t.d as ComponentDescriptor).c(opState);\n    } else {\n      value = (t.d as StatelessComponentDescriptor).c;\n    }\n    opState.c = _mount(parentElement, value(d));\n    opState.f = (opState.f & NodeFlags.SelfFlags) | flags | _deepStateFlags;\n    _deepStateFlags |= deepStateFlags | ((opState.f & NodeFlags.DeepStateFlags) << NodeFlags.DeepStateShift);\n  } else {\n    deepStateFlags = _pushDeepState();\n    if ((flags & NodeFlags.Element) !== 0) {\n      value = t.d;\n      if ((flags & NodeFlags.ElementProto) !== 0) {\n        node = (value as ElementProtoDescriptor).n as Element;\n        if (node === null) {\n          (value as ElementProtoDescriptor).n = node = _createElement(\n            void 0,\n            (value as ElementProtoDescriptor).p,\n          );\n        }\n        node = nodeCloneNode!.call(node, false) as Element;\n      }\n      opState.s = node = _createElement(node, op);\n\n      prevState = _nextNode;\n      if ((value = d.c) !== null) {\n        _nextNode = null;\n        opState.c = _mount(node, value);\n      }\n      _nextNode = node;\n      nodeInsertBefore!.call(parentElement, node, prevState);\n    } else if ((flags & (NodeFlags.Events | NodeFlags.Context)) !== 0) {\n      if ((flags & NodeFlags.Context) !== 0) {\n        opState.s = prevState = ((flags & NodeFlags.SetContextState) !== 0) ?\n          setContext((d as ContextData).v) :\n          pushContext(t.d as ContextDescriptor, (d as ContextData).v);\n        opState.c = _mount(parentElement, (d as ContextData).c);\n        setContext(prevState);\n      } else {\n        opState.c = _mount(parentElement, (d as EventsData).c);\n      }\n    } else { // ((opFlags & NodeFlags.TrackByKey) !== 0)\n      i = (d as Key<any, OpNode>[]).length;\n      opState.c = value = Array(i);\n      while (i > 0) {\n        value[--i] = _mount(parentElement, (d as Key<any, OpNode>[])[i].v);\n      }\n    }\n    opState.f = _popDeepState(deepStateFlags, flags);\n  }\n}\n\nfunction _mountFragment(\n  parentElement: Element,\n  opState: OpState,\n  childrenOps: OpArray,\n): void {\n  let i = childrenOps.length;\n  const newChildren = Array(i);\n  const deepStateFlags = _pushDeepState();\n  while (i > 0) {\n    newChildren[--i] = _mount(parentElement, childrenOps[i]);\n  }\n  opState.c = newChildren;\n  opState.f = _popDeepState(deepStateFlags, NodeFlags.Fragment);\n}\n\nexport function _mount(\n  parentElement: Element,\n  op: Op,\n): OpState | null {\n  if (op !== null) {\n    const opState = createStateNode(op);\n    if (typeof op === \"object\") {\n      if (op instanceof Array) {\n        _mountFragment(parentElement, opState, op);\n      } else {\n        _mountObject(parentElement, opState, op);\n      }\n    } else {\n      _mountText(parentElement, opState, op);\n    }\n    return opState;\n  }\n  return null;\n}\n\n/**\n * _update updates a stateNode with a next operation.\n *\n * @param parentElement Parent DOM Element.\n * @param opState Operation state.\n * @param nextOp Next operation.\n * @param moveNode DOM Element should be moved.\n * @param singleChild Parent DOM Element contains a single child.\n * @returns OpNode state.\n */\nexport function _update(\n  parentElement: Element,\n  opState: OpState | null,\n  nextOp: Op,\n  moveNode: boolean,\n  singleChild: boolean,\n): OpState | null {\n  if (nextOp === null) {\n    if (opState !== null) {\n      _unmount(parentElement, opState, singleChild);\n    }\n    return null;\n  }\n  if (opState === null) {\n    return _mount(parentElement, nextOp);\n  }\n  /* tslint:disable:prefer-const */\n  const { f, o, s } = opState;\n  /* tslint:enable:prefer-const */\n\n  if ((f & NodeFlags.Text) !== 0) {\n    if (typeof nextOp !== \"object\") {\n      // Reassign to reduce memory consumption even if nextOp is strictly equal to the prev op.\n      opState.o = nextOp;\n      if (o !== nextOp) {\n        (s as Node).nodeValue = nextOp as string;\n      }\n      if (moveNode === true) {\n        nodeInsertBefore!.call(parentElement, s as Node, _nextNode);\n      }\n      _nextNode = s as Node;\n    } else {\n      nodeRemoveChild!.call(parentElement, s as Node);\n      return _mount(parentElement, nextOp);\n    }\n  } else {\n    // Here we don't need to reassign nextOp because op should always be an object, and strict equality will guarantee\n    // that this object is occupying the same memory region.\n    if (o === nextOp) {\n      _dirtyCheck(parentElement, opState, moveNode, singleChild);\n      return opState;\n    }\n    if (\n      ((f & NodeFlags.Fragment) !== 0 ?\n        !(nextOp instanceof Array) :\n        (nextOp instanceof Array || (o as OpNode).t !== (nextOp as OpNode).t)\n      )\n    ) {\n      _unmount(parentElement, opState, singleChild);\n      return _mount(parentElement, nextOp);\n    }\n    opState.o = nextOp;\n    const opStateChildren = opState.c;\n    let deepStateFlags;\n    let prevData;\n    let nextData;\n    let nextValue;\n    let i;\n\n    if ((f & NodeFlags.Component) !== 0) {\n      prevData = (o as OpNode).d;\n      nextData = (nextOp as OpNode).d;\n      nextValue = ((nextOp as OpNode).t.d as StatelessComponentDescriptor | ComponentDescriptor);\n      if (\n        ((f & NodeFlags.Dirty) !== 0) ||\n        (\n          (prevData !== nextData) &&\n          (nextValue.e === void 0 || nextValue.e(prevData, nextData) === true)\n        )\n      ) {\n        deepStateFlags = _pushDeepState();\n        opState.c = _update(\n          parentElement,\n          opStateChildren as OpState,\n          ((f & NodeFlags.Stateful) !== 0) ?\n            (s as ComponentHooks).r!(nextData) :\n            (nextValue as StatelessComponentDescriptor).c(nextData),\n          moveNode,\n          singleChild,\n        );\n        // opState.f can be changed after `_update()`.\n        nextValue = opState.f;\n        opState.f = (nextValue & NodeFlags.SelfFlags) | _deepStateFlags;\n        _deepStateFlags |= deepStateFlags | ((nextValue & NodeFlags.DeepStateFlags) << NodeFlags.DeepStateShift);\n      } else {\n        _dirtyCheck(parentElement, opState, moveNode, singleChild);\n      }\n    } else {\n      deepStateFlags = _pushDeepState();\n      if ((f & NodeFlags.Element) !== 0) {\n        i = (f & NodeFlags.Svg) !== 0;\n        prevData = (o as OpNode<ElementData>).d;\n        nextData = (nextOp as OpNode<ElementData>).d;\n        if (moveNode === true) {\n          nodeInsertBefore!.call(parentElement, s, _nextNode);\n        }\n\n        nextValue = nextData.n;\n        if (prevData.n !== nextValue) {\n          if (nextValue === void 0) {\n            nextValue = \"\";\n          }\n          _updateClassName(s, nextValue, i);\n        }\n\n        nextValue = nextData.a;\n        if (prevData.a !== nextValue) {\n          _updateAttrs(s as Element, prevData.a, nextValue, i);\n        }\n\n        _nextNode = null;\n        opState.c = _update(s as Element, opStateChildren as OpState, nextData.c, false, true);\n\n        _nextNode = s as Node;\n      } else if ((f & (NodeFlags.Fragment | NodeFlags.TrackByKey)) !== 0) {\n        if ((f & NodeFlags.Fragment) !== 0) {\n          i = (nextOp as OpArray).length;\n          if (i === 0) {\n            _unmount(parentElement, opState, singleChild);\n          } else {\n            prevData = (opStateChildren as Array<OpState | null>).length;\n            if (i !== prevData) {\n              opState.c = nextValue = Array(i);\n              while (prevData > i) {\n                nextData = (opStateChildren as Array<OpState | null>)[--prevData];\n                if (nextData !== null) {\n                  _unmount(parentElement, nextData, false);\n                }\n              }\n              while (i > prevData) {\n                nextValue[--i] = _mount(parentElement, (nextOp as OpArray)[i]);\n              }\n            } else {\n              nextValue = (opStateChildren as Array<OpState | null>);\n            }\n            while (i > 0) {\n              nextValue[--i] = _update(\n                parentElement,\n                (opStateChildren as Array<OpState | null>)[i],\n                (nextOp as OpArray)[i],\n                moveNode,\n                false,\n              );\n            }\n          }\n        } else {\n          _updateChildrenTrackByKeys(\n            parentElement,\n            opState,\n            (o as OpNode).d,\n            (nextOp as OpNode).d,\n            moveNode,\n            singleChild,\n          );\n        }\n      } else if ((f & NodeFlags.Events) !== 0) {\n        opState.c = _update(\n          parentElement,\n          opStateChildren as OpState,\n          (nextOp as OpNode<EventsData>).d.c,\n          moveNode,\n          singleChild,\n        );\n      } else { // if ((flags & NodeFlags.Context) !== 0) {\n        nextData = (nextOp as OpNode<ContextData>).d;\n        if ((f & NodeFlags.SetContextState) !== 0) {\n          opState.s = nextData.v;\n        } else {\n          (s as ContextState).v = nextData.v;\n        }\n        nextValue = setContext(opState.s);\n        opState.c = _update(parentElement, opStateChildren as OpState, nextData.c, moveNode, singleChild);\n        setContext(nextValue);\n      }\n      opState.f = _popDeepState(deepStateFlags, f);\n    }\n  }\n\n  return opState;\n}\n\n/**\n * Update children list with track by key algorithm.\n *\n * High-level overview of the algorithm that is implemented in this function (slightly outdated, but the key ideas are\n * the same).\n *\n * This algorithm finds a minimum[1] number of DOM operations. It works in several steps:\n *\n * 1. Find common suffix and prefix.\n *\n * This optimization technique is searching for nodes with identical keys by simultaneously iterating over nodes in the\n * old children list `A` and new children list `B` from both sides:\n *\n *  A: -> [a b c d] <-\n *  B: -> [a b d] <-\n *\n * Here we can skip nodes \"a\" and \"b\" at the begininng, and node \"d\" at the end.\n *\n *  A: -> [c] <-\n *  B: -> [] <-\n *\n * Here it will check if the size of one of the list is equal to zero. When length of the old children list is zero,\n * it will insert all remaining nodes from the new list, and when length of the new children list is zero, it will\n * remove all remaining nodes from the old list.\n *\n * When algorithm can't find a solution with this simple optimization technique, it will go to the next step of the\n * algorithm. For example:\n *\n *  A: -> [a b c d e f g] <-\n *  B: -> [a c b h f e g] <-\n *\n * Nodes \"a\" and \"g\" at the edges are the same, skipping them.\n *\n *  A: -> [b c d e f] <-\n *  B: -> [c b h f e] <-\n *\n * Here we are stuck, so we need to switch to the next step.\n *\n * 2. Look for removed and inserted nodes, and simultaneously check if one of the nodes is moved.\n *\n * First we create an array `P` with the length of the new children list and assign to each position value `-1`, it has\n * a meaning of a new node that should be inserted. Later we will assign node positions in the old children list to this\n * array.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *  P: [. . . . .] // . == -1\n *\n * Then we need to build an index `I` that maps keys with node positions of the remaining nodes from the new children\n * list.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *  P: [. . . . .] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1,\n *    h: 2,\n *    f: 3,\n *    e: 4,\n *  }\n *  last = 0\n *\n * With this index, we start to iterate over the remaining nodes from the old children list and check if we can find a\n * node with the same key in the index. If we can't find any node, it means that it should be removed, otherwise we\n * assign position of the node in the old children list to the positions array.\n *\n *  A: [b c d e f]\n *      ^\n *  B: [c b h f e]\n *  P: [. 0 . . .] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1, <-\n *    h: 2,\n *    f: 3,\n *    e: 4,\n *  }\n *  last = 1\n *\n * When we assigning positions to the positions array, we also keep a position of the last seen node in the new children\n * list, if the last seen position is larger than current position of the node at the new list, then we are switching\n * `moved` flag to `true`.\n *\n *  A: [b c d e f]\n *        ^\n *  B: [c b h f e]\n *  P: [1 0 . . .] // . == -1\n *  I: {\n *    c: 0, <-\n *    b: 1,\n *    h: 2,\n *    f: 3,\n *    e: 4,\n *  }\n *  last = 1 // last > 0; moved = true\n *\n * The last position `1` is larger than current position of the node at the new list `0`, switching `moved` flag to\n * `true`.\n *\n *  A: [b c d e f]\n *          ^\n *  B: [c b h f e]\n *  P: [1 0 . . .] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1,\n *    h: 2,\n *    f: 3,\n *    e: 4,\n *  }\n *  moved = true\n *\n * Node with key \"d\" doesn't exist in the index, removing node.\n *\n *  A: [b c d e f]\n *            ^\n *  B: [c b h f e]\n *  P: [1 0 . . 3] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1,\n *    h: 2,\n *    f: 3,\n *    e: 4, <-\n *  }\n *  moved = true\n *\n * Assign position for `e`.\n *\n *  A: [b c d e f]\n *              ^\n *  B: [c b h f e]\n *  P: [1 0 . 4 3] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1,\n *    h: 2,\n *    f: 3, <-\n *    e: 4,\n *  }\n *  moved = true\n *\n * Assign position for 'f'.\n *\n * At this point we are checking if `moved` flag is on, or if the length of the old children list minus the number of\n * removed nodes isn't equal to the length of the new children list. If any of this conditions is true, then we are\n * going to the next step.\n *\n * 3. Find minimum number of moves if `moved` flag is on, or insert new nodes if the length is changed.\n *\n * When `moved` flag is on, we need to find the\n * [longest increasing subsequence](http://en.wikipedia.org/wiki/Longest_increasing_subsequence) in the positions array,\n * and move all nodes that doesn't belong to this subsequence.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *  moved = true\n *\n * Now we just need to simultaneously iterate over the new children list and LIS from the end and check if the current\n * position is equal to a value from LIS.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *              ^  // new_pos == 4\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *              ^  // new_pos == 4\n *  moved = true\n *\n * Node \"e\" stays at the same place.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *            ^    // new_pos == 3\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *            ^    // new_pos != 1\n *  moved = true\n *\n * Node \"f\" is moved, move it before the next node \"e\".\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *          ^      // new_pos == 2\n *  P: [1 0 . 4 3] // . == -1\n *          ^      // old_pos == -1\n *  LIS:     [1 4]\n *            ^\n *  moved = true\n *\n * Node \"h\" has a `-1` value in the positions array, insert new node \"h\".\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *        ^        // new_pos == 1\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *            ^    // new_pos == 1\n *  moved = true\n *\n * Node \"b\" stays at the same place.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *      ^          // new_pos == 0\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *          ^      // new_pos != undefined\n *  moved = true\n *\n * Node \"c\" is moved, move it before the next node \"b\".\n *\n * When moved flag is off, we don't need to find LIS, and we just iterate over the new children list and check its\n * current position in the positions array, if it is `-1`, then we insert new node.\n *\n * [1] Actually it is almost minimum number of dom ops, when node is removed and another one is inserted at the same\n * place, instead of insert and remove dom ops, we can use one replace op. It will make everything even more\n * complicated, and other use cases will be slower, so I don't think that it is worth to use replace here.\n *\n * @param parentElement Parent DOM element.\n * @param opState OpNode state for a TrackByKey operation.\n * @param a Previous operations.\n * @param b Next operations.\n * @param moveNode Children DOM nodes should be moved.\n * @param singleChild Parent DOM element contains a single node.\n * @noinline\n */\nfunction _updateChildrenTrackByKeys(\n  parentElement: Element,\n  opState: OpState,\n  a: Key<any, OpNode>[],\n  b: Key<any, OpNode>[],\n  moveNode: boolean,\n  singleChild: boolean,\n): void {\n  let i = b.length;\n  let j: number | undefined = a.length;\n  const result = Array(i);\n\n  if (i === 0) { // New children list is empty.\n    if (j > 0) { // Unmount nodes from the old children list.\n      _unmount(parentElement, opState, singleChild);\n    }\n  } else if (j === 0) { // Old children list is empty.\n    while (i > 0) { // Mount nodes from the new children list.\n      result[--i] = _mount(parentElement, b[i].v);\n    }\n  } else {\n    const opStateChildren = opState.c as Array<OpState | null>;\n    let aEnd = j - 1; // a.length - 1\n    let bEnd = i - 1; // b.length - 1\n    let start = 0;\n    let node: OpNode | Key<any, OpNode> | OpState | null = b[bEnd];\n\n    // Step 1\n    outer: while (true) {\n      // Update nodes with the same key at the end.\n      while (a[aEnd].k === node.k) {\n        result[bEnd] = _update(parentElement, opStateChildren[aEnd--], node.v, moveNode, false);\n        if (start > --bEnd || start > aEnd) {\n          break outer;\n        }\n        node = b[bEnd];\n      }\n\n      // Update nodes with the same key at the beginning.\n      while (a[start].k === b[start].k && ++start <= aEnd && start <= bEnd) {\n        // delayed update (all updates should be performed from right-to-left).\n      }\n\n      break;\n    }\n\n    if (start > aEnd) {\n      // All nodes from `a` are updated, insert the rest from `b`.\n      while (bEnd >= start) {\n        result[bEnd] = _mount(parentElement, b[bEnd--].v);\n      }\n    } else if (start > bEnd) {\n      // All nodes from `b` are updated, remove the rest from `a`.\n      i = start;\n      do {\n        if ((node = opStateChildren[i++]) !== null) {\n          _unmount(parentElement, node, false);\n        }\n      } while (i <= aEnd);\n    } else { // Step 2\n      // When `pos === 99999999`, it means that one of the nodes is in the wrong position and we should rearrange nodes\n      // with lis-based algorithm.\n      let pos = 0;\n      // Number of updated nodes after prefix/suffix phase. It is used for an optimization that removes all child nodes\n      // with `textContent=\"\"` when there are no updated nodes.\n      let updated = 0;\n\n      const aLength = aEnd - start + 1;\n      const bLength = bEnd - start + 1;\n      const sources = Array(bLength); // Maps positions in the new children list to positions in the old children list.\n      const keyIndex = new Map<any, number>(); // Maps keys to their positions in the new children list.\n      for (i = 0; i < bLength; ++i) {\n        j = i + start;\n        sources[i] = -1; // Special value `-1` indicates that node doesn't exist in the old children list.\n        keyIndex.set(b[j].k, j);\n      }\n\n      for (i = start; i <= aEnd && updated < bLength; ++i) {\n        j = keyIndex.get(a[i].k);\n        if (j !== void 0) {\n          pos = (pos < j) ? j : 99999999;\n          ++updated;\n          sources[j - start] = i;\n          result[j] = opStateChildren[i];\n          // remove updated nodes from previous array, so that we could remove the rest from the document.\n          opStateChildren[i] = null;\n        }\n      }\n\n      if (aLength === a.length && updated === 0) {\n        // Zero updated nodes in step 1 and 2, remove all nodes and insert new ones.\n        _unmount(parentElement, opState, singleChild);\n        while (bEnd >= 0) {\n          result[bEnd] = _mount(parentElement, b[bEnd--].v);\n        }\n      } else {\n        // Step 3\n        // Remove nodes that weren't updated in the old children list.\n        for (i = start; i <= aEnd; i++) {\n          if ((node = opStateChildren[i]) !== null) {\n            _unmount(parentElement, node, false);\n          }\n        }\n\n        i = bLength;\n        if (moveNode === true || pos !== 99999999) {\n          while (i > 0) {\n            pos = --i + start;\n            node = b[pos].v;\n            result[pos] = (sources[i] === -1) ?\n              _mount(parentElement, node) :\n              _update(parentElement, result[pos], node, moveNode, false);\n          }\n        } else {\n          const seq = lis(sources);\n          j = seq.length - 1;\n          while (i > 0) {\n            pos = --i + start;\n            node = b[pos].v;\n            if (sources[i] === -1) {\n              result[pos] = _mount(parentElement, node);\n            } else {\n              if (j < 0 || i !== seq[j]) {\n                moveNode = true;\n              } else {\n                --j;\n              }\n              result[pos] = _update(parentElement, result[pos], node, moveNode, false);\n              moveNode = false;\n            }\n          }\n        }\n      }\n    }\n\n    // update nodes from Step 1 (prefix only)\n    while (start > 0) {\n      result[--start] = _update(parentElement, opStateChildren[start], b[start].v, moveNode, false);\n    }\n  }\n  opState.c = result;\n}\n\n/**\n * Slightly modified Longest Increased Subsequence algorithm, it ignores items that have -1 value, they're representing\n * new items.\n *\n * {@link http://en.wikipedia.org/wiki/Longest_increasing_subsequence}\n *\n * It is possible to use typed arrays in this function, and it will make it faster in most javascript engines, but for\n * some reason instantiating small typed arrays is slower in synthetic microbenchmarks on V8\n * {@link https://gist.github.com/localvoid/88da772d987794605f7fa4a078bce4d6} (maybe there is something wrong in this\n * benchmarks, if someone want to spend more time on optimizations, I'd recommend to double check everything).\n *\n * To solve problem with instantiation, we could just reuse arrays, but in my opinion it isn't worth to overcomplicate\n * this algorithm since it is already extremely fast and it is highly unlikely that it will be even noticeable in the\n * profiler. Usually when there is an update in the real applications, it triggers reordering of one dynamic children\n * list, that is why I prefer to keep it simple.\n *\n * @param a - Array of numbers\n * @returns Longest increasing subsequence\n * @noinline\n */\nfunction lis(a: number[]): number[] {\n  const p = a.slice();\n  // result is instantiated as an empty array to prevent instantiation with CoW backing store.\n  const result: number[] = [];\n  let n = 0;\n  let i = 0;\n  let u: number;\n  let v: number;\n  let j: number;\n\n  result[0] = 0;\n  for (; i < a.length; ++i) {\n    const k = a[i];\n    if (k > -1) {\n      j = result[n];\n      if (a[j] < k) {\n        p[i] = j;\n        result[++n] = i;\n      } else {\n        u = 0;\n        v = n;\n\n        while (u < v) {\n          j = (u + v) >> 1;\n          if (a[result[j]] < k) {\n            u = j + 1;\n          } else {\n            v = j;\n          }\n        }\n\n        if (k < a[result[u]]) {\n          if (u > 0) {\n            p[i] = result[u - 1];\n          }\n          result[u] = i;\n        }\n      }\n    }\n  }\n\n  v = result[n];\n\n  while (n >= 0) {\n    result[n--] = v;\n    v = p[v];\n  }\n\n  return result;\n}\n\n/**\n * Update DOM classname.\n *\n * @param element DOM Element.\n * @param className Class name.\n * @param svg SVG Element.\n */\nfunction _updateClassName(element: Element, className: string, svg: boolean): void {\n  /**\n   * SVGElement.className returns `SVGAnimatedString`.\n   *\n   * #quirks\n   */\n  if (svg === true) {\n    elementSetAttribute!.call(element, \"class\", className);\n  } else {\n    elementSetClassName!.call((element as HTMLElement), className);\n  }\n}\n\n/**\n * Update DOM styles.\n *\n * @param element HTML or SVG Element.\n * @param a Prev styles.\n * @param b Next styles.\n */\nfunction _updateStyle(\n  element: HTMLElement | SVGElement,\n  a: CSSStyleProps | undefined,\n  b: CSSStyleProps | undefined,\n  svg: boolean,\n): void {\n  const style = svg === true ? svgElementGetStyle!.call(element) : htmlElementGetStyle!.call(element);\n  let key: string;\n  let bValue;\n\n  if (a === void 0) {\n    // a is empty, insert all styles from b.\n    for (key in b!) {\n      bValue = (b as { [key: string]: string })[key];\n      if (bValue !== void 0) {\n        style.setProperty(key, bValue);\n      }\n    }\n  } else if (b === void 0) {\n    // b is empty, remove all styles from a\n    for (key in a) {\n      if ((a as { [key: string]: string })[key] !== void 0) {\n        style.removeProperty(key);\n      }\n    }\n  } else {\n    let matchCount = 0;\n    let i = 0;\n    for (key in a) {\n      const aValue = a[key];\n      bValue = (objectHasOwnProperty.call(b, key) === true) ? (matchCount++ , b[key]) : void 0;\n      if (aValue !== bValue) {\n        if (bValue !== void 0) {\n          style.setProperty(key, bValue);\n        } else {\n          style.removeProperty(key);\n        }\n      }\n    }\n\n    const keys = Object.keys(b);\n    for (; matchCount < keys.length && i < keys.length; ++i) {\n      key = keys[i];\n      if (objectHasOwnProperty.call(a, key) === false) {\n        bValue = b[key];\n        ++matchCount;\n        if (bValue !== void 0) {\n          style.setProperty(key, b[key]);\n        }\n      }\n    }\n  }\n}\n\n/**\n * Update DOM attributes.\n *\n * @param element DOM element.\n * @param a Prev DOM attributes.\n * @param b Next DOM attributes.\n */\nfunction _updateAttrs(\n  element: Element,\n  a: { [key: string]: string | number | boolean | AttributeDirective<any> | CSSStyleProps | undefined } | undefined,\n  b: { [key: string]: string | number | boolean | AttributeDirective<any> | CSSStyleProps | undefined } | undefined,\n  svg: boolean,\n): void {\n  let key: string;\n\n  if (a === void 0) {\n    // a is empty, insert all attributes from b.\n    for (key in b!) {\n      _updateAttr(element, key, void 0, b![key], svg);\n    }\n  } else if (b === void 0) {\n    // b is empty, remove all attributes from a.\n    for (key in a) {\n      _updateAttr(element, key, a[key], void 0, svg);\n    }\n  } else {\n    let matchCount = 0;\n    let i = 0;\n    for (key in a) {\n      _updateAttr(\n        element,\n        key,\n        a[key],\n        (objectHasOwnProperty.call(b, key) === true) ? (matchCount++ , b[key]) : void 0,\n        svg,\n      );\n    }\n\n    const keys = Object.keys(b);\n    for (; matchCount < keys.length && i < keys.length; ++i) {\n      key = keys[i];\n      if (objectHasOwnProperty.call(a, key) === false) {\n        _updateAttr(element, key, void 0, b[key], svg);\n        ++matchCount;\n      }\n    }\n  }\n}\n\n/**\n * Update DOM attribute.\n *\n * @param element DOM Element.\n * @param key Attribute name.\n * @param prev Previous value.\n * @param next Next value.\n */\nfunction _updateAttr(\n  element: Element,\n  key: string,\n  prev: string | number | boolean | AttributeDirective<any> | CSSStyleProps | undefined,\n  next: string | number | boolean | AttributeDirective<any> | CSSStyleProps | undefined,\n  svg: boolean,\n): void {\n  if (key !== \"style\") {\n    if (typeof next === \"object\") {\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== \"production\") {\n        if (typeof prev !== \"object\" && prev !== void 0) {\n          throw new Error(\n            `Invalid DOM attribute, transitioning from basic values to attribute directives isn't allowed`,\n          );\n        }\n      }\n      (next as AttributeDirective<any>).u!(\n        element,\n        key,\n        prev === void 0 ? void 0 : (prev as AttributeDirective<any>).v,\n        next.v,\n      );\n    } else if (typeof prev === \"object\") {\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== \"production\") {\n        if (typeof next !== \"object\" && next !== void 0) {\n          throw new Error(\n            `Invalid DOM attribute, transitioning from attribute directives to basic values isn't allowed`,\n          );\n        }\n      }\n      (prev as AttributeDirective<any>).u!(\n        element,\n        key,\n        (prev as AttributeDirective<any>).v,\n        void 0,\n      );\n    } else if (prev !== next) {\n      if (typeof next === \"boolean\") {\n        next = next ? \"\" : void 0;\n      }\n      if (next === void 0) {\n        if (prev !== void 0 && prev !== false) {\n          elementRemoveAttribute!.call(element, key);\n        }\n      } else {\n        elementSetAttribute!.call(element, key, next as string);\n      }\n    }\n  } else if (prev !== next) {\n    _updateStyle(element as HTMLElement, prev as CSSStyleProps, next as CSSStyleProps, svg);\n  }\n}\n","import { Op } from \"./operations\";\nimport { OpState } from \"./state\";\nimport { _mount, _update, _unmount, _dirtyCheck, _resetState } from \"./reconciler\";\nimport { enableContext, disableContext } from \"./context\";\n\n/**\n * Root.\n */\nexport interface Root {\n  /**\n   * Container element.\n   */\n  container: Element | null;\n  /**\n   * Current state.\n   */\n  state: OpState | null;\n  /**\n   * Next operation.\n   */\n  next: Op | undefined;\n}\n\n/**\n * Root nodes.\n */\nexport const ROOTS = [] as Root[];\n\n/**\n * Find root node of a container.\n *\n * @param predicate - Find predicate.\n * @returns root node or undefined when root node doesn't exist.\n */\nexport const findRoot = (predicate: (root: Root) => boolean) => ROOTS.find(predicate);\n\n/**\n * Performs a dirty checking.\n */\nexport function dirtyCheck() {\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== \"production\") {\n    enableContext();\n  }\n  for (let i = 0; i < ROOTS.length; ++i) {\n    const root = ROOTS[i];\n    const { container, state, next } = root;\n    _resetState();\n    if (next !== void 0) {\n      root.next = void 0;\n      root.state = _update(container!, state, next, false, true);\n    } else if (state !== null) {\n      _dirtyCheck(container!, state, false, true);\n    }\n  }\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== \"production\") {\n    disableContext();\n  }\n}\n","import { NOOP, catchError, runRepeatableTasks, RepeatableTaskList, box, Box, TaskToken, TASK_TOKEN } from \"../core\";\nimport { printWarn } from \"../debug/print\";\nimport { doc } from \"../dom/shortcuts\";\nimport { NodeFlags } from \"../vdom/node_flags\";\nimport { Op } from \"../vdom/operations\";\nimport { Component } from \"../vdom/component\";\nimport { ROOTS, findRoot, dirtyCheck } from \"../vdom/root\";\n\n/**\n * Update flags.\n */\nexport const enum UpdateFlags {\n  /**\n   * Forces synchronous update.\n   */\n  RequestSyncUpdate = 1,\n}\n\n/**\n * Scheduler flags.\n */\nconst enum SchedulerFlags {\n  /**\n   * Running inside of a scheduler context.\n   */\n  Running = 1,\n  /**\n   * Scheduler tick is pending for an execution.\n   */\n  TickPending = 1 << 1,\n  /**\n   * Frame update is pending for an execution.\n   */\n  NextFramePending = 1 << 2,\n  /**\n   * Sync Frame update is pending for an execution.\n   */\n  NextSyncFramePending = 1 << 3,\n  /**\n   * Running inside of a frame update context.\n   */\n  UpdatingFrame = 1 << 4,\n  /**\n   * Dirty checking is pending for an execution.\n   */\n  DirtyCheckPending = 1 << 5,\n}\n\nconst enum SchedulerDebugFlags {\n  DirtyCheckingFinished = 1,\n  MutationsFinished = 1 << 1,\n  LayoutFinished = 1 << 2,\n}\n\n/**\n * Task list.\n */\ntype TaskList = Box<Array<(token: TaskToken) => void>>;\n\n/**\n * Execute tasks from the `TaskList`.\n *\n * @param t - Task list\n */\nfunction run(t: TaskList) {\n  while (t.v.length > 0) {\n    const tasks = t.v;\n    t.v = [];\n    for (let i = 0; i < tasks.length; ++i) {\n      tasks[i](TASK_TOKEN);\n    }\n  }\n}\n\nlet _flags: SchedulerFlags = 0;\nlet _debugFlags: SchedulerDebugFlags = 0;\n\nlet _frameStartTime = 0;\nlet _clock = 1;\nconst _resolvedPromise = Promise.resolve();\nconst _microtasks = box<Array<(token: TaskToken) => void>>([]);\nconst _mutationEffects = box<Array<(token: TaskToken) => void>>([]);\nconst _layoutEffects = box<Array<(token: TaskToken) => void>>([]);\nconst _beforeMutations = [] as RepeatableTaskList;\nconst _afterMutations = [] as RepeatableTaskList;\n\n/**\n * withSchedulerTick wraps `inner` function into a scheduler context execution.\n *\n * @typeparam T Arguments.\n * @param inner Inner function.\n * @returns function that will be executed in a scheduler context.\n */\nexport const withSchedulerTick = <T extends any[]>(inner: (...args: T) => void) => (\n  catchError(function () {\n    _flags |= SchedulerFlags.Running;\n    inner.apply(void 0, arguments as unknown as T);\n    run(_microtasks);\n    _flags &= ~(SchedulerFlags.Running | SchedulerFlags.TickPending);\n    ++_clock;\n  })\n) as (...args: T) => void;\n\nconst runMicrotasks = withSchedulerTick(NOOP);\n\n/**\n * clock returns monotonically increasing clock value.\n *\n * @returns current clock value.\n */\nexport const clock = () => _clock;\n\n/**\n * scheduleMicrotask adds task to the microtask queue.\n *\n * @param task Microtask.\n */\nexport function scheduleMicrotask(task: (token: TaskToken) => void): void {\n  _microtasks.v.push(task);\n  if ((_flags & (SchedulerFlags.Running | SchedulerFlags.TickPending)) === 0) {\n    _flags |= SchedulerFlags.TickPending;\n    _resolvedPromise.then(runMicrotasks);\n  }\n}\n\n/**\n * beforeMutations adds a hook that will be executed before DOM mutations.\n *\n * @param fn Hook function.\n */\nexport function beforeMutations(fn: () => boolean | void): void {\n  _beforeMutations.push(fn);\n}\n\n/**\n * afterMutations adds a hook that will be executed after DOM mutations.\n *\n * @param fn Hook function.\n */\nexport function afterMutations(fn: () => boolean | void): void {\n  _afterMutations.push(fn);\n}\n\n/**\n * frameStartTime returns current frame start time.\n *\n * @returns current frame start time.\n */\nexport const frameStartTime = () => _frameStartTime;\n\n/**\n * withNextFrame wraps `inner` function into a scheduler frame update context.\n *\n * @param inner Inner function.\n * @returns function that will be executed in a frame update context.\n */\nexport const withNextFrame = (inner: (time?: number) => void) => (\n  withSchedulerTick((time?: number) => {\n    _flags |= SchedulerFlags.UpdatingFrame;\n    inner(time);\n\n    if ((_flags & SchedulerFlags.NextFramePending) !== 0) {\n      if (time !== void 0) {\n        _frameStartTime = time;\n      }\n\n      runRepeatableTasks(_beforeMutations);\n      if ((_flags & SchedulerFlags.DirtyCheckPending) !== 0) {\n        dirtyCheck();\n      }\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== \"production\") {\n        _debugFlags |= SchedulerDebugFlags.DirtyCheckingFinished;\n      }\n      run(_mutationEffects);\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== \"production\") {\n        _debugFlags |= SchedulerDebugFlags.MutationsFinished;\n      }\n      runRepeatableTasks(_afterMutations);\n      run(_layoutEffects);\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== \"production\") {\n        _debugFlags |= SchedulerDebugFlags.LayoutFinished;\n      }\n    }\n    _flags &= ~(\n      SchedulerFlags.UpdatingFrame |\n      SchedulerFlags.NextFramePending |\n      SchedulerFlags.NextSyncFramePending |\n      SchedulerFlags.DirtyCheckPending\n    );\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== \"production\") {\n      _debugFlags &= ~(\n        SchedulerDebugFlags.DirtyCheckingFinished |\n        SchedulerDebugFlags.MutationsFinished |\n        SchedulerDebugFlags.LayoutFinished\n      );\n    }\n  })\n);\n\n/**\n * Frame tasks scheduler event handler.\n *\n * @param t Current time.\n */\nconst _handleNextFrame = withNextFrame(NOOP);\nconst _handleNextFrameSync = () => { _handleNextFrame(); };\n\n/**\n * requestNextFrame requests an update for next frame.\n *\n * @param flags See {@link UpdateFlags} for details.\n */\nexport function requestNextFrame(flags?: UpdateFlags): void {\n  if (\n    (flags !== void 0) &&\n    ((flags & UpdateFlags.RequestSyncUpdate) !== 0) &&\n    ((_flags & SchedulerFlags.NextSyncFramePending) === 0)\n  ) {\n    _flags |= SchedulerFlags.NextFramePending | SchedulerFlags.NextSyncFramePending;\n    if ((_flags & SchedulerFlags.UpdatingFrame) === 0) {\n      scheduleMicrotask(_handleNextFrameSync);\n    }\n  } else if ((_flags & SchedulerFlags.NextFramePending) === 0) {\n    _flags |= SchedulerFlags.NextFramePending;\n    if ((_flags & SchedulerFlags.UpdatingFrame) === 0) {\n      requestAnimationFrame(_handleNextFrame);\n    }\n  }\n}\n\n/**\n * Adds a write DOM task to the queue.\n *\n * @param fn Write DOM task.\n * @param flags See {@link UpdateFlags} for details.\n */\nexport function scheduleMutationEffect(fn: (token: TaskToken) => void, flags?: UpdateFlags): void {\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== \"production\") {\n    if (_flags & SchedulerFlags.UpdatingFrame) {\n      if (_debugFlags & SchedulerDebugFlags.MutationsFinished) {\n        printWarn(\"Mutation effect is scheduled after mutations were finished\");\n      }\n    }\n  }\n  _mutationEffects.v.push(fn);\n  requestNextFrame(flags);\n}\n\n/**\n * Adds a DOM layout task to the queue.\n *\n * @param fn Read DOM task\n * @param flags See {@link UpdateFlags} for details.\n */\nexport function scheduleLayoutEffect(fn: (token: TaskToken) => void, flags?: UpdateFlags): void {\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== \"production\") {\n    if (_flags & SchedulerFlags.UpdatingFrame) {\n      if (_debugFlags & SchedulerDebugFlags.MutationsFinished) {\n        printWarn(\"Layout effect is scheduled after layout were finished\");\n      }\n    }\n  }\n  _layoutEffects.v.push(fn);\n  requestNextFrame(flags);\n}\n\n/**\n * Request dirty checking.\n *\n * @param flags See {@link UpdateFlags} for details.\n */\nexport function requestDirtyCheck(flags?: UpdateFlags): void {\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== \"production\") {\n    if (_flags & SchedulerFlags.UpdatingFrame) {\n      if (_debugFlags & SchedulerDebugFlags.MutationsFinished) {\n        printWarn(\"Dirty checking is scheduled after dirty checking were finished\");\n      }\n    }\n  }\n  _flags |= SchedulerFlags.DirtyCheckPending;\n  requestNextFrame(flags);\n}\n\n/**\n * Invalidate component.\n *\n * @param c Component instance.\n * @param flags See {@link UpdateFlags} for details.\n */\nexport function invalidate(c: Component, flags?: UpdateFlags): void {\n  c.f |= NodeFlags.Dirty;\n  requestDirtyCheck(flags);\n}\n\n/**\n * dirty requests a dirty checking and returns current monotonic clock value.\n *\n * @param flags See {@link UpdateFlags} for details.\n * @returns current monotonic clock value.\n */\nexport const dirty = (flags?: UpdateFlags) => (requestDirtyCheck(flags), _clock);\n\n/**\n * Render operation into the container.\n *\n * @param next Operation to render.\n * @param container DOM Node that will contain rendered operation.\n * @param flags See {@link UpdateFlags} for details.\n */\nexport function render(next: Op, container: Element, flags?: UpdateFlags): void {\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== \"production\") {\n    /**\n     * Rendering into the <body> element is disabled to make it possible to fix iOS quirk with click events.\n     */\n    if (container === doc.body) {\n      throw new Error(\"Rendering into the <body> element aren't allowed\");\n    }\n    if (!doc.body.contains(container)) {\n      throw new Error(\"Container element should be attached to the document\");\n    }\n  }\n\n  const root = findRoot((v) => v.container === container);\n  if (root) {\n    root.next = next;\n  } else {\n    ROOTS.push({ container, state: null, next });\n  }\n\n  requestDirtyCheck(flags);\n}\n","import { checkElement } from \"../debug/element\";\nimport { NodeFlags } from \"./node_flags\";\nimport { OpNode, Op, ElementData, createOpNode, createOpType } from \"./operations\";\nimport { Component } from \"./component\";\n\n/**\n * elementFactory creates a factory for DOM elements.\n *\n * @param tag HTML element tag name.\n * @param flags Node flags.\n * @returns HTML element operation factory.\n */\nexport function elementFactory<T, U>(tag: string, flags: NodeFlags) {\n  const type = createOpType(flags, tag);\n  return process.env.NODE_ENV !== \"production\" ?\n    (n?: string, a?: T, c: Op = null) => {\n      checkElement(tag, a, (flags & NodeFlags.Svg) !== 0);\n      return createOpNode<ElementData<T>>(type, { n, a, c });\n    } :\n    /* istanbul ignore next */(n?: string, a?: T, c: Op = null) => createOpNode<ElementData<T>>(type, { n, a, c });\n}\n\n/**\n * htmlElementFactory creates a factory for HTML elements.\n *\n * @param tag HTML element tag name.\n * @returns HTML element operation factory.\n */\nexport const htmlElementFactory: <T, U>(tag: string) => (\n  className?: string,\n  attrs?: T,\n  children?: Op,\n) => OpNode<ElementData<T>> = (tag: string) => elementFactory(tag, NodeFlags.Element);\n\n/**\n * svgElementFactory creates a factory for SVG elements.\n *\n * @param tag SVG element tag name.\n * @returns SVG element operation factory.\n */\nexport const svgElementFactory: <T, U>(tag: string) => (\n  className?: string,\n  attrs?: T,\n  children?: Op,\n) => OpNode<ElementData<T>> = (tag: string) => elementFactory(tag, NodeFlags.Element | NodeFlags.Svg);\n\n/**\n * `elementProto()` creates a factory that produces elements with predefined attributes.\n *\n * @example\n *\n *     const DivWithIdAttribute = elementProto(div(_, { id: \"predefined-id\" }));\n *\n *     render(\n *       DivWithIdAttribute(\"class-name\", { title: \"Title\" }, \"Hello World\"),\n *       document.getElementById(\"app\")!,\n *     );\n *\n * @param p Element prototype.\n * @returns Factory that produces elements with predefined attributes.\n */\nexport function elementProto<T>(p: OpNode<ElementData<T>>) {\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== \"production\") {\n    if (p.d.c !== null) {\n      throw new Error(`Invalid OpNode, element prototypes can't have any children`);\n    }\n    checkElement(p.t.d as string, p.d.a, (p.t.f & NodeFlags.Svg) !== 0);\n  }\n  const type = createOpType(p.t.f | NodeFlags.ElementProto, { n: null, p });\n  return (n?: string, a?: T, c: Op = null) => createOpNode<ElementData<T>>(type, { n, a, c });\n}\n\n/**\n * component creates a factory that produces component nodes.\n *\n * @example\n *\n *     const A = component<string>(() => {\n *       let _text;\n *       const click = onClick(() => { console.log(_text); });\n *\n *       return (text) => (\n *         _text = text,\n *         Events(click,\n *           button(_, _, \"Click Me\"),\n *         )\n *       );\n *     });\n *\n * @param c Component function.\n * @returns Factory that produces component nodes.\n */\nexport function component(\n  c: (c: Component) => () => Op,\n): () => OpNode<undefined>;\n\n/**\n * component creates a factory that produces component nodes.\n *\n * @example\n *\n *     const A = component<string>(() => {\n *       let _text;\n *       const click = onClick(() => { console.log(_text); });\n *\n *       return (text) => (\n *         _text = text,\n *         Events(click,\n *           button(_, _, \"Click Me\"),\n *         )\n *       );\n *     });\n *\n * @param c Component function.\n * @param areEqual `areEqual` function.\n * @returns Factory that produces component nodes.\n */\nexport function component<P>(\n  c: (c: Component) => (props: P) => Op,\n  areEqual?: undefined extends P ? undefined : (prev: P, next: P) => boolean,\n): undefined extends P ? (props?: P) => OpNode<P> : (props: P) => OpNode<P>;\n\n/**\n * component creates a factory that produces component nodes.\n *\n * @example\n *\n *     const A = component<string>(() => {\n *       let _text;\n *       const click = onClick(() => { console.log(_text); });\n *\n *       return (text) => (\n *         _text = text,\n *         Events(click,\n *           button(_, _, \"Click Me\"),\n *         )\n *       );\n *     });\n *\n * @param c Component function.\n * @param e `areEqual` function.\n * @returns Factory that produces component nodes.\n */\nexport function component<P>(\n  c: (c: Component) => (props: P) => Op,\n  e?: (prev: P, next: P) => boolean,\n): (props: P) => OpNode<P> {\n  const type = createOpType(NodeFlags.Component | NodeFlags.Stateful | NodeFlags.DirtyCheck, { c, e });\n  return (props: P) => createOpNode(type, props);\n}\n\n/**\n * statelessComponent creates an factory that produces stateless components nodes.\n *\n * @example\n *\n *     const A = statelessComponent<string>((text) => div(_, _, text));\n *\n * @param update Update function.\n * @returns Factory that produces stateless component nodes.\n */\nexport function statelessComponent(\n  update: () => Op,\n): () => OpNode<undefined>;\n\n/**\n * statelessComponent creates an factory that produces stateless components nodes.\n *\n * @example\n *\n *     const A = statelessComponent<string>((text) => div(_, _, text));\n *\n * @param update Update function.\n * @param areEqual `areEqual` function.\n * @returns Factory that produces stateless component nodes.\n */\nexport function statelessComponent<P>(\n  update: (props: P) => Op,\n  areEqual?: undefined extends P ? undefined : (prev: P, next: P) => boolean,\n): undefined extends P ? (props?: P) => OpNode<P> : (props: P) => OpNode<P>;\n\n/**\n * statelessComponent creates an factory that produces stateless components nodes.\n *\n * @example\n *\n *     const A = statelessComponent<string>((text) => div(_, _, text));\n *\n * @param c Update function.\n * @param e `areEqual` function.\n * @returns Factory that produces stateless component nodes.\n */\nexport function statelessComponent<P>(\n  c: (props: P) => Op,\n  e?: undefined extends P ? undefined : (prev: P, next: P) => boolean,\n): (props: P) => OpNode<P> {\n  const type = createOpType(NodeFlags.Component, { c, e });\n  return (props: P) => createOpNode(type, props);\n}\n","import {\n  HTMLAnchorElementAttrs, HTMLElementAttrs, HTMLAreaElementAttrs, HTMLAudioElementAttrs,\n  HTMLBaseElementAttrs, HTMLBodyElementAttrs, HTMLBRElementAttrs, HTMLButtonElementAttrs,\n  HTMLCanvasElementAttrs, HTMLQuoteElementAttrs, HTMLTableCaptionElementAttrs, HTMLTableColElementAttrs,\n  HTMLModElementAttrs, HTMLDivElementAttrs, HTMLDListElementAttrs, HTMLFieldSetElementAttrs, HTMLFormElementAttrs,\n  HTMLHeadElementAttrs, HTMLHeadingElementAttrs, HTMLHRElementAttrs, HTMLHtmlElementAttrs, HTMLIFrameElementAttrs,\n  HTMLImageElementAttrs, HTMLInputElementAttrs, HTMLLabelElementAttrs, HTMLLegendElementAttrs, HTMLLIElementAttrs,\n  HTMLLinkElementAttrs, HTMLMapElementAttrs, HTMLMenuElementAttrs, HTMLMetaElementAttrs, HTMLMeterElementAttrs,\n  HTMLOListElementAttrs, HTMLOptGroupElementAttrs, HTMLOptionElementAttrs, HTMLParagraphElementAttrs,\n  HTMLPictureElementAttrs, HTMLPreElementAttrs, HTMLProgressElementAttrs, HTMLScriptElementAttrs,\n  HTMLSelectElementAttrs, HTMLSourceElementAttrs, HTMLSpanElementAttrs, HTMLStyleElementAttrs,\n  HTMLTableDataCellElementAttrs, HTMLTableElementAttrs, HTMLTableHeaderCellElementAttrs, HTMLTableRowElementAttrs,\n  HTMLTableSectionElementAttrs, HTMLTemplateElementAttrs, HTMLTextAreaElementAttrs, HTMLTitleElementAttrs,\n  HTMLTrackElementAttrs, HTMLUListElementAttrs, HTMLVideoElementAttrs,\n\n  AttributeDirective, elementFactory, htmlElementFactory, NodeFlags,\n  emitAttribute, emitChildren, escapeAttributeValue, escapeText, IGNORE_RENDER_TO_STRING,\n} from \"ivi\";\n\n/**\n * {@link AttributeDirective} with `\"\"` value and {@link updateValue} sync function.\n */\nconst VALUE_EMPTY: AttributeDirective<string> = { v: \"\", u: updateValue };\n\n/**\n * {@link AttributeDirective} with `false` value and {@link updateChecked} sync function.\n */\nconst CHECKED_FALSE: AttributeDirective<boolean> = { v: false, u: updateChecked };\n\n/**\n * {@link AttributeDirective} with `true` value and {@link updateChecked} sync function.\n */\nconst CHECKED_TRUE: AttributeDirective<boolean> = { v: true, u: updateChecked };\n\n/**\n * {@link AttributeDirective} with `true` value that emits `checked` attribute.\n */\nconst CHECKED_TRUE_RENDER_TO_STRING: AttributeDirective<boolean> = { v: true, s: () => { emitAttribute(\"checked\"); } };\n\n/**\n * Render to string function for an {@link AttributeDirective} created with {@link VALUE} function.\n *\n * @param key Attribute key.\n * @param value Value.\n */\nfunction renderToStringValue(key: string, value: string) {\n  emitAttribute(`value=\"${escapeAttributeValue(value)}\"`);\n}\n\n/**\n * Render to string function for an {@link AttributeDirective} created with {@link CONTENT} function.\n *\n * @param key Attribute key.\n * @param value Value.\n */\nfunction renderToStringContent(key: string, value: string) {\n  emitChildren(escapeText(value));\n}\n\n/**\n * Synchronization function for {@link AttributeDirective} created with {@link VALUE} function.\n *\n * @param element Target element.\n * @param key Attribute key.\n * @param prev Previous value.\n * @param next Next value.\n */\nfunction updateValue(\n  element: Element,\n  key: string,\n  prev: string | undefined,\n  next: string | undefined,\n) {\n  if (prev === void 0) {\n    if (next !== \"\") {\n      (element as HTMLInputElement | HTMLTextAreaElement).value = next!;\n    }\n  } else if (next !== void 0 && ((element as HTMLInputElement | HTMLTextAreaElement).value !== next)) {\n    (element as HTMLInputElement | HTMLTextAreaElement).value = next;\n  }\n}\n\n/**\n * Synchronization function for {@link AttributeDirective} created with {@link CHECKED} function.\n *\n * @param element Target element.\n * @param key Attribute key.\n * @param prev Previous value.\n * @param next Next value.\n */\nfunction updateChecked(\n  element: Element,\n  key: string,\n  prev: boolean | undefined,\n  next: boolean | undefined,\n) {\n  if (prev === void 0) {\n    if (next) {\n      (element as HTMLInputElement).checked = next;\n    }\n  } else if (next !== void 0) {\n    if ((element as HTMLInputElement).checked !== next) {\n      (element as HTMLInputElement).checked = next!;\n    }\n  }\n}\n\n/**\n * VALUE function creates a {@link AttributeDirective} that assigns a `value` property to an HTMLInputElement.\n *\n * @example\n *\n *   const e = input(\"\", { value: VALUE(\"value\") });\n *\n * @param v Value.\n * @returns {@link AttributeDirective}\n */\nexport const VALUE = (v: string): AttributeDirective<string> => (\n  process.env.IVI_TARGET === \"ssr\" ?\n    v === \"\" ? IGNORE_RENDER_TO_STRING : { v, s: renderToStringValue } :\n    v === \"\" ? VALUE_EMPTY : { v, u: updateValue }\n);\n\n/**\n * CONTENT function creates a {@link AttributeDirective} that assigns a `value` property to an HTMLTextAreaElement.\n *\n * @example\n *\n *   const e = textarea(\"\", { content: CONTENT(\"content\") });\n *\n * @param v Value.\n * @returns {@link AttributeDirective}\n */\nexport const CONTENT = (\n  process.env.IVI_TARGET === \"ssr\" ?\n    (v: string): AttributeDirective<string> => (\n      v === \"\" ? IGNORE_RENDER_TO_STRING : ({ v, s: renderToStringContent })\n    ) :\n    VALUE\n);\n\n/**\n * CHECKED function creates a {@link AttributeDirective} that assigns a `checked` property to an HTMLInputElement.\n *\n * @example\n *\n *   const e = input(\"\", { checked: CHECKED(true) });\n *\n * @param v Checked value.\n * @returns {@link AttributeDirective}\n */\nexport const CHECKED = (v: boolean): AttributeDirective<boolean> => (\n  process.env.IVI_TARGET === \"ssr\" ?\n    v ? CHECKED_TRUE_RENDER_TO_STRING : IGNORE_RENDER_TO_STRING :\n    v ? CHECKED_TRUE : CHECKED_FALSE\n);\n\n/* tslint:disable:max-line-length */\n/**\n * Creates OpNode HTML element <a>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <a>\n */\nexport const a = /*#__PURE__*/htmlElementFactory<HTMLAnchorElementAttrs, HTMLAnchorElement>(\"a\");\n\n/**\n * Creates OpNode HTML element <abbr>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/abbr}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <abbr>\n */\nexport const abbr = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"abbr\");\n\n/**\n * Creates OpNode HTML element <address>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/address}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <address>\n */\nexport const address = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"address\");\n\n/**\n * Creates OpNode HTML element <article>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/article}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <article>\n */\nexport const article = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"article\");\n\n/**\n * Creates OpNode HTML element <aside>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/aside}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <aside>\n */\nexport const aside = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"aside\");\n\n/**\n * Creates OpNode HTML element <b>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/b}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <b>\n */\nexport const b = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"b\");\n\n/**\n * Creates OpNode HTML element <base>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/base}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <base>\n */\nexport const base = /*#__PURE__*/elementFactory<HTMLBaseElementAttrs, HTMLBaseElement>(\"base\", NodeFlags.Element | NodeFlags.VoidElement);\n\n/**\n * Creates OpNode HTML element <bdo>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/bdo}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <bdo>\n */\nexport const bdo = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"bdo\");\n\n/**\n * Creates OpNode HTML element <blockquote>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/blockquote}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <blockquote>\n */\nexport const blockquote = /*#__PURE__*/htmlElementFactory<HTMLQuoteElementAttrs, HTMLQuoteElement>(\"blockquote\");\n\n/**\n * Creates OpNode HTML element <body>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/body}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <body>\n */\nexport const body = /*#__PURE__*/htmlElementFactory<HTMLBodyElementAttrs, HTMLBodyElement>(\"body\");\n\n/**\n * Creates OpNode HTML element <br>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/br}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <br>\n */\nexport const br = /*#__PURE__*/elementFactory<HTMLBRElementAttrs, HTMLBRElement>(\"br\", NodeFlags.Element | NodeFlags.VoidElement);\n\n/**\n * Creates OpNode HTML element <button>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <button>\n */\nexport const button = /*#__PURE__*/htmlElementFactory<HTMLButtonElementAttrs, HTMLButtonElement>(\"button\");\n\n/**\n * Creates OpNode HTML element <canvas>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <canvas>\n */\nexport const canvas = /*#__PURE__*/htmlElementFactory<HTMLCanvasElementAttrs, HTMLCanvasElement>(\"canvas\");\n\n/**\n * Creates OpNode HTML element <caption>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <caption>\n */\nexport const caption = /*#__PURE__*/htmlElementFactory<HTMLTableCaptionElementAttrs, HTMLTableCaptionElement>(\"caption\");\n\n/**\n * Creates OpNode HTML element <cite>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/cite}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <cite>\n */\nexport const cite = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"cite\");\n\n/**\n * Creates OpNode HTML element <code>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/code}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <code>\n */\nexport const code = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"code\");\n\n/**\n * Creates OpNode HTML element <col>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/col}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <col>\n */\nexport const col = /*#__PURE__*/elementFactory<HTMLTableColElementAttrs, HTMLTableColElement>(\"col\", NodeFlags.Element | NodeFlags.VoidElement);\n\n/**\n * Creates OpNode HTML element <colgroup>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/colgroup}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <colgroup>\n */\nexport const colgroup = /*#__PURE__*/htmlElementFactory<HTMLTableColElementAttrs, HTMLTableColElement>(\"colgroup\");\n\n/**\n * Creates OpNode HTML element <del>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/del}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <del>\n */\nexport const del = /*#__PURE__*/htmlElementFactory<HTMLModElementAttrs, HTMLModElement>(\"del\");\n\n/**\n * Creates OpNode HTML element <dfn>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dfn}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <dfn>\n */\nexport const dfn = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"dfn\");\n\n/**\n * Creates OpNode HTML element <div>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <div>\n */\nexport const div = /*#__PURE__*/htmlElementFactory<HTMLDivElementAttrs, HTMLDivElement>(\"div\");\n\n/**\n * Creates OpNode HTML element <dd>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dd}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <dd>\n */\nexport const dd = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"dd\");\n\n/**\n * Creates OpNode HTML element <dl>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dl}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <dl>\n */\nexport const dl = /*#__PURE__*/htmlElementFactory<HTMLDListElementAttrs, HTMLDListElement>(\"dl\");\n\n/**\n * Creates OpNode HTML element <dt>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dt}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <dt>\n */\nexport const dt = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"dt\");\n\n/**\n * Creates OpNode HTML element <em>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/em}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <em>\n */\nexport const em = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"em\");\n\n/**\n * Creates OpNode HTML element <fieldset>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/fieldset}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <fieldset>\n */\nexport const fieldset = /*#__PURE__*/htmlElementFactory<HTMLFieldSetElementAttrs, HTMLFieldSetElement>(\"fieldset\");\n\n/**\n * Creates OpNode HTML element <figcaption>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/figcaption}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <figcaption>\n */\nexport const figcaption = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"figcaption\");\n\n/**\n * Creates OpNode HTML element <figure>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/figure}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <figure>\n */\nexport const figure = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"figure\");\n\n/**\n * Creates OpNode HTML element <footer>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/footer}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <footer>\n */\nexport const footer = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"footer\");\n\n/**\n * Creates OpNode HTML element <form>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <form>\n */\nexport const form = /*#__PURE__*/htmlElementFactory<HTMLFormElementAttrs, HTMLFormElement>(\"form\");\n\n/**\n * Creates OpNode HTML element <h1>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h1}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <h1>\n */\nexport const h1 = /*#__PURE__*/htmlElementFactory<HTMLHeadingElementAttrs, HTMLHeadingElement>(\"h1\");\n\n/**\n * Creates OpNode HTML element <h2>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h2}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <h2>\n */\nexport const h2 = /*#__PURE__*/htmlElementFactory<HTMLHeadingElementAttrs, HTMLHeadingElement>(\"h2\");\n\n/**\n * Creates OpNode HTML element <h3>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h3}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <h3>\n */\nexport const h3 = /*#__PURE__*/htmlElementFactory<HTMLHeadingElementAttrs, HTMLHeadingElement>(\"h3\");\n\n/**\n * Creates OpNode HTML element <h4>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h4}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <h4>\n */\nexport const h4 = /*#__PURE__*/htmlElementFactory<HTMLHeadingElementAttrs, HTMLHeadingElement>(\"h4\");\n\n/**\n * Creates OpNode HTML element <h5>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h5}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <h5>\n */\nexport const h5 = /*#__PURE__*/htmlElementFactory<HTMLHeadingElementAttrs, HTMLHeadingElement>(\"h5\");\n\n/**\n * Creates OpNode HTML element <h6>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h6}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <h6>\n */\nexport const h6 = /*#__PURE__*/htmlElementFactory<HTMLHeadingElementAttrs, HTMLHeadingElement>(\"h6\");\n\n/**\n * Creates OpNode HTML element <head>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/head}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <head>\n */\nexport const head = /*#__PURE__*/htmlElementFactory<HTMLHeadElementAttrs, HTMLHeadElement>(\"head\");\n\n/**\n * Creates OpNode HTML element <header>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/header}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <header>\n */\nexport const header = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"header\");\n\n/**\n * Creates OpNode HTML element <hgroup>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/hgroup}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <hgroup>\n */\nexport const hgroup = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"hgroup\");\n\n/**\n * Creates OpNode HTML element <hr>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/hr}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <hr>\n */\nexport const hr = /*#__PURE__*/elementFactory<HTMLHRElementAttrs, HTMLHRElement>(\"hr\", NodeFlags.Element | NodeFlags.VoidElement);\n\n/**\n * Creates OpNode HTML element <html>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/html}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <html>\n */\nexport const html = /*#__PURE__*/htmlElementFactory<HTMLHtmlElementAttrs, HTMLHtmlElement>(\"html\");\n\n/**\n * Creates OpNode HTML element <i>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/i}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <i>\n */\nexport const i = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"i\");\n\n/**\n * Creates OpNode HTML element <iframe>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <iframe>\n */\nexport const iframe = /*#__PURE__*/htmlElementFactory<HTMLIFrameElementAttrs, HTMLIFrameElement>(\"iframe\");\n\n/**\n * Creates OpNode HTML element <img>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <img>\n */\nexport const img = /*#__PURE__*/elementFactory<HTMLImageElementAttrs, HTMLImageElement>(\"img\", NodeFlags.Element | NodeFlags.VoidElement);\n\n/**\n * Creates OpNode HTML element <area>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/area}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <area>\n */\nexport const area = /*#__PURE__*/elementFactory<HTMLAreaElementAttrs, HTMLAreaElement>(\"area\", NodeFlags.Element | NodeFlags.VoidElement);\n\n/**\n * Creates OpNode HTML element <map>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/map}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <map>\n */\nexport const map = /*#__PURE__*/htmlElementFactory<HTMLMapElementAttrs, HTMLMapElement>(\"map\");\n\n/**\n * Creates OpNode HTML element <ins>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ins}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <ins>\n */\nexport const ins = /*#__PURE__*/htmlElementFactory<HTMLModElementAttrs, HTMLModElement>(\"ins\");\n\n/**\n * Creates OpNode HTML element <kbd>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/kbd}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <kbd>\n */\nexport const kbd = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"kbd\");\n\n/**\n * Creates OpNode HTML element <label>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/label}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <label>\n */\nexport const label = /*#__PURE__*/htmlElementFactory<HTMLLabelElementAttrs, HTMLLabelElement>(\"label\");\n\n/**\n * Creates OpNode HTML element <legend>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/legend}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <legend>\n */\nexport const legend = /*#__PURE__*/htmlElementFactory<HTMLLegendElementAttrs, HTMLLegendElement>(\"legend\");\n\n/**\n * Creates OpNode HTML element <li>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/li}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <li>\n */\nexport const li = /*#__PURE__*/htmlElementFactory<HTMLLIElementAttrs, HTMLLIElement>(\"li\");\n\n/**\n * Creates OpNode HTML element <link>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <link>\n */\nexport const link = /*#__PURE__*/elementFactory<HTMLLinkElementAttrs, HTMLLinkElement>(\"link\", NodeFlags.Element | NodeFlags.VoidElement);\n\n/**\n * Creates OpNode HTML element <main>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/main}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <main>\n */\nexport const main = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"main\");\n\n/**\n * Creates OpNode HTML element <mark>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/mark}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <mark>\n */\nexport const mark = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"mark\");\n\n/**\n * Creates OpNode HTML element <menu>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/menu}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <menu>\n */\nexport const menu = /*#__PURE__*/htmlElementFactory<HTMLMenuElementAttrs, HTMLMenuElement>(\"menu\");\n\n/**\n * Creates OpNode HTML element <meta>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <meta>\n */\nexport const meta = /*#__PURE__*/elementFactory<HTMLMetaElementAttrs, HTMLMetaElement>(\"meta\", NodeFlags.Element | NodeFlags.VoidElement);\n\n/**\n * Creates OpNode HTML element <meter>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meter}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <meter>\n */\nexport const meter = /*#__PURE__*/htmlElementFactory<HTMLMeterElementAttrs, HTMLMeterElement>(\"meter\");\n\n/**\n * Creates OpNode HTML element <nav>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/nav}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <nav>\n */\nexport const nav = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"nav\");\n\n/**\n * Creates OpNode HTML element <noscript>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/noscript}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <noscript>\n */\nexport const noscript = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"noscript\");\n\n/**\n * Creates OpNode HTML element <ol>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ol}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <ol>\n */\nexport const ol = /*#__PURE__*/htmlElementFactory<HTMLOListElementAttrs, HTMLOListElement>(\"ol\");\n\n/**\n * Creates OpNode HTML element <optgroup>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/optgroup}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <optgroup>\n */\nexport const optgroup = /*#__PURE__*/htmlElementFactory<HTMLOptGroupElementAttrs, HTMLOptGroupElement>(\"optgroup\");\n\n/**\n * Creates OpNode HTML element <option>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <option>\n */\nexport const option = /*#__PURE__*/htmlElementFactory<HTMLOptionElementAttrs, HTMLOptionElement>(\"option\");\n\n/**\n * Creates OpNode HTML element <p>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/p}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <p>\n */\nexport const p = /*#__PURE__*/htmlElementFactory<HTMLParagraphElementAttrs, HTMLParagraphElement>(\"p\");\n\n/**\n * Creates OpNode HTML element <picture>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/picture}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <picture>\n */\nexport const picture = /*#__PURE__*/htmlElementFactory<HTMLPictureElementAttrs, HTMLPictureElement>(\"picture\");\n\n/**\n * Creates OpNode HTML element <pre>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/pre}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <pre>\n */\nexport const pre = /*#__PURE__*/elementFactory<HTMLPreElementAttrs, HTMLPreElement>(\"pre\", NodeFlags.Element | NodeFlags.NewlineEatingElement);\n\n/**\n * Creates OpNode HTML element <progress>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/progress}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <progress>\n */\nexport const progress = /*#__PURE__*/htmlElementFactory<HTMLProgressElementAttrs, HTMLProgressElement>(\"progress\");\n\n/**\n * Creates OpNode HTML element <q>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/q}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <q>\n */\nexport const q = /*#__PURE__*/htmlElementFactory<HTMLQuoteElementAttrs, HTMLQuoteElement>(\"q\");\n\n/**\n * Creates OpNode HTML element <rt>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/rt}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <rt>\n */\nexport const rt = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"rt\");\n\n/**\n * Creates OpNode HTML element <ruby>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ruby}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <ruby>\n */\nexport const ruby = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"ruby\");\n\n/**\n * Creates OpNode HTML element <s>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/s}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <s>\n */\nexport const s = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"s\");\n\n/**\n * Creates OpNode HTML element <samp>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/samp}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <samp>\n */\nexport const samp = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"samp\");\n\n/**\n * Creates OpNode HTML element <script>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <script>\n */\nexport const script = /*#__PURE__*/htmlElementFactory<HTMLScriptElementAttrs, HTMLScriptElement>(\"script\");\n\n/**\n * Creates OpNode HTML element <section>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/section}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <section>\n */\nexport const section = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"section\");\n\n/**\n * Creates OpNode HTML element <select>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <select>\n */\nexport const select = /*#__PURE__*/htmlElementFactory<HTMLSelectElementAttrs, HTMLSelectElement>(\"select\");\n\n/**\n * Creates OpNode HTML element <source>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/source}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <source>\n */\nexport const source = /*#__PURE__*/elementFactory<HTMLSourceElementAttrs, HTMLSourceElement>(\"source\", NodeFlags.Element | NodeFlags.VoidElement);\n\n/**\n * Creates OpNode HTML element <span>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <span>\n */\nexport const span = /*#__PURE__*/htmlElementFactory<HTMLSpanElementAttrs, HTMLSpanElement>(\"span\");\n\n/**\n * Creates OpNode HTML element <strong>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/strong}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <strong>\n */\nexport const strong = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"strong\");\n\n/**\n * Creates OpNode HTML element <style>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/style}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <style>\n */\nexport const style = /*#__PURE__*/htmlElementFactory<HTMLStyleElementAttrs, HTMLStyleElement>(\"style\");\n\n/**\n * Creates OpNode HTML element <sub>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/sub}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <sub>\n */\nexport const sub = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"sub\");\n\n/**\n * Creates OpNode HTML element <sup>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/sup}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <sup>\n */\nexport const sup = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"sup\");\n\n/**\n * Creates OpNode HTML element <table>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/table}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <table>\n */\nexport const table = /*#__PURE__*/htmlElementFactory<HTMLTableElementAttrs, HTMLTableElement>(\"table\");\n\n/**\n * Creates OpNode HTML element <tbody>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tbody}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <tbody>\n */\nexport const tbody = /*#__PURE__*/htmlElementFactory<HTMLTableSectionElementAttrs, HTMLTableSectionElement>(\"tbody\");\n\n/**\n * Creates OpNode HTML element <td>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/td}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <td>\n */\nexport const td = /*#__PURE__*/htmlElementFactory<HTMLTableDataCellElementAttrs, HTMLTableDataCellElement>(\"td\");\n\n/**\n * Creates OpNode HTML element <template>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/template}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <template>\n */\nexport const template = /*#__PURE__*/htmlElementFactory<HTMLTemplateElementAttrs, HTMLTemplateElement>(\"template\");\n\n/**\n * Creates OpNode HTML element <tfoot>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tfoot}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <tfoot>\n */\nexport const tfoot = /*#__PURE__*/htmlElementFactory<HTMLTableSectionElementAttrs, HTMLTableSectionElement>(\"tfoot\");\n\n/**\n * Creates OpNode HTML element <th>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/th}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <th>\n */\nexport const th = /*#__PURE__*/htmlElementFactory<HTMLTableHeaderCellElementAttrs, HTMLTableHeaderCellElement>(\"th\");\n\n/**\n * Creates OpNode HTML element <thead>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/thead}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <thead>\n */\nexport const thead = /*#__PURE__*/htmlElementFactory<HTMLTableSectionElementAttrs, HTMLTableSectionElement>(\"thead\");\n\n/**\n * Creates OpNode HTML element <time>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/time}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <time>\n */\nexport const time = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"time\");\n\n/**\n * Creates OpNode HTML element <title>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/title}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <title>\n */\nexport const title = /*#__PURE__*/htmlElementFactory<HTMLTitleElementAttrs, HTMLTitleElement>(\"title\");\n\n/**\n * Creates OpNode HTML element <tr>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tr}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <tr>\n */\nexport const tr = /*#__PURE__*/htmlElementFactory<HTMLTableRowElementAttrs, HTMLTableRowElement>(\"tr\");\n\n/**\n * Creates OpNode HTML element <track>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/track}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <track>\n */\nexport const track = /*#__PURE__*/elementFactory<HTMLTrackElementAttrs, HTMLTrackElement>(\"track\", NodeFlags.Element | NodeFlags.VoidElement);\n\n/**\n * Creates OpNode HTML element <u>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/u}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <u>\n */\nexport const u = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"u\");\n\n/**\n * Creates OpNode HTML element <ul>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ul}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <ul>\n */\nexport const ul = /*#__PURE__*/htmlElementFactory<HTMLUListElementAttrs, HTMLUListElement>(\"ul\");\n\n/**\n * Creates OpNode HTML element <wbr>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/wbr}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <wbr>\n */\nexport const wbr = /*#__PURE__*/elementFactory<HTMLElementAttrs, HTMLElement>(\"wbr\", NodeFlags.Element | NodeFlags.VoidElement);\n\n/**\n * Creates OpNode HTML element <textarea>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <textarea>\n */\nexport const textarea = /*#__PURE__*/elementFactory<HTMLTextAreaElementAttrs, HTMLTextAreaElement>(\"textarea\", NodeFlags.Element | NodeFlags.NewlineEatingElement);\n\n/**\n * Creates OpNode HTML element <input>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <input>\n */\nexport const input = /*#__PURE__*/elementFactory<HTMLInputElementAttrs, HTMLInputElement>(\"input\", NodeFlags.Element | NodeFlags.VoidElement);\n\n/**\n * Creates OpNode HTML element <audio>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <audio>\n */\nexport const audio = /*#__PURE__*/htmlElementFactory<HTMLAudioElementAttrs, HTMLAudioElement>(\"audio\");\n\n/**\n * Creates OpNode HTML element <video>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <video>\n */\nexport const video = /*#__PURE__*/htmlElementFactory<HTMLVideoElementAttrs, HTMLVideoElement>(\"video\");\n","var MonitorMaxSamples = 100;\nvar MonitorSamplesResult = (function () {\n    function MonitorSamplesResult(min, max, mean, last) {\n        this.min = min;\n        this.max = max;\n        this.mean = mean;\n        this.last = last;\n    }\n    return MonitorSamplesResult;\n}());\n/**\n * Profile Samples.\n */\nvar MonitorSamples = (function () {\n    function MonitorSamples(maxSamples) {\n        this.samples = [];\n        this.maxSamples = maxSamples;\n        this._i = -1;\n    }\n    MonitorSamples.prototype.addSample = function (v) {\n        this._i = (this._i + 1) % this.maxSamples;\n        this.samples[this._i] = v;\n    };\n    MonitorSamples.prototype.each = function (fn) {\n        var samples = this.samples;\n        for (var i = 0; i < samples.length; i++) {\n            fn(samples[(this._i + 1 + i) % samples.length], i);\n        }\n    };\n    MonitorSamples.prototype.calc = function () {\n        var samples = this.samples;\n        if (samples.length === 0) {\n            return new MonitorSamplesResult(0, 0, 0, 0);\n        }\n        var min = samples[(this._i + 1) % samples.length];\n        var max = min;\n        var sum = 0;\n        for (var i = 0; i < samples.length; i++) {\n            var k = samples[(this._i + 1 + i) % samples.length];\n            if (k < min) {\n                min = k;\n            }\n            if (k > max) {\n                max = k;\n            }\n            sum += k;\n        }\n        var last = samples[this._i];\n        var mean = sum / samples.length;\n        return new MonitorSamplesResult(min, max, mean, last);\n    };\n    return MonitorSamples;\n}());\n\n/**\n * Basic Counter.\n */\nvar BasicCounter = (function () {\n    function BasicCounter() {\n        this.value = 0;\n        this.onChange = null;\n    }\n    BasicCounter.prototype.inc = function (value) {\n        if (value > 0) {\n            this.value += value;\n            this.onChange();\n        }\n    };\n    return BasicCounter;\n}());\nvar TimestampedValue = (function () {\n    function TimestampedValue(timestamp, value) {\n        this.value = value;\n        this.next = null;\n    }\n    return TimestampedValue;\n}());\n/**\n * Sliding Counter counts how many times `inc` method were called during `interval` period.\n */\nvar SlidingCounter = (function () {\n    function SlidingCounter(interval) {\n        var _this = this;\n        this._dec = function () {\n            var now = performance.now();\n            while (_this._firstTimestamp !== null) {\n                var nextTimestamp = _this._firstTimestamp;\n                if (now >= nextTimestamp.value) {\n                    _this.value -= nextTimestamp.value;\n                    _this._firstTimestamp = _this._firstTimestamp.next;\n                }\n                else {\n                    setTimeout(_this._dec, Math.ceil(nextTimestamp.value - now));\n                    break;\n                }\n            }\n            if (_this._firstTimestamp === null) {\n                _this._lastTimestamp = null;\n            }\n            _this.onChange();\n        };\n        this.interval = interval;\n        this.value = 0;\n        this.onChange = null;\n        this._firstTimestamp = null;\n        this._lastTimestamp = null;\n    }\n    SlidingCounter.prototype.inc = function (value) {\n        if (value > 0) {\n            var timestamp = new TimestampedValue(performance.now() + this.interval, value);\n            if (this._firstTimestamp === null) {\n                this._firstTimestamp = timestamp;\n                setTimeout(this._dec, this.interval);\n            }\n            else {\n                this._lastTimestamp.next = timestamp;\n            }\n            this._lastTimestamp = timestamp;\n            this.value += value;\n            this.onChange();\n        }\n    };\n    return SlidingCounter;\n}());\n\nvar frameTasks = [];\nvar rafId = -1;\n/**\n * Schedule new task that will be executed on the next frame.\n */\nfunction scheduleNextFrameTask(task) {\n    frameTasks.push(task);\n    if (rafId === -1) {\n        requestAnimationFrame(function (t) {\n            rafId = -1;\n            var tasks = frameTasks;\n            frameTasks = [];\n            for (var i = 0; i < tasks.length; i++) {\n                tasks[i]();\n            }\n        });\n    }\n}\n\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar MonitorGraphHeight = 30;\nvar MonitorGraphWidth = MonitorMaxSamples;\nvar Widget = (function () {\n    function Widget(name) {\n        var _this = this;\n        this._sync = function () {\n            _this.sync();\n            _this._dirty = false;\n        };\n        this.name = name;\n        this.element = document.createElement(\"div\");\n        this.element.style.cssText = \"padding: 2px;\" +\n            \"background-color: #020;\" +\n            \"font-family: monospace;\" +\n            \"font-size: 12px;\" +\n            \"color: #0f0\";\n        this._dirty = false;\n        this.invalidate();\n    }\n    Widget.prototype.invalidate = function () {\n        if (!this._dirty) {\n            this._dirty = true;\n            scheduleNextFrameTask(this._sync);\n        }\n    };\n    Widget.prototype.sync = function () {\n        throw new Error(\"sync method not implemented\");\n    };\n    return Widget;\n}());\nvar MonitorWidgetFlags;\n(function (MonitorWidgetFlags) {\n    MonitorWidgetFlags[MonitorWidgetFlags[\"HideMin\"] = 1] = \"HideMin\";\n    MonitorWidgetFlags[MonitorWidgetFlags[\"HideMax\"] = 2] = \"HideMax\";\n    MonitorWidgetFlags[MonitorWidgetFlags[\"HideMean\"] = 4] = \"HideMean\";\n    MonitorWidgetFlags[MonitorWidgetFlags[\"HideLast\"] = 8] = \"HideLast\";\n    MonitorWidgetFlags[MonitorWidgetFlags[\"HideGraph\"] = 16] = \"HideGraph\";\n    MonitorWidgetFlags[MonitorWidgetFlags[\"RoundValues\"] = 32] = \"RoundValues\";\n})(MonitorWidgetFlags || (MonitorWidgetFlags = {}));\nvar MonitorWidget = (function (_super) {\n    __extends(MonitorWidget, _super);\n    function MonitorWidget(name, flags, unitName, samples) {\n        var _this = _super.call(this, name) || this;\n        _this.flags = flags;\n        _this.unitName = unitName;\n        _this.samples = samples;\n        var label = document.createElement(\"div\");\n        label.style.cssText = \"text-align: center\";\n        label.textContent = _this.name;\n        var text = document.createElement(\"div\");\n        if ((flags & MonitorWidgetFlags.HideMin) === 0) {\n            _this.minText = document.createElement(\"div\");\n            text.appendChild(_this.minText);\n        }\n        else {\n            _this.minText = null;\n        }\n        if ((flags & MonitorWidgetFlags.HideMax) === 0) {\n            _this.maxText = document.createElement(\"div\");\n            text.appendChild(_this.maxText);\n        }\n        else {\n            _this.maxText = null;\n        }\n        if ((flags & MonitorWidgetFlags.HideMean) === 0) {\n            _this.meanText = document.createElement(\"div\");\n            text.appendChild(_this.meanText);\n        }\n        else {\n            _this.meanText = null;\n        }\n        if ((flags & MonitorWidgetFlags.HideLast) === 0) {\n            _this.lastText = document.createElement(\"div\");\n            text.appendChild(_this.lastText);\n        }\n        else {\n            _this.lastText = null;\n        }\n        _this.element.appendChild(label);\n        _this.element.appendChild(text);\n        if ((flags & MonitorWidgetFlags.HideGraph) === 0) {\n            _this.canvas = document.createElement(\"canvas\");\n            _this.canvas.style.cssText = \"display: block; padding: 0; margin: 0\";\n            _this.canvas.width = MonitorGraphWidth;\n            _this.canvas.height = MonitorGraphHeight;\n            _this.ctx = _this.canvas.getContext(\"2d\");\n            _this.element.appendChild(_this.canvas);\n        }\n        else {\n            _this.canvas = null;\n            _this.ctx = null;\n        }\n        return _this;\n    }\n    MonitorWidget.prototype.sync = function () {\n        var _this = this;\n        var result = this.samples.calc();\n        var scale = MonitorGraphHeight / (result.max * 1.2);\n        var min;\n        var max;\n        var mean;\n        var last;\n        if ((this.flags & MonitorWidgetFlags.RoundValues) === 0) {\n            min = result.min.toFixed(2);\n            max = result.max.toFixed(2);\n            mean = result.mean.toFixed(2);\n            last = result.last.toFixed(2);\n        }\n        else {\n            min = Math.round(result.min).toString();\n            max = Math.round(result.max).toString();\n            mean = Math.round(result.mean).toString();\n            last = Math.round(result.last).toString();\n        }\n        if (this.minText !== null) {\n            this.minText.textContent = \"min: \\u00A0\" + min + this.unitName;\n        }\n        if (this.maxText !== null) {\n            this.maxText.textContent = \"max: \\u00A0\" + max + this.unitName;\n        }\n        if (this.meanText !== null) {\n            this.meanText.textContent = \"mean: \" + mean + this.unitName;\n        }\n        if (this.lastText !== null) {\n            this.lastText.textContent = \"last: \" + last + this.unitName;\n        }\n        if (this.ctx !== null) {\n            this.ctx.fillStyle = \"#010\";\n            this.ctx.fillRect(0, 0, MonitorGraphWidth, MonitorGraphHeight);\n            this.ctx.fillStyle = \"#0f0\";\n            this.samples.each(function (v, i) {\n                _this.ctx.fillRect(i, MonitorGraphHeight, 1, -(v * scale));\n            });\n        }\n    };\n    return MonitorWidget;\n}(Widget));\nvar CounterWidget = (function (_super) {\n    __extends(CounterWidget, _super);\n    function CounterWidget(name, counter) {\n        var _this = _super.call(this, name) || this;\n        _this.counter = counter;\n        _this.text = document.createElement(\"div\");\n        _this.element.appendChild(_this.text);\n        return _this;\n    }\n    CounterWidget.prototype.sync = function () {\n        this.text.textContent = this.name + \": \" + this.counter.value;\n    };\n    return CounterWidget;\n}(Widget));\n\nvar container = null;\nvar initialized = false;\n/**\n * Initialize Performance Monitor.\n */\nfunction initPerfMonitor(options) {\n    if (!initialized) {\n        if (options.container) {\n            container = options.container;\n        }\n        initialized = true;\n    }\n}\n/**\n * Check that everything is properly initialized.\n */\nfunction checkInit() {\n    if (!container) {\n        container = document.createElement(\"div\");\n        container.style.cssText = \"position: fixed;\" +\n            \"opacity: 0.9;\" +\n            \"right: 0;\" +\n            \"bottom: 0\";\n        document.body.appendChild(container);\n    }\n    initialized = true;\n}\n/**\n * Start FPS monitor\n */\nfunction startFPSMonitor(flags) {\n    if (flags === void 0) { flags = MonitorWidgetFlags.HideMin | MonitorWidgetFlags.HideMax |\n        MonitorWidgetFlags.HideMean | MonitorWidgetFlags.RoundValues; }\n    checkInit();\n    var data = new MonitorSamples(MonitorMaxSamples);\n    var w = new MonitorWidget(\"FPS\", flags, \"\", data);\n    container.appendChild(w.element);\n    var alpha = 2 / 121;\n    var last = 0;\n    var fps = 60;\n    function update(now) {\n        if (last > 0) {\n            fps += alpha * ((1000 / (now - last)) - fps);\n        }\n        last = now;\n        data.addSample(fps);\n        w.invalidate();\n        requestAnimationFrame(update);\n    }\n    requestAnimationFrame(update);\n}\n/**\n * Start Memory Monitor\n */\nfunction startMemMonitor(flags) {\n    if (flags === void 0) { flags = MonitorWidgetFlags.HideMin | MonitorWidgetFlags.HideMean; }\n    checkInit();\n    if (performance.memory === undefined) {\n        return;\n    }\n    var data = new MonitorSamples(MonitorMaxSamples);\n    var w = new MonitorWidget(\"Memory\", flags, \"MB\", data);\n    container.appendChild(w.element);\n    function update() {\n        data.addSample(Math.round(performance.memory.usedJSHeapSize / (1024 * 1024)));\n        w.invalidate();\n        setTimeout(update, 30);\n    }\n    update();\n}\nvar ProfilerDetails = (function () {\n    function ProfilerDetails(name, unitName, flags) {\n        this.data = new MonitorSamples(MonitorMaxSamples);\n        this.widget = new MonitorWidget(name, flags, unitName, this.data);\n        this.startTime = -1;\n    }\n    return ProfilerDetails;\n}());\nvar profilerInstances = {};\nvar CounterDetails = (function () {\n    function CounterDetails(name, interval) {\n        var _this = this;\n        this.data = interval === undefined ? new BasicCounter() : new SlidingCounter(interval);\n        this.widget = new CounterWidget(name, this.data);\n        this.data.onChange = function () {\n            _this.widget.invalidate();\n        };\n    }\n    return CounterDetails;\n}());\nvar counterInstances = {};\n/**\n * Initialize profiler and insert into container.\n */\nfunction initProfiler(name, flags) {\n    if (flags === void 0) { flags = 0; }\n    checkInit();\n    var profiler = profilerInstances[name];\n    if (profiler === void 0) {\n        profilerInstances[name] = profiler = new ProfilerDetails(name, \"ms\", flags);\n        container.appendChild(profiler.widget.element);\n    }\n}\n/**\n * Initialize counter and insert into container.\n */\nfunction initCounter(name, interval) {\n    checkInit();\n    var counter = counterInstances[name];\n    if (counter === void 0) {\n        counterInstances[name] = counter = new CounterDetails(name, interval);\n        container.appendChild(counter.widget.element);\n    }\n}\nfunction startProfile(name) {\n    var profiler = profilerInstances[name];\n    if (profiler !== void 0) {\n        profiler.startTime = performance.now();\n    }\n}\nfunction endProfile(name) {\n    var now = performance.now();\n    var profiler = profilerInstances[name];\n    if (profiler !== void 0 && profiler.startTime !== -1) {\n        profiler.data.addSample(now - profiler.startTime);\n        profiler.widget.invalidate();\n    }\n}\nfunction count(name, value) {\n    if (value === void 0) { value = 1; }\n    var counter = counterInstances[name];\n    if (counter !== void 0) {\n        counter.data.inc(value);\n    }\n}\n/**\n * lookup a profile by name\n * @param name the name of the profile to lookup\n */\nfunction getProfile(name) {\n    return profilerInstances[name];\n}\n/**\n * lookup a counter by name\n * @param name the name of the counter to lookup\n */\nfunction getCounter(name) {\n    return counterInstances[name];\n}\n\nexport { initPerfMonitor, startFPSMonitor, startMemMonitor, ProfilerDetails, CounterDetails, initProfiler, initCounter, startProfile, endProfile, count, getProfile, getCounter, MonitorSamplesResult, MonitorMaxSamples, MonitorSamples, BasicCounter, SlidingCounter, Widget, MonitorWidgetFlags, MonitorWidget, CounterWidget };\n","export function queryClassName(elapsed) {\n    if (elapsed > 0) {\n        if (elapsed >= 10.0) {\n            return \"Query elapsed warn_long\";\n        }\n        else if (elapsed >= 1.0) {\n            return \"Query elapsed warn\";\n        }\n        return \"Query elapsed short\";\n    }\n    return \"\";\n}\nexport function countClassName(count) {\n    if (count >= 20) {\n        return \"label label-important\";\n    }\n    else if (count >= 10) {\n        return \"label label-warning\";\n    }\n    return \"label label-success\";\n}\n","import { startFPSMonitor, startMemMonitor, initProfiler } from \"perf-monitor\";\nlet mutations = 0.5;\nlet N = 50;\nexport function getMutations() {\n    return mutations;\n}\nexport function getN() {\n    return N;\n}\nfunction parseQueryString(a) {\n    if (a.length === 0) {\n        return {};\n    }\n    const b = {};\n    for (let i = 0; i < a.length; ++i) {\n        const p = a[i].split(\"=\", 2);\n        if (p.length === 1) {\n            b[p[0]] = \"\";\n        }\n        else {\n            b[p[0]] = decodeURIComponent(p[1].replace(/\\+/g, \" \"));\n        }\n    }\n    return b;\n}\nexport function init() {\n    const qs = parseQueryString(window.location.search.substr(1).split(\"&\"));\n    if (qs[\"n\"] !== void 0) {\n        N = parseInt(qs[\"n\"], 10);\n    }\n    if (qs[\"m\"] !== void 0) {\n        mutations = parseFloat(qs[\"m\"]);\n    }\n    document.addEventListener(\"DOMContentLoaded\", () => {\n        startFPSMonitor();\n        startMemMonitor();\n        initProfiler(\"view update\");\n        const sliderContainer = document.createElement(\"div\");\n        sliderContainer.style.display = \"flex\";\n        const slider = document.createElement(\"input\");\n        slider.type = \"range\";\n        slider.style.marginBottom = \"10px\";\n        slider.style.marginTop = \"5px\";\n        const text = document.createElement(\"label\");\n        text.textContent = \"mutations : \" + (mutations * 100).toFixed(0) + \"%\";\n        slider.addEventListener(\"change\", (e) => {\n            mutations = Number.parseFloat(e.target.value) / 100;\n            text.textContent = \"mutations : \" + (mutations * 100).toFixed(0) + \"%\";\n        });\n        sliderContainer.appendChild(text);\n        sliderContainer.appendChild(slider);\n        document.body.insertBefore(sliderContainer, document.body.firstChild);\n    });\n}\n","function randomQuery() {\n    const elapsed = Math.random() * 15;\n    let query;\n    if (Math.random() < 0.1) {\n        query = \"vacuum\";\n    }\n    else if (Math.random() < 0.2) {\n        query = \"<IDLE> in transaction\";\n    }\n    else {\n        query = \"SELECT blah FROM something\";\n    }\n    return { elapsed, query };\n}\nfunction randomQueries() {\n    const queries = [];\n    const r = Math.floor((Math.random() * 10) + 1);\n    for (let i = 0; i < r; i++) {\n        queries.push(randomQuery());\n    }\n    return queries;\n}\nconst EMPTY_QUERY = { elapsed: 0, query: \"***\" };\nlet _nextId = 0;\nfunction createDB(name, id) {\n    if (id === void 0) {\n        id = _nextId++;\n    }\n    return { id, name, queries: randomQueries() };\n}\nexport function getTopFiveQueries(db) {\n    const qs = db.queries.slice(0, 5);\n    qs.sort((a, b) => a.elapsed - b.elapsed);\n    while (qs.length < 5) {\n        qs.push(EMPTY_QUERY);\n    }\n    return qs;\n}\nexport function createState(n) {\n    const state = [];\n    for (let i = 0; i < n; i++) {\n        state.push(createDB(\"cluster\" + (i + 1)));\n        state.push(createDB(\"cluster\" + (i + 1) + \" slave\"));\n    }\n    return state;\n}\nexport function randomUpdate(state, r) {\n    for (let i = 0; i < state.length; i++) {\n        if (Math.random() < r) {\n            const { id, name } = state[i];\n            state[i] = createDB(name, id);\n        }\n    }\n}\nexport function entryFormatElapsed(v) {\n    if (v === 0) {\n        return \"\";\n    }\n    if (v > 60) {\n        const minutes = Math.floor(v / 60);\n        const comps = (v % 60).toFixed(2).split(\".\");\n        const seconds = comps[0].padStart(2, \"0\");\n        const ms = comps[1];\n        return minutes + \":\" + seconds + \".\" + ms;\n    }\n    return v.toFixed(2);\n}\n","import { _, withNextFrame, render, TrackByKey, key } from \"ivi\";\nimport { div, span, table, tbody, tr, td } from \"ivi-html\";\nimport { startProfile, endProfile } from \"perf-monitor\";\nimport { queryClassName, countClassName } from \"./css\";\nimport { init, getN, getMutations } from \"./init\";\nimport { entryFormatElapsed, getTopFiveQueries, createState, randomUpdate } from \"./state\";\nconst arrow = div(\"arrow\");\nconst Popover = (query) => (div(\"popover left\", _, [\n    div(\"popover-content\", _, query),\n    arrow,\n]));\nconst Cell = ({ elapsed, query }) => (td(queryClassName(elapsed), _, [\n    entryFormatElapsed(elapsed),\n    Popover(query),\n]));\nfunction Row(db) {\n    const topFiveQueries = getTopFiveQueries(db);\n    const count = db.queries.length;\n    return tr(_, _, [\n        td(\"dbname\", _, db.name),\n        td(\"query-count\", _, span(countClassName(count), _, count)),\n        Cell(topFiveQueries[0]),\n        Cell(topFiveQueries[1]),\n        Cell(topFiveQueries[2]),\n        Cell(topFiveQueries[3]),\n        Cell(topFiveQueries[4]),\n    ]);\n}\nconst Main = (dbs) => (table(\"table table-striped latest-data\", _, tbody(_, _, TrackByKey(dbs.map((db) => key(db.id, Row(db)))))));\ninit();\nconst state = createState(getN());\nconst container = document.getElementById(\"app\");\nwithNextFrame(() => { render(Main(state), container); })();\nfunction tick() {\n    randomUpdate(state, getMutations());\n    startProfile(\"view update\");\n    withNextFrame(() => { render(Main(state), container); })();\n    endProfile(\"view update\");\n    requestAnimationFrame(tick);\n}\ntick();\n"],"sourceRoot":""}