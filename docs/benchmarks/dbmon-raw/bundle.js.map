{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:////home/void/w/ts/ivi/packages/ivi-shared/src/shortcuts.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/vdom/operations.ts","webpack:////home/void/w/ts/ivi/packages/ivi-shared/src/error.ts","webpack:////home/void/w/ts/ivi/packages/ivi-shared/src/noop.ts","webpack:////home/void/w/ts/ivi/packages/ivi-shared/src/array.ts","webpack:////home/void/w/ts/ivi/packages/ivi-shared/src/repeatable_task_list.ts","webpack:////home/void/w/ts/ivi/packages/ivi-scheduler/src/index.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/dom/feature_detection.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/dom/shortcuts.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/dom/namespaces.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/vdom/state.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/vdom/context.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/vdom/reconciler.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/vdom/root.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/scheduler/index.ts","webpack:////home/void/w/ts/ivi/packages/ivi/src/vdom/factories.ts","webpack:////home/void/w/ts/ivi/packages/ivi-html/src/index.ts","webpack:////home/void/w/ts/ivi-examples/node_modules/perf-monitor/dist/es5/perf-monitor.js","webpack:///./src/css.ts","webpack:///./src/init.ts","webpack:///./src/state.ts","webpack:///./src/main.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_","createOpType","f","TRACK_BY_KEY","createOpNode","operations_key","k","v","TrackByKey","items","ERROR_HANDLERS","catchError","fn","apply","arguments","e","forEach","h","NOOP","unorderedArrayDeleteByIndex","array","index","length","last","pop","runRepeatableTasks","tasks","rAF","cb","requestAnimationFrame","opts","[object Object]","window","addEventListener","KeyboardEvent","MouseEvent","IOS_GESTURE_EVENT","nodeProto","Node","elementProto","Element","objectHasOwnProperty","nodeInsertBefore","insertBefore","nodeRemoveChild","removeChild","nodeCloneNode","replaceChild","cloneNode","elementSetAttribute","setAttribute","elementRemoveAttribute","setAttributeNS","removeAttribute","SVG_NAMESPACE","createStateNode","_nextNode","_deepStateFlags","_dirtyContext","_context","setContext","context","tmp","restoreContext","getContext","_pushDeepState","_popDeepState","prev","current","getDOMNode","opState","flags","children","_dirtyCheck","parentElement","moveNode","singleChild","state","deepState","_update","_moveNodes","assign","prevContext","domNode","_unmountWalk","u","_unmountRemove","textContent","_unmount","_mountText","op","node","document","createTextNode","_createElement","opType","svg","tagName","createElementNS","createElement","a","className","_updateAttrs","_mountObject","deepStateFlags","prevState","_mount","descriptor","Array","_mountFragment","childrenOps","newChildren","stateNode","_hasDifferentType","b","nextOp","nodeValue","opStateChildren","prevData","nextData","nextValue","su","_updateChildrenTrackByKeys","dirtyContext","result","j","sNode","aStartNode","bStartNode","aEnd","bEnd","aEndNode","bEndNode","start","outer","aLength","bLength","sources","pos","updated","keyIndex","Map","set","opNode","seq","lis","slice","updateStyle","element","style","bValue","setProperty","removeProperty","matchCount","keys","_updateAttr","next","ROOTS","findRoot","predicate","find","dirtyCheck","root","container","run","_flags","_microtasks","_mutationEffects","_domLayoutEffects","_beforeMutations","_afterMutations","_frameStartTime","withSchedulerTick","inner","runMicrotasks","withNextFrame","time","performance","now","_handleNextFrame","requestNextFrame","task","push","Promise","resolve","then","requestDirtyCheck","render","onclick","elementFactory","tag","type","htmlElementFactory","div","span","table","tbody","td","tr","extendStatics","MonitorWidgetFlags","MonitorMaxSamples","MonitorSamplesResult","min","max","mean","this","MonitorSamples","maxSamples","samples","_i","addSample","each","calc","sum","frameTasks","rafId","__extends","setPrototypeOf","__proto__","__","constructor","MonitorGraphHeight","MonitorGraphWidth","Widget","_this","_sync","sync","_dirty","cssText","invalidate","Error","MonitorWidget","_super","unitName","label","text","HideMin","minText","appendChild","HideMax","maxText","HideMean","meanText","HideLast","lastText","HideGraph","canvas","width","height","ctx","scale","RoundValues","toFixed","Math","round","toString","fillStyle","fillRect","perf_monitor_container","CounterWidget","counter","checkInit","body","startFPSMonitor","data","w","fps","update","startMemMonitor","undefined","memory","usedJSHeapSize","setTimeout","ProfilerDetails","widget","startTime","profilerInstances","initProfiler","profiler","endProfile","queryClassName","elapsed","countClassName","count","mutations","N","parseQueryString","split","decodeURIComponent","replace","randomQuery","query","random","randomQueries","queries","floor","EMPTY_QUERY","_nextId","createDB","id","getTopFiveQueries","db","qs","sort","randomUpdate","entryFormatElapsed","minutes","comps","arrow","Popover","Cell","Row","topFiveQueries","Main","dbs","map","location","search","substr","parseInt","parseFloat","sliderContainer","display","slider","marginBottom","marginTop","Number","target","firstChild","init","main_state","createState","main_container","getElementById","tick"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","/**\n * Shortcut for an `undefined` value.\n */\nexport const _ = void 0;\n","import { EventHandler } from \"../events/event_handler\";\nimport { NodeFlags } from \"./node_flags\";\nimport { ElementProtoDescriptor } from \"./element_proto\";\nimport { ComponentDescriptor, StatelessComponentDescriptor } from \"./component\";\n\n/**\n * Operation type.\n */\nexport interface OpType {\n  /**\n   * See {@link NodeFlags} for details.\n   */\n  readonly f: NodeFlags;\n  /**\n   * Operation type descriptor.\n   */\n  readonly d: StatelessComponentDescriptor | ComponentDescriptor | ElementProtoDescriptor | string | null;\n}\n\n/**\n * createOpType creates {@link OpType} instances.\n *\n * @param f See {@link NodeFlags} for details.\n * @param d Operation type descriptor.\n * @returns {@link OpType} instance.\n */\nexport const createOpType = (\n  f: NodeFlags,\n  d: StatelessComponentDescriptor | ComponentDescriptor | ElementProtoDescriptor | string | null,\n): OpType => ({ f, d });\n\n/**\n * OpType for Events nodes.\n */\nexport const EVENTS = createOpType(NodeFlags.Events, null);\n\n/**\n * OpType for Context nodes.\n */\nexport const CONTEXT = createOpType(NodeFlags.Context, null);\n\n/**\n * OpType for TrackByKey nodes.\n */\nexport const TRACK_BY_KEY = createOpType(NodeFlags.TrackByKey, null);\n\n/**\n * Operation node.\n */\nexport interface OpNode<T = any> {\n  /**\n   * Operation type.\n   */\n  readonly t: OpType;\n  /**\n   * Operation data.\n   */\n  readonly d: T;\n}\n\n/**\n * createOpNode creates an {@link OpNode} instance.\n *\n * @param t Operation type.\n * @param d Operation data.\n * @returns {@link OpNode} instance.\n */\nexport const createOpNode = <T>(t: OpType, d: T): OpNode<T> => ({ t, d });\n\n/**\n * Operation data for element operations.\n */\nexport interface ElementData<T = any> {\n  /**\n   * Element class name.\n   */\n  readonly n: string | undefined;\n  /**\n   * Element attributes.\n   */\n  readonly a: T | undefined;\n  /**\n   * Children operations.\n   */\n  readonly c: Op;\n}\n\n/**\n * Operation.\n */\nexport type Op = string | number | OpNode | OpArray | null;\n\n/**\n * Recursive operation array.\n */\nexport interface OpArray extends Array<Op> { }\n\n/**\n * Generic operation data for simple operations.\n */\nexport interface OpData<T = any> {\n  /**\n   * Generic value.\n   */\n  readonly v: T;\n  /**\n   * Children operation nodes.\n   */\n  readonly c: Op;\n}\n\n/**\n * Operation data for Events operations.\n */\nexport type EventsData = OpData<EventHandler>;\n\n/**\n * Operation data for Context operations.\n */\nexport type ContextData = OpData<{}>;\n\n/**\n * Operation factory for event handlers.\n *\n * @example\n *\n *     render(\n *       Events(onClick(() => { console.log(\"clicked\"); }),\n *         ChildComponent(),\n *       ),\n *       DOMContainer,\n *     );\n *\n * @param v Event handlers.\n * @param c Children operation nodes.\n * @returns Events handler operation.\n */\nexport const Events = (\n  v: EventHandler,\n  c: Op,\n): OpNode<EventsData> => createOpNode(EVENTS, { v, c });\n\n/**\n * Operation factory for context nodes.\n *\n * @example\n *\n *     render(\n *       Context({ key: 123 },\n *         ChildComponent(),\n *       ),\n *       DOMContainer,\n *     );\n *\n * @param v Context object.\n * @param c Children operation nodes.\n * @returns Context operation.\n */\nexport const Context = (v: {}, c: Op): OpNode<ContextData> => createOpNode(CONTEXT, { v, c });\n\n/**\n * Key is an object that is used by TrackByKey operations to track operations.\n */\nexport interface Key<K, V> {\n  /**\n   * Key.\n   */\n  readonly k: K;\n  /**\n   * Value.\n   */\n  readonly v: V;\n}\n\n/**\n * key creates a {@link Key} instance.\n *\n * @param k Key.\n * @param v Value.\n * @returns {@link Key} instance.\n */\nexport const key = <K, V>(k: K, v: V): Key<K, V> => ({ k, v });\n\n/**\n * Operation factory for track by key nodes.\n *\n * @example\n *\n *     const items = [1, 2, 3];\n *     render(\n *       TrackByKey(items.map((item) => key(item, div(_, _, item))),\n *       DOMContainer,\n *     );\n *\n * @param items Keyed operations.\n * @returns Track by key operation.\n */\nexport const TrackByKey = DEBUG ?\n  <T>(items: Key<T, Op>[]) => {\n    const keys = new Set<T>();\n    for (let i = 0; i < items.length; i++) {\n      const { k } = items[i];\n      if (keys.has(k)) {\n        throw new Error(`Invalid key, found duplicated key: ${k}`);\n      }\n      keys.add(k);\n    }\n    return createOpNode(TRACK_BY_KEY, items);\n  } :\n  /* istanbul ignore next */ <T>(items: Key<T, Op>[]) => createOpNode(TRACK_BY_KEY, items);\n","const ERROR_HANDLERS: Array<(e: any) => void> = [];\n\n/**\n * addErrorHandler adds an error handler for errors catched by functions decorated with `catchError()`.\n *\n * @param handler error handler.\n */\nexport function addErrorHandler(handler: (e: any) => void): void {\n  ERROR_HANDLERS.push(handler);\n}\n\n/**\n * catchError is a decorator that catches exceptions and invokes error handlers registered with `addErrorHandler()`.\n *\n * @noinline\n * @throws\n * @param fn - Function to decorate\n * @returns function decorated with a catchError\n */\nexport function catchError<T>(fn: (...args: any[]) => T): (...args: any[]) => T;\nexport function catchError<T>(fn: Function): (...args: any[]) => T {\n  return function () {\n    try {\n      return fn.apply(void 0, arguments);\n    } catch (e) {\n      ERROR_HANDLERS.forEach((h) => { h(e); });\n      throw e;\n    }\n  };\n}\n","/**\n * NOOP function.\n */\nexport const NOOP = () => { /**/ };\n\n/**\n * NOOP_FALSE function always returns `false` value.\n *\n * @returns `false` value.\n */\nexport const NOOP_FALSE = () => false;\n\n/**\n * NOOP_TRUE function always returns `true` value.\n *\n * @returns `true` value.\n */\nexport const NOOP_TRUE = () => true;\n","/**\n * append pushes item to an array and automatically creates a new array when it doesn't exist.\n *\n * @param array - Array\n * @param item - Item\n * @returns Array\n */\nexport const append = <T>(array: T[] | null, item: T) => array === null ? [item] : (array.push(item), array);\n\n/**\n * unorderedArrayDeleteIndex deletes item from an array with O(1) complexity.\n *\n * It swaps item at `index` position with the last item and removes the last one.\n *\n * @param array - Array\n * @param index - Index of an item to delete\n */\nexport function unorderedArrayDeleteByIndex<T>(array: T[], index: number): void {\n  const length = array.length - 1;\n  const last = array.pop();\n  if (index !== length) {\n    array[index] = last!;\n  }\n}\n\n/**\n * unorderedArrayDelete deletes item from an array with O(1) complexity.\n *\n * It swaps item at `index` position with the last item and deletes the last one.\n *\n * @param array - Array\n * @param item - Item to delete\n */\nexport function unorderedArrayDelete<T>(array: T[], item: T): void {\n  const index = array.indexOf(item);\n  /* istanbul ignore else */\n  if (DEBUG) {\n    if (index === -1) {\n      throw new Error(`Failed to delete an item from an array, item doesn't exist in the array`);\n    }\n  }\n  unorderedArrayDeleteByIndex(array, index);\n}\n","import { unorderedArrayDeleteByIndex } from \"./array\";\n\n/**\n * RepeatableTaskList is a data structure for tasks that will be repeated until they return `true` value.\n */\nexport type RepeatableTaskList = Array<() => boolean | void>;\n\n/**\n * runRepeatableTasks runs repeatable tasks.\n *\n * @param tasks - Repeatable tasks\n */\nexport function runRepeatableTasks(tasks: RepeatableTaskList): void {\n  for (let i = 0; i < tasks.length; ++i) {\n    if (tasks[i]() === true) {\n      unorderedArrayDeleteByIndex(tasks, i--);\n    }\n  }\n}\n","export function rAF(cb: (time?: number) => void): void {\n  requestAnimationFrame(cb);\n}\n\nexport function sMT(cb: () => void): void {\n  Promise.resolve().then(cb);\n}\n","/**\n * Feature Detection is used to implement polyfills or just disable some features when browser doesn't support them.\n * For example, when browser doesn't support passive events, we can just ignore it and always use active events.\n */\n\n/* istanbul ignore next */\n/**\n * Passive event listeners are a new feature in the DOM spec that enable developers to opt-in to better scroll\n * performance by eliminating the need for scrolling to block on touch and wheel event listeners. Developers can\n * annotate touch and wheel listeners with {passive: true} to indicate that they will never invoke preventDefault.\n *\n * https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n */\nexport const PASSIVE_EVENTS = /*#__PURE__*/((TARGET === \"electron\") ? true :\n  (() => {\n    let v = false;\n    try {\n      // Test via a getter in the options object to see if the passive property is accessed\n      const opts = Object.defineProperty({}, \"passive\", {\n        get() {\n          v = true;\n        },\n      });\n      window.addEventListener(\"test\", null as any as (ev: Event) => void, opts);\n    } catch (e) {\n      // ignore\n    }\n    return v;\n  })());\n\n/* istanbul ignore next */\n/**\n * `key` property is available on KeyboardEvent instances.\n */\nexport const KEYBOARD_EVENT_KEY = /*#__PURE__*/(\n  (TARGET === \"electron\") ||\n  (TARGET === \"evergreen\") ||\n  KeyboardEvent.prototype.hasOwnProperty(\"key\")\n);\n\n/* istanbul ignore next */\n/**\n * `buttons` property is available on MouseEvent instances.\n */\nexport const MOUSE_EVENT_BUTTONS = /*#__PURE__*/(\n  (TARGET === \"electron\") ||\n  (TARGET === \"evergreen\") ||\n  MouseEvent.prototype.hasOwnProperty(\"buttons\")\n);\n\n/* istanbul ignore next */\n/**\n * Touch Events support.\n */\nexport const TOUCH_EVENTS = (\"ontouchstart\" in window);\n\n/* istanbul ignore next */\n/**\n * Pointer Events support.\n */\nexport const POINTER_EVENTS = ((TARGET === \"electron\") || (\"PointerEvent\" in window));\n\n/* istanbul ignore next */\n/**\n * InputDeviceCapabilities support.\n *\n * http://wicg.github.io/InputDeviceCapabilities/\n */\nexport const INPUT_DEVICE_CAPABILITIES = ((TARGET === \"electron\") || \"InputDeviceCapabilities\" in window);\n\n/* istanbul ignore next */\n/**\n * iOS proprietary GestureEvent.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/GestureEvent}\n */\nexport const IOS_GESTURE_EVENT = (TARGET !== \"electron\") && (\"GestureEvent\" in window);\n","const nodeProto = Node.prototype;\nconst elementProto = Element.prototype;\n\n/**\n * Shortcut for an `Object.prototype.hasOwnProperty`.\n */\nexport const objectHasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Shortcut for a `Node.prototype.insertBefore`.\n */\nexport const nodeInsertBefore = nodeProto.insertBefore;\n\n/**\n * Shortcut for a `Node.prototype.removeChild`.\n */\nexport const nodeRemoveChild = nodeProto.removeChild;\n\n/**\n * Shortcut for a `Node.prototype.replaceChild`.\n */\nexport const nodeReplaceChild = nodeProto.replaceChild;\n\n/**\n * Shortcut for a `Node.prototype.cloneNode`.\n */\nexport const nodeCloneNode = nodeProto.cloneNode;\n\n/**\n * Shortcut for an `Element.prototype.setAttribute`.\n */\nexport const elementSetAttribute = elementProto.setAttribute;\n\n/**\n * Shortcut for an `Element.prototype.setAttributeNS`.\n */\nexport const elementSetAttributeNS = elementProto.setAttributeNS;\n\n/**\n * Shortcut for an `Element.prototype.removeAttribute`.\n */\nexport const elementRemoveAttribute = elementProto.removeAttribute;\n","export const SVG_NAMESPACE = \"http://www.w3.org/2000/svg\";\nexport const XLINK_NAMESPACE = \"http://www.w3.org/1999/xlink\";\nexport const XML_NAMESPACE = \"http://www.w3.org/XML/1998/namespace\";\n","import { NodeFlags } from \"./node_flags\";\nimport { Op } from \"./operations\";\n\n/**\n * Operation state.\n */\nexport interface OpState<T = any> {\n  /**\n   * Operation.\n   */\n  o: Op;\n  /**\n   * See {@link NodeFlags} for details.\n   */\n  f: NodeFlags;\n  /**\n   * State for children operations.\n   */\n  c: OpState | Array<OpState | null> | null;\n  /**\n   * Current state.\n   */\n  s: T;\n}\n\n/**\n * createStateNode creates a {@link StateNode} instance.\n *\n * @param op Operation.\n * @returns {@link StateNode} instance.\n */\nexport const createStateNode = (o: Op): OpState => (\n  { o, f: 0, c: null, s: null }\n);\n","/**\n * Current context.\n */\nlet _context = {};\n\n/**\n * setContext assigns current context.\n *\n * Should be executed before going deeper into Context node.\n *\n * @param context - Current context.\n * @returns previous context\n */\nexport function setContext(context: {}): {} {\n  const tmp = _context;\n  _context = context;\n  return tmp;\n}\n\n/**\n * restoreContext restores previous context.\n *\n * Should be executed after processing Context node.\n *\n * @param context - Previous context.\n */\nexport function restoreContext(context: {}): void {\n  _context = context;\n}\n\n/**\n * getContext retrieves current context.\n *\n * @returns current context\n */\nexport function getContext(): {} {\n  return _context;\n}\n","import {\n  objectHasOwnProperty, nodeInsertBefore, nodeRemoveChild, elementSetAttribute, nodeCloneNode, elementRemoveAttribute,\n} from \"../dom/shortcuts\";\nimport { SVG_NAMESPACE } from \"../dom/namespaces\";\nimport { CSSStyleProps } from \"../dom/style\";\nimport { NodeFlags } from \"./node_flags\";\nimport { AttributeDirective } from \"./attribute_directive\";\nimport { OpNode, ElementData, OpArray, Key, OpData, ContextData, Op, EventsData } from \"./operations\";\nimport { OpState, createStateNode } from \"./state\";\nimport { ElementProtoDescriptor } from \"./element_proto\";\nimport { ComponentDescriptor, ComponentHooks, StatelessComponentDescriptor } from \"./component\";\nimport { getContext, setContext, restoreContext } from \"./context\";\n\nlet _nextNode!: Node | null;\nlet _deepStateFlags!: NodeFlags;\nlet _dirtyContext!: boolean;\n\nexport function _resetState(): void {\n  _nextNode = null;\n  _deepStateFlags = 0;\n  _dirtyContext = false;\n}\n\nfunction _pushDeepState(): NodeFlags {\n  const s = _deepStateFlags;\n  _deepStateFlags = 0;\n  return s;\n}\n\nfunction _popDeepState(prev: NodeFlags, current: NodeFlags): NodeFlags {\n  const r = current | _deepStateFlags;\n  _deepStateFlags |= prev;\n  return r;\n}\n\nexport function visitNodes(\n  currentOpState: OpState,\n  filter: NodeFlags,\n  visitor: (opState: OpState) => void | boolean,\n): boolean {\n  const flags = currentOpState.f;\n  if ((flags & filter) === filter) {\n    if (visitor(currentOpState) === true) {\n      return true;\n    }\n  }\n\n  const children = currentOpState.c;\n  if ((flags & (NodeFlags.Fragment | NodeFlags.TrackByKey)) !== 0) {\n    for (let i = 0; i < (children as Array<OpState | null>).length; i++) {\n      const c = (children as Array<OpState | null>)[i];\n      if (c !== null) {\n        if (visitNodes(c, filter, visitor) === true) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n  if (children !== null) {\n    return visitNodes(children as OpState, filter, visitor);\n  }\n  return false;\n}\n\n/**\n * getDOMNode retrieves closest DOM node from the {@link OpState} instance.\n *\n * @param opState State node.\n * @returns DOM node.\n */\nexport function getDOMNode(opState: OpState): Node | null {\n  const flags = opState.f;\n  if ((flags & (NodeFlags.Element | NodeFlags.Text)) === 0) {\n    const children = opState.c;\n    if ((flags & (NodeFlags.Fragment | NodeFlags.TrackByKey)) !== 0) {\n      for (let i = 0; i < (children as Array<OpState | null>).length; i++) {\n        const c = (children as Array<OpState | null>)[i];\n        if (c !== null) {\n          return getDOMNode(c);\n        }\n      }\n      return null;\n    }\n    if (children === null) {\n      return null;\n    }\n    return getDOMNode(children as OpState);\n  }\n  return opState.s as Node;\n}\n\nexport function _dirtyCheck(\n  parentElement: Element,\n  opState: OpState,\n  moveNode: boolean,\n  singleChild: boolean,\n): void {\n  const { f, c } = opState;\n  let state;\n  let deepState;\n  let i;\n\n  if ((f & NodeFlags.Component) !== 0) {\n    state = opState.s as ComponentHooks;\n    deepState = _pushDeepState();\n    if (\n      ((f & NodeFlags.Stateful) !== 0) && (\n        ((f & NodeFlags.Dirty) !== 0) ||\n        (state.s !== null && state.s(getContext()) === true)\n      )\n    ) {\n      opState.c = _update(\n        parentElement,\n        c as OpState,\n        state.r!((opState.o as OpNode).d),\n        moveNode,\n        singleChild,\n      );\n    } else if ((f & NodeFlags.DeepStateDirtyCheck) !== 0) {\n      _dirtyCheck(parentElement, c as OpState, moveNode, singleChild);\n    } else {\n      if (moveNode) {\n        _moveNodes(parentElement, opState);\n      } else {\n        _nextNode = getDOMNode(opState);\n      }\n    }\n    opState.f = (opState.f & NodeFlags.SelfFlags) | _deepStateFlags;\n    _deepStateFlags |= deepState | ((opState.f & NodeFlags.DeepStateFlags) << NodeFlags.DeepStateShift);\n  } else if ((f & NodeFlags.DeepStateDirtyCheck) !== 0) {\n    deepState = _pushDeepState();\n    if ((f & (NodeFlags.Element | NodeFlags.Text)) !== 0) {\n      state = opState.s as Node;\n      if (moveNode === true) {\n        /* istanbul ignore else */\n        if (DEBUG) {\n          parentElement.insertBefore(state, _nextNode);\n        } else {\n          nodeInsertBefore.call(parentElement, state, _nextNode);\n        }\n      }\n      if (c !== null) {\n        _dirtyCheck(state as Element, c as OpState, false, true);\n      }\n      _nextNode = state;\n    } else if ((f & (NodeFlags.Fragment | NodeFlags.TrackByKey)) !== 0) {\n      i = (c as Array<OpState | null>).length;\n      while (--i >= 0) {\n        if ((state = (c as Array<OpState | null>)[i]) !== null) {\n          _dirtyCheck(parentElement, state, moveNode, false);\n        }\n      }\n    } else if ((f & NodeFlags.Events) !== 0) {\n      _dirtyCheck(parentElement, opState.c as OpState, moveNode, singleChild);\n    } else { // Context\n      if (_dirtyContext === true) {\n        opState.s = { ...getContext(), ...(opState.o as OpNode<ContextData>).d.v };\n      }\n      const prevContext = setContext(opState.s as {});\n      _dirtyCheck(parentElement, opState.c as OpState, moveNode, singleChild);\n      restoreContext(prevContext);\n    }\n    opState.f = _popDeepState(deepState, opState.f);\n  } else {\n    if (moveNode) {\n      _moveNodes(parentElement, opState);\n    } else {\n      _nextNode = getDOMNode(opState);\n    }\n  }\n}\n\nfunction _moveNodes(parentElement: Element, opState: OpState) {\n  const flags = opState.f;\n  if ((flags & (NodeFlags.Element | NodeFlags.Text)) !== 0) {\n    const domNode = opState.s as Node;\n    /* istanbul ignore else */\n    if (DEBUG) {\n      parentElement.insertBefore(domNode, _nextNode);\n    } else {\n      nodeInsertBefore.call(parentElement, domNode, _nextNode);\n    }\n    _nextNode = domNode;\n  } else {\n    const children = opState.c;\n    if ((flags & (NodeFlags.Fragment | NodeFlags.TrackByKey)) !== 0) {\n      let i = (children as Array<OpState | null>).length;\n      while (--i >= 0) {\n        const c = (children as Array<OpState | null>)[i];\n        if (c !== null) {\n          _moveNodes(parentElement, c);\n        }\n      }\n    } else if (children !== null) {\n      _moveNodes(parentElement, children as OpState);\n    }\n  }\n}\n\nfunction _unmountWalk(opState: OpState): void {\n  const flags = opState.f;\n  let i;\n  let v;\n\n  if ((flags & NodeFlags.DeepStateUnmount) !== 0) {\n    const children = opState.c;\n    if (children !== null) {\n      if ((flags & (NodeFlags.Fragment | NodeFlags.TrackByKey)) !== 0) {\n        for (i = 0; i < (children as Array<OpState | null>).length; i++) {\n          if ((v = (children as Array<OpState | null>)[i]) !== null) {\n            _unmountWalk(v);\n          }\n        }\n      } else {\n        _unmountWalk(children as OpState);\n      }\n    }\n  }\n\n  if ((flags & NodeFlags.Unmount) !== 0) {\n    v = (opState.s as ComponentHooks).u;\n    if (v !== null) {\n      if (typeof v === \"function\") {\n        v();\n      } else {\n        for (i = 0; i < v.length; i++) {\n          v[i](true);\n        }\n      }\n    }\n  }\n}\n\nfunction _unmountRemove(parentElement: Element, opState: OpState, singleChild: boolean): void {\n  const flags = opState.f;\n  let children;\n\n  if ((flags & (NodeFlags.Element | NodeFlags.Text)) !== 0) {\n    children = opState.s as Node;\n    if (DEBUG) {\n      parentElement.removeChild(children);\n    } else {\n      nodeRemoveChild.call(parentElement, children);\n    }\n  } else if ((flags & (NodeFlags.TrackByKey | NodeFlags.Fragment)) !== 0) {\n    if (singleChild === true) {\n      parentElement.textContent = \"\";\n    } else {\n      children = opState.c as Array<OpState | null>;\n      for (let i = 0; i < children.length; ++i) {\n        const c = children[i];\n        if (c !== null) {\n          _unmountRemove(parentElement, c, false);\n        }\n      }\n    }\n  } else {\n    children = opState.c as OpState | null;\n    if (children !== null) {\n      _unmountRemove(parentElement, children, singleChild);\n    }\n  }\n}\n\nexport function _unmount(parentElement: Element, opState: OpState, singleChild: boolean): void {\n  _unmountRemove(parentElement, opState, singleChild);\n  _unmountWalk(opState);\n}\n\nfunction _mountText(\n  parentElement: Element,\n  opState: OpState,\n  op: string | number,\n) {\n  const node = document.createTextNode(op as string);\n  /* istanbul ignore else */\n  if (DEBUG) {\n    parentElement.insertBefore(node, _nextNode);\n  } else {\n    nodeInsertBefore.call(parentElement, node, _nextNode);\n  }\n  _nextNode = node;\n  opState.s = node;\n  opState.f = NodeFlags.Text;\n}\n\nfunction _createElement(node: Element | undefined, op: OpNode<ElementData>): Element {\n  const opType = op.t;\n  const svg = (opType.f & NodeFlags.Svg) !== 0;\n  if (node === void 0) {\n    const tagName = opType.d as string;\n    node = svg ?\n      document.createElementNS(SVG_NAMESPACE, tagName) :\n      document.createElement(tagName);\n  }\n\n  const { n, a } = op.d;\n  if (n) {\n    /**\n     * SVGElement.className returns `SVGAnimatedString`\n     */\n    if (svg) {\n      /* istanbul ignore else */\n      if (DEBUG) {\n        (node as SVGElement).setAttribute(\"class\", n);\n      } else {\n        elementSetAttribute.call(node, \"class\", n);\n      }\n    } else {\n      (node as HTMLElement).className = n;\n    }\n  }\n\n  if (a !== void 0) {\n    _updateAttrs(node, void 0, a);\n  }\n\n  return node;\n}\n\nfunction _mountObject(\n  parentElement: Element,\n  opState: OpState,\n  op: OpNode,\n): void {\n  const { t, d } = op;\n  const flags = t.f;\n  let deepStateFlags;\n  let prevState;\n  let value;\n\n  if ((flags & NodeFlags.Component) !== 0) {\n    deepStateFlags = _pushDeepState();\n    if ((flags & NodeFlags.Stateful) !== 0) {\n      prevState = opState.s = { r: null, s: null, u: null } as ComponentHooks;\n      // Reusing value variable.\n      value = (prevState as ComponentHooks).r = (op.t.d as ComponentDescriptor).c(opState);\n    } else {\n      value = (op.t.d as StatelessComponentDescriptor).c;\n    }\n    opState.c = _mount(parentElement, value(d));\n    opState.f = (opState.f & NodeFlags.SelfFlags) | flags | _deepStateFlags;\n    _deepStateFlags |= deepStateFlags | ((opState.f & NodeFlags.DeepStateFlags) << NodeFlags.DeepStateShift);\n  } else {\n    deepStateFlags = _pushDeepState();\n    if ((flags & NodeFlags.Element) !== 0) {\n      const descriptor = t.d;\n      let node: Element | undefined;\n      if ((flags & NodeFlags.ElementProto) !== 0) {\n        node = (descriptor as ElementProtoDescriptor).n as Element;\n        if (node === null) {\n          (descriptor as ElementProtoDescriptor).n = node = _createElement(\n            void 0,\n            (descriptor as ElementProtoDescriptor).p,\n          );\n        }\n        /* istanbul ignore else */\n        if (DEBUG) {\n          node = node.cloneNode(false) as Element;\n        } else {\n          node = nodeCloneNode.call(node, false) as Element;\n        }\n      }\n      opState.s = node = _createElement(node, op);\n\n      prevState = _nextNode;\n      _nextNode = null;\n      value = d.c;\n      if (value !== null) {\n        opState.c = _mount(node, value);\n      }\n      /* istanbul ignore else */\n      if (DEBUG) {\n        parentElement.insertBefore(node, prevState);\n      } else {\n        nodeInsertBefore.call(parentElement, node, prevState);\n      }\n      _nextNode = node;\n    } else if ((flags & (NodeFlags.Events | NodeFlags.Context)) !== 0) {\n      if ((flags & NodeFlags.Context) !== 0) {\n        prevState = setContext(\n          opState.s = { ...getContext(), ...(d as OpData<ContextData>).v },\n        );\n        opState.c = _mount(parentElement, (d as OpData<ContextData>).c);\n        restoreContext(prevState);\n      } else {\n        opState.c = _mount(parentElement, (d as OpData<ContextData>).c);\n      }\n    } else { // ((opFlags & NodeFlags.TrackByKey) !== 0)\n      let i = (d as Key<any, OpNode>[]).length;\n      opState.c = value = Array(i);\n      while (--i >= 0) {\n        value[i] = _mount(parentElement, (d as Key<any, OpNode>[])[i].v);\n      }\n    }\n    opState.f = _popDeepState(deepStateFlags, flags);\n  }\n}\n\nfunction _mountFragment(\n  parentElement: Element,\n  opState: OpState,\n  childrenOps: OpArray,\n): void {\n  const deepStateFlags = _pushDeepState();\n  let i = childrenOps.length;\n  const newChildren = Array(i);\n  while (--i >= 0) {\n    newChildren[i] = _mount(parentElement, childrenOps[i]);\n  }\n  opState.c = newChildren;\n  opState.f = _popDeepState(deepStateFlags, NodeFlags.Fragment);\n}\n\nexport function _mount(\n  parentElement: Element,\n  op: Op,\n): OpState | null {\n  if (op !== null) {\n    const stateNode = createStateNode(op);\n    if (typeof op === \"object\") {\n      if (op instanceof Array) {\n        _mountFragment(parentElement, stateNode, op);\n      } else {\n        _mountObject(parentElement, stateNode, op);\n      }\n    } else {\n      _mountText(parentElement, stateNode, op);\n    }\n    return stateNode;\n  }\n  return null;\n}\n\nfunction _hasDifferentType(\n  a: OpNode | OpArray,\n  b: OpNode | OpArray | string | number,\n): boolean {\n  if (typeof b !== \"object\") {\n    return true;\n  } else if (a instanceof Array) {\n    if (!(b instanceof Array)) {\n      return true;\n    }\n  } else if (b instanceof Array || a.t !== b.t) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * _update updates a stateNode with a next operation.\n *\n * @param parentElement Parent DOM Element.\n * @param opState Operation state.\n * @param nextOp Next operation.\n * @param moveNode DOM Element should be moved.\n * @param singleChild Parent DOM Element contains a single child.\n * @returns OpNode state.\n */\nexport function _update(\n  parentElement: Element,\n  opState: OpState | null,\n  nextOp: Op,\n  moveNode: boolean,\n  singleChild: boolean,\n): OpState | null {\n  if (nextOp === null) {\n    if (opState !== null) {\n      _unmount(parentElement, opState, singleChild);\n    }\n    return null;\n  }\n  if (opState === null) {\n    return _mount(parentElement, nextOp);\n  }\n  const { o, s } = opState;\n  let flags = opState.f;\n\n  if ((flags & NodeFlags.Text) !== 0) {\n    if (typeof nextOp !== \"object\") {\n      // Reassign to reduce memory consumption even if nextOp is strictly equal to the prev op.\n      opState.o = nextOp;\n      if (o !== nextOp) {\n        (s as Node).nodeValue = nextOp as string;\n      }\n      if (moveNode === true) {\n        /* istanbul ignore else */\n        if (DEBUG) {\n          parentElement.insertBefore(s as Node, _nextNode);\n        } else {\n          nodeInsertBefore.call(parentElement, s as Node, _nextNode);\n        }\n      }\n      _nextNode = s as Node;\n    } else {\n      /* istanbul ignore else */\n      if (DEBUG) {\n        parentElement.removeChild(s as Node);\n      } else {\n        nodeRemoveChild.call(parentElement, s as Node);\n      }\n      return _mount(parentElement, nextOp);\n    }\n  } else {\n    // Here we don't need to reassign nextOp because op should always be an object, and strict equality will guarantee\n    // that this object is occupying the same memory region.\n    if (o === nextOp) {\n      _dirtyCheck(parentElement, opState, moveNode, singleChild);\n      return opState;\n    }\n    if (_hasDifferentType(o as OpNode | OpArray, nextOp) === true) {\n      _unmount(parentElement, opState, singleChild);\n      return _mount(parentElement, nextOp);\n    }\n    opState.o = nextOp;\n    const opStateChildren = opState.c;\n    let deepStateFlags;\n    let prevData;\n    let nextData;\n    let nextValue;\n\n    if ((flags & NodeFlags.Component) !== 0) {\n      prevData = (o as OpNode).d;\n      nextData = (nextOp as OpNode).d;\n      const descriptor = ((nextOp as OpNode).t.d as StatelessComponentDescriptor | ComponentDescriptor);\n      if (\n        ((flags & NodeFlags.Dirty) !== 0) ||\n        (\n          (prevData !== nextData) &&\n          (descriptor.su === void 0 || descriptor.su(prevData, nextData) === true)\n        )\n      ) {\n        deepStateFlags = _pushDeepState();\n        opState.c = _update(\n          parentElement,\n          opStateChildren as OpState,\n          ((flags & NodeFlags.Stateful) !== 0) ?\n            (opState.s as ComponentHooks).r!(nextData) :\n            (descriptor as StatelessComponentDescriptor).c(nextData),\n          moveNode,\n          singleChild,\n        );\n        // opState.f can be changed after `_update()`.\n        flags = opState.f;\n        opState.f = (flags & NodeFlags.SelfFlags) | _deepStateFlags;\n        _deepStateFlags |= deepStateFlags | ((flags & NodeFlags.DeepStateFlags) << NodeFlags.DeepStateShift);\n      } else {\n        _dirtyCheck(parentElement, opState, moveNode, singleChild);\n      }\n    } else {\n      deepStateFlags = _pushDeepState();\n      if ((flags & NodeFlags.Element) !== 0) {\n        prevData = (o as OpNode<ElementData>).d;\n        nextData = (nextOp as OpNode<ElementData>).d;\n        if (moveNode === true) {\n          /* istanbul ignore else */\n          if (DEBUG) {\n            parentElement.insertBefore(s as Node, _nextNode);\n          } else {\n            nodeInsertBefore.call(parentElement, s, _nextNode);\n          }\n        }\n\n        nextValue = nextData.n;\n        if (prevData.n !== nextValue) {\n          if (nextValue === void 0) {\n            nextValue = \"\";\n          }\n          // SVG elements doesn't have `className` property.\n          if ((flags & NodeFlags.Svg) !== 0) {\n            /* istanbul ignore else */\n            if (DEBUG) {\n              (s as SVGElement).setAttribute(\"class\", nextValue);\n            } else {\n              elementSetAttribute.call(s, \"class\", nextValue);\n            }\n          } else {\n            (s as HTMLElement).className = nextValue;\n          }\n        }\n\n        nextValue = nextData.a;\n        if (prevData.a !== nextValue) {\n          _updateAttrs(s as Element, prevData.a, nextValue);\n        }\n\n        nextValue = nextData.c;\n        if (prevData.c !== nextValue) {\n          _nextNode = null;\n          opState.c = _update(s as Element, opStateChildren as OpState, nextValue, false, true);\n        }\n\n        _nextNode = s as Node;\n      } else if ((flags & (NodeFlags.Fragment | NodeFlags.TrackByKey)) !== 0) {\n        if ((flags & NodeFlags.Fragment) !== 0) {\n          let i = (nextOp as OpArray).length;\n          // When there is a different length for statically positioned elements, it is much more likely that internal\n          // elements should have a different internal state, so it is better to destroy previous state and instantiate\n          // a new one. This heuristics is slightly different from React, but it should be better at handling some\n          // use cases.\n          if ((opStateChildren as Array<OpState | null>).length === i) {\n            while (--i >= 0) {\n              (opStateChildren as Array<OpState | null>)[i] =\n                _update(\n                  parentElement,\n                  (opStateChildren as Array<OpState | null>)[i],\n                  (nextOp as OpArray)[i],\n                  moveNode,\n                  false);\n            }\n          } else {\n            _unmount(parentElement, opState, singleChild);\n            _mountFragment(parentElement, opState, nextOp as OpArray);\n          }\n        } else {\n          _updateChildrenTrackByKeys(\n            parentElement,\n            opState,\n            (o as OpNode).d,\n            (nextOp as OpNode).d,\n            moveNode,\n            singleChild,\n          );\n        }\n      } else if ((flags & NodeFlags.Events) !== 0) {\n        opState.c = _update(\n          parentElement,\n          opStateChildren as OpState,\n          (nextOp as OpNode<EventsData>).d.c,\n          moveNode,\n          singleChild,\n        );\n      } else { // if ((stateFlags & NodeFlags.Context) !== 0) {\n        const dirtyContext = _dirtyContext;\n        nextData = (nextOp as OpNode<ContextData>).d;\n        nextValue = nextData.v;\n        if ((o as OpNode<ContextData>).d.v !== nextValue || _dirtyContext === true) {\n          opState.s = { ...getContext(), ...nextValue };\n          _dirtyContext = true;\n        }\n        // reusing variable name, it is actually a previous value in the context stack.\n        nextValue = setContext(opState.s as {});\n        _update(parentElement, opStateChildren as OpState, nextData.c, moveNode, singleChild);\n        restoreContext(nextValue);\n        _dirtyContext = dirtyContext;\n      }\n      opState.f = _popDeepState(deepStateFlags, opState.f);\n    }\n  }\n\n  return opState;\n}\n\n/**\n * Update children list with track by key algorithm.\n *\n * High-level overview of the algorithm that is implemented in this function (slightly outdated, but the key ideas are\n * the same).\n *\n * This algorithm finds a minimum[1] number of DOM operations. It works in several steps:\n *\n * 1. Find common suffix and prefix.\n *\n * This optimization technique is searching for nodes with identical keys by simultaneously iterating over nodes in the\n * old children list `A` and new children list `B` from both sides:\n *\n *  A: -> [a b c d] <-\n *  B: -> [a b d] <-\n *\n * Here we can skip nodes \"a\" and \"b\" at the begininng, and node \"d\" at the end.\n *\n *  A: -> [c] <-\n *  B: -> [] <-\n *\n * Here it will check if the size of one of the list is equal to zero. When length of the old children list is zero,\n * it will insert all remaining nodes from the new list, and when length of the new children list is zero, it will\n * remove all remaining nodes from the old list.\n *\n * When algorithm can't find a solution with this simple optimization technique, it will go to the next step of the\n * algorithm. For example:\n *\n *  A: -> [a b c d e f g] <-\n *  B: -> [a c b h f e g] <-\n *\n * Nodes \"a\" and \"g\" at the edges are the same, skipping them.\n *\n *  A: -> [b c d e f] <-\n *  B: -> [c b h f e] <-\n *\n * Here we are stuck, so we need to switch to the next step.\n *\n * 2. Look for removed and inserted nodes, and simultaneously check if one of the nodes is moved.\n *\n * First we create an array `P` with the length of the new children list and assign to each position value `-1`, it has\n * a meaning of a new node that should be inserted. Later we will assign node positions in the old children list to this\n * array.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *  P: [. . . . .] // . == -1\n *\n * Then we need to build an index `I` that maps keys with node positions of the remaining nodes from the new children\n * list.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *  P: [. . . . .] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1,\n *    h: 2,\n *    f: 3,\n *    e: 4,\n *  }\n *  last = 0\n *\n * With this index, we start to iterate over the remaining nodes from the old children list and check if we can find a\n * node with the same key in the index. If we can't find any node, it means that it should be removed, otherwise we\n * assign position of the node in the old children list to the positions array.\n *\n *  A: [b c d e f]\n *      ^\n *  B: [c b h f e]\n *  P: [. 0 . . .] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1, <-\n *    h: 2,\n *    f: 3,\n *    e: 4,\n *  }\n *  last = 1\n *\n * When we assigning positions to the positions array, we also keep a position of the last seen node in the new children\n * list, if the last seen position is larger than current position of the node at the new list, then we are switching\n * `moved` flag to `true`.\n *\n *  A: [b c d e f]\n *        ^\n *  B: [c b h f e]\n *  P: [1 0 . . .] // . == -1\n *  I: {\n *    c: 0, <-\n *    b: 1,\n *    h: 2,\n *    f: 3,\n *    e: 4,\n *  }\n *  last = 1 // last > 0; moved = true\n *\n * The last position `1` is larger than current position of the node at the new list `0`, switching `moved` flag to\n * `true`.\n *\n *  A: [b c d e f]\n *          ^\n *  B: [c b h f e]\n *  P: [1 0 . . .] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1,\n *    h: 2,\n *    f: 3,\n *    e: 4,\n *  }\n *  moved = true\n *\n * Node with key \"d\" doesn't exist in the index, removing node.\n *\n *  A: [b c d e f]\n *            ^\n *  B: [c b h f e]\n *  P: [1 0 . . 3] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1,\n *    h: 2,\n *    f: 3,\n *    e: 4, <-\n *  }\n *  moved = true\n *\n * Assign position for `e`.\n *\n *  A: [b c d e f]\n *              ^\n *  B: [c b h f e]\n *  P: [1 0 . 4 3] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1,\n *    h: 2,\n *    f: 3, <-\n *    e: 4,\n *  }\n *  moved = true\n *\n * Assign position for 'f'.\n *\n * At this point we are checking if `moved` flag is on, or if the length of the old children list minus the number of\n * removed nodes isn't equal to the length of the new children list. If any of this conditions is true, then we are\n * going to the next step.\n *\n * 3. Find minimum number of moves if `moved` flag is on, or insert new nodes if the length is changed.\n *\n * When `moved` flag is on, we need to find the\n * [longest increasing subsequence](http://en.wikipedia.org/wiki/Longest_increasing_subsequence) in the positions array,\n * and move all nodes that doesn't belong to this subsequence.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *  moved = true\n *\n * Now we just need to simultaneously iterate over the new children list and LIS from the end and check if the current\n * position is equal to a value from LIS.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *              ^  // new_pos == 4\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *              ^  // new_pos == 4\n *  moved = true\n *\n * Node \"e\" stays at the same place.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *            ^    // new_pos == 3\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *            ^    // new_pos != 1\n *  moved = true\n *\n * Node \"f\" is moved, move it before the next node \"e\".\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *          ^      // new_pos == 2\n *  P: [1 0 . 4 3] // . == -1\n *          ^      // old_pos == -1\n *  LIS:     [1 4]\n *            ^\n *  moved = true\n *\n * Node \"h\" has a `-1` value in the positions array, insert new node \"h\".\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *        ^        // new_pos == 1\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *            ^    // new_pos == 1\n *  moved = true\n *\n * Node \"b\" stays at the same place.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *      ^          // new_pos == 0\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *          ^      // new_pos != undefined\n *  moved = true\n *\n * Node \"c\" is moved, move it before the next node \"b\".\n *\n * When moved flag is off, we don't need to find LIS, and we just iterate over the new children list and check its\n * current position in the positions array, if it is `-1`, then we insert new node.\n *\n * [1] Actually it is almost minimum number of dom ops, when node is removed and another one is inserted at the same\n * place, instead of insert and remove dom ops, we can use one replace op. It will make everything even more\n * complicated, and other use cases will be slower, so I don't think that it is worth to use replace here.\n *\n * @param parentElement Parent DOM element.\n * @param opState OpNode state for a TrackByKey operation.\n * @param a Previous operations.\n * @param b Next operations.\n * @param moveNode Children DOM nodes should be moved.\n * @param singleChild Parent DOM element contains a single node.\n * @noinline\n */\nfunction _updateChildrenTrackByKeys(\n  parentElement: Element,\n  opState: OpState,\n  a: Key<any, OpNode>[],\n  b: Key<any, OpNode>[],\n  moveNode: boolean,\n  singleChild: boolean,\n): void {\n  const opStateChildren = opState.c as Array<OpState | null>;\n  const result = Array(b.length);\n  let i = b.length;\n\n  if (i === 0) {\n    if (opStateChildren.length > 0) {\n      _unmount(parentElement, opState, singleChild);\n    }\n  } else if (opStateChildren.length === 0) {\n    while (--i >= 0) {\n      result[i] = _mount(parentElement, b[i].v);\n    }\n  } else {\n    let aStartNode = a[0];\n    let bStartNode = b[0];\n    let aEnd = a.length - 1;\n    let bEnd = b.length - 1;\n    let aEndNode = a[aEnd];\n    let bEndNode = b[bEnd];\n    let start = 0;\n    let j: number | undefined;\n    let sNode: OpState | null;\n\n    // Step 1\n    outer: while (true) {\n      // Sync nodes with the same key at the end.\n      while (aEndNode.k === bEndNode.k) {\n        result[bEnd] = _update(parentElement, opStateChildren[aEnd--], bEndNode.v, moveNode, false);\n        if (start > --bEnd || start > aEnd) {\n          break outer;\n        }\n        aEndNode = a[aEnd];\n        bEndNode = b[bEnd];\n      }\n\n      // Sync nodes with the same key at the beginning.\n      while (aStartNode.k === bStartNode.k) {\n        // delayed update (all updates should be performed from right-to-left)\n        if (++start > aEnd || start > bEnd) {\n          break outer;\n        }\n        aStartNode = a[start];\n        bStartNode = b[start];\n      }\n\n      break;\n    }\n\n    if (start > aEnd) {\n      // All nodes from a are synced, insert the rest from b.\n      while (bEnd >= start) {\n        result[bEnd] = _mount(parentElement, b[bEnd--].v);\n      }\n    } else if (start > bEnd) {\n      // All nodes from b are synced, remove the rest from a.\n      i = start;\n      do {\n        if ((sNode = opStateChildren[i++]) !== null) {\n          _unmount(parentElement, sNode, false);\n        }\n      } while (i <= aEnd);\n    } else { // Step 2\n      const aLength = aEnd - start + 1;\n      const bLength = bEnd - start + 1;\n\n      // Mark all nodes as inserted.\n      const sources = Array(bLength);\n      for (i = 0; i < bLength; ++i) {\n        sources[i] = -1;\n      }\n\n      // When pos === 1000000, it means that one of the nodes in the wrong position.\n      let pos = 0;\n      let updated = 0;\n\n      const keyIndex = new Map<any, number>();\n      // Build an index that maps keys to their locations in the new children list.\n      for (j = start; j <= bEnd; ++j) {\n        keyIndex.set(b[j].k, j);\n      }\n\n      for (i = start; i <= aEnd && updated < bLength; ++i) {\n        j = keyIndex.get(a[i].k);\n        if (j !== void 0) {\n          pos = (pos > j) ? 1000000 : j;\n          ++updated;\n          sources[j - start] = i;\n          result[j] = opStateChildren[i];\n          // remove updated nodes from previous array, so that we could remove the rest from the document.\n          opStateChildren[i] = null;\n        }\n      }\n\n      if (aLength === a.length && updated === 0) {\n        // Noone is synced.\n        _unmount(parentElement, opState, singleChild);\n        while (bEnd >= 0) {\n          result[bEnd] = _mount(parentElement, b[bEnd--].v);\n        }\n      } else {\n        // Step 3\n        for (i = start; i <= aEnd; i++) {\n          if ((sNode = opStateChildren[i]) !== null) {\n            _unmount(parentElement, sNode, false);\n          }\n        }\n\n        let opNode;\n        i = bLength;\n        if (moveNode === true || pos !== 1000000) {\n          while (--i >= 0) {\n            pos = start + i;\n            opNode = b[pos].v;\n            result[pos] = (sources[i] === -1) ?\n              _mount(parentElement, opNode) :\n              _update(parentElement, result[pos], opNode, moveNode, false);\n          }\n        } else {\n          const seq = lis(sources);\n          j = seq.length - 1;\n          while (--i >= 0) {\n            pos = start + i;\n            opNode = b[pos].v;\n            if (sources[i] === -1) {\n              result[pos] = _mount(parentElement, opNode);\n            } else {\n              sNode = result[pos];\n              if (j < 0 || i !== seq[j]) {\n                moveNode = true;\n              } else {\n                --j;\n              }\n              result[pos] = _update(parentElement, sNode, opNode, moveNode, false);\n              moveNode = false;\n            }\n          }\n        }\n      }\n    }\n\n    // update nodes from Step 1 (prefix only)\n    while (--start >= 0) {\n      result[start] = _update(parentElement, opStateChildren[start], b[start].v, moveNode, false);\n    }\n  }\n  opState.c = result;\n}\n\n/**\n * Slightly modified Longest Increased Subsequence algorithm, it ignores items that have -1 value, they're representing\n * new items.\n *\n * {@link http://en.wikipedia.org/wiki/Longest_increasing_subsequence}\n *\n * @param a - Array of numbers\n * @returns Longest increasing subsequence\n * @noinline\n */\nfunction lis(a: number[]): number[] {\n  const p = a.slice();\n  const result: number[] = [];\n  result[0] = 0;\n  let n = 0;\n  let u: number;\n  let v: number;\n  let j: number;\n\n  for (let i = 0; i < a.length; ++i) {\n    const k = a[i];\n    if (k === -1) {\n      continue;\n    }\n\n    j = result[n];\n    if (a[j] < k) {\n      p[i] = j;\n      result[++n] = i;\n      continue;\n    }\n\n    u = 0;\n    v = n;\n\n    while (u < v) {\n      j = ((u + v) / 2) | 0;\n      if (a[result[j]] < k) {\n        u = j + 1;\n      } else {\n        v = j;\n      }\n    }\n\n    if (k < a[result[u]]) {\n      if (u > 0) {\n        p[i] = result[u - 1];\n      }\n      result[u] = i;\n    }\n  }\n\n  v = result[n];\n\n  while (n >= 0) {\n    result[n--] = v;\n    v = p[v];\n  }\n\n  return result;\n}\n\n/**\n * Update DOM styles.\n *\n * @param element - HTML or SVG Element\n * @param a - Prev styles\n * @param b - Next styles\n */\nfunction updateStyle(\n  element: HTMLElement | SVGElement,\n  a: CSSStyleProps | undefined,\n  b: CSSStyleProps | undefined,\n): void {\n  const style = element.style;\n  let key: string;\n  let bValue;\n\n  if (a === void 0) {\n    // a is empty, insert all styles from b.\n    for (key in b!) {\n      bValue = (b as { [key: string]: string })[key];\n      if (bValue !== void 0) {\n        style.setProperty(key, bValue);\n      }\n    }\n  } else if (b === void 0) {\n    // b is empty, remove all styles from a\n    for (key in a) {\n      style.removeProperty(key);\n    }\n  } else {\n    let matchCount = 0;\n    for (key in a) {\n      bValue = void 0;\n      if (objectHasOwnProperty.call(b, key) === true) {\n        bValue = b[key];\n        matchCount++;\n      }\n      const aValue = a[key];\n      if (aValue !== bValue) {\n        if (bValue !== void 0) {\n          style.setProperty(key, bValue);\n        } else {\n          style.removeProperty(key);\n        }\n      }\n    }\n\n    const keys = Object.keys(b);\n    for (let i = 0; matchCount < keys.length && i < keys.length; ++i) {\n      key = keys[i];\n      if (objectHasOwnProperty.call(a, key) === false) {\n        style.setProperty(key, b[key]);\n        ++matchCount;\n      }\n    }\n  }\n}\n\n/**\n * Update DOM attribute.\n *\n * @param element - DOM Element\n * @param key - Attribute name\n * @param prev - Previous value\n * @param next - Next value\n */\nfunction _updateAttr(\n  element: Element,\n  key: string,\n  prev: string | number | boolean | AttributeDirective<any> | CSSStyleProps | undefined,\n  next: string | number | boolean | AttributeDirective<any> | CSSStyleProps | undefined,\n): void {\n  if (key !== \"style\") {\n    if (typeof next === \"object\") {\n      next.u(\n        element,\n        key,\n        prev === void 0 ? void 0 : (prev as AttributeDirective<any>).v,\n        next.v,\n      );\n    } else if (prev !== next) {\n      if (typeof prev === \"object\") {\n        prev.u(\n          element,\n          key,\n          (prev as AttributeDirective<any>).v,\n          void 0,\n        );\n      } else {\n        if (typeof next === \"boolean\") {\n          next = next ? \"\" : void 0;\n        }\n        if (next === void 0) {\n          /* istanbul ignore else */\n          if (DEBUG) {\n            element.removeAttribute(key);\n          } else {\n            elementRemoveAttribute.call(element, key);\n          }\n        } else {\n          /* istanbul ignore else */\n          if (DEBUG) {\n            element.setAttribute(key, next as string);\n          } else {\n            elementSetAttribute.call(element, key, next as string);\n          }\n        }\n      }\n    }\n  } else if (prev !== next) {\n    updateStyle(element as HTMLElement, prev as CSSStyleProps, next as CSSStyleProps);\n  }\n}\n\n/**\n * Update DOM attributes.\n *\n * @param element - DOM element\n * @param a - Prev DOM attributes\n * @param b - Next DOM attributes\n */\nfunction _updateAttrs(\n  element: Element,\n  a: { [key: string]: string | number | boolean | AttributeDirective<any> | CSSStyleProps | undefined } | undefined,\n  b: { [key: string]: string | number | boolean | AttributeDirective<any> | CSSStyleProps | undefined } | undefined,\n): void {\n  let key: string;\n\n  if (a === void 0) {\n    // a is empty, insert all attributes from b.\n    for (key in b!) {\n      _updateAttr(element, key, void 0, b![key]);\n    }\n  } else if (b === void 0) {\n    // b is empty, remove all attributes from a.\n    for (key in a) {\n      _updateAttr(element, key, a[key], void 0);\n    }\n  } else {\n    let matchCount = 0;\n    for (key in a) {\n      let bValue: string | number | boolean | AttributeDirective<any> | CSSStyleProps | undefined = void 0;\n      if (objectHasOwnProperty.call(b, key) === true) {\n        bValue = b[key];\n        matchCount++;\n      }\n      _updateAttr(element, key, a[key], bValue);\n    }\n\n    const keys = Object.keys(b);\n    for (let i = 0; matchCount < keys.length && i < keys.length; ++i) {\n      key = keys[i];\n      if (objectHasOwnProperty.call(a, key) === false) {\n        _updateAttr(element, key, void 0, b[key]);\n        ++matchCount;\n      }\n    }\n  }\n}\n","import { checkNestingViolations } from \"../debug/html_nesting_rules\";\nimport { Op } from \"./operations\";\nimport { OpState } from \"./state\";\nimport { _mount, _update, _unmount, _dirtyCheck, _resetState } from \"./reconciler\";\n\n/**\n * Root.\n */\nexport interface Root {\n  /**\n   * Container element.\n   */\n  container: Element | null;\n  /**\n   * Current state.\n   */\n  state: OpState | null;\n  /**\n   * Next operation.\n   */\n  next: Op | undefined;\n}\n\n/**\n * Root nodes.\n */\nexport const ROOTS = [] as Root[];\n\n/**\n * Find root node of a container.\n *\n * @param predicate - Find predicate.\n * @returns root node or undefined when root node doesn't exist.\n */\nexport const findRoot = (predicate: (root: Root) => boolean) => ROOTS.find(predicate);\n\n/**\n * Performs a dirty checking.\n */\nexport function dirtyCheck() {\n  for (let i = 0; i < ROOTS.length; ++i) {\n    const root = ROOTS[i];\n    const { container, state, next } = root;\n    _resetState();\n    if (next !== void 0) {\n      root.next = void 0;\n      root.state = _update(container!, state, next, false, true);\n    } else if (state !== null) {\n      _dirtyCheck(container!, state, false, true);\n    }\n\n    /* istanbul ignore else */\n    if (DEBUG) {\n      if (root.state) {\n        checkNestingViolations(container!, root.state);\n      }\n    }\n  }\n}\n","import { NOOP, catchError, runRepeatableTasks, RepeatableTaskList } from \"ivi-shared\";\nimport { sMT, rAF } from \"ivi-scheduler\";\nimport { printWarn } from \"../debug/print\";\nimport { IOS_GESTURE_EVENT } from \"../dom/feature_detection\";\nimport { NodeFlags } from \"../vdom/node_flags\";\nimport { Op } from \"../vdom/operations\";\nimport { OpState } from \"../vdom/state\";\nimport { ROOTS, findRoot, dirtyCheck } from \"../vdom/root\";\n\n/**\n * Update flags.\n */\nexport const enum UpdateFlags {\n  /**\n   * Forces synchronous update.\n   */\n  RequestSyncUpdate = 1,\n}\n\n/**\n * Scheduler flags.\n */\nconst enum SchedulerFlags {\n  /**\n   * Running inside of a scheduler context.\n   */\n  Running = 1,\n  /**\n   * Scheduler tick is pending for an execution.\n   */\n  TickPending = 1 << 1,\n  /**\n   * Frame update is pending for an execution.\n   */\n  NextFramePending = 1 << 2,\n  /**\n   * Sync Frame update is pending for an execution.\n   */\n  NextSyncFramePending = 1 << 3,\n  /**\n   * Running inside of a frame update context.\n   */\n  UpdatingFrame = 1 << 4,\n  /**\n   * Dirty checking is pending for an execution.\n   */\n  DirtyCheckPending = 1 << 5,\n}\n\nconst enum SchedulerDebugFlags {\n  DirtyCheckingFinished = 1,\n  MutationsFinished = 1 << 1,\n  LayoutFinished = 1 << 2,\n}\n\n/**\n * Task list.\n */\ninterface TaskList { v: Array<() => void>; }\n\n/**\n * createTaskList creates a task list.\n *\n * @returns task list\n */\nconst createTaskList = () => ({ v: [] }) as TaskList;\n\n/**\n * Execute tasks from the `TaskList`.\n *\n * @param t - Task list\n */\nfunction run(t: TaskList) {\n  while (t.v.length > 0) {\n    const tasks = t.v;\n    let i = 0;\n    t.v = [];\n    do {\n      tasks[i++]();\n    } while (i < tasks.length);\n  }\n}\n\nlet _flags: SchedulerFlags = 0;\nlet _debugFlags: SchedulerDebugFlags;\n/* istanbul ignore else */\nif (DEBUG) {\n  _debugFlags = 0;\n}\nlet _clock = 1;\nconst _microtasks = createTaskList();\nconst _mutationEffects = createTaskList();\nconst _domLayoutEffects = createTaskList();\nconst _beforeMutations = [] as RepeatableTaskList;\nconst _afterMutations = [] as RepeatableTaskList;\nlet _frameStartTime = 0;\n\n/**\n * withSchedulerTick wraps `inner` function into a scheduler context execution.\n *\n * @param inner - Inner function.\n * @returns function that will be executed in a scheduler context.\n */\nexport const withSchedulerTick = <T extends any[]>(inner: (...args: T) => void) => (\n  catchError(function () {\n    _flags |= SchedulerFlags.Running;\n    inner.apply(void 0, arguments as unknown as T);\n    run(_microtasks);\n    _flags &= ~(SchedulerFlags.Running | SchedulerFlags.TickPending);\n    ++_clock;\n  })\n) as (...args: T) => void;\n\nconst runMicrotasks = withSchedulerTick(NOOP);\n\n/**\n * clock returns monotonically increasing clock value.\n *\n * @returns current clock value.\n */\nexport const clock = () => _clock;\n\n/**\n * scheduleMicrotask adds task to the microtask queue.\n *\n * @param task - Microtask.\n */\nexport function scheduleMicrotask(task: () => void): void {\n  _microtasks.v.push(task);\n  if ((_flags & (SchedulerFlags.Running | SchedulerFlags.TickPending)) === 0) {\n    _flags |= SchedulerFlags.TickPending;\n    sMT(runMicrotasks);\n  }\n}\n\n/**\n * beforeMutations adds a hook that will be executed before DOM mutations.\n *\n * @param fn - hook.\n */\nexport function beforeMutations(fn: () => boolean | void): void {\n  _beforeMutations.push(fn);\n}\n\n/**\n * afterMutations adds a hook that will be executed after DOM mutations.\n *\n * @param fn - hook.\n */\nexport function afterMutations(fn: () => boolean | void): void {\n  _afterMutations.push(fn);\n}\n\n/**\n * frameStartTime returns current frame start time.\n *\n * @returns current frame start time.\n */\nexport const frameStartTime = () => _frameStartTime;\n\n/**\n * withNextFrame wraps `inner` function into a scheduler frame update context.\n *\n * @param inner - Inner function.\n * @returns function that will be executed in a frame update context.\n */\nexport const withNextFrame = (inner: (time?: number) => void) => (\n  withSchedulerTick((time?: number) => {\n    _flags |= SchedulerFlags.UpdatingFrame;\n    inner(time);\n\n    if ((_flags & SchedulerFlags.NextFramePending) !== 0) {\n      _frameStartTime = time === void 0 ? performance.now() : time;\n\n      runRepeatableTasks(_beforeMutations);\n      if ((_flags & SchedulerFlags.DirtyCheckPending) !== 0) {\n        dirtyCheck();\n      }\n      /* istanbul ignore else */\n      if (DEBUG) {\n        _debugFlags |= SchedulerDebugFlags.DirtyCheckingFinished;\n      }\n      run(_mutationEffects);\n      /* istanbul ignore else */\n      if (DEBUG) {\n        _debugFlags |= SchedulerDebugFlags.MutationsFinished;\n      }\n      runRepeatableTasks(_afterMutations);\n      run(_domLayoutEffects);\n      /* istanbul ignore else */\n      if (DEBUG) {\n        _debugFlags |= SchedulerDebugFlags.LayoutFinished;\n      }\n    }\n    _flags &= ~(\n      SchedulerFlags.UpdatingFrame |\n      SchedulerFlags.NextFramePending |\n      SchedulerFlags.NextSyncFramePending |\n      SchedulerFlags.DirtyCheckPending\n    );\n    /* istanbul ignore else */\n    if (DEBUG) {\n      _debugFlags &= ~(\n        SchedulerDebugFlags.DirtyCheckingFinished |\n        SchedulerDebugFlags.MutationsFinished |\n        SchedulerDebugFlags.LayoutFinished\n      );\n    }\n  })\n);\n\n/**\n * Frame tasks scheduler event handler.\n *\n * @param t Current time.\n */\nconst _handleNextFrame = withNextFrame(NOOP);\n\n/**\n * requestNextFrame requests an update for next frame.\n */\nexport function requestNextFrame(flags?: UpdateFlags): void {\n  if (\n    (flags !== void 0) &&\n    ((flags & UpdateFlags.RequestSyncUpdate) !== 0) &&\n    ((_flags & SchedulerFlags.NextSyncFramePending) === 0)\n  ) {\n    _flags |= SchedulerFlags.NextFramePending | SchedulerFlags.NextSyncFramePending;\n    if ((_flags & SchedulerFlags.UpdatingFrame) === 0) {\n      scheduleMicrotask(_handleNextFrame);\n    }\n  } else if ((_flags & SchedulerFlags.NextFramePending) === 0) {\n    _flags |= SchedulerFlags.NextFramePending;\n    if ((_flags & SchedulerFlags.UpdatingFrame) === 0) {\n      rAF(_handleNextFrame);\n    }\n  }\n}\n\n/**\n * Adds a write DOM task to the queue.\n *\n * @param fn - Write DOM task\n */\nexport function scheduleMutationEffect(fn: () => void, flags?: UpdateFlags): void {\n  /* istanbul ignore else */\n  if (DEBUG) {\n    if (_flags & SchedulerFlags.UpdatingFrame) {\n      if (_debugFlags & SchedulerDebugFlags.MutationsFinished) {\n        printWarn(\"Mutation effect is scheduled after mutations were finished\");\n      }\n    }\n  }\n  _mutationEffects.v.push(fn);\n  requestNextFrame(flags);\n}\n\n/**\n * Adds a DOM layout task to the queue.\n *\n * @param fn - Read DOM task\n */\nexport function scheduleLayoutEffect(fn: () => void, flags?: UpdateFlags): void {\n  /* istanbul ignore else */\n  if (DEBUG) {\n    if (_flags & SchedulerFlags.UpdatingFrame) {\n      if (_debugFlags & SchedulerDebugFlags.MutationsFinished) {\n        printWarn(\"Layout effect is scheduled after layout were finished\");\n      }\n    }\n  }\n  _domLayoutEffects.v.push(fn);\n  requestNextFrame(flags);\n}\n\nexport function requestDirtyCheck(flags?: UpdateFlags) {\n  /* istanbul ignore else */\n  if (DEBUG) {\n    if (_flags & SchedulerFlags.UpdatingFrame) {\n      if (_debugFlags & SchedulerDebugFlags.MutationsFinished) {\n        printWarn(\"Dirty checking is scheduled after dirty checking were finished\");\n      }\n    }\n  }\n  _flags |= SchedulerFlags.DirtyCheckPending;\n  requestNextFrame(flags);\n}\n\n/**\n * Invalidate component.\n *\n * @param c - Component instance\n * @param flags - See {@link UpdateFlags} for details.\n */\nexport function invalidate(c: OpState, flags?: UpdateFlags): void {\n  c.f |= NodeFlags.Dirty;\n  requestDirtyCheck(flags);\n}\n\n/**\n * dirty requests a dirty checking and returns current monotonic clock value.\n *\n * @param flags - See {@link UpdateFlags} for details.\n * @returns current monotonic clock value.\n */\nexport const dirty = (flags?: UpdateFlags) => (requestDirtyCheck(flags), _clock);\n\n/**\n * Render virtual DOM node into the container.\n *\n * @param next - Virtual DOM node to render\n * @param container - DOM Node that will contain rendered node\n * @param flags - See {@link UpdateFlags} for details\n */\nexport function render(next: Op, container: Element, flags?: UpdateFlags): void {\n  /* istanbul ignore else */\n  if (DEBUG) {\n    /**\n     * Rendering into the <body> element is disabled to make it possible to fix iOS quirk with click events.\n     */\n    if (container === document.body) {\n      throw new Error(\"Rendering into the <body> element aren't allowed\");\n    }\n    if (!document.body.contains(container)) {\n      throw new Error(\"Container element should be attached to the document\");\n    }\n  }\n\n  const root = findRoot((v) => v.container === container);\n  if (root) {\n    root.next = next;\n  } else {\n    ROOTS.push({ container, state: null, next });\n    /* istanbul ignore if */\n    /**\n     * Fix for the Mouse Event bubbling on iOS devices.\n     *\n     * #quirks\n     *\n     * http://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\n     */\n    if (TARGET === \"browser\" && IOS_GESTURE_EVENT) {\n      (container as HTMLElement).onclick = NOOP;\n    }\n  }\n\n  requestDirtyCheck(flags);\n}\n","import { checkElement } from \"../debug/element\";\nimport { NodeFlags } from \"./node_flags\";\nimport { OpNode, Op, ElementData, createOpNode, createOpType } from \"./operations\";\nimport { Component } from \"./component\";\n\n/**\n * elementFactory creates a factory for DOM elements.\n *\n * @param tag HTML element tag name.\n * @param flags Node flags.\n * @returns HTML element operation factory.\n */\nexport function elementFactory<T, U>(tag: string, flags: NodeFlags) {\n  const type = createOpType(flags, tag);\n  return DEBUG ?\n    (n?: string, a?: {}, c: Op = null) => {\n      checkElement(tag, a, (flags & NodeFlags.Svg) !== 0);\n      return createOpNode<ElementData>(type, { n, a, c });\n    } :\n    /* istanbul ignore next */(n?: string, a?: {}, c: Op = null) => createOpNode<ElementData>(type, { n, a, c });\n}\n\n/**\n * htmlElementFactory creates a factory for HTML elements.\n *\n * @param tag HTML element tag name.\n * @returns HTML element operation factory.\n */\nexport const htmlElementFactory: <T, U>(tag: string) => (\n  className?: string,\n  attrs?: {},\n  children?: Op,\n) => OpNode<ElementData<T>> = (tag: string) => elementFactory(tag, NodeFlags.Element);\n\n/**\n * svgElementFactory creates a factory for SVG elements.\n *\n * @param tag SVG element tag name.\n * @returns SVG element operation factory.\n */\nexport const svgElementFactory: <T, U>(tag: string) => (\n  className?: string,\n  attrs?: {},\n  children?: Op,\n) => OpNode<ElementData<T>> = (tag: string) => elementFactory(tag, NodeFlags.Element | NodeFlags.Svg);\n\n/**\n * `elementProto()` creates a factory that produces elements with predefined attributes.\n *\n * @example\n *\n *     const DivWithIdAttribute = elementProto(div(_, { id: \"predefined-id\" }));\n *\n *     render(\n *       DivWithIdAttribute(\"class-name\", { title: \"Title\" }, \"Hello World\"),\n *       document.getElementById(\"app\")!,\n *     );\n *\n * @param p Element prototype.\n * @returns Factory that produces elements with predefined attributes.\n */\nexport function elementProto<P>(p: OpNode<ElementData<P>>) {\n  /* istanbul ignore else */\n  if (DEBUG) {\n    if (p.d.c !== null) {\n      throw new Error(`Invalid OpNode, element prototypes can't have any children`);\n    }\n    checkElement(p.t.d as string, p.d.a, (p.t.f & NodeFlags.Svg) !== 0);\n  }\n  const type = createOpType(p.t.f | NodeFlags.ElementProto, { n: null, p });\n  return (n?: string, a?: {}, c: Op = null) => createOpNode<ElementData>(type, { n, a, c });\n}\n\n/**\n * component creates a factory that produces component nodes.\n *\n * @example\n *\n *     const A = component<string>(() => {\n *       let _text;\n *       const click = onClick(() => { console.log(_text); });\n *\n *       return (text) => (\n *         _text = text,\n *         Events(click,\n *           button(_, _, \"Click Me\"),\n *         )\n *       );\n *     });\n *\n * @param c Component function.\n * @param shouldUpdate `shouldUpdate` function.\n * @returns Factory that produces component nodes.\n */\nexport function component(\n  c: (c: Component) => () => Op,\n): () => OpNode<undefined>;\n\n/**\n * component creates a factory that produces component nodes.\n *\n * @example\n *\n *     const A = component<string>(() => {\n *       let _text;\n *       const click = onClick(() => { console.log(_text); });\n *\n *       return (text) => (\n *         _text = text,\n *         Events(click,\n *           button(_, _, \"Click Me\"),\n *         )\n *       );\n *     });\n *\n * @param c Component function.\n * @param shouldUpdate `shouldUpdate` function.\n * @returns Factory that produces component nodes.\n */\nexport function component<P>(\n  c: (c: Component) => (props: P) => Op,\n  shouldUpdate?: undefined extends P ? undefined : (prev: P, next: P) => boolean,\n): undefined extends P ? (props?: P) => OpNode<P> : (props: P) => OpNode<P>;\n\n/**\n * component creates a factory that produces component nodes.\n *\n * @example\n *\n *     const A = component<string>(() => {\n *       let _text;\n *       const click = onClick(() => { console.log(_text); });\n *\n *       return (text) => (\n *         _text = text,\n *         Events(click,\n *           button(_, _, \"Click Me\"),\n *         )\n *       );\n *     });\n *\n * @param c Component function.\n * @param su `shouldUpdate` function.\n * @returns Factory that produces component nodes.\n */\nexport function component<P>(\n  c: (c: Component) => (props: P) => Op,\n  su?: (prev: P, next: P) => boolean,\n): (props: P) => OpNode<P> {\n  const type = createOpType(NodeFlags.Component | NodeFlags.Stateful | NodeFlags.DirtyCheck, { c, su });\n  return (props: P) => createOpNode(type, props);\n}\n\n/**\n * statelessComponent creates an factory that produces stateless components nodes.\n *\n * @example\n *\n *     const A = statelessComponent<string>((text) => div(_, _, text));\n *\n * @param update Update function.\n * @param shouldUpdate `shouldUpdate` function.\n * @returns Factory that produces stateless component nodes.\n */\nexport function statelessComponent(\n  update: () => Op,\n): () => OpNode<undefined>;\n\n/**\n * statelessComponent creates an factory that produces stateless components nodes.\n *\n * @example\n *\n *     const A = statelessComponent<string>((text) => div(_, _, text));\n *\n * @param update Update function.\n * @param su `shouldUpdate` function.\n * @returns Factory that produces stateless component nodes.\n */\nexport function statelessComponent<P>(\n  update: (props: P) => Op,\n  su?: undefined extends P ? undefined : (prev: P, next: P) => boolean,\n): undefined extends P ? (props?: P) => OpNode<P> : (props: P) => OpNode<P>;\n\n/**\n * statelessComponent creates an factory that produces stateless components nodes.\n *\n * @example\n *\n *     const A = statelessComponent<string>((text) => div(_, _, text));\n *\n * @param c Update function.\n * @param su `shouldUpdate` function.\n * @returns Factory that produces stateless component nodes.\n */\nexport function statelessComponent<P>(\n  c: (props: P) => Op,\n  su?: undefined extends P ? undefined : (prev: P, next: P) => boolean,\n): (props: P) => OpNode<P> {\n  const type = createOpType(NodeFlags.Component, { c, su });\n  return (props: P) => createOpNode(type, props);\n}\n","import {\n  HTMLAnchorElementAttrs, HTMLElementAttrs, HTMLAreaElementAttrs, HTMLAudioElementAttrs,\n  HTMLBaseElementAttrs, HTMLBodyElementAttrs, HTMLBRElementAttrs, HTMLButtonElementAttrs,\n  HTMLCanvasElementAttrs, HTMLQuoteElementAttrs, HTMLTableCaptionElementAttrs, HTMLTableColElementAttrs,\n  HTMLModElementAttrs, HTMLDivElementAttrs, HTMLDListElementAttrs, HTMLFieldSetElementAttrs, HTMLFormElementAttrs,\n  HTMLHeadElementAttrs, HTMLHeadingElementAttrs, HTMLHRElementAttrs, HTMLHtmlElementAttrs, HTMLIFrameElementAttrs,\n  HTMLImageElementAttrs, HTMLInputElementAttrs, HTMLLabelElementAttrs, HTMLLegendElementAttrs, HTMLLIElementAttrs,\n  HTMLLinkElementAttrs, HTMLMapElementAttrs, HTMLMenuElementAttrs, HTMLMetaElementAttrs, HTMLMeterElementAttrs,\n  HTMLOListElementAttrs, HTMLOptGroupElementAttrs, HTMLOptionElementAttrs, HTMLParagraphElementAttrs,\n  HTMLPictureElementAttrs, HTMLPreElementAttrs, HTMLProgressElementAttrs, HTMLScriptElementAttrs,\n  HTMLSelectElementAttrs, HTMLSourceElementAttrs, HTMLSpanElementAttrs, HTMLStyleElementAttrs,\n  HTMLTableDataCellElementAttrs, HTMLTableElementAttrs, HTMLTableHeaderCellElementAttrs, HTMLTableRowElementAttrs,\n  HTMLTableSectionElementAttrs, HTMLTemplateElementAttrs, HTMLTextAreaElementAttrs, HTMLTitleElementAttrs,\n  HTMLTrackElementAttrs, HTMLUListElementAttrs, HTMLVideoElementAttrs,\n\n  ATTRIBUTE_DIRECTIVE_SKIP_UNDEFINED,\n\n  AttributeDirective, elementFactory, htmlElementFactory, NodeFlags,\n} from \"ivi\";\n\n/**\n * {@link AttributeDirective} with `\"\"` value and {@link updateValue} sync function.\n */\nconst VALUE_EMPTY_STRING: AttributeDirective<string | number> = { v: \"\", u: updateValue };\n\n/**\n * {@link AttributeDirective} with `false` value and {@link updateChecked} sync function.\n */\nconst CHECKED_FALSE: AttributeDirective<boolean> = { v: false, u: updateChecked };\n\n/**\n * {@link AttributeDirective} with `true` value and {@link updateChecked} sync function.\n */\nconst CHECKED_TRUE: AttributeDirective<boolean> = { v: true, u: updateChecked };\n\n/**\n * Synchronization function for {@link AttributeDirective} created with {@link VALUE} function.\n *\n * @param element - Target element\n * @param key - Attribute key\n * @param prev - Previous value\n * @param next - Next value\n */\nfunction updateValue(\n  element: Element,\n  key: string,\n  prev: string | number | undefined,\n  next: string | number | undefined,\n) {\n  if (prev === void 0) {\n    if (next !== \"\") {\n      (element as HTMLInputElement | HTMLTextAreaElement).value = next as string;\n    }\n  } else if (next !== void 0) {\n    if ((element as HTMLInputElement | HTMLTextAreaElement).value !== next) {\n      (element as HTMLInputElement | HTMLTextAreaElement).value = next as string;\n    }\n  }\n}\n\n/**\n * Synchronization function for {@link AttributeDirective} created with {@link CHECKED} function.\n *\n * @param element - Target element\n * @param key - Attribute key\n * @param prev - Previous value\n * @param next - Next value\n */\nfunction updateChecked(\n  element: Element,\n  key: string,\n  prev: boolean | undefined,\n  next: boolean | undefined,\n) {\n  if (prev === void 0) {\n    if (next) {\n      (element as HTMLInputElement).checked = next;\n    }\n  } else if (next !== void 0) {\n    if ((element as HTMLInputElement).checked !== next) {\n      (element as HTMLInputElement).checked = next!;\n    }\n  }\n}\n\n/**\n * VALUE function creates a {@link AttributeDirective} that assigns a `value` property to an HTMLInputElement or\n * HTMLTextAreaElement.\n *\n * `undefined` values are ignored.\n *\n * @example\n *\n *   const e = input(\"\", { value: VALUE(\"value\") });\n *\n * @param v - Value\n * @returns {@link AttributeDirective}\n */\nexport function VALUE(v: string | number | undefined): AttributeDirective<string | number> {\n  return (v === void 0) ?\n    ATTRIBUTE_DIRECTIVE_SKIP_UNDEFINED :\n    v === \"\" ?\n      VALUE_EMPTY_STRING :\n      { v, u: updateValue };\n}\n\n/**\n * CHECKED function creates a {@link AttributeDirective} that assigns a `checked` property to an HTMLInputElement.\n *\n * `undefined` values are ignored.\n *\n * @example\n *\n *   const e = input(\"\", { checked: CHECKED(true) });\n *\n * @param v - Checked value\n * @returns {@link AttributeDirective}\n */\nexport function CHECKED(v: boolean | undefined): AttributeDirective<boolean> {\n  return (v === void 0) ?\n    ATTRIBUTE_DIRECTIVE_SKIP_UNDEFINED as any as AttributeDirective<boolean> :\n    v ? CHECKED_TRUE : CHECKED_FALSE;\n}\n\n/* tslint:disable:max-line-length */\n/**\n * Creates OpNode HTML element <a>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <a>\n */\nexport const a = /*#__PURE__*/htmlElementFactory<HTMLAnchorElementAttrs, HTMLAnchorElement>(\"a\");\n\n/**\n * Creates OpNode HTML element <abbr>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/abbr}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <abbr>\n */\nexport const abbr = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"abbr\");\n\n/**\n * Creates OpNode HTML element <address>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/address}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <address>\n */\nexport const address = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"address\");\n\n/**\n * Creates OpNode HTML element <article>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/article}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <article>\n */\nexport const article = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"article\");\n\n/**\n * Creates OpNode HTML element <aside>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/aside}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <aside>\n */\nexport const aside = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"aside\");\n\n/**\n * Creates OpNode HTML element <b>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/b}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <b>\n */\nexport const b = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"b\");\n\n/**\n * Creates OpNode HTML element <base>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/base}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <base>\n */\nexport const base = /*#__PURE__*/htmlElementFactory<HTMLBaseElementAttrs, HTMLBaseElement>(\"base\");\n\n/**\n * Creates OpNode HTML element <bdo>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/bdo}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <bdo>\n */\nexport const bdo = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"bdo\");\n\n/**\n * Creates OpNode HTML element <blockquote>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/blockquote}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <blockquote>\n */\nexport const blockquote = /*#__PURE__*/htmlElementFactory<HTMLQuoteElementAttrs, HTMLQuoteElement>(\"blockquote\");\n\n/**\n * Creates OpNode HTML element <body>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/body}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <body>\n */\nexport const body = /*#__PURE__*/htmlElementFactory<HTMLBodyElementAttrs, HTMLBodyElement>(\"body\");\n\n/**\n * Creates OpNode HTML element <br>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/br}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <br>\n */\nexport const br = /*#__PURE__*/htmlElementFactory<HTMLBRElementAttrs, HTMLBRElement>(\"br\");\n\n/**\n * Creates OpNode HTML element <button>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <button>\n */\nexport const button = /*#__PURE__*/htmlElementFactory<HTMLButtonElementAttrs, HTMLButtonElement>(\"button\");\n\n/**\n * Creates OpNode HTML element <canvas>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <canvas>\n */\nexport const canvas = /*#__PURE__*/htmlElementFactory<HTMLCanvasElementAttrs, HTMLCanvasElement>(\"canvas\");\n\n/**\n * Creates OpNode HTML element <caption>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <caption>\n */\nexport const caption = /*#__PURE__*/htmlElementFactory<HTMLTableCaptionElementAttrs, HTMLTableCaptionElement>(\"caption\");\n\n/**\n * Creates OpNode HTML element <cite>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/cite}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <cite>\n */\nexport const cite = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"cite\");\n\n/**\n * Creates OpNode HTML element <code>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/code}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <code>\n */\nexport const code = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"code\");\n\n/**\n * Creates OpNode HTML element <col>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/col}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <col>\n */\nexport const col = /*#__PURE__*/htmlElementFactory<HTMLTableColElementAttrs, HTMLTableColElement>(\"col\");\n\n/**\n * Creates OpNode HTML element <colgroup>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/colgroup}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <colgroup>\n */\nexport const colgroup = /*#__PURE__*/htmlElementFactory<HTMLTableColElementAttrs, HTMLTableColElement>(\"colgroup\");\n\n/**\n * Creates OpNode HTML element <del>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/del}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <del>\n */\nexport const del = /*#__PURE__*/htmlElementFactory<HTMLModElementAttrs, HTMLModElement>(\"del\");\n\n/**\n * Creates OpNode HTML element <dfn>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dfn}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <dfn>\n */\nexport const dfn = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"dfn\");\n\n/**\n * Creates OpNode HTML element <div>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <div>\n */\nexport const div = /*#__PURE__*/htmlElementFactory<HTMLDivElementAttrs, HTMLDivElement>(\"div\");\n\n/**\n * Creates OpNode HTML element <dd>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dd}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <dd>\n */\nexport const dd = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"dd\");\n\n/**\n * Creates OpNode HTML element <dl>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dl}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <dl>\n */\nexport const dl = /*#__PURE__*/htmlElementFactory<HTMLDListElementAttrs, HTMLDListElement>(\"dl\");\n\n/**\n * Creates OpNode HTML element <dt>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dt}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <dt>\n */\nexport const dt = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"dt\");\n\n/**\n * Creates OpNode HTML element <em>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/em}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <em>\n */\nexport const em = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"em\");\n\n/**\n * Creates OpNode HTML element <fieldset>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/fieldset}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <fieldset>\n */\nexport const fieldset = /*#__PURE__*/htmlElementFactory<HTMLFieldSetElementAttrs, HTMLFieldSetElement>(\"fieldset\");\n\n/**\n * Creates OpNode HTML element <figcaption>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/figcaption}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <figcaption>\n */\nexport const figcaption = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"figcaption\");\n\n/**\n * Creates OpNode HTML element <figure>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/figure}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <figure>\n */\nexport const figure = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"figure\");\n\n/**\n * Creates OpNode HTML element <footer>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/footer}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <footer>\n */\nexport const footer = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"footer\");\n\n/**\n * Creates OpNode HTML element <form>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <form>\n */\nexport const form = /*#__PURE__*/htmlElementFactory<HTMLFormElementAttrs, HTMLFormElement>(\"form\");\n\n/**\n * Creates OpNode HTML element <h1>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h1}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <h1>\n */\nexport const h1 = /*#__PURE__*/htmlElementFactory<HTMLHeadingElementAttrs, HTMLHeadingElement>(\"h1\");\n\n/**\n * Creates OpNode HTML element <h2>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h2}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <h2>\n */\nexport const h2 = /*#__PURE__*/htmlElementFactory<HTMLHeadingElementAttrs, HTMLHeadingElement>(\"h2\");\n\n/**\n * Creates OpNode HTML element <h3>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h3}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <h3>\n */\nexport const h3 = /*#__PURE__*/htmlElementFactory<HTMLHeadingElementAttrs, HTMLHeadingElement>(\"h3\");\n\n/**\n * Creates OpNode HTML element <h4>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h4}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <h4>\n */\nexport const h4 = /*#__PURE__*/htmlElementFactory<HTMLHeadingElementAttrs, HTMLHeadingElement>(\"h4\");\n\n/**\n * Creates OpNode HTML element <h5>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h5}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <h5>\n */\nexport const h5 = /*#__PURE__*/htmlElementFactory<HTMLHeadingElementAttrs, HTMLHeadingElement>(\"h5\");\n\n/**\n * Creates OpNode HTML element <h6>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h6}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <h6>\n */\nexport const h6 = /*#__PURE__*/htmlElementFactory<HTMLHeadingElementAttrs, HTMLHeadingElement>(\"h6\");\n\n/**\n * Creates OpNode HTML element <head>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/head}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <head>\n */\nexport const head = /*#__PURE__*/htmlElementFactory<HTMLHeadElementAttrs, HTMLHeadElement>(\"head\");\n\n/**\n * Creates OpNode HTML element <header>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/header}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <header>\n */\nexport const header = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"header\");\n\n/**\n * Creates OpNode HTML element <hgroup>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/hgroup}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <hgroup>\n */\nexport const hgroup = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"hgroup\");\n\n/**\n * Creates OpNode HTML element <hr>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/hr}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <hr>\n */\nexport const hr = /*#__PURE__*/htmlElementFactory<HTMLHRElementAttrs, HTMLHRElement>(\"hr\");\n\n/**\n * Creates OpNode HTML element <html>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/html}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <html>\n */\nexport const html = /*#__PURE__*/htmlElementFactory<HTMLHtmlElementAttrs, HTMLHtmlElement>(\"html\");\n\n/**\n * Creates OpNode HTML element <i>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/i}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <i>\n */\nexport const i = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"i\");\n\n/**\n * Creates OpNode HTML element <iframe>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <iframe>\n */\nexport const iframe = /*#__PURE__*/htmlElementFactory<HTMLIFrameElementAttrs, HTMLIFrameElement>(\"iframe\");\n\n/**\n * Creates OpNode HTML element <img>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <img>\n */\nexport const img = /*#__PURE__*/htmlElementFactory<HTMLImageElementAttrs, HTMLImageElement>(\"img\");\n\n/**\n * Creates OpNode HTML element <area>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/area}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <area>\n */\nexport const area = /*#__PURE__*/htmlElementFactory<HTMLAreaElementAttrs, HTMLAreaElement>(\"area\");\n\n/**\n * Creates OpNode HTML element <map>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/map}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <map>\n */\nexport const map = /*#__PURE__*/htmlElementFactory<HTMLMapElementAttrs, HTMLMapElement>(\"map\");\n\n/**\n * Creates OpNode HTML element <ins>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ins}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <ins>\n */\nexport const ins = /*#__PURE__*/htmlElementFactory<HTMLModElementAttrs, HTMLModElement>(\"ins\");\n\n/**\n * Creates OpNode HTML element <kbd>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/kbd}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <kbd>\n */\nexport const kbd = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"kbd\");\n\n/**\n * Creates OpNode HTML element <label>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/label}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <label>\n */\nexport const label = /*#__PURE__*/htmlElementFactory<HTMLLabelElementAttrs, HTMLLabelElement>(\"label\");\n\n/**\n * Creates OpNode HTML element <legend>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/legend}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <legend>\n */\nexport const legend = /*#__PURE__*/htmlElementFactory<HTMLLegendElementAttrs, HTMLLegendElement>(\"legend\");\n\n/**\n * Creates OpNode HTML element <li>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/li}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <li>\n */\nexport const li = /*#__PURE__*/htmlElementFactory<HTMLLIElementAttrs, HTMLLIElement>(\"li\");\n\n/**\n * Creates OpNode HTML element <link>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <link>\n */\nexport const link = /*#__PURE__*/htmlElementFactory<HTMLLinkElementAttrs, HTMLLinkElement>(\"link\");\n\n/**\n * Creates OpNode HTML element <main>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/main}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <main>\n */\nexport const main = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"main\");\n\n/**\n * Creates OpNode HTML element <mark>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/mark}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <mark>\n */\nexport const mark = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"mark\");\n\n/**\n * Creates OpNode HTML element <menu>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/menu}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <menu>\n */\nexport const menu = /*#__PURE__*/htmlElementFactory<HTMLMenuElementAttrs, HTMLMenuElement>(\"menu\");\n\n/**\n * Creates OpNode HTML element <meta>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <meta>\n */\nexport const meta = /*#__PURE__*/htmlElementFactory<HTMLMetaElementAttrs, HTMLMetaElement>(\"meta\");\n\n/**\n * Creates OpNode HTML element <meter>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meter}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <meter>\n */\nexport const meter = /*#__PURE__*/htmlElementFactory<HTMLMeterElementAttrs, HTMLMeterElement>(\"meter\");\n\n/**\n * Creates OpNode HTML element <nav>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/nav}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <nav>\n */\nexport const nav = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"nav\");\n\n/**\n * Creates OpNode HTML element <noscript>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/noscript}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <noscript>\n */\nexport const noscript = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"noscript\");\n\n/**\n * Creates OpNode HTML element <ol>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ol}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <ol>\n */\nexport const ol = /*#__PURE__*/htmlElementFactory<HTMLOListElementAttrs, HTMLOListElement>(\"ol\");\n\n/**\n * Creates OpNode HTML element <optgroup>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/optgroup}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <optgroup>\n */\nexport const optgroup = /*#__PURE__*/htmlElementFactory<HTMLOptGroupElementAttrs, HTMLOptGroupElement>(\"optgroup\");\n\n/**\n * Creates OpNode HTML element <option>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <option>\n */\nexport const option = /*#__PURE__*/htmlElementFactory<HTMLOptionElementAttrs, HTMLOptionElement>(\"option\");\n\n/**\n * Creates OpNode HTML element <p>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/p}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <p>\n */\nexport const p = /*#__PURE__*/htmlElementFactory<HTMLParagraphElementAttrs, HTMLParagraphElement>(\"p\");\n\n/**\n * Creates OpNode HTML element <picture>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/picture}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <picture>\n */\nexport const picture = /*#__PURE__*/htmlElementFactory<HTMLPictureElementAttrs, HTMLPictureElement>(\"picture\");\n\n/**\n * Creates OpNode HTML element <pre>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/pre}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <pre>\n */\nexport const pre = /*#__PURE__*/elementFactory<HTMLPreElementAttrs, HTMLPreElement>(\"pre\", NodeFlags.Element | NodeFlags.NewlineEatingElement);\n\n/**\n * Creates OpNode HTML element <progress>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/progress}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <progress>\n */\nexport const progress = /*#__PURE__*/htmlElementFactory<HTMLProgressElementAttrs, HTMLProgressElement>(\"progress\");\n\n/**\n * Creates OpNode HTML element <q>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/q}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <q>\n */\nexport const q = /*#__PURE__*/htmlElementFactory<HTMLQuoteElementAttrs, HTMLQuoteElement>(\"q\");\n\n/**\n * Creates OpNode HTML element <rt>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/rt}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <rt>\n */\nexport const rt = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"rt\");\n\n/**\n * Creates OpNode HTML element <ruby>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ruby}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <ruby>\n */\nexport const ruby = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"ruby\");\n\n/**\n * Creates OpNode HTML element <s>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/s}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <s>\n */\nexport const s = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"s\");\n\n/**\n * Creates OpNode HTML element <samp>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/samp}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <samp>\n */\nexport const samp = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"samp\");\n\n/**\n * Creates OpNode HTML element <script>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <script>\n */\nexport const script = /*#__PURE__*/htmlElementFactory<HTMLScriptElementAttrs, HTMLScriptElement>(\"script\");\n\n/**\n * Creates OpNode HTML element <section>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/section}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <section>\n */\nexport const section = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"section\");\n\n/**\n * Creates OpNode HTML element <select>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <select>\n */\nexport const select = /*#__PURE__*/htmlElementFactory<HTMLSelectElementAttrs, HTMLSelectElement>(\"select\");\n\n/**\n * Creates OpNode HTML element <source>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/source}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <source>\n */\nexport const source = /*#__PURE__*/htmlElementFactory<HTMLSourceElementAttrs, HTMLSourceElement>(\"source\");\n\n/**\n * Creates OpNode HTML element <span>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <span>\n */\nexport const span = /*#__PURE__*/htmlElementFactory<HTMLSpanElementAttrs, HTMLSpanElement>(\"span\");\n\n/**\n * Creates OpNode HTML element <strong>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/strong}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <strong>\n */\nexport const strong = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"strong\");\n\n/**\n * Creates OpNode HTML element <style>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/style}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <style>\n */\nexport const style = /*#__PURE__*/htmlElementFactory<HTMLStyleElementAttrs, HTMLStyleElement>(\"style\");\n\n/**\n * Creates OpNode HTML element <sub>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/sub}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <sub>\n */\nexport const sub = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"sub\");\n\n/**\n * Creates OpNode HTML element <sup>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/sup}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <sup>\n */\nexport const sup = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"sup\");\n\n/**\n * Creates OpNode HTML element <table>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/table}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <table>\n */\nexport const table = /*#__PURE__*/htmlElementFactory<HTMLTableElementAttrs, HTMLTableElement>(\"table\");\n\n/**\n * Creates OpNode HTML element <tbody>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tbody}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <tbody>\n */\nexport const tbody = /*#__PURE__*/htmlElementFactory<HTMLTableSectionElementAttrs, HTMLTableSectionElement>(\"tbody\");\n\n/**\n * Creates OpNode HTML element <td>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/td}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <td>\n */\nexport const td = /*#__PURE__*/htmlElementFactory<HTMLTableDataCellElementAttrs, HTMLTableDataCellElement>(\"td\");\n\n/**\n * Creates OpNode HTML element <template>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/template}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <template>\n */\nexport const template = /*#__PURE__*/htmlElementFactory<HTMLTemplateElementAttrs, HTMLTemplateElement>(\"template\");\n\n/**\n * Creates OpNode HTML element <tfoot>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tfoot}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <tfoot>\n */\nexport const tfoot = /*#__PURE__*/htmlElementFactory<HTMLTableSectionElementAttrs, HTMLTableSectionElement>(\"tfoot\");\n\n/**\n * Creates OpNode HTML element <th>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/th}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <th>\n */\nexport const th = /*#__PURE__*/htmlElementFactory<HTMLTableHeaderCellElementAttrs, HTMLTableHeaderCellElement>(\"th\");\n\n/**\n * Creates OpNode HTML element <thead>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/thead}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <thead>\n */\nexport const thead = /*#__PURE__*/htmlElementFactory<HTMLTableSectionElementAttrs, HTMLTableSectionElement>(\"thead\");\n\n/**\n * Creates OpNode HTML element <time>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/time}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <time>\n */\nexport const time = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"time\");\n\n/**\n * Creates OpNode HTML element <title>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/title}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <title>\n */\nexport const title = /*#__PURE__*/htmlElementFactory<HTMLTitleElementAttrs, HTMLTitleElement>(\"title\");\n\n/**\n * Creates OpNode HTML element <tr>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tr}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <tr>\n */\nexport const tr = /*#__PURE__*/htmlElementFactory<HTMLTableRowElementAttrs, HTMLTableRowElement>(\"tr\");\n\n/**\n * Creates OpNode HTML element <track>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/track}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <track>\n */\nexport const track = /*#__PURE__*/htmlElementFactory<HTMLTrackElementAttrs, HTMLTrackElement>(\"track\");\n\n/**\n * Creates OpNode HTML element <u>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/u}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <u>\n */\nexport const u = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"u\");\n\n/**\n * Creates OpNode HTML element <ul>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ul}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <ul>\n */\nexport const ul = /*#__PURE__*/htmlElementFactory<HTMLUListElementAttrs, HTMLUListElement>(\"ul\");\n\n/**\n * Creates OpNode HTML element <wbr>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/wbr}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <wbr>\n */\nexport const wbr = /*#__PURE__*/htmlElementFactory<HTMLElementAttrs, HTMLElement>(\"wbr\");\n\n/**\n * Creates OpNode HTML element <textarea>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <textarea>\n */\nexport const textarea = /*#__PURE__*/elementFactory<HTMLTextAreaElementAttrs, HTMLTextAreaElement>(\"textarea\", NodeFlags.Element | NodeFlags.NewlineEatingElement);\n\n/**\n * Creates OpNode HTML element <input>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <input>\n */\nexport const input = /*#__PURE__*/htmlElementFactory<HTMLInputElementAttrs, HTMLInputElement>(\"input\");\n\n/**\n * Creates OpNode HTML element <audio>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <audio>\n */\nexport const audio = /*#__PURE__*/htmlElementFactory<HTMLAudioElementAttrs, HTMLAudioElement>(\"audio\");\n\n/**\n * Creates OpNode HTML element <video>.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video}\n *\n * @param className Class name.\n * @param attrs Attributes.\n * @param children Children nodes.\n * @returns OpNode HTML element <video>\n */\nexport const video = /*#__PURE__*/htmlElementFactory<HTMLVideoElementAttrs, HTMLVideoElement>(\"video\");\n","var MonitorMaxSamples = 100;\nvar MonitorSamplesResult = (function () {\n    function MonitorSamplesResult(min, max, mean, last) {\n        this.min = min;\n        this.max = max;\n        this.mean = mean;\n        this.last = last;\n    }\n    return MonitorSamplesResult;\n}());\n/**\n * Profile Samples.\n */\nvar MonitorSamples = (function () {\n    function MonitorSamples(maxSamples) {\n        this.samples = [];\n        this.maxSamples = maxSamples;\n        this._i = -1;\n    }\n    MonitorSamples.prototype.addSample = function (v) {\n        this._i = (this._i + 1) % this.maxSamples;\n        this.samples[this._i] = v;\n    };\n    MonitorSamples.prototype.each = function (fn) {\n        var samples = this.samples;\n        for (var i = 0; i < samples.length; i++) {\n            fn(samples[(this._i + 1 + i) % samples.length], i);\n        }\n    };\n    MonitorSamples.prototype.calc = function () {\n        var samples = this.samples;\n        if (samples.length === 0) {\n            return new MonitorSamplesResult(0, 0, 0, 0);\n        }\n        var min = samples[(this._i + 1) % samples.length];\n        var max = min;\n        var sum = 0;\n        for (var i = 0; i < samples.length; i++) {\n            var k = samples[(this._i + 1 + i) % samples.length];\n            if (k < min) {\n                min = k;\n            }\n            if (k > max) {\n                max = k;\n            }\n            sum += k;\n        }\n        var last = samples[this._i];\n        var mean = sum / samples.length;\n        return new MonitorSamplesResult(min, max, mean, last);\n    };\n    return MonitorSamples;\n}());\n\n/**\n * Basic Counter.\n */\nvar BasicCounter = (function () {\n    function BasicCounter() {\n        this.value = 0;\n        this.onChange = null;\n    }\n    BasicCounter.prototype.inc = function (value) {\n        if (value > 0) {\n            this.value += value;\n            this.onChange();\n        }\n    };\n    return BasicCounter;\n}());\nvar TimestampedValue = (function () {\n    function TimestampedValue(timestamp, value) {\n        this.value = value;\n        this.next = null;\n    }\n    return TimestampedValue;\n}());\n/**\n * Sliding Counter counts how many times `inc` method were called during `interval` period.\n */\nvar SlidingCounter = (function () {\n    function SlidingCounter(interval) {\n        var _this = this;\n        this._dec = function () {\n            var now = performance.now();\n            while (_this._firstTimestamp !== null) {\n                var nextTimestamp = _this._firstTimestamp;\n                if (now >= nextTimestamp.value) {\n                    _this.value -= nextTimestamp.value;\n                    _this._firstTimestamp = _this._firstTimestamp.next;\n                }\n                else {\n                    setTimeout(_this._dec, Math.ceil(nextTimestamp.value - now));\n                    break;\n                }\n            }\n            if (_this._firstTimestamp === null) {\n                _this._lastTimestamp = null;\n            }\n            _this.onChange();\n        };\n        this.interval = interval;\n        this.value = 0;\n        this.onChange = null;\n        this._firstTimestamp = null;\n        this._lastTimestamp = null;\n    }\n    SlidingCounter.prototype.inc = function (value) {\n        if (value > 0) {\n            var timestamp = new TimestampedValue(performance.now() + this.interval, value);\n            if (this._firstTimestamp === null) {\n                this._firstTimestamp = timestamp;\n                setTimeout(this._dec, this.interval);\n            }\n            else {\n                this._lastTimestamp.next = timestamp;\n            }\n            this._lastTimestamp = timestamp;\n            this.value += value;\n            this.onChange();\n        }\n    };\n    return SlidingCounter;\n}());\n\nvar frameTasks = [];\nvar rafId = -1;\n/**\n * Schedule new task that will be executed on the next frame.\n */\nfunction scheduleNextFrameTask(task) {\n    frameTasks.push(task);\n    if (rafId === -1) {\n        requestAnimationFrame(function (t) {\n            rafId = -1;\n            var tasks = frameTasks;\n            frameTasks = [];\n            for (var i = 0; i < tasks.length; i++) {\n                tasks[i]();\n            }\n        });\n    }\n}\n\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar MonitorGraphHeight = 30;\nvar MonitorGraphWidth = MonitorMaxSamples;\nvar Widget = (function () {\n    function Widget(name) {\n        var _this = this;\n        this._sync = function () {\n            _this.sync();\n            _this._dirty = false;\n        };\n        this.name = name;\n        this.element = document.createElement(\"div\");\n        this.element.style.cssText = \"padding: 2px;\" +\n            \"background-color: #020;\" +\n            \"font-family: monospace;\" +\n            \"font-size: 12px;\" +\n            \"color: #0f0\";\n        this._dirty = false;\n        this.invalidate();\n    }\n    Widget.prototype.invalidate = function () {\n        if (!this._dirty) {\n            this._dirty = true;\n            scheduleNextFrameTask(this._sync);\n        }\n    };\n    Widget.prototype.sync = function () {\n        throw new Error(\"sync method not implemented\");\n    };\n    return Widget;\n}());\nvar MonitorWidgetFlags;\n(function (MonitorWidgetFlags) {\n    MonitorWidgetFlags[MonitorWidgetFlags[\"HideMin\"] = 1] = \"HideMin\";\n    MonitorWidgetFlags[MonitorWidgetFlags[\"HideMax\"] = 2] = \"HideMax\";\n    MonitorWidgetFlags[MonitorWidgetFlags[\"HideMean\"] = 4] = \"HideMean\";\n    MonitorWidgetFlags[MonitorWidgetFlags[\"HideLast\"] = 8] = \"HideLast\";\n    MonitorWidgetFlags[MonitorWidgetFlags[\"HideGraph\"] = 16] = \"HideGraph\";\n    MonitorWidgetFlags[MonitorWidgetFlags[\"RoundValues\"] = 32] = \"RoundValues\";\n})(MonitorWidgetFlags || (MonitorWidgetFlags = {}));\nvar MonitorWidget = (function (_super) {\n    __extends(MonitorWidget, _super);\n    function MonitorWidget(name, flags, unitName, samples) {\n        var _this = _super.call(this, name) || this;\n        _this.flags = flags;\n        _this.unitName = unitName;\n        _this.samples = samples;\n        var label = document.createElement(\"div\");\n        label.style.cssText = \"text-align: center\";\n        label.textContent = _this.name;\n        var text = document.createElement(\"div\");\n        if ((flags & MonitorWidgetFlags.HideMin) === 0) {\n            _this.minText = document.createElement(\"div\");\n            text.appendChild(_this.minText);\n        }\n        else {\n            _this.minText = null;\n        }\n        if ((flags & MonitorWidgetFlags.HideMax) === 0) {\n            _this.maxText = document.createElement(\"div\");\n            text.appendChild(_this.maxText);\n        }\n        else {\n            _this.maxText = null;\n        }\n        if ((flags & MonitorWidgetFlags.HideMean) === 0) {\n            _this.meanText = document.createElement(\"div\");\n            text.appendChild(_this.meanText);\n        }\n        else {\n            _this.meanText = null;\n        }\n        if ((flags & MonitorWidgetFlags.HideLast) === 0) {\n            _this.lastText = document.createElement(\"div\");\n            text.appendChild(_this.lastText);\n        }\n        else {\n            _this.lastText = null;\n        }\n        _this.element.appendChild(label);\n        _this.element.appendChild(text);\n        if ((flags & MonitorWidgetFlags.HideGraph) === 0) {\n            _this.canvas = document.createElement(\"canvas\");\n            _this.canvas.style.cssText = \"display: block; padding: 0; margin: 0\";\n            _this.canvas.width = MonitorGraphWidth;\n            _this.canvas.height = MonitorGraphHeight;\n            _this.ctx = _this.canvas.getContext(\"2d\");\n            _this.element.appendChild(_this.canvas);\n        }\n        else {\n            _this.canvas = null;\n            _this.ctx = null;\n        }\n        return _this;\n    }\n    MonitorWidget.prototype.sync = function () {\n        var _this = this;\n        var result = this.samples.calc();\n        var scale = MonitorGraphHeight / (result.max * 1.2);\n        var min;\n        var max;\n        var mean;\n        var last;\n        if ((this.flags & MonitorWidgetFlags.RoundValues) === 0) {\n            min = result.min.toFixed(2);\n            max = result.max.toFixed(2);\n            mean = result.mean.toFixed(2);\n            last = result.last.toFixed(2);\n        }\n        else {\n            min = Math.round(result.min).toString();\n            max = Math.round(result.max).toString();\n            mean = Math.round(result.mean).toString();\n            last = Math.round(result.last).toString();\n        }\n        if (this.minText !== null) {\n            this.minText.textContent = \"min: \\u00A0\" + min + this.unitName;\n        }\n        if (this.maxText !== null) {\n            this.maxText.textContent = \"max: \\u00A0\" + max + this.unitName;\n        }\n        if (this.meanText !== null) {\n            this.meanText.textContent = \"mean: \" + mean + this.unitName;\n        }\n        if (this.lastText !== null) {\n            this.lastText.textContent = \"last: \" + last + this.unitName;\n        }\n        if (this.ctx !== null) {\n            this.ctx.fillStyle = \"#010\";\n            this.ctx.fillRect(0, 0, MonitorGraphWidth, MonitorGraphHeight);\n            this.ctx.fillStyle = \"#0f0\";\n            this.samples.each(function (v, i) {\n                _this.ctx.fillRect(i, MonitorGraphHeight, 1, -(v * scale));\n            });\n        }\n    };\n    return MonitorWidget;\n}(Widget));\nvar CounterWidget = (function (_super) {\n    __extends(CounterWidget, _super);\n    function CounterWidget(name, counter) {\n        var _this = _super.call(this, name) || this;\n        _this.counter = counter;\n        _this.text = document.createElement(\"div\");\n        _this.element.appendChild(_this.text);\n        return _this;\n    }\n    CounterWidget.prototype.sync = function () {\n        this.text.textContent = this.name + \": \" + this.counter.value;\n    };\n    return CounterWidget;\n}(Widget));\n\nvar container = null;\nvar initialized = false;\n/**\n * Initialize Performance Monitor.\n */\nfunction initPerfMonitor(options) {\n    if (!initialized) {\n        if (options.container) {\n            container = options.container;\n        }\n        initialized = true;\n    }\n}\n/**\n * Check that everything is properly initialized.\n */\nfunction checkInit() {\n    if (!container) {\n        container = document.createElement(\"div\");\n        container.style.cssText = \"position: fixed;\" +\n            \"opacity: 0.9;\" +\n            \"right: 0;\" +\n            \"bottom: 0\";\n        document.body.appendChild(container);\n    }\n    initialized = true;\n}\n/**\n * Start FPS monitor\n */\nfunction startFPSMonitor(flags) {\n    if (flags === void 0) { flags = MonitorWidgetFlags.HideMin | MonitorWidgetFlags.HideMax |\n        MonitorWidgetFlags.HideMean | MonitorWidgetFlags.RoundValues; }\n    checkInit();\n    var data = new MonitorSamples(MonitorMaxSamples);\n    var w = new MonitorWidget(\"FPS\", flags, \"\", data);\n    container.appendChild(w.element);\n    var alpha = 2 / 121;\n    var last = 0;\n    var fps = 60;\n    function update(now) {\n        if (last > 0) {\n            fps += alpha * ((1000 / (now - last)) - fps);\n        }\n        last = now;\n        data.addSample(fps);\n        w.invalidate();\n        requestAnimationFrame(update);\n    }\n    requestAnimationFrame(update);\n}\n/**\n * Start Memory Monitor\n */\nfunction startMemMonitor(flags) {\n    if (flags === void 0) { flags = MonitorWidgetFlags.HideMin | MonitorWidgetFlags.HideMean; }\n    checkInit();\n    if (performance.memory === undefined) {\n        return;\n    }\n    var data = new MonitorSamples(MonitorMaxSamples);\n    var w = new MonitorWidget(\"Memory\", flags, \"MB\", data);\n    container.appendChild(w.element);\n    function update() {\n        data.addSample(Math.round(performance.memory.usedJSHeapSize / (1024 * 1024)));\n        w.invalidate();\n        setTimeout(update, 30);\n    }\n    update();\n}\nvar ProfilerDetails = (function () {\n    function ProfilerDetails(name, unitName, flags) {\n        this.data = new MonitorSamples(MonitorMaxSamples);\n        this.widget = new MonitorWidget(name, flags, unitName, this.data);\n        this.startTime = -1;\n    }\n    return ProfilerDetails;\n}());\nvar profilerInstances = {};\nvar CounterDetails = (function () {\n    function CounterDetails(name, interval) {\n        var _this = this;\n        this.data = interval === undefined ? new BasicCounter() : new SlidingCounter(interval);\n        this.widget = new CounterWidget(name, this.data);\n        this.data.onChange = function () {\n            _this.widget.invalidate();\n        };\n    }\n    return CounterDetails;\n}());\nvar counterInstances = {};\n/**\n * Initialize profiler and insert into container.\n */\nfunction initProfiler(name, flags) {\n    if (flags === void 0) { flags = 0; }\n    checkInit();\n    var profiler = profilerInstances[name];\n    if (profiler === void 0) {\n        profilerInstances[name] = profiler = new ProfilerDetails(name, \"ms\", flags);\n        container.appendChild(profiler.widget.element);\n    }\n}\n/**\n * Initialize counter and insert into container.\n */\nfunction initCounter(name, interval) {\n    checkInit();\n    var counter = counterInstances[name];\n    if (counter === void 0) {\n        counterInstances[name] = counter = new CounterDetails(name, interval);\n        container.appendChild(counter.widget.element);\n    }\n}\nfunction startProfile(name) {\n    var profiler = profilerInstances[name];\n    if (profiler !== void 0) {\n        profiler.startTime = performance.now();\n    }\n}\nfunction endProfile(name) {\n    var now = performance.now();\n    var profiler = profilerInstances[name];\n    if (profiler !== void 0 && profiler.startTime !== -1) {\n        profiler.data.addSample(now - profiler.startTime);\n        profiler.widget.invalidate();\n    }\n}\nfunction count(name, value) {\n    if (value === void 0) { value = 1; }\n    var counter = counterInstances[name];\n    if (counter !== void 0) {\n        counter.data.inc(value);\n    }\n}\n/**\n * lookup a profile by name\n * @param name the name of the profile to lookup\n */\nfunction getProfile(name) {\n    return profilerInstances[name];\n}\n/**\n * lookup a counter by name\n * @param name the name of the counter to lookup\n */\nfunction getCounter(name) {\n    return counterInstances[name];\n}\n\nexport { initPerfMonitor, startFPSMonitor, startMemMonitor, ProfilerDetails, CounterDetails, initProfiler, initCounter, startProfile, endProfile, count, getProfile, getCounter, MonitorSamplesResult, MonitorMaxSamples, MonitorSamples, BasicCounter, SlidingCounter, Widget, MonitorWidgetFlags, MonitorWidget, CounterWidget };\n","export function queryClassName(elapsed) {\n    if (elapsed > 0) {\n        if (elapsed >= 10.0) {\n            return \"Query elapsed warn_long\";\n        }\n        else if (elapsed >= 1.0) {\n            return \"Query elapsed warn\";\n        }\n        return \"Query elapsed short\";\n    }\n    return \"\";\n}\nexport function countClassName(count) {\n    if (count >= 20) {\n        return \"label label-important\";\n    }\n    else if (count >= 10) {\n        return \"label label-warning\";\n    }\n    return \"label label-success\";\n}\n","import { startFPSMonitor, startMemMonitor, initProfiler } from \"perf-monitor\";\nlet mutations = 0.5;\nlet N = 50;\nexport function getMutations() {\n    return mutations;\n}\nexport function getN() {\n    return N;\n}\nfunction parseQueryString(a) {\n    if (a.length === 0) {\n        return {};\n    }\n    const b = {};\n    for (let i = 0; i < a.length; ++i) {\n        const p = a[i].split(\"=\", 2);\n        if (p.length === 1) {\n            b[p[0]] = \"\";\n        }\n        else {\n            b[p[0]] = decodeURIComponent(p[1].replace(/\\+/g, \" \"));\n        }\n    }\n    return b;\n}\nexport function init() {\n    const qs = parseQueryString(window.location.search.substr(1).split(\"&\"));\n    if (qs[\"n\"] !== void 0) {\n        N = parseInt(qs[\"n\"], 10);\n    }\n    if (qs[\"m\"] !== void 0) {\n        mutations = parseFloat(qs[\"m\"]);\n    }\n    document.addEventListener(\"DOMContentLoaded\", () => {\n        startFPSMonitor();\n        startMemMonitor();\n        initProfiler(\"view update\");\n        const sliderContainer = document.createElement(\"div\");\n        sliderContainer.style.display = \"flex\";\n        const slider = document.createElement(\"input\");\n        slider.type = \"range\";\n        slider.style.marginBottom = \"10px\";\n        slider.style.marginTop = \"5px\";\n        const text = document.createElement(\"label\");\n        text.textContent = \"mutations : \" + (mutations * 100).toFixed(0) + \"%\";\n        slider.addEventListener(\"change\", (e) => {\n            mutations = Number.parseFloat(e.target.value) / 100;\n            text.textContent = \"mutations : \" + (mutations * 100).toFixed(0) + \"%\";\n        });\n        sliderContainer.appendChild(text);\n        sliderContainer.appendChild(slider);\n        document.body.insertBefore(sliderContainer, document.body.firstChild);\n    });\n}\n","function randomQuery() {\n    const elapsed = Math.random() * 15;\n    let query;\n    if (Math.random() < 0.1) {\n        query = \"vacuum\";\n    }\n    else if (Math.random() < 0.2) {\n        query = \"<IDLE> in transaction\";\n    }\n    else {\n        query = \"SELECT blah FROM something\";\n    }\n    return { elapsed, query };\n}\nfunction randomQueries() {\n    const queries = [];\n    const r = Math.floor((Math.random() * 10) + 1);\n    for (let i = 0; i < r; i++) {\n        queries.push(randomQuery());\n    }\n    return queries;\n}\nconst EMPTY_QUERY = { elapsed: 0, query: \"***\" };\nlet _nextId = 0;\nfunction createDB(name, id) {\n    if (id === void 0) {\n        id = _nextId++;\n    }\n    return { id, name, queries: randomQueries() };\n}\nexport function getTopFiveQueries(db) {\n    const qs = db.queries.slice(0, 5);\n    qs.sort((a, b) => a.elapsed - b.elapsed);\n    while (qs.length < 5) {\n        qs.push(EMPTY_QUERY);\n    }\n    return qs;\n}\nexport function createState(n) {\n    const state = [];\n    for (let i = 0; i < n; i++) {\n        state.push(createDB(\"cluster\" + (i + 1)));\n        state.push(createDB(\"cluster\" + (i + 1) + \" slave\"));\n    }\n    return state;\n}\nexport function randomUpdate(state, r) {\n    for (let i = 0; i < state.length; i++) {\n        if (Math.random() < r) {\n            const { id, name } = state[i];\n            state[i] = createDB(name, id);\n        }\n    }\n}\nexport function entryFormatElapsed(v) {\n    if (v === 0) {\n        return \"\";\n    }\n    if (v > 60) {\n        const minutes = Math.floor(v / 60);\n        const comps = (v % 60).toFixed(2).split(\".\");\n        const seconds = comps[0];\n        const ms = comps[1];\n        return minutes + \":\" + seconds + \".\" + ms;\n    }\n    return v.toFixed(2);\n}\n","import { _, withNextFrame, render, TrackByKey, key } from \"ivi\";\nimport { div, span, table, tbody, tr, td } from \"ivi-html\";\nimport { startProfile, endProfile } from \"perf-monitor\";\nimport { queryClassName, countClassName } from \"./css\";\nimport { init, getN, getMutations } from \"./init\";\nimport { entryFormatElapsed, getTopFiveQueries, createState, randomUpdate } from \"./state\";\nconst arrow = div(\"arrow\");\nconst Popover = (query) => (div(\"popover left\", _, [\n    div(\"popover-content\", _, query),\n    arrow,\n]));\nconst Cell = ({ elapsed, query }) => (td(queryClassName(elapsed), _, [\n    entryFormatElapsed(elapsed),\n    Popover(query),\n]));\nfunction Row(db) {\n    const topFiveQueries = getTopFiveQueries(db);\n    const count = db.queries.length;\n    return tr(_, _, [\n        td(\"dbname\", _, db.name),\n        td(\"query-count\", _, span(countClassName(count), _, count)),\n        Cell(topFiveQueries[0]),\n        Cell(topFiveQueries[1]),\n        Cell(topFiveQueries[2]),\n        Cell(topFiveQueries[3]),\n        Cell(topFiveQueries[4]),\n    ]);\n}\nconst Main = (dbs) => (table(\"table table-striped latest-data\", _, tbody(_, _, TrackByKey(dbs.map((db) => key(db.id, Row(db)))))));\ninit();\nconst state = createState(getN());\nconst container = document.getElementById(\"app\");\nwithNextFrame(() => { render(Main(state), container); })();\nfunction tick() {\n    randomUpdate(state, getMutations());\n    startProfile(\"view update\");\n    withNextFrame(() => { render(Main(state), container); })();\n    endProfile(\"view update\");\n    requestAnimationFrame(tick);\n}\ntick();\n"],"sourceRoot":""}