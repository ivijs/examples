{"version":3,"sources":["node_modules/ivi/src/common/feature_detection.ts"," [synthetic:util/global] "," [synthetic:es6/util/inherits] "," [synthetic:util/defineproperty] "," [synthetic:es6/symbol] "," [synthetic:es6/util/makeiterator] "," [synthetic:es6/util/arrayfromiterator] "," [synthetic:util/polyfill] "," [synthetic:es6/promise] "," [synthetic:util/owns] "," [synthetic:es6/object/assign] "," [synthetic:es6/array/fill] "," [synthetic:es6/weakmap] "," [synthetic:es6/map] "," [synthetic:es6/string/repeat] "," [synthetic:util/checkstringargs] ","node_modules/ivi/src/common/user_agent.ts","node_modules/ivi/src/common/dom.ts","node_modules/ivi/src/common/noop.ts","node_modules/ivi/src/scheduler/clock.ts","node_modules/ivi/src/scheduler/task.ts","node_modules/ivi/src/scheduler/microtask.ts","node_modules/ivi/src/common/visibility.ts","node_modules/ivi/src/scheduler/frame_tasks_group.ts","node_modules/ivi/src/scheduler/dom_reader.ts","node_modules/ivi/src/vdom/vnode.ts","node_modules/ivi/src/vdom/vnode_builder.ts","src/playground/gesture-events/main.ts","node_modules/ivi/src/scheduler/frame.ts","node_modules/ivi/src/scheduler/animation.ts","node_modules/ivi/src/vdom/implementation.ts","node_modules/ivi/src/vdom/component.ts","node_modules/ivi/src/vdom/context.ts","node_modules/ivi/src/vdom/sync_dom.ts","node_modules/ivi/src/events/utils.ts","node_modules/ivi/src/events/sync_events.ts","node_modules/ivi/src/events/event_dispatcher.ts","node_modules/ivi/src/events/traverse_dom.ts","node_modules/ivi/src/events/dispatch_event.ts","node_modules/ivi/src/events/native_event_dispatcher.ts","node_modules/ivi/src/events/synthetic_event.ts","node_modules/ivi/src/events/events.ts","node_modules/ivi/src/vdom/root.ts","node_modules/ivi/src/ivi.ts"," [synthetic:es6/util/arrayfromiterable] "],"names":["$jscomp.global","$jscomp.defineProperty","$jscomp.initSymbol","$jscomp.global.Symbol","$jscomp.Symbol","$jscomp.symbolCounter_","$jscomp.SYMBOL_PREFIX","$jscomp.global.Symbol.iterator","$jscomp.arrayIterator","$jscomp.initSymbolIterator","$jscomp.iteratorPrototype","$jscomp.polyfill","$jscomp.makeIterator","$jscomp.owns","FEATURES","opts","Object","defineProperty","get","window","addEventListener","e","SVGElement","prototype","KeyboardEvent","ua","navigator","userAgent","USER_AGENT","test","indexOf","getEventTarget$$module$$build$playground$gesture_events","getEventTarget","ev","target","correspondingUseElement","nodeType","parentNode","setInnerHTML$$module$$build$playground$gesture_events","setInnerHTML","element","content","isSVG","innerHTML","innerHTMLSVGContainer","svg","document","createElement","firstChild","appendChild","NOOP$$module$$build$playground$gesture_events","NOOP","_clock","_pending$1","_tasks","TASK_MESSAGE","Math","random","handleWindowMessage","handleWindowMessage$$module$$build$playground$gesture_events","source","data","tasks","i","length","scheduleTask$$module$$build$playground$gesture_events","scheduleTask","task","postMessage","push","_pending","_microtasks","_microtaskNode","_microtaskToggle","microtaskObserver","MutationObserver","runMicrotasks","createTextNode","observe","characterData","runMicrotasksInPromise$$module$$build$playground$gesture_events","runMicrotasksInPromise","runMicrotasks$$module$$build$playground$gesture_events","_visible","_isHidden","_visibilityObservers","handleVisibilityChange$$module$$build$playground$gesture_events","handleVisibilityChange","newVisible","_isHidden$$module$$build$playground$gesture_events","hidden","constructor","FrameTasksGroup","_flags","_componentTasks","_afterTasks","_readTasks","_writeTasks","write","read","_readers","getDOMInstanceFromVNode$$module$$build$playground$gesture_events","getDOMInstanceFromVNode","node","_instance","root","_children","VNodeBuilder","flags","tag","props","className","children","_tag","_key","_props","_className","_events","_style","_ref","VNodeBuilder$$module$$build$playground$gesture_events.prototype","?.prototype","key","style","Array","isArray","n","result","slice","_normalizeVNodes","$t","value","checked","$t$$module$$build$playground$gesture_events","$h$$module$$build$playground$gesture_events","$h","tagName","undefined","$c$$module$$build$playground$gesture_events","$c","Box","c","render","_normalizeVNodes$$module$$build$playground$gesture_events","nodes","_pending$2","_currentFrameReady","_currentFrame","_nextFrame","_requestNextFrame$$module$$build$playground$gesture_events","_requestNextFrame","requestAnimationFrame","handleNextFrame","requestNextFrame$$module$$build$playground$gesture_events","requestNextFrame","Promise","resolve","then","nodeValue","handleNextFrame$$module$$build$playground$gesture_events","frame","_animatedComponents","reader","pop","componentGroups","componentGroup","j","_updateComponent","component","_animations","animation","nextFrame$$module$$build$playground$gesture_events","nextFrame","handleVisibilityChange$1$$module$$build$playground$gesture_events","visible","Component","context","owner","depth","_context","_parentContext","_parentDOMNode","invalidated","$jscomp.global.Object.defineProperties","Context","from","v","keys","l","k","ROOT_CONTEXT","syncClassName$$module$$build$playground$gesture_events","syncClassName","b","setAttribute","syncStyle$$module$$build$playground$gesture_events","syncStyle","a","matchCount","bValue","aValue","hasOwnProperty","setDOMProperty$$module$$build$playground$gesture_events","setDOMProperty","removeAttribute","charCodeAt","setAttributeNS","XML_NAMESPACE","XLINK_NAMESPACE","syncDOMProps$$module$$build$playground$gesture_events","syncDOMProps","EVENT_CAPTURE_PASSIVE_OPTIONS","EVENT_PASSIVE_OPTIONS","getEventOptions$$module$$build$playground$gesture_events","getEventOptions","syncEvents$$module$$build$playground$gesture_events","syncEvents","registerHandler","handler","dispatcher","unregisterHandler","aHandler","bHandler","events","_updateComponent$$module$$build$playground$gesture_events","oldRoot","componentUpdateContext","newRoot","componentClassRender","vNodeSyncOrReplace","vNodePropagateNewContext","_updateComponentFunction$$module$$build$playground$gesture_events","_updateComponentFunction","parent","fn","instance","vNodeAttach$$module$$build$playground$gesture_events","vNodeAttach","vnode","vNodeDetach$$module$$build$playground$gesture_events","vNodeDetach","vNodeDetachAll$$module$$build$playground$gesture_events","vNodeDetachAll","vnodes","vNodePropagateNewContext$$module$$build$playground$gesture_events","vNodeRemoveChild$$module$$build$playground$gesture_events","vNodeRemoveChild","removeChild","componentUpdateContext$$module$$build$playground$gesture_events","componentClassRender$$module$$build$playground$gesture_events","vNodeRender$$module$$build$playground$gesture_events","vNodeRender","child","type","createElementNS","SVG_NAMESPACE","textContent","childInstance","insertBefore","input","vNodeRenderInto$$module$$build$playground$gesture_events","vNodeRenderInto","container","refChild","vNodeCanSync$$module$$build$playground$gesture_events","vNodeCanSync","vNodeSync$$module$$build$playground$gesture_events","vNodeSync","bParentFlags","aParentFlags","aStart","bStart","aEnd","bEnd","aStartNode","bStartNode","aEndNode","bEndNode","aNode","bNode","nextRef","nextPos","next","aLength","bLength","sources","fill","moved","pos","synced","keyIndex","Map","set","p","il","u","newProps","vNodeSyncOrReplace$$module$$build$playground$gesture_events","newInstance","replaceChild","EventDispatcherSubscription","filter","_next","_prev","cancel","unsubscribe","unsubscribe$$module$$build$playground$gesture_events","sub","_nextSubscription","counter","deactivate","EventDispatcher","dispatchEventToSubscribers","event","s","tmp","activate","subscribe","accumulateDispatchTargets$$module$$build$playground$gesture_events","accumulateDispatchTargets","matches","handlers","parentElement","dispatchEventToLocalEventHandlers$$module$$build$playground$gesture_events","dispatchEventToLocalEventHandlers","dispatchTarget","matchFlags","currentTarget","dispatchEvent$$module$$build$playground$gesture_events","dispatchEvent","dispatchTargets","bubble","NativeEventDispatcher","name","eventType","_dispatch","dispatchNativeEvent","bind","_deactivating","$jscomp.inherits","timeStamp","preventDefault","removeEventListener","SyntheticEvent","_data","stopPropagation","stopImmediatePropagation","defaultPrevented","bubbles","cancelable","isTrusted","eventPhase","CAPTURING_PHASE","AT_TARGET","BUBBLING_PHASE","SyntheticUIEvent","detail","view","SyntheticMouseEvent","getModifierState","keyArg","altKey","button","buttons","clientX","clientY","ctrlKey","fromElement","layerX","layerY","metaKey","movementX","movementY","offsetX","offsetY","pageX","pageY","relatedTarget","screenX","screenY","shiftKey","toElement","which","x","y","SyntheticTouchEvent","changedTouches","targetTouches","touches","click","mousedown","mouseup","touchend","touchstart","ROOTS","findRoot$$module$$build$playground$gesture_events","findRoot","r","SyntheticGestureTapEvent","GestureEventDispatcher","arguments","$jscomp.arrayFromIterator","onClickSub","onMouseUpSub","onMouseDownSub","onTouchEndSub","onTouchStartSub","onTouchStart","this.onTouchStart","NativeEventDispatchers$$module$$build$playground$gesture_events.touchend.subscribe","onTouchEnd","onMouseDown","this.onMouseDown","NativeEventDispatchers$$module$$build$playground$gesture_events.mouseup.subscribe","onMouseUp","this.onTouchEnd","emit","this.onMouseUp","onClick","this.onClick","subs","Date","now","NativeEventDispatchers$$module$$build$playground$gesture_events.mousedown.subscribe","NativeEventDispatchers$$module$$build$playground$gesture_events.touchstart.subscribe","NativeEventDispatchers$$module$$build$playground$gesture_events.click.subscribe","gesture","clickCounter","onGesture","GestureEventDispatchers$$module$$build$playground$gesture_events.gesture","invalidate","dirtyFlags","updateComponent","priority","group","renderNextFrame$$module$$build$playground$gesture_events","newVNode","newContext","currentVNode","domNode","onclick","last","getElementById"],"mappings":"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","file":"bundle.js","sourceRoot":"../../..","sourcesContent":["/**\n * Feature Detection is used to implement polyfills or just disable some features when browser doesn't support them.\n * For example, when browser doesn't support passive events, we can just ignore it and always use active events.\n *\n * NOTE: Do not implement feature detection for features that aren't used in `ivi` library.\n */\n\n/**\n * Feature Flags.\n */\nexport const enum FeatureFlags {\n    /**\n     * Passive event listeners are a new feature in the DOM spec that enable developers to opt-in to better scroll\n     * performance by eliminating the need for scrolling to block on touch and wheel event listeners. Developers can\n     * annotate touch and wheel listeners with {passive: true} to indicate that they will never invoke preventDefault.\n     *\n     * https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n     */\n    PassiveEvents = 1,\n    /**\n     * The `performancemark()` method creates a timestamp in the browser's performance entry buffer with the given\n     * name.\n     *\n     * https://developer.mozilla.org/en-US/docs/Web/API/Performance/mark\n     */\n    DevModePerfMarks = 1 << 1,\n    /**\n     * IE and some Edge versions doesn't support `innerHTML` on SVG elements.\n     */\n    SVGInnerHTML = 1 << 2,\n    /**\n     * `key` property on KeyboardEvent instances.\n     */\n    KeyboardEventKey = 1 << 3,\n    /**\n     * Browser supports native promises.\n     *\n     * IE11 and Android 4.4 doesn't support native promises.\n     */\n    // NativePromise = 1 << 4,\n}\n\n/**\n * Supported Features, see `FeatureFlags` for details.\n */\nexport let FEATURES: FeatureFlags = 0;\n\nif (__IVI_BROWSER__) {\n    /**\n     * Passive Events:\n     *\n     * https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n     */\n    try {\n        // Test via a getter in the options object to see if the passive property is accessed\n        const opts = Object.defineProperty({}, \"passive\", {\n            get: function () {\n                FEATURES |= FeatureFlags.PassiveEvents;\n            },\n        });\n        window.addEventListener(\"test\", null as any as (ev: Event) => void, opts);\n    } catch (e) {\n        /* tslint:disable:no-empty */\n        /* tslint:enable:no-empty */\n    }\n\n    /**\n     * Check `performance.mark` availability.\n     */\n    if (__IVI_DEV__) {\n        if (performance && performance.mark && performance.measure) {\n            FEATURES |= FeatureFlags.DevModePerfMarks;\n        }\n    }\n\n    /**\n     * Check `innerHTML` availability in `SVGElement`s.\n     */\n    if (\"innerHTML\" in SVGElement.prototype) {\n        FEATURES |= FeatureFlags.SVGInnerHTML;\n    }\n\n    /**\n     * Check `key` availability in `KeyboardEvent`s.\n     */\n    if (\"key\" in KeyboardEvent.prototype) {\n        FEATURES |= FeatureFlags.KeyboardEventKey;\n    }\n\n    /**\n     * Check native `Promise` availability.\n     */\n    // if (typeof Promise !== \"undefined\" && Promise.toString().indexOf(\"native code\") > -1) {\n    //     FEATURES |= FeatureFlags.NativePromise;\n    // }\n}\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"/**\n * User Agent detection is used to fix some quirks like iOS event bubbling, etc.\n *\n * NOTE: Do not implement any browser detection that aren't used in `ivi` library.\n */\n\nconst ua = __IVI_BROWSER__ && navigator ? navigator.userAgent : \"\";\n\n/**\n * User Agent Flags.\n */\nexport const enum UserAgentFlags {\n    /**\n     * iOS browser (iPad, iPhone, iPod).\n     */\n    iOS = 1,\n    /**\n     * iOS full screen mode.\n     */\n    iOSStandalone = 1 << 1,\n    /**\n     * Android browser.\n     */\n    Android = 1 << 2,\n};\n\n/**\n * User Agent, see `UserAgentFlags` for details.\n */\nexport let USER_AGENT: UserAgentFlags = 0;\n\nif (__IVI_BROWSER__) {\n    if (/iPad|iPhone|iPod/.test(ua) && !(\"MSStream\" in window)) {\n        USER_AGENT |= (\"standalone\" in navigator) ?\n            UserAgentFlags.iOS | UserAgentFlags.iOSStandalone :\n            UserAgentFlags.iOS;\n    }\n\n    if (ua.indexOf(\"Android\") > -1) {\n        USER_AGENT |= UserAgentFlags.Android;\n    }\n}\n","/**\n * Miscellaneous DOM related stuff.\n */\nimport { FeatureFlags, FEATURES } from \"./feature_detection\";\n\nexport const SVG_NAMESPACE = \"http://www.w3.org/2000/svg\";\nexport const XLINK_NAMESPACE = \"http://www.w3.org/1999/xlink\";\nexport const XML_NAMESPACE = \"http://www.w3.org/XML/1998/namespace\";\n\n/**\n * KeyboardEvent keyCode values.\n */\nexport const enum KeyCode {\n    WinKeyFFLinux = 0,\n    MacEnter = 3,\n    Backspace = 8,\n    Tab = 9,\n    NumCenter = 12, // FF and Safari on Mac: NumCenter === NumLock\n    Enter = 13,\n    Shift = 16,\n    Ctrl = 17,\n    Alt = 18,\n    Pause = 19,\n    CapsLock = 20,\n    Esc = 27,\n    Space = 32,\n    PageUp = 33,\n    PageDown = 34,\n    End = 35,\n    Home = 36,\n    Left = 37,\n    Up = 38,\n    Right = 39,\n    Down = 40,\n    NumNorthEast = 33,\n    NumSouthEast = 34,\n    NumSouthWest = 35,\n    NumNorthWest = 36,\n    NumWest = 37,\n    NumNorth = 38,\n    NumEast = 39,\n    NumSouth = 40,\n    PrintScreen = 44,\n    Insert = 45,\n    NumInsert = 45,\n    Delete = 46,\n    NumDelete = 46,\n    Zero = 48,\n    Ono = 49,\n    Two = 50,\n    Three = 51,\n    Four = 52,\n    Five = 53,\n    Six = 54,\n    Seven = 55,\n    Eight = 56,\n    Nine = 57,\n    FFSemicolon = 59,\n    FFEquals = 61,\n    /**\n     * US keyboard layouts only.\n     */\n    QuestionMark = 63,\n    A = 65,\n    B = 66,\n    C = 67,\n    D = 68,\n    E = 69,\n    F = 70,\n    G = 71,\n    H = 72,\n    I = 73,\n    J = 74,\n    K = 75,\n    L = 76,\n    M = 77,\n    N = 78,\n    O = 79,\n    P = 80,\n    Q = 81,\n    R = 82,\n    S = 83,\n    T = 84,\n    U = 85,\n    V = 86,\n    W = 87,\n    X = 88,\n    Y = 89,\n    Z = 90,\n    Meta = 91,\n    WinKeyLeft = 91,\n    WinKeyRight = 92,\n    ContextMenu = 93,\n    NumZero = 96,\n    NumOne = 97,\n    NumTwo = 98,\n    NumThree = 99,\n    NumFour = 100,\n    NumFive = 101,\n    NumSix = 102,\n    NumSeven = 103,\n    NumEight = 104,\n    NumNine = 105,\n    NumMultiply = 106,\n    NumPlus = 107,\n    NumMinus = 109,\n    NumPeriod = 110,\n    NumDivision = 111,\n    F1 = 112,\n    F2 = 113,\n    F3 = 114,\n    F4 = 115,\n    F5 = 116,\n    F6 = 117,\n    F7 = 118,\n    F8 = 119,\n    F9 = 120,\n    F10 = 121,\n    F11 = 122,\n    F12 = 123,\n    NumLock = 144,\n    ScrollLock = 145,\n    /**\n     * First OS specific media key.\n     */\n    FirstMediaKey = 166,\n    /**\n     * Last OS specific media key.\n     */\n    LastMediaKey = 183,\n    /**\n     * US keyboard layouts only.\n     */\n    Semicolon = 186,\n    /**\n     * US keyboard layouts only.\n     */\n    Dash = 189,\n    /**\n     * US keyboard layouts only.\n     */\n    Equals = 187,\n    /**\n     * US keyboard layouts only.\n     */\n    Comma = 188,\n    /**\n     * US keyboard layouts only.\n     */\n    Period = 190,\n    /**\n     * US keyboard layouts only.\n     */\n    Slash = 191,\n    /**\n     * US keyboard layouts only.\n     */\n    Apostrophe = 192,\n    /**\n     * US keyboard layouts only.\n     */\n    Tilde = 192,\n    /**\n     * US keyboard layouts only.\n     */\n    SingleQuote = 222,\n    /**\n     * US keyboard layouts only.\n     */\n    OpenSquareBracket = 219,\n    /**\n     * US keyboard layouts only.\n     */\n    Backslash = 220,\n    /**\n     * US keyboard layouts only.\n     */\n    CloseSquareBracket = 221,\n    WinKey = 224,\n    MacFFMeta = 224,\n    WinIME = 229,\n}\n\n/**\n * KeyboardEvent keyLocation values.\n */\nexport const enum KeyLocation {\n    Standard = 0,\n    Left = 1,\n    Right = 2,\n    NumPad = 3,\n    Mobile = 4,\n    Joystick = 5,\n}\n\n/**\n * Flags for MouseEvent buttons property.\n *\n * Buttons property aren't widely supported by all major browsers at this time, and there is no easy way to polyfill\n * it.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons\n */\nexport const enum MouseButtons {\n    Left = 1,\n    Right = 1 << 1,\n    /**\n     * Wheel or middle button.\n     */\n    Middle = 1 << 2,\n    /**\n     * Typically the \"Browser Back\" button.\n     */\n    Fourh = 1 << 3,\n    /**\n     * Typically the \"Browser Forward\" button.\n     */\n    Fifth = 1 << 4,\n}\n\n/**\n * Gets target element from an Event.\n *\n * There are still some differences in modern browsers, so we need to get event targets with this function.\n *\n * #quirks\n *\n * @param ev Event.\n * @returns Target Element.\n */\nexport function getEventTarget(ev: Event): EventTarget {\n    let target = ev.target || window;\n\n    /**\n     * Some browsers are implementing it according to SVG 1.1 specs:\n     *\n     * https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/7998724/\n     *\n     * \"If event attributes are assigned to referenced elements, then the actual target for the event will be the\n     * SVGElementInstance object within the 'instance tree' corresponding to the given referenced element.\"\n     *\n     * https://www.w3.org/TR/SVG/struct.html#UseElement\n     *\n     * SVG 2 redefined the use event handling model:\n     *\n     * - Removed the SVGElementInstance and SVGElementInstanceList interfaces, and the corresponding attributes on the\n     *   SVGUseElement interface.\n     * - Changed the ‘use’ element event flow to follow the Shadow DOM spec.\n     *\n     * https://www.w3.org/TR/SVG2/changes.html#structure\n     */\n    if ((target as any).correspondingUseElement) {\n        target = (target as any).correspondingUseElement;\n    }\n\n    /**\n     * Safari fires events on Text Nodes.\n     *\n     * http://www.quirksmode.org/js/events_properties.html\n     */\n    return (target as Node).nodeType === 3 ? (target as Node).parentNode! : target;\n}\n\nconst KEY_CODE_TO_KEY: { [key: number]: string } = {\n    8: \"Backspace\",\n    9: \"Tab\",\n    12: \"Clear\",\n    13: \"Enter\",\n    16: \"Shift\",\n    17: \"Control\",\n    18: \"Alt\",\n    19: \"Pause\",\n    20: \"CapsLock\",\n    27: \"Escape\",\n    32: \" \",\n    33: \"PageUp\",\n    34: \"PageDown\",\n    35: \"End\",\n    36: \"Home\",\n    37: \"ArrowLeft\",\n    38: \"ArrowUp\",\n    39: \"ArrowRight\",\n    40: \"ArrowDown\",\n    44: \"PrintScreen\",\n    45: \"Insert\",\n    46: \"Delete\",\n    91: \"Meta\",\n    112: \"F1\",\n    113: \"F2\",\n    114: \"F3\",\n    115: \"F4\",\n    116: \"F5\",\n    117: \"F6\",\n    118: \"F7\",\n    119: \"F8\",\n    120: \"F9\",\n    121: \"F10\",\n    122: \"F11\",\n    123: \"F12\",\n    144: \"NumLock\",\n    145: \"ScrollLock\",\n    224: \"Win\",\n};\n\n/**\n * Gets a `charCode` from a KeyboardEvent.\n *\n * #quirks\n *\n * @param ev Keyboard Event\n * @returns A char code.\n */\nexport function getEventCharCode(ev: KeyboardEvent): number {\n    const keyCode = ev.keyCode;\n    let charCode = ev.charCode;\n\n    if (charCode === 0 && keyCode === 13) {\n        charCode = 13;\n    }\n\n    if (charCode >= 32 || charCode === 13) {\n        return charCode;\n    }\n\n    return 0;\n}\n\n/**\n * Gets a `key` from a KeybordEvent.\n *\n * #quirks\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key\n *\n * @param ev Keyboard Event.\n * @returns A `key` property.\n */\nexport function getEventKey(ev: KeyboardEvent): string {\n    if (ev.type === \"keypress\") {\n        const charCode = getEventCharCode(ev);\n        if (charCode === 13) {\n            return \"Enter\";\n        }\n        return String.fromCharCode(charCode);\n    } else if (ev.type === \"keydown\" || ev.type === \"keyup\") {\n        const key = KEY_CODE_TO_KEY[ev.keyCode];\n        if (key !== undefined) {\n            return key;\n        }\n    }\n\n    return \"Unidentified\";\n}\n\n/**\n * Set inner HTML.\n *\n * #quirks\n *\n * @param element DOM Element.\n * @param content Inner HTML content.\n * @param isSVG Element is SVG.\n */\nexport function setInnerHTML(element: Element, content: string, isSVG: boolean): void {\n    // #msapp\n    //\n    // innerHTML should be invoked inside an unsafe context `MSApp.execUnsafeLocalFunction`\n    // All details here: https://msdn.microsoft.com/en-us/library/windows/apps/hh767331.aspx\n\n    // Doesn't work on SVG Elements in IE. Latest Edge versions are working fine.\n    if (!isSVG || FEATURES & FeatureFlags.SVGInnerHTML) {\n        element.innerHTML = content;\n    } else {\n        setInnerSVG(element as SVGElement, content);\n    }\n}\n\n/**\n * Container for SVG Elements.\n *\n * #quirks\n */\nlet innerHTMLSVGContainer: HTMLDivElement | undefined;\n\n/**\n * Set innerHTML on SVG elements in browsers that doesn't support innerHTML on SVG elements.\n *\n * #quirks\n *\n * @param element SVG element.\n * @param content Inner HTML content.\n */\nfunction setInnerSVG(element: SVGElement, content: string): void {\n    if (!innerHTMLSVGContainer) {\n        innerHTMLSVGContainer = document.createElement(\"div\");\n    }\n    innerHTMLSVGContainer.innerHTML = `<svg>${content}</svg>`;\n    const svg = innerHTMLSVGContainer.firstChild;\n    while (svg.firstChild) {\n        element.appendChild(svg.firstChild);\n    }\n}\n\n/**\n * Traverses the DOM to the top and calculates DOM Node depth.\n *\n * @param node DOM Node.\n * @returns DOM Node depth.\n */\nexport function nodeDepth(node: Node | null): number {\n    let depth = 0;\n    while (node) {\n        depth++;\n        node = node.parentNode;\n    }\n    return depth;\n}\n\n/**\n * Finds a first leaf node.\n *\n * @param node DOM Node.\n * @return A leaf node.\n */\nexport function firstLeaf(node: Node): Node {\n    while (node && node.firstChild) {\n        node = node.firstChild;\n    }\n    return node;\n}\n\n/**\n * Finds a next sibling node.\n *\n * @param node DOM Node.\n * @return Next sibling.\n */\nexport function nextSibling(node: Node): Node | null {\n    while (node) {\n        if (node.nextSibling) {\n            return node.nextSibling;\n        }\n        node = node.parentNode;\n    }\n    return null;\n}\n\nexport type HTMLTagType =\n    \"a\" |\n    \"abbr\" |\n    \"acronym\" |\n    \"address\" |\n    \"applet\" |\n    \"area\" |\n    \"article\" |\n    \"aside\" |\n    \"b\" |\n    \"base\" |\n    \"basefont\" |\n    \"bdo\" |\n    \"big\" |\n    \"blockquote\" |\n    \"body\" |\n    \"br\" |\n    \"button\" |\n    \"canvas\" |\n    \"caption\" |\n    \"center\" |\n    \"cite\" |\n    \"code\" |\n    \"col\" |\n    \"colgroup\" |\n    \"datalist\" |\n    \"dd\" |\n    \"del\" |\n    \"dfn\" |\n    \"dir\" |\n    \"div\" |\n    \"dl\" |\n    \"dt\" |\n    \"em\" |\n    \"embed\" |\n    \"fieldset\" |\n    \"figcaption\" |\n    \"figure\" |\n    \"font\" |\n    \"footer\" |\n    \"form\" |\n    \"frame\" |\n    \"frameset\" |\n    \"h1\" |\n    \"h2\" |\n    \"h3\" |\n    \"h4\" |\n    \"h5\" |\n    \"h6\" |\n    \"head\" |\n    \"header\" |\n    \"hgroup\" |\n    \"hr\" |\n    \"html\" |\n    \"i\" |\n    \"iframe\" |\n    \"img\" |\n    \"ins\" |\n    \"isindex\" |\n    \"kbd\" |\n    \"keygen\" |\n    \"label\" |\n    \"legend\" |\n    \"li\" |\n    \"link\" |\n    \"listing\" |\n    \"map\" |\n    \"mark\" |\n    \"marquee\" |\n    \"menu\" |\n    \"meta\" |\n    \"meter\" |\n    \"nav\" |\n    \"nextid\" |\n    \"nobr\" |\n    \"noframes\" |\n    \"noscript\" |\n    \"object\" |\n    \"ol\" |\n    \"optgroup\" |\n    \"option\" |\n    \"p\" |\n    \"param\" |\n    \"picture\" |\n    \"plaintext\" |\n    \"pre\" |\n    \"progress\" |\n    \"q\" |\n    \"rt\" |\n    \"ruby\" |\n    \"s\" |\n    \"samp\" |\n    \"script\" |\n    \"section\" |\n    \"select\" |\n    \"small\" |\n    \"source\" |\n    \"span\" |\n    \"strike\" |\n    \"strong\" |\n    \"style\" |\n    \"sub\" |\n    \"sup\" |\n    \"table\" |\n    \"tbody\" |\n    \"td\" |\n    \"template\" |\n    \"textarea\" |\n    \"tfoot\" |\n    \"th\" |\n    \"thead\" |\n    \"title\" |\n    \"tr\" |\n    \"track\" |\n    \"tt\" |\n    \"u\" |\n    \"ul\" |\n    \"var\" |\n    \"wbr\" |\n    \"x-ms-webview\" |\n    \"xmp\";\n\nexport type SVGTagType =\n    \"circle\" |\n    \"clippath\" |\n    \"defs\" |\n    \"desc\" |\n    \"ellipse\" |\n    \"feblend\" |\n    \"fecolormatrix\" |\n    \"fecomponenttransfer\" |\n    \"fecomposite\" |\n    \"feconvolvematrix\" |\n    \"fediffuselighting\" |\n    \"fedisplacementmap\" |\n    \"fedistantlight\" |\n    \"feflood\" |\n    \"fefunca\" |\n    \"fefuncb\" |\n    \"fefuncg\" |\n    \"fefuncr\" |\n    \"fegaussianblur\" |\n    \"feimage\" |\n    \"femerge\" |\n    \"femergenode\" |\n    \"femorphology\" |\n    \"feoffset\" |\n    \"fepointlight\" |\n    \"fespecularlighting\" |\n    \"fespotlight\" |\n    \"fetile\" |\n    \"feturbulence\" |\n    \"filter\" |\n    \"foreignobject\" |\n    \"g\" |\n    \"image\" |\n    \"line\" |\n    \"lineargradient\" |\n    \"marker\" |\n    \"mask\" |\n    \"metadata\" |\n    \"path\" |\n    \"pattern\" |\n    \"polygon\" |\n    \"polyline\" |\n    \"radialgradient\" |\n    \"rect\" |\n    \"stop\" |\n    \"svg\" |\n    \"switch\" |\n    \"symbol\" |\n    \"text\" |\n    \"textpath\" |\n    \"tspan\" |\n    \"use\" |\n    \"view\";\n\nexport type MediaTagType =\n    \"audio\" |\n    \"video\";\n\nexport type InputType =\n    \"textarea\" | // not a real input type, just one exception for textarea elements\n    \"button\" |\n    \"checkbox\" |\n    \"color\" |\n    \"date\" |\n    \"datetime\" |\n    \"datetime-local\" |\n    \"email\" |\n    \"file\" |\n    \"hidden\" |\n    \"image\" |\n    \"month\" |\n    \"number\" |\n    \"password\" |\n    \"radio\" |\n    \"range\" |\n    \"reset\" |\n    \"search\" |\n    \"submit\" |\n    \"tel\" |\n    \"text\" |\n    \"time\" |\n    \"url\" |\n    \"week\";\n\nexport type KeyName =\n    \"Accept\" |\n    \"Add\" |\n    \"Again\" |\n    \"AllCandidates\" |\n    \"Alphanumeric\" |\n    \"Alt\" |\n    \"AltGraph\" |\n    \"Apps\" |\n    \"Attn\" |\n    \"BrowserBack\" |\n    \"BrowserFavorites\" |\n    \"BrowserForward\" |\n    \"BrowserHome\" |\n    \"BrowserRefresh\" |\n    \"BrowserSearch\" |\n    \"BrowserStop\" |\n    \"Camera\" |\n    \"CapsLock\" |\n    \"Clear\" |\n    \"CodeInput\" |\n    \"Compose\" |\n    \"Control\" |\n    \"Crsel\" |\n    \"Convert\" |\n    \"Copy\" |\n    \"Cut\" |\n    \"Decimal\" |\n    \"Divide\" |\n    \"Down\" |\n    \"DownLeft\" |\n    \"DownRight\" |\n    \"Eject\" |\n    \"End\" |\n    \"Enter\" |\n    \"EraseEof\" |\n    \"Execute\" |\n    \"Exsel\" |\n    \"Fn\" |\n    \"F1\" |\n    \"F2\" |\n    \"F3\" |\n    \"F4\" |\n    \"F5\" |\n    \"F6\" |\n    \"F7\" |\n    \"F8\" |\n    \"F9\" |\n    \"F10\" |\n    \"F11\" |\n    \"F12\" |\n    \"F13\" |\n    \"F14\" |\n    \"F15\" |\n    \"F16\" |\n    \"F17\" |\n    \"F18\" |\n    \"F19\" |\n    \"F20\" |\n    \"F21\" |\n    \"F22\" |\n    \"F23\" |\n    \"F24\" |\n    \"FinalMode\" |\n    \"Find\" |\n    \"FullWidth\" |\n    \"HalfWidth\" |\n    \"HangulMode\" |\n    \"HanjaMode\" |\n    \"Help\" |\n    \"Hiragana\" |\n    \"Home\" |\n    \"Insert\" |\n    \"JapaneseHiragana\" |\n    \"JapaneseKatakana\" |\n    \"JapaneseRomaji\" |\n    \"JunjaMode\" |\n    \"KanaMode\" |\n    \"KanjiMode\" |\n    \"Katakana\" |\n    \"LaunchApplication1\" |\n    \"LaunchApplication2\" |\n    \"LaunchMail\" |\n    \"Left\" |\n    \"Menu\" |\n    \"Meta\" |\n    \"MediaNextTrack\" |\n    \"MediaPlayPause\" |\n    \"MediaPreviousTrack\" |\n    \"MediaStop\" |\n    \"ModeChange\" |\n    \"NextCandidate\" |\n    \"Nonconvert\" |\n    \"NumLock\" |\n    \"PageDown\" |\n    \"PageUp\" |\n    \"Paste\" |\n    \"Pause\" |\n    \"Play\" |\n    \"Power\" |\n    \"PreviousCandidate\" |\n    \"PrintScreen\" |\n    \"Process\" |\n    \"Props\" |\n    \"Right\" |\n    \"RomanCharacters\" |\n    \"Scroll\" |\n    \"Select\" |\n    \"SelectMedia\" |\n    \"Separator\" |\n    \"Shift\" |\n    \"Soft1\" |\n    \"Soft2\" |\n    \"Soft3\" |\n    \"Soft4\" |\n    \"Stop\" |\n    \"Subtract\" |\n    \"SymbolLock\" |\n    \"Up\" |\n    \"UpLeft\" |\n    \"UpRight\" |\n    \"Undo\" |\n    \"VolumeDown\" |\n    \"VolumeMute\" |\n    \"VolumeUp\" |\n    \"Win\" |\n    \"Zoom\" |\n    \"Backspace\" |\n    \"Tab\" |\n    \"Cancel\" |\n    \"Esc\" |\n    \"Spacebar\" |\n    \"Del\" |\n    \"DeadGrave\" |\n    \"DeadEacute\" |\n    \"DeadCircumflex\" |\n    \"DeadTilde\" |\n    \"DeadMacron\" |\n    \"DeadBreve\" |\n    \"DeadAboveDot\" |\n    \"DeadUmlaut\" |\n    \"DeadAboveRing\" |\n    \"DeadDoubleacute\" |\n    \"DeadCaron\" |\n    \"DeadCedilla\" |\n    \"DeadOgonek\" |\n    \"DeadIota\" |\n    \"DeadVoicedSound\" |\n    \"DeadSemivoicedSound\" |\n    \"Unidentified\";\n","\n/**\n * NOOP function.\n */\nexport function NOOP() {\n    /* tslint:disable:no-empty */\n    /* tslint:enable:no-empty */\n}\n\n/**\n * NOOP function that always returns `false` value.\n *\n * @returns `false` value.\n */\nexport function NOOP_FALSE(): boolean {\n    return false;\n}\n","\nlet _clock = 0;\n\n/**\n * Monotonically increasing clock.\n *\n * @returns current clock value.\n */\nexport function clock(): number {\n    return _clock;\n}\n\nexport function incrementClock(): void {\n    _clock++;\n}\n","import { incrementClock } from \"./clock\";\n\nlet _pending = false;\nlet _tasks: (() => void)[] = [];\n\nconst TASK_MESSAGE = __IVI_BROWSER__ ? \"__ivi\" + Math.random() : undefined;\n\nif (__IVI_BROWSER__) {\n    // Task scheduler based on postMessage\n    window.addEventListener(\"message\", handleWindowMessage);\n}\n\n/**\n * Task scheduler event handler.\n *\n * @param ev Message event.\n */\nfunction handleWindowMessage(ev: MessageEvent): void {\n    if (ev.source === window && ev.data === TASK_MESSAGE) {\n        runTasks();\n    }\n}\n\nfunction runTasks(): void {\n    _pending = false;\n\n    let tasks = _tasks;\n    _tasks = [];\n    for (let i = 0; i < tasks.length; i++) {\n        tasks[i]();\n    }\n\n    incrementClock();\n}\n\n/**\n * Trigger tasks execution.\n */\nfunction requestTaskExecution(): void {\n    if (!_pending) {\n        _pending = true;\n        if (__IVI_BROWSER__) {\n            window.postMessage(TASK_MESSAGE, \"*\");\n        } else {\n            setImmediate(runTasks);\n        }\n    }\n}\n\n/**\n * Add task to the task queue.\n *\n * @param task\n */\nexport function scheduleTask(task: () => void): void {\n    requestTaskExecution();\n    _tasks.push(task);\n}\n","import { USER_AGENT, UserAgentFlags } from \"../common/user_agent\";\nimport { NOOP } from \"../common/noop\";\nimport { incrementClock } from \"./clock\";\nimport { scheduleTask } from \"./task\";\n\nlet _pending = false;\nlet _microtasks: (() => void)[] = [];\nlet _microtaskNode: Text;\nlet _microtaskToggle = 0;\n\nif (__IVI_BROWSER__) {\n    if (!(USER_AGENT & UserAgentFlags.iOSStandalone)) {\n        const microtaskObserver = new MutationObserver(runMicrotasks);\n        _microtaskNode = document.createTextNode(\"\");\n        microtaskObserver.observe(_microtaskNode, { characterData: true });\n    }\n}\n\nfunction runMicrotasksInPromise(): void {\n    runMicrotasks();\n    /**\n     * #quirks\n     *\n     * Flush microtask queue.\n     * - iOS 8.3+\n     * - UIWebView 9.3.3+\n     *\n     * This function is running only on this browsers, so there is no need for an additional check.\n     */\n    scheduleTask(NOOP);\n}\n\nfunction runMicrotasks(): void {\n    while (_microtasks.length > 0) {\n        const tasks = _microtasks;\n        _microtasks = [];\n        for (let i = 0; i < tasks.length; i++) {\n            tasks[i]();\n        }\n        incrementClock();\n    }\n\n    _pending = false;\n}\n\n/**\n * Trigger microtasks execution.\n */\nfunction requestMicrotaskExecution(): void {\n    if (!_pending) {\n        _pending = true;\n        if (__IVI_BROWSER__) {\n            /**\n             * #quirks\n             *\n             * Following browsers have problems with microtasks implementation based on `MutationObserver`:\n             * - iOS 8.3+(full screen mode `navigator.standalone`)\n             * - UIWebView 9.3.3+\n             *\n             * Mutation events do not fire when code is executed in touch event context.\n             */\n            if (USER_AGENT & UserAgentFlags.iOSStandalone) {\n                Promise.resolve().then(runMicrotasksInPromise);\n            } else {\n                _microtaskToggle ^= 1;\n                _microtaskNode.nodeValue = _microtaskToggle ? \"1\" : \"0\";\n            }\n        } else {\n            process.nextTick(runMicrotasks);\n        }\n    }\n}\n\n/**\n * Add task to the microtask queue.\n *\n * @param task\n */\nexport function scheduleMicrotask(task: () => void): void {\n    requestMicrotaskExecution();\n    _microtasks.push(task);\n}\n","\nimport { scheduleMicrotask } from \"../scheduler/microtask\";\n\nlet _visible = true;\nlet _isHidden: () => boolean;\nlet _visibilityObservers: ((visible: boolean) => void)[] | undefined = (__IVI_BROWSER__) ? [] : undefined;\nlet _lock = false;\n\nexport function isVisible(): boolean {\n    if (__IVI_BROWSER__) {\n        return _visible;\n    }\n    return false;\n}\n\nexport function addVisibilityObserver(observer: (visible: boolean) => void): void {\n    if (__IVI_BROWSER__) {\n        _visibilityObservers!.push(observer);\n    }\n}\n\nexport function removeVisibilityObserver(observer: (visible: boolean) => void): void {\n    if (__IVI_BROWSER__) {\n        if (_lock) {\n            scheduleMicrotask(function () {\n                removeVisibilityObserver(observer);\n            });\n        } else {\n            const index = _visibilityObservers!.indexOf(observer);\n            if (index > -1) {\n                if (index === _visibilityObservers!.length) {\n                    _visibilityObservers!.pop();\n                } else {\n                    _visibilityObservers![index] = _visibilityObservers!.pop() !;\n                }\n            }\n        }\n    }\n}\n\nfunction handleVisibilityChange(): void {\n    const newVisible = !_isHidden();\n    if (_visible !== newVisible) {\n        _lock = true;\n        for (let i = 0; i < _visibilityObservers!.length; i++) {\n            _visibilityObservers![i](newVisible);\n        }\n        _lock = false;\n    }\n}\n\nif (__IVI_BROWSER__) {\n    if (typeof document[\"hidden\"] !== \"undefined\") {\n        _isHidden = function () {\n            return document.hidden;\n        };\n        document.addEventListener(\"visibilitychange\", handleVisibilityChange);\n    } else if (typeof (document as any)[\"webkitHidden\"] !== \"undefined\") {\n        /**\n         * #quirks\n         *\n         * Android 4.4\n         */\n        _isHidden = function () {\n            return (document as any)[\"webkitHidden\"];\n        };\n        document.addEventListener(\"webkitvisibilitychange\", handleVisibilityChange);\n    } else {\n        _isHidden = function () {\n            return true;\n        };\n    }\n    _visible = !_isHidden();\n}\n","import { ComponentFlags } from \"../vdom/flags\";\nimport { Component } from \"../vdom/component\";\n\n/**\n * Frame Tasks Group flags.\n */\nexport const enum FrameTasksGroupFlags {\n    /**\n     * Group contains component update tasks.\n     */\n    Component = 1,\n    /**\n     * Group contains \"write\" tasks.\n     */\n    Write = 1 << 1,\n    /**\n     * Group contains \"read\" tasks\".\n     */\n    Read = 1 << 2,\n    /**\n     * Group contains \"after\" tasks.\n     */\n    After = 1 << 3,\n    /**\n     * Group is locked from reading and writing.\n     */\n    RWLock = 1 << 4,\n}\n\n/**\n * Frame tasks group contains tasks for updating components, read dom and write dom tasks, and tasks that should be\n * executed after all other tasks are finished.\n *\n * To get access to the frame tasks group, use: `currentFrame()` and `nextFrame()` scheduler methods.\n *\n *     scheduler.currentFrame().read(() => {\n *       console.log(element.clientWidth);\n *     });\n *\n * @final\n */\nexport class FrameTasksGroup {\n    /**\n     * See `FrameTasksGroupFlags` for details.\n     */\n    _flags: number;\n    /**\n     * Array of component arrays indexed by their depth.\n     */\n    _componentTasks: Array<Component<any>[] | null>;\n    /**\n     * Write DOM task queue.\n     */\n    _writeTasks: (() => void)[] | null;\n    /**\n     * Read DOM task queue.\n     */\n    _readTasks: (() => void)[] | null;\n    /**\n     * Tasks that should be executed when all other tasks are finished.\n     */\n    _afterTasks: (() => void)[] | null;\n\n    constructor() {\n        this._flags = 0;\n        this._componentTasks = [];\n        this._writeTasks = null;\n        this._readTasks = null;\n        this._afterTasks = null;\n    }\n\n    /**\n     * Add Component to the components queue.\n     *\n     * @param component\n     */\n    updateComponent(component: Component<any>): void {\n        if (__IVI_BROWSER__) {\n            if (__IVI_DEV__) {\n                if ((this._flags & FrameTasksGroupFlags.RWLock)) {\n                    throw new Error(\"Failed to add update component task to the current frame, current frame is \" +\n                        \"locked for read and write tasks.\");\n                }\n            }\n\n            if (!(component.flags & ComponentFlags.InUpdateQueue)) {\n                component.flags |= ComponentFlags.InUpdateQueue;\n                const priority = component.depth;\n\n                this._flags |= FrameTasksGroupFlags.Component;\n                while (priority >= this._componentTasks.length) {\n                    this._componentTasks.push(null);\n                }\n\n                const group = this._componentTasks[priority];\n                if (group === null) {\n                    this._componentTasks[priority] = [component];\n                } else {\n                    group.push(component);\n                }\n            }\n        }\n    }\n\n    /**\n     * Add new task to the write DOM task queue.\n     *\n     * @param task\n     */\n    write(task: () => void): void {\n        if (__IVI_DEV__) {\n            if ((this._flags & FrameTasksGroupFlags.RWLock)) {\n                throw new Error(\"Failed to add update component task to the current frame, current frame is locked \" +\n                    \"for read and write tasks.\");\n            }\n        }\n\n        this._flags |= FrameTasksGroupFlags.Write;\n        if (this._writeTasks === null) {\n            this._writeTasks = [];\n        }\n        this._writeTasks.push(task);\n    }\n\n    /**\n     * Add new task to the read DOM task queue.\n     *\n     * @param task\n     */\n    read(task: () => void): void {\n        if (__IVI_DEV__) {\n            if ((this._flags & FrameTasksGroupFlags.RWLock)) {\n                throw new Error(\"Failed to add update component task to the current frame, current frame is locked \" +\n                    \"for read and write tasks.\");\n            }\n        }\n\n        this._flags |= FrameTasksGroupFlags.Read;\n        if (this._readTasks === null) {\n            this._readTasks = [];\n        }\n        this._readTasks.push(task);\n    }\n\n    /**\n     * Add new task to the task queue that will execute tasks when all DOM tasks are finished.\n     *\n     * @param task\n     */\n    after(task: () => void): void {\n        this._flags |= FrameTasksGroupFlags.After;\n        if (this._afterTasks === null) {\n            this._afterTasks = [];\n        }\n        this._afterTasks.push(task);\n    }\n\n    /**\n     * Lock read and write task queues.\n     *\n     * Works in DEBUG mode only.\n     */\n    _rwLock(): void {\n        if (__IVI_DEV__) {\n            this._flags |= FrameTasksGroupFlags.RWLock;\n        }\n    }\n\n    /**\n     * Unlock read and write task queue.\n     *\n     * Works in DEBUG mode only.\n     */\n    _rwUnlock(): void {\n        if (__IVI_DEV__) {\n            this._flags &= ~FrameTasksGroupFlags.RWLock;\n        }\n    }\n}\n","\nexport type DOMReader = () => boolean | undefined;\n\nconst _readers: DOMReader[] = [];\n\n/**\n * Add DOM Reader.\n *\n * DOM Reader will be be invoked on each frame in the read phase.\n *\n * @param reader Task that will be executed until it returns `false`.\n */\nexport function addDOMReader(reader: DOMReader): void {\n    if (__IVI_BROWSER__) {\n        _readers.push(reader);\n    }\n}\n\n/**\n * Execute DOM Reader tasks.\n */\nexport function executeDOMReaders(): void {\n    if (__IVI_BROWSER__) {\n        for (let i = 0; i < _readers.length; i++) {\n            const reader = _readers[i];\n            if (reader()) {\n                if (i === _readers.length) {\n                    _readers.pop();\n                } else {\n                    _readers[i--] = _readers.pop() !;\n                }\n            }\n        }\n    }\n}\n","import { EventHandlerList } from \"../events/event_handler\";\nimport { CSSStyleProps } from \"../common/dom_props\";\nimport { VNodeFlags } from \"./flags\";\nimport { ComponentClass, ComponentFunction, Component } from \"./component\";\nimport { ElementDescriptor } from \"./element_descriptor\";\n\n/**\n * VNode object is the core object in ivi Virtual DOM, it can represent any node type.\n */\nexport interface VNode<P> {\n    /**\n     * Flags, see `VNodeFlags` for details.\n     */\n    _flags: VNodeFlags;\n    /**\n     * Tag name of the element.\n     *\n     * When VNode represents a Component, tag property should contain reference to a `ComponentClass` if it is a\n     * stateful component or `ComponentFunction` for stateless components.\n     */\n    _tag: string | ComponentClass<any> | ComponentFunction<any> | ElementDescriptor<any> | null;\n    /**\n     * Children reconciliation algorithm is using key property to find the same node in the previous children array. Key\n     * should be unique among its siblings.\n     */\n    _key: any;\n    /**\n     * Properties.\n     */\n    _props: P | null;\n    /**\n     * Class name.\n     */\n    _className: string | null;\n    /**\n     * Style.\n     */\n    _style: CSSStyleProps | null;\n    /**\n     * Events.\n     */\n    _events: EventHandlerList | null;\n    /**\n     * Children property can contain flat array of children virtual nodes, or text if it contains a single text node\n     * child.\n     *\n     * When virtual node represents an input field, children property will contain input value.\n     */\n    _children: VNode<any>[] | VNode<any> | string | number | boolean | null | undefined;\n    /**\n     * Reference to HTML node or Component instance. It will be available after virtual node is created or synced. Each\n     * time VNode is synced, reference will be transferred from the old VNode to the new one.\n     */\n    _instance: Node | Component<any> | null;\n    /**\n     * Ref callback.\n     */\n    _ref: ((ref: Node | Component<any> | null) => void) | null;\n    /**\n     * Unique ID thas is available in Dev Mode.\n     */\n    _debugId: number;\n}\n\n/**\n * Check if VNode is representing a Text node.\n *\n * @param node VNode.\n * @returns true when VNode is representing a Text node.\n */\nexport function isTextNode(node: VNode<any>): boolean {\n    return !!(node._flags & VNodeFlags.Text);\n}\n\n/**\n * Check if VNode is representing an Element.\n *\n * @param node VNode.\n * @returns true when VNode is representing an element node.\n */\nexport function isElementNode(node: VNode<any>): boolean {\n    return !!(node._flags & VNodeFlags.Element);\n}\n\n/**\n * Check if VNode is representing an SVG Element.\n *\n * @param node VNode.\n * @returns true when VNode is representing a text node.\n */\nexport function isSVGNode(node: VNode<any>): boolean {\n    return !!(node._flags & VNodeFlags.SvgElement);\n}\n\n/**\n * Check if VNode is representing a Component.\n *\n * @param node VNode.\n * @returns true when VNode is representing a Component.\n */\nexport function isComponentNode(node: VNode<any>): boolean {\n    return !!(node._flags & VNodeFlags.Component);\n}\n\n/**\n * Get reference to a DOM node from a VNode object.\n *\n * @param node VNode which contains reference to a DOM node.\n * @returns null if VNode doesn't have a reference to a DOM node.\n */\nexport function getDOMInstanceFromVNode<T extends Node>(node: VNode<any>): T | null {\n    if (node._flags & VNodeFlags.Component) {\n        if (node._flags & VNodeFlags.ComponentClass) {\n            return getDOMInstanceFromVNode<T>((node._instance as Component<any>).root!);\n        } else {\n            return getDOMInstanceFromVNode<T>(node._children as VNode<any>);\n        }\n    }\n    return node._instance as T;\n}\n\n/**\n * Get reference to a Component instance from a VNode object.\n *\n * @param node VNode which contains reference to a Component instance.\n * @returns null if VNode doesn't have a reference to a Component instance.\n */\nexport function getComponentRef<P>(node: VNode<P>): Component<P> | null {\n    if (__IVI_DEV__) {\n        if (!(node._flags & VNodeFlags.Component)) {\n            throw new Error(\"Failed to get component reference: VNode should represent a Component.\");\n        }\n    }\n    return node._instance as Component<P> | null;\n}\n","import { nextDebugId } from \"../dev_mode/dev_mode\";\nimport { checkDOMAttributesForTypos, checkDOMStylesForTypos, checkDeprecatedDOMSVGAttributes } from \"../dev_mode/typos\";\nimport { isVoidElement, isValidTag, isInputTypeHasCheckedProperty } from \"../dev_mode/dom\";\nimport { HTMLTagType, SVGTagType, MediaTagType, InputType } from \"../common/dom\";\nimport { VNode } from \"./vnode\";\nimport { VNodeFlags, ElementDescriptorFlags } from \"./flags\";\nimport { ComponentFunction, ComponentClass, Component } from \"./component\";\nimport { ElementDescriptor } from \"./element_descriptor\";\nimport { EventHandlerList } from \"../events/event_handler\";\nimport {\n    HTMLAnchorElementProps, HTMLElementProps, HTMLAppletElementProps, HTMLAreaElementProps, HTMLAudioElementProps,\n    HTMLBaseElementProps, HTMLBaseFontElementProps, HTMLBodyElementProps, HTMLBRElementProps, HTMLButtonElementProps,\n    HTMLCanvasElementProps, HTMLQuoteElementProps, HTMLTableCaptionElementProps, HTMLTableColElementProps,\n    HTMLDataListElementProps, HTMLModElementProps, HTMLDirectoryElementProps, HTMLDivElementProps,\n    HTMLDListElementProps, HTMLEmbedElementProps, HTMLFieldSetElementProps, HTMLFontElementProps, HTMLFormElementProps,\n    HTMLFrameElementProps, HTMLFrameSetElementProps, HTMLHeadElementProps, HTMLHeadingElementProps, HTMLHRElementProps,\n    HTMLHtmlElementProps, HTMLIFrameElementProps, HTMLImageElementProps, HTMLInputElementProps, HTMLLabelElementProps,\n    HTMLLegendElementProps, HTMLLIElementProps, HTMLLinkElementProps, HTMLMapElementProps, HTMLMarqueeElementProps,\n    HTMLMenuElementProps, HTMLMetaElementProps, HTMLMeterElementProps, HTMLObjectElementProps, HTMLOListElementProps,\n    HTMLOptGroupElementProps, HTMLOptionElementProps, HTMLParagraphElementProps, HTMLParamElementProps,\n    HTMLPictureElementProps, HTMLPreElementProps, HTMLProgressElementProps, HTMLScriptElementProps,\n    HTMLSelectElementProps, HTMLSourceElementProps, HTMLSpanElementProps, HTMLStyleElementProps,\n    HTMLTableDataCellElementProps, HTMLTableElementProps, HTMLTableHeaderCellElementProps, HTMLTableRowElementProps,\n    HTMLTableSectionElementProps, HTMLTemplateElementProps, HTMLTextAreaElementProps, HTMLTitleElementProps,\n    HTMLTrackElementProps, HTMLUListElementProps, HTMLUnknownElementProps, HTMLVideoElementProps, HTMLMediaElementProps,\n    MSHTMLWebViewElementProps,\n\n    SVGCircleElementProps, SVGClipPathElementProps, SVGDefsElementProps, SVGDescElementProps, SVGEllipseElementProps,\n    SVGFEBlendElementProps, SVGFEColorMatrixElementProps, SVGFEComponentTransferElementProps,\n    SVGFECompositeElementProps, SVGFEConvolveMatrixElementProps, SVGFEDiffuseLightingElementProps,\n    SVGFEDisplacementMapElementProps, SVGFEDistantLightElementProps, SVGFEFloodElementProps, SVGFEFuncAElementProps,\n    SVGFEFuncBElementProps, SVGFEFuncGElementProps, SVGFEFuncRElementProps, SVGFEGaussianBlurElementProps,\n    SVGFEImageElementProps, SVGFEMergeElementProps, SVGFEMergeNodeElementProps, SVGFEMorphologyElementProps,\n    SVGFEOffsetElementProps, SVGFEPointLightElementProps, SVGFESpecularLightingElementProps, SVGFESpotLightElementProps,\n    SVGFETileElementProps, SVGFETurbulenceElementProps, SVGFilterElementProps, SVGForeignObjectElementProps,\n    SVGGElementProps, SVGImageElementProps, SVGLinearGradientElementProps, SVGLineElementProps, SVGMarkerElementProps,\n    SVGMaskElementProps, SVGMetadataElementProps, SVGPathElementProps, SVGPatternElementProps, SVGPolygonElementProps,\n    SVGPolylineElementProps, SVGRadialGradientElementProps, SVGRectElementProps, SVGStopElementProps,\n    SVGSVGElementProps, SVGSwitchElementProps, SVGSymbolElementProps, SVGTextElementProps, SVGTextPathElementProps,\n    SVGTSpanElementProps, SVGViewElementProps, SVGUseElementProps, SVGElementProps,\n\n    CSSStyleProps,\n} from \"../common/dom_props\";\n\n/**\n * VNode Builder provides a chain-method API to build VNodes.\n *\n * VNodeBuilder class has a parametric type `P` to specify `props` type.\n *\n *     const vnode = $h(\"div\", \"div-class-name\")\n *         .props({ id: \"div-id\" })\n *         .events({ click: Events.onClick((e) => console.log(\"click event\", e)) })\n *         .children(\"Hello\");\n *\n * There are several factory functions that create VNode Builder objects:\n *\n *     // Basic HTML Elements\n *     $h(tagName: string, className?: string): VNodeBuilder<HTMLElementProps | null>;\n *\n *     // SVG Elements\n *     $s(tagName: string, className?: string): VNodeBuilder<SVGElementProps | null>;\n *\n *     // Components\n *     $c<P>(component: ComponentClass<P> | ComponentFunction<P>, props: P): VNodeBuilder<P>;\n *\n *     // Input Elements and TextArea (specifying type as \"textarea\" will create HTMLTextAreaElement)\n *     $i(type: string, className?: string): VNodeBuilder<HTMLInputElementProps | HTMLTextAreaElementProps | null>;\n *\n *     // Media Elements (Video and Audio)\n *     $m(tagName: string, className?: string): VNodeBuilder<HTMLMediaElementProps | null>;\n *\n *     // Text Nodes\n *     $t(text: string): VNodeBuilder<null>;\n *\n * @final\n */\nexport class VNodeBuilder<P> implements VNode<P> {\n    _flags: VNodeFlags;\n    _tag: string | ComponentClass<any> | ComponentFunction<any> | ElementDescriptor<any> | null;\n    _key: any;\n    _props: P | null;\n    _className: string | null;\n    _style: CSSStyleProps | null;\n    _events: EventHandlerList | null;\n    _children: VNode<any>[] | VNode<any> | string | number | boolean | null | undefined;\n    _instance: Node | Component<any> | null;\n    _ref: ((ref: Node | Component<any> | null) => void) | null;\n    _debugId: number;\n\n    constructor(\n        flags: number,\n        tag: string | ComponentFunction<P> | ComponentClass<P> | ElementDescriptor<any> | null,\n        props: P | null,\n        className: string | null,\n        children: VNode<any>[] | VNode<any> | string | number | boolean | null | undefined,\n    ) {\n        this._flags = flags;\n        this._tag = tag;\n        this._key = null;\n        this._props = props;\n        this._className = className;\n        this._style = null;\n        this._events = null;\n        this._children = children;\n        this._instance = null;\n        this._ref = null;\n        if (__IVI_DEV__) {\n            this._debugId = nextDebugId();\n        }\n    }\n\n    /**\n     * Set key.\n     *\n     * Children reconciliation algorithm is using key property to find the same node in the previous children array. Key\n     * should be unique among its siblings.\n     *\n     * @param key Any object that should be unique among its siblings.\n     * @returns VNodeBuilder.\n     */\n    key(key: any): VNodeBuilder<P> {\n        this._key = key;\n        return this;\n    }\n\n    /**\n     * Set className.\n     *\n     * @param className.\n     * @returns VNodeBuilder.\n     */\n    className(className: string | null): VNodeBuilder<P> {\n        if (__IVI_DEV__) {\n            if (!(this._flags & VNodeFlags.Element)) {\n                throw new Error(\"Failed to set className, className is available on element nodes only.\");\n            }\n            if (className !== null) {\n                if (this._flags & VNodeFlags.ElementDescriptor) {\n                    const d = this._tag as ElementDescriptor<P>;\n                    if (d._flags & ElementDescriptorFlags.ProtectClassName) {\n                        throw new Error(\"Failed to set className, className is protected by an ElementDescriptor.\");\n                    }\n                }\n            }\n        }\n        this._className = className;\n        return this;\n    }\n\n    /**\n     * Set style.\n     *\n     * @param style.\n     * @returns VNodeBuilder.\n     */\n    style(style: CSSStyleProps | null): VNodeBuilder<P> {\n        if (__IVI_DEV__) {\n            if (!(this._flags & VNodeFlags.Element)) {\n                throw new Error(\"Failed to set style, style is available on element nodes only.\");\n            }\n\n            if (style) {\n                checkDOMStylesForTypos(style);\n\n                if (this._flags & VNodeFlags.ElementDescriptor) {\n                    const d = this._tag as ElementDescriptor<P>;\n                    if (d._flags & ElementDescriptorFlags.ProtectStyle) {\n                        if (d._protectedStyle) {\n                            const keys = Object.keys(d._protectedStyle);\n                            for (let i = 0; i < keys.length; i++) {\n                                const key = keys[i];\n                                if (style.hasOwnProperty(key)) {\n                                    throw new Error(`Failed to set style, \"${key}\" style is protected by an ` +\n                                        `ElementDescriptor.`);\n                                }\n                            }\n                        } else {\n                            throw new Error(\"Failed to set style, style is protected by an ElementDescriptor.\");\n                        }\n                    }\n                }\n            }\n        }\n        this._style = style;\n        return this;\n    }\n\n    /**\n     * Set events.\n     *\n     * @param events.\n     * @returns VNodeBuilder.\n     */\n    events(events: EventHandlerList | null): VNodeBuilder<P> {\n        if (__IVI_DEV__) {\n            if (!(this._flags & VNodeFlags.Element)) {\n                throw new Error(\"Failed to set events, events are available on element nodes only.\");\n            }\n        }\n        this._events = events;\n        return this;\n    }\n\n    /**\n     * Set props.\n     *\n     * @param props.\n     * @returns VNodeBuilder.\n     */\n    props(props: P | null): VNodeBuilder<P> {\n        if (__IVI_DEV__) {\n            if (props) {\n                checkDOMAttributesForTypos(props);\n\n                if (this._flags & VNodeFlags.SvgElement) {\n                    checkDeprecatedDOMSVGAttributes(this._tag as string, props);\n                }\n\n                if (this._flags & VNodeFlags.ElementDescriptor) {\n                    const d = this._tag as ElementDescriptor<P>;\n                    if (d._flags & ElementDescriptorFlags.ProtectProps) {\n                        if (d._protectedProps) {\n                            const keys = Object.keys(d._protectedProps);\n                            for (let i = 0; i < keys.length; i++) {\n                                const key = keys[i];\n                                if (props.hasOwnProperty(key)) {\n                                    throw new Error(`Failed to set props, \"${key}\" property is protected by an ` +\n                                        `ElementDescriptor.`);\n                                }\n                            }\n                        } else {\n                            throw new Error(\"Failed to set props, props are protected by an ElementDescriptor.\");\n                        }\n                    }\n                }\n            }\n        }\n        this._props = props;\n        return this;\n    }\n\n    /**\n     * Set children.\n     *\n     * @param children Children can be a simple string, single VNode or recursive list of VNodes with strings and null\n     *   values. It will automatically normalize recursive lists by flattening, filtering out null values and replacing\n     *   strings with text nodes.\n     * @returns VNodeBuilder.\n     */\n    children(children: VNodeRecursiveArray | VNode<any> | string | number | boolean | null): VNodeBuilder<P> {\n        if (__IVI_DEV__) {\n            if (this._flags &\n                (VNodeFlags.ChildrenArray |\n                    VNodeFlags.ChildrenVNode |\n                    VNodeFlags.ChildrenBasic |\n                    VNodeFlags.UnsafeHTML)) {\n                throw new Error(\"Failed to set children, VNode element is already having children.\");\n            }\n            if (!(this._flags & VNodeFlags.Element)) {\n                throw new Error(\"Failed to set children, children are available on element nodes only.\");\n            }\n            if (this._flags & VNodeFlags.InputElement) {\n                throw new Error(\"Failed to set children, input elements can't have children.\");\n            }\n            if (this._flags & VNodeFlags.MediaElement) {\n                throw new Error(\"Failed to set children, media elements can't have children.\");\n            }\n            if (isVoidElement(this._tag as string)) {\n                throw new Error(`Failed to set children, ${this._tag} elements can't have children.`);\n            }\n        }\n        if (Array.isArray(children)) {\n            this._flags |= VNodeFlags.ChildrenArray;\n            this._children = normalizeVNodes(children);\n        } else {\n            if (typeof children === \"object\") {\n                this._flags |= VNodeFlags.ChildrenVNode;\n            } else {\n                this._flags |= VNodeFlags.ChildrenBasic;\n            }\n            this._children = children;\n        }\n        return this;\n    }\n\n    /**\n     * Set children that will be tracked by `key` property.\n     *\n     * To support use cases with static nodes at the beginning and at the end of the children list, children list may\n     * contain nodes with `null` keys at the beginning of the list and at the end, children with `null` keys shouldn't\n     * move.\n     *\n     * NOTE: If you've found any other use case that can't be easily solved with the current `trackByKeyChildren`\n     * implementation, feel free to submit an issue, but most of the time it is better to help browsers with layout\n     * calculation, and it will be better to wrap nodes that aren't moved into its own container nodes and specify css\n     * containment property. Use cases with \"semantic\" markup probably will be ignored.\n     *\n     * @param children Recursive lists of vnodes that can contain null values. It will automatically normalize recursive\n     *   lists by flattening and filtering out null values.\n     * @returns VNodeBuilder.\n     */\n    trackByKeyChildren(children: VNodeRecursiveArray | null): VNodeBuilder<P> {\n        if (__IVI_DEV__) {\n            if (this._flags &\n                (VNodeFlags.ChildrenArray |\n                    VNodeFlags.ChildrenVNode |\n                    VNodeFlags.ChildrenBasic |\n                    VNodeFlags.UnsafeHTML)) {\n                throw new Error(\"Failed to set children, VNode element is already having children.\");\n            }\n            if (!(this._flags & VNodeFlags.Element)) {\n                throw new Error(\"Failed to set children, children are available on element nodes only.\");\n            }\n            if (this._flags & VNodeFlags.InputElement) {\n                throw new Error(\"Failed to set children, input elements can't have children.\");\n            }\n            if (this._flags & VNodeFlags.MediaElement) {\n                throw new Error(\"Failed to set children, media elements can't have children.\");\n            }\n            if (isVoidElement(this._tag as string)) {\n                throw new Error(`Failed to set children, ${this._tag} elements can't have children.`);\n            }\n        }\n        if (children) {\n            this._flags |= VNodeFlags.TrackByKeyChildren | VNodeFlags.ChildrenArray;\n            this._children = normalizeVNodes(children);\n\n            if (__IVI_DEV__) {\n                const childrenArray = this._children as VNode<any>[];\n                let child: VNode<any>;\n                let start = 0;\n                let end = childrenArray.length - 1;\n                while (start <= end) {\n                    child = childrenArray[start];\n                    if (child._key !== null) {\n                        break;\n                    }\n                    start++;\n                }\n                while (start <= end) {\n                    child = childrenArray[end];\n                    if (child._key !== null) {\n                        break;\n                    }\n                    end--;\n                }\n\n                if (start <= end) {\n                    const usedKeys = new Set<any>();\n                    while (start <= end) {\n                        child = childrenArray[start];\n                        const key = child._key;\n                        if (key === null) {\n                            throw new Error(`Failed to set children, invalid keyed children list, keyed ` +\n                                `children should have a shape like [non-keyed, keyed, non-keyed].`);\n                        }\n                        if (usedKeys.has(key)) {\n                            throw new Error(`Failed to set children, invalid children list, key: \"${key}\" is ` +\n                                `used multiple times.`);\n                        }\n                        usedKeys.add(key);\n                        start++;\n                    }\n                }\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * Set children as an innerHTML string. It is potentially vulnerable to XSS attacks.\n     *\n     * @param html innerHTML in a string format.\n     * @returns VNodeBuilder.\n     */\n    unsafeHTML(html: string | null): VNodeBuilder<P> {\n        if (__IVI_DEV__) {\n            if (this._flags & (VNodeFlags.ChildrenArray | VNodeFlags.ChildrenVNode | VNodeFlags.ChildrenBasic)) {\n                throw new Error(\"Failed to set unsafeHTML, VNode element is already having children.\");\n            }\n            if (!(this._flags & VNodeFlags.Element)) {\n                throw new Error(\"Failed to set unsafeHTML, unsafeHTML is available on element nodes only.\");\n            }\n            if (this._flags & VNodeFlags.InputElement) {\n                throw new Error(\"Failed to set unsafeHTML, input elements can't have innerHTML.\");\n            }\n            if (this._flags & VNodeFlags.MediaElement) {\n                throw new Error(\"Failed to set unsafeHTML, media elements can't have children.\");\n            }\n            if (isVoidElement(this._tag as string)) {\n                throw new Error(`Failed to set unsafeHTML, ${this._tag} elements can't have children.`);\n            }\n        }\n        this._flags |= VNodeFlags.UnsafeHTML;\n        this._children = html;\n        return this;\n    }\n\n    /**\n     * Set HTMLInputElement/HTMLTextAreaElement value property.\n     *\n     * @param text Text value.\n     * @returns VNodeBuilder.\n     */\n    value(value: string | null): VNodeBuilder<P> {\n        if (__IVI_DEV__) {\n            if (!(this._flags & VNodeFlags.InputElement)) {\n                throw new Error(\"Failed to set value, value is available on input elements only.\");\n            }\n        }\n        this._children = value;\n        return this;\n    }\n\n    /**\n     * Set HTMLInputElement checked property.\n     *\n     * @param text Text value.\n     * @returns VNodeBuilder.\n     */\n    checked(checked: boolean | null): VNodeBuilder<P> {\n        if (__IVI_DEV__) {\n            if (!(this._flags & VNodeFlags.InputElement)) {\n                throw new Error(\"Failed to set checked, checked is available on input elements only.\");\n            }\n            if (!isInputTypeHasCheckedProperty(this._tag as InputType)) {\n                throw new Error(`Failed to set checked, input elements with type ${this._tag} doesn't support `\n                    + `checked value.`);\n            }\n        }\n        this._children = checked;\n        return this;\n    }\n\n    /**\n     * Set ref callback.\n     *\n     * When VNode is instantiated ref callback will be invoked with a Node value for DOM Elements or Component\n     * instance for components.\n     *\n     * When VNode is detached, ref callback will be invoked with a `null` value.\n     *\n     * @param ref callback.\n     * @returns VNodeBuilder.\n     */\n    ref(ref: (ref: Node | null) => void): VNodeBuilder<P>;\n    ref(ref: (ref: Component<any> | null) => void): VNodeBuilder<P>;\n    ref(ref: ((ref: Node | null) => void) | ((ref: Component<any> | null) => void)): VNodeBuilder<P> {\n        this._ref = ref;\n        return this;\n    }\n\n    /**\n     * Marks VNode as an immutable.\n     *\n     * Immutable VNodes can't be used directly when rendering trees, they should be cloned with a `cloneVNode` function.\n     *\n     * @returns VNodeBuilder.\n     */\n    immutable(): VNodeBuilder<P> {\n        if (__IVI_DEV__) {\n            this._flags |= VNodeFlags.Immutable;\n        }\n        return this;\n    }\n\n    /**\n     * Merge props with existing props.\n     *\n     * @param props\n     * @return VNodeBuilder.\n     */\n    mergeProps(props: P | null): VNodeBuilder<P> {\n        if (__IVI_DEV__) {\n            if (props && typeof props !== \"object\") {\n                throw new Error(`Failed to merge props, props object has type \"${typeof props}\".`);\n            }\n            if (this._props && typeof this._props !== \"object\") {\n                throw new Error(`Failed to merge props, props object has type \"${typeof this._props}\".`);\n            }\n        }\n        if (props) {\n            return this.props(this._props ? Object.assign({}, this._props, props) : props);\n        }\n        return this;\n    }\n\n    /**\n     * Merge style with existing style.\n     *\n     * @param props\n     * @return VNodeBuilder.\n     */\n    mergeStyle(style: CSSStyleProps | null): VNodeBuilder<P> {\n        if (style) {\n            return this.style(this._style ? Object.assign({}, this._style, style) : style);\n        }\n        return this;\n    }\n\n    /**\n     * Merge events with existing events.\n     *\n     * @param props\n     * @return VNodeBuilder.\n     */\n    mergeEvents(events: EventHandlerList | null): VNodeBuilder<P> {\n        if (events) {\n            return this.events(this._events ? Object.assign({}, this._events, events) : events);\n        }\n        return this;\n    }\n}\n\nexport type VNodeRecursiveListValue = VNodeRecursiveArray | VNode<any> | string | number | boolean | null;\n/**\n * Recursive VNode List.\n */\nexport interface VNodeRecursiveArray extends Array<VNodeRecursiveListValue> { }\n\n/**\n * Create a VNodeBuilder representing a Text node.\n *\n * @param context Text content.\n * @returns VNodeBuilder object.\n */\nexport function $t(content: string | number | boolean | null): VNodeBuilder<null> {\n    return new VNodeBuilder<null>(VNodeFlags.Text, null, null, null, content);\n}\n\n/* tslint:disable:max-line-length */\n/**\n * Create a VNodeBuilder representing an Element node.\n *\n * @param tagName HTML Element tag name.\n * @param props HTML Element props.\n * @returns VNodeBuilder object.\n */\nexport function $h(tagName: \"a\", className?: string): VNodeBuilder<HTMLAnchorElementProps | null>;\nexport function $h(tagName: \"abbr\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"acronym\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"address\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"applet\", className?: string): VNodeBuilder<HTMLAppletElementProps | null>;\nexport function $h(tagName: \"area\", className?: string): VNodeBuilder<HTMLAreaElementProps | null>;\nexport function $h(tagName: \"article\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"aside\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"b\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"base\", className?: string): VNodeBuilder<HTMLBaseElementProps | null>;\nexport function $h(tagName: \"basefont\", className?: string): VNodeBuilder<HTMLBaseFontElementProps | null>;\nexport function $h(tagName: \"bdo\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"big\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"blockquote\", className?: string): VNodeBuilder<HTMLQuoteElementProps | null>;\nexport function $h(tagName: \"body\", className?: string): VNodeBuilder<HTMLBodyElementProps | null>;\nexport function $h(tagName: \"br\", className?: string): VNodeBuilder<HTMLBRElementProps | null>;\nexport function $h(tagName: \"button\", className?: string): VNodeBuilder<HTMLButtonElementProps | null>;\nexport function $h(tagName: \"canvas\", className?: string): VNodeBuilder<HTMLCanvasElementProps | null>;\nexport function $h(tagName: \"caption\", className?: string): VNodeBuilder<HTMLTableCaptionElementProps | null>;\nexport function $h(tagName: \"center\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"cite\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"code\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"col\", className?: string): VNodeBuilder<HTMLTableColElementProps | null>;\nexport function $h(tagName: \"colgroup\", className?: string): VNodeBuilder<HTMLTableColElementProps | null>;\nexport function $h(tagName: \"datalist\", className?: string): VNodeBuilder<HTMLDataListElementProps | null>;\nexport function $h(tagName: \"dd\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"del\", className?: string): VNodeBuilder<HTMLModElementProps | null>;\nexport function $h(tagName: \"dfn\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"dir\", className?: string): VNodeBuilder<HTMLDirectoryElementProps | null>;\nexport function $h(tagName: \"div\", className?: string): VNodeBuilder<HTMLDivElementProps | null>;\nexport function $h(tagName: \"dl\", className?: string): VNodeBuilder<HTMLDListElementProps | null>;\nexport function $h(tagName: \"dt\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"em\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"embed\", className?: string): VNodeBuilder<HTMLEmbedElementProps | null>;\nexport function $h(tagName: \"fieldset\", className?: string): VNodeBuilder<HTMLFieldSetElementProps | null>;\nexport function $h(tagName: \"figcaption\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"figure\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"font\", className?: string): VNodeBuilder<HTMLFontElementProps | null>;\nexport function $h(tagName: \"footer\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"form\", className?: string): VNodeBuilder<HTMLFormElementProps | null>;\nexport function $h(tagName: \"frame\", className?: string): VNodeBuilder<HTMLFrameElementProps | null>;\nexport function $h(tagName: \"frameset\", className?: string): VNodeBuilder<HTMLFrameSetElementProps | null>;\nexport function $h(tagName: \"h1\", className?: string): VNodeBuilder<HTMLHeadingElementProps | null>;\nexport function $h(tagName: \"h2\", className?: string): VNodeBuilder<HTMLHeadingElementProps | null>;\nexport function $h(tagName: \"h3\", className?: string): VNodeBuilder<HTMLHeadingElementProps | null>;\nexport function $h(tagName: \"h4\", className?: string): VNodeBuilder<HTMLHeadingElementProps | null>;\nexport function $h(tagName: \"h5\", className?: string): VNodeBuilder<HTMLHeadingElementProps | null>;\nexport function $h(tagName: \"h6\", className?: string): VNodeBuilder<HTMLHeadingElementProps | null>;\nexport function $h(tagName: \"head\", className?: string): VNodeBuilder<HTMLHeadElementProps | null>;\nexport function $h(tagName: \"header\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"hgroup\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"hr\", className?: string): VNodeBuilder<HTMLHRElementProps | null>;\nexport function $h(tagName: \"html\", className?: string): VNodeBuilder<HTMLHtmlElementProps | null>;\nexport function $h(tagName: \"i\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"iframe\", className?: string): VNodeBuilder<HTMLIFrameElementProps | null>;\nexport function $h(tagName: \"img\", className?: string): VNodeBuilder<HTMLImageElementProps | null>;\nexport function $h(tagName: \"ins\", className?: string): VNodeBuilder<HTMLModElementProps | null>;\nexport function $h(tagName: \"isindex\", className?: string): VNodeBuilder<HTMLUnknownElementProps | null>;\nexport function $h(tagName: \"kbd\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"keygen\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"label\", className?: string): VNodeBuilder<HTMLLabelElementProps | null>;\nexport function $h(tagName: \"legend\", className?: string): VNodeBuilder<HTMLLegendElementProps | null>;\nexport function $h(tagName: \"li\", className?: string): VNodeBuilder<HTMLLIElementProps | null>;\nexport function $h(tagName: \"link\", className?: string): VNodeBuilder<HTMLLinkElementProps | null>;\nexport function $h(tagName: \"listing\", className?: string): VNodeBuilder<HTMLPreElementProps | null>;\nexport function $h(tagName: \"map\", className?: string): VNodeBuilder<HTMLMapElementProps | null>;\nexport function $h(tagName: \"mark\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"marquee\", className?: string): VNodeBuilder<HTMLMarqueeElementProps | null>;\nexport function $h(tagName: \"menu\", className?: string): VNodeBuilder<HTMLMenuElementProps | null>;\nexport function $h(tagName: \"meta\", className?: string): VNodeBuilder<HTMLMetaElementProps | null>;\nexport function $h(tagName: \"meter\", className?: string): VNodeBuilder<HTMLMeterElementProps | null>;\nexport function $h(tagName: \"nav\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"nextid\", className?: string): VNodeBuilder<HTMLUnknownElementProps | null>;\nexport function $h(tagName: \"nobr\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"noframes\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"noscript\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"object\", className?: string): VNodeBuilder<HTMLObjectElementProps | null>;\nexport function $h(tagName: \"ol\", className?: string): VNodeBuilder<HTMLOListElementProps | null>;\nexport function $h(tagName: \"optgroup\", className?: string): VNodeBuilder<HTMLOptGroupElementProps | null>;\nexport function $h(tagName: \"option\", className?: string): VNodeBuilder<HTMLOptionElementProps | null>;\nexport function $h(tagName: \"p\", className?: string): VNodeBuilder<HTMLParagraphElementProps | null>;\nexport function $h(tagName: \"param\", className?: string): VNodeBuilder<HTMLParamElementProps | null>;\nexport function $h(tagName: \"picture\", className?: string): VNodeBuilder<HTMLPictureElementProps | null>;\nexport function $h(tagName: \"plaintext\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"pre\", className?: string): VNodeBuilder<HTMLPreElementProps | null>;\nexport function $h(tagName: \"progress\", className?: string): VNodeBuilder<HTMLProgressElementProps | null>;\nexport function $h(tagName: \"q\", className?: string): VNodeBuilder<HTMLQuoteElementProps | null>;\nexport function $h(tagName: \"rt\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"ruby\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"s\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"samp\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"script\", className?: string): VNodeBuilder<HTMLScriptElementProps | null>;\nexport function $h(tagName: \"section\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"select\", className?: string): VNodeBuilder<HTMLSelectElementProps | null>;\nexport function $h(tagName: \"small\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"source\", className?: string): VNodeBuilder<HTMLSourceElementProps | null>;\nexport function $h(tagName: \"span\", className?: string): VNodeBuilder<HTMLSpanElementProps | null>;\nexport function $h(tagName: \"strike\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"strong\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"style\", className?: string): VNodeBuilder<HTMLStyleElementProps | null>;\nexport function $h(tagName: \"sub\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"sup\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"table\", className?: string): VNodeBuilder<HTMLTableElementProps | null>;\nexport function $h(tagName: \"tbody\", className?: string): VNodeBuilder<HTMLTableSectionElementProps | null>;\nexport function $h(tagName: \"td\", className?: string): VNodeBuilder<HTMLTableDataCellElementProps | null>;\nexport function $h(tagName: \"template\", className?: string): VNodeBuilder<HTMLTemplateElementProps | null>;\nexport function $h(tagName: \"textarea\", className?: string): VNodeBuilder<HTMLTextAreaElementProps | null>;\nexport function $h(tagName: \"tfoot\", className?: string): VNodeBuilder<HTMLTableSectionElementProps | null>;\nexport function $h(tagName: \"th\", className?: string): VNodeBuilder<HTMLTableHeaderCellElementProps | null>;\nexport function $h(tagName: \"thead\", className?: string): VNodeBuilder<HTMLTableSectionElementProps | null>;\nexport function $h(tagName: \"title\", className?: string): VNodeBuilder<HTMLTitleElementProps | null>;\nexport function $h(tagName: \"tr\", className?: string): VNodeBuilder<HTMLTableRowElementProps | null>;\nexport function $h(tagName: \"track\", className?: string): VNodeBuilder<HTMLTrackElementProps | null>;\nexport function $h(tagName: \"tt\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"u\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"ul\", className?: string): VNodeBuilder<HTMLUListElementProps | null>;\nexport function $h(tagName: \"var\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"wbr\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"x-ms-webview\", className?: string): VNodeBuilder<MSHTMLWebViewElementProps | null>;\nexport function $h(tagName: \"xmp\", className?: string): VNodeBuilder<HTMLPreElementProps | null>;\nexport function $h(tagName: HTMLTagType, className?: string): VNodeBuilder<HTMLElementProps | null> {\n    return new VNodeBuilder<HTMLElementProps | null>(\n        VNodeFlags.Element,\n        tagName,\n        null,\n        className === undefined ? null : className,\n        null);\n}\n\n/**\n * Create a VNodeBuilder representing a SVGElement node.\n *\n * @param tagName SVG Element tag name.\n * @param className Class name.\n * @returns VNodeBuilder object.\n */\nexport function $s(tagName: \"circle\", className?: string): VNodeBuilder<SVGCircleElementProps | null>;\nexport function $s(tagName: \"clippath\", className?: string): VNodeBuilder<SVGClipPathElementProps | null>;\nexport function $s(tagName: \"defs\", className?: string): VNodeBuilder<SVGDefsElementProps | null>;\nexport function $s(tagName: \"desc\", className?: string): VNodeBuilder<SVGDescElementProps | null>;\nexport function $s(tagName: \"ellipse\", className?: string): VNodeBuilder<SVGEllipseElementProps | null>;\nexport function $s(tagName: \"feblend\", className?: string): VNodeBuilder<SVGFEBlendElementProps | null>;\nexport function $s(tagName: \"fecolormatrix\", className?: string): VNodeBuilder<SVGFEColorMatrixElementProps | null>;\nexport function $s(tagName: \"fecomponenttransfer\", className?: string): VNodeBuilder<SVGFEComponentTransferElementProps | null>;\nexport function $s(tagName: \"fecomposite\", className?: string): VNodeBuilder<SVGFECompositeElementProps | null>;\nexport function $s(tagName: \"feconvolvematrix\", className?: string): VNodeBuilder<SVGFEConvolveMatrixElementProps | null>;\nexport function $s(tagName: \"fediffuselighting\", className?: string): VNodeBuilder<SVGFEDiffuseLightingElementProps | null>;\nexport function $s(tagName: \"fedisplacementmap\", className?: string): VNodeBuilder<SVGFEDisplacementMapElementProps | null>;\nexport function $s(tagName: \"fedistantlight\", className?: string): VNodeBuilder<SVGFEDistantLightElementProps | null>;\nexport function $s(tagName: \"feflood\", className?: string): VNodeBuilder<SVGFEFloodElementProps | null>;\nexport function $s(tagName: \"fefunca\", className?: string): VNodeBuilder<SVGFEFuncAElementProps | null>;\nexport function $s(tagName: \"fefuncb\", className?: string): VNodeBuilder<SVGFEFuncBElementProps | null>;\nexport function $s(tagName: \"fefuncg\", className?: string): VNodeBuilder<SVGFEFuncGElementProps | null>;\nexport function $s(tagName: \"fefuncr\", className?: string): VNodeBuilder<SVGFEFuncRElementProps | null>;\nexport function $s(tagName: \"fegaussianblur\", className?: string): VNodeBuilder<SVGFEGaussianBlurElementProps | null>;\nexport function $s(tagName: \"feimage\", className?: string): VNodeBuilder<SVGFEImageElementProps | null>;\nexport function $s(tagName: \"femerge\", className?: string): VNodeBuilder<SVGFEMergeElementProps | null>;\nexport function $s(tagName: \"femergenode\", className?: string): VNodeBuilder<SVGFEMergeNodeElementProps | null>;\nexport function $s(tagName: \"femorphology\", className?: string): VNodeBuilder<SVGFEMorphologyElementProps | null>;\nexport function $s(tagName: \"feoffset\", className?: string): VNodeBuilder<SVGFEOffsetElementProps | null>;\nexport function $s(tagName: \"fepointlight\", className?: string): VNodeBuilder<SVGFEPointLightElementProps | null>;\nexport function $s(tagName: \"fespecularlighting\", className?: string): VNodeBuilder<SVGFESpecularLightingElementProps | null>;\nexport function $s(tagName: \"fespotlight\", className?: string): VNodeBuilder<SVGFESpotLightElementProps | null>;\nexport function $s(tagName: \"fetile\", className?: string): VNodeBuilder<SVGFETileElementProps | null>;\nexport function $s(tagName: \"feturbulence\", className?: string): VNodeBuilder<SVGFETurbulenceElementProps | null>;\nexport function $s(tagName: \"filter\", className?: string): VNodeBuilder<SVGFilterElementProps | null>;\nexport function $s(tagName: \"foreignobject\", className?: string): VNodeBuilder<SVGForeignObjectElementProps | null>;\nexport function $s(tagName: \"g\", className?: string): VNodeBuilder<SVGGElementProps | null>;\nexport function $s(tagName: \"image\", className?: string): VNodeBuilder<SVGImageElementProps | null>;\nexport function $s(tagName: \"line\", className?: string): VNodeBuilder<SVGLineElementProps | null>;\nexport function $s(tagName: \"lineargradient\", className?: string): VNodeBuilder<SVGLinearGradientElementProps | null>;\nexport function $s(tagName: \"marker\", className?: string): VNodeBuilder<SVGMarkerElementProps | null>;\nexport function $s(tagName: \"mask\", className?: string): VNodeBuilder<SVGMaskElementProps | null>;\nexport function $s(tagName: \"metadata\", className?: string): VNodeBuilder<SVGMetadataElementProps | null>;\nexport function $s(tagName: \"path\", className?: string): VNodeBuilder<SVGPathElementProps | null>;\nexport function $s(tagName: \"pattern\", className?: string): VNodeBuilder<SVGPatternElementProps | null>;\nexport function $s(tagName: \"polygon\", className?: string): VNodeBuilder<SVGPolygonElementProps | null>;\nexport function $s(tagName: \"polyline\", className?: string): VNodeBuilder<SVGPolylineElementProps | null>;\nexport function $s(tagName: \"radialgradient\", className?: string): VNodeBuilder<SVGRadialGradientElementProps | null>;\nexport function $s(tagName: \"rect\", className?: string): VNodeBuilder<SVGRectElementProps | null>;\nexport function $s(tagName: \"stop\", className?: string): VNodeBuilder<SVGStopElementProps | null>;\nexport function $s(tagName: \"svg\", className?: string): VNodeBuilder<SVGSVGElementProps | null>;\nexport function $s(tagName: \"switch\", className?: string): VNodeBuilder<SVGSwitchElementProps | null>;\nexport function $s(tagName: \"symbol\", className?: string): VNodeBuilder<SVGSymbolElementProps | null>;\nexport function $s(tagName: \"text\", className?: string): VNodeBuilder<SVGTextElementProps | null>;\nexport function $s(tagName: \"textpath\", className?: string): VNodeBuilder<SVGTextPathElementProps | null>;\nexport function $s(tagName: \"tspan\", className?: string): VNodeBuilder<SVGTSpanElementProps | null>;\nexport function $s(tagName: \"use\", className?: string): VNodeBuilder<SVGUseElementProps | null>;\nexport function $s(tagName: \"view\", className?: string): VNodeBuilder<SVGViewElementProps | null>;\nexport function $s(tagName: SVGTagType, className?: string): VNodeBuilder<SVGElementProps | null> {\n    return new VNodeBuilder<SVGElementProps | null>(\n        VNodeFlags.Element | VNodeFlags.SvgElement,\n        tagName,\n        null,\n        className === undefined ? null : className,\n        null);\n}\n\n/**\n * Create a VNodeBuilder representing an HTMLInputElement node.\n *\n * @param type Input Element type. When type param has value \"textarea\", HTMLTextAreaElement will be created.\n * @param className Class name.\n * @returns VNodeBuilder object.\n */\nexport function $i(type: \"textarea\", className?: string): VNodeBuilder<HTMLTextAreaElementProps | null>;\nexport function $i(type: \"button\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"checkbox\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"color\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"date\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"datetime\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"datetime-local\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"email\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"file\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"hidden\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"image\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"month\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"number\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"password\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"radio\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"range\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"reset\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"search\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"submit\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"tel\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"text\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"time\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"url\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"week\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: InputType, className?: string): VNodeBuilder<HTMLInputElementProps | null> {\n    return new VNodeBuilder<HTMLInputElementProps | null>(\n        type === \"textarea\" ?\n            VNodeFlags.Element | VNodeFlags.InputElement | VNodeFlags.TextAreaElement :\n            VNodeFlags.Element | VNodeFlags.InputElement,\n        type,\n        null,\n        className === undefined ? null : className,\n        null);\n}\n\n/**\n * Create a VNodeBuilder representing an HTMLMediaElement node.\n *\n * @param tagName Media element tag name.\n * @param className Class name.\n * @returns VNodeBuilder object.\n */\nexport function $m(tagName: \"audio\", className?: string): VNodeBuilder<HTMLAudioElementProps | null>;\nexport function $m(tagName: \"video\", className?: string): VNodeBuilder<HTMLVideoElementProps | null>;\nexport function $m(tagName: MediaTagType, className?: string): VNodeBuilder<HTMLMediaElementProps | null> {\n    return new VNodeBuilder<HTMLMediaElementProps | null>(\n        VNodeFlags.Element | VNodeFlags.MediaElement,\n        tagName,\n        null,\n        className === undefined ? null : className,\n        null);\n}\n/* tslint:enable:max-line-length */\n\n/**\n * Create a VNodeBuilder representing a Component node.\n *\n * @param c Component factory.\n * @param props Component props.\n * @returns VNodeBuilder object.\n */\nexport function $c(c: ComponentFunction<null> | ComponentClass<null>): VNodeBuilder<null>;\nexport function $c<P>(c: ComponentFunction<P> | ComponentClass<P>, props: P): VNodeBuilder<P>;\nexport function $c<P>(c: ComponentFunction<P> | ComponentClass<P>, props?: P): VNodeBuilder<P> {\n    return new VNodeBuilder<P>(\n        (c.prototype.render) ? VNodeFlags.ComponentClass : VNodeFlags.ComponentFunction,\n        c,\n        props!,\n        null,\n        null);\n}\n\n/**\n * Create a VNodeBuilder representing an ElementDescriptor.\n *\n * @param d Element Descriptor.\n * @param className Class name.\n * @returns VNodeBuilder object.\n */\nexport function $e<P>(d: ElementDescriptor<P>, className?: string): VNodeBuilder<P> {\n    return new VNodeBuilder<P>(\n        d._flags & ElementDescriptorFlags.CopyFlags,\n        d,\n        null,\n        className === undefined ? null : className,\n        null);\n}\n\n/**\n * Create a VNodeBuilder representing a Custom Element (WebComponent).\n *\n * @param d Element Descriptor.\n * @param className Class name.\n * @returns VNodeBuilder object.\n */\nexport function $w(tagName: string, className?: string): VNodeBuilder<{ [key: string]: any } | null> {\n    if (__IVI_DEV__) {\n        if (!isValidTag(tagName)) {\n            throw new Error(`Invalid tag: ${tagName}`);\n        }\n    }\n    return new VNodeBuilder<HTMLElementProps | null>(\n        VNodeFlags.Element | VNodeFlags.WebComponent,\n        tagName,\n        null,\n        className === undefined ? null : className,\n        null);\n}\n\n/**\n * Deep clone of VNode children with instance refs erasure.\n *\n * @param flags Parent VNode flags.\n * @param children Children.\n * @returns Cloned children.\n */\nexport function cloneVNodeChildren(\n    flags: VNodeFlags,\n    children: VNode<any>[] | VNode<any> | string | number | boolean | null | undefined,\n): VNode<any>[] | VNode<any> | string | number | boolean | null | undefined {\n    if (children !== null) {\n        if (flags & (VNodeFlags.ChildrenVNode | VNodeFlags.ChildrenArray)) {\n            if (flags & VNodeFlags.ChildrenArray) {\n                children = children as VNode<any>[];\n                const newChildren = new Array<VNode<any>>(children.length);\n                for (let i = 0; i < 0; i++) {\n                    newChildren[i] = cloneVNode(children[i]);\n                }\n                return newChildren;\n            } else {\n                return cloneVNode(children as VNode<any>);\n            }\n        }\n    }\n\n    return children;\n}\n\n/**\n * Deep clone of VNode with instance refs erasure.\n *\n * @param node VNode to clone.\n * @returns Cloned VNode.\n */\nexport function cloneVNode(node: VNode<any>): VNodeBuilder<any> {\n    const flags = node._flags;\n\n    const newNode = new VNodeBuilder(\n        flags,\n        node._tag,\n        node._props,\n        node._className,\n        (flags & VNodeFlags.Component) ?\n            null :\n            cloneVNodeChildren(flags, node._children));\n    newNode._key = node._key;\n    newNode._events = node._events;\n    newNode._style = node._style;\n\n    return newNode;\n}\n\n/**\n * Shallow clone of VNode with instance refs erasure.\n *\n * @param node VNode to clone.\n * @returns Cloned VNode.\n */\nexport function shallowCloneVNode(node: VNode<any>): VNodeBuilder<any> {\n    const flags = node._flags;\n\n    const newNode = new VNodeBuilder(\n        flags & ~(\n            VNodeFlags.ChildrenArray |\n            VNodeFlags.ChildrenBasic |\n            VNodeFlags.ChildrenVNode |\n            VNodeFlags.UnsafeHTML\n        ),\n        node._tag,\n        node._props,\n        node._className,\n        null);\n    newNode._key = node._key;\n    newNode._events = node._events;\n    newNode._style = node._style;\n\n    return newNode;\n}\n\nfunction _normalizeVNodes(nodes: VNodeRecursiveArray, result: VNode<any>[], i: number): void {\n    for (; i < nodes.length; i++) {\n        const n = nodes[i];\n        if (n !== null) {\n            if (Array.isArray(n)) {\n                _normalizeVNodes(n, result, 0);\n            } else {\n                result.push(typeof n === \"object\" ? n as VNode<any> : $t(n));\n            }\n        }\n    }\n}\n\n/**\n * Normalizes recursive VNode lists by flattening all nodes, filtering out `null` children and converting strings to\n * text nodes.\n *\n * @param nodes\n * @returns Normalized VNode array.\n */\nexport function normalizeVNodes(nodes: VNodeRecursiveArray): VNode<any>[] {\n    for (let i = 0; i < nodes.length; i++) {\n        const n = nodes[i];\n\n        if (n === null || Array.isArray(n)) {\n            const result = nodes.slice(0, i) as VNode<any>[];\n            _normalizeVNodes(nodes, result, i);\n            return result;\n        } else if (typeof n !== \"object\") {\n            nodes[i] = $t(n);\n        }\n    }\n\n    return nodes as VNode<any>[];\n}\n","import { render, Component, VNode, $h, $c, EventDispatcherSubscription } from \"ivi\";\n\nimport {\n    EventDispatcher, SyntheticEvent, NativeEventDispatchers, accumulateDispatchTargets, dispatchEvent,\n    createEventHandler, EventHandler, SyntheticUIEvent,\n} from \"ivi\";\n\nexport class SyntheticGestureTapEvent extends SyntheticEvent<null> {\n}\n\nconst enum GestureEventDispatcherFlags {\n    TouchStart = 1,\n    MouseDown = 1 << 1,\n    TouchEnd = 1 << 2,\n    MouseUp = 1 << 3,\n    IgnoreMouseDown = 1 << 4,\n    IgnoreClick = 1 << 5,\n\n    Down = TouchStart | MouseDown,\n    Up = TouchEnd | MouseUp,\n}\n\nexport class GestureEventDispatcher extends EventDispatcher {\n    private flags: GestureEventDispatcherFlags = 0;\n    private onTouchStartSub: EventDispatcherSubscription | null = null;\n    private onTouchEndSub: EventDispatcherSubscription | null = null;\n    private onMouseDownSub: EventDispatcherSubscription | null = null;\n    private onMouseUpSub: EventDispatcherSubscription | null = null;\n    private onClickSub: EventDispatcherSubscription | null = null;\n\n    private onTouchStart = (ev: SyntheticUIEvent<any>) => {\n        this.flags |= GestureEventDispatcherFlags.TouchStart | GestureEventDispatcherFlags.IgnoreMouseDown;\n        this.onTouchEndSub = NativeEventDispatchers.touchend.subscribe(this.onTouchEnd);\n    }\n\n    private onMouseDown = (ev: SyntheticUIEvent<any>) => {\n        if (this.flags &\n            (GestureEventDispatcherFlags.TouchStart | GestureEventDispatcherFlags.IgnoreMouseDown)) {\n            this.flags &= ~GestureEventDispatcherFlags.IgnoreMouseDown;\n            return;\n        }\n        this.flags |= GestureEventDispatcherFlags.MouseDown;\n        this.onMouseUpSub = NativeEventDispatchers.mouseup.subscribe(this.onMouseUp);\n    }\n\n    private onTouchEnd = (ev: SyntheticUIEvent<any>) => {\n        this.flags |= GestureEventDispatcherFlags.IgnoreClick;\n        this.flags &= ~GestureEventDispatcherFlags.TouchStart;\n        this.onTouchEndSub!.cancel();\n        this.onTouchEndSub = null;\n        this.emit(ev);\n    }\n\n    private onMouseUp = (ev: SyntheticUIEvent<any>) => {\n        if (!(this.flags & GestureEventDispatcherFlags.MouseDown)) {\n            return;\n        }\n        this.flags |= GestureEventDispatcherFlags.IgnoreClick;\n        this.flags &= ~GestureEventDispatcherFlags.MouseUp;\n        this.onMouseUpSub!.cancel();\n        this.onMouseUpSub = null;\n        this.emit(ev);\n    }\n\n    private onClick = (ev: SyntheticUIEvent<any>) => {\n        if (this.flags & GestureEventDispatcherFlags.IgnoreClick) {\n            this.flags &= ~GestureEventDispatcherFlags.IgnoreClick;\n            return;\n        }\n        this.emit(ev);\n    }\n\n    emit(ev: SyntheticUIEvent<any>): void {\n        const subs = this._nextSubscription;\n        const handlers = accumulateDispatchTargets(ev.target as Element, this);\n\n        let s: SyntheticGestureTapEvent | undefined;\n        if (handlers || subs) {\n            s = new SyntheticGestureTapEvent(this, 0, null, ev.target, Date.now(), 0);\n        }\n\n        if (handlers.length > 0) {\n            dispatchEvent(handlers, s!, true);\n        }\n\n        if (s) {\n            this.dispatchEventToSubscribers(s, 0);\n        }\n    }\n\n    activate() {\n        this.onMouseDownSub = NativeEventDispatchers.mousedown.subscribe(this.onMouseDown);\n        this.onTouchStartSub = NativeEventDispatchers.touchstart.subscribe(this.onTouchStart);\n        this.onClickSub = NativeEventDispatchers.click.subscribe(this.onClick);\n    }\n\n    deactivate() {\n        this.onMouseDownSub!.cancel();\n        this.onTouchStartSub!.cancel();\n        this.onClickSub!.cancel();\n\n        this.onMouseDownSub = null;\n        this.onTouchStartSub = null;\n        this.onClickSub = null;\n    }\n}\n\nexport const GestureEventDispatchers = {\n    gesture: new GestureEventDispatcher(),\n};\n\nexport const GestureEvents = {\n    onGesture: function createAbortEventHandler(\n        handler: (ev: SyntheticEvent<any>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<any>> {\n        return createEventHandler<SyntheticEvent<any>>(GestureEventDispatchers.gesture, handler, capture);\n    },\n};\n\nclass Box extends Component<{\n    depth: number,\n}> {\n    private clickCounter = 0;\n\n    private onGesture = GestureEvents.onGesture((ev) => {\n        this.clickCounter++;\n        this.invalidate();\n    });\n\n    render(): VNode<any> {\n        const { depth } = this.props;\n        return $h(\"div\", \"Box\")\n            .events({ gesture: this.onGesture })\n            .children([\n                $h(\"div\", \"ClickCounter\").children(`Clicks: ${this.clickCounter}`),\n                (depth > 0) ? $c(Box, {\n                    depth: depth - 1,\n                }) : null,\n            ]);\n    }\n}\n\nrender(\n    $h(\"div\").children([\n        $c(Box, { depth: 1 }),\n    ]),\n    document.getElementById(\"app\") !);\n","\nimport { isVisible, addVisibilityObserver } from \"../common/visibility\";\nimport { updateComponent } from \"../vdom/implementation\";\nimport { FrameTasksGroupFlags, FrameTasksGroup } from \"./frame_tasks_group\";\nimport { executeDOMReaders } from \"./dom_reader\";\nimport { incrementClock } from \"./clock\";\nimport { scheduleMicrotask } from \"./microtask\";\nimport {\n    prepareAnimatedComponents, updateAnimatedComponents, executeAnimations, shouldRequestNextFrameForAnimations,\n} from \"./animation\";\n\nlet _pending = false;\nlet _currentFrameReady = false;\nlet _currentFrame = new FrameTasksGroup();\nlet _nextFrame = new FrameTasksGroup();\nlet _frameStartTime = 0;\n\n_currentFrame._rwLock();\n\nfunction _updateFrameStartTime(time?: number): void {\n    if (__IVI_BROWSER__) {\n        _frameStartTime = (time === undefined ? performance.now() : time) / 1000;\n    } else {\n        _frameStartTime = time === undefined ? Date.now() : time / 1000;\n    }\n}\n\n/**\n * @returns current frame start time.\n */\nexport function frameStartTime(): number {\n    return _frameStartTime;\n}\n\n_updateFrameStartTime();\n\nfunction _requestNextFrame(): void {\n    if (_pending) {\n        if (__IVI_BROWSER__) {\n            requestAnimationFrame(handleNextFrame);\n        } else {\n            setImmediate(handleNextFrame);\n        }\n    }\n}\n\n/**\n * Trigger next frame tasks execution.\n */\nexport function requestNextFrame(): void {\n    if (!_pending) {\n        _pending = true;\n        scheduleMicrotask(_requestNextFrame);\n    }\n}\n\n/**\n * Frame tasks scheduler event handler.\n *\n * @param t Current time.\n */\nfunction handleNextFrame(time?: number): void {\n    _updateFrameStartTime(time);\n\n    let tasks: (() => void)[];\n    let i: number;\n\n    _pending = false;\n    _currentFrameReady = true;\n\n    const frame = _nextFrame;\n    _nextFrame = _currentFrame;\n    _currentFrame = frame;\n\n    _currentFrame._rwUnlock();\n    _nextFrame._rwUnlock();\n\n    // Mark all animated components as dirty. But don't update them until all write tasks are finished. It is possible\n    // that we won't need to update component if it is removed, or it is already updated.\n    if (isVisible()) {\n        prepareAnimatedComponents();\n    }\n\n    executeDOMReaders();\n\n    // Perform read/write batching. Start with executing read DOM tasks, then update components, execute write DOM tasks\n    // and repeat until all read and write tasks are executed.\n    do {\n        while (frame._flags & FrameTasksGroupFlags.Read) {\n            frame._flags &= ~FrameTasksGroupFlags.Read;\n            tasks = frame._readTasks!;\n            frame._readTasks = null;\n\n            for (i = 0; i < tasks.length; i++) {\n                tasks[i]();\n            }\n        }\n\n        while (frame._flags & (FrameTasksGroupFlags.Component | FrameTasksGroupFlags.Write)) {\n            if (frame._flags & FrameTasksGroupFlags.Write) {\n                frame._flags &= ~FrameTasksGroupFlags.Write;\n                tasks = frame._writeTasks!;\n                frame._writeTasks = null;\n                for (i = 0; i < tasks.length; i++) {\n                    tasks[i]();\n                }\n            }\n\n            if (__IVI_BROWSER__) {\n                if (frame._flags & FrameTasksGroupFlags.Component) {\n                    frame._flags &= ~FrameTasksGroupFlags.Component;\n                    const componentGroups = frame._componentTasks;\n\n                    for (i = 0; i < componentGroups.length; i++) {\n                        const componentGroup = componentGroups[i];\n                        if (componentGroup !== null) {\n                            componentGroups[i] = null;\n                            for (let j = 0; j < componentGroup.length; j++) {\n                                updateComponent(componentGroup[j]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        if (isVisible()) {\n            updateAnimatedComponents();\n        }\n    } while (frame._flags & (\n        FrameTasksGroupFlags.Component |\n        FrameTasksGroupFlags.Write |\n        FrameTasksGroupFlags.Read\n    ));\n\n    _currentFrameReady = false;\n\n    // Lock current frame from adding read and write tasks in debug mode.\n    _currentFrame._rwLock();\n\n    if (isVisible()) {\n        executeAnimations();\n    }\n\n    // Perform tasks that should be executed when all DOM ops are finished.\n    while ((frame._flags & FrameTasksGroupFlags.After) !== 0) {\n        frame._flags &= ~FrameTasksGroupFlags.After;\n\n        tasks = frame._afterTasks!;\n        frame._afterTasks = null;\n        for (i = 0; i < tasks.length; i++) {\n            tasks[i]();\n        }\n    }\n\n    if (shouldRequestNextFrameForAnimations()) {\n        requestNextFrame();\n    }\n\n    incrementClock();\n}\n\n/**\n * Get task list for the next frame.\n *\n * @returns Frame tasks group.\n */\nexport function nextFrame(): FrameTasksGroup {\n    requestNextFrame();\n    return _nextFrame;\n}\n\n/**\n * Get task list for the current frame.\n *\n * @returns Frame tasks group.\n */\nexport function currentFrame(): FrameTasksGroup {\n    if (_currentFrameReady) {\n        return _currentFrame;\n    }\n    return nextFrame();\n}\n\n/**\n * Perform a synchronous frame update.\n */\nexport function syncFrameUpdate(): void {\n    handleNextFrame();\n}\n\nfunction handleVisibilityChange(visible: boolean): void {\n    if (visible) {\n        if (shouldRequestNextFrameForAnimations()) {\n            requestNextFrame();\n        }\n    }\n}\n\nif (__IVI_BROWSER__) {\n    addVisibilityObserver(handleVisibilityChange);\n}\n","import { ComponentFlags } from \"../vdom/flags\";\nimport { Component } from \"../vdom/component\";\nimport { updateComponent } from \"../vdom/implementation\";\nimport { requestNextFrame } from \"./frame\";\n\nexport type Animation = () => boolean | undefined;\n\nconst _animations: Animation[] = [];\nconst _animatedComponents: Component<any>[] = [];\n\n/**\n * Add component to the animated list.\n *\n * @param component\n */\nexport function startComponentAnimation(component: Component<any>): void {\n    if (__IVI_BROWSER__) {\n        requestNextFrame();\n        component.flags |= ComponentFlags.Animated | ComponentFlags.InAnimationQueue;\n        _animatedComponents.push(component);\n    }\n}\n\n/**\n * Remove component from the animated list.\n *\n * @param component\n */\nexport function stopComponentAnimation(component: Component<any>): void {\n    if (__IVI_BROWSER__) {\n        component.flags |= ComponentFlags.Animated;\n    }\n}\n\n/**\n * Prepare animated components by marking them dirty.\n */\nexport function prepareAnimatedComponents(): void {\n    if (__IVI_BROWSER__) {\n        for (let i = 0; i < _animatedComponents.length; i++) {\n            _animatedComponents[i].flags |= ComponentFlags.DirtyState;\n        }\n    }\n}\n\n/**\n * Update animated components.\n */\nexport function updateAnimatedComponents(): void {\n    if (__IVI_BROWSER__) {\n        for (let i = 0; i < _animatedComponents.length; i++) {\n            const component = _animatedComponents[i];\n            if (component.flags & ComponentFlags.Animated) {\n                updateComponent(component);\n            } else {\n                component.flags &= ~ComponentFlags.InAnimationQueue;\n                if (i === _animatedComponents.length) {\n                    _animatedComponents.pop();\n                } else {\n                    _animatedComponents[i--] = _animatedComponents.pop() !;\n                }\n            }\n        }\n    }\n}\n\n/**\n * Add animation.\n *\n * @param animation Animation task.\n */\nexport function addAnimation(animation: Animation): void {\n    if (__IVI_BROWSER__) {\n        _animations.push(animation);\n    }\n}\n\n/**\n * Execute animations.\n */\nexport function executeAnimations(): void {\n    if (__IVI_BROWSER__) {\n        for (let i = 0; i < _animations.length; i++) {\n            const animation = _animations[i];\n            if (animation()) {\n                if (i === _animations.length) {\n                    _animations.pop();\n                } else {\n                    _animations[i--] = _animations.pop() !;\n                }\n            }\n        }\n    }\n}\n\nexport function shouldRequestNextFrameForAnimations(): boolean {\n    if (__IVI_BROWSER__) {\n        return (\n            (_animatedComponents.length > 0) ||\n            (_animations.length > 0)\n        );\n    }\n    return false;\n}\n","/**\n * DO NOT MOVE THIS FUNCTIONS TO SEPARATE MODULES!\n *\n * There are so many circular dependencies between functions in this module, so just leave it all here instead of\n * creating many circular dependencies between JS modules.\n *\n * Code in this module is working only in browser environments.\n *\n * Tags:\n *\n * #entry - Entry point, function that will be invoked just once when the reconciliation process is started with a root\n *   render, or when scheduler updates invalidated components. Entry point is a good place to inject tryCatch statements\n *   to improve stack trace messages etc.\n * #augment - Function that is used only for augmenting.\n * #component - Component related functions.\n */\n\nimport { SVG_NAMESPACE, setInnerHTML } from \"../common/dom\";\nimport { DevModeFlags, DEV_MODE, perfMarkBegin, perfMarkEnd, getFunctionName } from \"../dev_mode/dev_mode\";\nimport { devModeOnError, devModeOnComponentCreated, devModeOnComponentDisposed } from \"../dev_mode/hooks\";\nimport { injectScreenOfDeath } from \"../dev_mode/screen_of_death\";\nimport {\n    setInitialNestingState, pushNestingState, restoreNestingState, checkNestingViolation, nestingStateAncestorFlags,\n    nestingStateParentTagName, AncestorFlags, AncestorFlagsByTagName,\n} from \"../dev_mode/html_nesting_rules\";\nimport {\n    stackTracePushComponent, stackTracePopComponent, stackTraceReset, stackTraceAugment,\n    getFunctionalComponentStackTrace,\n} from \"../dev_mode/stack_trace\";\nimport { VNodeFlags, ComponentFlags } from \"./flags\";\nimport { VNode, getDOMInstanceFromVNode } from \"./vnode\";\nimport { ElementDescriptor } from \"./element_descriptor\";\nimport { $t } from \"./vnode_builder\";\nimport {\n    ComponentClass, ComponentFunction, Component, registerComponent, unregisterComponent, getDOMInstanceFromComponent,\n} from \"./component\";\nimport { Context } from \"./context\";\nimport { syncDOMProps, syncClassName, syncStyle } from \"./sync_dom\";\nimport { syncEvents, removeEvents } from \"../events/sync_events\";\n\n/**\n * Begin component perf mark.\n *\n * @param debugId\n * @param method\n */\nfunction componentPerfMarkBegin(debugId: number, method: string): void {\n    if (__IVI_DEV__) {\n        if (DEV_MODE & DevModeFlags.EnableComponentPerformanceProfiling) {\n            perfMarkBegin(`${debugId}::${method}`);\n        }\n    }\n}\n\n/**\n * End component perf mark.\n *\n * @param debugId\n * @param method\n * @param component\n */\nfunction componentPerfMarkEnd(\n    debugId: number,\n    method: string,\n    instance: false,\n    component: ComponentFunction<any>,\n): void;\nfunction componentPerfMarkEnd(\n    debugId: number,\n    method: string,\n    instance: true,\n    component: Component<any>,\n): void;\nfunction componentPerfMarkEnd(\n    debugId: number,\n    method: string,\n    instance: boolean,\n    component: Component<any> | ComponentFunction<any>,\n): void {\n    if (__IVI_DEV__) {\n        if (DEV_MODE & DevModeFlags.EnableComponentPerformanceProfiling) {\n            perfMarkEnd(\n                `${instance ? \"[C]\" : \"[F]\"}${getFunctionName(\n                    (instance ? component.constructor : component) as Function,\n                )}::${method}`,\n                `${debugId}::${method}`,\n            );\n        }\n    }\n}\n\n/**\n * Traverses tree to the body and calculates `AncestorFlags`.\n *\n * @param element\n * @returns Ancestor Flags.\n */\nfunction ancestorFlags(element: Element): AncestorFlags {\n    if (__IVI_DEV__) {\n        let result = 0;\n        while (element && (element !== document.body)) {\n            result |= AncestorFlagsByTagName[element.tagName.toLowerCase()];\n            element = element.parentElement;\n        }\n        return result;\n    }\n\n    return 0;\n}\n\n/**\n * Render VNode entry point tryCatch wrapper.\n *\n * #entry\n *\n * @param container Container Node.\n * @param refChild Reference to the next Node, when it is `null` child will be inserted at the end.\n * @param vnode VNode.\n * @param context Current context.\n * @param owner Owning component.\n * @returns Rendered instance.\n */\nexport function renderVNode(\n    parent: Node,\n    refChild: Node | null,\n    vnode: VNode<any>,\n    context: Context,\n    owner?: Component<any>,\n): Node | Component<any> {\n    if (__IVI_DEV__) {\n        if ((parent as Element).tagName) {\n            setInitialNestingState((parent as Element).tagName.toLowerCase(), ancestorFlags(parent as Element));\n        } else {\n            setInitialNestingState(\"\", 0);\n        }\n\n        try {\n            return _renderVNode(parent, refChild, vnode, context, owner);\n        } catch (e) {\n            stackTraceAugment(e);\n            devModeOnError(e);\n            injectScreenOfDeath(`ivi Error: ${e.message}`, e.stack);\n            stackTraceReset();\n            throw e;\n        }\n    }\n    return _renderVNode(parent, refChild, vnode, context, owner);\n}\n\n/**\n * Render VNode entry point. Renders VNode into container and invokes `attached` lifecycle methods after VNode is\n * inserted into container.\n *\n * #entry\n *\n * @param container Container Node.\n * @param refChild Reference to the next Node, when it is `null` child will be inserted at the end.\n * @param vnode VNode.\n * @param context Current context.\n * @param owner Owning component.\n * @returns Rendered DOM Node.\n */\nfunction _renderVNode(\n    container: Node,\n    refChild: Node | null,\n    vnode: VNode<any>,\n    context: Context,\n    owner?: Component<any>,\n): Node | Component<any> {\n    return vNodeRenderInto(container, refChild, vnode, context, owner);\n}\n\n/**\n * Sync VNode entry point tryCatch wrapper.\n *\n * @param parent Parent node.\n * @param a Old VNode.\n * @param b New VNode.\n * @param context Current context.\n * @param owner Owning component.\n * @returns Synced DOM Node. When VNodes are synced and they aren't compatible, old DOM Node will be replaced with a new\n * DOM Node.\n */\nexport function syncVNode(\n    parent: Node,\n    a: VNode<any>,\n    b: VNode<any>,\n    context: Context,\n    owner?: Component<any>,\n): Node | Component<any> {\n    if (__IVI_DEV__) {\n        if ((parent as Element).tagName) {\n            setInitialNestingState((parent as Element).tagName.toLowerCase(), ancestorFlags(parent as Element));\n        } else {\n            setInitialNestingState(\"\", 0);\n        }\n\n        try {\n            return _syncVNode(parent, a, b, context, owner);\n        } catch (e) {\n            stackTraceAugment(e);\n            devModeOnError(e);\n            injectScreenOfDeath(`ivi Error: ${e.message}`, e.stack);\n            stackTraceReset();\n            throw e;\n        }\n    }\n    return _syncVNode(parent, a, b, context, owner);\n}\n\n/**\n * Sync VNode entry point. Sync VNode with a new one or replace when they aren't compatible.\n *\n * #entry\n *\n * @param parent Parent node.\n * @param a Old VNode.\n * @param b New VNode.\n * @param context Current context.\n * @param owner Owning component.\n * @returns Synced DOM Node. When VNodes are synced and they aren't compatible, old DOM Node will be replaced with a new\n * DOM Node.\n */\nfunction _syncVNode(\n    parent: Node,\n    a: VNode<any>,\n    b: VNode<any>,\n    context: Context,\n    owner?: Component<any>,\n): Node | Component<any> {\n    return vNodeSyncOrReplace(parent, a, b, context, owner);\n}\n\n/**\n * Remove VNode entry point tryCatch wrapper.\n *\n * #entry\n *\n * @param parent Parent DOM node.\n * @param node VNode element to remove.\n */\nexport function removeVNode(parent: Node, node: VNode<any>): void {\n    if (__IVI_DEV__) {\n        try {\n            _removeVNode(parent, node);\n            return;\n        } catch (e) {\n            stackTraceAugment(e);\n            devModeOnError(e);\n            injectScreenOfDeath(`ivi Error: ${e.message}`, e.stack);\n            stackTraceReset();\n            throw e;\n        }\n    }\n    _removeVNode(parent, node);\n}\n\n/**\n * Remove VNode entry point.\n *\n * #entry\n *\n * @param parent Parent DOM node.\n * @param node VNode element to remove.\n */\nfunction _removeVNode(parent: Node, node: VNode<any>): void {\n    parent.removeChild(getDOMInstanceFromVNode(node) !);\n    vNodeDetach(node);\n}\n\n/**\n * Augment entry point tryCatch wrapper.\n *\n * #entry\n * #augment\n *\n * @param parent Parent DOM Node.\n * @param node DOM Node.\n * @param vnode Virtual DOM Node.\n * @param context Context.\n * @param owner Owner.\n */\nexport function augmentVNode(\n    parent: Node,\n    node: Node | null,\n    vnode: VNode<any>,\n    context: Context,\n    owner?: Component<any>,\n): void {\n    if (__IVI_DEV__) {\n        if ((parent as Element).tagName) {\n            setInitialNestingState((parent as Element).tagName.toLowerCase(), ancestorFlags(parent as Element));\n        } else {\n            setInitialNestingState(\"\", 0);\n        }\n\n        try {\n            _augmentVNode(parent, node, vnode, context, owner);\n            return;\n        } catch (e) {\n            stackTraceAugment(e);\n            devModeOnError(e);\n            injectScreenOfDeath(`ivi Error: ${e.message}`, e.stack);\n            stackTraceReset();\n            throw e;\n        }\n    }\n    _augmentVNode(parent, node, vnode, context, owner);\n}\n\n/**\n * Augment entry point. Augments DOM tree with a Virtual DOM tree and performs attaching.\n *\n * #entry\n * #augment\n *\n * @param parent Parent DOM Node.\n * @param node DOM Node.\n * @param vnode Virtual DOM Node.\n * @param context Context.\n * @param owner Owner.\n */\nfunction _augmentVNode(\n    parent: Node,\n    node: Node | null,\n    vnode: VNode<any>,\n    context: Context,\n    owner?: Component<any>,\n): void {\n    vNodeAugment(parent, node, vnode, context, owner);\n}\n\n/**\n * Update Component entry point tryCatch wrapper.\n *\n * #entry\n * #component\n *\n * @param component Component to update.\n * @returns DOM Node.\n */\nexport function updateComponent<P>(component: Component<P>): void {\n    if (__IVI_DEV__) {\n        try {\n            stackTracePushComponent((component as Object).constructor as ComponentClass<any>, component);\n            _updateComponent(component);\n            stackTracePopComponent();\n            return;\n        } catch (e) {\n            stackTraceAugment(e);\n            devModeOnError(e);\n            injectScreenOfDeath(`ivi Error: ${e.message}`, e.stack);\n            stackTraceReset();\n            throw e;\n        }\n    }\n    _updateComponent(component);\n}\n\n/**\n * Update Component.\n *\n * #entry\n *\n * @param component Component to update.\n * @returns DOM Node.\n */\nfunction _updateComponent<P>(component: Component<P>): void {\n    const flags = component.flags;\n\n    if ((flags & ComponentFlags.Attached) && (flags & ComponentFlags.Dirty)) {\n        componentPerfMarkBegin(component._debugId, \"update\");\n\n        const oldRoot = component.root!;\n\n        componentWillUpdate(component);\n\n        if (flags & (ComponentFlags.DirtyParentContext | ComponentFlags.DirtyContext)) {\n            componentUpdateContext(component);\n        }\n\n        if ((flags & (ComponentFlags.DirtyProps | ComponentFlags.DirtyState)) ||\n            (flags & (ComponentFlags.DirtyParentContext | ComponentFlags.UsingContext)) ===\n            (ComponentFlags.DirtyParentContext | ComponentFlags.UsingContext)) {\n            if (__IVI_DEV__) {\n                if ((component._parentDOMNode as Element).tagName) {\n                    setInitialNestingState((component._parentDOMNode as Element).tagName.toLowerCase(),\n                        component._ancestorFlags);\n                } else {\n                    setInitialNestingState(\"\", component._ancestorFlags);\n                }\n            }\n            const parentNode = component._parentDOMNode;\n            const newRoot = componentClassRender(component);\n            vNodeSyncOrReplace(parentNode!, oldRoot, newRoot, component._context);\n            component.flags &= ~(ComponentFlags.Dirty | ComponentFlags.InUpdateQueue);\n        } else if (oldRoot) { // (flags & (ComponentFlags.DirtyContext | ComponentFlags.DirtyParentContext))\n            vNodePropagateNewContext(component._parentDOMNode!, oldRoot, component._context, component);\n        }\n\n        componentDidUpdate(component);\n        componentPerfMarkEnd(component._debugId, \"update\", true, component);\n    }\n}\n\n/**\n * Update a component function.\n *\n * #component\n *\n * @param parent Parent DOM Node.\n * @param a Old VNode.\n * @param b New VNode.\n * @param context Current Context.\n * @param owner Owner.\n * @returns DOM Node.\n */\nfunction _updateComponentFunction(\n    parent: Node,\n    a: VNode<any>,\n    b: VNode<any>,\n    context: Context,\n    owner?: Component<any>,\n): Node | Component<any> {\n    let instance: Node | Component<any>;\n    const fn = b._tag as ComponentFunction<any>;\n\n    componentPerfMarkBegin(b._debugId, \"update\");\n\n    if (a === b || !fn.isPropsChanged || fn.isPropsChanged(a._props, b._props)) {\n        const oldRoot = a._children as VNode<any>;\n        const newRoot = b._children = componentFunctionRender(fn, b._props, context);\n        instance = vNodeSyncOrReplace(parent, oldRoot, newRoot, context, owner);\n    } else {\n        b._children = a._children;\n        instance = a._instance!;\n    }\n\n    componentPerfMarkEnd(b._debugId, \"update\", false, fn);\n\n    b._instance = instance;\n    return instance;\n}\n\n/**\n * Recursively attach all nodes.\n *\n * @param vnode VNode.\n */\nfunction vNodeAttach(vnode: VNode<any>): void {\n    const flags = vnode._flags;\n\n    if (flags & VNodeFlags.Component) {\n        if (flags & VNodeFlags.ComponentClass) {\n            const component = vnode._instance as Component<any>;\n            stackTracePushComponent(vnode._tag as ComponentClass<any>, component);\n            componentPerfMarkBegin(component._debugId, \"attach\");\n\n            if (__IVI_DEV__) {\n                if (component.flags & ComponentFlags.Attached) {\n                    throw new Error(\"Failed to attach Component: component is already attached.\");\n                }\n            }\n\n            component.flags |= ComponentFlags.Attached;\n            componentAttached(component);\n            vNodeAttach(component.root!);\n            componentPerfMarkEnd(component._debugId, \"attach\", true, component);\n        } else { // (flags & VNodeFlags.ComponentFunction)\n            stackTracePushComponent(vnode._tag as ComponentFunction<any>);\n            componentPerfMarkBegin(vnode._debugId, \"attach\");\n            vNodeAttach(vnode._children as VNode<any>);\n            componentPerfMarkEnd(vnode._debugId, \"attach\", false, vnode._tag as ComponentFunction<any>);\n        }\n        stackTracePopComponent();\n    } else if (!(flags & (VNodeFlags.InputElement | VNodeFlags.MediaElement))) {\n        let children = vnode._children;\n        if (children !== null && (flags & (VNodeFlags.ChildrenVNode | VNodeFlags.ChildrenArray))) {\n            if (flags & VNodeFlags.ChildrenArray) {\n                children = children as VNode<any>[];\n                for (let i = 0; i < children.length; i++) {\n                    vNodeAttach(children[i]);\n                }\n            } else {\n                vNodeAttach(children as VNode<any>);\n            }\n        }\n    }\n}\n\n/**\n * Recursively detach all nodes.\n *\n * @param vnode VNode.\n */\nfunction vNodeDetach(vnode: VNode<any>): void {\n    const flags = vnode._flags;\n    if (flags & VNodeFlags.Component) {\n        if (flags & VNodeFlags.ComponentClass) {\n            const component = vnode._instance as Component<any>;\n            stackTracePushComponent(vnode._tag as ComponentClass<any>, component);\n            componentPerfMarkBegin(component._debugId, \"detach\");\n\n            if (__IVI_DEV__) {\n                if (!(component.flags & ComponentFlags.Attached)) {\n                    throw new Error(\"Failed to detach Component: component is already detached.\");\n                }\n            }\n            vNodeDetach(component.root!);\n            component.flags &= ~(ComponentFlags.Attached | ComponentFlags.Animated);\n            componentDetached(component);\n            componentPerfMarkEnd(component._debugId, \"detach\", true, component);\n            unregisterComponent(component);\n            devModeOnComponentDisposed(component);\n        } else { // (flags & VNodeFlags.ComponentFunction)\n            stackTracePushComponent(vnode._tag as ComponentFunction<any>);\n            componentPerfMarkBegin(vnode._debugId, \"detach\");\n            vNodeDetach(vnode._children as VNode<any>);\n            componentPerfMarkEnd(vnode._debugId, \"detach\", false, vnode._tag as ComponentFunction<any>);\n        }\n        stackTracePopComponent();\n    } else if (flags & VNodeFlags.Element) {\n        if (!(flags & (VNodeFlags.InputElement | VNodeFlags.MediaElement))) {\n            let children = vnode._children;\n            if (children !== null && (flags & (VNodeFlags.ChildrenVNode | VNodeFlags.ChildrenArray))) {\n                if (flags & VNodeFlags.ChildrenArray) {\n                    children = children as VNode<any>[];\n                    for (let i = 0; i < children.length; i++) {\n                        vNodeDetach(children[i]);\n                    }\n                } else {\n                    vNodeDetach(children as VNode<any>);\n                }\n            }\n        }\n        if (vnode._events) {\n            removeEvents(vnode._events);\n        }\n    }\n\n    if (vnode._ref) {\n        vnode._ref(null);\n    }\n}\n\n/**\n * Detach all nodes and its subtrees.\n *\n * @param vnodes Array of VNodes.\n */\nfunction vNodeDetachAll(vnodes: VNode<any>[]): void {\n    for (let i = 0; i < vnodes.length; i++) {\n        vNodeDetach(vnodes[i]);\n    }\n}\n\n/**\n * Recursively propagate new context.\n *\n * @param vnode VNode.\n * @param context New context.\n */\nfunction vNodePropagateNewContext(parent: Node, vnode: VNode<any>, context: Context, owner?: Component<any>): void {\n    const flags = vnode._flags;\n    if (flags & VNodeFlags.Component) {\n        if (flags & VNodeFlags.ComponentClass) {\n            const component = vnode._instance as Component<any>;\n            stackTracePushComponent(vnode._tag as ComponentClass<any>, component);\n            componentPerfMarkBegin(component._debugId, \"propagateContext\");\n            componentUpdateParentContext(component, context);\n            _updateComponent(component);\n            componentPerfMarkEnd(component._debugId, \"propagateContext\", true, component);\n        } else { // (flags & VNodeFlags.ComponentFunction)\n            const fn = vnode._tag as ComponentFunction<any>;\n            stackTracePushComponent(vnode._tag as ComponentFunction<any>);\n            componentPerfMarkBegin(vnode._debugId, \"propagateContext\");\n            // Optimization that checks if function is using context parameter. When function doesn't use context, it\n            // means that we can ignore re-renders when context is changed, and just propagate a new context through\n            // existing subtree.\n            if (fn.length < 2) {\n                vNodePropagateNewContext(parent, vnode._children as VNode<any>, context, owner);\n            } else {\n                _updateComponentFunction(parent, vnode._children as VNode<any>, vnode._children as VNode<any>, context,\n                    owner);\n            }\n            componentPerfMarkEnd(vnode._debugId, \"propagateContext\", false, fn);\n        }\n        stackTracePopComponent();\n    } else if (!(flags & (VNodeFlags.InputElement | VNodeFlags.MediaElement))) {\n        let children = vnode._children;\n        if (children !== null && (flags & (VNodeFlags.ChildrenVNode | VNodeFlags.ChildrenArray))) {\n            if (flags & VNodeFlags.ChildrenArray) {\n                children = children as VNode<any>[];\n                for (let i = 0; i < children.length; i++) {\n                    vNodePropagateNewContext(parent, children[i], context, owner);\n                }\n            } else {\n                vNodePropagateNewContext(parent, children as VNode<any>, context, owner);\n            }\n        }\n    }\n}\n\n/**\n * Move node.\n *\n * @param parent Parent DOM node.\n * @param node VNode element to move.\n * @param nextRef Reference to the next node, if it is null, node will be moved to the end.\n */\nfunction vNodeMoveChild(parent: Node, node: VNode<any>, nextRef: Node | null): void {\n    parent.insertBefore(getDOMInstanceFromVNode(node) !, nextRef!);\n}\n\n/**\n * Remove all children.\n *\n * `detach` lifecycle methods will be invoked for all children and their subtrees.\n *\n * @param parent Parent DOM node.\n * @param nodes Arrays of VNodes to remove.\n */\nfunction vNodeRemoveAllChildren(parent: Node, nodes: VNode<any>[]): void {\n    parent.textContent = \"\";\n    vNodeDetachAll(nodes);\n}\n\n/**\n * Remove child.\n *\n * `detach` lifecycle methods will be invoked for removed node and its subtree.\n *\n * @param parent Parent DOM node.\n * @param node VNode element to remove.\n */\nfunction vNodeRemoveChild(parent: Node, node: VNode<any>): void {\n    parent.removeChild(getDOMInstanceFromVNode(node) !);\n    vNodeDetach(node);\n}\n\n/**\n * Assign a new parent context to a component.\n *\n * Reference equality is used to check if context is changed, all context objects should be immutable.\n *\n * #component\n *\n * @param component Component.\n * @param newContext New Context to assign.\n */\nfunction componentUpdateParentContext<P>(component: Component<P>, newParentContext: Context): void {\n    if (component._parentContext !== newParentContext) {\n        component.flags |= ComponentFlags.DirtyParentContext;\n        const oldContext = component._parentContext;\n        component._parentContext = newParentContext;\n        component.newContextReceived(oldContext, newParentContext);\n    }\n}\n\n/**\n * Update current context of a component.\n *\n * #component\n *\n * @param component Component.\n */\nfunction componentUpdateContext<P>(component: Component<P>): void {\n    component.flags &= ~(ComponentFlags.CheckUsingProps | ComponentFlags.ContextUsingProps);\n    const contextData = component.updateContext();\n    component.flags |= (component.flags & ComponentFlags.CheckUsingProps) << 1;\n    const newContext = contextData ? new Context(contextData, component._parentContext) : component._parentContext;\n    component._context = newContext;\n}\n\n/**\n * Assign a new props to a component.\n *\n * #component\n *\n * @param component Component.\n * @param newProps New props to assign.\n */\nfunction componentUpdateProps<P>(component: Component<P>, newProps: P): void {\n    const oldProps = component._props;\n    if (component.isPropsChanged(oldProps, newProps)) {\n        component.flags |= ComponentFlags.DirtyProps;\n\n        component._props = newProps;\n\n        // There is no reason to call `didReceiveNewProps` when props aren't changed, even when they are reassigned\n        // later to reduce memory usage.\n        component.newPropsReceived(oldProps, newProps);\n        if (component.flags & ComponentFlags.ContextUsingProps) {\n            component.flags |= ComponentFlags.DirtyContext;\n        }\n    } else {\n        // Reassign props even when they aren't changed to reduce overall memory usage.\n        //\n        // New value always stays alive because it is referenced from virtual dom tree, so instead of keeping in memory\n        // two values even when they are the same, we just always reassign it to the new value.\n        component._props = newProps;\n    }\n}\n\n/**\n * Invoke `component.willUpdate` method.\n *\n * #component\n *\n * @param component\n */\nfunction componentWillUpdate<P>(component: Component<P>): void {\n    component.beforeUpdate();\n}\n\n/**\n * Invoke `component.didUpdate` method.\n *\n * #component\n *\n * @param component\n */\nfunction componentDidUpdate<P>(component: Component<P>): void {\n    component.updated();\n}\n\n/**\n * Invoke `component.attached` method.\n *\n * #component\n *\n * @param component\n */\nfunction componentAttached<P>(component: Component<P>): void {\n    component.attached();\n}\n\n/**\n * Invoke `component.detached` method.\n *\n * #component\n *\n * @param component\n */\nfunction componentDetached<P>(component: Component<P>): void {\n    component.detached();\n}\n\n/**\n * Render a component class instance and return root VNode.\n *\n * #component\n *\n * @param component Component.\n * @returns Root VNode.\n */\nfunction componentClassRender<P>(component: Component<P>): VNode<any> {\n    component.flags &= ~(ComponentFlags.CheckUsingContext | ComponentFlags.UsingContext);\n    const root = component.root = component.render() || $t(\"\");\n    component.flags |= (component.flags & ComponentFlags.CheckUsingContext) << 1;\n    return root;\n}\n\n/**\n * Render a component function instance and return root VNode.\n *\n * #component\n *\n * @param component Component function.\n * @param props Props.\n * @param context Context.\n * @returns Root VNode.\n */\nfunction componentFunctionRender<P>(component: ComponentFunction<P>, props: P, context?: Context): VNode<any> {\n    return component(props, context) || $t(\"\");\n}\n\n/**\n * Set value for HTMLInputElement.\n *\n * When value has a string type it is assigned to `value` property, otherwise it is assigned to `checked` property.\n *\n * @param input HTMLInputElement.\n * @param value Value.\n */\nfunction setHTMLInputValue(input: HTMLInputElement, value: string | boolean | null): void {\n    if (typeof value === \"string\") {\n        input.value = value;\n    } else {\n        input.checked = value as boolean;\n    }\n}\n\n/**\n * Render VNode.\n *\n * @param parent Parent DOM Node.\n * @param vnode VNode to render.\n * @param context Current context.\n * @param owner Owning component.\n * @returns Rendered DOM Node.\n */\nfunction vNodeRender(parent: Node, vnode: VNode<any>, context: Context, owner?: Component<any>): Node | Component<any> {\n    if (__IVI_DEV__) {\n        if (vnode._instance) {\n            throw new Error(\"VNode is already have a reference to an instance. VNodes can't be used mutliple times, \" +\n                \"clone VNode with `cloneVNode`, or use immutable vnodes `vnode.immutable()` for hoisted trees.\");\n        }\n\n        if (vnode._flags & VNodeFlags.Immutable) {\n            throw new Error(\"Immutable VNodes can't be used to render trees, clone an immutable tree with a \" +\n                \"`cloneVNode` function.\");\n        }\n    }\n\n    const flags = vnode._flags;\n    let instance: Node | Component<any>;\n    let childInstance: Node | Component<any>;\n    let i: number;\n    let child: VNode<any>;\n\n    if (flags & (VNodeFlags.Text | VNodeFlags.Element)) {\n        // Push nesting state and check for nesting violation.\n        const _prevNestingStateParentTagName = nestingStateParentTagName();\n        const _prevNestingStateAncestorFlags = nestingStateAncestorFlags();\n\n        if (flags & VNodeFlags.Text) {\n            pushNestingState(\"$t\");\n            checkNestingViolation();\n            instance = document.createTextNode(vnode._children as string);\n        } else { // (flags & VNodeFlags.Element)\n            pushNestingState((flags & VNodeFlags.ElementDescriptor) ?\n                (vnode._tag as ElementDescriptor<any>)._tag :\n                vnode._tag as string);\n            checkNestingViolation();\n            if (flags & VNodeFlags.ElementDescriptor) {\n                instance = (vnode._tag as ElementDescriptor<any>).createElement();\n            } else if (flags & VNodeFlags.InputElement) {\n                if (flags & VNodeFlags.TextAreaElement) {\n                    instance = document.createElement(\"textarea\");\n                } else {\n                    instance = document.createElement(\"input\");\n                    /**\n                     * #quirks\n                     *\n                     * It is important that we assign `type` before any other properties. IE11 will remove assigned\n                     * `value` when `type` is assigned.\n                     */\n                    (instance as HTMLInputElement).type = vnode._tag as string;\n                }\n            } else if (flags & VNodeFlags.SvgElement) {\n                instance = document.createElementNS(SVG_NAMESPACE, vnode._tag as string);\n            } else {\n                instance = document.createElement(vnode._tag as string);\n            }\n\n            if (vnode._props) {\n                syncDOMProps(instance as Element, flags, null, vnode._props);\n            }\n            if (vnode._className !== null) {\n                syncClassName(instance as Element, flags, null, vnode._className);\n            }\n            if (vnode._style !== null) {\n                syncStyle(instance as HTMLElement, null, vnode._style);\n            }\n            if (vnode._events) {\n                syncEvents(instance as Element, null, vnode._events);\n            }\n\n            let children = vnode._children;\n            if (children !== null) {\n                if (flags & (VNodeFlags.ChildrenBasic | VNodeFlags.ChildrenArray)) {\n                    if (flags & VNodeFlags.ChildrenBasic) {\n                        instance.textContent = children as string;\n                    } else {\n                        children = children as VNode<any>[];\n                        for (i = 0; i < children.length; i++) {\n                            child = children[i];\n                            childInstance = vNodeRender(instance, child, context, owner);\n\n                            instance.insertBefore(\n                                (child._flags & VNodeFlags.ComponentClass) ?\n                                    getDOMInstanceFromComponent(childInstance as Component<any>) :\n                                    childInstance as Node,\n                                null);\n                        }\n                    }\n                } else if (flags & VNodeFlags.ChildrenVNode) {\n                    child = children as VNode<any>;\n                    childInstance = vNodeRender(instance, child, context, owner);\n                    instance.insertBefore(\n                        (child._flags & VNodeFlags.ComponentClass) ?\n                            getDOMInstanceFromComponent(childInstance as Component<any>) :\n                            childInstance as Node,\n                        null);\n                } else if (flags & VNodeFlags.InputElement) {\n                    /**\n                     * #quirks\n                     *\n                     * It is important that input value is assigned after all properties. It prevents some issues with\n                     * rounding, etc. `value` should be assigned after `step`, `min` and `max` properties.\n                     */\n                    setHTMLInputValue(instance as HTMLInputElement, children as string | boolean);\n                } else { // (flags & VNodeFlags.UnsafeHTML)\n                    setInnerHTML((instance as Element), children as string, !!(flags & VNodeFlags.SvgElement));\n                }\n            }\n        }\n\n        restoreNestingState(_prevNestingStateParentTagName, _prevNestingStateAncestorFlags);\n    } else { // (flags & VNodeFlags.Component)\n        if (flags & VNodeFlags.ComponentClass) {\n            const component = instance = new (vnode._tag as ComponentClass<any>)(vnode._props, context, owner);\n            registerComponent(component);\n            devModeOnComponentCreated(component);\n            stackTracePushComponent(vnode._tag as ComponentClass<any>, component);\n            componentPerfMarkBegin(component._debugId, \"create\");\n            if (__IVI_DEV__) {\n                component._ancestorFlags = nestingStateAncestorFlags();\n                component._stackTrace = getFunctionalComponentStackTrace();\n            }\n            component._parentDOMNode = parent;\n            componentUpdateContext(component);\n            const root = componentClassRender(component);\n            vNodeRender(parent, root, component._context, component);\n            componentPerfMarkEnd(component._debugId, \"create\", true, component);\n        } else { // (flags & VNodeFlags.ComponentFunction)\n            stackTracePushComponent(vnode._tag as ComponentFunction<any>);\n            componentPerfMarkBegin(vnode._debugId, \"create\");\n            const root = vnode._children =\n                componentFunctionRender(vnode._tag as ComponentFunction<any>, vnode._props, context);\n            instance = vNodeRender(parent, root, context, owner);\n            componentPerfMarkEnd(vnode._debugId, \"create\", false, vnode._tag as ComponentFunction<any>);\n        }\n        stackTracePopComponent();\n    }\n\n    vnode._instance = instance;\n    if (vnode._ref) {\n        vnode._ref(instance);\n    }\n\n    return instance;\n}\n\n/**\n * Render VNode into container and invoke `attached` lifecycle methods after VNode is inserted into container.\n *\n * It is important that `attached` methods are invoked only after DOM Nodes have been inserted into container, so it\n * goes twice through the entire vnode tree, first time when everything is rendered and the second time when `attached`\n * methods are invoked.\n *\n * @param container Container Node.\n * @param refChild Reference to the next Node, when it is `null` child will be inserted at the end.\n * @param vnode VNode.\n * @param context Current context.\n * @param owner Owning component.\n * @returns Rendered DOM Node.\n */\nfunction vNodeRenderInto(\n    container: Node,\n    refChild: Node | null,\n    vnode: VNode<any>,\n    context: Context,\n    owner?: Component<any>,\n): Node | Component<any> {\n    const instance = vNodeRender(container, vnode, context, owner);\n    container.insertBefore(getDOMInstanceFromVNode(vnode) !, refChild);\n    vNodeAttach(vnode);\n    return instance;\n}\n\n/**\n * Get non-comment DOM Node. This function removes all comment DOM Nodes when searching for non-comment nodes.\n *\n * #augment\n *\n * @param parent Parent DOM Node.\n * @param node DOM Node.\n * @returns Non-comment DOM Node.\n */\nfunction getNonCommentNode(parent: Node, node: Node | null): Node | null {\n    while (node && node.nodeType === 8) {\n        const next = node.nextSibling;\n        parent.removeChild(node);\n        node = next;\n    }\n    return node;\n}\n\n/**\n * Augment DOM Node with a Virtual DOM Node.\n *\n * #augment\n *\n * @param parent Parent DOM Node.\n * @param node DOM Node.\n * @param vnode Virtual DOM Node.\n * @param context Context.\n * @param owner Owner.\n */\nfunction vNodeAugment(\n    parent: Node,\n    node: Node | null,\n    vnode: VNode<any>,\n    context: Context,\n    owner?: Component<any>,\n): Node | Component<any> {\n    if (__IVI_DEV__) {\n        if (vnode._instance) {\n            throw new Error(\"VNode is already have a reference to an instance. VNodes can't be used mutliple times, \" +\n                \"clone VNode with `cloneVNode`, or use immutable vnodes `vnode.immutable()` for hoisted trees.\");\n        }\n\n        if (vnode._flags & VNodeFlags.Immutable) {\n            throw new Error(\"Immutable VNodes can't be used to render trees, clone an immutable tree with a \" +\n                \"`cloneVNode` function.\");\n        }\n    }\n\n    let instance: Node | Component<any>;\n\n    if (node) {\n        const flags = vnode._flags;\n\n        if (flags & (VNodeFlags.Element | VNodeFlags.Text)) {\n            // Push nesting state and check for nesting violation.\n            const _prevNestingStateParentTagName = nestingStateParentTagName();\n            const _prevNestingStateAncestorFlags = nestingStateAncestorFlags();\n\n            instance = node;\n\n            if (flags & VNodeFlags.Element) {\n                if (__IVI_DEV__) {\n                    pushNestingState((flags & VNodeFlags.ElementDescriptor) ?\n                        (vnode._tag as ElementDescriptor<any>)._tag :\n                        vnode._tag as string);\n                    checkNestingViolation();\n                    if (node.nodeType !== 1) {\n                        throw new Error(`Invalid node type: expected \"1\", actual \"${node.nodeType}\".`);\n                    }\n                    if (vnode._className) {\n                        const className = (node as Element).getAttribute(\"class\");\n                        if (className !== vnode._className) {\n                            throw new Error(`Invalid class name: expected \"${vnode._className}\", ` +\n                                `actual \"${className}\".`);\n                        }\n                    }\n                    // We can't check any style properties, because browsers ignore style names they don't understand,\n                    // like style names with browser specific prefixes.\n                    if (vnode._children === null) {\n                        if (node.hasChildNodes()) {\n                            throw new Error(`Invalid children: expected \"0\" children, ` +\n                                `actual \"${node.childNodes.length}\".`);\n                        }\n                    }\n                }\n\n                if (vnode._events) {\n                    syncEvents(node as Element, null, vnode._events);\n                }\n\n                if (vnode._children !== null) {\n                    if (flags & (VNodeFlags.ChildrenArray | VNodeFlags.ChildrenVNode)) {\n                        let domChild = getNonCommentNode(node, node.firstChild);\n                        if (flags & VNodeFlags.ChildrenArray) {\n                            const children = vnode._children as VNode<any>[];\n                            for (let i = 0; i < children.length; i++) {\n                                if (__IVI_DEV__) {\n                                    if (domChild === null) {\n                                        throw new Error(`Invalid children: expected to find ${children.length} ` +\n                                            `children nodes.`);\n                                    }\n                                }\n                                vNodeAugment(node, domChild, children[i], context, owner);\n                                domChild = getNonCommentNode(node, domChild!.nextSibling);\n                            }\n                            if (__IVI_DEV__) {\n                                if (getNonCommentNode(node, domChild) !== null) {\n                                    throw new Error(`Invalid children: document contains more children nodes than ` +\n                                        `expected.`);\n                                }\n                            }\n                        } else {\n                            if (__IVI_DEV__) {\n                                if (domChild === null) {\n                                    throw new Error(`Invalid children: expected to find 1 child node.`);\n                                }\n                                if (getNonCommentNode(node, domChild.nextSibling) !== null) {\n                                    throw new Error(`Invalid children: document contains more children nodes than ` +\n                                        `expected.`);\n                                }\n                            }\n                            vNodeAugment(node, domChild, vnode._children as VNode<any>, context, owner);\n                        }\n\n                    } else if (flags & VNodeFlags.InputElement) {\n                        // Do not override input value when augmenting.\n                        //\n                        // TODO: What should be the default behavior when input element is changed before scripts\n                        // are loaded. Maybe we should fire onInput event, is synthetic event enough, or it should be\n                        // a native event?\n                        //\n                        // setHTMLInputValue(node as HTMLInputElement, vnode._children as string | boolean);\n                    }\n                }\n            } else if (__IVI_DEV__) { // (flags & VNodeFlags.Text)\n                pushNestingState(\"$t\");\n                checkNestingViolation();\n\n                if (node.nodeType !== 3) {\n                    throw new Error(`Invalid node type: expected \"3\", actual \"${node.nodeType}\".`);\n                }\n                if (node.nodeValue !== (vnode._children as number | boolean | string).toString()) {\n                    throw new Error(`Invalid text content: expected \"${vnode._children}\", actual \"${node.nodeValue}\".`);\n                }\n            }\n\n            restoreNestingState(_prevNestingStateParentTagName, _prevNestingStateAncestorFlags);\n        } else { // (flags & VNodeFlags.Component)\n            if (flags & VNodeFlags.ComponentClass) {\n                const component = instance = new (vnode._tag as ComponentClass<any>)(vnode._props, context, owner);\n                registerComponent(component);\n                devModeOnComponentCreated(component);\n                stackTracePushComponent(vnode._tag as ComponentClass<any>, component);\n\n                if (__IVI_DEV__) {\n                    component._ancestorFlags = nestingStateAncestorFlags();\n                    component._stackTrace = getFunctionalComponentStackTrace();\n                }\n\n                component._parentDOMNode = parent;\n                componentUpdateContext(component);\n                const root = componentClassRender(component);\n                vNodeAugment(parent, node, root, component._context, component);\n            } else {\n                stackTracePushComponent(vnode._tag as ComponentFunction<any>);\n                const root = vnode._children =\n                    componentFunctionRender(vnode._tag as ComponentFunction<any>, vnode._props, context);\n                instance = vNodeAugment(parent, node, root, context, owner);\n            }\n\n            stackTracePopComponent();\n        }\n    } else {\n        instance = vNodeRenderInto(parent, null, vnode, context, owner);\n    }\n\n    vnode._instance = instance;\n    if (vnode._ref) {\n        vnode._ref(instance);\n    }\n\n    return instance;\n}\n\n/**\n * Check if two nodes can be synced.\n *\n * Two nodes can be synced when their flags and tags are identical.\n *\n * @param a Old VNode.\n * @param b New VNode.\n * @return true if nodes can be synced.\n */\nfunction vNodeCanSync(a: VNode<any>, b: VNode<any>): boolean {\n    return ((a._flags & VNodeFlags.Syncable) === (b._flags & VNodeFlags.Syncable) &&\n        a._tag === b._tag &&\n        a._key === b._key);\n}\n\n/**\n * Sync two VNodes.\n *\n * When node `a` is synced with node `b`, `a` node should be considered as destroyed, and any access to it after sync\n * is an undefined behavior.\n *\n * @param parent Parent node.\n * @param a Old VNode.\n * @param b New VNode.\n * @param context Current context.\n * @param owner Owning component.\n * @returns Synced DOM Node. When VNodes are synced and they aren't compatible, old DOM Node will be replaced with a new\n * DOM Node.\n */\nfunction vNodeSync(\n    parent: Node,\n    a: VNode<any>,\n    b: VNode<any>,\n    context: Context,\n    owner?: Component<any>,\n): Node | Component<any> {\n    if (__IVI_DEV__) {\n        if (b._instance) {\n            throw new Error(\"VNode is already have a reference to an instance. VNodes can't be used mutliple times, \" +\n                \"clone VNode with `cloneVNode`, or use immutable vnodes `vnode.immutable()` for hoisted trees.\");\n        }\n\n        if (b._flags & VNodeFlags.Immutable) {\n            throw new Error(\"Immutable VNodes can't be used to render trees, clone an immutable tree with a \" +\n                \"`cloneVNode` function.\");\n        }\n    }\n\n    if (a === b) {\n        return b._instance!;\n    }\n\n    const flags = a._flags;\n    let instance = b._instance = a._instance;\n\n    if (flags & (VNodeFlags.Text | VNodeFlags.Element)) {\n        if (flags & VNodeFlags.Text) {\n            if (a._children !== b._children) {\n                (instance as Text).nodeValue = b._children as string;\n            }\n        } else { // (flags & VNodeFlags.Element)\n            if (a._props !== b._props) {\n                syncDOMProps(instance as Element, flags, a._props, b._props);\n            }\n            if (a._className !== b._className) {\n                syncClassName(instance as Element, flags, a._className, b._className);\n            }\n            if (a._style !== b._style) {\n                syncStyle(instance as HTMLElement, a._style, b._style);\n            }\n            if (a._events !== b._events) {\n                syncEvents(instance as HTMLElement, a._events, b._events);\n            }\n\n            if (a._children !== b._children) {\n                syncChildren(\n                    instance as Element,\n                    a._flags,\n                    b._flags,\n                    a._children as VNode<any>[] | VNode<any> | string | number | boolean,\n                    b._children as VNode<any>[] | VNode<any> | string | number | boolean,\n                    context,\n                    owner);\n            }\n        }\n    } else { // (flags & VNodeFlags.Component)\n        if (flags & VNodeFlags.ComponentClass) {\n            const component = instance as Component<any>;\n            stackTracePushComponent(b._tag as ComponentClass<any>, component);\n            componentUpdateProps(component, b._props);\n            componentUpdateParentContext(component, context);\n            _updateComponent(component);\n        } else { // (flags & VNodeFlags.ComponentFunction)\n            stackTracePushComponent(b._tag as ComponentFunction<any>);\n            instance = b._instance = _updateComponentFunction(parent, a, b, context, owner);\n        }\n        stackTracePopComponent();\n    }\n\n    return instance!;\n}\n\n/**\n * Sync VNode with a new one or replace when they aren't compatible.\n *\n * When node `a` is synced with node `b`, `a` node should be considered as destroyed, and any access to it after sync\n * is an undefined behavior.\n *\n * @param parent Parent node.\n * @param a Old VNode.\n * @param b New VNode.\n * @param context Current context.\n * @param owner Owning component.\n * @returns Synced DOM Node. When VNodes are synced and they aren't compatible, old DOM Node will be replaced with a new\n * DOM Node.\n */\nfunction vNodeSyncOrReplace(\n    parent: Node,\n    a: VNode<any>,\n    b: VNode<any>,\n    context: Context,\n    owner?: Component<any>,\n): Node | Component<any> {\n    if (vNodeCanSync(a, b)) {\n        return vNodeSync(parent, a, b, context, owner);\n    }\n    const newInstance = vNodeRender(parent, b, context, owner);\n    parent.replaceChild(\n        (b._flags & VNodeFlags.ComponentClass) ?\n            getDOMInstanceFromComponent(newInstance as Component<any>) :\n            newInstance as Element, getDOMInstanceFromVNode(a) !);\n    vNodeDetach(a);\n    vNodeAttach(b);\n    return newInstance;\n}\n\n/**\n * Sync old children list with the new one.\n *\n * @param parent Parent node.\n * @param aParentFlags Old parent VNode flags.\n * @param bParentFlags New parent VNode flags.\n * @param a Old VNode list.\n * @param b New VNode list.\n * @param context Current context.\n * @param owner Owning component.\n */\nfunction syncChildren(\n    parent: Node,\n    aParentFlags: VNodeFlags,\n    bParentFlags: VNodeFlags,\n    a: VNode<any>[] | VNode<any> | string | number | boolean,\n    b: VNode<any>[] | VNode<any> | string | number | boolean,\n    context: Context,\n    owner: Component<any> | undefined,\n): void {\n    let i = 0;\n\n    if (a === null) {\n        if (bParentFlags & (VNodeFlags.ChildrenBasic | VNodeFlags.ChildrenArray)) {\n            if (bParentFlags & VNodeFlags.ChildrenBasic) {\n                parent.textContent = b as string;\n            } else {\n                b = b as VNode<any>[];\n                for (i = 0; i < b.length; i++) {\n                    vNodeRenderInto(parent, null, b[i], context, owner);\n                }\n            }\n        } else if (bParentFlags & VNodeFlags.ChildrenVNode) {\n            vNodeRenderInto(parent, null, b as VNode<any>, context, owner);\n        } else if (bParentFlags & VNodeFlags.InputElement) {\n            setHTMLInputValue(parent as HTMLInputElement, b as string | boolean);\n        } else { // (bParentFlags & VNodeFlags.UnsafeHTML)\n            setInnerHTML(parent as Element, b as string, !!(bParentFlags & VNodeFlags.SvgElement));\n        }\n    } else if (b === null) {\n        if (aParentFlags & (VNodeFlags.ChildrenBasic | VNodeFlags.UnsafeHTML)) {\n            parent.textContent = \"\";\n        } else if (aParentFlags & VNodeFlags.ChildrenArray) {\n            vNodeRemoveAllChildren(parent, a as VNode<any>[]);\n        } else if (aParentFlags & VNodeFlags.ChildrenVNode) {\n            vNodeRemoveChild(parent, a as VNode<any>);\n        } else { // (bParentFlags & VNodeFlags.InputElement)\n            /**\n             * When value/checked isn't specified, we should just ignore it.\n             */\n        }\n    } else {\n        if (aParentFlags & (VNodeFlags.ChildrenBasic | VNodeFlags.UnsafeHTML)) {\n            if (bParentFlags & (VNodeFlags.ChildrenBasic | VNodeFlags.UnsafeHTML)) {\n                if (bParentFlags & VNodeFlags.ChildrenBasic) {\n                    const c = parent.firstChild;\n                    if (c) {\n                        c.nodeValue = b as string;\n                    } else {\n                        parent.textContent = b as string;\n                    }\n                } else {\n                    setInnerHTML((parent as Element), b as string, !!(bParentFlags & VNodeFlags.SvgElement));\n                }\n            } else {\n                parent.textContent = \"\";\n                if (bParentFlags & VNodeFlags.ChildrenArray) {\n                    b = b as VNode<any>[];\n                    for (i = 0; i < b.length; i++) {\n                        vNodeRenderInto(parent, null, b[i], context, owner);\n                    }\n                } else {\n                    vNodeRenderInto(parent, null, b as VNode<any>, context, owner);\n                }\n            }\n        } else if (aParentFlags & VNodeFlags.ChildrenArray) {\n            a = a as VNode<any>[];\n            if (bParentFlags & (VNodeFlags.ChildrenBasic | VNodeFlags.UnsafeHTML)) {\n                if (bParentFlags & VNodeFlags.ChildrenBasic) {\n                    parent.textContent = b as string;\n                } else {\n                    setInnerHTML(parent as Element, b as string, !!(bParentFlags & VNodeFlags.SvgElement));\n                }\n                vNodeDetachAll(a);\n            } else if (bParentFlags & VNodeFlags.ChildrenArray) {\n                b = b as VNode<any>[];\n                if (a.length === 0) {\n                    for (i = 0; i < b.length; i++) {\n                        vNodeRenderInto(parent, null, b[i], context, owner);\n                    }\n                } else {\n                    if (b.length === 0) {\n                        vNodeRemoveAllChildren(parent, a);\n                    } else if (a.length === 1 && b.length === 1) {\n                        vNodeSyncOrReplace(parent, a[0], b[0], context, owner);\n                    } else {\n                        if (aParentFlags & bParentFlags & VNodeFlags.TrackByKeyChildren) {\n                            syncChildrenTrackByKeys(parent, a, b, context, owner);\n                        } else {\n                            syncChildrenNaive(parent, a, b, context, owner);\n                        }\n                    }\n                }\n            } else {\n                b = b as VNode<any>;\n                if (a.length > 0) {\n                    vNodeSyncOrReplace(parent, a[0], b, context, owner);\n                    for (i = 1; i < a.length; i++) {\n                        vNodeRemoveChild(parent, a[i]);\n                    }\n                } else {\n                    vNodeRenderInto(parent, null, b, context, owner);\n                }\n            }\n        } else if (aParentFlags & VNodeFlags.ChildrenVNode) {\n            a = a as VNode<any>;\n            if (bParentFlags & (VNodeFlags.ChildrenBasic | VNodeFlags.UnsafeHTML)) {\n                if (bParentFlags & VNodeFlags.ChildrenBasic) {\n                    parent.textContent = b as string;\n                } else {\n                    setInnerHTML(parent as Element, b as string, !!(bParentFlags & VNodeFlags.SvgElement));\n                }\n                vNodeDetach(a);\n            } else if (bParentFlags & VNodeFlags.ChildrenArray) {\n                b = b as VNode<any>[];\n                if (b.length > 0) {\n                    vNodeSyncOrReplace(parent, a, b[0], context, owner);\n                    for (i = 1; i < b.length; i++) {\n                        vNodeRenderInto(parent, null, b[i], context, owner);\n                    }\n                } else {\n                    vNodeRemoveChild(parent, a);\n                }\n            } else {\n                vNodeSyncOrReplace(parent, a, b as VNode<any>, context, owner);\n            }\n        } else { // (aParentFlags & VNodeFlags.InputElement)\n            /**\n             * Input elements has an internal state with a `value` property, so it should be checked before an\n             * assignment to prevent unnecessary events when `value` is the same as the `value` in the internal\n             * state.\n             *\n             * In general we don't want to override behaviour of DOM Elements with an internal state. Assigning props\n             * to such elements should be treated as a one-time assignment, so it works almost like `value` attribute,\n             * except when a new value is passed down, it can override previous value when it doesn't match the previous\n             * one. There is absolutely no reasons to overcomplicate such behaviour just to make it more beatiful like\n             * it is a declarative assignment and can't be changed, because in real applications, component that\n             * controls this element will always track changes, and when it changes it will invalidate its\n             * representation, so everything will stay in-sync.\n             */\n            if (typeof b === \"string\") {\n                if ((parent as HTMLInputElement).value !== b) {\n                    (parent as HTMLInputElement).value = b;\n                }\n            } else {\n                (parent as HTMLInputElement).checked = b as boolean;\n            }\n        }\n    }\n}\n\n/**\n * Sync children naive way.\n *\n * Any heuristics that is used in this algorithm is an undefined behaviour, and external dependencies should not rely on\n * any knowledge about this algorithm, because it can be changed in any time.\n *\n * This naive algorithm is quite simple:\n *\n *  A: -> [a a c d e g g] <-\n *  B: -> [a a f d c g] <-\n *\n * It starts by iterating over old children list `A` and new children list `B` from both ends.\n *\n *  A: -> [a b c d e g g] <-\n *  B: -> [a b f d c g] <-\n *\n * When it find nodes that have the same key, tag and flags, it will sync them. Node \"a\" and \"b\" on the right side, and\n * node \"g\" on the right side will be synced.\n *\n *  A: -> [c d e g]\n *  B: -> [f d c]\n *\n * Then it start iterating over old and new children lists from the left side and check if nodes can be synced. Nodes\n * \"c\" and \"f\" can't be synced, remove node \"c\" and insert new node \"f\".\n *\n *  A: -> [d e g]\n *  B: -> [d c]\n *\n * Node \"d\" is synced.\n *\n *  A: -> [e g]\n *  B: -> [c]\n *\n * Node \"e\" removed, node \"c\" inserted.\n *\n *  A: -> [g]\n *  B:    []\n *\n * Length of the old list is larger than length of the new list, remove remaining nodes from the old list.\n *\n * @param parent Parent node.\n * @param a Old VNode list.\n * @param b New VNode list.\n * @param context Current context.\n * @param owner Owning component.\n */\nfunction syncChildrenNaive(\n    parent: Node,\n    a: VNode<any>[],\n    b: VNode<any>[],\n    context: Context,\n    owner?: Component<any>,\n): void {\n    let aStart = 0;\n    let bStart = 0;\n    let aEnd = a.length - 1;\n    let bEnd = b.length - 1;\n    let aNode: VNode<any>;\n    let bNode: VNode<any>;\n    let nextPos: number;\n    let next: Node | null;\n\n    // Sync similar nodes at the beginning.\n    while (aStart <= aEnd && bStart <= bEnd) {\n        aNode = a[aStart];\n        bNode = b[bStart];\n\n        if (!vNodeCanSync(aNode, bNode)) {\n            break;\n        }\n\n        aStart++;\n        bStart++;\n\n        vNodeSync(parent, aNode, bNode, context, owner);\n    }\n\n    // Sync similar nodes at the end.\n    while (aStart <= aEnd && bStart <= bEnd) {\n        aNode = a[aEnd];\n        bNode = b[bEnd];\n\n        if (!vNodeCanSync(aNode, bNode)) {\n            break;\n        }\n\n        aEnd--;\n        bEnd--;\n\n        vNodeSync(parent, aNode, bNode, context, owner);\n    }\n\n    // Iterate over the remaining nodes and if they have the same type, then sync, otherwise just\n    // remove the old node and insert the new one.\n    while (aStart <= aEnd && bStart <= bEnd) {\n        aNode = a[aStart++];\n        bNode = b[bStart++];\n        vNodeSyncOrReplace(parent, aNode, bNode, context, owner);\n    }\n\n    if (aStart <= aEnd) {\n        // All nodes from a are synced, remove the rest.\n        do {\n            vNodeRemoveChild(parent, a[aStart++]);\n        } while (aStart <= aEnd);\n    } else if (bStart <= bEnd) {\n        // All nodes from b are synced, insert the rest.\n        nextPos = bEnd + 1;\n        next = nextPos < b.length ? getDOMInstanceFromVNode(b[nextPos]) : null;\n        do {\n            vNodeRenderInto(parent, next, b[bStart++], context, owner);\n        } while (bStart <= bEnd);\n    }\n}\n\n/**\n * Sync children with track by keys algorithm.\n *\n * This algorithm finds a minimum[1] number of DOM operations. It works in several steps:\n *\n * 1. Find common suffix and prefix, and perform simple moves on the edges.\n *\n * This optimization technique is searching for nodes with identical keys by simultaneously iterating over nodes in the\n * old children list `A` and new children list `B` from both sides:\n *\n *  A: -> [a b c d e f g] <-\n *  B: -> [a b f d c g] <-\n *\n * Here we can skip nodes \"a\" and \"b\" at the begininng, and node \"g\" at the end.\n *\n *  A: -> [c d e f] <-\n *  B: -> [f d c] <-\n *\n * At this position it will try to look at the opposite edge, and if there is a node with the same key at the opposite\n * edge, it will perform simple move operation. Node \"c\" is moved to the right edge, and node \"f\" is moved to the left\n * edge.\n *\n *  A: -> [d e] <-\n *  B: -> [d] <-\n *\n * Now it will try again to find common prefix and suffix, node \"d\" is the same, so we can skip it.\n *\n *  A: [e]\n *  B: []\n *\n * Here it will check if the size of one of the list is equal to zero, and if length of the old children list is zero,\n * it will insert all remaining nodes from the new list, or if length of the new children list is zero, it will remove\n * all remaining nodes from the old list.\n *\n * This simple optimization technique will cover most of the real world use cases, even reversing the children list,\n * except for sorting.\n *\n * When algorithm couldn't find a solution with this simple optimization technique, it will go to the next step of the\n * algorithm. For example:\n *\n *  A: -> [a b c d e f g] <-\n *  B: -> [a c b h f e g] <-\n *\n * Nodes \"a\" and \"g\" at the edges are the same, skipping them.\n *\n *  A: -> [b c d e f] <-\n *  B: -> [c b h f e] <-\n *\n * Here we are stuck, so we need to switch to the next step.\n *\n * 2. Look for removed and inserted nodes, and simultaneously check if one of the nodes is moved.\n *\n * First we create an array `P` with the length of the new children list and assign to each position value `-1`, it has\n * a meaning of a new node that should be inserted. Later we will assign node positions in the old children list to this\n * array.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *  P: [. . . . .] // . == -1\n *\n * Then we need to build an index `I` that maps keys with node positions of the remaining nodes from the new children\n * list.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *  P: [. . . . .] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1,\n *    h: 2,\n *    f: 3,\n *    e: 4,\n *  }\n *  last = 0\n *\n * With this index, we start to iterate over the remaining nodes from the old children list and check if we can find a\n * node with the same key in the index. If we can't find any node, it means that it should be removed, otherwise we\n * assign position of the node in the old children list to the positions array.\n *\n *  A: [b c d e f]\n *      ^\n *  B: [c b h f e]\n *  P: [. 0 . . .] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1, <-\n *    h: 2,\n *    f: 3,\n *    e: 4,\n *  }\n *  last = 1\n *\n * When we assigning positions to the positions array, we also keep a position of the last seen node in the new children\n * list, if the last seen position is larger than current position of the node at the new list, then we are switching\n * `moved` flag to `true`.\n *\n *  A: [b c d e f]\n *        ^\n *  B: [c b h f e]\n *  P: [1 0 . . .] // . == -1\n *  I: {\n *    c: 0, <-\n *    b: 1,\n *    h: 2,\n *    f: 3,\n *    e: 4,\n *  }\n *  last = 1 // last > 0; moved = true\n *\n * The last position `1` is larger than current position of the node at the new list `0`, switching `moved` flag to\n * `true`.\n *\n *  A: [b c d e f]\n *          ^\n *  B: [c b h f e]\n *  P: [1 0 . . .] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1,\n *    h: 2,\n *    f: 3,\n *    e: 4,\n *  }\n *  moved = true\n *\n * Node with key \"d\" doesn't exist in the index, removing node.\n *\n *  A: [b c d e f]\n *            ^\n *  B: [c b h f e]\n *  P: [1 0 . . 3] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1,\n *    h: 2,\n *    f: 3,\n *    e: 4, <-\n *  }\n *  moved = true\n *\n * Assign position for `e`.\n *\n *  A: [b c d e f]\n *              ^\n *  B: [c b h f e]\n *  P: [1 0 . 4 3] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1,\n *    h: 2,\n *    f: 3, <-\n *    e: 4,\n *  }\n *  moved = true\n *\n * Assign position for 'f'.\n *\n * At this point we are checking if `moved` flag is on, or if the length of the old children list minus the number of\n * removed nodes isn't equal to the length of the new children list. If any of this conditions is true, then we are\n * going to the next step.\n *\n * 3. Find minimum number of moves if `moved` flag is on, or insert new nodes if the length is changed.\n *\n * When `moved` flag is on, we need to find the\n * [longest increasing subsequence](http://en.wikipedia.org/wiki/Longest_increasing_subsequence) in the positions array,\n * and move all nodes that doesn't belong to this subsequence.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *  moved = true\n *\n * Now we just need to simultaneously iterate over the new children list and LIS from the end and check if the current\n * position is equal to a value from LIS.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *              ^  // new_pos == 4\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *              ^  // new_pos == 4\n *  moved = true\n *\n * Node \"e\" stays at the same place.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *            ^    // new_pos == 3\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *            ^    // new_pos != 1\n *  moved = true\n *\n * Node \"f\" is moved, move it before the next node \"e\".\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *          ^      // new_pos == 2\n *  P: [1 0 . 4 3] // . == -1\n *          ^      // old_pos == -1\n *  LIS:     [1 4]\n *            ^\n *  moved = true\n *\n * Node \"h\" has a `-1` value in the positions array, insert new node \"h\".\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *        ^        // new_pos == 1\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *            ^    // new_pos == 1\n *  moved = true\n *\n * Node \"b\" stays at the same place.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *      ^          // new_pos == 0\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *          ^      // new_pos != undefined\n *  moved = true\n *\n * Node \"c\" is moved, move it before the next node \"b\".\n *\n * When moved flag is off, we don't need to find LIS, and we just iterate over the new children list and check its\n * current position in the positions array, if it is `-1`, then we insert new node.\n *\n * That is how children reconciliation algorithm is working in one of the fastest virtual dom libraries :)\n *\n * [1] Actually it is almost minimum number of dom ops, when node is removed and another one is inserted at the same\n * place, instead of insert and remove dom ops, we can use one replace op. It will make everything even more\n * complicated, and other use cases will be slower, so I don't think that it is worth to use replace here. Naive algo\n * and simple 1/N, N/1 cases are using replace op.\n *\n * @param parent Parent node.\n * @param a Old VNode list.\n * @param b New VNode list.\n * @param context Current context.\n * @param owner Owning component.\n */\nfunction syncChildrenTrackByKeys(\n    parent: Node,\n    a: VNode<any>[],\n    b: VNode<any>[],\n    context: Context,\n    owner?: Component<any>,\n): void {\n    let aStart = 0;\n    let bStart = 0;\n    let aEnd = a.length - 1;\n    let bEnd = b.length - 1;\n    let aStartNode = a[aStart];\n    let bStartNode = b[bStart];\n    let aEndNode = a[aEnd];\n    let bEndNode = b[bEnd];\n    let i: number;\n    let j: number | undefined;\n    let nextPos: number;\n    let next: Node | null;\n    let aNode: VNode<any> | null;\n    let bNode: VNode<any>;\n    let node: VNode<any>;\n\n    // Check that items without keys at the beginning and at the end doesn't change their shape.\n    if (__IVI_DEV__) {\n        outer: while (true) {\n            while (aStartNode._key === null) {\n                if (bStartNode._key !== null) {\n                    throw new Error(\"Invalid children list, when trackByKey is enabled, nodes without keys shouldn't \" +\n                        \"change their shape.\");\n                }\n                aStart++;\n                bStart++;\n                if (aStart > aEnd || bStart > bEnd) {\n                    break outer;\n                }\n                aStartNode = a[aStart];\n                bStartNode = b[bStart];\n            }\n\n            if (bStartNode._key === null) {\n                throw new Error(\"Invalid children list, when trackByKey is enabled, nodes without keys shouldn't \" +\n                    \"change their shape.\");\n            }\n\n            while (aEndNode._key === null) {\n                if (bEndNode._key !== null) {\n                    throw new Error(\"Invalid children list, when trackByKey is enabled, nodes without keys shouldn't \" +\n                        \"change their shape.\");\n                }\n                aEnd--;\n                bEnd--;\n                if (aStart > aEnd || bStart > bEnd) {\n                    break outer;\n                }\n                aEndNode = a[aEnd];\n                bEndNode = b[bEnd];\n            }\n\n            if (bEndNode._key === null) {\n                throw new Error(\"Invalid children list, when trackByKey is enabled, nodes without keys shouldn't \" +\n                    \"change their shape.\");\n            }\n\n            break;\n        }\n\n        // restore variables after checking.\n        aStart = 0;\n        bStart = 0;\n        aEnd = a.length - 1;\n        bEnd = b.length - 1;\n        aStartNode = a[aStart];\n        bStartNode = b[bStart];\n        aEndNode = a[aEnd];\n        bEndNode = b[bEnd];\n    }\n\n    // Step 1\n    outer: while (true) {\n        // Sync nodes with the same key at the beginning.\n        while (aStartNode._key === bStartNode._key) {\n            vNodeSyncOrReplace(parent, aStartNode, bStartNode, context, owner);\n            aStart++;\n            bStart++;\n            if (aStart > aEnd || bStart > bEnd) {\n                break outer;\n            }\n            aStartNode = a[aStart];\n            bStartNode = b[bStart];\n        }\n\n        // Sync nodes with the same key at the end.\n        while (aEndNode._key === bEndNode._key) {\n            vNodeSyncOrReplace(parent, aEndNode, bEndNode, context, owner);\n            aEnd--;\n            bEnd--;\n            if (aStart > aEnd || bStart > bEnd) {\n                break outer;\n            }\n            aEndNode = a[aEnd];\n            bEndNode = b[bEnd];\n        }\n\n        // Move and sync nodes from right to left.\n        if (aEndNode._key === bStartNode._key) {\n            vNodeSyncOrReplace(parent, aEndNode, bStartNode, context, owner);\n            vNodeMoveChild(parent, bStartNode, getDOMInstanceFromVNode(aStartNode));\n            aEnd--;\n            bStart++;\n            // There is no need to check when we out of bounds, because the only way we can get here is when there are\n            // more nodes in the lists.\n            //\n            // Impossible transformations:\n            //   [a] => [a b] (common prefix)\n            //   [b a] => [a] (common suffix)\n            //\n            // Possible transformations:\n            //   [b a] => [a b]\n            //   [b a] => [a c]\n\n            aEndNode = a[aEnd];\n            bStartNode = b[bStart];\n            // In a real-world scenarios there is a higher chance that next node after the move will be the same, so we\n            // immediately jump to the start of this prefix/suffix algo.\n            continue;\n        }\n\n        // Move and sync nodes from left to right.\n        if (aStartNode._key === bEndNode._key) {\n            vNodeSyncOrReplace(parent, aStartNode, bEndNode, context, owner);\n            nextPos = bEnd + 1;\n            next = nextPos < b.length ? getDOMInstanceFromVNode(b[nextPos]) : null;\n            vNodeMoveChild(parent, bEndNode, next);\n            aStart++;\n            bEnd--;\n            aStartNode = a[aStart];\n            bEndNode = b[bEnd];\n            continue;\n        }\n\n        break;\n    }\n\n    if (aStart > aEnd) {\n        // All nodes from a are synced, insert the rest from b.\n        nextPos = bEnd + 1;\n        next = nextPos < b.length ? getDOMInstanceFromVNode(b[nextPos]) : null;\n        while (bStart <= bEnd) {\n            vNodeRenderInto(parent, next, b[bStart++], context, owner);\n        }\n    } else if (bStart > bEnd) {\n        // All nodes from b are synced, remove the rest from a.\n        while (aStart <= aEnd) {\n            vNodeRemoveChild(parent, a[aStart++]);\n        }\n        // Step 2\n    } else {\n        let aLength = aEnd - aStart + 1;\n        let bLength = bEnd - bStart + 1;\n        const aNullable = a as Array<VNode<any> | null>; // will be removed by js optimizing compilers.\n        // Mark all nodes as inserted.\n        const sources = new Array<number>(bLength).fill(-1);\n\n        let moved = false;\n        let pos = 0;\n        let synced = 0;\n\n        // When children lists are small, we are using naive O(N) algorithm to find if child is removed.\n        if ((bLength <= 4) || ((aLength * bLength) <= 16)) {\n            for (i = aStart; i <= aEnd; i++) {\n                aNode = a[i];\n                if (synced < bLength) {\n                    for (j = bStart; j <= bEnd; j++) {\n                        bNode = b[j];\n                        if (aNode._key === bNode._key) {\n                            sources[j - bStart] = i;\n\n                            if (pos > j) {\n                                moved = true;\n                            } else {\n                                pos = j;\n                            }\n                            vNodeSyncOrReplace(parent, aNode, bNode, context, owner);\n                            synced++;\n                            aNullable[i] = null;\n                            break;\n                        }\n                    }\n                }\n            }\n        } else {\n            const keyIndex = new Map<any, number>();\n\n            for (i = bStart; i <= bEnd; i++) {\n                node = b[i];\n                keyIndex.set(node._key, i);\n            }\n\n            for (i = aStart; i <= aEnd; i++) {\n                aNode = a[i];\n\n                if (synced < bLength) {\n                    j = keyIndex.get(aNode._key);\n\n                    if (j !== undefined) {\n                        bNode = b[j];\n                        sources[j - bStart] = i;\n                        if (pos > j) {\n                            moved = true;\n                        } else {\n                            pos = j;\n                        }\n                        vNodeSyncOrReplace(parent, aNode, bNode, context, owner);\n                        synced++;\n                        aNullable[i] = null;\n                    }\n                }\n            }\n        }\n\n        if (aLength === a.length && synced === 0) {\n            // Noone is synced, remove all children with one dom op.\n            vNodeRemoveAllChildren(parent, a);\n            while (bStart < bLength) {\n                vNodeRenderInto(parent, null, b[bStart++], context, owner);\n            }\n        } else {\n            i = aLength - synced;\n            while (i > 0) {\n                aNode = aNullable[aStart++];\n                if (aNode !== null) {\n                    vNodeRemoveChild(parent, aNode);\n                    i--;\n                }\n            }\n\n            // Step 3\n            if (moved) {\n                const seq = lis(sources);\n                j = seq.length - 1;\n                for (i = bLength - 1; i >= 0; i--) {\n                    if (sources[i] === -1) {\n                        pos = i + bStart;\n                        node = b[pos];\n                        nextPos = pos + 1;\n                        next = nextPos < b.length ? getDOMInstanceFromVNode(b[nextPos]) : null;\n                        vNodeRenderInto(parent, next, node, context, owner);\n                    } else {\n                        if (j < 0 || i !== seq[j]) {\n                            pos = i + bStart;\n                            node = b[pos];\n                            nextPos = pos + 1;\n                            next = nextPos < b.length ? getDOMInstanceFromVNode(b[nextPos]) : null;\n                            vNodeMoveChild(parent, node, next);\n                        } else {\n                            j--;\n                        }\n                    }\n                }\n            } else if (synced !== bLength) {\n                for (i = bLength - 1; i >= 0; i--) {\n                    if (sources[i] === -1) {\n                        pos = i + bStart;\n                        node = b[pos];\n                        nextPos = pos + 1;\n                        next = nextPos < b.length ? getDOMInstanceFromVNode(b[nextPos]) : null;\n                        vNodeRenderInto(parent, next, node, context, owner);\n                    }\n                }\n            }\n        }\n    }\n}\n\n/**\n * Slightly modified Longest Increased Subsequence algorithm, it ignores items that have -1 value, they're representing\n * new items.\n *\n * http://en.wikipedia.org/wiki/Longest_increasing_subsequence\n *\n * @param a Array of numbers.\n * @returns Longest increasing subsequence.\n */\nfunction lis(a: number[]): number[] {\n    const p = a.slice(0);\n    const result: number[] = [];\n    result.push(0);\n    let u: number;\n    let v: number;\n\n    for (let i = 0, il = a.length; i < il; i++) {\n        if (a[i] === -1) {\n            continue;\n        }\n\n        let j = result[result.length - 1];\n        if (a[j] < a[i]) {\n            p[i] = j;\n            result.push(i);\n            continue;\n        }\n\n        u = 0;\n        v = result.length - 1;\n\n        while (u < v) {\n            let c = ((u + v) / 2) | 0;\n            if (a[result[c]] < a[i]) {\n                u = c + 1;\n            } else {\n                v = c;\n            }\n        }\n\n        if (a[i] < a[result[u]]) {\n            if (u > 0) {\n                p[i] = result[u - 1];\n            }\n            result[u] = i;\n        }\n    }\n\n    u = result.length;\n    v = result[u - 1];\n\n    while (u-- > 0) {\n        result[u] = v;\n        v = p[v];\n    }\n\n    return result;\n}\n","import { NOOP_FALSE } from \"../common/noop\";\nimport { getFunctionName, nextDebugId } from \"../dev_mode/dev_mode\";\nimport { isPropsNotIdentical, isPropsNotShallowEqual } from \"../common/equality\";\nimport { AncestorFlags } from \"../dev_mode/html_nesting_rules\";\nimport { ComponentFlags } from \"./flags\";\nimport { Context } from \"./context\";\nimport { VNode, getDOMInstanceFromVNode } from \"./vnode\";\nimport { currentFrame } from \"../scheduler/frame\";\n\n/**\n * Component function constructor.\n */\nexport interface ComponentFunction<P> {\n    (props: P, context?: Context): VNode<any> | undefined;\n    isPropsChanged?: (oldProps: P, newProps: P) => boolean;\n}\n\n/**\n * Component class constructor.\n */\nexport interface ComponentClass<P> {\n    new (props: P, context: Context, owner: Component<any> | undefined): Component<P>;\n}\n\n/**\n * Component is the main building block that is used to build UI applications.\n *\n * Component class has a parametric type `P` to specify `props` type.\n *\n * Example:\n *\n *     class Hello extends Component<string> {\n *       render() {\n *         return $t(`Hello ${this.props}`);\n *       }\n *     }\n *\n *     render($c(Hello, \"world\"), document.getElementById(\"App\")!);\n */\nexport abstract class Component<P> {\n    /**\n     * Flags, see `ComponentFlags` for details.\n     *\n     * Lowest 16 bits are reserved for ivi flags, other bits can be used for user flags.\n     */\n    flags: ComponentFlags;\n    /**\n     * Depth in the components tree.\n     *\n     * Depth property is used by scheduler to determine component priority when updating components.\n     */\n    readonly depth: number;\n    /**\n     * Component properties.\n     */\n    _props: P;\n    /**\n     * Parent context.\n     *\n     * Context that was used to create this component.\n     */\n    _parentContext: Context;\n    /**\n     * Current context.\n     */\n    _context: Context;\n    /**\n     * Owner component.\n     *\n     * Parent component. When owner is an undefined, it means that this component is a root component.\n     */\n    readonly owner: Component<any> | undefined;\n    /**\n     * Virtual DOM root node.\n     */\n    root: VNode<any> | null;\n    /**\n     * Parent DOM node.\n     *\n     * It is used because when root node is changed we will need to replace old DOM node with a new one, and right now\n     * browsers doesn't provide a nice API that doesn't require to know parent nodes.\n     */\n    _parentDOMNode: Node | null;\n    /**\n     * Ancestor Flags are used to check child nesting violations.\n     *\n     * Dev Mode.\n     */\n    _ancestorFlags: AncestorFlags;\n    /**\n     * Component function stack trace.\n     *\n     * Component functions doesn't have any instances, so we need to store them separately.\n     *\n     * Dev Mode.\n     */\n    _stackTrace: ComponentFunction<any>[] | null;\n    /**\n     * Unique ID.\n     *\n     * ID generator is using `dev_mode.uniqueId()` function, so it will be unique across all Dev Mode ids.\n     *\n     * Dev Mode.\n     */\n    _debugId: number;\n\n    constructor(props: P, context: Context, owner: Component<any> | undefined) {\n        this.flags = 0;\n        this.depth = owner ? owner.depth + 1 : 0;\n        this._props = props;\n        this._parentContext = context;\n        this._context = context;\n        this.owner = owner;\n        this.root = null;\n        if (__IVI_BROWSER__) {\n            this._parentDOMNode = null;\n        }\n        if (__IVI_DEV__) {\n            this._ancestorFlags = 0;\n            this._stackTrace = null;\n            this._debugId = nextDebugId();\n        }\n    }\n\n    /**\n     * Get current context.\n     *\n     * @returns Current context.\n     */\n    get context(): Context {\n        this.flags |= ComponentFlags.CheckUsingContext;\n        return this._parentContext;\n    }\n\n    /**\n     * Get props.\n     *\n     * @returns Current props.\n     */\n    get props(): P {\n        this.flags |= ComponentFlags.CheckUsingProps;\n        return this._props;\n    }\n\n    /**\n     * Is component attached.\n     *\n     * @returns `true` when Component is attached.\n     */\n    get isAttached(): boolean {\n        return !!(this.flags & ComponentFlags.Attached);\n    }\n\n    /**\n     * Lifecycle method `isPropsChanged` is used as a hint that can reduce unnecessary updates.\n     *\n     * By default all props changes returns `true`.\n     *\n     * @param oldProps Old props.\n     * @param newProps New props.\n     * @returns `true` when props should be updated.\n     */\n    isPropsChanged(oldProps: P, newProps: P): boolean {\n        return true;\n    }\n\n    /**\n     * Lifecycle method `newPropsReceived` is invoked after new props are assigned.\n     *\n     * @param oldProps Old props.\n     * @param newProps New props.\n     */\n    newPropsReceived(oldProps: P, newProps: P): void {\n        /* tslint:disable:no-empty */\n        /* tslint:enable:no-empty */\n    }\n\n    /**\n     * Lifecycle method `didReceiveNewContext` is invoked after new context is assigned.\n     *\n     * @param oldContext Old context.\n     * @param newContext New Context.\n     */\n    newContextReceived(oldContext: Context, newContext: Context): void {\n        /* tslint:disable:no-empty */\n        /* tslint:enable:no-empty */\n    }\n\n    /**\n     * Lifecycle method `updateContext` is used to modify current context.\n     *\n     * It will be invoked when component is created, each time when parent context is changed, each time when props are\n     * changed, and when component is updated with invalidated context.\n     *\n     * @returns Context data.\n     */\n    updateContext<C>(): C | undefined {\n        return;\n    }\n\n    /**\n     * Lifecycle method `attached` is invoked when component is attached to the document.\n     */\n    attached(): void {\n        /* tslint:disable:no-empty */\n        /* tslint:enable:no-empty */\n    }\n\n    /**\n     * Lifecycle method `detached` is invoked when component is detached from the document.\n     */\n    detached(): void {\n        /* tslint:disable:no-empty */\n        /* tslint:enable:no-empty */\n    }\n\n    /**\n     * Lifecycle method `beforeUpdate` is invoked before update.\n     */\n    beforeUpdate(): void {\n        /* tslint:disable:no-empty */\n        /* tslint:enable:no-empty */\n    }\n\n    /**\n     * Lifecycle method `updated` is invoked after update.\n     */\n    updated(): void {\n        /* tslint:disable:no-empty */\n        /* tslint:enable:no-empty */\n    }\n\n    /**\n     * Lifecycle method `invalidated` is invoked after `invalidate` method is invoked.\n     */\n    invalidated(): void {\n        /* tslint:disable:no-empty */\n        /* tslint:enable:no-empty */\n    }\n\n    /**\n     * When render method returns `undefined` value, it will create an empty text node.\n     */\n    render(): VNode<any> | undefined {\n        return;\n    }\n\n    /**\n     * Invalidate view.\n     */\n    invalidate(): void {\n        if (__IVI_BROWSER__) {\n            invalidateComponent(this, ComponentFlags.DirtyState);\n        }\n    }\n\n    /**\n     * Invalidate context.\n     */\n    invalidateContext(): void {\n        if (__IVI_BROWSER__) {\n            invalidateComponent(this, ComponentFlags.DirtyContext);\n        }\n    }\n}\n\n/**\n * Invalidate Component.\n *\n * @param component\n * @param dirtyFlags\n */\nexport function invalidateComponent<P>(component: Component<P>, dirtyFlags: number): void {\n    if (__IVI_BROWSER__) {\n        if (component.flags & ComponentFlags.Attached) {\n            component.flags |= dirtyFlags;\n            component.invalidated();\n            if (!(component.flags & ComponentFlags.InUpdateQueue)) {\n                currentFrame().updateComponent(component);\n            }\n        }\n    }\n}\n\n/**\n * Global Component registry available in Dev Mode. It is used to find components by their `debugId`.\n */\nlet COMPONENT_REGISTRY: Map<number, Component<any>>;\nif (__IVI_DEV__) {\n    COMPONENT_REGISTRY = new Map<number, Component<any>>();\n}\n\n/**\n * Register a Component in Component Registry by its `debugId`.\n *\n * @param component Component instance.\n */\nexport function registerComponent(component: Component<any>): void {\n    if (__IVI_DEV__) {\n        COMPONENT_REGISTRY.set(component._debugId, component);\n    }\n}\n\n/**\n * Unregister a Component from Component Registry by its `debugId`.\n *\n * @param component Component instance.\n */\nexport function unregisterComponent(component: Component<any>): void {\n    if (__IVI_DEV__) {\n        COMPONENT_REGISTRY.delete(component._debugId);\n    }\n}\n\n/**\n * Find Component instance by `debugId` in Component Registry.\n *\n * @param debugId Debug ID.\n * @returns Component associtated with `debugId` or an `undefined` if component is missing.\n */\nexport function findComponentByDebugId(debugId: number): Component<any> | undefined {\n    if (__IVI_DEV__) {\n        return COMPONENT_REGISTRY.get(debugId);\n    }\n    return;\n}\n\n/**\n * Checks props for identity.\n *\n * This function can be used as a wrapper for function expression, or as a class decorator.\n *\n *     const MyComponent = checkPropsIdentity(function(text: string) {\n *         return $h(\"div\").children(text);\n *     });\n *\n *     @checkPropsIdentity\n *     class MyClassComponent extends Component<string> {\n *         render() {\n *             return $h(\"div\").children(this.props);\n *         }\n *     }\n *\n * @param target Component constructor.\n * @returns Component constructor with identity check.\n */\nexport function checkPropsIdentity<P extends ComponentClass<any> | ComponentFunction<any>>(target: P): P {\n    if (target.prototype.render) {\n        target.prototype.isPropsChanged = isPropsNotIdentical;\n    } else {\n        (target as ComponentFunction<any>).isPropsChanged = isPropsNotIdentical;\n    }\n    return target;\n}\n\n/**\n * Checks props for shallow equality.\n *\n * This function can be used as a wrapper for function expression, or as a class decorator.\n *\n *     const MyComponent = checkPropsShallowEquality(function(props: { text: string }) {\n *         return $h(\"div\").children(props.text);\n *     });\n *\n *     @checkPropsShallowEquality\n *     class MyClassComponent extends Component<{ text: string }> {\n *         render() {\n *             return $h(\"div\").children(this.props.text);\n *         }\n *     }\n *\n * @param target Component constructor.\n * @returns Component constructor with identity check.\n */\nexport function checkPropsShallowEquality<P extends ComponentClass<any> | ComponentFunction<any>>(target: P): P {\n    if (target.prototype.render) {\n        target.prototype.isPropsChanged = isPropsNotShallowEqual;\n    } else {\n        (target as ComponentFunction<any>).isPropsChanged = isPropsNotShallowEqual;\n    }\n    return target;\n}\n\n/**\n * Marks component as static.\n *\n * This function can be used as a wrapper for function expression, or as a class decorator.\n *\n *     const MyComponent = staticComponent(function(props: { text: string }) {\n *         return $h(\"div\").children(props.text);\n *     });\n *\n *     @staticComponent\n *     class MyClassComponent extends Component<{ text: string }> {\n *         render() {\n *             return $h(\"div\").children(this.props.text);\n *         }\n *     }\n *\n * @param target Component constructor.\n * @returns Component constructor with static property.\n */\nexport function staticComponent<P extends ComponentClass<any> | ComponentFunction<any>>(target: P): P {\n    if (target.prototype.render) {\n        target.prototype.isPropsChanged = NOOP_FALSE;\n    } else {\n        (target as ComponentFunction<any>).isPropsChanged = NOOP_FALSE;\n    }\n    return target;\n}\n\n/**\n * Get reference to a DOM node from a Component instance.\n *\n * @param component Component instance.\n * @returns DOM node.\n */\nexport function getDOMInstanceFromComponent<T extends Node>(component: Component<any>): T {\n    if (__IVI_DEV__) {\n        if (!component.root) {\n            throw new Error(\"Failed to get DOM instance from component, component is not initialized.\");\n        }\n    }\n    return getDOMInstanceFromVNode<T>(component.root!) !;\n}\n\n/**\n * Get component name from component instance or component function.\n *\n * @param component Component.\n * @return Component name.\n */\nexport function getComponentName(component: Component<any> | ComponentFunction<any>): string {\n    return getFunctionName(\n        (component as Function).prototype.render ?\n            (component as Object).constructor :\n            component as ComponentFunction<any>,\n    );\n}\n","\n/**\n * Context.\n *\n * All Context objects should be immutable.\n *\n * Context objects will be implicitly propagated through virtual dom trees.\n *\n * @final\n */\nexport class Context {\n    /**\n     * Context data.\n     */\n    readonly data: { [key: string]: any };\n    /**\n     * Parent context.\n     *\n     * Contexts are built as a tree of immutable objects.\n     */\n    readonly from?: Context;\n\n    constructor(data: any, from?: Context) {\n        this.data = data;\n        this.from = from;\n    }\n\n    /**\n     * Find a context data.\n     *\n     * Get method supports two ways to retrieve context values:\n     *  - Retrieve value with a simple key.\n     *  - Object with a key => value mapping.\n     *\n     * Retrieving values with a simple key works by iterating through all parent contexts until it finds value,\n     * `undefined` value is returned when nothing is found.\n     *\n     * Retrieving values with key => value mapping works by iterating through all parent contexts and mapping all\n     * keys with values on the first occurence, this process goes on until it finds values for all keys.\n     *\n     * @param key Key may be a simple string, or a { [key: string]: value | undefined } object.\n     * @returns Value for the provided key if it is a simple string, or key object that was used as a key => value\n     *   mapping.\n     */\n    get<V>(key: V): V;\n    get<V>(key: string): V | undefined;\n    get<V>(key: string | V): V | undefined {\n        let n: Context | undefined = this;\n        let v: any;\n\n        if (typeof key !== \"string\") {\n            const keys = Object.keys(key) as (string | null)[];\n            let l = keys.length;\n\n            while (l > 0 && n) {\n                if (n.data) {\n                    for (let i = 0; i < keys.length; i++) {\n                        const k = keys[i];\n                        if (k) {\n                            v = n.data[k];\n                            if (v !== undefined) {\n                                (key as any)[k] = n.data[k];\n                                keys[i] = null;\n                                l--;\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                n = n.from;\n            }\n\n            return key;\n        }\n\n        while (n) {\n            if (n.data) {\n                v = n.data[key];\n                if (v !== undefined) {\n                    return v as V;\n                }\n            }\n            n = n.from;\n        }\n\n        return;\n    }\n}\n\n/**\n * Root Context.\n *\n * Default Context that is used to render root nodes.\n */\nexport const ROOT_CONTEXT = new Context(undefined);\n","import { XML_NAMESPACE, XLINK_NAMESPACE } from \"../common/dom\";\nimport { VNodeFlags } from \"./flags\";\nimport { CSSStyleProps } from \"../common/dom_props\";\n\n/**\n * Sync DOM class names.\n *\n * @param node HTML or SVG Element.\n * @param flags VNode flags.\n * @param a Old className.\n * @param b New className.\n */\nexport function syncClassName(node: Element, flags: VNodeFlags, a: string | null, b: string | null): void {\n    if (!b) {\n        b = \"\";\n    }\n    if (flags & VNodeFlags.SvgElement) {\n        node.setAttribute(\"class\", b);\n    } else {\n        node.className = b;\n    }\n}\n\n/**\n * Sync DOM styles.\n *\n * When styles are synced, and style from the old list is missing in the new one, its value will be reassigned with a\n * `null` value.\n *\n *    a: { backgroundColor: \"#333\", color: \"#fff\" }\n *    b: { backgroundColor: \"#333\" }\n *\n * In this example `color` style will receive a `\"\"` value.\n *\n * Implementation detail: Syncing algorithm has an optimization with an early detection of object shape changes.\n * Objects with static shape will make syncing algorithm slightly faster because it doesn't need to check which\n * properties didn't existed before, so it is possible to just use the static object shapes, and use `undefined` values\n * when you want to remove property and have the same object shape.\n *\n * @param node HTML or SVG Element.\n * @param a Old styles.\n * @param b New styles.\n */\nexport function syncStyle(\n    node: HTMLElement | SVGStylable,\n    a: CSSStyleProps | null,\n    b: CSSStyleProps | null,\n): void {\n    let i: number;\n    let keys: string[];\n    let key: string;\n    let style: CSSStyleDeclaration;\n\n    if (a === null) {\n        if (b !== null) {\n            // a is empty, insert all styles from b.\n            style = node.style;\n            keys = Object.keys(b);\n            for (i = 0; i < keys.length; i++) {\n                key = keys[i];\n                (style as any)[key] = (b as any)[key];\n            }\n        }\n    } else if (b === null) {\n        // b is empty, remove all styles from a.\n        style = node.style;\n        keys = Object.keys(a);\n        for (i = 0; i < keys.length; i++) {\n            /**\n             * #quirks\n             *\n             * Should work with `null` values in all modern browsers. IE9 had problems with `null` values.\n             */\n            (style as any)[keys[i]] = \"\";\n        }\n    } else {\n        style = node.style;\n        let matchCount = 0;\n\n        keys = Object.keys(a);\n        for (i = 0; i < keys.length; i++) {\n            key = keys[i];\n            const bValue = (b as any)[key];\n\n            if (bValue !== undefined) {\n                const aValue = (a as any)[key];\n                if (aValue !== bValue) {\n                    (style as any)[key] = bValue;\n                }\n                matchCount++;\n            } else {\n                (style as any)[key] = \"\";\n            }\n        }\n\n        keys = Object.keys(b);\n        i = 0;\n        while (matchCount < keys.length && i < keys.length) {\n            key = keys[i++];\n            if (!a.hasOwnProperty(key)) {\n                (style as any)[key] = (b as any)[key];\n                matchCount++;\n            }\n        }\n    }\n}\n\n/**\n * Set DOM property.\n *\n * @param node HTML or SVG Element.\n * @param isSVG node is an SVG Element.\n * @param key Attribute name.\n * @param value Attribute value.\n */\nfunction setDOMProperty(node: Element, flags: VNodeFlags, key: string, value?: any, prevValue?: any): void {\n    if (value === undefined) {\n        /**\n         * Edge cases when property name doesn't match attribute name.\n         */\n        if (!(flags & VNodeFlags.SvgElement)) {\n            if (key.length > 6) {\n                switch (key) {\n                    case \"acceptCharset\":\n                        key = \"accept-charset\";\n                        break;\n                    case \"htmlFor\":\n                        key = \"for\";\n                    //     break;\n                    // case \"httpEquiv\": // meta tags aren't supported\n                    //     key = \"http-equiv\";\n                }\n            }\n        }\n        /**\n         * Because there is no generic way to assign a default value for a property when it is removed, it is always\n         * removed with `removeAttribute` method.\n         */\n        node.removeAttribute(key);\n    } else {\n        if (flags & VNodeFlags.SvgElement) {\n            if (key.length > 5) {\n                if (key.charCodeAt(0) === 120 &&\n                    (key.charCodeAt(3) === 58 || key.charCodeAt(5) === 58)) { // 58 === \":\" \"xml:\", \"xlink:\"\n                    if (key.charCodeAt(1) === 109 && key.charCodeAt(2) === 108) { // [109, 108] === \"ml\"\n                        /**\n                         * All attributes that starts with an \"xml:\" prefix will be assigned with XML namespace.\n                         */\n                        node.setAttributeNS(XML_NAMESPACE, key, value);\n                        return;\n                    } else if (key.charCodeAt(1) === 108 &&\n                        key.charCodeAt(2) === 105 &&\n                        key.charCodeAt(3) === 110 &&\n                        key.charCodeAt(4) === 107) { // [108, 105, 110, 107] === \"link\"\n                        /**\n                         * All attributes that starts with an \"xlink:\" prefix will be assigned with XLINK namespace.\n                         */\n                        node.setAttributeNS(XLINK_NAMESPACE, key, value);\n                        return;\n                    }\n                }\n            }\n\n            /**\n             * SVG props should be always assigned with a `setAttribute` call.\n             */\n            node.setAttribute(key, value);\n        } else {\n            if (key.length > 5) {\n                if (key.charCodeAt(4) === 45) { // 45 === \"-\" \"data-\", \"aria-\"\n                    /**\n                     * Attributes that has \"-\" character at the 4th position will be assigned with a `setAttribute`\n                     * method. It should work with \"data-\" and \"aria-\" attributes. Otherwise just use property\n                     * assignment instead of `setAttribute`.\n                     */\n                    node.setAttribute(key, value);\n                    return;\n                }\n            }\n\n            (node as any)[key] = value;\n        }\n    }\n}\n\n/**\n * Sync DOM properties.\n *\n * Implementation detail: Syncing algorithm has an optimization with an early detection of object shape changes.\n * Objects with static shape will make syncing algorithm slightly faster because it doesn't need to check which\n * properties didn't existed before, so it is possible to just use the static object shapes, and use `undefined` values\n * when you want to remove property and have the same object shape.\n *\n * @param node HTML or SVG Element.\n * @param flags VNode flags.\n * @param a Old DOM properties.\n * @param b New DOM properties.\n */\nexport function syncDOMProps(\n    node: Element,\n    flags: VNodeFlags,\n    a: { [key: string]: any } | null,\n    b: { [key: string]: any } | null,\n): void {\n    let i: number;\n    let keys: string[];\n    let key: string;\n\n    if (a === null) {\n        if (b !== null) {\n            // a is empty, insert all attributes from b.\n            keys = Object.keys(b);\n            for (i = 0; i < keys.length; i++) {\n                key = keys[i];\n                setDOMProperty(node, flags, key, b[key]);\n            }\n        }\n    } else if (b === null) {\n        // b is empty, remove all attributes from a.\n        keys = Object.keys(a);\n        for (i = 0; i < keys.length; i++) {\n            setDOMProperty(node, flags, keys[i]);\n        }\n    } else {\n        let matchCount = 0;\n\n        // Remove and update attributes.\n        keys = Object.keys(a);\n        for (i = 0; i < keys.length; i++) {\n            key = keys[i];\n            const bValue = b[key];\n            if (bValue === undefined) {\n                setDOMProperty(node, flags, key);\n            } else {\n                const aValue = a[key];\n                if (aValue !== bValue) {\n                    setDOMProperty(node, flags, key, bValue, aValue);\n                }\n                matchCount++;\n            }\n        }\n\n        // Insert new attributes.\n        keys = Object.keys(b);\n        i = 0;\n        while (matchCount < keys.length && i < keys.length) {\n            key = keys[i++];\n            if (!a.hasOwnProperty(key)) {\n                setDOMProperty(node, flags, key, b[key]);\n                matchCount++;\n            }\n        }\n    }\n}\n","import { FEATURES, FeatureFlags } from \"../common/feature_detection\";\nimport { NativeEventDispatcherFlags } from \"./flags\";\nimport { EventHandlerList } from \"./event_handler\";\n\n/**\n * `{ capture: true, passive: true }` object that should be used as a third parameter in `addEventListener`.\n */\nexport const EVENT_CAPTURE_PASSIVE_OPTIONS =\n    (FEATURES & FeatureFlags.PassiveEvents) ?\n        { \"capture\": true, \"passive\": true } :\n        true;\n\n/**\n * `{ passive: true }` object that should be used as a third parameter in `addEventListener`.\n */\nexport const EVENT_PASSIVE_OPTIONS =\n    (FEATURES & FeatureFlags.PassiveEvents) ?\n        { \"passive\": true } :\n        false;\n\n/**\n * Get Event options that should be used when adding Event Listener.\n *\n * #quirks\n *\n * @param flags See `EventDispatcherFlags` for details.\n * @returns Option object that can be used as a 3rd parameter in `addEventListener` call.\n */\nexport function getEventOptions(flags: NativeEventDispatcherFlags): boolean | { capture?: boolean, passive?: boolean } {\n    if (flags & NativeEventDispatcherFlags.Passive) {\n        if (flags & NativeEventDispatcherFlags.Capture) {\n            return EVENT_CAPTURE_PASSIVE_OPTIONS;\n        }\n        return EVENT_PASSIVE_OPTIONS;\n    }\n    if (flags & NativeEventDispatcherFlags.Capture) {\n        return true;\n    }\n    return false;\n}\n\n/**\n * Property that is used on DOM Nodes to store EventProps object.\n */\nexport const DOM_NODE_EVENTS_PROPERTY = \"_ev\";\n\n/**\n * Set Event Handler list to DOM Node.\n *\n * @param node DOM Node.\n * @param events Event Handler List.\n */\nexport function setEventHandlerListToDOMNode(node: Node, events: EventHandlerList | undefined): void {\n    (node as any)[DOM_NODE_EVENTS_PROPERTY] = events;\n}\n\n/**\n * Get Event Handler list from DOM Node.\n *\n * @param node DOM Node.\n * @returns EventHandlerList or undefined if DOM Node doesn't listen for any events.\n */\nexport function getEventHandlerListFromDOMNode(node: Node): EventHandlerList | undefined {\n    return (node as any)[DOM_NODE_EVENTS_PROPERTY];\n}\n","import { EventHandler, EventHandlerList } from \"./event_handler\";\nimport { setEventHandlerListToDOMNode } from \"./utils\";\n\n/**\n * Shortcut for Event Handler registration.\n *\n * @param handler Event Handler.\n */\nfunction registerEventHandler(handler: EventHandler<any>): void {\n    handler.dispatcher.registerHandler(handler.fn);\n}\n\n/**\n * Shortcut for Event Handler unregistration.\n *\n * @param handler Event Handler.\n */\nfunction unregisterEventHandler(handler: EventHandler<any>): void {\n    handler.dispatcher.unregisterHandler(handler.fn);\n}\n\n/**\n * Sync DOM events.\n *\n * Implementation detail: Syncing algorithm has an optimization with an early detection of object shape changes.\n * Objects with static shape will make syncing algorithm slightly faster because it doesn't need to check which\n * properties didn't existed before, so it is possible to just use the static object shapes, and use `undefined` values\n * when you want to remove property and have the same object shape.\n *\n * @param node HTML or SVG Element.\n * @param a Old events.\n * @param b New events.\n */\nexport function syncEvents(\n    node: Element,\n    a: EventHandlerList | null,\n    b: EventHandlerList | null,\n): void {\n    let i: number;\n    let keys: string[];\n    let key: string;\n\n    if (a === null) {\n        if (b !== null) {\n            // a is empty, register all events from b.\n            keys = Object.keys(b);\n            for (i = 0; i < keys.length; i++) {\n                registerEventHandler(b[keys[i]]);\n            }\n        }\n    } else if (b === null) {\n        // b is empty, remove all events from a.\n        keys = Object.keys(a);\n        for (i = 0; i < keys.length; i++) {\n            unregisterEventHandler(a[keys[i]]);\n        }\n    } else {\n        let matchCount = 0;\n\n        // Remove and update events.\n        keys = Object.keys(a);\n        for (i = 0; i < keys.length; i++) {\n            key = keys[i];\n            const aHandler = a[key];\n            const bHandler = b[key];\n            if (bHandler !== undefined) {\n                if (aHandler !== bHandler) {\n                    registerEventHandler(bHandler);\n                    unregisterEventHandler(aHandler);\n                }\n                matchCount++;\n            } else {\n                unregisterEventHandler(aHandler);\n            }\n        }\n\n        // Insert new events.\n        keys = Object.keys(b);\n        i = 0;\n        while (matchCount < keys.length && i < keys.length) {\n            key = keys[i++];\n            if (!a.hasOwnProperty(key)) {\n                registerEventHandler(b[key]);\n                matchCount++;\n            }\n        }\n    }\n\n    setEventHandlerListToDOMNode(node, b === null ? undefined : b);\n}\n\n/**\n * Remove DOM events.\n *\n * @param node HTML or SVG Element.\n * @param a Old events.\n * @param b New events.\n */\nexport function removeEvents(events: EventHandlerList): void {\n    const keys = Object.keys(events);\n    for (let i = 0; i < keys.length; i++) {\n        unregisterEventHandler(events[keys[i]]);\n    }\n}\n","/**\n * Event Dispatchers\n *\n * **EXPERIMENTAL API**\n */\n\nimport { SyntheticEvent } from \"./synthetic_event\";\n\n/**\n * Event Dispatcher Subscription Flags.\n */\nexport const enum EventDispatcherSubscriptionFlags {\n    Canceled = 1,\n    Locked = 1 << 1,\n}\n\n/**\n * Event Dispatcher Subscription.\n */\nexport class EventDispatcherSubscription {\n    /**\n     * Prev item in a linked list.\n     */\n    _prev: EventDispatcherSubscription | null;\n    /**\n     * Next item in a linked list.\n     */\n    _next: EventDispatcherSubscription | null;\n    /**\n     * Event Dispatcher.\n     */\n    dispatcher: EventDispatcher;\n    /**\n     * See `EventDispatcherSubscriptionFlags` for details.\n     */\n    flags: EventDispatcherSubscriptionFlags;\n    /**\n     * Subscription Handler function.\n     */\n    handler: (ev: SyntheticEvent<any>, type?: number) => void;\n    /**\n     * Type filter.\n     */\n    filter: number | undefined;\n\n    constructor(\n        dispatcher: EventDispatcher,\n        flags: EventDispatcherSubscriptionFlags,\n        handler: (ev: SyntheticEvent<any>, type?: number) => void,\n        filter: number | undefined,\n    ) {\n        this._prev = null;\n        this._next = null;\n        this.dispatcher = dispatcher;\n        this.flags = flags;\n        this.handler = handler;\n        this.filter = filter;\n    }\n\n    /**\n     * Cancel Event Subscription.\n     */\n    cancel(): void {\n        if (!(this.flags & EventDispatcherSubscriptionFlags.Canceled)) {\n            this.flags |= EventDispatcherSubscriptionFlags.Canceled;\n            if (!(this.flags & EventDispatcherSubscriptionFlags.Locked)) {\n                unsubscribe(this);\n            }\n        }\n    }\n}\n\n/**\n * Unsubscribe Event Dispatcher.\n *\n * @param sub Event dispatcher subscription.\n */\nfunction unsubscribe(sub: EventDispatcherSubscription): void {\n    if (sub._prev) {\n        sub._prev._next = sub._next;\n    } else {\n        sub.dispatcher._nextSubscription = sub._next;\n    }\n    if (sub._next) {\n        sub._next._prev = sub._prev;\n    }\n\n    if (--sub.dispatcher.counter === 0) {\n        sub.dispatcher.deactivate();\n    }\n}\n\n/**\n * Abstract Event Dispatcher.\n */\nexport abstract class EventDispatcher {\n    /**\n     * Number of registered dependencies (Event Handlers and Event Dispatcher subscribers).\n     *\n     * When this number goes from 0 to 1, lifecycle method `activate` is invoked.\n     * When this number goes to 0, lifecycle method `deactivate` is invoked.\n     */\n    counter: number;\n    /**\n     * Event Dispatcher subscribers implemented with a Linked List.\n     */\n    _nextSubscription: EventDispatcherSubscription | null;\n\n    constructor() {\n        this.counter = 0;\n        this._nextSubscription = null;\n    }\n\n    /**\n     * Dispatch Event to all subscribers.\n     *\n     * @param events Events to dispatch.\n     */\n    dispatchEventToSubscribers(event: SyntheticEvent<any>, type?: number): void {\n        let s = this._nextSubscription;\n        while (s) {\n            if (type === undefined || (s.filter & (type as any as number))) {\n                s.flags |= EventDispatcherSubscriptionFlags.Locked;\n                s.handler(event, type);\n                s.flags &= ~EventDispatcherSubscriptionFlags.Locked;\n            }\n            if (s.flags & EventDispatcherSubscriptionFlags.Canceled) {\n                const tmp = s;\n                s = s._next;\n                unsubscribe(tmp);\n            } else {\n                s = s._next;\n            }\n        }\n    }\n\n    /**\n     * Lifecycle method `activate` is invoked when Event Dispatcher is activated.\n     */\n    activate(): void {\n        /* tslint:disable:no-empty */\n        /* tslint:enable:no-empty */\n    }\n\n    /**\n     * Lifecycle method `deactivate` is invoked when Event Dispatcher is deactivated.\n     */\n    deactivate(): void {\n        /* tslint:disable:no-empty */\n        /* tslint:enable:no-empty */\n    }\n\n    /**\n     * Subscribe for events.\n     *\n     * @param dispatcher Event Dispatcher.\n     * @param data Opaque data that will be returned to subscriber.\n     * @param type Type that will be used to filter incoming events.\n     * @param flags Subscription flags.\n     */\n    subscribe(\n        handler: (ev: SyntheticEvent<any>, type?: number) => void,\n        filter?: number,\n        flags: EventDispatcherSubscriptionFlags = 0,\n    ): EventDispatcherSubscription {\n        const s = new EventDispatcherSubscription(this, flags, handler, filter);\n        if (this._nextSubscription) {\n            this._nextSubscription._prev = s;\n            s._next = this._nextSubscription;\n        }\n        this._nextSubscription = s;\n\n        if (this.counter++ === 0) {\n            this.activate();\n        }\n\n        return s;\n    }\n\n    /**\n     * Register an Event Handler.\n     *\n     * @param handler Event Handler.\n     */\n    registerHandler(handler: (ev: SyntheticEvent<any>) => void): void {\n        if (this.counter++ === 0) {\n            this.activate();\n        }\n        this.didRegisterHandler(handler);\n    }\n\n    /**\n     * Unregister an Event Handler.\n     *\n     * @param handler Event Handler.\n     */\n    unregisterHandler(handler: (ev: SyntheticEvent<any>) => void): void {\n        if (--this.counter === 0) {\n            this.deactivate();\n        }\n        this.didUnregisterHandler(handler);\n    }\n\n    /**\n     * Lifecycle method `didRegisterHandler` is invoked after Event Handler registration.\n     *\n     * @param handler Event Handler.\n     */\n    didRegisterHandler(_handler: (ev: SyntheticEvent<any>) => void): void {\n        /* tslint:disable:no-empty */\n        /* tslint:enable:no-empty */\n    }\n\n    /**\n     * Lifecycle method `didUnregisterHandler` is invoked after Event Handler unregistration.\n     *\n     * @param handler Event Handler.\n     */\n    didUnregisterHandler(_handler: (ev: SyntheticEvent<any>) => void): void {\n        /* tslint:disable:no-empty */\n        /* tslint:enable:no-empty */\n    }\n}\n","import { EventDispatcher } from \"./event_dispatcher\";\nimport { EventHandler } from \"./event_handler\";\nimport { getEventHandlerListFromDOMNode } from \"./utils\";\n\n/**\n * Dispatch Target.\n */\nexport interface DispatchTarget {\n    /**\n     * Target Element.\n     */\n    target: Element;\n    /**\n     * Matched Event Handlers.\n     */\n    handlers: EventHandler<any>[];\n}\n\n/**\n * Accumulate Event Handlers that has a matching Event Dispatcher.\n *\n * @param result Result array.\n * @param target Target Element.\n * @param dispatcher Event Dispatcher.\n */\nexport function accumulateDispatchTargetsFromElement(\n    result: DispatchTarget[],\n    target: Element,\n    dispatcher: EventDispatcher,\n): void {\n    const events = getEventHandlerListFromDOMNode(target);\n    if (events) {\n        let matches: EventHandler<any>[] | undefined;\n        const keys = Object.keys(events);\n        for (let i = 0; i < keys.length; i++) {\n            const ev = events[keys[i]];\n            if (ev.dispatcher === dispatcher) {\n                if (!matches) {\n                    matches = [ev];\n                } else {\n                    matches.push(ev);\n                }\n            }\n        }\n        if (matches) {\n            result.push({\n                target: target,\n                handlers: matches,\n            });\n        }\n    }\n}\n\n/**\n * Traverses the DOM tree from the target Element to the document top and accumulates Dispatch Targets that has matching\n * Event Dispatcher.\n *\n * @param target DOM Element.\n * @param dispatcher Event Dispatcher instance.\n * @returns An array of Dispatch Targets.\n */\nexport function accumulateDispatchTargets(\n    target: Element | null,\n    dispatcher: EventDispatcher,\n): DispatchTarget[] {\n    const result: DispatchTarget[] = [];\n\n    while (target) {\n        accumulateDispatchTargetsFromElement(result, target, dispatcher);\n        target = target.parentElement;\n    }\n\n    return result;\n}\n","import { EventHandlerFlags, SyntheticEventFlags } from \"./flags\";\nimport { SyntheticEvent } from \"./synthetic_event\";\nimport { DispatchTarget } from \"./traverse_dom\";\n\n/**\n * Dispatch event to local(on the same DOM Node) Event Handlers.\n *\n * It will stop dispatching when event has `StopImmediatePropagation` flag.\n *\n * @param localHandlers Local Event Handlers.\n * @param event Synthetic Event.\n */\nfunction dispatchEventToLocalEventHandlers<E extends SyntheticEvent<any>>(\n    dispatchTarget: DispatchTarget,\n    event: E,\n    matchFlags: EventHandlerFlags,\n): void {\n    event.currentTarget = dispatchTarget.target;\n\n    for (let j = 0; j < dispatchTarget.handlers.length; j++) {\n        const handler = dispatchTarget.handlers[j];\n        if (handler.flags & matchFlags) {\n            handler.fn(event);\n            if (event._flags & SyntheticEventFlags.StoppedImmediatePropagation) {\n                return;\n            }\n        }\n    }\n}\n\n/**\n * Dispatch event to Dispatch Targets.\n *\n * https://www.w3.org/TR/DOM-Level-3-Events/#event-flow\n *\n * @param dispatchTarget Dispatch Targets.\n * @param event Event to dispatch.\n */\nexport function dispatchEvent<E extends SyntheticEvent<any>>(\n    dispatchTargets: DispatchTarget[],\n    event: E,\n    bubble: boolean,\n): void {\n    let i = dispatchTargets.length - 1;\n    let dispatchTarget;\n\n    // capture phase\n    while (i >= 0) {\n        dispatchTarget = dispatchTargets[i];\n        if (dispatchTarget.target !== event.target) {\n            dispatchEventToLocalEventHandlers(dispatchTargets[i--], event, EventHandlerFlags.Capture);\n            if (event._flags & SyntheticEventFlags.StoppedPropagation) {\n                return;\n            }\n        } else {\n            break;\n        }\n    }\n\n    // target phase\n    dispatchTarget = dispatchTargets[0];\n    if (dispatchTarget.target === event.target) {\n        event._flags |= SyntheticEventFlags.AtTargetPhase;\n        dispatchEventToLocalEventHandlers(dispatchTarget, event,\n            EventHandlerFlags.Capture | EventHandlerFlags.Bubble);\n        if (event._flags & SyntheticEventFlags.StoppedPropagation) {\n            return;\n        }\n        event._flags &= ~SyntheticEventFlags.AtTargetPhase;\n        i = 1;\n    } else {\n        i = 0;\n    }\n\n    // bubble phase\n    if (bubble) {\n        event._flags |= SyntheticEventFlags.BubblePhase;\n        while (i < dispatchTargets.length) {\n            dispatchEventToLocalEventHandlers(dispatchTargets[i++], event, EventHandlerFlags.Bubble);\n            if (event._flags & SyntheticEventFlags.StoppedPropagation) {\n                return;\n            }\n        }\n    }\n}\n","import { getEventTarget } from \"../common/dom\";\nimport { NativeEventDispatcherFlags, SyntheticEventFlags } from \"./flags\";\nimport { SyntheticEvent, SyntheticEventClass } from \"./synthetic_event\";\nimport { EventDispatcher } from \"./event_dispatcher\";\nimport { accumulateDispatchTargets } from \"./traverse_dom\";\nimport { dispatchEvent } from \"./dispatch_event\";\nimport { getEventOptions } from \"./utils\";\nimport { scheduleTask } from \"../scheduler/task\";\n\n/**\n * Native Event Dispatcher.\n */\nexport class NativeEventDispatcher<E extends SyntheticEventClass<Event, SyntheticEvent<any>>>\n    extends EventDispatcher {\n    /**\n     * See `EventDispatcherFlags` for details.\n     */\n    readonly flags: NativeEventDispatcherFlags;\n    /**\n     * Event name.\n     */\n    readonly name: string;\n    /**\n     * Synthetic Event Constructor.\n     */\n    readonly eventType: E;\n    /**\n     * `dispatch` method with bounded context.\n     */\n    private readonly _dispatch: (ev: Event) => void;\n    /**\n     * Flag indicating that Event Dispatcher will be deactivated in the task.\n     */\n    private _deactivating: boolean;\n\n    constructor(\n        flags: NativeEventDispatcherFlags,\n        name: string,\n        eventType: E,\n    ) {\n        super();\n        this.flags = flags;\n        this.name = name;\n        this.eventType = eventType;\n        this._dispatch = this.dispatchNativeEvent.bind(this);\n        this._deactivating = false;\n    }\n\n    private dispatchNativeEvent(ev: Event): void {\n        const subs = this._nextSubscription;\n\n        let s: SyntheticEvent<any> | undefined;\n        if (subs) {\n            s = new this.eventType(this, 0, ev, getEventTarget(ev), ev.timeStamp, ev.type);\n            this.dispatchEventToSubscribers(s);\n        }\n\n        if (s &&\n            (s._flags & (SyntheticEventFlags.StoppedImmediatePropagation | SyntheticEventFlags.StoppedPropagation))) {\n            return;\n        }\n        const handlers = accumulateDispatchTargets(getEventTarget(ev) as Element, this);\n\n        if (handlers.length > 0) {\n            if (!s) {\n                s = new this.eventType(this, 0, ev, getEventTarget(ev), ev.timeStamp, ev.type);\n            }\n            dispatchEvent(handlers, s!, !!(this.flags & NativeEventDispatcherFlags.Bubbles));\n        }\n\n        if (s && s._flags & SyntheticEventFlags.PreventedDefault) {\n            ev.preventDefault();\n        }\n    }\n\n    activate(): void {\n        if (this._deactivating) {\n            this._deactivating = false;\n        } else {\n            super.activate();\n            document.addEventListener(\n                this.name,\n                this._dispatch as any as (ev: Event) => void,\n                getEventOptions(this.flags) as boolean);\n        }\n    }\n\n    deactivate(): void {\n        if (!this._deactivating) {\n            this._deactivating = true;\n            scheduleTask(() => {\n                if (this._deactivating) {\n                    document.removeEventListener(\n                        this.name,\n                        this._dispatch as any as (ev: Event) => void,\n                        getEventOptions(this.flags) as boolean);\n                    super.deactivate();\n                    this._deactivating = false;\n                }\n            });\n        }\n    }\n}\n","import { getEventCharCode, getEventKey } from \"../common/dom\";\nimport { DEV_MODE, DevModeFlags, printWarnOnce } from \"../dev_mode/dev_mode\";\nimport { SyntheticEventFlags } from \"./flags\";\nimport { EventDispatcher } from \"./event_dispatcher\";\n\n/**\n * Synthetic Event.\n */\nexport class SyntheticEvent<D> implements Event {\n    /**\n     * @deprecated\n     */\n    initEvent: (eventTypeArg: string, canBubbleArg: boolean, cancelableArg: boolean) => void;\n\n    /**\n     * Old IE Property.\n     *\n     * @deprecated\n     */\n    cancelBubble: boolean;\n    /**\n     * Old IE Property.\n     *\n     * @deprecated\n     */\n    returnValue: boolean;\n    /**\n     * Old IE Property.\n     *\n     * @deprecated\n     */\n    readonly srcElement: Element | null;\n\n    readonly dispatcher: EventDispatcher;\n    _flags: SyntheticEventFlags;\n    _data: D;\n    readonly target: EventTarget;\n    currentTarget: EventTarget;\n    timeStamp: number;\n    type: any;\n    CAPTURING_PHASE: number;\n    AT_TARGET: number;\n    BUBBLING_PHASE: number;\n\n    constructor(\n        dispatcher: EventDispatcher,\n        flags: SyntheticEventFlags,\n        data: D,\n        target: EventTarget,\n        timeStamp: number,\n        type: any,\n    ) {\n        this.dispatcher = dispatcher;\n        this._flags = flags;\n        this._data = data;\n        this.target = target;\n        this.currentTarget = target;\n        this.timeStamp = timeStamp;\n        this.type = type;\n    }\n\n    get defaultPrevented(): boolean {\n        return !!(this._flags & SyntheticEventFlags.PreventedDefault);\n    }\n\n    get bubbles(): boolean {\n        return !!(this._flags & SyntheticEventFlags.Bubbles);\n    }\n\n    get cancelable(): boolean {\n        return !!(this._flags & SyntheticEventFlags.Cancelable);\n    }\n\n    get isTrusted(): boolean {\n        return !!(this._flags & SyntheticEventFlags.IsTrusted);\n    }\n\n    get eventPhase(): number {\n        if (this._flags & SyntheticEventFlags.AtTargetPhase) {\n            return 2;\n        } else if (this._flags & SyntheticEventFlags.BubblePhase) {\n            return 3;\n        }\n        return 1;\n    }\n\n    stopPropagation() {\n        this._flags |= SyntheticEventFlags.StoppedPropagation;\n    }\n\n    stopImmediatePropagation() {\n        this._flags |= SyntheticEventFlags.StoppedPropagation | SyntheticEventFlags.StoppedImmediatePropagation;\n    }\n\n    preventDefault() {\n        this._flags |= SyntheticEventFlags.PreventedDefault;\n    }\n}\n\nSyntheticEvent.prototype.CAPTURING_PHASE = 1;\nSyntheticEvent.prototype.AT_TARGET = 2;\nSyntheticEvent.prototype.BUBBLING_PHASE = 3;\n\nexport interface SyntheticEventClass<D, E extends SyntheticEvent<any>> {\n    new (\n        dispatcher: EventDispatcher,\n        flags: SyntheticEventFlags,\n        data: D,\n        target: EventTarget,\n        timeStamp: number,\n        type: any,\n    ): E;\n}\n\nexport class SyntheticUIEvent<T extends UIEvent> extends SyntheticEvent<T> implements UIEvent {\n    /**\n     * @deprecated\n     */\n    initUIEvent: (\n        typeArg: string,\n        canBubbleArg: boolean,\n        cancelableArg: boolean,\n        viewArg: Window,\n        detailArg: number,\n    ) => void;\n\n    get detail() {\n        return this._data.detail;\n    }\n\n    get view() {\n        return this._data.view;\n    }\n}\n\nexport class SyntheticKeyboardEvent extends SyntheticUIEvent<KeyboardEvent> implements KeyboardEvent {\n    /**\n     * @deprecated\n     */\n    initKeyboardEvent: (\n        typeArg: string,\n        canBubbleArg: boolean,\n        cancelableArg: boolean,\n        viewArg: Window,\n        keyArg: string,\n        locationArg: number,\n        modifiersListArg: string,\n        repeat: boolean,\n        locale: string,\n    ) => void;\n\n    get altKey(): boolean {\n        return this._data.altKey;\n    }\n\n    get char(): string | null {\n        return this._data.char;\n    }\n\n    get charCode(): number {\n        /**\n         * #quirks\n         */\n        if (this._data.type === \"keypress\") {\n            return getEventCharCode(this._data);\n        }\n        return 0;\n    }\n\n    get ctrlKey(): boolean {\n        return this._data.ctrlKey;\n    }\n\n    get key(): string {\n        /**\n         * #quirks\n         */\n        return getEventKey(this._data);\n    }\n\n    get keyCode(): number {\n        /**\n         * #quirks\n         */\n        switch (this._data.type) {\n            case \"keydown\":\n            case \"keyup\":\n                return this._data.keyCode;\n        }\n\n        return 0;\n    }\n\n    get locale(): string {\n        return this._data.locale;\n    }\n\n    get location(): number {\n        return this._data.location;\n    }\n\n    get metaKey(): boolean {\n        return this._data.metaKey;\n    }\n\n    get repeat(): boolean {\n        return this._data.repeat;\n    }\n\n    get shiftKey(): boolean {\n        return this._data.shiftKey;\n    }\n\n    get which(): number {\n        /**\n         * #quirks\n         */\n        switch (this._data.type) {\n            case \"keypress\":\n                return getEventCharCode(this._data);\n            case \"keydown\":\n            case \"keyup\":\n                return this._data.keyCode;\n        }\n\n        return 0;\n    }\n\n    get code(): string {\n        /**\n         * #quirks\n         */\n        if (__IVI_DEV__) {\n            if (!(DEV_MODE & DevModeFlags.DisableWarningsForUnsupportedFeatures)) {\n                printWarnOnce(\"events.KeyboardEvent.code\",\n                    \"KeyboardEvent 'code' property doesn't work in many major browsers, and there is no easy \" +\n                    \"way to polyfill this property on browsers that doesn't support it.\");\n            }\n        }\n        return this._data.code;\n    }\n\n    get DOM_KEY_LOCATION_JOYSTICK(): number {\n        return this._data.DOM_KEY_LOCATION_JOYSTICK;\n    }\n\n    get DOM_KEY_LOCATION_LEFT(): number {\n        return this._data.DOM_KEY_LOCATION_LEFT;\n    }\n\n    get DOM_KEY_LOCATION_MOBILE(): number {\n        return this._data.DOM_KEY_LOCATION_MOBILE;\n    }\n\n    get DOM_KEY_LOCATION_NUMPAD(): number {\n        return this._data.DOM_KEY_LOCATION_NUMPAD;\n    }\n\n    get DOM_KEY_LOCATION_RIGHT(): number {\n        return this._data.DOM_KEY_LOCATION_RIGHT;\n    }\n\n    get DOM_KEY_LOCATION_STANDARD(): number {\n        return this._data.DOM_KEY_LOCATION_STANDARD;\n    }\n\n    getModifierState(keyArg: string): boolean {\n        return this._data.getModifierState(keyArg);\n    }\n}\n\nexport class SyntheticMouseEvent<T extends MouseEvent> extends SyntheticUIEvent<T> implements MouseEvent {\n    /**\n     * @deprecated\n     */\n    initMouseEvent: (\n        typeArg: string,\n        canBubbleArg: boolean,\n        cancelableArg: boolean,\n        viewArg: Window,\n        detailArg: number,\n        screenXArg: number,\n        screenYArg: number,\n        clientXArg: number,\n        clientYArg: number,\n        ctrlKeyArg: boolean,\n        altKeyArg: boolean,\n        shiftKeyArg: boolean,\n        metaKeyArg: boolean,\n        buttonArg: number,\n        relatedTargetArg: EventTarget | null,\n    ) => void;\n\n    get altKey(): boolean {\n        return this._data.altKey;\n    }\n\n    get button(): number {\n        return this._data.button;\n    }\n\n    get buttons(): number {\n        /**\n         * #quirks\n         *\n         * Doesn't work in Safari.\n         */\n        if (__IVI_DEV__) {\n            if (!(DEV_MODE & DevModeFlags.DisableWarningsForUnsupportedFeatures)) {\n                printWarnOnce(\"events.MouseEvent.buttons\",\n                    \"MouseEvent 'buttons' property doesn't work on Safari, and there is no easy way to \" +\n                    \"polyfill this property on browsers that doesn't support it. Almost all use cases should be \" +\n                    \"solved with a 'button' property.\");\n            }\n        }\n        return this._data.buttons;\n    }\n\n    get clientX(): number {\n        return this._data.clientX;\n    }\n\n    get clientY(): number {\n        return this._data.clientY;\n    }\n\n    get ctrlKey(): boolean {\n        return this._data.ctrlKey;\n    }\n\n    get fromElement(): Element {\n        return this._data.fromElement;\n    }\n\n    get layerX(): number {\n        return this._data.layerX;\n    }\n\n    get layerY(): number {\n        return this._data.layerY;\n    }\n\n    get metaKey(): boolean {\n        return this._data.metaKey;\n    }\n\n    get movementX(): number {\n        return this._data.movementX;\n    }\n\n    get movementY(): number {\n        return this._data.movementY;\n    }\n\n    get offsetX(): number {\n        return this._data.offsetX;\n    }\n\n    get offsetY(): number {\n        return this._data.offsetY;\n    }\n\n    get pageX(): number {\n        return this._data.pageX;\n    }\n\n    get pageY(): number {\n        return this._data.pageY;\n    }\n\n    get relatedTarget(): EventTarget {\n        return this._data.relatedTarget;\n    }\n\n    get screenX(): number {\n        return this._data.screenX;\n    }\n\n    get screenY(): number {\n        return this._data.screenY;\n    }\n\n    get shiftKey(): boolean {\n        return this._data.shiftKey;\n    }\n\n    get toElement(): Element {\n        return this._data.toElement;\n    }\n\n    get which(): number {\n        return this._data.which;\n    }\n\n    get x(): number {\n        return this._data.x;\n    }\n\n    get y(): number {\n        return this._data.y;\n    }\n\n    getModifierState(keyArg: string): boolean {\n        return this._data.getModifierState(keyArg);\n    }\n}\n\nexport class SyntheticTouchEvent extends SyntheticUIEvent<TouchEvent> implements TouchEvent {\n    get altKey(): boolean {\n        return this._data.altKey;\n    }\n\n    get changedTouches(): TouchList {\n        return this._data.changedTouches;\n    }\n\n    get ctrlKey(): boolean {\n        return this._data.ctrlKey;\n    }\n\n    get metaKey(): boolean {\n        return this._data.metaKey;\n    }\n\n    get shiftKey(): boolean {\n        return this._data.shiftKey;\n    }\n\n    get targetTouches(): TouchList {\n        return this._data.targetTouches;\n    }\n\n    get touches(): TouchList {\n        return this._data.touches;\n    }\n}\n\nexport class SyntheticPointerEvent extends SyntheticMouseEvent<PointerEvent> implements PointerEvent {\n    /**\n     * @deprecated\n     */\n    initPointerEvent: (\n        typeArg: string,\n        canBubbleArg: boolean,\n        cancelableArg: boolean,\n        viewArg: Window,\n        detailArg: number,\n        screenXArg: number,\n        screenYArg: number,\n        clientXArg: number,\n        clientYArg: number,\n        ctrlKeyArg: boolean,\n        altKeyArg: boolean,\n        shiftKeyArg: boolean,\n        metaKeyArg: boolean,\n        buttonArg: number,\n        relatedTargetArg: EventTarget,\n        offsetXArg: number,\n        offsetYArg: number,\n        widthArg: number,\n        heightArg: number,\n        pressure: number,\n        rotation: number,\n        tiltX: number,\n        tiltY: number,\n        pointerIdArg: number,\n        pointerType: any,\n        hwTimestampArg: number,\n        isPrimary: boolean,\n    ) => void;\n\n    get currentPoint(): any {\n        return this._data.currentPoint;\n    }\n\n    get height(): number {\n        return this._data.height;\n    }\n\n    get hwTimestamp(): number {\n        return this._data.hwTimestamp;\n    }\n\n    get intermediatePoints(): any {\n        return this._data.intermediatePoints;\n    }\n\n    get isPrimary(): boolean {\n        return this._data.isPrimary;\n    }\n\n    get pointerId(): number {\n        return this._data.pointerId;\n    }\n\n    get pointerType(): any {\n        return this._data.pointerType;\n    }\n\n    get pressure(): number {\n        return this._data.pressure;\n    }\n\n    get rotation(): number {\n        return this._data.rotation;\n    }\n\n    get tiltX(): number {\n        return this._data.tiltX;\n    }\n\n    get tiltY(): number {\n        return this._data.tiltY;\n    }\n\n    get width(): number {\n        return this._data.width;\n    }\n\n    getCurrentPoint(element: Element): void {\n        return this._data.getCurrentPoint(element);\n    }\n\n    getIntermediatePoints(element: Element): void {\n        return this._data.getIntermediatePoints(element);\n    }\n}\n\nexport class SyntheticDragEvent extends SyntheticMouseEvent<DragEvent> implements DragEvent {\n    /**\n     * @deprecated\n     */\n    initDragEvent: (\n        typeArg: string,\n        canBubbleArg: boolean,\n        cancelableArg: boolean,\n        viewArg: Window,\n        detailArg: number,\n        screenXArg: number,\n        screenYArg: number,\n        clientXArg: number,\n        clientYArg: number,\n        ctrlKeyArg: boolean,\n        altKeyArg: boolean,\n        shiftKeyArg: boolean,\n        metaKeyArg: boolean,\n        buttonArg: number,\n        relatedTargetArg: EventTarget,\n        dataTransferArg: DataTransfer,\n    ) => void;\n\n    msConvertURL: (\n        file: File,\n        targetType: string,\n        targetURL?: string,\n    ) => void;\n\n    get dataTransfer(): DataTransfer {\n        return this._data.dataTransfer;\n    }\n}\n\nexport class SyntheticWheelEvent extends SyntheticMouseEvent<WheelEvent> implements WheelEvent {\n    /**\n     * @deprecated\n     */\n    initWheelEvent: (\n        typeArg: string,\n        canBubbleArg: boolean,\n        cancelableArg: boolean,\n        viewArg: Window, detailArg:\n            number, screenXArg: number,\n        screenYArg: number,\n        clientXArg: number,\n        clientYArg: number,\n        buttonArg: number,\n        relatedTargetArg: EventTarget,\n        modifiersListArg: string,\n        deltaXArg: number,\n        deltaYArg: number,\n        deltaZArg: number,\n        deltaMode: number,\n    ) => void;\n\n    getCurrentPoint: (element: Element) => void;\n\n    readonly wheelDelta: number;\n    readonly wheelDeltaX: number;\n    readonly wheelDeltaY: number;\n\n    get deltaMode(): number {\n        return this._data.deltaMode;\n    }\n\n    get deltaX(): number {\n        return this._data.deltaX;\n    }\n\n    get deltaY(): number {\n        return this._data.deltaY;\n    }\n\n    get deltaZ(): number {\n        return this._data.deltaZ;\n    }\n\n    get DOM_DELTA_LINE(): number {\n        return this._data.DOM_DELTA_LINE;\n    }\n    get DOM_DELTA_PAGE(): number {\n        return this._data.DOM_DELTA_PAGE;\n    }\n    get DOM_DELTA_PIXEL(): number {\n        return this._data.DOM_DELTA_PIXEL;\n    }\n}\n\nexport class SyntheticFocusEvent extends SyntheticUIEvent<FocusEvent> implements FocusEvent {\n    /**\n     * @deprecated\n     */\n    initFocusEvent: (\n        typeArg: string,\n        canBubbleArg: boolean,\n        cancelableArg: boolean,\n        viewArg: Window,\n        detailArg: number,\n        relatedTargetArg: EventTarget,\n    ) => void;\n\n    get relatedTarget(): EventTarget {\n        return this._data.relatedTarget;\n    }\n}\n\nexport class SyntheticAriaRequestEvent extends SyntheticEvent<AriaRequestEvent> implements AriaRequestEvent {\n    get attributeName(): string {\n        return this._data.attributeName;\n    }\n\n    get attributeValue(): string | null {\n        return this._data.attributeValue;\n    }\n    set attributeValue(value: string | null) {\n        this._data.attributeValue = value;\n    }\n}\n\nexport class SyntheticClipboardEvent extends SyntheticEvent<ClipboardEvent> implements ClipboardEvent {\n    get clipboardData(): DataTransfer {\n        return this._data.clipboardData;\n    }\n}\n\nexport class SyntheticErrorEvent extends SyntheticEvent<ErrorEvent> implements ErrorEvent {\n    /**\n     * @deprecated\n     */\n    initErrorEvent: (\n        typeArg: string,\n        canBubbleArg: boolean,\n        cancelableArg: boolean,\n        messageArg: string,\n        filenameArg: string,\n        linenoArg: number,\n    ) => void;\n\n    get colno(): number {\n        return this._data.colno;\n    }\n\n    get error(): any {\n        return this._data.error;\n    }\n\n    get filename(): string {\n        return this._data.filename;\n    }\n\n    get lineno(): number {\n        return this._data.lineno;\n    }\n\n    get message(): string {\n        return this._data.message;\n    }\n}\n\nexport class SyntheticMediaEncryptedEvent extends SyntheticEvent<MediaEncryptedEvent>\n    implements MediaEncryptedEvent {\n\n    get initData(): ArrayBuffer | null {\n        return this._data.initData;\n    }\n\n    get initDataType(): string {\n        return this._data.initDataType;\n    }\n}\n\nexport class SyntheticMediaStreamErrorEvent extends SyntheticEvent<MediaStreamErrorEvent>\n    implements MediaStreamErrorEvent {\n\n    get error(): MediaStreamError | null {\n        return this._data.error;\n    }\n}\n\nexport class SyntheticProgressEvent extends SyntheticEvent<ProgressEvent> implements ProgressEvent {\n    /**\n     * @deprecated\n     */\n    initProgressEvent: (\n        typeArg: string,\n        canBubbleArg: boolean,\n        cancelableArg: boolean,\n        lengthComputableArg: boolean,\n        loadedArg: number,\n        totalArg: number,\n    ) => void;\n\n    get lengthComputable(): boolean {\n        return this._data.lengthComputable;\n    }\n\n    get loaded(): number {\n        return this._data.loaded;\n    }\n\n    get total(): number {\n        return this._data.total;\n    }\n}\n","/**\n * Event Handlers.\n *\n * Optimizing compilers should inline all this functions and completely remove unused code.\n */\n\nimport { EventHandlerFlags, NativeEventDispatcherFlags } from \"./flags\";\nimport { EventHandler } from \"./event_handler\";\nimport { EventDispatcher } from \"./event_dispatcher\";\nimport { NativeEventDispatcher } from \"./native_event_dispatcher\";\nimport {\n    SyntheticEvent, SyntheticUIEvent, SyntheticDragEvent, SyntheticErrorEvent,\n    SyntheticKeyboardEvent, SyntheticFocusEvent, SyntheticMediaEncryptedEvent, SyntheticMediaStreamErrorEvent,\n    SyntheticMouseEvent, SyntheticAriaRequestEvent, SyntheticClipboardEvent, SyntheticPointerEvent,\n    SyntheticTouchEvent, SyntheticWheelEvent, SyntheticProgressEvent, SyntheticEventClass,\n} from \"./synthetic_event\";\n\n/**\n * Helper function that creates Event Handler objects.\n *\n * @param dispatcher Dispatcher instance.\n * @param fn Event Handler function.\n * @param options Event Options. Value with a boolean type indicates that events of this type should use capture mode\n *   and it will be dispatched to the registered listener before being dispatched to any EventTarget beneath it in the\n *   DOM tree.\n * @returns EventHandler object.\n */\nexport function createEventHandler<E extends SyntheticEvent<any>>(\n    dispatcher: EventDispatcher,\n    fn: (ev: E) => void,\n    capture?: boolean): EventHandler<E> {\n\n    return {\n        dispatcher: dispatcher,\n        flags: capture ? EventHandlerFlags.Capture : EventHandlerFlags.Bubble,\n        fn: fn,\n    } as EventHandler<E>;\n}\n\nexport interface NativeEventDispatchersList {\n    abort: NativeEventDispatcher<SyntheticEventClass<UIEvent, SyntheticUIEvent<UIEvent>>>;\n    activate: NativeEventDispatcher<SyntheticEventClass<UIEvent, SyntheticUIEvent<UIEvent>>>;\n    ariarequest: NativeEventDispatcher<SyntheticEventClass<AriaRequestEvent, SyntheticAriaRequestEvent>>;\n    beforeactivate: NativeEventDispatcher<SyntheticEventClass<UIEvent, SyntheticUIEvent<UIEvent>>>;\n    beforecopy: NativeEventDispatcher<SyntheticEventClass<ClipboardEvent, SyntheticClipboardEvent>>;\n    beforecut: NativeEventDispatcher<SyntheticEventClass<ClipboardEvent, SyntheticClipboardEvent>>;\n    beforedeactivate: NativeEventDispatcher<SyntheticEventClass<UIEvent, SyntheticUIEvent<UIEvent>>>;\n    beforepaste: NativeEventDispatcher<SyntheticEventClass<ClipboardEvent, SyntheticClipboardEvent>>;\n    blur: NativeEventDispatcher<SyntheticEventClass<FocusEvent, SyntheticFocusEvent>>;\n    canplay: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    canplaythrough: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    change: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    click: NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>;\n    contextmenu: NativeEventDispatcher<SyntheticEventClass<PointerEvent, SyntheticPointerEvent>>;\n    copy: NativeEventDispatcher<SyntheticEventClass<ClipboardEvent, SyntheticClipboardEvent>>;\n    cuechange: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    cut: NativeEventDispatcher<SyntheticEventClass<ClipboardEvent, SyntheticClipboardEvent>>;\n    dblclick: NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>;\n    deactivate: NativeEventDispatcher<SyntheticEventClass<UIEvent, SyntheticUIEvent<UIEvent>>>;\n    drag: NativeEventDispatcher<SyntheticEventClass<DragEvent, SyntheticDragEvent>>;\n    dragend: NativeEventDispatcher<SyntheticEventClass<DragEvent, SyntheticDragEvent>>;\n    dragenter: NativeEventDispatcher<SyntheticEventClass<DragEvent, SyntheticDragEvent>>;\n    dragleave: NativeEventDispatcher<SyntheticEventClass<DragEvent, SyntheticDragEvent>>;\n    dragover: NativeEventDispatcher<SyntheticEventClass<DragEvent, SyntheticDragEvent>>;\n    dragstart: NativeEventDispatcher<SyntheticEventClass<DragEvent, SyntheticDragEvent>>;\n    drop: NativeEventDispatcher<SyntheticEventClass<DragEvent, SyntheticDragEvent>>;\n    durationchange: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    emptied: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    encrypted: NativeEventDispatcher<SyntheticEventClass<MediaEncryptedEvent, SyntheticMediaEncryptedEvent>>;\n    ended: NativeEventDispatcher<SyntheticEventClass<MediaStreamErrorEvent, SyntheticMediaStreamErrorEvent>>;\n    error: NativeEventDispatcher<SyntheticEventClass<ErrorEvent, SyntheticErrorEvent>>;\n    focus: NativeEventDispatcher<SyntheticEventClass<FocusEvent, SyntheticFocusEvent>>;\n    gotpointercapture: NativeEventDispatcher<SyntheticEventClass<PointerEvent, SyntheticPointerEvent>>;\n    input: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    invalid: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    keydown: NativeEventDispatcher<SyntheticEventClass<KeyboardEvent, SyntheticKeyboardEvent>>;\n    keypress: NativeEventDispatcher<SyntheticEventClass<KeyboardEvent, SyntheticKeyboardEvent>>;\n    keyup: NativeEventDispatcher<SyntheticEventClass<KeyboardEvent, SyntheticKeyboardEvent>>;\n    load: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    loadeddata: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    loadedmetadata: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    loadstart: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    lostpointercapture: NativeEventDispatcher<SyntheticEventClass<PointerEvent, SyntheticPointerEvent>>;\n    mousedown: NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>;\n    mouseenter: NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>;\n    mouseleave: NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>;\n    mousemove: NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>;\n    mouseout: NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>;\n    mouseover: NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>;\n    mouseup: NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>;\n    paste: NativeEventDispatcher<SyntheticEventClass<ClipboardEvent, SyntheticClipboardEvent>>;\n    pause: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    play: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    playing: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    pointercancel: NativeEventDispatcher<SyntheticEventClass<PointerEvent, SyntheticPointerEvent>>;\n    pointerdown: NativeEventDispatcher<SyntheticEventClass<PointerEvent, SyntheticPointerEvent>>;\n    pointerenter: NativeEventDispatcher<SyntheticEventClass<PointerEvent, SyntheticPointerEvent>>;\n    pointerleave: NativeEventDispatcher<SyntheticEventClass<PointerEvent, SyntheticPointerEvent>>;\n    pointermove: NativeEventDispatcher<SyntheticEventClass<PointerEvent, SyntheticPointerEvent>>;\n    pointerout: NativeEventDispatcher<SyntheticEventClass<PointerEvent, SyntheticPointerEvent>>;\n    pointerover: NativeEventDispatcher<SyntheticEventClass<PointerEvent, SyntheticPointerEvent>>;\n    pointerup: NativeEventDispatcher<SyntheticEventClass<PointerEvent, SyntheticPointerEvent>>;\n    progress: NativeEventDispatcher<SyntheticEventClass<ProgressEvent, SyntheticProgressEvent>>;\n    ratechange: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    reset: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    scroll: NativeEventDispatcher<SyntheticEventClass<UIEvent, SyntheticUIEvent<UIEvent>>>;\n    seeked: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    seeking: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    select: NativeEventDispatcher<SyntheticEventClass<UIEvent, SyntheticUIEvent<UIEvent>>>;\n    selectstart: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    stalled: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    submit: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    suspend: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    timeupdate: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    touchcancel: NativeEventDispatcher<SyntheticEventClass<TouchEvent, SyntheticTouchEvent>>;\n    touchend: NativeEventDispatcher<SyntheticEventClass<TouchEvent, SyntheticTouchEvent>>;\n    touchmove: NativeEventDispatcher<SyntheticEventClass<TouchEvent, SyntheticTouchEvent>>;\n    touchstart: NativeEventDispatcher<SyntheticEventClass<TouchEvent, SyntheticTouchEvent>>;\n    unload: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    volumechange: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    waiting: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    wheel: NativeEventDispatcher<SyntheticEventClass<WheelEvent, SyntheticWheelEvent>>;\n};\n\n/* tslint:disable:max-line-length */\nexport const NativeEventDispatchers: NativeEventDispatchersList = {\n    abort: new NativeEventDispatcher<SyntheticEventClass<UIEvent, SyntheticUIEvent<UIEvent>>>(NativeEventDispatcherFlags.Capture, \"abort\", SyntheticUIEvent),\n    activate: new NativeEventDispatcher<SyntheticEventClass<UIEvent, SyntheticUIEvent<UIEvent>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"activate\", SyntheticUIEvent),\n    ariarequest: new NativeEventDispatcher<SyntheticEventClass<AriaRequestEvent, SyntheticAriaRequestEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"ariarequest\", SyntheticAriaRequestEvent),\n    beforeactivate: new NativeEventDispatcher<SyntheticEventClass<UIEvent, SyntheticUIEvent<UIEvent>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"beforeactivate\", SyntheticUIEvent),\n    beforecopy: new NativeEventDispatcher<SyntheticEventClass<ClipboardEvent, SyntheticClipboardEvent>>(NativeEventDispatcherFlags.Capture, \"beforecopy\", SyntheticClipboardEvent),\n    beforecut: new NativeEventDispatcher<SyntheticEventClass<ClipboardEvent, SyntheticClipboardEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"beforecut\", SyntheticClipboardEvent),\n    beforedeactivate: new NativeEventDispatcher<SyntheticEventClass<UIEvent, SyntheticUIEvent<UIEvent>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"beforedeactivate\", SyntheticUIEvent),\n    beforepaste: new NativeEventDispatcher<SyntheticEventClass<ClipboardEvent, SyntheticClipboardEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"beforepaste\", SyntheticClipboardEvent),\n    blur: new NativeEventDispatcher<SyntheticEventClass<FocusEvent, SyntheticFocusEvent>>(NativeEventDispatcherFlags.Capture, \"blur\", SyntheticFocusEvent),\n    canplay: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture, \"canplay\", SyntheticEvent),\n    canplaythrough: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture, \"canplaythrough\", SyntheticEvent),\n    change: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"change\", SyntheticEvent),\n    click: new NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"click\", SyntheticMouseEvent),\n    contextmenu: new NativeEventDispatcher<SyntheticEventClass<PointerEvent, SyntheticPointerEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"contextmenu\", SyntheticPointerEvent),\n    copy: new NativeEventDispatcher<SyntheticEventClass<ClipboardEvent, SyntheticClipboardEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"copy\", SyntheticClipboardEvent),\n    cuechange: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture, \"cuechange\", SyntheticEvent),\n    cut: new NativeEventDispatcher<SyntheticEventClass<ClipboardEvent, SyntheticClipboardEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"cut\", SyntheticClipboardEvent),\n    dblclick: new NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"dblclick\", SyntheticMouseEvent),\n    deactivate: new NativeEventDispatcher<SyntheticEventClass<UIEvent, SyntheticUIEvent<UIEvent>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"deactivate\", SyntheticUIEvent),\n    drag: new NativeEventDispatcher<SyntheticEventClass<DragEvent, SyntheticDragEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"drag\", SyntheticDragEvent),\n    dragend: new NativeEventDispatcher<SyntheticEventClass<DragEvent, SyntheticDragEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"dragend\", SyntheticDragEvent),\n    dragenter: new NativeEventDispatcher<SyntheticEventClass<DragEvent, SyntheticDragEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"dragenter\", SyntheticDragEvent),\n    dragleave: new NativeEventDispatcher<SyntheticEventClass<DragEvent, SyntheticDragEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"dragleave\", SyntheticDragEvent),\n    dragover: new NativeEventDispatcher<SyntheticEventClass<DragEvent, SyntheticDragEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"dragover\", SyntheticDragEvent),\n    dragstart: new NativeEventDispatcher<SyntheticEventClass<DragEvent, SyntheticDragEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"dragstart\", SyntheticDragEvent),\n    drop: new NativeEventDispatcher<SyntheticEventClass<DragEvent, SyntheticDragEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"drop\", SyntheticDragEvent),\n    durationchange: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture, \"durationchange\", SyntheticEvent),\n    emptied: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture, \"emptied\", SyntheticEvent),\n    encrypted: new NativeEventDispatcher<SyntheticEventClass<MediaEncryptedEvent, SyntheticMediaEncryptedEvent>>(NativeEventDispatcherFlags.Capture, \"encrypted\", SyntheticMediaEncryptedEvent),\n    ended: new NativeEventDispatcher<SyntheticEventClass<MediaStreamErrorEvent, SyntheticMediaStreamErrorEvent>>(NativeEventDispatcherFlags.Capture, \"ended\", SyntheticMediaStreamErrorEvent),\n    error: new NativeEventDispatcher<SyntheticEventClass<ErrorEvent, SyntheticErrorEvent>>(NativeEventDispatcherFlags.Capture, \"error\", SyntheticErrorEvent),\n    focus: new NativeEventDispatcher<SyntheticEventClass<FocusEvent, SyntheticFocusEvent>>(NativeEventDispatcherFlags.Capture, \"focus\", SyntheticFocusEvent),\n    gotpointercapture: new NativeEventDispatcher<SyntheticEventClass<PointerEvent, SyntheticPointerEvent>>(NativeEventDispatcherFlags.Capture, \"gotpointercapture\", SyntheticPointerEvent),\n    input: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"input\", SyntheticEvent),\n    invalid: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture, \"invalid\", SyntheticEvent),\n    keydown: new NativeEventDispatcher<SyntheticEventClass<KeyboardEvent, SyntheticKeyboardEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"keydown\", SyntheticKeyboardEvent),\n    keypress: new NativeEventDispatcher<SyntheticEventClass<KeyboardEvent, SyntheticKeyboardEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"keypress\", SyntheticKeyboardEvent),\n    keyup: new NativeEventDispatcher<SyntheticEventClass<KeyboardEvent, SyntheticKeyboardEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"keyup\", SyntheticKeyboardEvent),\n    load: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture, \"load\", SyntheticEvent),\n    loadeddata: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture, \"loadeddata\", SyntheticEvent),\n    loadedmetadata: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture, \"loadedmetadata\", SyntheticEvent),\n    loadstart: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture, \"loadstart\", SyntheticEvent),\n    lostpointercapture: new NativeEventDispatcher<SyntheticEventClass<PointerEvent, SyntheticPointerEvent>>(NativeEventDispatcherFlags.Capture, \"lostpointercapture\", SyntheticPointerEvent),\n    mousedown: new NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles | NativeEventDispatcherFlags.Passive, \"mousedown\", SyntheticMouseEvent),\n    mouseenter: new NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Passive, \"mouseenter\", SyntheticMouseEvent),\n    mouseleave: new NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Passive, \"mouseleave\", SyntheticMouseEvent),\n    mousemove: new NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles | NativeEventDispatcherFlags.Passive, \"mousemove\", SyntheticMouseEvent),\n    mouseout: new NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles | NativeEventDispatcherFlags.Passive, \"mouseout\", SyntheticMouseEvent),\n    mouseover: new NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles | NativeEventDispatcherFlags.Passive, \"mouseover\", SyntheticMouseEvent),\n    mouseup: new NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles | NativeEventDispatcherFlags.Passive, \"mouseup\", SyntheticMouseEvent),\n    paste: new NativeEventDispatcher<SyntheticEventClass<ClipboardEvent, SyntheticClipboardEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"paste\", SyntheticClipboardEvent),\n    pause: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture, \"pause\", SyntheticEvent),\n    play: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture, \"play\", SyntheticEvent),\n    playing: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture, \"playing\", SyntheticEvent),\n    pointercancel: new NativeEventDispatcher<SyntheticEventClass<PointerEvent, SyntheticPointerEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"pointercancel\", SyntheticPointerEvent),\n    pointerdown: new NativeEventDispatcher<SyntheticEventClass<PointerEvent, SyntheticPointerEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"pointerdown\", SyntheticPointerEvent),\n    pointerenter: new NativeEventDispatcher<SyntheticEventClass<PointerEvent, SyntheticPointerEvent>>(NativeEventDispatcherFlags.Capture, \"pointerenter\", SyntheticPointerEvent),\n    pointerleave: new NativeEventDispatcher<SyntheticEventClass<PointerEvent, SyntheticPointerEvent>>(NativeEventDispatcherFlags.Capture, \"pointerleave\", SyntheticPointerEvent),\n    pointermove: new NativeEventDispatcher<SyntheticEventClass<PointerEvent, SyntheticPointerEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"pointermove\", SyntheticPointerEvent),\n    pointerout: new NativeEventDispatcher<SyntheticEventClass<PointerEvent, SyntheticPointerEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"pointerout\", SyntheticPointerEvent),\n    pointerover: new NativeEventDispatcher<SyntheticEventClass<PointerEvent, SyntheticPointerEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"pointerover\", SyntheticPointerEvent),\n    pointerup: new NativeEventDispatcher<SyntheticEventClass<PointerEvent, SyntheticPointerEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"pointerup\", SyntheticPointerEvent),\n    progress: new NativeEventDispatcher<SyntheticEventClass<ProgressEvent, SyntheticProgressEvent>>(NativeEventDispatcherFlags.Capture, \"progress\", SyntheticProgressEvent),\n    ratechange: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture, \"ratechange\", SyntheticEvent),\n    reset: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"reset\", SyntheticEvent),\n    scroll: new NativeEventDispatcher<SyntheticEventClass<UIEvent, SyntheticUIEvent<UIEvent>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Passive, \"scroll\", SyntheticUIEvent),\n    seeked: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture, \"seeked\", SyntheticEvent),\n    seeking: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture, \"seeking\", SyntheticEvent),\n    select: new NativeEventDispatcher<SyntheticEventClass<UIEvent, SyntheticUIEvent<UIEvent>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"select\", SyntheticUIEvent),\n    selectstart: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"selectstart\", SyntheticEvent),\n    stalled: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture, \"stalled\", SyntheticEvent),\n    submit: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"submit\", SyntheticEvent),\n    suspend: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture, \"suspend\", SyntheticEvent),\n    timeupdate: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture, \"timeupdate\", SyntheticEvent),\n    touchcancel: new NativeEventDispatcher<SyntheticEventClass<TouchEvent, SyntheticTouchEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles | NativeEventDispatcherFlags.Passive, \"touchcancel\", SyntheticTouchEvent),\n    touchend: new NativeEventDispatcher<SyntheticEventClass<TouchEvent, SyntheticTouchEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles | NativeEventDispatcherFlags.Passive, \"touchend\", SyntheticTouchEvent),\n    touchmove: new NativeEventDispatcher<SyntheticEventClass<TouchEvent, SyntheticTouchEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles | NativeEventDispatcherFlags.Passive, \"touchmove\", SyntheticTouchEvent),\n    touchstart: new NativeEventDispatcher<SyntheticEventClass<TouchEvent, SyntheticTouchEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles | NativeEventDispatcherFlags.Passive, \"touchstart\", SyntheticTouchEvent),\n    unload: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture, \"unload\", SyntheticEvent),\n    volumechange: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture, \"volumechange\", SyntheticEvent),\n    waiting: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture, \"waiting\", SyntheticEvent),\n    wheel: new NativeEventDispatcher<SyntheticEventClass<WheelEvent, SyntheticWheelEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles | NativeEventDispatcherFlags.Passive, \"wheel\", SyntheticWheelEvent),\n};\n\nexport interface NativeActiveEventDispatchersList {\n    mousedown: NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>;\n    mouseenter: NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>;\n    mouseleave: NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>;\n    mousemove: NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>;\n    mouseout: NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>;\n    mouseover: NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>;\n    mouseup: NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>;\n    scroll: NativeEventDispatcher<SyntheticEventClass<UIEvent, SyntheticUIEvent<UIEvent>>>;\n    touchcancel: NativeEventDispatcher<SyntheticEventClass<TouchEvent, SyntheticTouchEvent>>;\n    touchend: NativeEventDispatcher<SyntheticEventClass<TouchEvent, SyntheticTouchEvent>>;\n    touchmove: NativeEventDispatcher<SyntheticEventClass<TouchEvent, SyntheticTouchEvent>>;\n    touchstart: NativeEventDispatcher<SyntheticEventClass<TouchEvent, SyntheticTouchEvent>>;\n    wheel: NativeEventDispatcher<SyntheticEventClass<WheelEvent, SyntheticWheelEvent>>;\n}\n\nexport const NativeActiveEventDispatchers = {\n    mousedown: new NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"mousedown\", SyntheticMouseEvent),\n    mouseenter: new NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>(NativeEventDispatcherFlags.Capture, \"mouseenter\", SyntheticMouseEvent),\n    mouseleave: new NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>(NativeEventDispatcherFlags.Capture, \"mouseleave\", SyntheticMouseEvent),\n    mousemove: new NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"mousemove\", SyntheticMouseEvent),\n    mouseout: new NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"mouseout\", SyntheticMouseEvent),\n    mouseover: new NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"mouseover\", SyntheticMouseEvent),\n    mouseup: new NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"mouseup\", SyntheticMouseEvent),\n    scroll: new NativeEventDispatcher<SyntheticEventClass<UIEvent, SyntheticUIEvent<UIEvent>>>(NativeEventDispatcherFlags.Capture, \"scroll\", SyntheticUIEvent),\n    touchcancel: new NativeEventDispatcher<SyntheticEventClass<TouchEvent, SyntheticTouchEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"touchcancel\", SyntheticTouchEvent),\n    touchend: new NativeEventDispatcher<SyntheticEventClass<TouchEvent, SyntheticTouchEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"touchend\", SyntheticTouchEvent),\n    touchmove: new NativeEventDispatcher<SyntheticEventClass<TouchEvent, SyntheticTouchEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"touchmove\", SyntheticTouchEvent),\n    touchstart: new NativeEventDispatcher<SyntheticEventClass<TouchEvent, SyntheticTouchEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"touchstart\", SyntheticTouchEvent),\n    wheel: new NativeEventDispatcher<SyntheticEventClass<WheelEvent, SyntheticWheelEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"wheel\", SyntheticWheelEvent),\n};\n\n/**\n * Events.\n */\nexport const Events = {\n    onAbort: function createAbortEventHandler(\n        handler: (ev: SyntheticUIEvent<UIEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticUIEvent<UIEvent>> {\n        return createEventHandler<SyntheticUIEvent<UIEvent>>(NativeEventDispatchers.abort, handler, capture);\n    },\n    onActivate: function createActivateEventHandler(\n        handler: (ev: SyntheticUIEvent<UIEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticUIEvent<UIEvent>> {\n        return createEventHandler<SyntheticUIEvent<UIEvent>>(NativeEventDispatchers.activate, handler, capture);\n    },\n    onAriaRequest: function createAriarequestEventHandler(\n        handler: (ev: SyntheticAriaRequestEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticAriaRequestEvent> {\n        return createEventHandler<SyntheticAriaRequestEvent>(NativeEventDispatchers.ariarequest, handler, capture);\n    },\n    onBeforeActivate: function createBeforeactivateEventHandler(\n        handler: (ev: SyntheticUIEvent<UIEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticUIEvent<UIEvent>> {\n        return createEventHandler<SyntheticUIEvent<UIEvent>>(NativeEventDispatchers.beforeactivate, handler, capture);\n    },\n    onBeforeCopy: function createBeforecopyEventHandler(\n        handler: (ev: SyntheticClipboardEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticClipboardEvent> {\n        return createEventHandler<SyntheticClipboardEvent>(NativeEventDispatchers.beforecopy, handler, capture);\n    },\n    onBeforeCut: function createBeforecutEventHandler(\n        handler: (ev: SyntheticClipboardEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticClipboardEvent> {\n        return createEventHandler<SyntheticClipboardEvent>(NativeEventDispatchers.beforecut, handler, capture);\n    },\n    onBeforeDeactivate: function createBeforedeactivateEventHandler(\n        handler: (ev: SyntheticUIEvent<UIEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticUIEvent<UIEvent>> {\n        return createEventHandler<SyntheticUIEvent<UIEvent>>(NativeEventDispatchers.beforedeactivate, handler, capture);\n    },\n    onBeforePaste: function createBeforepasteEventHandler(\n        handler: (ev: SyntheticClipboardEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticClipboardEvent> {\n        return createEventHandler<SyntheticClipboardEvent>(NativeEventDispatchers.beforepaste, handler, capture);\n    },\n    onBlur: function createBlurEventHandler(\n        handler: (ev: SyntheticFocusEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticFocusEvent> {\n        return createEventHandler<SyntheticFocusEvent>(NativeEventDispatchers.blur, handler, capture);\n    },\n    onCanPlay: function createCanplayEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.canplay, handler, capture);\n    },\n    onCanPlaythrough: function createCanplaythroughEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.canplaythrough, handler, capture);\n    },\n    onChange: function createChangeEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.change, handler, capture);\n    },\n    onClick: function createClickEventHandler(\n        handler: (ev: SyntheticMouseEvent<MouseEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticMouseEvent<MouseEvent>> {\n        return createEventHandler<SyntheticMouseEvent<MouseEvent>>(NativeEventDispatchers.click, handler, capture);\n    },\n    onContextMenu: function createContextmenuEventHandler(\n        handler: (ev: SyntheticPointerEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticPointerEvent> {\n        return createEventHandler<SyntheticPointerEvent>(NativeEventDispatchers.contextmenu, handler, capture);\n    },\n    onCopy: function createCopyEventHandler(\n        handler: (ev: SyntheticClipboardEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticClipboardEvent> {\n        return createEventHandler<SyntheticClipboardEvent>(NativeEventDispatchers.copy, handler, capture);\n    },\n    onCueChange: function createCuechangeEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.cuechange, handler, capture);\n    },\n    onCut: function createCutEventHandler(\n        handler: (ev: SyntheticClipboardEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticClipboardEvent> {\n        return createEventHandler<SyntheticClipboardEvent>(NativeEventDispatchers.cut, handler, capture);\n    },\n    onDoubleClick: function createDblclickEventHandler(\n        handler: (ev: SyntheticMouseEvent<MouseEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticMouseEvent<MouseEvent>> {\n        return createEventHandler<SyntheticMouseEvent<MouseEvent>>(NativeEventDispatchers.dblclick, handler, capture);\n    },\n    onDeactivate: function createDeactivateEventHandler(\n        handler: (ev: SyntheticUIEvent<UIEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticUIEvent<UIEvent>> {\n        return createEventHandler<SyntheticUIEvent<UIEvent>>(NativeEventDispatchers.deactivate, handler, capture);\n    },\n    onDrag: function createDragEventHandler(\n        handler: (ev: SyntheticDragEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticDragEvent> {\n        return createEventHandler<SyntheticDragEvent>(NativeEventDispatchers.drag, handler, capture);\n    },\n    onDragEnd: function createDragendEventHandler(\n        handler: (ev: SyntheticDragEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticDragEvent> {\n        return createEventHandler<SyntheticDragEvent>(NativeEventDispatchers.dragend, handler, capture);\n    },\n    onDragEnter: function createDragenterEventHandler(\n        handler: (ev: SyntheticDragEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticDragEvent> {\n        return createEventHandler<SyntheticDragEvent>(NativeEventDispatchers.dragenter, handler, capture);\n    },\n    onDragLeave: function createDragleaveEventHandler(\n        handler: (ev: SyntheticDragEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticDragEvent> {\n        return createEventHandler<SyntheticDragEvent>(NativeEventDispatchers.dragleave, handler, capture);\n    },\n    onDragOver: function createDragoverEventHandler(\n        handler: (ev: SyntheticDragEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticDragEvent> {\n        return createEventHandler<SyntheticDragEvent>(NativeEventDispatchers.dragover, handler, capture);\n    },\n    onDragStart: function createDragstartEventHandler(\n        handler: (ev: SyntheticDragEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticDragEvent> {\n        return createEventHandler<SyntheticDragEvent>(NativeEventDispatchers.dragstart, handler, capture);\n    },\n    onDrop: function createDropEventHandler(\n        handler: (ev: SyntheticDragEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticDragEvent> {\n        return createEventHandler<SyntheticDragEvent>(NativeEventDispatchers.drop, handler, capture);\n    },\n    onDurationChange: function createDurationchangeEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.durationchange, handler, capture);\n    },\n    onEmptied: function createEmptiedEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.emptied, handler, capture);\n    },\n    onEncrypted: function createEncryptedEventHandler(\n        handler: (ev: SyntheticMediaEncryptedEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticMediaEncryptedEvent> {\n        return createEventHandler<SyntheticMediaEncryptedEvent>(NativeEventDispatchers.encrypted, handler, capture);\n    },\n    onEnded: function createEndedEventHandler(\n        handler: (ev: SyntheticMediaStreamErrorEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticMediaStreamErrorEvent> {\n        return createEventHandler<SyntheticMediaStreamErrorEvent>(NativeEventDispatchers.ended, handler, capture);\n    },\n    onError: function createErrorEventHandler(\n        handler: (ev: SyntheticErrorEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticErrorEvent> {\n        return createEventHandler<SyntheticErrorEvent>(NativeEventDispatchers.error, handler, capture);\n    },\n    onFocus: function createFocusEventHandler(\n        handler: (ev: SyntheticFocusEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticFocusEvent> {\n        return createEventHandler<SyntheticFocusEvent>(NativeEventDispatchers.focus, handler, capture);\n    },\n    onGotPointerCapture: function createGotpointercaptureEventHandler(\n        handler: (ev: SyntheticPointerEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticPointerEvent> {\n        return createEventHandler<SyntheticPointerEvent>(NativeEventDispatchers.gotpointercapture, handler, capture);\n    },\n    onInput: function createInputEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.input, handler, capture);\n    },\n    onInvalid: function createInvalidEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.invalid, handler, capture);\n    },\n    onKeyDown: function createKeydownEventHandler(\n        handler: (ev: SyntheticKeyboardEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticKeyboardEvent> {\n        return createEventHandler<SyntheticKeyboardEvent>(NativeEventDispatchers.keydown, handler, capture);\n    },\n    onKeyPress: function createKeypressEventHandler(\n        handler: (ev: SyntheticKeyboardEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticKeyboardEvent> {\n        return createEventHandler<SyntheticKeyboardEvent>(NativeEventDispatchers.keypress, handler, capture);\n    },\n    onKeyUp: function createKeyupEventHandler(\n        handler: (ev: SyntheticKeyboardEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticKeyboardEvent> {\n        return createEventHandler<SyntheticKeyboardEvent>(NativeEventDispatchers.keyup, handler, capture);\n    },\n    onLoad: function createLoadEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.load, handler, capture);\n    },\n    onLoadedData: function createLoadeddataEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.loadeddata, handler, capture);\n    },\n    onLoadedMetadata: function createLoadedmetadataEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.loadedmetadata, handler, capture);\n    },\n    onLoadStart: function createLoadstartEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.loadstart, handler, capture);\n    },\n    onLostPointerCapture: function createLostpointercaptureEventHandler(\n        handler: (ev: SyntheticPointerEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticPointerEvent> {\n        return createEventHandler<SyntheticPointerEvent>(NativeEventDispatchers.lostpointercapture, handler, capture);\n    },\n    onMouseDown: function createMousedownEventHandler(\n        handler: (ev: SyntheticMouseEvent<MouseEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticMouseEvent<MouseEvent>> {\n        return createEventHandler<SyntheticMouseEvent<MouseEvent>>(NativeEventDispatchers.mousedown, handler, capture);\n    },\n    onMouseEnter: function createMouseenterEventHandler(\n        handler: (ev: SyntheticMouseEvent<MouseEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticMouseEvent<MouseEvent>> {\n        return createEventHandler<SyntheticMouseEvent<MouseEvent>>(NativeEventDispatchers.mouseenter, handler, capture);\n    },\n    onMouseLeave: function createMouseleaveEventHandler(\n        handler: (ev: SyntheticMouseEvent<MouseEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticMouseEvent<MouseEvent>> {\n        return createEventHandler<SyntheticMouseEvent<MouseEvent>>(NativeEventDispatchers.mouseleave, handler, capture);\n    },\n    onMouseMove: function createMousemoveEventHandler(\n        handler: (ev: SyntheticMouseEvent<MouseEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticMouseEvent<MouseEvent>> {\n        return createEventHandler<SyntheticMouseEvent<MouseEvent>>(NativeEventDispatchers.mousemove, handler, capture);\n    },\n    onMouseOut: function createMouseoutEventHandler(\n        handler: (ev: SyntheticMouseEvent<MouseEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticMouseEvent<MouseEvent>> {\n        return createEventHandler<SyntheticMouseEvent<MouseEvent>>(NativeEventDispatchers.mouseout, handler, capture);\n    },\n    onMouseOver: function createMouseoverEventHandler(\n        handler: (ev: SyntheticMouseEvent<MouseEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticMouseEvent<MouseEvent>> {\n        return createEventHandler<SyntheticMouseEvent<MouseEvent>>(NativeEventDispatchers.mouseover, handler, capture);\n    },\n    onMouseUp: function createMouseupEventHandler(\n        handler: (ev: SyntheticMouseEvent<MouseEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticMouseEvent<MouseEvent>> {\n        return createEventHandler<SyntheticMouseEvent<MouseEvent>>(NativeEventDispatchers.mouseup, handler, capture);\n    },\n    onPaste: function createPasteEventHandler(\n        handler: (ev: SyntheticClipboardEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticClipboardEvent> {\n        return createEventHandler<SyntheticClipboardEvent>(NativeEventDispatchers.paste, handler, capture);\n    },\n    onPause: function createPauseEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.pause, handler, capture);\n    },\n    onPlay: function createPlayEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.play, handler, capture);\n    },\n    onPlaying: function createPlayingEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.playing, handler, capture);\n    },\n    onPointerCancel: function createPointercancelEventHandler(\n        handler: (ev: SyntheticPointerEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticPointerEvent> {\n        return createEventHandler<SyntheticPointerEvent>(NativeEventDispatchers.pointercancel, handler, capture);\n    },\n    onPointerDown: function createPointerdownEventHandler(\n        handler: (ev: SyntheticPointerEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticPointerEvent> {\n        return createEventHandler<SyntheticPointerEvent>(NativeEventDispatchers.pointerdown, handler, capture);\n    },\n    onPointerEnter: function createPointerenterEventHandler(\n        handler: (ev: SyntheticPointerEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticPointerEvent> {\n        return createEventHandler<SyntheticPointerEvent>(NativeEventDispatchers.pointerenter, handler, capture);\n    },\n    onPointerLeave: function createPointerleaveEventHandler(\n        handler: (ev: SyntheticPointerEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticPointerEvent> {\n        return createEventHandler<SyntheticPointerEvent>(NativeEventDispatchers.pointerleave, handler, capture);\n    },\n    onPointerMove: function createPointermoveEventHandler(\n        handler: (ev: SyntheticPointerEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticPointerEvent> {\n        return createEventHandler<SyntheticPointerEvent>(NativeEventDispatchers.pointermove, handler, capture);\n    },\n    onPointerOut: function createPointeroutEventHandler(\n        handler: (ev: SyntheticPointerEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticPointerEvent> {\n        return createEventHandler<SyntheticPointerEvent>(NativeEventDispatchers.pointerout, handler, capture);\n    },\n    onPointerOver: function createPointeroverEventHandler(\n        handler: (ev: SyntheticPointerEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticPointerEvent> {\n        return createEventHandler<SyntheticPointerEvent>(NativeEventDispatchers.pointerover, handler, capture);\n    },\n    onPointerUp: function createPointerupEventHandler(\n        handler: (ev: SyntheticPointerEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticPointerEvent> {\n        return createEventHandler<SyntheticPointerEvent>(NativeEventDispatchers.pointerup, handler, capture);\n    },\n    onProgress: function createProgressEventHandler(\n        handler: (ev: SyntheticProgressEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticProgressEvent> {\n        return createEventHandler<SyntheticProgressEvent>(NativeEventDispatchers.progress, handler, capture);\n    },\n    onRateChange: function createRatechangeEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.ratechange, handler, capture);\n    },\n    onReset: function createResetEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.reset, handler, capture);\n    },\n    onScroll: function createScrollEventHandler(\n        handler: (ev: SyntheticUIEvent<UIEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticUIEvent<UIEvent>> {\n        return createEventHandler<SyntheticUIEvent<UIEvent>>(NativeEventDispatchers.scroll, handler, capture);\n    },\n    onSeeked: function createSeekedEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.seeked, handler, capture);\n    },\n    onSeeking: function createSeekingEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.seeking, handler, capture);\n    },\n    onSelect: function createSelectEventHandler(\n        handler: (ev: SyntheticUIEvent<UIEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticUIEvent<UIEvent>> {\n        return createEventHandler<SyntheticUIEvent<UIEvent>>(NativeEventDispatchers.select, handler, capture);\n    },\n    onSelectStart: function createSelectstartEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.selectstart, handler, capture);\n    },\n    onStalled: function createStalledEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.stalled, handler, capture);\n    },\n    onSubmit: function createSubmitEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.submit, handler, capture);\n    },\n    onSuspend: function createSuspendEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.suspend, handler, capture);\n    },\n    onTimeUpdate: function createTimeupdateEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.timeupdate, handler, capture);\n    },\n    onTouchCancel: function createTouchcancelEventHandler(\n        handler: (ev: SyntheticTouchEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticTouchEvent> {\n        return createEventHandler<SyntheticTouchEvent>(NativeEventDispatchers.touchcancel, handler, capture);\n    },\n    onTouchEnd: function createTouchendEventHandler(\n        handler: (ev: SyntheticTouchEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticTouchEvent> {\n        return createEventHandler<SyntheticTouchEvent>(NativeEventDispatchers.touchend, handler, capture);\n    },\n    onTouchMove: function createTouchmoveEventHandler(\n        handler: (ev: SyntheticTouchEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticTouchEvent> {\n        return createEventHandler<SyntheticTouchEvent>(NativeEventDispatchers.touchmove, handler, capture);\n    },\n    onTouchStart: function createTouchstartEventHandler(\n        handler: (ev: SyntheticTouchEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticTouchEvent> {\n        return createEventHandler<SyntheticTouchEvent>(NativeEventDispatchers.touchstart, handler, capture);\n    },\n    onUnload: function createUnloadEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.unload, handler, capture);\n    },\n    onVolumeChange: function createVolumechangeEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.volumechange, handler, capture);\n    },\n    onWaiting: function createWaitingEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.waiting, handler, capture);\n    },\n    onWheel: function createWheelEventHandler(\n        handler: (ev: SyntheticWheelEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticWheelEvent> {\n        return createEventHandler<SyntheticWheelEvent>(NativeEventDispatchers.wheel, handler, capture);\n    },\n};\n\n/**\n * List of Events with disabled passive flag.\n */\nexport const ActiveEvents = {\n    onScroll: function createScrollEventHandler(\n        handler: (ev: SyntheticUIEvent<UIEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticUIEvent<UIEvent>> {\n        return createEventHandler<SyntheticUIEvent<UIEvent>>(NativeActiveEventDispatchers.scroll, handler, capture);\n    },\n    onMouseDown: function createMousedownEventHandler(\n        handler: (ev: SyntheticMouseEvent<MouseEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticMouseEvent<MouseEvent>> {\n        return createEventHandler<SyntheticMouseEvent<MouseEvent>>(NativeActiveEventDispatchers.mousedown, handler, capture);\n    },\n    onMouseEnter: function createMouseenterEventHandler(\n        handler: (ev: SyntheticMouseEvent<MouseEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticMouseEvent<MouseEvent>> {\n        return createEventHandler<SyntheticMouseEvent<MouseEvent>>(NativeActiveEventDispatchers.mouseenter, handler, capture);\n    },\n    onMouseLeave: function createMouseleaveEventHandler(\n        handler: (ev: SyntheticMouseEvent<MouseEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticMouseEvent<MouseEvent>> {\n        return createEventHandler<SyntheticMouseEvent<MouseEvent>>(NativeActiveEventDispatchers.mouseleave, handler, capture);\n    },\n    onMouseMove: function createMousemoveEventHandler(\n        handler: (ev: SyntheticMouseEvent<MouseEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticMouseEvent<MouseEvent>> {\n        return createEventHandler<SyntheticMouseEvent<MouseEvent>>(NativeActiveEventDispatchers.mousemove, handler, capture);\n    },\n    onMouseOut: function createMouseoutEventHandler(\n        handler: (ev: SyntheticMouseEvent<MouseEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticMouseEvent<MouseEvent>> {\n        return createEventHandler<SyntheticMouseEvent<MouseEvent>>(NativeActiveEventDispatchers.mouseout, handler, capture);\n    },\n    onMouseOver: function createMouseoverEventHandler(\n        handler: (ev: SyntheticMouseEvent<MouseEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticMouseEvent<MouseEvent>> {\n        return createEventHandler<SyntheticMouseEvent<MouseEvent>>(NativeActiveEventDispatchers.mouseover, handler, capture);\n    },\n    onMouseUp: function createMouseupEventHandler(\n        handler: (ev: SyntheticMouseEvent<MouseEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticMouseEvent<MouseEvent>> {\n        return createEventHandler<SyntheticMouseEvent<MouseEvent>>(NativeActiveEventDispatchers.mouseup, handler, capture);\n    },\n    onTouchCancel: function createTouchcancelEventHandler(\n        handler: (ev: SyntheticTouchEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticTouchEvent> {\n        return createEventHandler<SyntheticTouchEvent>(NativeActiveEventDispatchers.touchcancel, handler, capture);\n    },\n    onTouchEnd: function createTouchendEventHandler(\n        handler: (ev: SyntheticTouchEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticTouchEvent> {\n        return createEventHandler<SyntheticTouchEvent>(NativeActiveEventDispatchers.touchend, handler, capture);\n    },\n    onTouchMove: function createTouchmoveEventHandler(\n        handler: (ev: SyntheticTouchEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticTouchEvent> {\n        return createEventHandler<SyntheticTouchEvent>(NativeActiveEventDispatchers.touchmove, handler, capture);\n    },\n    onTouchStart: function createTouchstartEventHandler(\n        handler: (ev: SyntheticTouchEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticTouchEvent> {\n        return createEventHandler<SyntheticTouchEvent>(NativeActiveEventDispatchers.touchstart, handler, capture);\n    },\n    onWheel: function createWheelEventHandler(\n        handler: (ev: SyntheticWheelEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticWheelEvent> {\n        return createEventHandler<SyntheticWheelEvent>(NativeActiveEventDispatchers.wheel, handler, capture);\n    },\n};\n/* tslint:enable:max-line-length */\n","import { USER_AGENT, UserAgentFlags } from \"../common/user_agent\";\nimport { NOOP } from \"../common/noop\";\nimport { nextFrame, syncFrameUpdate } from \"../scheduler/frame\";\nimport { Context, ROOT_CONTEXT } from \"./context\";\nimport { VNodeFlags } from \"./flags\";\nimport { VNode } from \"./vnode\";\nimport { Component, getDOMInstanceFromComponent } from \"./component\";\nimport { renderVNode, syncVNode, removeVNode, augmentVNode } from \"./implementation\";\n\n/**\n * Root.\n */\nexport interface Root {\n    container: Element;\n    currentVNode: VNode<any> | null;\n    newVNode: VNode<any> | null;\n    newContext: Context | null;\n    domNode: Node | null;\n    invalidated: boolean;\n}\n\nexport const ROOTS = [] as Root[];\n\n/**\n * Find Root node in container.\n *\n * @param container DOM Node that contains root node.\n * @returns root node or undefined when root node doesn't exist.\n */\nexport function findRoot(container: Element): Root | undefined {\n    for (let i = 0; i < ROOTS.length; i++) {\n        const r = ROOTS[i];\n        if (r.container === container) {\n            return r;\n        }\n    }\n\n    return;\n}\n\n/**\n * Fix for the Mouse Event bubbling on iOS devices.\n *\n * #quirks\n *\n * http://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\n */\nfunction iOSFixEventBubbling(container: Element): void {\n    if (USER_AGENT & UserAgentFlags.iOS) {\n        (container as HTMLElement).onclick = NOOP;\n    }\n}\n\n/**\n * Render VNode into container.\n *\n * @param root Root data.\n * @returns rendered Node.\n */\nfunction _render(root: Root): void {\n    const currentVNode = root.currentVNode;\n    const newVNode = root.newVNode;\n\n    if (newVNode) {\n        let instance;\n        if (currentVNode) {\n            instance = syncVNode(root.container, currentVNode, newVNode, root.newContext!);\n        } else {\n            instance = renderVNode(root.container, null, newVNode!, root.newContext!);\n            iOSFixEventBubbling(root.container);\n        }\n        root.currentVNode = newVNode;\n        root.domNode = (newVNode._flags & VNodeFlags.ComponentClass) ?\n            getDOMInstanceFromComponent(instance as Component<any>) :\n            instance as Node;\n    } else if (currentVNode) {\n        removeVNode(root.container, currentVNode);\n        const last = ROOTS.pop();\n        if (last !== root && ROOTS.length) {\n            ROOTS[ROOTS.indexOf(root)] = last!;\n        }\n    }\n\n    root.newVNode = null;\n    root.newContext = null;\n    root.invalidated = false;\n}\n\n/**\n * Render VNode into container.\n *\n * @param node VNode to render.\n * @param container DOM Node that will contain rendered node.\n * @param context root context, all root contexts should be created from the `ROOT_CONTEXT` instance.\n */\nexport function render(node: VNode<any> | null, container: Element, context: Context = ROOT_CONTEXT): void {\n    renderNextFrame(node, container, context);\n    syncFrameUpdate();\n}\n\n/**\n * Render VNode into container on the next frame.\n *\n * @param node VNode to render.\n * @param container DOM Node that will contain rendered node.\n * @param context root context, all root contexts should be created from the `ROOT_CONTEXT` instance.\n * @returns rendered Node.\n */\nexport function renderNextFrame(node: VNode<any> | null, container: Element, context: Context = ROOT_CONTEXT): void {\n    if (__IVI_DEV__) {\n        if (container === document.body) {\n            throw new Error(\"Rendering in the <body> aren't allowed, create an element inside body that will contain \" +\n                \"your application.\");\n        }\n        if (!document.body.contains(container)) {\n            throw new Error(\"Container element should be attached to the document.\");\n        }\n    }\n\n    let root = findRoot(container);\n    if (root) {\n        root.newVNode = node;\n        root.newContext = context;\n    } else {\n        root = {\n            container: container,\n            currentVNode: null,\n            newVNode: node,\n            newContext: context,\n            domNode: null,\n            invalidated: false,\n        } as Root;\n        ROOTS.push(root);\n    }\n    if (!root.invalidated) {\n        root.invalidated = true;\n        nextFrame().write(function () {\n            if (root!.invalidated) {\n                _render(root!);\n            }\n        });\n    }\n}\n\n/**\n * Augment existing DOM tree with a Virtual DOM tree.\n *\n * Augmentation is separated from `render` function to reduce code size when web application doesn't use augmentation.\n * Optimizing javascript compiler should remove all code associated with augmentation when it isn't used.\n *\n * @param node Root VNode.\n * @param container Container DOM Node.\n * @param context root context, all root contexts should be created from the `ROOT_CONTEXT` instance.\n */\nexport function augment(node: VNode<any> | null, container: Element, context: Context = ROOT_CONTEXT): void {\n    if (__IVI_DEV__) {\n        if (container === document.body) {\n            throw new Error(\"Rendering in the <body> aren't allowed, create an element inside body that will contain \" +\n                \"your application.\");\n        }\n        if (!document.body.contains(container)) {\n            throw new Error(\"Container element should be attached to the document.\");\n        }\n\n        if (findRoot(container)) {\n            throw new Error(\"Failed to augment, container is associated with a Virtual DOM.\");\n        }\n    }\n\n    if (node) {\n        ROOTS.push({\n            container: container,\n            currentVNode: node,\n            newVNode: null,\n            newContext: null,\n            domNode: container.firstChild!,\n            invalidated: false,\n        });\n\n        nextFrame().write(function augment() {\n            augmentVNode(container, container.firstChild!, node, context);\n            iOSFixEventBubbling(container);\n        });\n\n        syncFrameUpdate();\n    }\n}\n","/**\n * Entry point for `ivi` package.\n */\n\n/**\n * Global variables.\n */\ndeclare global {\n    /* tslint:disable:no-unused-variable */\n    /**\n     * Global variable with a version string.\n     *\n     * @define {string}\n     */\n    const __IVI_VERSION__: string;\n    /**\n     * Global variable that enables Development Mode.\n     *\n     * @define {boolean}\n     */\n    const __IVI_DEV__: boolean;\n    /**\n     * Global variable that indicates that code is executed in a browser environment.\n     *\n     * @define {boolean}\n     */\n    const __IVI_BROWSER__: boolean;\n    /* tslint:enable:no-unused-variable */\n}\n\n/**\n * Common:\n */\nexport { DevModeFlags, DEV_MODE, setDevModeFlags, printError, printWarn } from \"./dev_mode/dev_mode\";\nexport { FeatureFlags, FEATURES } from \"./common/feature_detection\";\nexport { UserAgentFlags, USER_AGENT } from \"./common/user_agent\";\nexport {\n    nodeDepth, SVG_NAMESPACE, XLINK_NAMESPACE, XML_NAMESPACE, getEventTarget, getEventCharCode, getEventKey, firstLeaf,\n    nextSibling, setInnerHTML, MouseButtons, KeyCode, KeyName, KeyLocation,\n} from \"./common/dom\";\nexport { NOOP } from \"./common/noop\";\nexport { isPropsNotIdentical, isPropsNotShallowEqual } from \"./common/equality\";\nexport { isVisible, addVisibilityObserver, removeVisibilityObserver } from \"./common/visibility\";\n\n/**\n * Dev Mode:\n */\nexport {\n    setInitialNestingState, pushNestingState, restoreNestingState, nestingStateAncestorFlags, nestingStateParentTagName,\n    checkNestingViolation, AncestorFlags,\n} from \"./dev_mode/html_nesting_rules\";\n\n/**\n * Scheduler:\n */\nexport { FrameTasksGroup } from \"./scheduler/frame_tasks_group\";\nexport { clock } from \"./scheduler/clock\";\nexport { scheduleMicrotask } from \"./scheduler/microtask\";\nexport { scheduleTask } from \"./scheduler/task\";\nexport { DOMReader, addDOMReader } from \"./scheduler/dom_reader\";\nexport { startComponentAnimation, stopComponentAnimation, Animation, addAnimation } from \"./scheduler/animation\";\nexport { frameStartTime, currentFrame, nextFrame, syncFrameUpdate } from \"./scheduler/frame\";\n\n/**\n * Events:\n */\nexport { NativeEventDispatcherFlags, EventHandlerFlags, SyntheticEventFlags } from \"./events/flags\";\nexport {\n    EventDispatcher, EventDispatcherSubscriptionFlags, EventDispatcherSubscription,\n} from \"./events/event_dispatcher\";\nexport { NativeEventDispatcher } from \"./events/native_event_dispatcher\";\nexport { EventHandler, EventHandlerList } from \"./events/event_handler\";\nexport {\n    NativeEventDispatchersList, NativeActiveEventDispatchersList, NativeEventDispatchers, NativeActiveEventDispatchers,\n    Events, ActiveEvents, createEventHandler,\n} from \"./events/events\";\nexport {\n    SyntheticEvent, SyntheticUIEvent, SyntheticDragEvent, SyntheticClipboardEvent,\n    SyntheticAriaRequestEvent, SyntheticErrorEvent, SyntheticEventClass, SyntheticFocusEvent, SyntheticKeyboardEvent,\n    SyntheticMediaEncryptedEvent, SyntheticMediaStreamErrorEvent, SyntheticMouseEvent, SyntheticPointerEvent,\n    SyntheticProgressEvent, SyntheticTouchEvent, SyntheticWheelEvent,\n} from \"./events/synthetic_event\";\nexport { DispatchTarget, accumulateDispatchTargetsFromElement, accumulateDispatchTargets } from \"./events/traverse_dom\";\nexport { dispatchEvent } from \"./events/dispatch_event\";\nexport { getEventOptions } from \"./events/utils\";\n\n/**\n * Virtual DOM:\n */\nexport { Context, ROOT_CONTEXT } from \"./vdom/context\";\nexport {\n    ComponentClass, ComponentFunction, Component, getDOMInstanceFromComponent, findComponentByDebugId,\n    checkPropsIdentity, checkPropsShallowEquality, staticComponent,\n} from \"./vdom/component\";\nexport { VNodeFlags, ElementDescriptorFlags } from \"./vdom/flags\";\nexport {\n    VNode, isTextNode, isElementNode, isSVGNode, isComponentNode, getDOMInstanceFromVNode, getComponentRef,\n} from \"./vdom/vnode\";\nexport {\n    ElementDescriptor, createElementDescriptor, createSVGElementDescriptor, createInputElementDescriptor,\n    createMediaElementDescriptor, createCustomElementDescriptor,\n} from \"./vdom/element_descriptor\";\nexport {\n    VNodeBuilder, cloneVNode, shallowCloneVNode, normalizeVNodes, $t, $h, $s, $c, $i, $m, $e, $w,\n} from \"./vdom/vnode_builder\";\nexport { Root, findRoot, render, renderNextFrame, augment } from \"./vdom/root\";\n\n/**\n * Dev Mode exported functions:\n */\nimport { VERSION, GLOBAL_EXPORT, printError } from \"./dev_mode/dev_mode\";\nimport { DebugNode, componentTree, findComponentByNode } from \"./dev_mode/component_tree\";\nimport { printComponentStackTrace } from \"./dev_mode/stack_trace\";\nimport { Component, findComponentByDebugId } from \"./vdom/component\";\n\nfunction _printComponentTreeVisitNode(node: DebugNode): void {\n    if (node.instance) {\n        console.groupCollapsed(`[C]${node.name} #${node.instance._debugId}`);\n        console.log(node.instance);\n    } else {\n        console.groupCollapsed(`[F]${node.name}`);\n    }\n    if (node.children) {\n        _printComponentTreeVisitChildren(node.children);\n    }\n    console.groupEnd();\n}\n\nfunction _printComponentTreeVisitChildren(nodes: DebugNode[]): void {\n    for (let i = 0; i < nodes.length; i++) {\n        _printComponentTreeVisitNode(nodes[i]);\n    }\n}\n\nfunction printComponentTree(nodes: DebugNode[]): void {\n    _printComponentTreeVisitChildren(nodes);\n}\n\nif (__IVI_DEV__) {\n    console.info(`IVI [${VERSION}]: DEVELOPMENT MODE`);\n\n    // Minification test.\n    const testFunc = function testFn() {\n        /* tslint:disable:no-empty */\n        /* tslint:enable:no-empty */\n    };\n    if ((testFunc.name || testFunc.toString()).indexOf(\"testFn\") === -1) {\n        console.info(\n            \"It looks like you're using a minified script in Development Mode. \" +\n            \"When deploying ivi apps to production, disable Development Mode. It\" +\n            \"will remove many runtime checks and will work significantly faster.\");\n    }\n\n    if (typeof Array.isArray !== \"function\") {\n        printError(\"`Array.isArray` function is missing.\");\n    }\n    if (typeof Object.assign !== \"function\") {\n        printError(\"`Object.assign` function is missing.\");\n    }\n    if (typeof Object.keys !== \"function\") {\n        printError(\"`Object.keys` function is missing.\");\n    }\n    if (typeof Map !== \"function\") {\n        printError(\"`Map` constructor is missing.\");\n    }\n\n    if (__IVI_BROWSER__) {\n        if (document) {\n            document.title += \" [DEV MODE]\";\n        }\n\n        const devModeExport = {\n            \"VERSION\": VERSION,\n            \"componentTree\": componentTree,\n            \"findComponentByDebugId\": findComponentByDebugId,\n            \"findComponentByNode\": findComponentByNode,\n            \"stackTrace\": printComponentStackTrace,\n            \"$\": function (v?: number | Node | Component<any>) {\n                let result;\n                if (v === undefined) {\n                    result = componentTree();\n                } else if (typeof v === \"number\") {\n                    const c = findComponentByDebugId(v);\n                    if (c) {\n                        result = componentTree(c);\n                    }\n                } else if (v instanceof Node) {\n                    const c = findComponentByNode(v);\n                    if (c) {\n                        result = componentTree(c);\n                    }\n                } else if (v instanceof Component) {\n                    result = componentTree(v as Component<any>);\n                } else {\n                    throw new Error(\"Invalid value\");\n                }\n                if (result) {\n                    printComponentTree(result);\n                }\n            },\n        };\n\n        if (GLOBAL_EXPORT && !window.hasOwnProperty(GLOBAL_EXPORT)) {\n            (window as any)[GLOBAL_EXPORT] = devModeExport;\n            console.info(`DevMode API is exported to: ${GLOBAL_EXPORT}`);\n        } else if (!window.hasOwnProperty(\"ivi\")) {\n            (window as any)[\"ivi\"] = devModeExport;\n            console.info(`DevMode API is exported to: ivi`);\n        } else {\n            console.info(`DevMode API is not exported`);\n        }\n    }\n}\n"]}