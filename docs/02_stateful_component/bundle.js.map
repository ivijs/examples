{"version":3,"sources":[" [synthetic:util/global] "," [synthetic:util/defineproperty] "," [synthetic:es6/symbol] "," [synthetic:es6/util/makeiterator] "," [synthetic:es6/util/arrayfromiterator] "," [synthetic:es6/util/inherits] "," [synthetic:util/polyfill] "," [synthetic:es6/array/fill] "," [synthetic:util/owns] "," [synthetic:es6/weakmap] "," [synthetic:es6/map] ","node_modules/ivi/src/common/feature_detection.ts","node_modules/ivi/src/common/user_agent.ts","node_modules/ivi/src/common/noop.ts","node_modules/ivi/src/common/screen_of_death.ts","node_modules/ivi/src/events/utils.ts","node_modules/ivi/src/vdom/vnode_builder.ts","node_modules/ivi/src/vdom/context.ts","node_modules/ivi/src/vdom/sync_dom.ts","node_modules/ivi/src/common/dom.ts","node_modules/ivi/src/events/sync_events.ts","node_modules/ivi/src/vdom/implementation.ts","node_modules/ivi/src/scheduler/scheduler.ts","node_modules/ivi/src/vdom/component.ts","node_modules/ivi/src/vdom/root.ts","src/02_stateful_component/main.ts"," [synthetic:es6/util/arrayfromiterable] "],"names":["$jscomp.global","$jscomp.defineProperty","$jscomp.initSymbol","$jscomp.global.Symbol","$jscomp.Symbol","$jscomp.symbolCounter_","$jscomp.SYMBOL_PREFIX","$jscomp.global.Symbol.iterator","$jscomp.arrayIterator","$jscomp.initSymbolIterator","$jscomp.iteratorPrototype","$jscomp.polyfill","$jscomp.makeIterator","$jscomp.owns","opts","Object","defineProperty","get","window","addEventListener","e","USER_AGENT","test","navigator","ua","userAgent","MSStream","NOOP","screenOfDeathElement","bodyMargin","bodyPadding","injectScreenOfDeath","title","content","document","body","style","margin","padding","createElement","zIndex","backgroundColor","position","width","height","boxSizing","innerHTML","color","ev","target","correspondingUseElement","className","nodeType","parentNode","removeChild","undefined","appendChild","screenOfDeathErrorHandler","error","message","stack","constructor","VNodeBuilder","flags","tag","props","children","_flags","_tag","_key","_props","_className","_events","_style","_children","_ref","_dom","key","Array","isArray","i","length","n","result","slice","_normalizeVNodes","$t","value","checked","cloneVNode","node","newChildren","newNode","nodes","push","Context","data","from","v","keys","l","k","ROOT_CONTEXT","syncClassName","b","setAttribute","syncStyle","a","cssText","matchCount","bValue","aValue","hasOwnProperty","setDOMProperty","volume","removeAttribute","charCodeAt","setAttributeNS","XML_NAMESPACE","XLINK_NAMESPACE","syncDOMProps","syncEvents","handler","dispatcher","registerHandler","fn","unregisterHandler","aHandler","bHandler","events","_updateComponent","component","ref","_rootDOMNode","oldRoot","root","componentUpdateContext","_parentDOMNode","newRoot","componentClassRender","vNodeSyncOrReplace","_context","vNodePropagateNewContext","_updateComponentFunction","parent","context","owner","vNodeMount","vnode","didMount","vNodeUnmount","vNodeUnmountAll","vnodes","_parentContext","vNodeRemoveChild","render","vNodeRender","createTextNode","type","createElementNS","SVG_NAMESPACE","textContent","insertBefore","input","vNodeRenderInto","container","refChild","vNodeCanSync","vNodeSync","nodeValue","bParentFlags","aParentFlags","c","firstChild","aStart","bStart","aEnd","bEnd","aStartNode","bStartNode","aEndNode","bEndNode","aNode","bNode","nextPos","next","aLength","bLength","sources","fill","moved","pos","synced","j","keyIndex","Map","set","p","il","u","newProps","newRef","replaceChild","FrameTasksGroup","_componentTasks","_afterTasks","_readTasks","_writeTasks","write","callback","read","clock","microtasks","macrotasks","currentFrame","nextFrame","updateComponents","microtaskNode","macrotaskMessage","Math","random","observe","microtaskObserver","MutationObserver","runMicrotasks","scheduler.microtaskNode","characterData","handleWindowMessage","requestNextFrame","scheduler.flags","requestAnimationFrame","handleNextFrame","source","scheduler.macrotaskMessage","tasks","scheduler.macrotasks","scheduler.clock","frame","scheduler.nextFrame","scheduler.currentFrame","scheduler.updateComponents.length","scheduler.updateComponents","componentGroups","componentGroup","scheduler.updateComponents.pop","pop","scheduler.microtasks.length","scheduler.microtasks","Component","depth","$jscomp.global.Object.defineProperties","roots","StatefulComponent","arguments","$jscomp.arrayFromIterator","startTime","Date","now","elapsedSeconds","updateTime","this.updateTime","invalidate","dirtyFlags","updateComponent","priority","group","setTimeout","$jscomp.inherits","tagName","toFixed","prototype","getElementById","r","vNode","domNode","onclick","last","indexOf"],"mappings":"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","file":"bundle.js","sourceRoot":"../..","sourcesContent":[null,null,null,null,null,null,null,null,null,null,null,"/**\n * Feature Detection is used to implement polyfills or just disable some features when browser doesn't support them.\n * For example, when browser doesn't support passive events, we can just ignore it and always use active events.\n *\n * NOTE: Do not implement feature detection for features that aren't used in `ivi` library.\n */\n\n/**\n * Feature Flags.\n */\nexport const enum FeatureFlags {\n    /**\n     * Passive event listeners are a new feature in the DOM spec that enable developers to opt-in to better scroll\n     * performance by eliminating the need for scrolling to block on touch and wheel event listeners. Developers can\n     * annotate touch and wheel listeners with {passive: true} to indicate that they will never invoke preventDefault.\n     *\n     * https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n     */\n    PassiveEvents = 1,\n}\n\n/**\n * Supported Features, see `FeatureFlags` for details.\n */\nexport let FEATURES: FeatureFlags = 0;\n\n/**\n * Passive Events:\n *\n * https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n */\ntry {\n    // Test via a getter in the options object to see if the passive property is accessed\n    const opts = Object.defineProperty({}, \"passive\", {\n        get: function () {\n            FEATURES |= FeatureFlags.PassiveEvents;\n        },\n    });\n    window.addEventListener(\"test\", null as any as (ev: Event) => void, opts);\n} catch (e) {\n    /* tslint:disable:no-empty */\n    /* tslint:enable:no-empty */\n}\n","/**\n * User Agent detection is used to fix some quirks like iOS event bubbling, etc.\n *\n * NOTE: Do not implement any browser detection that aren't used in `ivi` library.\n */\n\nconst ua = navigator ? navigator.userAgent : \"\";\n\n/**\n * User Agent Flags.\n */\nexport const enum UserAgentFlags {\n    /**\n     * iOS browser (iPad, iPhone, iPod).\n     */\n    iOS = 1,\n};\n\n/**\n * User Agent, see `UserAgentFlags` for details.\n */\nexport let USER_AGENT: UserAgentFlags = 0;\n\nif (/iPad|iPhone|iPod/.test(ua) && !(window as any).MSStream) {\n    USER_AGENT |= UserAgentFlags.iOS;\n}\n","\n/**\n * NOOP function.\n */\nexport function NOOP() {\n    /* tslint:disable:no-empty */\n    /* tslint:enable:no-empty */\n}\n","/**\n * Screen of Death.\n *\n * When exception is thrown, inject Screen of Death into document.\n *\n * To disable Screen of Death, set Dev Mode `DisableScreenOfDeath` flag with a function\n * `setDevModeFlags(DevModeFlags.DisableScreenOfDeath)`.\n */\nimport { DevModeFlags, DEV_MODE } from \"./dev_mode\";\nimport { getEventTarget } from \"../events/utils\";\n\n/**\n * Screen of Death Element.\n */\nlet screenOfDeathElement: HTMLDivElement | undefined;\n\n/**\n * Store original body margin when Screen of Death is injected.\n */\nlet bodyMargin: string | null;\n/**\n * Store original body padding when Screen of Death is injected.\n */\nlet bodyPadding: string | null;\n\n/**\n * Inject Screen of Death into document.\n *\n * @param title Title.\n * @param content Content.\n */\nexport function injectScreenOfDeath(title: string, content: string): void {\n    if (!screenOfDeathElement) {\n        // Save original body margin and padding.\n        bodyMargin = document.body.style.margin;\n        bodyPadding = document.body.style.padding;\n\n        // Remove body margin and padding.\n        document.body.style.margin = \"0\";\n        document.body.style.padding = \"0\";\n\n        // Inject Screen of Death.\n        screenOfDeathElement = document.createElement(\"div\");\n        const style = screenOfDeathElement.style;\n        style.zIndex = \"2147483647\";\n        style.backgroundColor = \"#600\";\n        style.position = \"absolute\";\n        style.width = \"100%\";\n        style.height = \"100%\";\n        style.boxSizing = \"border-box\";\n        style.padding = \"1em\";\n        screenOfDeathElement.innerHTML = `` +\n            `<div style=\"color:#fff;font-family:monospace;font-weight:bold;font-size:2em;line-height:2em\">` +\n            `${title}</div>` +\n            `<pre style=\"color:#fff;font-weight:bold;font-size:1.2em\">${content}</pre>` +\n            `<div` +\n            ` style=\"position:absolute;top:0;right:0;padding:1em;color:#fff;cursor:pointer;` +\n            `font-size:2em;line-height:1em;font-weight:bold\"` +\n            ` class=\"ivi-screen-of-death-close\">x</div>`;\n        screenOfDeathElement.style.color = \"#fff\";\n        screenOfDeathElement.addEventListener(\"click\", (ev) => {\n            if ((getEventTarget(ev) as Element).className === \"ivi-screen-of-death-close\") {\n                removeScreenOfDeath();\n            }\n        });\n        document.body.appendChild(screenOfDeathElement);\n    }\n}\n\n/**\n * Remove Screen of Death.\n */\nfunction removeScreenOfDeath(): void {\n    if (screenOfDeathElement) {\n        // Restore original body margin and padding.\n        document.body.style.margin = bodyMargin;\n        document.body.style.padding = bodyPadding;\n\n        // Remove Screen of Death.\n        document.body.removeChild(screenOfDeathElement);\n        screenOfDeathElement = undefined;\n    }\n}\n\nif (!(DEV_MODE & (DevModeFlags.DisableScreenOfDeath | DevModeFlags.DisableScreenOfDeathGlobalErrorHandling))) {\n    window.addEventListener(\"error\", function screenOfDeathErrorHandler(e: ErrorEvent) {\n        injectScreenOfDeath(`Global Error: ${e.error.message}`, e.error.stack);\n    });\n}\n","import { FEATURES, FeatureFlags } from \"../common/feature_detection\";\nimport { NativeEventDispatcherFlags } from \"./flags\";\nimport { EventHandlerList } from \"./event_handler\";\n\n/**\n * Gets the target node from a native Event.\n *\n * @param ev Native DOM Event.\n * @returns Target Node.\n */\nexport function getEventTarget(ev: Event): EventTarget {\n    let target = ev.target || window;\n\n    /**\n     * Fix for `SVGUseElement` in old browsers.\n     */\n    if ((target as any).correspondingUseElement) {\n        target = (target as any).correspondingUseElement;\n    }\n\n    /**\n     * Safari fires events on Text Nodes.\n     *\n     * http://www.quirksmode.org/js/events_properties.html\n     */\n    return (target as Node).nodeType === 3 ? (target as Node).parentNode! : target;\n}\n\n/**\n * `{ capture: true, passive: true }` object that should be used as a third parameter in `addEventListener`.\n */\nexport const EVENT_CAPTURE_PASSIVE_OPTIONS =\n    (FEATURES & FeatureFlags.PassiveEvents) ?\n        { \"capture\": true, \"passive\": true } :\n        true;\n\n/**\n * `{ passive: true }` object that should be used as a third parameter in `addEventListener`.\n */\nexport const EVENT_PASSIVE_OPTIONS =\n    (FEATURES & FeatureFlags.PassiveEvents) ?\n        { \"passive\": true } :\n        false;\n\n/**\n * Get Event options that should be used when adding Event Listener.\n *\n * @param flags See `EventDispatcherFlags` for details.\n * @returns Option object that can be used as a 3rd parameter in `addEventListener` call.\n */\nexport function getEventOptions(flags: NativeEventDispatcherFlags): boolean | { capture?: boolean, passive?: boolean } {\n    if (flags & NativeEventDispatcherFlags.Passive) {\n        if (flags & NativeEventDispatcherFlags.Capture) {\n            return EVENT_CAPTURE_PASSIVE_OPTIONS;\n        }\n        return EVENT_PASSIVE_OPTIONS;\n    }\n    if (flags & NativeEventDispatcherFlags.Capture) {\n        return true;\n    }\n    return false;\n}\n\n/**\n * Property that is used on DOM Nodes to store EventProps object.\n */\nexport const DOM_NODE_EVENTS_PROPERTY = \"_ev\";\n\n/**\n * Set Event Handler list to DOM Node.\n *\n * @param node DOM Node.\n * @param events Event Handler List.\n */\nexport function setEventHandlerListToDOMNode(node: Node, events: EventHandlerList | undefined): void {\n    (node as any)[DOM_NODE_EVENTS_PROPERTY] = events;\n}\n\n/**\n * Get Event Handler list from DOM Node.\n *\n * @param node DOM Node.\n * @returns EventHandlerList or undefined if DOM Node doesn't listen for any events.\n */\nexport function getEventHandlerListFromDOMNode(node: Node): EventHandlerList | undefined {\n    return (node as any)[DOM_NODE_EVENTS_PROPERTY];\n}\n","import { VNode } from \"./vnode\";\nimport { VNodeFlags } from \"./flags\";\nimport { ComponentFunction, ComponentClass, Component } from \"./component\";\nimport { EventHandlerList } from \"../events/event_handler\";\nimport {\n    HTMLAnchorElementProps, HTMLElementProps, HTMLAppletElementProps, HTMLAreaElementProps, HTMLAudioElementProps,\n    HTMLBaseElementProps, HTMLBaseFontElementProps, HTMLBodyElementProps, HTMLBRElementProps, HTMLButtonElementProps,\n    HTMLCanvasElementProps, HTMLQuoteElementProps, HTMLTableCaptionElementProps, HTMLTableColElementProps,\n    HTMLDataListElementProps, HTMLModElementProps, HTMLDirectoryElementProps, HTMLDivElementProps,\n    HTMLDListElementProps, HTMLEmbedElementProps, HTMLFieldSetElementProps, HTMLFontElementProps, HTMLFormElementProps,\n    HTMLFrameElementProps, HTMLFrameSetElementProps, HTMLHeadElementProps, HTMLHeadingElementProps, HTMLHRElementProps,\n    HTMLHtmlElementProps, HTMLIFrameElementProps, HTMLImageElementProps, HTMLInputElementProps, HTMLLabelElementProps,\n    HTMLLegendElementProps, HTMLLIElementProps, HTMLLinkElementProps, HTMLMapElementProps, HTMLMarqueeElementProps,\n    HTMLMenuElementProps, HTMLMetaElementProps, HTMLMeterElementProps, HTMLObjectElementProps, HTMLOListElementProps,\n    HTMLOptGroupElementProps, HTMLOptionElementProps, HTMLParagraphElementProps, HTMLParamElementProps,\n    HTMLPictureElementProps, HTMLPreElementProps, HTMLProgressElementProps, HTMLScriptElementProps,\n    HTMLSelectElementProps, HTMLSourceElementProps, HTMLSpanElementProps, HTMLStyleElementProps,\n    HTMLTableDataCellElementProps, HTMLTableElementProps, HTMLTableHeaderCellElementProps, HTMLTableRowElementProps,\n    HTMLTableSectionElementProps, HTMLTemplateElementProps, HTMLTextAreaElementProps, HTMLTitleElementProps,\n    HTMLTrackElementProps, HTMLUListElementProps, HTMLUnknownElementProps, HTMLVideoElementProps, HTMLMediaElementProps,\n    MSHTMLWebViewElementProps,\n\n    SVGCircleElementProps, SVGClipPathElementProps, SVGDefsElementProps, SVGDescElementProps, SVGEllipseElementProps,\n    SVGFEBlendElementProps, SVGFEColorMatrixElementProps, SVGFEComponentTransferElementProps,\n    SVGFECompositeElementProps, SVGFEConvolveMatrixElementProps, SVGFEDiffuseLightingElementProps,\n    SVGFEDisplacementMapElementProps, SVGFEDistantLightElementProps, SVGFEFloodElementProps, SVGFEFuncAElementProps,\n    SVGFEFuncBElementProps, SVGFEFuncGElementProps, SVGFEFuncRElementProps, SVGFEGaussianBlurElementProps,\n    SVGFEImageElementProps, SVGFEMergeElementProps, SVGFEMergeNodeElementProps, SVGFEMorphologyElementProps,\n    SVGFEOffsetElementProps, SVGFEPointLightElementProps, SVGFESpecularLightingElementProps, SVGFESpotLightElementProps,\n    SVGFETileElementProps, SVGFETurbulenceElementProps, SVGFilterElementProps, SVGForeignObjectElementProps,\n    SVGGElementProps, SVGImageElementProps, SVGLinearGradientElementProps, SVGLineElementProps, SVGMarkerElementProps,\n    SVGMaskElementProps, SVGMetadataElementProps, SVGPathElementProps, SVGPatternElementProps, SVGPolygonElementProps,\n    SVGPolylineElementProps, SVGRadialGradientElementProps, SVGRectElementProps, SVGStopElementProps,\n    SVGSVGElementProps, SVGSwitchElementProps, SVGSymbolElementProps, SVGTextElementProps, SVGTextPathElementProps,\n    SVGTSpanElementProps, SVGViewElementProps, SVGUseElementProps, SVGElementProps,\n\n    CSSStyleProps,\n} from \"./dom_props\";\n\n/**\n * VNode Builder provides a chain-method API to build VNodes.\n *\n * VNodeBuilder class has a parametric type `P` to specify `props` type.\n *\n *     const vnode = $h(\"div\", \"div-class-name\")\n *         .props({ id: \"div-id\" })\n *         .events({ click: Events.onClick((e) => console.log(\"click event\", e)) })\n *         .children(\"Hello\");\n *\n * There are several factory functions that create VNode Builder objects:\n *\n *     // Basic HTML Elements\n *     $h(tagName: string, className?: string): VNodeBuilder<HTMLElementProps | null>;\n *\n *     // SVG Elements\n *     $s(tagName: string, className?: string): VNodeBuilder<SVGElementProps | null>;\n *\n *     // Components\n *     $c<P>(component: ComponentClass<P> | ComponentFunction<P>, props: P): VNodeBuilder<P>;\n *\n *     // Input Elements and TextArea (specifying type as \"textarea\" will create HTMLTextAreaElement)\n *     $i(type: string, className?: string): VNodeBuilder<HTMLInputElementProps | HTMLTextAreaElementProps | null>;\n *\n *     // Media Elements (Video and Audio)\n *     $m(tagName: string, className?: string): VNodeBuilder<HTMLMediaElementProps | null>;\n *\n *     // Text Nodes\n *     $t(text: string): VNodeBuilder<null>;\n *\n * @final\n */\nexport class VNodeBuilder<P> implements VNode<P> {\n    _flags: VNodeFlags;\n    _tag: string | ComponentClass<any> | ComponentFunction<any> | null;\n    _key: any;\n    _props: P | null;\n    _className: string | null;\n    _style: CSSStyleProps | string | null;\n    _events: EventHandlerList | null;\n    _children: VNode<any>[] | VNode<any> | string | number | boolean | Component<any> | null | undefined;\n    _dom: Node | null;\n    _ref: ((ref: Node | Component<any> | null) => void) | null;\n\n    constructor(\n        flags: number,\n        tag: string | ComponentFunction<P> | ComponentClass<P> | null,\n        props: P | null,\n        className: string | null,\n        children: VNode<any>[] | VNode<any> | string | number | boolean | Component<any> | null | undefined,\n    ) {\n        this._flags = flags;\n        this._tag = tag;\n        this._key = null;\n        this._props = props;\n        this._className = className;\n        this._style = null;\n        this._events = null;\n        this._children = children;\n        this._dom = null;\n        this._ref = null;\n    }\n\n    /**\n     * Set key.\n     *\n     * Children reconciliation algorithm is using key property to find the same node in the previous children array. Key\n     * should be unique among its siblings.\n     *\n     * @param key Any object that should be unique among its siblings.\n     * @returns VNodeBuilder.\n     */\n    key(key: any): VNodeBuilder<P> {\n        this._key = key;\n        return this;\n    }\n\n    /**\n     * Set className.\n     *\n     * @param className.\n     * @returns VNodeBuilder.\n     */\n    className(className: string | null): VNodeBuilder<P> {\n        if (__IVI_DEV__) {\n            if (!(this._flags & VNodeFlags.Element)) {\n                throw new Error(\"Failed to set className on VNode: className method should be called on element \" +\n                    \"nodes only.\");\n            }\n        }\n        this._className = className;\n        return this;\n    }\n\n    /**\n     * Set style.\n     *\n     * @param style.\n     * @returns VNodeBuilder.\n     */\n    style(style: CSSStyleProps | string | null): VNodeBuilder<P> {\n        if (__IVI_DEV__) {\n            if (!(this._flags & VNodeFlags.Element)) {\n                throw new Error(\"Failed to set style on VNode: style method should be called on element nodes only.\");\n            }\n        }\n        this._style = style;\n        return this;\n    }\n\n    /**\n     * Set events.\n     *\n     * @param events.\n     * @returns VNodeBuilder.\n     */\n    events(events: EventHandlerList | null): VNodeBuilder<P> {\n        if (__IVI_DEV__) {\n            if (!(this._flags & VNodeFlags.Element)) {\n                throw new Error(\"Failed to set events on VNode: event method should be called on element nodes only.\");\n            }\n        }\n        this._events = events;\n        return this;\n    }\n\n    /**\n     * Set props.\n     *\n     * @param props.\n     * @returns VNodeBuilder.\n     */\n    props(props: P): VNodeBuilder<P> {\n        this._props = props;\n        return this;\n    }\n\n    /**\n     * Set children.\n     *\n     * @param children Children can be a simple string, single VNode or recursive list of VNodes with strings and null\n     *   values. It will automatically normalize recursive lists by flattening, filtering out null values and replacing\n     *   strings with text nodes.\n     * @returns VNodeBuilder.\n     */\n    children(children: VNodeRecursiveArray | VNode<any> | string | number | boolean | null): VNodeBuilder<P> {\n        if (__IVI_DEV__) {\n            if (!(this._flags & VNodeFlags.Element)) {\n                throw new Error(\"Failed to set children on VNode: children method should be called on element nodes \" +\n                    \"only.\");\n            }\n            if (this._flags & VNodeFlags.InputElement) {\n                throw new Error(\"Failed to set children on VNode: input elements can't have children.\");\n            }\n            if (this._flags & VNodeFlags.MediaElement) {\n                throw new Error(\"Failed to set children on VNode: media elements can't have children.\");\n            }\n        }\n        if (Array.isArray(children)) {\n            this._flags |= VNodeFlags.ChildrenArray;\n            this._children = normalizeVNodes(children);\n        } else {\n            if (typeof children === \"object\") {\n                this._flags |= VNodeFlags.ChildrenVNode;\n            } else {\n                this._flags |= VNodeFlags.ChildrenBasic;\n            }\n            this._children = children;\n        }\n        return this;\n    }\n\n    /**\n     * Set children that will be tracked by `key` property.\n     *\n     * To support use cases with static nodes at the beginning and at the end of the children list, children list may\n     * contain nodes with `null` keys at the beginning of the list and at the end, children with `null` keys shouldn't\n     * move.\n     *\n     * NOTE: If you've found any other use case that can't be easily solved with the current `trackByKeyChildren`\n     * implementation, feel free to submit an issue, but most of the time it is better to help browsers with layout\n     * calculation, and it will be better to wrap nodes that aren't moved into its own container nodes and specify css\n     * containment property. Use cases with \"semantic\" markup probably will be ignored.\n     *\n     * @param children Recursive lists of vnodes that can contain null values. It will automatically normalize recursive\n     *   lists by flattening and filtering out null values.\n     * @returns VNodeBuilder.\n     */\n    trackByKeyChildren(children: VNodeRecursiveArray | null): VNodeBuilder<P> {\n        if (__IVI_DEV__) {\n            if (!(this._flags & VNodeFlags.Element)) {\n                throw new Error(\"Failed to set children on VNode: children method should be called on element nodes \" +\n                    \"only.\");\n            }\n            if (this._flags & VNodeFlags.InputElement) {\n                throw new Error(\"Failed to set children on VNode: input elements can't have children.\");\n            }\n            if (this._flags & VNodeFlags.MediaElement) {\n                throw new Error(\"Failed to set children on VNode: media elements can't have children.\");\n            }\n\n        }\n        this._flags |= VNodeFlags.TrackByKeyChildren | VNodeFlags.ChildrenArray;\n        if (children) {\n            this._children = normalizeVNodes(children);\n        }\n\n        if (__IVI_DEV__) {\n            const childrenArray = this._children as VNode<any>[];\n            let child: VNode<any>;\n            let start = 0;\n            let end = childrenArray.length - 1;\n            while (start <= end) {\n                child = childrenArray[start];\n                if (child._key !== null) {\n                    break;\n                }\n                start++;\n            }\n            while (start <= end) {\n                child = childrenArray[end];\n                if (child._key !== null) {\n                    break;\n                }\n                end--;\n            }\n\n            if (start <= end) {\n                const usedKeys = new Set<any>();\n                while (start <= end) {\n                    child = childrenArray[start];\n                    const key = child._key;\n                    if (key === null) {\n                        throw new Error(`Failed to set children on VNode: invalid keyed children list, keyed ` +\n                            `children should have a shape like [non-keyed, keyed, non-keyed].`);\n                    }\n                    if (usedKeys.has(key)) {\n                        throw new Error(`Failed to set children on VNode: invalid children list, key: \"${key}\" is ` +\n                            `used multiple times.`);\n                    }\n                    usedKeys.add(key);\n                    start++;\n                }\n            }\n        }\n        return this;\n    }\n\n    /**\n     * Set children as an innerHTML string. It is potentially vulnerable to XSS attacks.\n     *\n     * @param html innerHTML in a string format.\n     * @returns VNodeBuilder.\n    */\n    unsafeHTML(html: string): VNodeBuilder<P> {\n        if (__IVI_DEV__) {\n            if (!(this._flags & VNodeFlags.Element)) {\n                throw new Error(\"Failed to set unsafeHTML on VNode: unsafeHTML method should be called on element \" +\n                    \"nodes only.\");\n            }\n            if (this._flags & VNodeFlags.InputElement) {\n                throw new Error(\"Failed to set unsafeHTML on VNode: input elements can't have innerHTML.\");\n            }\n            if (this._flags & VNodeFlags.MediaElement) {\n                throw new Error(\"Failed to set children on VNode: media elements can't have children.\");\n            }\n        }\n        this._flags |= VNodeFlags.UnsafeHTML;\n        this._children = html;\n        return this;\n    }\n\n    /**\n     * Set HTMLInputElement/HTMLTextAreaElement value property.\n     *\n     * @param text Text value.\n     * @returns VNodeBuilder.\n     */\n    value(value: string | null): VNodeBuilder<P> {\n        if (__IVI_DEV__) {\n            if (!(this._flags & VNodeFlags.InputElement)) {\n                throw new Error(\"Failed to set value on VNode: value method is working only with input elements.\");\n            }\n        }\n        this._children = value;\n        return this;\n    }\n\n    /**\n     * Set HTMLInputElement checked property.\n     *\n     * @param text Text value.\n     * @returns VNodeBuilder.\n     */\n    checked(checked: boolean | null): VNodeBuilder<P> {\n        if (__IVI_DEV__) {\n            if (!(this._flags & VNodeFlags.InputElement)) {\n                throw new Error(\"Failed to set checked on VNode: checked method is working only with input elements.\");\n            }\n            if (!isInputTypeSupportsCheckedValue(this._tag as InputType)) {\n                throw new Error(`Failed to set checked on VNode: input elements with type ${this._tag} doesn't have `\n                    + `checked value.`);\n            }\n        }\n        this._children = checked;\n        return this;\n    }\n\n    /**\n     * Set ref callback.\n     *\n     * When VNode is mounted ref callback will be invoked with a Node value for DOM Elements or Component instance for\n     * components.\n     *\n     * When VNode is unmounted ref callback will be invoked with a `null` value.\n     *\n     * @param ref callback.\n     * @returns VNodeBuilder.\n     */\n    ref(ref: (ref: Node | null) => void): VNodeBuilder<P>;\n    ref(ref: (ref: Component<any> | null) => void): VNodeBuilder<P>;\n    ref(ref: ((ref: Node | null) => void) | ((ref: Component<any> | null) => void)): VNodeBuilder<P> {\n        this._ref = ref;\n        return this;\n    }\n}\n\nexport type VNodeRecursiveListValue = VNodeRecursiveArray | VNode<any> | string | number | boolean | null;\n/**\n * Recursive VNode List.\n */\nexport interface VNodeRecursiveArray extends Array<VNodeRecursiveListValue> { }\n\n/**\n * Create a VNodeBuilder representing a Text node.\n *\n * @param context Text content.\n * @returns VNodeBuilder object.\n */\nexport function $t(content: string | number | boolean | null): VNodeBuilder<null> {\n    return new VNodeBuilder<null>(VNodeFlags.Text, null, null, null, content);\n}\n\n/* tslint:disable:max-line-length */\n/**\n * Create a VNodeBuilder representing an Element node.\n *\n * @param tagName HTML Element tag name.\n * @param props HTML Element props.\n * @returns VNodeBuilder object.\n */\nexport function $h(tagName: \"a\", className?: string): VNodeBuilder<HTMLAnchorElementProps | null>;\nexport function $h(tagName: \"abbr\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"acronym\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"address\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"applet\", className?: string): VNodeBuilder<HTMLAppletElementProps | null>;\nexport function $h(tagName: \"area\", className?: string): VNodeBuilder<HTMLAreaElementProps | null>;\nexport function $h(tagName: \"article\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"aside\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"b\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"base\", className?: string): VNodeBuilder<HTMLBaseElementProps | null>;\nexport function $h(tagName: \"basefont\", className?: string): VNodeBuilder<HTMLBaseFontElementProps | null>;\nexport function $h(tagName: \"bdo\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"big\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"blockquote\", className?: string): VNodeBuilder<HTMLQuoteElementProps | null>;\nexport function $h(tagName: \"body\", className?: string): VNodeBuilder<HTMLBodyElementProps | null>;\nexport function $h(tagName: \"br\", className?: string): VNodeBuilder<HTMLBRElementProps | null>;\nexport function $h(tagName: \"button\", className?: string): VNodeBuilder<HTMLButtonElementProps | null>;\nexport function $h(tagName: \"canvas\", className?: string): VNodeBuilder<HTMLCanvasElementProps | null>;\nexport function $h(tagName: \"caption\", className?: string): VNodeBuilder<HTMLTableCaptionElementProps | null>;\nexport function $h(tagName: \"center\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"cite\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"code\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"col\", className?: string): VNodeBuilder<HTMLTableColElementProps | null>;\nexport function $h(tagName: \"colgroup\", className?: string): VNodeBuilder<HTMLTableColElementProps | null>;\nexport function $h(tagName: \"datalist\", className?: string): VNodeBuilder<HTMLDataListElementProps | null>;\nexport function $h(tagName: \"dd\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"del\", className?: string): VNodeBuilder<HTMLModElementProps | null>;\nexport function $h(tagName: \"dfn\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"dir\", className?: string): VNodeBuilder<HTMLDirectoryElementProps | null>;\nexport function $h(tagName: \"div\", className?: string): VNodeBuilder<HTMLDivElementProps | null>;\nexport function $h(tagName: \"dl\", className?: string): VNodeBuilder<HTMLDListElementProps | null>;\nexport function $h(tagName: \"dt\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"em\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"embed\", className?: string): VNodeBuilder<HTMLEmbedElementProps | null>;\nexport function $h(tagName: \"fieldset\", className?: string): VNodeBuilder<HTMLFieldSetElementProps | null>;\nexport function $h(tagName: \"figcaption\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"figure\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"font\", className?: string): VNodeBuilder<HTMLFontElementProps | null>;\nexport function $h(tagName: \"footer\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"form\", className?: string): VNodeBuilder<HTMLFormElementProps | null>;\nexport function $h(tagName: \"frame\", className?: string): VNodeBuilder<HTMLFrameElementProps | null>;\nexport function $h(tagName: \"frameset\", className?: string): VNodeBuilder<HTMLFrameSetElementProps | null>;\nexport function $h(tagName: \"h1\", className?: string): VNodeBuilder<HTMLHeadingElementProps | null>;\nexport function $h(tagName: \"h2\", className?: string): VNodeBuilder<HTMLHeadingElementProps | null>;\nexport function $h(tagName: \"h3\", className?: string): VNodeBuilder<HTMLHeadingElementProps | null>;\nexport function $h(tagName: \"h4\", className?: string): VNodeBuilder<HTMLHeadingElementProps | null>;\nexport function $h(tagName: \"h5\", className?: string): VNodeBuilder<HTMLHeadingElementProps | null>;\nexport function $h(tagName: \"h6\", className?: string): VNodeBuilder<HTMLHeadingElementProps | null>;\nexport function $h(tagName: \"head\", className?: string): VNodeBuilder<HTMLHeadElementProps | null>;\nexport function $h(tagName: \"header\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"hgroup\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"hr\", className?: string): VNodeBuilder<HTMLHRElementProps | null>;\nexport function $h(tagName: \"html\", className?: string): VNodeBuilder<HTMLHtmlElementProps | null>;\nexport function $h(tagName: \"i\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"iframe\", className?: string): VNodeBuilder<HTMLIFrameElementProps | null>;\nexport function $h(tagName: \"img\", className?: string): VNodeBuilder<HTMLImageElementProps | null>;\nexport function $h(tagName: \"ins\", className?: string): VNodeBuilder<HTMLModElementProps | null>;\nexport function $h(tagName: \"isindex\", className?: string): VNodeBuilder<HTMLUnknownElementProps | null>;\nexport function $h(tagName: \"kbd\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"keygen\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"label\", className?: string): VNodeBuilder<HTMLLabelElementProps | null>;\nexport function $h(tagName: \"legend\", className?: string): VNodeBuilder<HTMLLegendElementProps | null>;\nexport function $h(tagName: \"li\", className?: string): VNodeBuilder<HTMLLIElementProps | null>;\nexport function $h(tagName: \"link\", className?: string): VNodeBuilder<HTMLLinkElementProps | null>;\nexport function $h(tagName: \"listing\", className?: string): VNodeBuilder<HTMLPreElementProps | null>;\nexport function $h(tagName: \"map\", className?: string): VNodeBuilder<HTMLMapElementProps | null>;\nexport function $h(tagName: \"mark\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"marquee\", className?: string): VNodeBuilder<HTMLMarqueeElementProps | null>;\nexport function $h(tagName: \"menu\", className?: string): VNodeBuilder<HTMLMenuElementProps | null>;\nexport function $h(tagName: \"meta\", className?: string): VNodeBuilder<HTMLMetaElementProps | null>;\nexport function $h(tagName: \"meter\", className?: string): VNodeBuilder<HTMLMeterElementProps | null>;\nexport function $h(tagName: \"nav\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"nextid\", className?: string): VNodeBuilder<HTMLUnknownElementProps | null>;\nexport function $h(tagName: \"nobr\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"noframes\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"noscript\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"object\", className?: string): VNodeBuilder<HTMLObjectElementProps | null>;\nexport function $h(tagName: \"ol\", className?: string): VNodeBuilder<HTMLOListElementProps | null>;\nexport function $h(tagName: \"optgroup\", className?: string): VNodeBuilder<HTMLOptGroupElementProps | null>;\nexport function $h(tagName: \"option\", className?: string): VNodeBuilder<HTMLOptionElementProps | null>;\nexport function $h(tagName: \"p\", className?: string): VNodeBuilder<HTMLParagraphElementProps | null>;\nexport function $h(tagName: \"param\", className?: string): VNodeBuilder<HTMLParamElementProps | null>;\nexport function $h(tagName: \"picture\", className?: string): VNodeBuilder<HTMLPictureElementProps | null>;\nexport function $h(tagName: \"plaintext\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"pre\", className?: string): VNodeBuilder<HTMLPreElementProps | null>;\nexport function $h(tagName: \"progress\", className?: string): VNodeBuilder<HTMLProgressElementProps | null>;\nexport function $h(tagName: \"q\", className?: string): VNodeBuilder<HTMLQuoteElementProps | null>;\nexport function $h(tagName: \"rt\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"ruby\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"s\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"samp\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"script\", className?: string): VNodeBuilder<HTMLScriptElementProps | null>;\nexport function $h(tagName: \"section\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"select\", className?: string): VNodeBuilder<HTMLSelectElementProps | null>;\nexport function $h(tagName: \"small\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"source\", className?: string): VNodeBuilder<HTMLSourceElementProps | null>;\nexport function $h(tagName: \"span\", className?: string): VNodeBuilder<HTMLSpanElementProps | null>;\nexport function $h(tagName: \"strike\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"strong\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"style\", className?: string): VNodeBuilder<HTMLStyleElementProps | null>;\nexport function $h(tagName: \"sub\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"sup\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"table\", className?: string): VNodeBuilder<HTMLTableElementProps | null>;\nexport function $h(tagName: \"tbody\", className?: string): VNodeBuilder<HTMLTableSectionElementProps | null>;\nexport function $h(tagName: \"td\", className?: string): VNodeBuilder<HTMLTableDataCellElementProps | null>;\nexport function $h(tagName: \"template\", className?: string): VNodeBuilder<HTMLTemplateElementProps | null>;\nexport function $h(tagName: \"textarea\", className?: string): VNodeBuilder<HTMLTextAreaElementProps | null>;\nexport function $h(tagName: \"tfoot\", className?: string): VNodeBuilder<HTMLTableSectionElementProps | null>;\nexport function $h(tagName: \"th\", className?: string): VNodeBuilder<HTMLTableHeaderCellElementProps | null>;\nexport function $h(tagName: \"thead\", className?: string): VNodeBuilder<HTMLTableSectionElementProps | null>;\nexport function $h(tagName: \"title\", className?: string): VNodeBuilder<HTMLTitleElementProps | null>;\nexport function $h(tagName: \"tr\", className?: string): VNodeBuilder<HTMLTableRowElementProps | null>;\nexport function $h(tagName: \"track\", className?: string): VNodeBuilder<HTMLTrackElementProps | null>;\nexport function $h(tagName: \"tt\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"u\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"ul\", className?: string): VNodeBuilder<HTMLUListElementProps | null>;\nexport function $h(tagName: \"var\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"wbr\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"x-ms-webview\", className?: string): VNodeBuilder<MSHTMLWebViewElementProps | null>;\nexport function $h(tagName: \"xmp\", className?: string): VNodeBuilder<HTMLPreElementProps | null>;\nexport function $h(tagName: string, className?: string): VNodeBuilder<HTMLElementProps | null> {\n    return new VNodeBuilder<HTMLElementProps | null>(\n        VNodeFlags.Element,\n        tagName,\n        null,\n        className === undefined ? null : className,\n        null);\n}\n\n/**\n * Create a VNodeBuilder representing a SVGElement node.\n *\n * @param tagName SVG Element tag name.\n * @param props SVG Element props.\n * @returns VNodeBuilder object.\n */\nexport function $s(tagName: \"circle\", className?: string): VNodeBuilder<SVGCircleElementProps | null>;\nexport function $s(tagName: \"clippath\", className?: string): VNodeBuilder<SVGClipPathElementProps | null>;\nexport function $s(tagName: \"defs\", className?: string): VNodeBuilder<SVGDefsElementProps | null>;\nexport function $s(tagName: \"desc\", className?: string): VNodeBuilder<SVGDescElementProps | null>;\nexport function $s(tagName: \"ellipse\", className?: string): VNodeBuilder<SVGEllipseElementProps | null>;\nexport function $s(tagName: \"feblend\", className?: string): VNodeBuilder<SVGFEBlendElementProps | null>;\nexport function $s(tagName: \"fecolormatrix\", className?: string): VNodeBuilder<SVGFEColorMatrixElementProps | null>;\nexport function $s(tagName: \"fecomponenttransfer\", className?: string): VNodeBuilder<SVGFEComponentTransferElementProps | null>;\nexport function $s(tagName: \"fecomposite\", className?: string): VNodeBuilder<SVGFECompositeElementProps | null>;\nexport function $s(tagName: \"feconvolvematrix\", className?: string): VNodeBuilder<SVGFEConvolveMatrixElementProps | null>;\nexport function $s(tagName: \"fediffuselighting\", className?: string): VNodeBuilder<SVGFEDiffuseLightingElementProps | null>;\nexport function $s(tagName: \"fedisplacementmap\", className?: string): VNodeBuilder<SVGFEDisplacementMapElementProps | null>;\nexport function $s(tagName: \"fedistantlight\", className?: string): VNodeBuilder<SVGFEDistantLightElementProps | null>;\nexport function $s(tagName: \"feflood\", className?: string): VNodeBuilder<SVGFEFloodElementProps | null>;\nexport function $s(tagName: \"fefunca\", className?: string): VNodeBuilder<SVGFEFuncAElementProps | null>;\nexport function $s(tagName: \"fefuncb\", className?: string): VNodeBuilder<SVGFEFuncBElementProps | null>;\nexport function $s(tagName: \"fefuncg\", className?: string): VNodeBuilder<SVGFEFuncGElementProps | null>;\nexport function $s(tagName: \"fefuncr\", className?: string): VNodeBuilder<SVGFEFuncRElementProps | null>;\nexport function $s(tagName: \"fegaussianblur\", className?: string): VNodeBuilder<SVGFEGaussianBlurElementProps | null>;\nexport function $s(tagName: \"feimage\", className?: string): VNodeBuilder<SVGFEImageElementProps | null>;\nexport function $s(tagName: \"femerge\", className?: string): VNodeBuilder<SVGFEMergeElementProps | null>;\nexport function $s(tagName: \"femergenode\", className?: string): VNodeBuilder<SVGFEMergeNodeElementProps | null>;\nexport function $s(tagName: \"femorphology\", className?: string): VNodeBuilder<SVGFEMorphologyElementProps | null>;\nexport function $s(tagName: \"feoffset\", className?: string): VNodeBuilder<SVGFEOffsetElementProps | null>;\nexport function $s(tagName: \"fepointlight\", className?: string): VNodeBuilder<SVGFEPointLightElementProps | null>;\nexport function $s(tagName: \"fespecularlighting\", className?: string): VNodeBuilder<SVGFESpecularLightingElementProps | null>;\nexport function $s(tagName: \"fespotlight\", className?: string): VNodeBuilder<SVGFESpotLightElementProps | null>;\nexport function $s(tagName: \"fetile\", className?: string): VNodeBuilder<SVGFETileElementProps | null>;\nexport function $s(tagName: \"feturbulence\", className?: string): VNodeBuilder<SVGFETurbulenceElementProps | null>;\nexport function $s(tagName: \"filter\", className?: string): VNodeBuilder<SVGFilterElementProps | null>;\nexport function $s(tagName: \"foreignobject\", className?: string): VNodeBuilder<SVGForeignObjectElementProps | null>;\nexport function $s(tagName: \"g\", className?: string): VNodeBuilder<SVGGElementProps | null>;\nexport function $s(tagName: \"image\", className?: string): VNodeBuilder<SVGImageElementProps | null>;\nexport function $s(tagName: \"line\", className?: string): VNodeBuilder<SVGLineElementProps | null>;\nexport function $s(tagName: \"lineargradient\", className?: string): VNodeBuilder<SVGLinearGradientElementProps | null>;\nexport function $s(tagName: \"marker\", className?: string): VNodeBuilder<SVGMarkerElementProps | null>;\nexport function $s(tagName: \"mask\", className?: string): VNodeBuilder<SVGMaskElementProps | null>;\nexport function $s(tagName: \"metadata\", className?: string): VNodeBuilder<SVGMetadataElementProps | null>;\nexport function $s(tagName: \"path\", className?: string): VNodeBuilder<SVGPathElementProps | null>;\nexport function $s(tagName: \"pattern\", className?: string): VNodeBuilder<SVGPatternElementProps | null>;\nexport function $s(tagName: \"polygon\", className?: string): VNodeBuilder<SVGPolygonElementProps | null>;\nexport function $s(tagName: \"polyline\", className?: string): VNodeBuilder<SVGPolylineElementProps | null>;\nexport function $s(tagName: \"radialgradient\", className?: string): VNodeBuilder<SVGRadialGradientElementProps | null>;\nexport function $s(tagName: \"rect\", className?: string): VNodeBuilder<SVGRectElementProps | null>;\nexport function $s(tagName: \"stop\", className?: string): VNodeBuilder<SVGStopElementProps | null>;\nexport function $s(tagName: \"svg\", className?: string): VNodeBuilder<SVGSVGElementProps | null>;\nexport function $s(tagName: \"switch\", className?: string): VNodeBuilder<SVGSwitchElementProps | null>;\nexport function $s(tagName: \"symbol\", className?: string): VNodeBuilder<SVGSymbolElementProps | null>;\nexport function $s(tagName: \"text\", className?: string): VNodeBuilder<SVGTextElementProps | null>;\nexport function $s(tagName: \"textpath\", className?: string): VNodeBuilder<SVGTextPathElementProps | null>;\nexport function $s(tagName: \"tspan\", className?: string): VNodeBuilder<SVGTSpanElementProps | null>;\nexport function $s(tagName: \"use\", className?: string): VNodeBuilder<SVGUseElementProps | null>;\nexport function $s(tagName: \"view\", className?: string): VNodeBuilder<SVGViewElementProps | null>;\nexport function $s(tagName: string, className?: string): VNodeBuilder<SVGElementProps | null> {\n    return new VNodeBuilder<SVGElementProps | null>(\n        VNodeFlags.Element | VNodeFlags.SvgElement,\n        tagName,\n        null,\n        className === undefined ? null : className,\n        null);\n}\n\nexport type InputType = \"textarea\" | \"button\" | \"checkbox\" | \"color\" | \"date\" | \"datetime\" | \"datetime-local\" |\n    \"email\" | \"file\" | \"hidden\" | \"image\" | \"month\" | \"number\" | \"password\" | \"radio\" | \"range\" | \"reset\" | \"search\" |\n    \"submit\" | \"tel\" | \"text\" | \"time\" | \"url\" | \"week\";\n\nfunction isInputTypeSupportsCheckedValue(type: InputType): boolean {\n    if (type === \"checkbox\" || type === \"radio\") {\n        return true;\n    }\n    return false;\n}\n\n/**\n * Create a VNodeBuilder representing an HTMLInputElement node.\n *\n * @param type Input Element type. When type param has value \"textarea\", HTMLTextAreaElement will be created.\n * @param props Input Element props.\n * @returns VNodeBuilder object.\n */\nexport function $i(type: \"textarea\", className?: string): VNodeBuilder<HTMLTextAreaElementProps | null>;\nexport function $i(type: \"button\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"checkbox\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"color\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"date\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"datetime\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"datetime-local\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"email\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"file\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"hidden\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"image\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"month\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"number\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"password\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"radio\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"range\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"reset\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"search\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"submit\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"tel\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"text\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"time\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"url\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"week\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: InputType, className?: string): VNodeBuilder<HTMLInputElementProps | null> {\n    return new VNodeBuilder<HTMLInputElementProps | null>(\n        type === \"textarea\" ?\n            VNodeFlags.Element | VNodeFlags.InputElement | VNodeFlags.TextAreaElement :\n            VNodeFlags.Element | VNodeFlags.InputElement,\n        type,\n        null,\n        className === undefined ? null : className,\n        null);\n}\n\n/**\n * Create a VNodeBuilder representing an HTMLMediaElement node.\n *\n * @param tagName Media element tag name.\n * @param props\n * @returns VNodeBuilder object.\n */\nexport function $m(tagName: \"audio\", className?: string): VNodeBuilder<HTMLAudioElementProps | null>;\nexport function $m(tagName: \"video\", className?: string): VNodeBuilder<HTMLVideoElementProps | null>;\nexport function $m(tagName: string, className?: string): VNodeBuilder<HTMLMediaElementProps | null> {\n    return new VNodeBuilder<HTMLMediaElementProps | null>(\n        VNodeFlags.Element | VNodeFlags.MediaElement,\n        tagName,\n        null,\n        className === undefined ? null : className,\n        null);\n}\n/* tslint:enable:max-line-length */\n\n/**\n * Create a VNodeBuilder representing a Component node.\n *\n * @param c Component factory.\n * @param props Component props.\n * @returns VNodeBuilder object.\n */\nexport function $c(c: ComponentFunction<null> | ComponentClass<null>): VNodeBuilder<null>;\nexport function $c<P>(c: ComponentFunction<P> | ComponentClass<P>, props: P): VNodeBuilder<P>;\nexport function $c<P>(c: ComponentFunction<P> | ComponentClass<P>, props?: P): VNodeBuilder<P> {\n    return new VNodeBuilder<P>(\n        (c.prototype.render) ? VNodeFlags.ComponentClass : VNodeFlags.ComponentFunction,\n        c,\n        props!,\n        null,\n        null);\n}\n\n/**\n * Perform a deep VNode cloning with DOM and Component reference erasure.\n *\n * @param node VNode to clone.\n * @returns Cloned VNode.\n */\nexport function cloneVNode(node: VNode<any>): VNode<any> {\n    const flags = node._flags;\n    let children = node._children;\n    if (children !== null && (flags & VNodeFlags.ChildrenArray)) {\n        children = children as VNode<any>[];\n        const newChildren = new Array<VNode<any>>(children.length);\n        for (let i = 0; i < 0; i++) {\n            newChildren[i] = cloneVNode(children[i]);\n        }\n    }\n\n    const newNode = new VNodeBuilder(\n        node._flags,\n        node._tag,\n        node._props,\n        node._className,\n        (node._flags & VNodeFlags.Component) ? null : node._children);\n    newNode._key = node._key;\n    newNode._events = node._events;\n    newNode._style = node._style;\n\n    return newNode;\n}\n\nfunction _normalizeVNodes(nodes: VNodeRecursiveArray, result: VNode<any>[], i: number): void {\n    for (; i < nodes.length; i++) {\n        const n = nodes[i];\n        if (n !== null) {\n            if (Array.isArray(n)) {\n                _normalizeVNodes(n, result, 0);\n            } else {\n                result.push(typeof n === \"object\" ? n as VNode<any> : $t(n));\n            }\n        }\n    }\n}\n\n/**\n * Normalizes recursive VNode lists by flattening all nodes, filtering out `null` children and converting strings to\n * text nodes.\n *\n * @param nodes\n * @returns Normalized VNode array.\n */\nexport function normalizeVNodes(nodes: VNodeRecursiveArray): VNode<any>[] {\n    for (let i = 0; i < nodes.length; i++) {\n        const n = nodes[i];\n\n        if (n === null || Array.isArray(n)) {\n            const result = nodes.slice(0, i) as VNode<any>[];\n            _normalizeVNodes(nodes, result, i);\n            return result;\n        } else if (typeof n !== \"object\") {\n            nodes[i] = $t(n);\n        }\n    }\n\n    return nodes as VNode<any>[];\n}\n","\n/**\n * Context.\n *\n * All Context objects should be immutable.\n *\n * Context objects will be implicitly propagated through virtual dom trees.\n *\n * @final\n */\nexport class Context {\n    /**\n     * Context data.\n     */\n    readonly data: { [key: string]: any };\n    /**\n     * Parent context.\n     *\n     * Contexts are built as a tree of immutable objects.\n     */\n    readonly from?: Context;\n\n    constructor(data: any, from?: Context) {\n        this.data = data;\n        this.from = from;\n    }\n\n    /**\n     * Find a context data.\n     *\n     * Get method supports two ways to retrieve context values:\n     *  - Retrieve value with a simple key.\n     *  - Object with a key => value mapping.\n     *\n     * Retrieving values with a simple key works by iterating through all parent contexts until it finds value,\n     * `undefined` value is returned when nothing is found.\n     *\n     * Retrieving values with key => value mapping works by iterating through all parent contexts and mapping all\n     * keys with values on the first occurence, this process goes on until it finds values for all keys.\n     *\n     * @param key Key may be a simple string, or a { [key: string]: value | undefined } object.\n     * @returns Value for the provided key if it is a simple string, or key object that was used as a key => value\n     *   mapping.\n     */\n    get<V>(key: V): V;\n    get<V>(key: string): V | undefined;\n    get<V>(key: string | V): V | undefined {\n        let n: Context | undefined = this;\n        let v: any;\n\n        if (typeof key !== \"string\") {\n            const keys = Object.keys(key) as (string | null)[];\n            let l = keys.length;\n\n            while (l > 0 && n) {\n                if (n.data) {\n                    for (let i = 0; i < keys.length; i++) {\n                        const k = keys[i];\n                        if (k) {\n                            v = n.data[k];\n                            if (v !== undefined) {\n                                (key as any)[k] = n.data[k];\n                                keys[i] = null;\n                                l--;\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                n = n.from;\n            }\n\n            return key;\n        }\n\n        while (n) {\n            if (n.data) {\n                v = n.data[key];\n                if (v !== undefined) {\n                    return v as V;\n                }\n            }\n            n = n.from;\n        }\n\n        return;\n    }\n}\n\n/**\n * Root Context.\n *\n * Default Context that is used to render root nodes.\n */\nexport const ROOT_CONTEXT = new Context(undefined);\n","import { XML_NAMESPACE, XLINK_NAMESPACE } from \"../common/dom\";\nimport { VNodeFlags } from \"./flags\";\nimport { CSSStyleProps } from \"./dom_props\";\n\n/**\n * Sync DOM class names.\n *\n * @param node HTML or SVG Element.\n * @param flags VNode flags.\n * @param a Old className.\n * @param b New className.\n */\nexport function syncClassName(node: Element, flags: VNodeFlags, a: string | null, b: string | null): void {\n    if (!b) {\n        b = \"\";\n    }\n    if (flags & VNodeFlags.SvgElement) {\n        node.setAttribute(\"class\", b);\n    } else {\n        node.className = b;\n    }\n}\n\n/**\n * Sync DOM styles.\n *\n * When styles are synced, and style from the old list is missing in the new one, its value will be reassigned with a\n * `null` value.\n *\n *    a: { backgroundColor: \"#333\", color: \"#fff\" }\n *    b: { backgroundColor: \"#333\" }\n *\n * In this example `color` style will receive a `null` value.\n *\n * DOM style syncing also supports `string` values, and they can be used interchangeably.\n *\n *    a: \"backgroundColor: #333; color: #fff\"\n *    b: { backgroundColor: \"#333\" }\n *\n * Implementation detail: Syncing algorithm has an optimization with an early detection of object shape changes.\n * Objects with static shape will make syncing algorithm slightly faster because it doesn't need to check which\n * properties didn't existed before, so it is possible to just use the static object shapes, and use `undefined` values\n * when you want to remove property and have the same object shape.\n *\n * @param node HTML or SVG Element.\n * @param a Old styles.\n * @param b New styles.\n */\nexport function syncStyle(\n    node: HTMLElement | SVGStylable,\n    a: CSSStyleProps | string | null,\n    b: CSSStyleProps | string | null,\n): void {\n    let i: number;\n    let keys: string[];\n    let key: string;\n    let style: CSSStyleDeclaration;\n\n    if (a === null) {\n        if (b !== null) {\n            // a is empty, insert all styles from b.\n            style = node.style;\n            if (typeof b === \"string\") {\n                style.cssText = b;\n            } else {\n                keys = Object.keys(b);\n                for (i = 0; i < keys.length; i++) {\n                    key = keys[i];\n                    (style as any)[key] = (b as any)[key];\n                }\n            }\n        }\n    } else if (b === null) {\n        // b is empty, remove all styles from a.\n        style = node.style;\n        if (typeof a === \"string\") {\n            style.cssText = \"\";\n        } else {\n            keys = Object.keys(a);\n            for (i = 0; i < keys.length; i++) {\n                (style as any)[keys[i]] = null;\n            }\n        }\n    } else {\n        style = node.style;\n        if (typeof b === \"string\") {\n            style.cssText = b;\n        } else {\n            if (typeof a === \"string\") {\n                style.cssText = \"\";\n                keys = Object.keys(b);\n                for (i = 0; i < keys.length; i++) {\n                    key = keys[i];\n                    (style as any)[key] = (b as any)[key];\n                }\n            } else {\n                let matchCount = 0;\n\n                keys = Object.keys(a);\n                for (i = 0; i < keys.length; i++) {\n                    key = keys[i];\n                    const bValue = (b as any)[key];\n\n                    if (bValue !== undefined) {\n                        const aValue = (a as any)[key];\n                        if (aValue !== bValue) {\n                            (style as any)[key] = bValue;\n                        }\n                        matchCount++;\n                    } else {\n                        (style as any)[key] = null;\n                    }\n                }\n\n                keys = Object.keys(b);\n                i = 0;\n                while (matchCount < keys.length && i < keys.length) {\n                    key = keys[i++];\n                    if (!a.hasOwnProperty(key)) {\n                        (style as any)[key] = (b as any)[key];\n                        matchCount++;\n                    }\n                }\n            }\n        }\n    }\n}\n\n/**\n * Set DOM property.\n *\n * @param node HTML or SVG Element.\n * @param isSVG node is an SVG Element.\n * @param key Attribute name.\n * @param value Attribute value.\n */\nfunction setDOMProperty(node: Element, flags: VNodeFlags, key: string, value?: any, prevValue?: any): void {\n    if (flags & VNodeFlags.MediaElement) {\n        /**\n         * HTMLMediaElements has an internal state with a `volume` property, so it should be checked before an\n         * assignment to prevent unnecessary events when `volume` value is the same as the `volume` in the internal\n         * state.\n         *\n         * In general we don't want to override behaviour of DOM Elements with an internal state. Assigning props\n         * to such elements should be treated as a one-time assignment, so it works almost like `volume` attribute,\n         * except when a new value is passed down, it can override previous value when it doesn't match the previous\n         * one. There is absolutely no reasons to overcomplicate such behaviour just to make it more beatiful like it\n         * is a declarative assignment and can't be changed, because in real applications, component that controls this\n         * element will always track changes to propagate them into its own state or an external state, and when it\n         * changes it will invalidate its representation, so everything stays in-sync.\n         */\n        if (key === \"volume\") {\n            if ((node as HTMLMediaElement).volume !== value) {\n                (node as HTMLMediaElement).volume = value === undefined ? null : value;\n            }\n            return;\n        }\n    }\n\n    if (value === undefined) {\n        /**\n         * Because there is no generic way to assign a default value for a property when it is removed, it is always\n         * removed with `removeAttribute` method.\n         */\n        node.removeAttribute(key);\n    } else {\n        if (key.length > 5) {\n            if (key.charCodeAt(0) === 120 &&\n                (key.charCodeAt(3) === 58 || key.charCodeAt(5) === 58)) { // 58 === \":\" \"xml:\", \"xlink:\"\n                if (key.charCodeAt(1) === 109 && key.charCodeAt(2) === 108) { // [109, 108] === \"ml\"\n                    /**\n                     * All attributes that starts with an \"xml:\" prefix will be assigned with XML namespace.\n                     */\n                    node.setAttributeNS(XML_NAMESPACE, key, value);\n                    return;\n                } else if (key.charCodeAt(1) === 108 &&\n                    key.charCodeAt(2) === 105 &&\n                    key.charCodeAt(3) === 110 &&\n                    key.charCodeAt(4) === 107) { // [108, 105, 110, 107] === \"link\"\n                    /**\n                     * All attributes that starts with an \"xlink:\" prefix will be assigned with XLINK namespace.\n                     */\n                    node.setAttributeNS(XLINK_NAMESPACE, key, value);\n                    return;\n                }\n            } else if (key.charCodeAt(4) === 45) { // 45 === \"-\" \"data-\", \"aria-\"\n                /**\n                 * Attributes that has \"-\" character at the 4th position will be assigned with a `setAttribute` method.\n                 * It should work with \"data-\" and \"aria-\" attributes. Otherwise just use property assignment instead\n                 * of `setAttribute`.\n                 */\n                node.setAttribute(key, value);\n                return;\n            }\n        }\n\n        (node as any)[key] = value;\n    }\n}\n\n/**\n * Sync DOM properties.\n *\n * Implementation detail: Syncing algorithm has an optimization with an early detection of object shape changes.\n * Objects with static shape will make syncing algorithm slightly faster because it doesn't need to check which\n * properties didn't existed before, so it is possible to just use the static object shapes, and use `undefined` values\n * when you want to remove property and have the same object shape.\n *\n * @param node HTML or SVG Element.\n * @param flags VNode flags.\n * @param a Old DOM properties.\n * @param b New DOM properties.\n */\nexport function syncDOMProps(\n    node: Element,\n    flags: VNodeFlags,\n    a: { [key: string]: any } | null,\n    b: { [key: string]: any } | null,\n): void {\n    let i: number;\n    let keys: string[];\n    let key: string;\n\n    if (a === null) {\n        if (b !== null) {\n            // a is empty, insert all attributes from b.\n            keys = Object.keys(b);\n            for (i = 0; i < keys.length; i++) {\n                key = keys[i];\n                setDOMProperty(node, flags, key, b[key]);\n            }\n        }\n    } else if (b === null) {\n        // b is empty, remove all attributes from a.\n        keys = Object.keys(a);\n        for (i = 0; i < keys.length; i++) {\n            setDOMProperty(node, flags, keys[i]);\n        }\n    } else {\n        let matchCount = 0;\n\n        // Remove and update attributes.\n        keys = Object.keys(a);\n        for (i = 0; i < keys.length; i++) {\n            key = keys[i];\n            const bValue = b[key];\n            if (bValue === undefined) {\n                setDOMProperty(node, flags, key);\n            } else {\n                const aValue = a[key];\n                if (aValue !== bValue) {\n                    setDOMProperty(node, flags, key, bValue, aValue);\n                }\n                matchCount++;\n            }\n        }\n\n        // Insert new attributes.\n        keys = Object.keys(b);\n        i = 0;\n        while (matchCount < keys.length && i < keys.length) {\n            key = keys[i++];\n            if (!a.hasOwnProperty(key)) {\n                setDOMProperty(node, flags, key, b[key]);\n                matchCount++;\n            }\n        }\n    }\n}\n","/**\n * Miscellaneous DOM related stuff.\n */\n\nexport const SVG_NAMESPACE = \"http://www.w3.org/2000/svg\";\nexport const XLINK_NAMESPACE = \"http://www.w3.org/1999/xlink\";\nexport const XML_NAMESPACE = \"http://www.w3.org/XML/1998/namespace\";\n\n/**\n * Traverses the DOM to the top and calculates DOM Node depth.\n *\n * @param node DOM Node.\n * @returns DOM Node depth.\n */\nexport function nodeDepth(node: Node | null): number {\n    let depth = 0;\n    while (node) {\n        depth++;\n        node = node.parentNode;\n    }\n    return depth;\n}\n","import { EventHandler, EventHandlerList } from \"./event_handler\";\nimport { setEventHandlerListToDOMNode } from \"./utils\";\n\n/**\n * Shortcut for Event Handler registration.\n *\n * @param handler Event Handler.\n */\nfunction registerEventHandler(handler: EventHandler<any, any>): void {\n    handler.dispatcher.registerHandler(handler.fn);\n}\n\n/**\n * Shortcut for Event Handler unregistration.\n *\n * @param handler Event Handler.\n */\nfunction unregisterEventHandler(handler: EventHandler<any, any>): void {\n    handler.dispatcher.unregisterHandler(handler.fn);\n}\n\n/**\n * Sync DOM events.\n *\n * Implementation detail: Syncing algorithm has an optimization with an early detection of object shape changes.\n * Objects with static shape will make syncing algorithm slightly faster because it doesn't need to check which\n * properties didn't existed before, so it is possible to just use the static object shapes, and use `undefined` values\n * when you want to remove property and have the same object shape.\n *\n * @param node HTML or SVG Element.\n * @param a Old events.\n * @param b New events.\n */\nexport function syncEvents(\n    node: Element,\n    a: EventHandlerList | null,\n    b: EventHandlerList | null,\n): void {\n    let i: number;\n    let keys: string[];\n    let key: string;\n\n    if (a === null) {\n        if (b !== null) {\n            // a is empty, register all events from b.\n            keys = Object.keys(b);\n            for (i = 0; i < keys.length; i++) {\n                registerEventHandler(b[keys[i]]);\n            }\n        }\n    } else if (b === null) {\n        // b is empty, remove all events from a.\n        keys = Object.keys(a);\n        for (i = 0; i < keys.length; i++) {\n            unregisterEventHandler(a[keys[i]]);\n        }\n    } else {\n        let matchCount = 0;\n\n        // Remove and update events.\n        keys = Object.keys(a);\n        for (i = 0; i < keys.length; i++) {\n            key = keys[i];\n            const aHandler = a[key];\n            const bHandler = b[key];\n            if (bHandler !== undefined) {\n                if (aHandler !== bHandler) {\n                    registerEventHandler(bHandler);\n                    unregisterEventHandler(aHandler);\n                }\n                matchCount++;\n            } else {\n                unregisterEventHandler(aHandler);\n            }\n        }\n\n        // Insert new events.\n        keys = Object.keys(b);\n        i = 0;\n        while (matchCount < keys.length && i < keys.length) {\n            key = keys[i++];\n            if (!a.hasOwnProperty(key)) {\n                registerEventHandler(b[key]);\n                matchCount++;\n            }\n        }\n    }\n\n    setEventHandlerListToDOMNode(node, b === null ? undefined : b);\n}\n","/**\n * DO NOT MOVE THIS FUNCTIONS TO SEPARATE MODULES!\n *\n * There are so many circular dependencies between functions in this module, so just leave it all here instead of\n * creating many circular dependencies between JS modules.\n *\n * Tags:\n *\n * #entry - Entry point, function that will be invoked just once when the reconciliation process is started with a root\n *   render, or when scheduler updates invalidated components. Entry point is a good place to inject tryCatch statements\n *   to improve stack trace messages etc.\n * #augment - Function that is used only for augmenting.\n * #component - Component related functions.\n */\n\nimport { DevModeFlags, DEV_MODE } from \"../common/dev_mode\";\nimport { injectScreenOfDeath } from \"../common/screen_of_death\";\nimport { SVG_NAMESPACE } from \"../common/dom\";\nimport {\n    setInitialNestingState, pushNestingState, restoreNestingState, checkNestingViolation, nestingStateAncestorFlags,\n    nestingStateParentTagName, AncestorFlags,\n} from \"../common/html_nesting_rules\";\nimport { VNodeFlags, ComponentFlags } from \"./flags\";\nimport { VNode } from \"./vnode\";\nimport { cloneVNode, $t } from \"./vnode_builder\";\nimport { ComponentClass, ComponentFunction, Component } from \"./component\";\nimport { stackTracePushComponent, stackTracePopComponent, stackTraceReset, stackTraceAugment } from \"./stack_trace\";\nimport { Context } from \"./context\";\nimport { syncDOMProps, syncClassName, syncStyle } from \"./sync_dom\";\nimport { syncEvents } from \"../events/sync_events\";\n\n/**\n * Render VNode entry point tryCatch wrapper.\n *\n * #entry\n *\n * @param container Container Node.\n * @param refChild Reference to the next Node, when it is `null` child will be inserted at the end.\n * @param vnode VNode.\n * @param context Current context.\n * @param owner Owning component.\n * @returns Rendered DOM Node.\n */\nexport function renderVNode(\n    parent: Node,\n    refChild: Node | null,\n    vnode: VNode<any>,\n    context: Context,\n    owner?: Component<any>,\n): Node {\n    if (__IVI_DEV__) {\n        if (!(DEV_MODE & DevModeFlags.DisableNestingValidation)) {\n            if ((parent as Element).tagName) {\n                setInitialNestingState((parent as Element).tagName.toLowerCase(), 0);\n            } else {\n                setInitialNestingState(\"\", 0);\n            }\n        }\n\n        if (!(DEV_MODE & (DevModeFlags.DisableStackTraceAugmentation | DevModeFlags.DisableScreenOfDeath))) {\n            try {\n                return _renderVNode(parent, refChild, vnode, context, owner);\n            } catch (e) {\n                if (!(DEV_MODE & DevModeFlags.DisableStackTraceAugmentation)) {\n                    stackTraceAugment(e);\n                }\n                if (!(DEV_MODE & DevModeFlags.DisableScreenOfDeath)) {\n                    injectScreenOfDeath(`ivi Error: ${e.message}`, e.stack);\n                }\n                if (!(DEV_MODE & DevModeFlags.DisableStackTraceAugmentation)) {\n                    stackTraceReset();\n                }\n                throw e;\n            }\n        }\n    }\n    return _renderVNode(parent, refChild, vnode, context, owner);\n}\n\n/**\n * Render VNode entry point. Renders VNode into container and invokes `didMount` lifecycle methods after VNode is\n * inserted into container.\n *\n * #entry\n *\n * @param container Container Node.\n * @param refChild Reference to the next Node, when it is `null` child will be inserted at the end.\n * @param vnode VNode.\n * @param context Current context.\n * @param owner Owning component.\n * @returns Rendered DOM Node.\n */\nfunction _renderVNode(\n    container: Node,\n    refChild: Node | null,\n    vnode: VNode<any>,\n    context: Context,\n    owner?: Component<any>,\n): Node {\n    return vNodeRenderInto(container, refChild, vnode, context, owner);\n}\n\n/**\n * Sync VNode entry point tryCatch wrapper.\n *\n * @param parent Parent node.\n * @param a Old VNode.\n * @param b New VNode.\n * @param context Current context.\n * @param owner Owning component.\n * @returns Synced DOM Node. When VNodes are synced and they aren't compatible, old DOM Node will be replaced with a new\n * DOM Node.\n */\nexport function syncVNode(\n    parent: Node,\n    a: VNode<any>,\n    b: VNode<any>,\n    context: Context,\n    owner?: Component<any>,\n): Node {\n    if (__IVI_DEV__) {\n        if (!(DEV_MODE & DevModeFlags.DisableNestingValidation)) {\n            if ((parent as Element).tagName) {\n                setInitialNestingState((parent as Element).tagName.toLowerCase(), 0);\n            } else {\n                setInitialNestingState(\"\", 0);\n            }\n        }\n\n        if (!(DEV_MODE & (DevModeFlags.DisableStackTraceAugmentation | DevModeFlags.DisableScreenOfDeath))) {\n            try {\n                return _syncVNode(parent, a, b, context, owner);\n            } catch (e) {\n                if (!(DEV_MODE & DevModeFlags.DisableStackTraceAugmentation)) {\n                    stackTraceAugment(e);\n                }\n                if (!(DEV_MODE & DevModeFlags.DisableScreenOfDeath)) {\n                    injectScreenOfDeath(`ivi Error: ${e.message}`, e.stack);\n                }\n                if (!(DEV_MODE & DevModeFlags.DisableStackTraceAugmentation)) {\n                    stackTraceReset();\n                }\n                throw e;\n            }\n        }\n    }\n    return _syncVNode(parent, a, b, context, owner);\n}\n\n/**\n * Sync VNode entry point. Sync VNode with a new one or replace when they aren't compatible.\n *\n * #entry\n *\n * @param parent Parent node.\n * @param a Old VNode.\n * @param b New VNode.\n * @param context Current context.\n * @param owner Owning component.\n * @returns Synced DOM Node. When VNodes are synced and they aren't compatible, old DOM Node will be replaced with a new\n * DOM Node.\n */\nfunction _syncVNode(\n    parent: Node,\n    a: VNode<any>,\n    b: VNode<any>,\n    context: Context,\n    owner?: Component<any>,\n): Node {\n    return vNodeSyncOrReplace(parent, a, b, context, owner);\n}\n\n/**\n * Remove VNode entry point tryCatch wrapper.\n *\n * #entry\n *\n * @param parent Parent DOM node.\n * @param node VNode element to remove.\n */\nexport function removeVNode(parent: Node, node: VNode<any>): void {\n    if (__IVI_DEV__) {\n        if (!(DEV_MODE & DevModeFlags.DisableNestingValidation)) {\n            if ((parent as Element).tagName) {\n                setInitialNestingState((parent as Element).tagName.toLowerCase(), 0);\n            } else {\n                setInitialNestingState(\"\", 0);\n            }\n        }\n\n        if (!(DEV_MODE & (DevModeFlags.DisableStackTraceAugmentation | DevModeFlags.DisableScreenOfDeath))) {\n            try {\n                _removeVNode(parent, node);\n                return;\n            } catch (e) {\n                if (!(DEV_MODE & DevModeFlags.DisableStackTraceAugmentation)) {\n                    stackTraceAugment(e);\n                }\n                if (!(DEV_MODE & DevModeFlags.DisableScreenOfDeath)) {\n                    injectScreenOfDeath(`ivi Error: ${e.message}`, e.stack);\n                }\n                if (!(DEV_MODE & DevModeFlags.DisableStackTraceAugmentation)) {\n                    stackTraceReset();\n                }\n                throw e;\n            }\n        }\n    }\n    _removeVNode(parent, node);\n}\n\n/**\n * Remove VNode entry point.\n *\n * #entry\n *\n * @param parent Parent DOM node.\n * @param node VNode element to remove.\n */\nfunction _removeVNode(parent: Node, node: VNode<any>): void {\n    parent.removeChild(node._dom!);\n    vNodeUnmount(node);\n}\n\n/**\n * Augment entry point tryCatch wrapper.\n *\n * #entry\n * #augment\n *\n * TODO: check mounting logic\n *\n * @param parent Parent DOM Node.\n * @param node DOM Node.\n * @param vnode Virtual DOM Node.\n * @param context Context.\n * @param owner Owner.\n */\nexport function augmentVNode(\n    parent: Node,\n    node: Node | null,\n    vnode: VNode<any>,\n    context: Context,\n    owner?: Component<any>,\n): void {\n    if (__IVI_DEV__) {\n        if (!(DEV_MODE & DevModeFlags.DisableNestingValidation)) {\n            if ((parent as Element).tagName) {\n                setInitialNestingState((parent as Element).tagName.toLowerCase(), 0);\n            } else {\n                setInitialNestingState(\"\", 0);\n            }\n        }\n\n        if (!(DEV_MODE & (DevModeFlags.DisableStackTraceAugmentation | DevModeFlags.DisableScreenOfDeath))) {\n            try {\n                _augmentVNode(parent, node, vnode, context, owner);\n                return;\n            } catch (e) {\n                if (!(DEV_MODE & DevModeFlags.DisableStackTraceAugmentation)) {\n                    stackTraceAugment(e);\n                }\n                if (!(DEV_MODE & DevModeFlags.DisableScreenOfDeath)) {\n                    injectScreenOfDeath(`ivi Error: ${e.message}`, e.stack);\n                }\n                if (!(DEV_MODE & DevModeFlags.DisableStackTraceAugmentation)) {\n                    stackTraceReset();\n                }\n                throw e;\n            }\n        }\n    }\n    _augmentVNode(parent, node, vnode, context, owner);\n}\n\n/**\n * Augment entry point. Augments DOM tree with a Virtual DOM tree and performs mounting.\n *\n * #entry\n * #augment\n *\n * @param parent Parent DOM Node.\n * @param node DOM Node.\n * @param vnode Virtual DOM Node.\n * @param context Context.\n * @param owner Owner.\n */\nfunction _augmentVNode(\n    parent: Node,\n    node: Node | null,\n    vnode: VNode<any>,\n    context: Context,\n    owner?: Component<any>,\n): void {\n    vNodeAugment(parent, node, vnode, context, owner);\n}\n\n/**\n * Update Component entry point tryCatch wrapper.\n *\n * #entry\n * #component\n *\n * @param component Component to update.\n * @returns DOM Node.\n */\nexport function updateComponent<P>(component: Component<P>): Node {\n    if (__IVI_DEV__) {\n        if (!(DEV_MODE & (DevModeFlags.DisableStackTraceAugmentation | DevModeFlags.DisableScreenOfDeath))) {\n            try {\n                stackTracePushComponent((component as Object).constructor as ComponentClass<any>);\n                const ret = _updateComponent(component);\n                stackTracePopComponent();\n                return ret;\n            } catch (e) {\n                if (!(DEV_MODE & DevModeFlags.DisableStackTraceAugmentation)) {\n                    stackTraceAugment(e);\n                }\n                if (!(DEV_MODE & DevModeFlags.DisableScreenOfDeath)) {\n                    injectScreenOfDeath(`ivi Error: ${e.message}`, e.stack);\n                }\n                if (!(DEV_MODE & DevModeFlags.DisableStackTraceAugmentation)) {\n                    stackTraceReset();\n                }\n                throw e;\n            }\n        }\n    }\n    return _updateComponent(component);\n}\n\n/**\n * Update Component.\n *\n * #entry\n *\n * @param component Component to update.\n * @returns DOM Node.\n */\nfunction _updateComponent<P>(component: Component<P>): Node {\n    const flags = component.flags;\n    let ref = component._rootDOMNode!;\n\n    if ((flags & ComponentFlags.Mounted) && (flags & ComponentFlags.Dirty)) {\n        const oldRoot = component.root!;\n        if (flags & ComponentFlags.DirtyContext) {\n            componentUpdateContext(component);\n        }\n\n        component.willUpdate();\n\n        if (flags & (ComponentFlags.DirtyProps | ComponentFlags.DirtyState | ComponentFlags.UsingContext)) {\n            if (__IVI_DEV__) {\n                if (!(DEV_MODE & DevModeFlags.DisableNestingValidation)) {\n                    if ((component._parentDOMNode as Element).tagName) {\n                        setInitialNestingState((component._parentDOMNode as Element).tagName.toLowerCase(),\n                            component._ancestorFlags);\n                    } else {\n                        setInitialNestingState(\"\", component._ancestorFlags);\n                    }\n                }\n            }\n            const parentNode = component._parentDOMNode;\n            const newRoot = componentClassRender(component);\n            ref = component._rootDOMNode = vNodeSyncOrReplace(parentNode!, oldRoot, newRoot, component._context);\n            component.flags &= ~(ComponentFlags.Dirty | ComponentFlags.InUpdateQueue);\n        } else if (oldRoot) {\n            vNodePropagateNewContext(component._parentDOMNode!, oldRoot, component._context, component);\n        }\n\n        component.didUpdate();\n    }\n\n    return ref;\n}\n\n/**\n * Update a component function.\n *\n * #component\n *\n * @param parent Parent DOM Node.\n * @param a Old VNode.\n * @param b New VNode.\n * @param context Current Context.\n * @param owner Owner.\n * @returns DOM Node.\n */\nfunction _updateComponentFunction(\n    parent: Node,\n    a: VNode<any>,\n    b: VNode<any>,\n    context: Context,\n    owner?: Component<any>,\n): Node {\n    let ref: Node = a._dom!;\n    const fn = b._tag as ComponentFunction<any>;\n\n    if (a === b || !fn.isPropsChanged || fn.isPropsChanged(a._props, b._props)) {\n        const oldRoot = a._children as VNode<any>;\n        const newRoot = b._children = componentFunctionRender(fn, b._props, context);\n        ref = vNodeSyncOrReplace(parent, oldRoot, newRoot, context, owner);\n    } else {\n        b._children = a._children;\n    }\n\n    b._dom = ref;\n    return ref;\n}\n\n/**\n * Recursively mount all nodes.\n *\n * @param vnode VNode.\n */\nfunction vNodeMount(vnode: VNode<any>): void {\n    const flags = vnode._flags;\n\n    if (flags & VNodeFlags.Component) {\n        if (__IVI_DEV__) {\n            if (!(DEV_MODE & DevModeFlags.DisableStackTraceAugmentation)) {\n                stackTracePushComponent(vnode._tag as ComponentClass<any> | ComponentFunction<any>);\n            }\n        }\n        if (flags & VNodeFlags.ComponentClass) {\n            const component = vnode._children as Component<any>;\n\n            if (__IVI_DEV__) {\n                if (component.flags & ComponentFlags.Mounted) {\n                    throw new Error(\"Failed to mount Component: component is already mounted.\");\n                }\n            }\n\n            component.flags |= ComponentFlags.Mounted;\n            component.didMount();\n            vNodeMount(component.root!);\n        } else { // (flags & VNodeFlags.ComponentFunction)\n            vNodeMount(vnode._children as VNode<any>);\n        }\n        if (__IVI_DEV__) {\n            if (!(DEV_MODE & DevModeFlags.DisableStackTraceAugmentation)) {\n                stackTracePopComponent();\n            }\n        }\n    } else if (!(flags & (VNodeFlags.InputElement | VNodeFlags.MediaElement))) {\n        let children = vnode._children;\n        if (children !== null && (flags & (VNodeFlags.ChildrenVNode | VNodeFlags.ChildrenArray))) {\n            if (flags & VNodeFlags.ChildrenArray) {\n                children = children as VNode<any>[];\n                for (let i = 0; i < children.length; i++) {\n                    vNodeMount(children[i]);\n                }\n            } else {\n                vNodeMount(children as VNode<any>);\n            }\n        }\n    }\n\n    if (vnode._ref) {\n        vnode._ref((flags & VNodeFlags.Component) ? vnode._children as Component<any> : vnode._dom);\n    }\n}\n\n/**\n * Recursively unmount all nodes.\n *\n * @param vnode VNode.\n */\nfunction vNodeUnmount(vnode: VNode<any>): void {\n    const flags = vnode._flags;\n    if (flags & VNodeFlags.Component) {\n        if (__IVI_DEV__) {\n            if (!(DEV_MODE & DevModeFlags.DisableStackTraceAugmentation)) {\n                stackTracePushComponent(vnode._tag as ComponentClass<any> | ComponentFunction<any>);\n            }\n        }\n        if (flags & VNodeFlags.ComponentClass) {\n            const component = vnode._children as Component<any>;\n\n            if (__IVI_DEV__) {\n                if (!(component.flags & ComponentFlags.Mounted)) {\n                    throw new Error(\"Failed to unmount Component: component is already unmounted.\");\n                }\n            }\n            vNodeUnmount(component.root!);\n            component.flags &= ~(ComponentFlags.Mounted | ComponentFlags.UpdateEachFrame);\n            component.didUnmount();\n        } else { // (flags & VNodeFlags.ComponentFunction)\n            vNodeUnmount(vnode._children as VNode<any>);\n        }\n        if (__IVI_DEV__) {\n            if (!(DEV_MODE & DevModeFlags.DisableStackTraceAugmentation)) {\n                stackTracePopComponent();\n            }\n        }\n    } else if (flags & VNodeFlags.Element) {\n        if (!(flags & (VNodeFlags.InputElement | VNodeFlags.MediaElement))) {\n            let children = vnode._children;\n            if (children !== null && (flags & (VNodeFlags.ChildrenVNode | VNodeFlags.ChildrenArray))) {\n                if (flags & VNodeFlags.ChildrenArray) {\n                    children = children as VNode<any>[];\n                    for (let i = 0; i < children.length; i++) {\n                        vNodeUnmount(children[i]);\n                    }\n                } else {\n                    vNodeUnmount(children as VNode<any>);\n                }\n            }\n        }\n        if (vnode._events) {\n            syncEvents(vnode._dom as Element, vnode._events, null);\n        }\n    }\n\n    if (vnode._ref) {\n        vnode._ref(null);\n    }\n}\n\n/**\n * Unmount all nodes and its subtrees.\n *\n * @param vnodes Array of VNodes.\n */\nfunction vNodeUnmountAll(vnodes: VNode<any>[]): void {\n    for (let i = 0; i < vnodes.length; i++) {\n        vNodeUnmount(vnodes[i]);\n    }\n}\n\n/**\n * Recursively propagate new context.\n *\n * @param vnode VNode.\n * @param context New context.\n */\nfunction vNodePropagateNewContext(parent: Node, vnode: VNode<any>, context: Context, owner?: Component<any>): void {\n    const flags = vnode._flags;\n    if (flags & VNodeFlags.Component) {\n        if (__IVI_DEV__) {\n            if (!(DEV_MODE & DevModeFlags.DisableStackTraceAugmentation)) {\n                stackTracePushComponent(vnode._tag as ComponentClass<any> | ComponentFunction<any>);\n            }\n        }\n        if (flags & VNodeFlags.ComponentClass) {\n            const component = vnode._children as Component<any>;\n            componentUpdateParentContext(component, context);\n            _updateComponent(component);\n        } else { // (flags & VNodeFlags.ComponentFunction)\n            const fn = vnode._tag as ComponentFunction<any>;\n            // Optimization that checks if function is using context parameter. When function doesn't use context, it\n            // means that we can ignore re-renders when context is changed, and just propagate a new context through\n            // existing subtree.\n            if (fn.length < 2) {\n                if (vnode._children) {\n                    vNodePropagateNewContext(parent, vnode._children as VNode<any>, context, owner);\n                }\n            } else {\n                _updateComponentFunction(parent, vnode._children as VNode<any>, vnode._children as VNode<any>, context,\n                    owner);\n            }\n        }\n        if (__IVI_DEV__) {\n            if (!(DEV_MODE & DevModeFlags.DisableStackTraceAugmentation)) {\n                stackTracePopComponent();\n            }\n        }\n    } else if (!(flags & (VNodeFlags.InputElement | VNodeFlags.MediaElement))) {\n        let children = vnode._children;\n        if (children !== null && (flags & (VNodeFlags.ChildrenVNode | VNodeFlags.ChildrenArray))) {\n            if (flags & VNodeFlags.ChildrenArray) {\n                children = children as VNode<any>[];\n                for (let i = 0; i < children.length; i++) {\n                    vNodePropagateNewContext(parent, children[i], context, owner);\n                }\n            } else {\n                vNodePropagateNewContext(parent, children as VNode<any>, context, owner);\n            }\n        }\n    }\n}\n\n/**\n * Move node.\n *\n * @param parent Parent DOM node.\n * @param node VNode element to move.\n * @param nextRef Reference to the next node, if it is null, node will be moved to the end.\n */\nfunction vNodeMoveChild(parent: Node, node: VNode<any>, nextRef: Node | null): void {\n    parent.insertBefore(node._dom!, nextRef!);\n}\n\n/**\n * Remove all children.\n *\n * `didUnmount` lifecycle methods will be invoked in all children and their subtrees.\n *\n * @param parent Parent DOM node.\n * @param nodes Arrays of VNodes to remove.\n */\nfunction vNodeRemoveAllChildren(parent: Node, nodes: VNode<any>[]): void {\n    parent.textContent = \"\";\n    vNodeUnmountAll(nodes);\n}\n\n/**\n * Remove child.\n *\n * `didUnmount` lifecycle methods will be invoked in removed node and its subtree.\n *\n * @param parent Parent DOM node.\n * @param node VNode element to remove.\n */\nfunction vNodeRemoveChild(parent: Node, node: VNode<any>): void {\n    parent.removeChild(node._dom!);\n    vNodeUnmount(node);\n}\n\n/**\n * Assign a new parent context to a component.\n *\n * Reference equality is used to check if context is changed, all context objects should be immutable.\n *\n * #component\n *\n * @param component Component.\n * @param newContext New Context to assign.\n */\nfunction componentUpdateParentContext<P>(component: Component<P>, newParentContext: Context): void {\n    if (component._parentContext !== newParentContext) {\n        component.flags |= ComponentFlags.DirtyContext;\n        const oldContext = component._parentContext;\n        component._parentContext = newParentContext;\n        component.didReceiveNewContext(oldContext, newParentContext);\n    }\n}\n\n/**\n * Update current context of a component.\n *\n * #component\n *\n * @param component Component.\n */\nfunction componentUpdateContext<P>(component: Component<P>): void {\n    component.flags &= ~(ComponentFlags.CheckUsingProps | ComponentFlags.ContextUsingProps);\n    const contextData = component.updateContext();\n    component.flags |= (component.flags & ComponentFlags.CheckUsingProps) << 1;\n    const newContext = contextData ? new Context(contextData, component._parentContext) : component._parentContext;\n    component._context = newContext;\n}\n\n/**\n * Assign a new props to a component.\n *\n * #component\n *\n * @param component Component.\n * @param newProps New props to assign.\n */\nfunction componentUpdateProps<P>(component: Component<P>, newProps: P): void {\n    const oldProps = component._props;\n    if (component.isPropsChanged(oldProps, newProps)) {\n        component.flags |= ComponentFlags.DirtyProps;\n\n        component._props = newProps;\n\n        // There is no reason to call `didReceivewNewProps` when props aren't changed, even when they are reassigned\n        // later to reduce memory usage.\n        component.didReceiveNewProps(oldProps, newProps);\n        if (component.flags & ComponentFlags.ContextUsingProps) {\n            component.flags |= ComponentFlags.DirtyContext;\n        }\n    } else {\n        // Reassign props even when they aren't changed to reduce overall memory usage.\n        //\n        // New value always stays alive because it is referenced from virtual dom tree, so instead of keeping in memory\n        // two values even when they are the same, we just always reassign it to the new value.\n        component._props = newProps;\n    }\n}\n\n/**\n * Render a component class instance and return root VNode.\n *\n * #component\n *\n * @param component Component.\n * @returns Root VNode.\n */\nfunction componentClassRender<P>(component: Component<P>): VNode<any> {\n    component.flags &= ~(ComponentFlags.CheckUsingContext | ComponentFlags.UsingContext);\n    const root = component.root = component.render() || $t(\"\");\n    component.flags |= (component.flags & ComponentFlags.CheckUsingContext) << 1;\n    return root;\n}\n\n/**\n * Render a component function instance and return root VNode.\n *\n * #component\n *\n * @param component Component function.\n * @param props Props.\n * @param context Context.\n * @returns Root VNode.\n */\nfunction componentFunctionRender<P>(component: ComponentFunction<P>, props: P, context?: Context): VNode<any> {\n    return component(props, context) || $t(\"\");\n}\n\n/**\n * Set value for HTMLInputElement.\n *\n * When value has a string type it is assigned to `value` property, otherwise it is assigned to `checked` property.\n *\n * @param input HTMLInputElement.\n * @param value Value.\n */\nfunction setHTMLInputValue(input: HTMLInputElement, value: string | boolean | null): void {\n    if (typeof value === \"string\") {\n        input.value = value;\n    } else {\n        input.checked = value as boolean;\n    }\n}\n\n/**\n * Render VNode.\n *\n * @param parent Parent DOM Node.\n * @param vnode VNode to render.\n * @param context Current context.\n * @param owner Owning component.\n * @returns Rendered DOM Node.\n */\nfunction vNodeRender(parent: Node, vnode: VNode<any>, context: Context, owner?: Component<any>): Node {\n    // if VNode already has a reference to a DOM Node, perform a deep clone of vnodes\n    if (vnode._dom) {\n        vnode = cloneVNode(vnode);\n    }\n\n    const flags = vnode._flags;\n    let ref: Node | undefined;\n    let i: number;\n\n    if (flags & (VNodeFlags.Text | VNodeFlags.Element)) {\n        // Push nesting state and check for nesting violation.\n        let _prevNestingStateParentTagName: string | undefined;\n        let _prevNestingStateAncestorFlags: AncestorFlags | undefined;\n        if (__IVI_DEV__) {\n            if (!(DEV_MODE & DevModeFlags.DisableNestingValidation)) {\n                _prevNestingStateParentTagName = nestingStateParentTagName();\n                _prevNestingStateAncestorFlags = nestingStateAncestorFlags();\n                pushNestingState((flags & VNodeFlags.Text) ? \"$t\" : vnode._tag as string);\n                checkNestingViolation();\n            }\n        }\n        if (flags & VNodeFlags.Text) {\n            ref = document.createTextNode(vnode._children as string);\n        } else { // (flags & VNodeFlags.Element)\n            if (flags & VNodeFlags.InputElement) {\n                if (flags & VNodeFlags.TextAreaElement) {\n                    ref = document.createElement(\"textarea\");\n                } else {\n                    ref = document.createElement(\"input\");\n                    (ref as HTMLInputElement).type = vnode._tag as string;\n                }\n            } else if (flags & VNodeFlags.SvgElement) {\n                ref = document.createElementNS(SVG_NAMESPACE, vnode._tag as string);\n            } else {\n                ref = document.createElement(vnode._tag as string);\n            }\n\n            if (vnode._props) {\n                syncDOMProps(ref as Element, flags, null, vnode._props);\n            }\n            if (vnode._className !== null) {\n                syncClassName(ref as Element, flags, null, vnode._className);\n            }\n            if (vnode._style !== null) {\n                syncStyle(ref as HTMLElement, null, vnode._style);\n            }\n            if (vnode._events) {\n                syncEvents(ref as Element, null, vnode._events);\n            }\n\n            let children = vnode._children;\n            if (children !== null) {\n                if (flags & (VNodeFlags.ChildrenBasic | VNodeFlags.ChildrenArray)) {\n                    if (flags & VNodeFlags.ChildrenBasic) {\n                        ref.textContent = children as string;\n                    } else {\n                        children = children as VNode<any>[];\n                        for (i = 0; i < children.length; i++) {\n                            ref.insertBefore(vNodeRender(ref, children[i], context, owner), null);\n                        }\n                    }\n                } else if (flags & VNodeFlags.ChildrenVNode) {\n                    ref.insertBefore(vNodeRender(ref, children as VNode<any>, context, owner), null);\n                } else if (flags & VNodeFlags.InputElement) {\n                    setHTMLInputValue(ref as HTMLInputElement, children as string | boolean);\n                } else { // (flags & VNodeFlags.UnsafeHTML)\n                    (ref as Element).innerHTML = children as string;\n                }\n            }\n        }\n        // Restore nesting state.\n        if (__IVI_DEV__) {\n            if (!(DEV_MODE & DevModeFlags.DisableNestingValidation)) {\n                restoreNestingState(_prevNestingStateParentTagName, _prevNestingStateAncestorFlags!);\n            }\n        }\n    } else { // (flags & VNodeFlags.Component)\n        if (__IVI_DEV__) {\n            if (!(DEV_MODE & DevModeFlags.DisableStackTraceAugmentation)) {\n                stackTracePushComponent(vnode._tag as ComponentClass<any> | ComponentFunction<any>);\n            }\n        }\n\n        if (flags & VNodeFlags.ComponentClass) {\n            const component = vnode._children = new (vnode._tag as ComponentClass<any>)(vnode._props, context, owner);\n            if (__IVI_DEV__) {\n                if (!(DEV_MODE & DevModeFlags.DisableNestingValidation)) {\n                    component._ancestorFlags = nestingStateAncestorFlags();\n                }\n            }\n            component._parentDOMNode = parent;\n            componentUpdateContext(component);\n            const root = componentClassRender(component);\n            ref = component._rootDOMNode = vNodeRender(parent, root, component._context, component);\n        } else { // (flags & VNodeFlags.ComponentFunction)\n            const root = vnode._children =\n                componentFunctionRender(vnode._tag as ComponentFunction<any>, vnode._props, context);\n            ref = vnode._dom = vNodeRender(parent, root, context, owner);\n        }\n\n        if (__IVI_DEV__) {\n            if (!(DEV_MODE & DevModeFlags.DisableStackTraceAugmentation)) {\n                stackTracePopComponent();\n            }\n        }\n    }\n\n    vnode._dom = ref;\n\n    return ref;\n}\n\n/**\n * Render VNode into container and invoke `didMount` lifecycle methods after VNode is inserted into container.\n *\n * It is important that `didMount` methods are invoked only after DOM Nodes have been inserted into container, so it\n * goes twice through the entire vnode tree, first time when everything is rendered and the second time when `didMount`\n * methods are invoked.\n *\n * @param container Container Node.\n * @param refChild Reference to the next Node, when it is `null` child will be inserted at the end.\n * @param vnode VNode.\n * @param context Current context.\n * @param owner Owning component.\n * @returns Rendered DOM Node.\n */\nfunction vNodeRenderInto(\n    container: Node,\n    refChild: Node | null,\n    vnode: VNode<any>,\n    context: Context,\n    owner?: Component<any>,\n): Node {\n    const ref = container.insertBefore(vNodeRender(container, vnode, context, owner), refChild);\n    vNodeMount(vnode);\n    return ref;\n}\n\n/**\n * Get non-comment DOM Node. This function removes all comment DOM Nodes when searching for non-comment nodes.\n *\n * #augment\n *\n * @param parent Parent DOM Node.\n * @param node DOM Node.\n * @returns Non-comment DOM Node.\n */\nfunction getNonCommentNode(parent: Node, node: Node | null): Node | null {\n    while (node && node.nodeType === 8) {\n        const next = node.nextSibling;\n        parent.removeChild(node);\n        node = next;\n    }\n    return node;\n}\n\n/**\n * Augment DOM Node with a Virtual DOM Node.\n *\n * #augment\n *\n * @param parent Parent DOM Node.\n * @param node DOM Node.\n * @param vnode Virtual DOM Node.\n * @param context Context.\n * @param owner Owner.\n */\nfunction vNodeAugment(\n    parent: Node,\n    node: Node | null,\n    vnode: VNode<any>,\n    context: Context,\n    owner?: Component<any>,\n): void {\n    // if VNode already has a reference to a DOM Node, perform a deep clone of vnodes\n    if (vnode._dom) {\n        vnode = cloneVNode(vnode);\n    }\n\n    if (node) {\n        const flags = vnode._flags;\n\n        if (flags & (VNodeFlags.Element | VNodeFlags.Text)) {\n            if (flags & VNodeFlags.Element) {\n                if (vnode._events) {\n                    syncEvents(node as Element, null, vnode._events);\n                }\n\n                if (vnode._children !== null) {\n                    if (flags & (VNodeFlags.ChildrenArray | VNodeFlags.ChildrenVNode)) {\n                        let domChild = getNonCommentNode(node, node.firstChild);\n                        if (flags & VNodeFlags.ChildrenArray) {\n                            const children = vnode._children as VNode<any>[];\n                            for (let i = 0; i < children.length; i++) {\n                                vNodeAugment(node, domChild, children[i], context, owner);\n                                domChild = getNonCommentNode(node, domChild!.nextSibling);\n                            }\n                        } else {\n                            vNodeAugment(node, domChild, vnode._children as VNode<any>, context, owner);\n                        }\n                    } else if (flags & VNodeFlags.InputElement) {\n                        setHTMLInputValue(node as HTMLInputElement, vnode._children as string | boolean);\n                    }\n                }\n            }\n        } else { // (flags & VNodeFlags.Component)\n            if (__IVI_DEV__) {\n                if (!(DEV_MODE & DevModeFlags.DisableStackTraceAugmentation)) {\n                    stackTracePushComponent(vnode._tag as ComponentClass<any> | ComponentFunction<any>);\n                }\n            }\n\n            if (flags & VNodeFlags.ComponentClass) {\n                const component = vnode._children =\n                    new (vnode._tag as ComponentClass<any>)(vnode._props, context, owner);\n\n                if (__IVI_DEV__) {\n                    if (!(DEV_MODE & DevModeFlags.DisableNestingValidation)) {\n                        component._ancestorFlags = nestingStateAncestorFlags();\n                    }\n                }\n\n                component._parentDOMNode = parent;\n                component._rootDOMNode = node;\n                componentUpdateContext(component);\n                const root = componentClassRender(component);\n                vNodeAugment(parent, node, root, component._context, component);\n            } else {\n                const root = vnode._children =\n                    componentFunctionRender(vnode._tag as ComponentFunction<any>, vnode._props, context);\n                vNodeAugment(parent, node, root, context, owner);\n            }\n\n            if (__IVI_DEV__) {\n                if (!(DEV_MODE & DevModeFlags.DisableStackTraceAugmentation)) {\n                    stackTracePopComponent();\n                }\n            }\n        }\n    } else {\n        node = vNodeRenderInto(parent, null, vnode, context, owner);\n    }\n\n    vnode._dom = node;\n}\n\n/**\n * Check if two nodes can be synced.\n *\n * Two nodes can be synced when their flags and tags are identical.\n *\n * @param a Old VNode.\n * @param b New VNode.\n * @return true if nodes can be synced.\n */\nfunction vNodeCanSync(a: VNode<any>, b: VNode<any>): boolean {\n    return ((a._flags & VNodeFlags.Syncable) === (b._flags & VNodeFlags.Syncable) &&\n        a._tag === b._tag &&\n        a._key === b._key);\n}\n\n/**\n * Sync two VNodes.\n *\n * When node `a` is synced with node `b`, `a` node should be considered as destroyed, and any access to it after sync\n * is an undefined behavior.\n *\n * @param parent Parent node.\n * @param a Old VNode.\n * @param b New VNode.\n * @param context Current context.\n * @param owner Owning component.\n * @returns Synced DOM Node. When VNodes are synced and they aren't compatible, old DOM Node will be replaced with a new\n * DOM Node.\n */\nfunction vNodeSync(parent: Node, a: VNode<any>, b: VNode<any>, context: Context, owner?: Component<any>): Node {\n    if (a === b) {\n        return b._dom!;\n    }\n\n    if (b._dom) {\n        b = cloneVNode(b);\n    }\n    const flags = a._flags;\n    let ref: Node | undefined;\n\n    if (flags & (VNodeFlags.Text | VNodeFlags.Element)) {\n        ref = b._dom = a._dom!;\n\n        if (flags & VNodeFlags.Text) {\n            if (a._children !== b._children) {\n                ref.nodeValue = b._children as string;\n            }\n        } else { // (flags & VNodeFlags.Element)\n            if (a._props !== b._props) {\n                syncDOMProps(ref as Element, flags, a._props, b._props);\n            }\n            if (a._className !== b._className) {\n                syncClassName(ref as Element, flags, a._className, b._className);\n            }\n            if (a._style !== b._style) {\n                syncStyle(ref as HTMLElement, a._style, b._style);\n            }\n            if (a._events !== b._events) {\n                syncEvents(ref as HTMLElement, a._events, b._events);\n            }\n\n            if (a._children !== b._children) {\n                syncChildren(\n                    a._dom!,\n                    a._flags,\n                    b._flags,\n                    a._children as VNode<any>[] | VNode<any> | string | number | boolean,\n                    b._children as VNode<any>[] | VNode<any> | string | number | boolean,\n                    context,\n                    owner);\n            }\n        }\n    } else { // (flags & VNodeFlags.Component)\n        if (__IVI_DEV__) {\n            if (!(DEV_MODE & DevModeFlags.DisableStackTraceAugmentation)) {\n                stackTracePushComponent(b._tag as ComponentClass<any> | ComponentFunction<any>);\n            }\n        }\n        if (flags & VNodeFlags.ComponentClass) {\n            const component = b._children = a._children as Component<any>;\n            componentUpdateProps(component, b._props);\n            componentUpdateParentContext(component, context);\n            ref = b._dom = _updateComponent(component);\n        } else { // (flags & VNodeFlags.ComponentFunction)\n            ref = b._dom = _updateComponentFunction(parent, a, b, context, owner);\n        }\n        if (__IVI_DEV__) {\n            if (!(DEV_MODE & DevModeFlags.DisableStackTraceAugmentation)) {\n                stackTracePopComponent();\n            }\n        }\n    }\n\n    return ref;\n}\n\n/**\n * Sync VNode with a new one or replace when they aren't compatible.\n *\n * When node `a` is synced with node `b`, `a` node should be considered as destroyed, and any access to it after sync\n * is an undefined behavior.\n *\n * @param parent Parent node.\n * @param a Old VNode.\n * @param b New VNode.\n * @param context Current context.\n * @param owner Owning component.\n * @returns Synced DOM Node. When VNodes are synced and they aren't compatible, old DOM Node will be replaced with a new\n * DOM Node.\n */\nfunction vNodeSyncOrReplace(\n    parent: Node,\n    a: VNode<any>,\n    b: VNode<any>,\n    context: Context,\n    owner?: Component<any>,\n): Node {\n    if (vNodeCanSync(a, b)) {\n        return vNodeSync(parent, a, b, context, owner);\n    }\n    const newRef = vNodeRender(parent, b, context, owner) as Element;\n    parent.replaceChild(newRef, a._dom!);\n    vNodeUnmount(a);\n    vNodeMount(b);\n    return newRef;\n}\n\n/**\n * Sync old children list with the new one.\n *\n * @param parent Parent node.\n * @param aParentFlags Old parent VNode flags.\n * @param bParentFlags New parent VNode flags.\n * @param a Old VNode list.\n * @param b New VNode list.\n * @param context Current context.\n * @param owner Owning component.\n */\nfunction syncChildren(\n    parent: Node,\n    aParentFlags: VNodeFlags,\n    bParentFlags: VNodeFlags,\n    a: VNode<any>[] | VNode<any> | string | number | boolean,\n    b: VNode<any>[] | VNode<any> | string | number | boolean,\n    context: Context,\n    owner: Component<any> | undefined,\n): void {\n    let i = 0;\n\n    if (a === null) {\n        if (bParentFlags & (VNodeFlags.ChildrenBasic | VNodeFlags.ChildrenArray)) {\n            if (bParentFlags & VNodeFlags.ChildrenBasic) {\n                parent.textContent = b as string;\n            } else {\n                b = b as VNode<any>[];\n                for (i = 0; i < b.length; i++) {\n                    vNodeRenderInto(parent, null, b[i], context, owner);\n                }\n            }\n        } else if (bParentFlags & VNodeFlags.ChildrenVNode) {\n            vNodeRenderInto(parent, null, b as VNode<any>, context, owner);\n        } else if (bParentFlags & VNodeFlags.InputElement) {\n            setHTMLInputValue(parent as HTMLInputElement, b as string | boolean);\n        } else { // (bParentFlags & VNodeFlags.UnsafeHTML)\n            (parent as Element).innerHTML = b as string;\n        }\n    } else if (b === null) {\n        if (aParentFlags & (VNodeFlags.ChildrenBasic | VNodeFlags.UnsafeHTML)) {\n            parent.textContent = \"\";\n        } else if (aParentFlags & VNodeFlags.ChildrenArray) {\n            vNodeRemoveAllChildren(parent, a as VNode<any>[]);\n        } else if (aParentFlags & VNodeFlags.ChildrenVNode) {\n            vNodeRemoveChild(parent, a as VNode<any>);\n        } else { // (bParentFlags & VNodeFlags.InputElement)\n            if (typeof a === \"string\") {\n                (parent as HTMLInputElement).value = \"\";\n            } else {\n                (parent as HTMLInputElement).checked = false;\n            }\n        }\n    } else {\n        if (aParentFlags & (VNodeFlags.ChildrenBasic | VNodeFlags.UnsafeHTML)) {\n            if (bParentFlags & (VNodeFlags.ChildrenBasic | VNodeFlags.UnsafeHTML)) {\n                if (bParentFlags & VNodeFlags.ChildrenBasic) {\n                    const c = parent.firstChild;\n                    if (c) {\n                        c.nodeValue = b as string;\n                    } else {\n                        parent.textContent = b as string;\n                    }\n                } else {\n                    (parent as Element).innerHTML = b as string;\n                }\n            } else {\n                parent.textContent = \"\";\n                if (bParentFlags & VNodeFlags.ChildrenArray) {\n                    b = b as VNode<any>[];\n                    for (i = 0; i < b.length; i++) {\n                        vNodeRenderInto(parent, null, b[i], context, owner);\n                    }\n                } else {\n                    vNodeRenderInto(parent, null, b as VNode<any>, context, owner);\n                }\n            }\n        } else if (aParentFlags & VNodeFlags.ChildrenArray) {\n            a = a as VNode<any>[];\n            if (bParentFlags & (VNodeFlags.ChildrenBasic | VNodeFlags.UnsafeHTML)) {\n                if (bParentFlags & VNodeFlags.ChildrenBasic) {\n                    parent.textContent = b as string;\n                } else {\n                    (parent as Element).innerHTML = b as string;\n                }\n                vNodeUnmountAll(a);\n            } else if (bParentFlags & VNodeFlags.ChildrenArray) {\n                b = b as VNode<any>[];\n                if (a.length === 0) {\n                    for (i = 0; i < b.length; i++) {\n                        vNodeRenderInto(parent, null, b[i], context, owner);\n                    }\n                } else {\n                    if (b.length === 0) {\n                        vNodeRemoveAllChildren(parent, a);\n                    } else if (a.length === 1 && b.length === 1) {\n                        vNodeSyncOrReplace(parent, a[0], b[0], context, owner);\n                    } else {\n                        if (aParentFlags & bParentFlags & VNodeFlags.TrackByKeyChildren) {\n                            syncChildrenTrackByKeys(parent, a, b, context, owner);\n                        } else {\n                            syncChildrenNaive(parent, a, b, context, owner);\n                        }\n                    }\n                }\n            } else {\n                b = b as VNode<any>;\n                if (a.length > 0) {\n                    vNodeSyncOrReplace(parent, a[0], b, context, owner);\n                    for (i = 1; i < a.length; i++) {\n                        vNodeRemoveChild(parent, a[i]);\n                    }\n                } else {\n                    vNodeRenderInto(parent, null, b, context, owner);\n                }\n            }\n        } else if (aParentFlags & VNodeFlags.ChildrenVNode) {\n            a = a as VNode<any>;\n            if (bParentFlags & (VNodeFlags.ChildrenBasic | VNodeFlags.UnsafeHTML)) {\n                if (bParentFlags & VNodeFlags.ChildrenBasic) {\n                    parent.textContent = b as string;\n                } else {\n                    (parent as Element).innerHTML = b as string;\n                }\n                vNodeUnmount(a);\n            } else if (bParentFlags & VNodeFlags.ChildrenArray) {\n                b = b as VNode<any>[];\n                if (b.length > 0) {\n                    vNodeSyncOrReplace(parent, a, b[0], context, owner);\n                    for (i = 1; i < b.length; i++) {\n                        vNodeRenderInto(parent, null, b[i], context, owner);\n                    }\n                } else {\n                    vNodeRemoveChild(parent, a);\n                }\n            } else {\n                vNodeSyncOrReplace(parent, a, b as VNode<any>, context, owner);\n            }\n        } else { // (aParentFlags & VNodeFlags.InputElement)\n            if (typeof b === \"string\") {\n                if ((parent as HTMLInputElement).value !== b) {\n                    (parent as HTMLInputElement).value = b;\n                }\n            } else {\n                (parent as HTMLInputElement).checked = b as boolean;\n            }\n        }\n    }\n}\n\n/**\n * Sync children naive way.\n *\n * Any heuristics that is used in this algorithm is an undefined behaviour, and external dependencies should not rely on\n * any knowledge about this algorithm, because it can be changed in any time.\n *\n * This naive algorithm is quite simple:\n *\n *  A: -> [a a c d e g g] <-\n *  B: -> [a a f d c g] <-\n *\n * It starts by iterating over old children list `A` and new children list `B` from both ends.\n *\n *  A: -> [a b c d e g g] <-\n *  B: -> [a b f d c g] <-\n *\n * When it find nodes that have the same key, tag and flags, it will sync them. Node \"a\" and \"b\" on the right side, and\n * node \"g\" on the right side will be synced.\n *\n *  A: -> [c d e g]\n *  B: -> [f d c]\n *\n * Then it start iterating over old and new children lists from the left side and check if nodes can be synced. Nodes\n * \"c\" and \"f\" can't be synced, remove node \"c\" and insert new node \"f\".\n *\n *  A: -> [d e g]\n *  B: -> [d c]\n *\n * Node \"d\" is synced.\n *\n *  A: -> [e g]\n *  B: -> [c]\n *\n * Node \"e\" removed, node \"c\" inserted.\n *\n *  A: -> [g]\n *  B:    []\n *\n * Length of the old list is larger than length of the new list, remove remaining nodes from the old list.\n *\n * @param parent Parent node.\n * @param a Old VNode list.\n * @param b New VNode list.\n * @param context Current context.\n * @param owner Owning component.\n */\nfunction syncChildrenNaive(\n    parent: Node,\n    a: VNode<any>[],\n    b: VNode<any>[],\n    context: Context,\n    owner?: Component<any>,\n): void {\n    let aStart = 0;\n    let bStart = 0;\n    let aEnd = a.length - 1;\n    let bEnd = b.length - 1;\n    let aNode: VNode<any>;\n    let bNode: VNode<any>;\n    let nextPos: number;\n    let next: Node | null;\n\n    // Sync similar nodes at the beginning.\n    while (aStart <= aEnd && bStart <= bEnd) {\n        aNode = a[aStart];\n        bNode = b[bStart];\n\n        if (!vNodeCanSync(aNode, bNode)) {\n            break;\n        }\n\n        aStart++;\n        bStart++;\n\n        vNodeSync(parent, aNode, bNode, context, owner);\n    }\n\n    // Sync similar nodes at the end.\n    while (aStart <= aEnd && bStart <= bEnd) {\n        aNode = a[aEnd];\n        bNode = b[bEnd];\n\n        if (!vNodeCanSync(aNode, bNode)) {\n            break;\n        }\n\n        aEnd--;\n        bEnd--;\n\n        vNodeSync(parent, aNode, bNode, context, owner);\n    }\n\n    // Iterate over the remaining nodes and if they have the same type, then sync, otherwise just\n    // remove the old node and insert the new one.\n    while (aStart <= aEnd && bStart <= bEnd) {\n        aNode = a[aStart++];\n        bNode = b[bStart++];\n        vNodeSyncOrReplace(parent, aNode, bNode, context, owner);\n    }\n\n    if (aStart <= aEnd) {\n        // All nodes from a are synced, remove the rest.\n        do {\n            vNodeRemoveChild(parent, a[aStart++]);\n        } while (aStart <= aEnd);\n    } else if (bStart <= bEnd) {\n        // All nodes from b are synced, insert the rest.\n        nextPos = bEnd + 1;\n        next = nextPos < b.length ? b[nextPos]._dom : null;\n        do {\n            vNodeRenderInto(parent, next, b[bStart++], context, owner);\n        } while (bStart <= bEnd);\n    }\n}\n\n/**\n * Sync children with track by keys algorithm.\n *\n * This algorithm finds a minimum[1] number of DOM operations. It works in several steps:\n *\n * 1. Find common suffix and prefix, and perform simple moves on the edges.\n *\n * This optimization technique is searching for nodes with identical keys by simultaneously iterating over nodes in the\n * old children list `A` and new children list `B` from both sides:\n *\n *  A: -> [a b c d e f g] <-\n *  B: -> [a b f d c g] <-\n *\n * Here we can skip nodes \"a\" and \"b\" at the begininng, and node \"g\" at the end.\n *\n *  A: -> [c d e f] <-\n *  B: -> [f d c] <-\n *\n * At this position it will try to look at the opposite edge, and if there is a node with the same key at the opposite\n * edge, it will perform simple move operation. Node \"c\" is moved to the right edge, and node \"f\" is moved to the left\n * edge.\n *\n *  A: -> [d e] <-\n *  B: -> [d] <-\n *\n * Now it will try again to find common prefix and suffix, node \"d\" is the same, so we can skip it.\n *\n *  A: [e]\n *  B: []\n *\n * Here it will check if the size of one of the list is equal to zero, and if length of the old children list is zero,\n * it will insert all remaining nodes from the new list, or if length of the new children list is zero, it will remove\n * all remaining nodes from the old list.\n *\n * This simple optimization technique will cover most of the real world use cases, even reversing the children list,\n * except for sorting.\n *\n * When algorithm couldn't find a solution with this simple optimization technique, it will go to the next step of the\n * algorithm. For example:\n *\n *  A: -> [a b c d e f g] <-\n *  B: -> [a c b h f e g] <-\n *\n * Nodes \"a\" and \"g\" at the edges are the same, skipping them.\n *\n *  A: -> [b c d e f] <-\n *  B: -> [c b h f e] <-\n *\n * Here we are stuck, so we need to switch to the next step.\n *\n * 2. Look for removed and inserted nodes, and simultaneously check if one of the nodes is moved.\n *\n * First we create an array `P` with the length of the new children list and assign to each position value `-1`, it has\n * a meaning of a new node that should be inserted. Later we will assign node positions in the old children list to this\n * array.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *  P: [. . . . .] // . == -1\n *\n * Then we need to build an index `I` that maps keys with node positions of the remaining nodes from the new children\n * list.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *  P: [. . . . .] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1,\n *    h: 2,\n *    f: 3,\n *    e: 4,\n *  }\n *  last = 0\n *\n * With this index, we start to iterate over the remaining nodes from the old children list and check if we can find a\n * node with the same key in the index. If we can't find any node, it means that it should be removed, otherwise we\n * assign position of the node in the old children list to the positions array.\n *\n *  A: [b c d e f]\n *      ^\n *  B: [c b h f e]\n *  P: [. 0 . . .] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1, <-\n *    h: 2,\n *    f: 3,\n *    e: 4,\n *  }\n *  last = 1\n *\n * When we assigning positions to the positions array, we also keep a position of the last seen node in the new children\n * list, if the last seen position is larger than current position of the node at the new list, then we are switching\n * `moved` flag to `true`.\n *\n *  A: [b c d e f]\n *        ^\n *  B: [c b h f e]\n *  P: [1 0 . . .] // . == -1\n *  I: {\n *    c: 0, <-\n *    b: 1,\n *    h: 2,\n *    f: 3,\n *    e: 4,\n *  }\n *  last = 1 // last > 0; moved = true\n *\n * The last position `1` is larger than current position of the node at the new list `0`, switching `moved` flag to\n * `true`.\n *\n *  A: [b c d e f]\n *          ^\n *  B: [c b h f e]\n *  P: [1 0 . . .] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1,\n *    h: 2,\n *    f: 3,\n *    e: 4,\n *  }\n *  moved = true\n *\n * Node with key \"d\" doesn't exist in the index, removing node.\n *\n *  A: [b c d e f]\n *            ^\n *  B: [c b h f e]\n *  P: [1 0 . . 3] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1,\n *    h: 2,\n *    f: 3,\n *    e: 4, <-\n *  }\n *  moved = true\n *\n * Assign position for `e`.\n *\n *  A: [b c d e f]\n *              ^\n *  B: [c b h f e]\n *  P: [1 0 . 4 3] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1,\n *    h: 2,\n *    f: 3, <-\n *    e: 4,\n *  }\n *  moved = true\n *\n * Assign position for 'f'.\n *\n * At this point we are checking if `moved` flag is on, or if the length of the old children list minus the number of\n * removed nodes isn't equal to the length of the new children list. If any of this conditions is true, then we are\n * going to the next step.\n *\n * 3. Find minimum number of moves if `moved` flag is on, or insert new nodes if the length is changed.\n *\n * When `moved` flag is on, we need to find the\n * [longest increasing subsequence](http://en.wikipedia.org/wiki/Longest_increasing_subsequence) in the positions array,\n * and move all nodes that doesn't belong to this subsequence.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *  moved = true\n *\n * Now we just need to simultaneously iterate over the new children list and LIS from the end and check if the current\n * position is equal to a value from LIS.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *              ^  // new_pos == 4\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *              ^  // new_pos == 4\n *  moved = true\n *\n * Node \"e\" stays at the same place.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *            ^    // new_pos == 3\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *            ^    // new_pos != 1\n *  moved = true\n *\n * Node \"f\" is moved, move it before the next node \"e\".\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *          ^      // new_pos == 2\n *  P: [1 0 . 4 3] // . == -1\n *          ^      // old_pos == -1\n *  LIS:     [1 4]\n *            ^\n *  moved = true\n *\n * Node \"h\" has a `-1` value in the positions array, insert new node \"h\".\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *        ^        // new_pos == 1\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *            ^    // new_pos == 1\n *  moved = true\n *\n * Node \"b\" stays at the same place.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *      ^          // new_pos == 0\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *          ^      // new_pos != undefined\n *  moved = true\n *\n * Node \"c\" is moved, move it before the next node \"b\".\n *\n * When moved flag is off, we don't need to find LIS, and we just iterate over the new children list and check its\n * current position in the positions array, if it is `-1`, then we insert new node.\n *\n * That is how children reconciliation algorithm is working in one of the fastest virtual dom libraries :)\n *\n * [1] Actually it is almost minimum number of dom ops, when node is removed and another one is inserted at the same\n * place, instead of insert and remove dom ops, we can use one replace op. It will make everything even more\n * complicated, and other use cases will be slower, so I don't think that it is worth to use replace here. Naive algo\n * and simple 1/N, N/1 cases are using replace op.\n *\n * @param parent Parent node.\n * @param a Old VNode list.\n * @param b New VNode list.\n * @param context Current context.\n * @param owner Owning component.\n */\nfunction syncChildrenTrackByKeys(\n    parent: Node,\n    a: VNode<any>[],\n    b: VNode<any>[],\n    context: Context,\n    owner?: Component<any>,\n): void {\n    let aStart = 0;\n    let bStart = 0;\n    let aEnd = a.length - 1;\n    let bEnd = b.length - 1;\n    let aStartNode = a[aStart];\n    let bStartNode = b[bStart];\n    let aEndNode = a[aEnd];\n    let bEndNode = b[bEnd];\n    let i: number;\n    let j: number | undefined;\n    let nextPos: number;\n    let next: Node | null;\n    let aNode: VNode<any> | null;\n    let bNode: VNode<any>;\n    let node: VNode<any>;\n\n    // Step 1\n    outer: while (true) {\n        // Sync nodes with the same key at the beginning.\n        while (aStartNode._key === bStartNode._key) {\n            vNodeSyncOrReplace(parent, aStartNode, bStartNode, context, owner);\n            aStart++;\n            bStart++;\n            if (aStart > aEnd || bStart > bEnd) {\n                break outer;\n            }\n            aStartNode = a[aStart];\n            bStartNode = b[bStart];\n        }\n\n        // Sync nodes with the same key at the end.\n        while (aEndNode._key === bEndNode._key) {\n            vNodeSyncOrReplace(parent, aEndNode, bEndNode, context, owner);\n            aEnd--;\n            bEnd--;\n            if (aStart > aEnd || bStart > bEnd) {\n                break outer;\n            }\n            aEndNode = a[aEnd];\n            bEndNode = b[bEnd];\n        }\n\n        // Move and sync nodes from right to left.\n        if (aEndNode._key === bStartNode._key) {\n            vNodeSyncOrReplace(parent, aEndNode, bStartNode, context, owner);\n            vNodeMoveChild(parent, bStartNode, aStartNode._dom);\n            aEnd--;\n            bStart++;\n            // There is no need to check when we out of bounds, because the only way we can get here is when there are\n            // more nodes in the lists.\n            //\n            // Impossible transformations:\n            //   [a] => [a b] (common prefix)\n            //   [b a] => [a] (common suffix)\n            //\n            // Possible transformations:\n            //   [b a] => [a b]\n            //   [b a] => [a c]\n\n            aEndNode = a[aEnd];\n            bStartNode = b[bStart];\n            // In a real-world scenarios there is a higher chance that next node after the move will be the same, so we\n            // immediately jump to the start of this prefix/suffix algo.\n            continue;\n        }\n\n        // Move and sync nodes from left to right.\n        if (aStartNode._key === bEndNode._key) {\n            vNodeSyncOrReplace(parent, aStartNode, bEndNode, context, owner);\n            nextPos = bEnd + 1;\n            next = nextPos < b.length ? b[nextPos]._dom : null;\n            vNodeMoveChild(parent, bEndNode, next);\n            aStart++;\n            bEnd--;\n            aStartNode = a[aStart];\n            bEndNode = b[bEnd];\n            continue;\n        }\n\n        break;\n    }\n\n    if (aStart > aEnd) {\n        // All nodes from a are synced, insert the rest from b.\n        nextPos = bEnd + 1;\n        next = nextPos < b.length ? b[nextPos]._dom : null;\n        while (bStart <= bEnd) {\n            vNodeRenderInto(parent, next, b[bStart++], context, owner);\n        }\n    } else if (bStart > bEnd) {\n        // All nodes from b are synced, remove the rest from a.\n        while (aStart <= aEnd) {\n            vNodeRemoveChild(parent, a[aStart++]);\n        }\n        // Step 2\n    } else {\n        let aLength = aEnd - aStart + 1;\n        let bLength = bEnd - bStart + 1;\n        const aNullable = a as Array<VNode<any> | null>; // will be removed by js optimizing compilers.\n        // Mark all nodes as inserted.\n        const sources = new Array<number>(bLength).fill(-1);\n\n        let moved = false;\n        let pos = 0;\n        let synced = 0;\n\n        // When children lists are small, we are using naive O(N) algorithm to find if child is removed.\n        if ((bLength <= 4) || ((aLength * bLength) <= 16)) {\n            for (i = aStart; i <= aEnd; i++) {\n                aNode = a[i];\n                if (synced < bLength) {\n                    for (j = bStart; j <= bEnd; j++) {\n                        bNode = b[j];\n                        if (aNode._key === bNode._key) {\n                            sources[j - bStart] = i;\n\n                            if (pos > j) {\n                                moved = true;\n                            } else {\n                                pos = j;\n                            }\n                            vNodeSyncOrReplace(parent, aNode, bNode, context, owner);\n                            synced++;\n                            aNullable[i] = null;\n                            break;\n                        }\n                    }\n                }\n            }\n        } else {\n            const keyIndex = new Map<any, number>();\n\n            for (i = bStart; i <= bEnd; i++) {\n                node = b[i];\n                keyIndex.set(node._key, i);\n            }\n\n            for (i = aStart; i <= aEnd; i++) {\n                aNode = a[i];\n\n                if (synced < bLength) {\n                    j = keyIndex.get(aNode._key);\n\n                    if (j !== undefined) {\n                        bNode = b[j];\n                        sources[j - bStart] = i;\n                        if (pos > j) {\n                            moved = true;\n                        } else {\n                            pos = j;\n                        }\n                        vNodeSyncOrReplace(parent, aNode, bNode, context, owner);\n                        synced++;\n                        aNullable[i] = null;\n                    }\n                }\n            }\n        }\n\n        if (aLength === a.length && synced === 0) {\n            // Noone is synced, remove all children with one dom op.\n            vNodeRemoveAllChildren(parent, a);\n            while (bStart < bLength) {\n                vNodeRenderInto(parent, null, b[bStart++], context, owner);\n            }\n        } else {\n            i = aLength - synced;\n            while (i > 0) {\n                aNode = aNullable[aStart++];\n                if (aNode !== null) {\n                    vNodeRemoveChild(parent, aNode);\n                    i--;\n                }\n            }\n\n            // Step 3\n            if (moved) {\n                const seq = lis(sources);\n                j = seq.length - 1;\n                for (i = bLength - 1; i >= 0; i--) {\n                    if (sources[i] === -1) {\n                        pos = i + bStart;\n                        node = b[pos];\n                        nextPos = pos + 1;\n                        next = nextPos < b.length ? b[nextPos]._dom : null;\n                        vNodeRenderInto(parent, next, node, context, owner);\n                    } else {\n                        if (j < 0 || i !== seq[j]) {\n                            pos = i + bStart;\n                            node = b[pos];\n                            nextPos = pos + 1;\n                            next = nextPos < b.length ? b[nextPos]._dom : null;\n                            vNodeMoveChild(parent, node, next);\n                        } else {\n                            j--;\n                        }\n                    }\n                }\n            } else if (synced !== bLength) {\n                for (i = bLength - 1; i >= 0; i--) {\n                    if (sources[i] === -1) {\n                        pos = i + bStart;\n                        node = b[pos];\n                        nextPos = pos + 1;\n                        next = nextPos < b.length ? b[nextPos]._dom : null;\n                        vNodeRenderInto(parent, next, node, context, owner);\n                    }\n                }\n            }\n        }\n    }\n}\n\n/**\n * Slightly modified Longest Increased Subsequence algorithm, it ignores items that have -1 value, they're representing\n * new items.\n *\n * http://en.wikipedia.org/wiki/Longest_increasing_subsequence\n *\n * @param a Array of numbers.\n * @returns Longest increasing subsequence.\n */\nfunction lis(a: number[]): number[] {\n    const p = a.slice(0);\n    const result: number[] = [];\n    result.push(0);\n    let u: number;\n    let v: number;\n\n    for (let i = 0, il = a.length; i < il; i++) {\n        if (a[i] === -1) {\n            continue;\n        }\n\n        let j = result[result.length - 1];\n        if (a[j] < a[i]) {\n            p[i] = j;\n            result.push(i);\n            continue;\n        }\n\n        u = 0;\n        v = result.length - 1;\n\n        while (u < v) {\n            let c = ((u + v) / 2) | 0;\n            if (a[result[c]] < a[i]) {\n                u = c + 1;\n            } else {\n                v = c;\n            }\n        }\n\n        if (a[i] < a[result[u]]) {\n            if (u > 0) {\n                p[i] = result[u - 1];\n            }\n            result[u] = i;\n        }\n    }\n\n    u = result.length;\n    v = result[u - 1];\n\n    while (u-- > 0) {\n        result[u] = v;\n        v = p[v];\n    }\n\n    return result;\n}\n","/**\n * Global Scheduler.\n */\n\nimport { Component } from \"../vdom/component\";\nimport { updateComponent } from \"../vdom/implementation\";\nimport { ComponentFlags } from \"../vdom/flags\";\n\n/**\n * Scheduler Task.\n */\nexport type SchedulerTask = () => void;\n\n/**\n * Scheduler flags.\n */\nconst enum SchedulerFlags {\n    /**\n     * Microtasks are pending for execution in microtasks queue.\n     */\n    MicrotaskPending = 1,\n    /**\n     * Macrotasks are pending for execution in macrotasks queue.\n     */\n    MacrotaskPending = 1 << 1,\n    /**\n     * Frametasks are pending for execution in frametasks queue.\n     */\n    FrametaskPending = 1 << 2,\n    /**\n     * Current frame ready.\n     */\n    CurrentFrameReady = 1 << 3,\n}\n\n/**\n * Frame Tasks Group flags.\n */\nconst enum FrameTasksGroupFlags {\n    /**\n     * Group contains component update tasks.\n     */\n    Component = 1,\n    /**\n     * Group contains \"write\" tasks.\n     */\n    Write = 1 << 1,\n    /**\n     * Group contains \"read\" tasks\".\n     */\n    Read = 1 << 2,\n    /**\n     * Group contains \"after\" tasks.\n     */\n    After = 1 << 3,\n    /**\n     * Group is locked from reading and writing.\n     */\n    RWLock = 1 << 4,\n}\n\n/**\n * Frame tasks group contains tasks for updating components, read dom and write dom tasks, and tasks that should be\n * executed after all other tasks are finished.\n *\n * To get access to the frame tasks group, use: `currentFrame()` and `nextFrame()` scheduler methods.\n *\n *     scheduler.currentFrame().read(() => {\n *       console.log(element.clientWidth);\n *     });\n *\n * @final\n */\nexport class FrameTasksGroup {\n    /**\n     * See `FrameTasksGroupFlags` for details.\n     */\n    _flags: number;\n    /**\n     * Array of component arrays indexed by their depth.\n     */\n    _componentTasks: Array<Component<any>[] | null>;\n    /**\n     * Write DOM task queue.\n     */\n    _writeTasks: SchedulerTask[] | null;\n    /**\n     * Read DOM task queue.\n     */\n    _readTasks: SchedulerTask[] | null;\n    /**\n     * Tasks that should be executed when all other tasks are finished.\n     */\n    _afterTasks: SchedulerTask[] | null;\n\n    constructor() {\n        this._flags = 0;\n        this._componentTasks = [];\n        this._writeTasks = null;\n        this._readTasks = null;\n        this._afterTasks = null;\n    }\n\n    /**\n     * Add Component to the components queue.\n     *\n     * @param component\n     */\n    updateComponent(component: Component<any>): void {\n        if (__IVI_DEV__) {\n            if ((this._flags & FrameTasksGroupFlags.RWLock) !== 0) {\n                throw new Error(\"Failed to add update component task to the current frame, current frame is locked \" +\n                    \"for read and write tasks.\");\n            }\n        }\n\n        if ((component.flags & ComponentFlags.InUpdateQueue) === 0) {\n            component.flags |= ComponentFlags.InUpdateQueue;\n            const priority = component.depth;\n\n            this._flags |= FrameTasksGroupFlags.Component;\n            while (priority >= this._componentTasks.length) {\n                this._componentTasks.push(null);\n            }\n\n            const group = this._componentTasks[priority];\n            if (group === null) {\n                this._componentTasks[priority] = [component];\n            } else {\n                group.push(component);\n            }\n        }\n    }\n\n    /**\n     * Add new task to the write DOM task queue.\n     *\n     * @param callback\n     */\n    write(callback: SchedulerTask): void {\n        if (__IVI_DEV__) {\n            if ((this._flags & FrameTasksGroupFlags.RWLock) !== 0) {\n                throw new Error(\"Failed to add update component task to the current frame, current frame is locked \" +\n                    \"for read and write tasks.\");\n            }\n        }\n\n        this._flags |= FrameTasksGroupFlags.Write;\n        if (this._writeTasks === null) {\n            this._writeTasks = [];\n        }\n        this._writeTasks.push(callback);\n    }\n\n    /**\n     * Add new task to the read DOM task queue.\n     *\n     * @param callback\n     */\n    read(callback: SchedulerTask): void {\n        if (__IVI_DEV__) {\n            if ((this._flags & FrameTasksGroupFlags.RWLock) !== 0) {\n                throw new Error(\"Failed to add update component task to the current frame, current frame is locked \" +\n                    \"for read and write tasks.\");\n            }\n        }\n\n        this._flags |= FrameTasksGroupFlags.Read;\n        if (this._readTasks === null) {\n            this._readTasks = [];\n        }\n        this._readTasks.push(callback);\n    }\n\n    /**\n     * Add new task to the task queue that will execute tasks when all DOM tasks are finished.\n     *\n     * @param callback\n     */\n    after(callback: SchedulerTask): void {\n        this._flags |= FrameTasksGroupFlags.After;\n        if (this._afterTasks === null) {\n            this._afterTasks = [];\n        }\n        this._afterTasks.push(callback);\n    }\n\n    /**\n     * Lock read and write task queues.\n     *\n     * Works in DEBUG mode only.\n     */\n    _rwLock(): void {\n        if (__IVI_DEV__) {\n            this._flags |= FrameTasksGroupFlags.RWLock;\n        }\n    }\n\n    /**\n     * Unlock read and write task queue.\n     *\n     * Works in DEBUG mode only.\n     */\n    _rwUnlock(): void {\n        if (__IVI_DEV__) {\n            this._flags &= ~FrameTasksGroupFlags.RWLock;\n        }\n    }\n}\n\n/**\n * Scheduler.\n */\nconst scheduler = {\n    /**\n     * See `SchedulerFlags` for details.\n     */\n    flags: 0,\n    clock: 0,\n    time: 0,\n    microtasks: [] as SchedulerTask[],\n    macrotasks: [] as SchedulerTask[],\n    currentFrame: new FrameTasksGroup(),\n    nextFrame: new FrameTasksGroup(),\n    updateComponents: [] as Component<any>[],\n    microtaskNode: document.createTextNode(\"\"),\n    microtaskToggle: 0,\n    macrotaskMessage: \"__ivi\" + Math.random(),\n};\n\n// Microtask scheduler based on mutation observer\nconst microtaskObserver = new MutationObserver(runMicrotasks);\nmicrotaskObserver.observe(scheduler.microtaskNode, { characterData: true });\n\n// Macrotask scheduler based on postMessage\nwindow.addEventListener(\"message\", handleWindowMessage);\n\nscheduler.currentFrame._rwLock();\n\n/**\n * Monotonically increasing clock.\n *\n * @returns current clock value.\n */\nexport function clock(): number {\n    return scheduler.clock;\n}\n\n/**\n * Trigger microtasks execution.\n */\nfunction requestMicrotaskExecution(): void {\n    if ((scheduler.flags & SchedulerFlags.MicrotaskPending) === 0) {\n        scheduler.flags |= SchedulerFlags.MicrotaskPending;\n        scheduler.microtaskToggle ^= 1;\n        scheduler.microtaskNode.nodeValue = scheduler.microtaskToggle ? \"1\" : \"0\";\n    }\n}\n\n/**\n * Trigger macrotasks execution.\n */\nfunction requestMacrotaskExecution(): void {\n    if ((scheduler.flags & SchedulerFlags.MacrotaskPending) === 0) {\n        scheduler.flags |= SchedulerFlags.MacrotaskPending;\n        window.postMessage(scheduler.macrotaskMessage, \"*\");\n    }\n}\n\n/**\n * Trigger next frame tasks execution.\n */\nfunction requestNextFrame(): void {\n    if ((scheduler.flags & SchedulerFlags.FrametaskPending) === 0) {\n        scheduler.flags |= SchedulerFlags.FrametaskPending;\n        requestAnimationFrame(handleNextFrame);\n    }\n}\n\n/**\n * Macrotask scheduler event handler.\n *\n * @param ev Message event.\n */\nfunction handleWindowMessage(ev: MessageEvent): void {\n    if (ev.source === window && ev.data === scheduler.macrotaskMessage) {\n        runMacrotasks();\n    }\n}\n\n/**\n * Frame tasks scheduler event handler.\n *\n * @param t Current time.\n */\nfunction handleNextFrame(_t: number): void {\n    const updateComponents = scheduler.updateComponents;\n    let tasks: SchedulerTask[];\n    let i: number;\n    let j: number;\n\n    scheduler.flags &= ~SchedulerFlags.FrametaskPending;\n    scheduler.flags |= SchedulerFlags.CurrentFrameReady;\n\n    scheduler.time = Date.now();\n\n    const frame = scheduler.nextFrame;\n    scheduler.nextFrame = scheduler.currentFrame;\n    scheduler.currentFrame = frame;\n\n    scheduler.currentFrame._rwUnlock();\n    scheduler.nextFrame._rwUnlock();\n\n    // Mark all update components as dirty. But don't update until all write tasks are finished. It is possible that we\n    // won't need to update component if it is removed.\n    for (i = 0; i < updateComponents.length; i++) {\n        updateComponents[i].flags |= ComponentFlags.DirtyState;\n    }\n\n    // Perform read/write batching. Start with executing read DOM tasks, then update components, execute write DOM tasks\n    // and repeat until all read and write tasks are executed.\n    do {\n        while ((frame._flags & FrameTasksGroupFlags.Read) !== 0) {\n            frame._flags &= ~FrameTasksGroupFlags.Read;\n            tasks = frame._readTasks!;\n            frame._readTasks = null;\n\n            for (i = 0; i < tasks.length; i++) {\n                tasks[i]();\n            }\n        }\n\n        while ((frame._flags & (FrameTasksGroupFlags.Component | FrameTasksGroupFlags.Write)) !== 0) {\n            if ((frame._flags & FrameTasksGroupFlags.Component) !== 0) {\n                frame._flags &= ~FrameTasksGroupFlags.Component;\n                const componentGroups = frame._componentTasks;\n\n                for (i = 0; i < componentGroups.length; i++) {\n                    const componentGroup = componentGroups[i];\n                    if (componentGroup !== null) {\n                        componentGroups[i] = null;\n                        for (j = 0; j < componentGroup.length; j++) {\n                            updateComponent(componentGroup[j]);\n                        }\n                    }\n                }\n            }\n\n            if ((frame._flags & FrameTasksGroupFlags.Write) !== 0) {\n                frame._flags &= ~FrameTasksGroupFlags.Write;\n                tasks = frame._writeTasks!;\n                frame._writeTasks = null;\n                for (i = 0; i < tasks.length; i++) {\n                    tasks[i]();\n                }\n            }\n        }\n\n        // Update components registered for updating on each frame.\n        // Remove components that doesn't have UPDATE_EACH_FRAME flag.\n        i = 0;\n        j = updateComponents.length;\n\n        while (i < j) {\n            const component = updateComponents[i++];\n            if ((component.flags & ComponentFlags.UpdateEachFrame) === 0) {\n                component.flags &= ~ComponentFlags.InUpdateEachFrameQueue;\n                if (i === j) {\n                    updateComponents.pop();\n                } else {\n                    updateComponents[--i] = updateComponents.pop() !;\n                }\n            } else {\n                updateComponent(component);\n            }\n        }\n    } while ((frame._flags & (FrameTasksGroupFlags.Component |\n        FrameTasksGroupFlags.Write |\n        FrameTasksGroupFlags.Read)) !== 0);\n\n    scheduler.flags &= ~SchedulerFlags.CurrentFrameReady;\n\n    // Lock current from adding read and write tasks in debug mode.\n    scheduler.currentFrame._rwLock();\n\n    // Perform tasks that should be executed when all DOM ops are finished.\n    while ((frame._flags & FrameTasksGroupFlags.After) !== 0) {\n        frame._flags &= ~FrameTasksGroupFlags.After;\n\n        tasks = frame._afterTasks!;\n        frame._afterTasks = null;\n        for (i = 0; i < tasks.length; i++) {\n            tasks[i]();\n        }\n    }\n\n    if (updateComponents.length > 0) {\n        requestNextFrame();\n    }\n\n    scheduler.clock++;\n}\n\nfunction runMicrotasks(): void {\n    scheduler.time = Date.now();\n\n    while (scheduler.microtasks.length > 0) {\n        const tasks = scheduler.microtasks;\n        scheduler.microtasks = [];\n        for (let i = 0; i < tasks.length; i++) {\n            tasks[i]();\n        }\n        scheduler.clock++;\n    }\n\n    scheduler.flags &= ~SchedulerFlags.MicrotaskPending;\n}\n\nfunction runMacrotasks(): void {\n    scheduler.flags &= ~SchedulerFlags.MacrotaskPending;\n    scheduler.time = Date.now();\n\n    let tasks = scheduler.macrotasks;\n    scheduler.macrotasks = [];\n    for (let i = 0; i < tasks.length; i++) {\n        tasks[i]();\n    }\n\n    scheduler.clock++;\n}\n\n/**\n * Add task to the microtask queue.\n *\n * @param task\n */\nexport function scheduleMicrotask(task: () => void): void {\n    requestMicrotaskExecution();\n    scheduler.microtasks.push(task);\n}\n\n/**\n * Add task to the macrotask queue.\n *\n * @param task\n */\nexport function scheduleMacrotask(task: () => void): void {\n    requestMacrotaskExecution();\n    scheduler.macrotasks.push(task);\n}\n\n/**\n * Get task list for the next frame.\n *\n * @returns Frame tasks group.\n */\nexport function nextFrame(): FrameTasksGroup {\n    requestNextFrame();\n    return scheduler.nextFrame;\n}\n\n/**\n * Get task list for the current frame.\n *\n * @returns Frame tasks group.\n */\nexport function currentFrame(): FrameTasksGroup {\n    if (scheduler.flags & SchedulerFlags.CurrentFrameReady) {\n        return scheduler.currentFrame;\n    }\n    return nextFrame();\n}\n\n/**\n * Add component to the list of components that will be updated each frame.\n *\n * @param component\n */\nexport function startUpdateComponentEachFrame(component: Component<any>): void {\n    requestNextFrame();\n    scheduler.updateComponents.push(component);\n}\n","import { isPropsNotIdentical, isPropsNotShallowEqual } from \"../common/equality\";\nimport { AncestorFlags } from \"../common/html_nesting_rules\";\nimport { ComponentFlags } from \"./flags\";\nimport { Context } from \"./context\";\nimport { VNode } from \"./vnode\";\nimport { currentFrame } from \"../scheduler/scheduler\";\n\n/**\n * Component function constructor.\n */\nexport interface ComponentFunction<P> {\n    (props: P, context?: Context): VNode<any> | undefined;\n    isPropsChanged?: (oldProps: P, newProps: P) => boolean;\n}\n\n/**\n * Component class constructor.\n */\nexport interface ComponentClass<P> {\n    new (props: P, context: Context, owner: Component<any> | undefined): Component<P>;\n}\n\n/**\n * Component is the main building block that is used to build UI applications.\n *\n * Component class has a parametric type `P` to specify `props` type.\n *\n * Example:\n *\n *     class Hello extends Component<string> {\n *       render() {\n *         return $t(`Hello ${this.props}`);\n *       }\n *     }\n *\n *     render($c(Hello, \"world\"), document.getElementById(\"App\")!);\n */\nexport abstract class Component<P> {\n    /**\n     * Flags, see `ComponentFlags` for details.\n     *\n     * Lowest 16 bits are reserved for ivi flags, other bits can be used for user flags.\n     */\n    flags: ComponentFlags;\n    /**\n     * Depth in the components tree.\n     *\n     * Depth property is used by scheduler to determine component priority when updating components.\n     */\n    readonly depth: number;\n    /**\n     * Component properties.\n     */\n    _props: P;\n    /**\n     * Parent context.\n     *\n     * Context that was used to create this component.\n     */\n    _parentContext: Context;\n    /**\n     * Current context.\n     */\n    _context: Context;\n    /**\n     * Owner component.\n     *\n     * Parent component. When owner is an undefined, it means that this component is a root component.\n     */\n    readonly owner: Component<any> | undefined;\n    /**\n     * Virtual DOM root node.\n     */\n    root: VNode<any> | null;\n    /**\n     * Parent DOM node.\n     *\n     * It is used because when root node is changed we will need to replace old DOM node with a new one, and right now\n     * browsers doesn't provide a nice API that doesn't require to know parent nodes.\n     */\n    _parentDOMNode: Node | null;\n    /**\n     * Root DOM node.\n     *\n     * When component is returning another component, they'll share the same DOM node.\n     */\n    _rootDOMNode: Node | null;\n    /**\n     * Ancestor Flags are used to check child nesting violations.\n     */\n    _ancestorFlags: AncestorFlags;\n\n    constructor(props: P, context: Context, owner: Component<any> | undefined) {\n        this.flags = 0;\n        this.depth = owner ? owner.depth + 1 : 0;\n        this._props = props;\n        this._parentContext = context;\n        this._context = context;\n        this.owner = owner;\n        this.root = null;\n        this._parentDOMNode = null;\n        this._rootDOMNode = null;\n    }\n\n    /**\n     * Get current context.\n     *\n     * @returns Current context.\n     */\n    get context(): Context {\n        this.flags |= ComponentFlags.CheckUsingContext;\n        return this._context;\n    }\n\n    /**\n     * Get props.\n     *\n     * @returns Current props.\n     */\n    get props(): P {\n        this.flags |= ComponentFlags.CheckUsingProps;\n        return this._props;\n    }\n\n    /**\n     * Is Component mounted.\n     *\n     * `isMounted` should be used only in one case, to prevent unnecessary work in asynchronous tasks.\n     *\n     * @returns `true` when Component is mounted.\n     */\n    get isMounted(): boolean {\n        return !!(this.flags & ComponentFlags.Mounted);\n    }\n\n    /**\n     * Lifecycle method `isPropsChanged` is used as a hint that can reduce unnecessary updates.\n     *\n     * By default all props changes returns `true`.\n     *\n     * @param oldProps Old props.\n     * @param newProps New props.\n     * @returns `true` when props should be updated.\n     */\n    isPropsChanged(oldProps: P, newProps: P): boolean {\n        return true;\n    }\n\n    /**\n     * Lifecycle method `didReceiveNewProps` is invoked after new props are assigned.\n     *\n     * @param oldProps Old props.\n     * @param newProps New props.\n     */\n    didReceiveNewProps(oldProps: P, newProps: P): void {\n        /* tslint:disable:no-empty */\n        /* tslint:enable:no-empty */\n    }\n\n    /**\n     * Lifecycle method `didReceiveNewContext` is invoked after new context is assigned.\n     *\n     * @param oldContext Old context.\n     * @param newContext New Context.\n     */\n    didReceiveNewContext(oldContext: Context, newContext: Context): void {\n        // TODO: this lifecycle method might be slightly confusing because it actually works with parent contexts.\n        // Maybe rename it to something more appropriate?\n        //\n        // NOTE: `willReceiveNewContext` will be even more confusing because components provide an API to get current\n        // context with `this.context`. `willReceiveNewProps` were changed to `didReceiveNewProps` to make it look like\n        // this lifecycle method.\n\n        /* tslint:disable:no-empty */\n        /* tslint:enable:no-empty */\n    }\n\n    /**\n     * Lifecycle method `updateContext` is used to modify current context.\n     *\n     * It will be invoked when component is created, each time when parent context is changed, each time when props are\n     * changed, and when component is updated with invalidated context.\n     *\n     * @returns Context data.\n     */\n    updateContext<C>(): C | undefined {\n        return;\n    }\n\n    /**\n     * Lifecycle method `didMount` is invoked when component is mounted to the document.\n     */\n    didMount(): void {\n        /* tslint:disable:no-empty */\n        /* tslint:enable:no-empty */\n    }\n\n    /**\n     * Lifecycle method `didUnmount` is invoked when component is unmounted from the document.\n     */\n    didUnmount(): void {\n        /* tslint:disable:no-empty */\n        /* tslint:enable:no-empty */\n    }\n\n    /**\n     * Lifecycle method `willUpdate` is invoked before update.\n     */\n    willUpdate(): void {\n        /* tslint:disable:no-empty */\n        /* tslint:enable:no-empty */\n    }\n\n    /**\n     * Lifecycle method `updated` is invoked after update.\n     */\n    didUpdate(): void {\n        /* tslint:disable:no-empty */\n        /* tslint:enable:no-empty */\n    }\n\n    /**\n     * Lifecycle method `didInvalidate` is invoked after `invalidate` method is invoked.\n     */\n    didInvalidate(): void {\n        /* tslint:disable:no-empty */\n        /* tslint:enable:no-empty */\n    }\n\n    /**\n     * When render method returns `undefined` value, it will create an empty text node.\n     */\n    render(): VNode<any> | undefined {\n        return;\n    }\n\n    /**\n     * Invalidate view.\n     */\n    invalidate(): void {\n        invalidateComponent(this, ComponentFlags.DirtyState);\n    }\n\n    /**\n     * Invalidate context.\n     */\n    invalidateContext(): void {\n        invalidateComponent(this, ComponentFlags.DirtyContext);\n    }\n}\n\n/**\n * Invalidate Component.\n *\n * @param component\n * @param dirtyFlags\n */\nexport function invalidateComponent<P>(component: Component<P>, dirtyFlags: number): void {\n    if (component.flags & ComponentFlags.Mounted) {\n        component.flags |= dirtyFlags;\n        component.didInvalidate();\n        if (!(component.flags & ComponentFlags.InUpdateQueue)) {\n            currentFrame().updateComponent(component);\n        }\n    }\n}\n\n/**\n * Checks props for identity.\n *\n * This function can be used as a wrapper for function expression, or as a class decorator.\n *\n *     const MyComponent = checkPropsIdentity(function(text: string) {\n *         return $h(\"div\").children(text);\n *     });\n *\n *     @checkPropsIdentity\n *     class MyClassComponent extends Component<string> {\n *         render() {\n *             return $h(\"div\").children(this.props);\n *         }\n *     }\n *\n * @param target Component constructor.\n * @returns Component constructor with identity check.\n */\nexport function checkPropsIdentity<P extends ComponentClass<any> | ComponentFunction<any>>(target: P): P {\n    if (target.prototype.render) {\n        target.prototype.isPropsChanged = isPropsNotIdentical;\n    } else {\n        (target as ComponentFunction<any>).isPropsChanged = isPropsNotIdentical;\n    }\n    return target;\n}\n\n/**\n * Checks props for shallow equality.\n *\n * This function can be used as a wrapper for function expression, or as a class decorator.\n *\n *     const MyComponent = checkPropsShallowEquality(function(props: { text: string }) {\n *         return $h(\"div\").children(props.text);\n *     });\n *\n *     @checkPropsShallowEquality\n *     class MyClassComponent extends Component<{ text: string }> {\n *         render() {\n *             return $h(\"div\").children(this.props.text);\n *         }\n *     }\n *\n * @param target Component constructor.\n * @returns Component constructor with identity check.\n */\nexport function checkPropsShallowEquality<P extends ComponentClass<any> | ComponentFunction<any>>(target: P): P {\n    if (target.prototype.render) {\n        target.prototype.isPropsChanged = isPropsNotShallowEqual;\n    } else {\n        (target as ComponentFunction<any>).isPropsChanged = isPropsNotShallowEqual;\n    }\n    return target;\n}\n","import { USER_AGENT, UserAgentFlags } from \"../common/user_agent\";\nimport { NOOP } from \"../common/noop\";\nimport { Context, ROOT_CONTEXT } from \"./context\";\nimport { VNode } from \"./vnode\";\nimport { renderVNode, syncVNode, removeVNode, augmentVNode } from \"./implementation\";\n\n/**\n * Root.\n */\nexport interface Root {\n    container: Element;\n    vNode: VNode<any>;\n    domNode: Node;\n}\n\nconst roots = [] as Root[];\n\n/**\n * Find Root node in container.\n *\n * @param container DOM Node that contains root node.\n * @returns root node or undefined when root node doesn't exist.\n */\nexport function findRoot(container: Element): Root | undefined {\n    for (let i = 0; i < roots.length; i++) {\n        const r = roots[i];\n        if (r.container === container) {\n            return r;\n        }\n    }\n\n    return;\n}\n\n/**\n * Render VNode into container.\n *\n * @param node VNode to render.\n * @param container DOM Node that will contain rendered node.\n * @param context root context, all root contexts should be created from the `ROOT_CONTEXT` instance.\n * @returns rendered Node.\n */\nexport function render<T extends Node>(\n    node: VNode<any> | null,\n    container: Element,\n    context: Context = ROOT_CONTEXT,\n): T | undefined {\n    if (__IVI_DEV__) {\n        if (container === document.body) {\n            throw new Error(\"Rendering in the <body> aren't allowed because of browsers bugs that can't be solved \" +\n                +\"when root container is a body element.\");\n        }\n    }\n\n    let result: Node | undefined;\n    const root = findRoot(container);\n    if (node) {\n        if (root) {\n            result = syncVNode(container, root.vNode, node, context);\n            root.vNode = node;\n            root.domNode = result;\n        } else {\n            result = renderVNode(container, null, node, context);\n            roots.push({\n                container: container,\n                vNode: node,\n                domNode: result,\n            });\n            /**\n             * Fix for the Mouse Event bubbling on iOS devices.\n             *\n             * http://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\n             */\n            if (USER_AGENT & UserAgentFlags.iOS) {\n                (container as HTMLElement).onclick = NOOP;\n            }\n        }\n    } else if (root) {\n        removeVNode(container, root.vNode);\n        const last = roots.pop();\n        if (last !== root && roots.length) {\n            roots[roots.indexOf(root)] = last!;\n        }\n        result = root.domNode;\n    }\n\n    return result as T | undefined;\n}\n\n/**\n * Augment existing DOM tree with a Virtual DOM tree.\n *\n * Augmentation is separated from `render` function to reduce code size when web application doesn't use augmentation.\n * Optimizing javascript compiler should remove all code associated with augmentation when it isn't used.\n *\n * @param node Root VNode.\n * @param container Container DOM Node.\n * @param context root context, all root contexts should be created from the `ROOT_CONTEXT` instance.\n */\nexport function augment(node: VNode<any> | null, container: Element, context: Context = ROOT_CONTEXT): void {\n    if (__IVI_DEV__) {\n        if (container === document.body) {\n            throw new Error(\"Rendering in the <body> aren't allowed because of browsers bugs that can't be solved \" +\n                +\"when root container is a body element.\");\n        }\n    }\n\n    if (node) {\n        augmentVNode(container, container.firstChild!, node, context)\n        roots.push({\n            container: container,\n            vNode: node,\n            domNode: container.firstChild!,\n        });\n        /**\n         * Fix for the Mouse Event bubbling on iOS devices.\n         *\n         * http://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\n         */\n        if (USER_AGENT & UserAgentFlags.iOS) {\n            (container as HTMLElement).onclick = NOOP;\n        }\n    }\n}\n","import { render, Component, $h, $c } from \"ivi\";\n\nclass StatefulComponent extends Component<null> {\n    startTime = Date.now();\n    elapsedSeconds = 0;\n\n    private updateTime = () => {\n        this.elapsedSeconds = Date.now() - this.startTime;\n        this.invalidate();\n        setTimeout(this.updateTime, 50);\n    };\n\n    didMount() {\n        setTimeout(this.updateTime, 50);\n    }\n\n    render() {\n        return $h(\"div\").children(`Elapsed seconds: ${(this.elapsedSeconds / 1000).toFixed(1)}`);\n    }\n}\n\nrender($c(StatefulComponent), document.getElementById(\"app\") !);\n"]}