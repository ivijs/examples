{"version":3,"sources":["node_modules/ivi/src/common/feature_detection.ts"," [synthetic:util/global] "," [synthetic:es6/util/inherits] "," [synthetic:util/defineproperty] "," [synthetic:es6/symbol] "," [synthetic:es6/util/makeiterator] "," [synthetic:es6/util/arrayfromiterable] "," [synthetic:es6/util/arrayfromiterator] "," [synthetic:es6/util/iteratorfromarray] "," [synthetic:util/polyfill] "," [synthetic:es6/array/fill] "," [synthetic:util/owns] "," [synthetic:es6/weakmap] "," [synthetic:es6/map] "," [synthetic:es6/string/repeat] "," [synthetic:util/checkstringargs] "," [synthetic:es6/array/entries] ","node_modules/ivi/src/common/user_agent.ts","node_modules/ivi/src/common/noop.ts","node_modules/ivi/src/events/utils.ts","node_modules/ivi/src/vdom/vnode.ts","node_modules/ivi/src/vdom/vnode_builder.ts","node_modules/ivi/src/vdom/component.ts","node_modules/ivi/src/scheduler/scheduler.ts","node_modules/ivi/src/vdom/context.ts","node_modules/ivi/src/vdom/sync_dom.ts","node_modules/ivi/src/common/dom.ts","node_modules/ivi/src/events/sync_events.ts","node_modules/ivi/src/vdom/implementation.ts","node_modules/ivi/src/events/event_dispatcher.ts","node_modules/ivi/src/events/dispatch_event.ts","node_modules/ivi/src/events/native_event_dispatcher.ts","node_modules/ivi/src/events/traverse_dom.ts","node_modules/ivi/src/events/synthetic_event.ts","node_modules/ivi/src/events/events.ts","node_modules/ivi/src/vdom/root.ts","src/todomvc/main.ts","src/todomvc/state.ts","node_modules/ivi/src/ivi.ts","src/todomvc/ui/header.ts","node_modules/tslib/tslib.es6.js","src/todomvc/ui/footer.ts","src/todomvc/ui/entry_list.ts","src/todomvc/ui/main.ts","src/todomvc/ui/app.ts"],"names":["$jscomp.global","$jscomp.defineProperty","$jscomp.initSymbol","$jscomp.global.Symbol","$jscomp.Symbol","$jscomp.symbolCounter_","$jscomp.SYMBOL_PREFIX","$jscomp.global.Symbol.iterator","$jscomp.arrayIterator","$jscomp.initSymbolIterator","$jscomp.iteratorPrototype","$jscomp.polyfill","$jscomp.makeIterator","$jscomp.owns","$jscomp.iteratorFromArray","FEATURES","opts","Object","defineProperty","get","window","addEventListener","e","ua","navigator","userAgent","USER_AGENT","test","MSStream","NOOP$$module$$build$todomvc","NOOP","getEventTarget$$module$$build$todomvc","getEventTarget","ev","target","correspondingUseElement","nodeType","parentNode","EVENT_CAPTURE_PASSIVE_OPTIONS","EVENT_PASSIVE_OPTIONS","getEventOptions$$module$$build$todomvc","getEventOptions","flags","getDOMInstanceFromVNode$$module$$build$todomvc","getDOMInstanceFromVNode","node","_flags","_instance","root","_children","constructor","VNodeBuilder","tag","props","className","children","_tag","_key","_props","_className","_events","_style","_ref","VNodeBuilder$$module$$build$todomvc.prototype","?.prototype","key","style","events","Array","isArray","normalizeVNodes","trackByKeyChildren","value","checked","ref","$t$$module$$build$todomvc","$t","content","$h$$module$$build$todomvc","$h","tagName","undefined","$i$$module$$build$todomvc","$i","type","$c$$module$$build$todomvc","$c","c","prototype","render","cloneVNode$$module$$build$todomvc","cloneVNode","newChildren","length","i","newNode","_normalizeVNodes$$module$$build$todomvc","_normalizeVNodes","nodes","result","n","push","normalizeVNodes$$module$$build$todomvc","slice","Component","context","owner","depth","_context","_parentContext","_parentDOMNode","invalidate","component","dirtyFlags","updateComponent","scheduler$$module$$build$todomvc.flags","scheduler$$module$$build$todomvc.currentFrame","requestNextFrame","scheduler$$module$$build$todomvc.nextFrame","priority","_componentTasks","group","$jscomp.global.Object.defineProperties","Context","data","from","v","keys","l","k","ROOT_CONTEXT","syncClassName$$module$$build$todomvc","syncClassName","b","setAttribute","syncStyle$$module$$build$todomvc","syncStyle","a","matchCount","bValue","aValue","hasOwnProperty","setDOMProperty$$module$$build$todomvc","setDOMProperty","volume","removeAttribute","charCodeAt","setAttributeNS","XML_NAMESPACE","XLINK_NAMESPACE","syncDOMProps$$module$$build$todomvc","syncDOMProps","syncEvents$$module$$build$todomvc","syncEvents","registerHandler","handler","dispatcher","unregisterHandler","aHandler","bHandler","_updateComponent$$module$$build$todomvc","_updateComponent","oldRoot","componentUpdateContext","newRoot","componentClassRender","vNodeSyncOrReplace","vNodePropagateNewContext","_updateComponentFunction$$module$$build$todomvc","_updateComponentFunction","parent","fn","instance","vNodeMount$$module$$build$todomvc","vNodeMount","vnode","vNodeUnmount$$module$$build$todomvc","vNodeUnmount","vNodeUnmountAll$$module$$build$todomvc","vNodeUnmountAll","vnodes","vNodePropagateNewContext$$module$$build$todomvc","vNodeRemoveChild$$module$$build$todomvc","vNodeRemoveChild","removeChild","componentUpdateContext$$module$$build$todomvc","componentClassRender$$module$$build$todomvc","vNodeRender$$module$$build$todomvc","vNodeRender","child","document","createTextNode","createElement","createElementNS","SVG_NAMESPACE","textContent","childInstance","insertBefore","input","innerHTML","vNodeRenderInto$$module$$build$todomvc","vNodeRenderInto","container","refChild","vNodeCanSync$$module$$build$todomvc","vNodeCanSync","vNodeSync$$module$$build$todomvc","vNodeSync","nodeValue","bParentFlags","aParentFlags","firstChild","aStart","bStart","aEnd","bEnd","aStartNode","bStartNode","aEndNode","bEndNode","aNode","bNode","nextRef","nextPos","next","aLength","bLength","sources","fill","moved","pos","synced","j","keyIndex","Map","set","p","il","u","newProps","vNodeSyncOrReplace$$module$$build$todomvc","newInstance","replaceChild","FrameTasksGroup","_afterTasks","_readTasks","_writeTasks","write","callback","read","clock","microtasks","macrotasks","currentFrame","nextFrame","updateComponents","microtaskNode","microtaskToggle","macrotaskMessage","Math","random","observe","microtaskObserver","MutationObserver","runMicrotasks","characterData","handleWindowMessage","requestNextFrame$$module$$build$todomvc","requestAnimationFrame","handleNextFrame","handleWindowMessage$$module$$build$todomvc","source","tasks","scheduler$$module$$build$todomvc.macrotasks","scheduler$$module$$build$todomvc.clock","handleNextFrame$$module$$build$todomvc","frame","scheduler$$module$$build$todomvc.updateComponents.length","scheduler$$module$$build$todomvc.updateComponents","componentGroups","componentGroup","scheduler$$module$$build$todomvc.updateComponents.pop","pop","runMicrotasks$$module$$build$todomvc","scheduler$$module$$build$todomvc.microtasks.length","scheduler$$module$$build$todomvc.microtasks","scheduleMicrotask$$module$$build$todomvc","scheduleMicrotask","task","scheduler$$module$$build$todomvc.microtasks.push","scheduleMacrotask$$module$$build$todomvc","scheduleMacrotask","postMessage","scheduler$$module$$build$todomvc.macrotasks.push","EventDispatcherSubscription","filter","_next","_prev","cancel","isDispatching","_nextSubscription","counter","deactivate","_disposeQueue","EventDispatcher","activate","subscribe","s","dispatchEventToLocalEventHandlers$$module$$build$todomvc","dispatchEventToLocalEventHandlers","dispatchTarget","event","matchFlags","currentTarget","handlers","NativeEventDispatcher","name","eventType","_dispatch","dispatchNativeEvent","bind","_deactivating","$jscomp.inherits","timeStamp","dispatchEventToSubscribers","matches","parentElement","bubble","preventDefault","removeEventListener","SyntheticEvent","_data","stopPropagation","stopImmediatePropagation","defaultPrevented","bubbles","cancelable","isTrusted","eventPhase","CAPTURING_PHASE","AT_TARGET","BUBBLING_PHASE","SyntheticUIEvent","detail","view","SyntheticKeyboardEvent","getModifierState","keyArg","altKey","char","charCode","ctrlKey","keyCode","locale","location","metaKey","repeat","shiftKey","which","code","DOM_KEY_LOCATION_JOYSTICK","DOM_KEY_LOCATION_LEFT","DOM_KEY_LOCATION_MOBILE","DOM_KEY_LOCATION_NUMPAD","DOM_KEY_LOCATION_RIGHT","DOM_KEY_LOCATION_STANDARD","SyntheticMouseEvent","button","buttons","clientX","clientY","fromElement","layerX","layerY","movementX","movementY","offsetX","offsetY","pageX","pageY","relatedTarget","screenX","screenY","toElement","x","y","SyntheticFocusEvent","createEventHandler$$module$$build$todomvc","createEventHandler","blur","change","click","dblclick","keydown","roots","render$$module$$build$todomvc","App","state","r","newVNode","newContext","currentVNode","domNode","invalidated","onclick","last","indexOf","Entry","id","title","toString","completed","AppState","onChange","entries","_nextEntryId","_dirty","setLocation","addEntry","trim","removeEntry","entry","items","item","splice","toggleAll","forEach","Header","$jscomp.arrayFromIterable","arguments","inputValue","onKeyDown","NativeEventDispatchers$$module$$build$todomvc.keydown","onInput","NativeEventDispatchers$$module$$build$todomvc.input","keyDown","Footer","onClickClearCompleted","onClick","NativeEventDispatchers$$module$$build$todomvc.click","onClearCompleted","activeEntries","completedEntries","EntryView","editTitle","editing","onClickDestroy","appState","onChangeToggle","NativeEventDispatchers$$module$$build$todomvc.change","onLabelDoubleClick","onDoubleClick","NativeEventDispatchers$$module$$build$todomvc.dblclick","onTitleChange","onBlur","NativeEventDispatchers$$module$$build$todomvc.blur","newTitle","doubleClick","focus","EntryList","map","Main","onAddEntry","this.onAddEntry","text","this.onClearCompleted","newItems","Route","path","routeDispatch$$module$$build$todomvc","routeDispatch","routes","substr","match","getElementById","update","initRouter$$module$$build$todomvc","defaultPath","notFound","prevHash","decodeURIComponent","hash","newHash","update$$module$$build$todomvc"],"mappings":"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","file":"bundle.js","sourceRoot":"../..","sourcesContent":["/**\n * Feature Detection is used to implement polyfills or just disable some features when browser doesn't support them.\n * For example, when browser doesn't support passive events, we can just ignore it and always use active events.\n *\n * NOTE: Do not implement feature detection for features that aren't used in `ivi` library.\n */\n\n/**\n * Feature Flags.\n */\nexport const enum FeatureFlags {\n    /**\n     * Passive event listeners are a new feature in the DOM spec that enable developers to opt-in to better scroll\n     * performance by eliminating the need for scrolling to block on touch and wheel event listeners. Developers can\n     * annotate touch and wheel listeners with {passive: true} to indicate that they will never invoke preventDefault.\n     *\n     * https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n     */\n    PassiveEvents = 1,\n    /**\n     * The `performancemark()` method creates a timestamp in the browser's performance entry buffer with the given\n     * name.\n     *\n     * https://developer.mozilla.org/en-US/docs/Web/API/Performance/mark\n     */\n    DevModePerfMarks = 1 << 1,\n}\n\n/**\n * Supported Features, see `FeatureFlags` for details.\n */\nexport let FEATURES: FeatureFlags = 0;\n\nif (__IVI_BROWSER__) {\n    /**\n     * Passive Events:\n     *\n     * https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n     */\n    try {\n        // Test via a getter in the options object to see if the passive property is accessed\n        const opts = Object.defineProperty({}, \"passive\", {\n            get: function () {\n                FEATURES |= FeatureFlags.PassiveEvents;\n            },\n        });\n        window.addEventListener(\"test\", null as any as (ev: Event) => void, opts);\n    } catch (e) {\n        /* tslint:disable:no-empty */\n        /* tslint:enable:no-empty */\n    }\n\n    /**\n     * Check `performance.mark` availability.\n     */\n    if (__IVI_DEV__) {\n        if (performance && performance.mark && performance.measure) {\n            FEATURES |= FeatureFlags.DevModePerfMarks;\n        }\n    }\n}\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"/**\n * User Agent detection is used to fix some quirks like iOS event bubbling, etc.\n *\n * NOTE: Do not implement any browser detection that aren't used in `ivi` library.\n */\n\nconst ua = __IVI_BROWSER__ && navigator ? navigator.userAgent : \"\";\n\n/**\n * User Agent Flags.\n */\nexport const enum UserAgentFlags {\n    /**\n     * iOS browser (iPad, iPhone, iPod).\n     */\n    iOS = 1,\n    /**\n     * Android browser.\n     */\n    Android = 1 << 1,\n};\n\n/**\n * User Agent, see `UserAgentFlags` for details.\n */\nexport let USER_AGENT: UserAgentFlags = 0;\n\nif (__IVI_BROWSER__) {\n    if (/iPad|iPhone|iPod/.test(ua) && !(window as any).MSStream) {\n        USER_AGENT |= UserAgentFlags.iOS;\n    }\n\n    if (/Android/.test(ua)) {\n        USER_AGENT |= UserAgentFlags.Android;\n    }\n}\n","\n/**\n * NOOP function.\n */\nexport function NOOP() {\n    /* tslint:disable:no-empty */\n    /* tslint:enable:no-empty */\n}\n","import { FEATURES, FeatureFlags } from \"../common/feature_detection\";\nimport { NativeEventDispatcherFlags } from \"./flags\";\nimport { EventHandlerList } from \"./event_handler\";\n\n/**\n * Gets the target node from a native Event.\n *\n * @param ev Native DOM Event.\n * @returns Target Node.\n */\nexport function getEventTarget(ev: Event): EventTarget {\n    let target = ev.target || window;\n\n    /**\n     * Fix for `SVGUseElement` in old browsers.\n     */\n    if ((target as any).correspondingUseElement) {\n        target = (target as any).correspondingUseElement;\n    }\n\n    /**\n     * Safari fires events on Text Nodes.\n     *\n     * http://www.quirksmode.org/js/events_properties.html\n     */\n    return (target as Node).nodeType === 3 ? (target as Node).parentNode! : target;\n}\n\n/**\n * `{ capture: true, passive: true }` object that should be used as a third parameter in `addEventListener`.\n */\nexport const EVENT_CAPTURE_PASSIVE_OPTIONS =\n    (FEATURES & FeatureFlags.PassiveEvents) ?\n        { \"capture\": true, \"passive\": true } :\n        true;\n\n/**\n * `{ passive: true }` object that should be used as a third parameter in `addEventListener`.\n */\nexport const EVENT_PASSIVE_OPTIONS =\n    (FEATURES & FeatureFlags.PassiveEvents) ?\n        { \"passive\": true } :\n        false;\n\n/**\n * Get Event options that should be used when adding Event Listener.\n *\n * @param flags See `EventDispatcherFlags` for details.\n * @returns Option object that can be used as a 3rd parameter in `addEventListener` call.\n */\nexport function getEventOptions(flags: NativeEventDispatcherFlags): boolean | { capture?: boolean, passive?: boolean } {\n    if (flags & NativeEventDispatcherFlags.Passive) {\n        if (flags & NativeEventDispatcherFlags.Capture) {\n            return EVENT_CAPTURE_PASSIVE_OPTIONS;\n        }\n        return EVENT_PASSIVE_OPTIONS;\n    }\n    if (flags & NativeEventDispatcherFlags.Capture) {\n        return true;\n    }\n    return false;\n}\n\n/**\n * Property that is used on DOM Nodes to store EventProps object.\n */\nexport const DOM_NODE_EVENTS_PROPERTY = \"_ev\";\n\n/**\n * Set Event Handler list to DOM Node.\n *\n * @param node DOM Node.\n * @param events Event Handler List.\n */\nexport function setEventHandlerListToDOMNode(node: Node, events: EventHandlerList | undefined): void {\n    (node as any)[DOM_NODE_EVENTS_PROPERTY] = events;\n}\n\n/**\n * Get Event Handler list from DOM Node.\n *\n * @param node DOM Node.\n * @returns EventHandlerList or undefined if DOM Node doesn't listen for any events.\n */\nexport function getEventHandlerListFromDOMNode(node: Node): EventHandlerList | undefined {\n    return (node as any)[DOM_NODE_EVENTS_PROPERTY];\n}\n","import { EventHandlerList } from \"../events/event_handler\";\nimport { CSSStyleProps } from \"./dom_props\";\nimport { VNodeFlags } from \"./flags\";\nimport { ComponentClass, ComponentFunction, Component } from \"./component\";\nimport { ElementDescriptor } from \"./element_descriptor\";\n\n/**\n * VNode object is the core object in ivi Virtual DOM, it can represent any node type.\n */\nexport interface VNode<P> {\n    /**\n     * Flags, see `VNodeFlags` for details.\n     */\n    _flags: VNodeFlags;\n    /**\n     * Tag name of the element.\n     *\n     * When VNode represents a Component, tag property should contain reference to a `ComponentClass` if it is a\n     * stateful component or `ComponentFunction` for stateless components.\n     */\n    _tag: string | ComponentClass<any> | ComponentFunction<any> | ElementDescriptor<any> | null;\n    /**\n     * Children reconciliation algorithm is using key property to find the same node in the previous children array. Key\n     * should be unique among its siblings.\n     */\n    _key: any;\n    /**\n     * Properties.\n     */\n    _props: P | null;\n    /**\n     * Class name.\n     */\n    _className: string | null;\n    /**\n     * Style.\n     */\n    _style: CSSStyleProps | null;\n    /**\n     * Events.\n     */\n    _events: EventHandlerList | null;\n    /**\n     * Children property can contain flat array of children virtual nodes, or text if it contains a single text node\n     * child.\n     *\n     * When virtual node represents an input field, children property will contain input value.\n     */\n    _children: VNode<any>[] | VNode<any> | string | number | boolean | null | undefined;\n    /**\n     * Reference to HTML node or Component instance. It will be available after virtual node is created or synced. Each\n     * time VNode is synced, reference will be transferred from the old VNode to the new one.\n     */\n    _instance: Node | Component<any> | null;\n    /**\n     * Ref callback.\n     */\n    _ref: ((ref: Node | Component<any> | null) => void) | null;\n    /**\n     * Unique ID thas is available in Dev Mode.\n     */\n    _debugId: number;\n}\n\n/**\n * Check if VNode is representing a Text node.\n *\n * @param node VNode.\n * @returns true when VNode is representing a Text node.\n */\nexport function isTextNode(node: VNode<any>): boolean {\n    return !!(node._flags & VNodeFlags.Text);\n}\n\n/**\n * Check if VNode is representing an Element.\n *\n * @param node VNode.\n * @returns true when VNode is representing an element node.\n */\nexport function isElementNode(node: VNode<any>): boolean {\n    return !!(node._flags & VNodeFlags.Element);\n}\n\n/**\n * Check if VNode is representing an SVG Element.\n *\n * @param node VNode.\n * @returns true when VNode is representing a text node.\n */\nexport function isSVGNode(node: VNode<any>): boolean {\n    return !!(node._flags & VNodeFlags.SvgElement);\n}\n\n/**\n * Check if VNode is representing a Component.\n *\n * @param node VNode.\n * @returns true when VNode is representing a Component.\n */\nexport function isComponentNode(node: VNode<any>): boolean {\n    return !!(node._flags & VNodeFlags.Component);\n}\n\n/**\n * Get reference to a DOM node from a VNode object.\n *\n * @param node VNode which contains reference to a DOM node.\n * @returns null if VNode doesn't have a reference to a DOM node.\n */\nexport function getDOMInstanceFromVNode<T extends Node>(node: VNode<any>): T | null {\n    if (node._flags & VNodeFlags.Component) {\n        if (node._flags & VNodeFlags.ComponentClass) {\n            return getDOMInstanceFromVNode<T>((node._instance as Component<any>).root!);\n        } else {\n            return getDOMInstanceFromVNode<T>(node._children as VNode<any>);\n        }\n    }\n    return node._instance as T;\n}\n\n/**\n * Get reference to a Component instance from a VNode object.\n *\n * @param node VNode which contains reference to a Component instance.\n * @returns null if VNode doesn't have a reference to a Component instance.\n */\nexport function getComponentRef<P>(node: VNode<P>): Component<P> | null {\n    if (__IVI_DEV__) {\n        if (!(node._flags & VNodeFlags.Component)) {\n            throw new Error(\"Failed to get component reference: VNode should represent a Component.\");\n        }\n    }\n    return node._instance as Component<P> | null;\n}\n","import { nextDebugId } from \"../common/dev_mode\";\nimport { InputType } from \"../common/dom\";\nimport { VNode } from \"./vnode\";\nimport { VNodeFlags, ElementDescriptorFlags } from \"./flags\";\nimport { ComponentFunction, ComponentClass, Component } from \"./component\";\nimport { ElementDescriptor } from \"./element_descriptor\";\nimport { EventHandlerList } from \"../events/event_handler\";\nimport {\n    HTMLAnchorElementProps, HTMLElementProps, HTMLAppletElementProps, HTMLAreaElementProps, HTMLAudioElementProps,\n    HTMLBaseElementProps, HTMLBaseFontElementProps, HTMLBodyElementProps, HTMLBRElementProps, HTMLButtonElementProps,\n    HTMLCanvasElementProps, HTMLQuoteElementProps, HTMLTableCaptionElementProps, HTMLTableColElementProps,\n    HTMLDataListElementProps, HTMLModElementProps, HTMLDirectoryElementProps, HTMLDivElementProps,\n    HTMLDListElementProps, HTMLEmbedElementProps, HTMLFieldSetElementProps, HTMLFontElementProps, HTMLFormElementProps,\n    HTMLFrameElementProps, HTMLFrameSetElementProps, HTMLHeadElementProps, HTMLHeadingElementProps, HTMLHRElementProps,\n    HTMLHtmlElementProps, HTMLIFrameElementProps, HTMLImageElementProps, HTMLInputElementProps, HTMLLabelElementProps,\n    HTMLLegendElementProps, HTMLLIElementProps, HTMLLinkElementProps, HTMLMapElementProps, HTMLMarqueeElementProps,\n    HTMLMenuElementProps, HTMLMetaElementProps, HTMLMeterElementProps, HTMLObjectElementProps, HTMLOListElementProps,\n    HTMLOptGroupElementProps, HTMLOptionElementProps, HTMLParagraphElementProps, HTMLParamElementProps,\n    HTMLPictureElementProps, HTMLPreElementProps, HTMLProgressElementProps, HTMLScriptElementProps,\n    HTMLSelectElementProps, HTMLSourceElementProps, HTMLSpanElementProps, HTMLStyleElementProps,\n    HTMLTableDataCellElementProps, HTMLTableElementProps, HTMLTableHeaderCellElementProps, HTMLTableRowElementProps,\n    HTMLTableSectionElementProps, HTMLTemplateElementProps, HTMLTextAreaElementProps, HTMLTitleElementProps,\n    HTMLTrackElementProps, HTMLUListElementProps, HTMLUnknownElementProps, HTMLVideoElementProps, HTMLMediaElementProps,\n    MSHTMLWebViewElementProps,\n\n    SVGCircleElementProps, SVGClipPathElementProps, SVGDefsElementProps, SVGDescElementProps, SVGEllipseElementProps,\n    SVGFEBlendElementProps, SVGFEColorMatrixElementProps, SVGFEComponentTransferElementProps,\n    SVGFECompositeElementProps, SVGFEConvolveMatrixElementProps, SVGFEDiffuseLightingElementProps,\n    SVGFEDisplacementMapElementProps, SVGFEDistantLightElementProps, SVGFEFloodElementProps, SVGFEFuncAElementProps,\n    SVGFEFuncBElementProps, SVGFEFuncGElementProps, SVGFEFuncRElementProps, SVGFEGaussianBlurElementProps,\n    SVGFEImageElementProps, SVGFEMergeElementProps, SVGFEMergeNodeElementProps, SVGFEMorphologyElementProps,\n    SVGFEOffsetElementProps, SVGFEPointLightElementProps, SVGFESpecularLightingElementProps, SVGFESpotLightElementProps,\n    SVGFETileElementProps, SVGFETurbulenceElementProps, SVGFilterElementProps, SVGForeignObjectElementProps,\n    SVGGElementProps, SVGImageElementProps, SVGLinearGradientElementProps, SVGLineElementProps, SVGMarkerElementProps,\n    SVGMaskElementProps, SVGMetadataElementProps, SVGPathElementProps, SVGPatternElementProps, SVGPolygonElementProps,\n    SVGPolylineElementProps, SVGRadialGradientElementProps, SVGRectElementProps, SVGStopElementProps,\n    SVGSVGElementProps, SVGSwitchElementProps, SVGSymbolElementProps, SVGTextElementProps, SVGTextPathElementProps,\n    SVGTSpanElementProps, SVGViewElementProps, SVGUseElementProps, SVGElementProps,\n\n    CSSStyleProps,\n} from \"./dom_props\";\n\n/**\n * VNode Builder provides a chain-method API to build VNodes.\n *\n * VNodeBuilder class has a parametric type `P` to specify `props` type.\n *\n *     const vnode = $h(\"div\", \"div-class-name\")\n *         .props({ id: \"div-id\" })\n *         .events({ click: Events.onClick((e) => console.log(\"click event\", e)) })\n *         .children(\"Hello\");\n *\n * There are several factory functions that create VNode Builder objects:\n *\n *     // Basic HTML Elements\n *     $h(tagName: string, className?: string): VNodeBuilder<HTMLElementProps | null>;\n *\n *     // SVG Elements\n *     $s(tagName: string, className?: string): VNodeBuilder<SVGElementProps | null>;\n *\n *     // Components\n *     $c<P>(component: ComponentClass<P> | ComponentFunction<P>, props: P): VNodeBuilder<P>;\n *\n *     // Input Elements and TextArea (specifying type as \"textarea\" will create HTMLTextAreaElement)\n *     $i(type: string, className?: string): VNodeBuilder<HTMLInputElementProps | HTMLTextAreaElementProps | null>;\n *\n *     // Media Elements (Video and Audio)\n *     $m(tagName: string, className?: string): VNodeBuilder<HTMLMediaElementProps | null>;\n *\n *     // Text Nodes\n *     $t(text: string): VNodeBuilder<null>;\n *\n * @final\n */\nexport class VNodeBuilder<P> implements VNode<P> {\n    _flags: VNodeFlags;\n    _tag: string | ComponentClass<any> | ComponentFunction<any> | ElementDescriptor<any> | null;\n    _key: any;\n    _props: P | null;\n    _className: string | null;\n    _style: CSSStyleProps | null;\n    _events: EventHandlerList | null;\n    _children: VNode<any>[] | VNode<any> | string | number | boolean | null | undefined;\n    _instance: Node | Component<any> | null;\n    _ref: ((ref: Node | Component<any> | null) => void) | null;\n    _debugId: number;\n\n    constructor(\n        flags: number,\n        tag: string | ComponentFunction<P> | ComponentClass<P> | ElementDescriptor<any> | null,\n        props: P | null,\n        className: string | null,\n        children: VNode<any>[] | VNode<any> | string | number | boolean | null | undefined,\n    ) {\n        this._flags = flags;\n        this._tag = tag;\n        this._key = null;\n        this._props = props;\n        this._className = className;\n        this._style = null;\n        this._events = null;\n        this._children = children;\n        this._instance = null;\n        this._ref = null;\n        if (__IVI_DEV__) {\n            this._debugId = nextDebugId();\n        }\n    }\n\n    /**\n     * Set key.\n     *\n     * Children reconciliation algorithm is using key property to find the same node in the previous children array. Key\n     * should be unique among its siblings.\n     *\n     * @param key Any object that should be unique among its siblings.\n     * @returns VNodeBuilder.\n     */\n    key(key: any): VNodeBuilder<P> {\n        this._key = key;\n        return this;\n    }\n\n    /**\n     * Set className.\n     *\n     * @param className.\n     * @returns VNodeBuilder.\n     */\n    className(className: string | null): VNodeBuilder<P> {\n        if (__IVI_DEV__) {\n            if (!(this._flags & VNodeFlags.Element)) {\n                throw new Error(\"Failed to set className, className is available on element nodes only.\");\n            }\n            if (className !== null) {\n                if (this._flags & VNodeFlags.ElementDescriptor) {\n                    const d = this._tag as ElementDescriptor<P>;\n                    if (d._flags & ElementDescriptorFlags.ProtectClassName) {\n                        throw new Error(\"Failed to set className, className is protected by an ElementDescriptor.\");\n                    }\n                }\n            }\n        }\n        this._className = className;\n        return this;\n    }\n\n    /**\n     * Set style.\n     *\n     * @param style.\n     * @returns VNodeBuilder.\n     */\n    style(style: CSSStyleProps | null): VNodeBuilder<P> {\n        if (__IVI_DEV__) {\n            if (!(this._flags & VNodeFlags.Element)) {\n                throw new Error(\"Failed to set style, style is available on element nodes only.\");\n            }\n\n            if (style !== null) {\n                if (this._flags & VNodeFlags.ElementDescriptor) {\n                    const d = this._tag as ElementDescriptor<P>;\n                    if (d._flags & ElementDescriptorFlags.ProtectStyle) {\n                        if (d._protectedStyle) {\n                            const keys = Object.keys(d._protectedStyle);\n                            for (let i = 0; i < keys.length; i++) {\n                                const key = keys[i];\n                                if (style.hasOwnProperty(key)) {\n                                    throw new Error(`Failed to set style, \"${key}\" style is protected by an ` +\n                                        `ElementDescriptor.`);\n                                }\n                            }\n                        } else {\n                            throw new Error(\"Failed to set style, style is protected by an ElementDescriptor.\");\n                        }\n                    }\n                }\n            }\n        }\n        this._style = style;\n        return this;\n    }\n\n    /**\n     * Set events.\n     *\n     * @param events.\n     * @returns VNodeBuilder.\n     */\n    events(events: EventHandlerList | null): VNodeBuilder<P> {\n        if (__IVI_DEV__) {\n            if (!(this._flags & VNodeFlags.Element)) {\n                throw new Error(\"Failed to set events, events are available on element nodes only.\");\n            }\n        }\n        this._events = events;\n        return this;\n    }\n\n    /**\n     * Set props.\n     *\n     * @param props.\n     * @returns VNodeBuilder.\n     */\n    props(props: P): VNodeBuilder<P> {\n        if (__IVI_DEV__) {\n            if (props) {\n                if (this._flags & VNodeFlags.ElementDescriptor) {\n                    const d = this._tag as ElementDescriptor<P>;\n                    if (d._flags & ElementDescriptorFlags.ProtectProps) {\n                        if (d._protectedProps) {\n                            const keys = Object.keys(d._protectedProps);\n                            for (let i = 0; i < keys.length; i++) {\n                                const key = keys[i];\n                                if (props.hasOwnProperty(key)) {\n                                    throw new Error(`Failed to set props, \"${key}\" property is protected by an ` +\n                                        `ElementDescriptor.`);\n                                }\n                            }\n                        } else {\n                            throw new Error(\"Failed to set props, props are protected by an ElementDescriptor.\");\n                        }\n                    }\n                }\n            }\n        }\n        this._props = props;\n        return this;\n    }\n\n    /**\n     * Set children.\n     *\n     * @param children Children can be a simple string, single VNode or recursive list of VNodes with strings and null\n     *   values. It will automatically normalize recursive lists by flattening, filtering out null values and replacing\n     *   strings with text nodes.\n     * @returns VNodeBuilder.\n     */\n    children(children: VNodeRecursiveArray | VNode<any> | string | number | boolean | null): VNodeBuilder<P> {\n        if (__IVI_DEV__) {\n            if (!(this._flags & VNodeFlags.Element)) {\n                throw new Error(\"Failed to set children, children are available on element nodes only.\");\n            }\n            if (this._flags & VNodeFlags.InputElement) {\n                throw new Error(\"Failed to set children, input elements can't have children.\");\n            }\n            if (this._flags & VNodeFlags.MediaElement) {\n                throw new Error(\"Failed to set children, media elements can't have children.\");\n            }\n        }\n        if (Array.isArray(children)) {\n            this._flags |= VNodeFlags.ChildrenArray;\n            this._children = normalizeVNodes(children);\n        } else {\n            if (typeof children === \"object\") {\n                this._flags |= VNodeFlags.ChildrenVNode;\n            } else {\n                this._flags |= VNodeFlags.ChildrenBasic;\n            }\n            this._children = children;\n        }\n        return this;\n    }\n\n    /**\n     * Set children that will be tracked by `key` property.\n     *\n     * To support use cases with static nodes at the beginning and at the end of the children list, children list may\n     * contain nodes with `null` keys at the beginning of the list and at the end, children with `null` keys shouldn't\n     * move.\n     *\n     * NOTE: If you've found any other use case that can't be easily solved with the current `trackByKeyChildren`\n     * implementation, feel free to submit an issue, but most of the time it is better to help browsers with layout\n     * calculation, and it will be better to wrap nodes that aren't moved into its own container nodes and specify css\n     * containment property. Use cases with \"semantic\" markup probably will be ignored.\n     *\n     * @param children Recursive lists of vnodes that can contain null values. It will automatically normalize recursive\n     *   lists by flattening and filtering out null values.\n     * @returns VNodeBuilder.\n     */\n    trackByKeyChildren(children: VNodeRecursiveArray | null): VNodeBuilder<P> {\n        if (__IVI_DEV__) {\n            if (!(this._flags & VNodeFlags.Element)) {\n                throw new Error(\"Failed to set children, children are available on element nodes only.\");\n            }\n            if (this._flags & VNodeFlags.InputElement) {\n                throw new Error(\"Failed to set children, input elements can't have children.\");\n            }\n            if (this._flags & VNodeFlags.MediaElement) {\n                throw new Error(\"Failed to set children, media elements can't have children.\");\n            }\n\n        }\n        this._flags |= VNodeFlags.TrackByKeyChildren | VNodeFlags.ChildrenArray;\n        if (children) {\n            this._children = normalizeVNodes(children);\n        }\n\n        if (__IVI_DEV__) {\n            const childrenArray = this._children as VNode<any>[];\n            let child: VNode<any>;\n            let start = 0;\n            let end = childrenArray.length - 1;\n            while (start <= end) {\n                child = childrenArray[start];\n                if (child._key !== null) {\n                    break;\n                }\n                start++;\n            }\n            while (start <= end) {\n                child = childrenArray[end];\n                if (child._key !== null) {\n                    break;\n                }\n                end--;\n            }\n\n            if (start <= end) {\n                const usedKeys = new Set<any>();\n                while (start <= end) {\n                    child = childrenArray[start];\n                    const key = child._key;\n                    if (key === null) {\n                        throw new Error(`Failed to set children, invalid keyed children list, keyed ` +\n                            `children should have a shape like [non-keyed, keyed, non-keyed].`);\n                    }\n                    if (usedKeys.has(key)) {\n                        throw new Error(`Failed to set children, invalid children list, key: \"${key}\" is ` +\n                            `used multiple times.`);\n                    }\n                    usedKeys.add(key);\n                    start++;\n                }\n            }\n        }\n        return this;\n    }\n\n    /**\n     * Set children as an innerHTML string. It is potentially vulnerable to XSS attacks.\n     *\n     * @param html innerHTML in a string format.\n     * @returns VNodeBuilder.\n    */\n    unsafeHTML(html: string): VNodeBuilder<P> {\n        if (__IVI_DEV__) {\n            if (!(this._flags & VNodeFlags.Element)) {\n                throw new Error(\"Failed to set unsafeHTML, unsafeHTML is available on element nodes only.\");\n            }\n            if (this._flags & VNodeFlags.InputElement) {\n                throw new Error(\"Failed to set unsafeHTML, input elements can't have innerHTML.\");\n            }\n            if (this._flags & VNodeFlags.MediaElement) {\n                throw new Error(\"Failed to set children, media elements can't have children.\");\n            }\n        }\n        this._flags |= VNodeFlags.UnsafeHTML;\n        this._children = html;\n        return this;\n    }\n\n    /**\n     * Set HTMLInputElement/HTMLTextAreaElement value property.\n     *\n     * @param text Text value.\n     * @returns VNodeBuilder.\n     */\n    value(value: string | null): VNodeBuilder<P> {\n        if (__IVI_DEV__) {\n            if (!(this._flags & VNodeFlags.InputElement)) {\n                throw new Error(\"Failed to set value, value is available on input elements only.\");\n            }\n        }\n        this._children = value;\n        return this;\n    }\n\n    /**\n     * Set HTMLInputElement checked property.\n     *\n     * @param text Text value.\n     * @returns VNodeBuilder.\n     */\n    checked(checked: boolean | null): VNodeBuilder<P> {\n        if (__IVI_DEV__) {\n            if (!(this._flags & VNodeFlags.InputElement)) {\n                throw new Error(\"Failed to set checked, checked is available on input elements only.\");\n            }\n            if (!isInputTypeSupportsCheckedValue(this._tag as InputType)) {\n                throw new Error(`Failed to set checked, input elements with type ${this._tag} doesn't support `\n                    + `checked value.`);\n            }\n        }\n        this._children = checked;\n        return this;\n    }\n\n    /**\n     * Set ref callback.\n     *\n     * When VNode is mounted ref callback will be invoked with a Node value for DOM Elements or Component instance for\n     * components.\n     *\n     * When VNode is unmounted ref callback will be invoked with a `null` value.\n     *\n     * @param ref callback.\n     * @returns VNodeBuilder.\n     */\n    ref(ref: (ref: Node | null) => void): VNodeBuilder<P>;\n    ref(ref: (ref: Component<any> | null) => void): VNodeBuilder<P>;\n    ref(ref: ((ref: Node | null) => void) | ((ref: Component<any> | null) => void)): VNodeBuilder<P> {\n        this._ref = ref;\n        return this;\n    }\n}\n\nexport type VNodeRecursiveListValue = VNodeRecursiveArray | VNode<any> | string | number | boolean | null;\n/**\n * Recursive VNode List.\n */\nexport interface VNodeRecursiveArray extends Array<VNodeRecursiveListValue> { }\n\n/**\n * Create a VNodeBuilder representing a Text node.\n *\n * @param context Text content.\n * @returns VNodeBuilder object.\n */\nexport function $t(content: string | number | boolean | null): VNodeBuilder<null> {\n    return new VNodeBuilder<null>(VNodeFlags.Text, null, null, null, content);\n}\n\n/* tslint:disable:max-line-length */\n/**\n * Create a VNodeBuilder representing an Element node.\n *\n * @param tagName HTML Element tag name.\n * @param props HTML Element props.\n * @returns VNodeBuilder object.\n */\nexport function $h(tagName: \"a\", className?: string): VNodeBuilder<HTMLAnchorElementProps | null>;\nexport function $h(tagName: \"abbr\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"acronym\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"address\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"applet\", className?: string): VNodeBuilder<HTMLAppletElementProps | null>;\nexport function $h(tagName: \"area\", className?: string): VNodeBuilder<HTMLAreaElementProps | null>;\nexport function $h(tagName: \"article\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"aside\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"b\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"base\", className?: string): VNodeBuilder<HTMLBaseElementProps | null>;\nexport function $h(tagName: \"basefont\", className?: string): VNodeBuilder<HTMLBaseFontElementProps | null>;\nexport function $h(tagName: \"bdo\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"big\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"blockquote\", className?: string): VNodeBuilder<HTMLQuoteElementProps | null>;\nexport function $h(tagName: \"body\", className?: string): VNodeBuilder<HTMLBodyElementProps | null>;\nexport function $h(tagName: \"br\", className?: string): VNodeBuilder<HTMLBRElementProps | null>;\nexport function $h(tagName: \"button\", className?: string): VNodeBuilder<HTMLButtonElementProps | null>;\nexport function $h(tagName: \"canvas\", className?: string): VNodeBuilder<HTMLCanvasElementProps | null>;\nexport function $h(tagName: \"caption\", className?: string): VNodeBuilder<HTMLTableCaptionElementProps | null>;\nexport function $h(tagName: \"center\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"cite\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"code\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"col\", className?: string): VNodeBuilder<HTMLTableColElementProps | null>;\nexport function $h(tagName: \"colgroup\", className?: string): VNodeBuilder<HTMLTableColElementProps | null>;\nexport function $h(tagName: \"datalist\", className?: string): VNodeBuilder<HTMLDataListElementProps | null>;\nexport function $h(tagName: \"dd\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"del\", className?: string): VNodeBuilder<HTMLModElementProps | null>;\nexport function $h(tagName: \"dfn\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"dir\", className?: string): VNodeBuilder<HTMLDirectoryElementProps | null>;\nexport function $h(tagName: \"div\", className?: string): VNodeBuilder<HTMLDivElementProps | null>;\nexport function $h(tagName: \"dl\", className?: string): VNodeBuilder<HTMLDListElementProps | null>;\nexport function $h(tagName: \"dt\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"em\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"embed\", className?: string): VNodeBuilder<HTMLEmbedElementProps | null>;\nexport function $h(tagName: \"fieldset\", className?: string): VNodeBuilder<HTMLFieldSetElementProps | null>;\nexport function $h(tagName: \"figcaption\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"figure\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"font\", className?: string): VNodeBuilder<HTMLFontElementProps | null>;\nexport function $h(tagName: \"footer\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"form\", className?: string): VNodeBuilder<HTMLFormElementProps | null>;\nexport function $h(tagName: \"frame\", className?: string): VNodeBuilder<HTMLFrameElementProps | null>;\nexport function $h(tagName: \"frameset\", className?: string): VNodeBuilder<HTMLFrameSetElementProps | null>;\nexport function $h(tagName: \"h1\", className?: string): VNodeBuilder<HTMLHeadingElementProps | null>;\nexport function $h(tagName: \"h2\", className?: string): VNodeBuilder<HTMLHeadingElementProps | null>;\nexport function $h(tagName: \"h3\", className?: string): VNodeBuilder<HTMLHeadingElementProps | null>;\nexport function $h(tagName: \"h4\", className?: string): VNodeBuilder<HTMLHeadingElementProps | null>;\nexport function $h(tagName: \"h5\", className?: string): VNodeBuilder<HTMLHeadingElementProps | null>;\nexport function $h(tagName: \"h6\", className?: string): VNodeBuilder<HTMLHeadingElementProps | null>;\nexport function $h(tagName: \"head\", className?: string): VNodeBuilder<HTMLHeadElementProps | null>;\nexport function $h(tagName: \"header\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"hgroup\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"hr\", className?: string): VNodeBuilder<HTMLHRElementProps | null>;\nexport function $h(tagName: \"html\", className?: string): VNodeBuilder<HTMLHtmlElementProps | null>;\nexport function $h(tagName: \"i\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"iframe\", className?: string): VNodeBuilder<HTMLIFrameElementProps | null>;\nexport function $h(tagName: \"img\", className?: string): VNodeBuilder<HTMLImageElementProps | null>;\nexport function $h(tagName: \"ins\", className?: string): VNodeBuilder<HTMLModElementProps | null>;\nexport function $h(tagName: \"isindex\", className?: string): VNodeBuilder<HTMLUnknownElementProps | null>;\nexport function $h(tagName: \"kbd\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"keygen\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"label\", className?: string): VNodeBuilder<HTMLLabelElementProps | null>;\nexport function $h(tagName: \"legend\", className?: string): VNodeBuilder<HTMLLegendElementProps | null>;\nexport function $h(tagName: \"li\", className?: string): VNodeBuilder<HTMLLIElementProps | null>;\nexport function $h(tagName: \"link\", className?: string): VNodeBuilder<HTMLLinkElementProps | null>;\nexport function $h(tagName: \"listing\", className?: string): VNodeBuilder<HTMLPreElementProps | null>;\nexport function $h(tagName: \"map\", className?: string): VNodeBuilder<HTMLMapElementProps | null>;\nexport function $h(tagName: \"mark\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"marquee\", className?: string): VNodeBuilder<HTMLMarqueeElementProps | null>;\nexport function $h(tagName: \"menu\", className?: string): VNodeBuilder<HTMLMenuElementProps | null>;\nexport function $h(tagName: \"meta\", className?: string): VNodeBuilder<HTMLMetaElementProps | null>;\nexport function $h(tagName: \"meter\", className?: string): VNodeBuilder<HTMLMeterElementProps | null>;\nexport function $h(tagName: \"nav\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"nextid\", className?: string): VNodeBuilder<HTMLUnknownElementProps | null>;\nexport function $h(tagName: \"nobr\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"noframes\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"noscript\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"object\", className?: string): VNodeBuilder<HTMLObjectElementProps | null>;\nexport function $h(tagName: \"ol\", className?: string): VNodeBuilder<HTMLOListElementProps | null>;\nexport function $h(tagName: \"optgroup\", className?: string): VNodeBuilder<HTMLOptGroupElementProps | null>;\nexport function $h(tagName: \"option\", className?: string): VNodeBuilder<HTMLOptionElementProps | null>;\nexport function $h(tagName: \"p\", className?: string): VNodeBuilder<HTMLParagraphElementProps | null>;\nexport function $h(tagName: \"param\", className?: string): VNodeBuilder<HTMLParamElementProps | null>;\nexport function $h(tagName: \"picture\", className?: string): VNodeBuilder<HTMLPictureElementProps | null>;\nexport function $h(tagName: \"plaintext\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"pre\", className?: string): VNodeBuilder<HTMLPreElementProps | null>;\nexport function $h(tagName: \"progress\", className?: string): VNodeBuilder<HTMLProgressElementProps | null>;\nexport function $h(tagName: \"q\", className?: string): VNodeBuilder<HTMLQuoteElementProps | null>;\nexport function $h(tagName: \"rt\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"ruby\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"s\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"samp\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"script\", className?: string): VNodeBuilder<HTMLScriptElementProps | null>;\nexport function $h(tagName: \"section\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"select\", className?: string): VNodeBuilder<HTMLSelectElementProps | null>;\nexport function $h(tagName: \"small\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"source\", className?: string): VNodeBuilder<HTMLSourceElementProps | null>;\nexport function $h(tagName: \"span\", className?: string): VNodeBuilder<HTMLSpanElementProps | null>;\nexport function $h(tagName: \"strike\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"strong\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"style\", className?: string): VNodeBuilder<HTMLStyleElementProps | null>;\nexport function $h(tagName: \"sub\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"sup\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"table\", className?: string): VNodeBuilder<HTMLTableElementProps | null>;\nexport function $h(tagName: \"tbody\", className?: string): VNodeBuilder<HTMLTableSectionElementProps | null>;\nexport function $h(tagName: \"td\", className?: string): VNodeBuilder<HTMLTableDataCellElementProps | null>;\nexport function $h(tagName: \"template\", className?: string): VNodeBuilder<HTMLTemplateElementProps | null>;\nexport function $h(tagName: \"textarea\", className?: string): VNodeBuilder<HTMLTextAreaElementProps | null>;\nexport function $h(tagName: \"tfoot\", className?: string): VNodeBuilder<HTMLTableSectionElementProps | null>;\nexport function $h(tagName: \"th\", className?: string): VNodeBuilder<HTMLTableHeaderCellElementProps | null>;\nexport function $h(tagName: \"thead\", className?: string): VNodeBuilder<HTMLTableSectionElementProps | null>;\nexport function $h(tagName: \"title\", className?: string): VNodeBuilder<HTMLTitleElementProps | null>;\nexport function $h(tagName: \"tr\", className?: string): VNodeBuilder<HTMLTableRowElementProps | null>;\nexport function $h(tagName: \"track\", className?: string): VNodeBuilder<HTMLTrackElementProps | null>;\nexport function $h(tagName: \"tt\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"u\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"ul\", className?: string): VNodeBuilder<HTMLUListElementProps | null>;\nexport function $h(tagName: \"var\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"wbr\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"x-ms-webview\", className?: string): VNodeBuilder<MSHTMLWebViewElementProps | null>;\nexport function $h(tagName: \"xmp\", className?: string): VNodeBuilder<HTMLPreElementProps | null>;\nexport function $h(tagName: string, className?: string): VNodeBuilder<HTMLElementProps | null> {\n    return new VNodeBuilder<HTMLElementProps | null>(\n        VNodeFlags.Element,\n        tagName,\n        null,\n        className === undefined ? null : className,\n        null);\n}\n\n/**\n * Create a VNodeBuilder representing a SVGElement node.\n *\n * @param tagName SVG Element tag name.\n * @param className Class name.\n * @returns VNodeBuilder object.\n */\nexport function $s(tagName: \"circle\", className?: string): VNodeBuilder<SVGCircleElementProps | null>;\nexport function $s(tagName: \"clippath\", className?: string): VNodeBuilder<SVGClipPathElementProps | null>;\nexport function $s(tagName: \"defs\", className?: string): VNodeBuilder<SVGDefsElementProps | null>;\nexport function $s(tagName: \"desc\", className?: string): VNodeBuilder<SVGDescElementProps | null>;\nexport function $s(tagName: \"ellipse\", className?: string): VNodeBuilder<SVGEllipseElementProps | null>;\nexport function $s(tagName: \"feblend\", className?: string): VNodeBuilder<SVGFEBlendElementProps | null>;\nexport function $s(tagName: \"fecolormatrix\", className?: string): VNodeBuilder<SVGFEColorMatrixElementProps | null>;\nexport function $s(tagName: \"fecomponenttransfer\", className?: string): VNodeBuilder<SVGFEComponentTransferElementProps | null>;\nexport function $s(tagName: \"fecomposite\", className?: string): VNodeBuilder<SVGFECompositeElementProps | null>;\nexport function $s(tagName: \"feconvolvematrix\", className?: string): VNodeBuilder<SVGFEConvolveMatrixElementProps | null>;\nexport function $s(tagName: \"fediffuselighting\", className?: string): VNodeBuilder<SVGFEDiffuseLightingElementProps | null>;\nexport function $s(tagName: \"fedisplacementmap\", className?: string): VNodeBuilder<SVGFEDisplacementMapElementProps | null>;\nexport function $s(tagName: \"fedistantlight\", className?: string): VNodeBuilder<SVGFEDistantLightElementProps | null>;\nexport function $s(tagName: \"feflood\", className?: string): VNodeBuilder<SVGFEFloodElementProps | null>;\nexport function $s(tagName: \"fefunca\", className?: string): VNodeBuilder<SVGFEFuncAElementProps | null>;\nexport function $s(tagName: \"fefuncb\", className?: string): VNodeBuilder<SVGFEFuncBElementProps | null>;\nexport function $s(tagName: \"fefuncg\", className?: string): VNodeBuilder<SVGFEFuncGElementProps | null>;\nexport function $s(tagName: \"fefuncr\", className?: string): VNodeBuilder<SVGFEFuncRElementProps | null>;\nexport function $s(tagName: \"fegaussianblur\", className?: string): VNodeBuilder<SVGFEGaussianBlurElementProps | null>;\nexport function $s(tagName: \"feimage\", className?: string): VNodeBuilder<SVGFEImageElementProps | null>;\nexport function $s(tagName: \"femerge\", className?: string): VNodeBuilder<SVGFEMergeElementProps | null>;\nexport function $s(tagName: \"femergenode\", className?: string): VNodeBuilder<SVGFEMergeNodeElementProps | null>;\nexport function $s(tagName: \"femorphology\", className?: string): VNodeBuilder<SVGFEMorphologyElementProps | null>;\nexport function $s(tagName: \"feoffset\", className?: string): VNodeBuilder<SVGFEOffsetElementProps | null>;\nexport function $s(tagName: \"fepointlight\", className?: string): VNodeBuilder<SVGFEPointLightElementProps | null>;\nexport function $s(tagName: \"fespecularlighting\", className?: string): VNodeBuilder<SVGFESpecularLightingElementProps | null>;\nexport function $s(tagName: \"fespotlight\", className?: string): VNodeBuilder<SVGFESpotLightElementProps | null>;\nexport function $s(tagName: \"fetile\", className?: string): VNodeBuilder<SVGFETileElementProps | null>;\nexport function $s(tagName: \"feturbulence\", className?: string): VNodeBuilder<SVGFETurbulenceElementProps | null>;\nexport function $s(tagName: \"filter\", className?: string): VNodeBuilder<SVGFilterElementProps | null>;\nexport function $s(tagName: \"foreignobject\", className?: string): VNodeBuilder<SVGForeignObjectElementProps | null>;\nexport function $s(tagName: \"g\", className?: string): VNodeBuilder<SVGGElementProps | null>;\nexport function $s(tagName: \"image\", className?: string): VNodeBuilder<SVGImageElementProps | null>;\nexport function $s(tagName: \"line\", className?: string): VNodeBuilder<SVGLineElementProps | null>;\nexport function $s(tagName: \"lineargradient\", className?: string): VNodeBuilder<SVGLinearGradientElementProps | null>;\nexport function $s(tagName: \"marker\", className?: string): VNodeBuilder<SVGMarkerElementProps | null>;\nexport function $s(tagName: \"mask\", className?: string): VNodeBuilder<SVGMaskElementProps | null>;\nexport function $s(tagName: \"metadata\", className?: string): VNodeBuilder<SVGMetadataElementProps | null>;\nexport function $s(tagName: \"path\", className?: string): VNodeBuilder<SVGPathElementProps | null>;\nexport function $s(tagName: \"pattern\", className?: string): VNodeBuilder<SVGPatternElementProps | null>;\nexport function $s(tagName: \"polygon\", className?: string): VNodeBuilder<SVGPolygonElementProps | null>;\nexport function $s(tagName: \"polyline\", className?: string): VNodeBuilder<SVGPolylineElementProps | null>;\nexport function $s(tagName: \"radialgradient\", className?: string): VNodeBuilder<SVGRadialGradientElementProps | null>;\nexport function $s(tagName: \"rect\", className?: string): VNodeBuilder<SVGRectElementProps | null>;\nexport function $s(tagName: \"stop\", className?: string): VNodeBuilder<SVGStopElementProps | null>;\nexport function $s(tagName: \"svg\", className?: string): VNodeBuilder<SVGSVGElementProps | null>;\nexport function $s(tagName: \"switch\", className?: string): VNodeBuilder<SVGSwitchElementProps | null>;\nexport function $s(tagName: \"symbol\", className?: string): VNodeBuilder<SVGSymbolElementProps | null>;\nexport function $s(tagName: \"text\", className?: string): VNodeBuilder<SVGTextElementProps | null>;\nexport function $s(tagName: \"textpath\", className?: string): VNodeBuilder<SVGTextPathElementProps | null>;\nexport function $s(tagName: \"tspan\", className?: string): VNodeBuilder<SVGTSpanElementProps | null>;\nexport function $s(tagName: \"use\", className?: string): VNodeBuilder<SVGUseElementProps | null>;\nexport function $s(tagName: \"view\", className?: string): VNodeBuilder<SVGViewElementProps | null>;\nexport function $s(tagName: string, className?: string): VNodeBuilder<SVGElementProps | null> {\n    return new VNodeBuilder<SVGElementProps | null>(\n        VNodeFlags.Element | VNodeFlags.SvgElement,\n        tagName,\n        null,\n        className === undefined ? null : className,\n        null);\n}\n\nfunction isInputTypeSupportsCheckedValue(type: InputType): boolean {\n    if (type === \"checkbox\" || type === \"radio\") {\n        return true;\n    }\n    return false;\n}\n\n/**\n * Create a VNodeBuilder representing an HTMLInputElement node.\n *\n * @param type Input Element type. When type param has value \"textarea\", HTMLTextAreaElement will be created.\n * @param className Class name.\n * @returns VNodeBuilder object.\n */\nexport function $i(type: \"textarea\", className?: string): VNodeBuilder<HTMLTextAreaElementProps | null>;\nexport function $i(type: \"button\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"checkbox\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"color\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"date\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"datetime\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"datetime-local\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"email\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"file\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"hidden\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"image\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"month\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"number\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"password\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"radio\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"range\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"reset\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"search\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"submit\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"tel\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"text\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"time\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"url\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"week\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: InputType, className?: string): VNodeBuilder<HTMLInputElementProps | null> {\n    return new VNodeBuilder<HTMLInputElementProps | null>(\n        type === \"textarea\" ?\n            VNodeFlags.Element | VNodeFlags.InputElement | VNodeFlags.TextAreaElement :\n            VNodeFlags.Element | VNodeFlags.InputElement,\n        type,\n        null,\n        className === undefined ? null : className,\n        null);\n}\n\n/**\n * Create a VNodeBuilder representing an HTMLMediaElement node.\n *\n * @param tagName Media element tag name.\n * @param className Class name.\n * @returns VNodeBuilder object.\n */\nexport function $m(tagName: \"audio\", className?: string): VNodeBuilder<HTMLAudioElementProps | null>;\nexport function $m(tagName: \"video\", className?: string): VNodeBuilder<HTMLVideoElementProps | null>;\nexport function $m(tagName: \"audio\" | \"video\", className?: string): VNodeBuilder<HTMLMediaElementProps | null> {\n    return new VNodeBuilder<HTMLMediaElementProps | null>(\n        VNodeFlags.Element | VNodeFlags.MediaElement,\n        tagName,\n        null,\n        className === undefined ? null : className,\n        null);\n}\n/* tslint:enable:max-line-length */\n\n/**\n * Create a VNodeBuilder representing a Component node.\n *\n * @param c Component factory.\n * @param props Component props.\n * @returns VNodeBuilder object.\n */\nexport function $c(c: ComponentFunction<null> | ComponentClass<null>): VNodeBuilder<null>;\nexport function $c<P>(c: ComponentFunction<P> | ComponentClass<P>, props: P): VNodeBuilder<P>;\nexport function $c<P>(c: ComponentFunction<P> | ComponentClass<P>, props?: P): VNodeBuilder<P> {\n    return new VNodeBuilder<P>(\n        (c.prototype.render) ? VNodeFlags.ComponentClass : VNodeFlags.ComponentFunction,\n        c,\n        props!,\n        null,\n        null);\n}\n\n/**\n * Create a VNodeBuilder representing an ElementDescriptor.\n *\n * @param d Element Descriptor.\n * @param className Class name.\n * @returns VNodeBuilder object.\n */\nexport function $e<P>(d: ElementDescriptor<P>, className?: string): VNodeBuilder<P> {\n    return new VNodeBuilder<P>(\n        d._flags & ElementDescriptorFlags.CopyFlags,\n        d,\n        null,\n        className === undefined ? null : className,\n        null);\n}\n\n/**\n * Perform a deep VNode cloning with DOM and Component reference erasure.\n *\n * @param node VNode to clone.\n * @returns Cloned VNode.\n */\nexport function cloneVNode(node: VNode<any>): VNode<any> {\n    const flags = node._flags;\n    let children = node._children;\n    if (children !== null) {\n        if (flags & (VNodeFlags.ChildrenVNode | VNodeFlags.ChildrenArray)) {\n            if (flags & VNodeFlags.ChildrenArray) {\n                children = children as VNode<any>[];\n                const newChildren = new Array<VNode<any>>(children.length);\n                for (let i = 0; i < 0; i++) {\n                    newChildren[i] = cloneVNode(children[i]);\n                }\n                children = newChildren;\n            } else {\n                children = cloneVNode(children as VNode<any>);\n            }\n        }\n    }\n\n    const newNode = new VNodeBuilder(\n        node._flags,\n        node._tag,\n        node._props,\n        node._className,\n        (node._flags & VNodeFlags.Component) ? null : children);\n    newNode._key = node._key;\n    newNode._events = node._events;\n    newNode._style = node._style;\n\n    return newNode;\n}\n\nfunction _normalizeVNodes(nodes: VNodeRecursiveArray, result: VNode<any>[], i: number): void {\n    for (; i < nodes.length; i++) {\n        const n = nodes[i];\n        if (n !== null) {\n            if (Array.isArray(n)) {\n                _normalizeVNodes(n, result, 0);\n            } else {\n                result.push(typeof n === \"object\" ? n as VNode<any> : $t(n));\n            }\n        }\n    }\n}\n\n/**\n * Normalizes recursive VNode lists by flattening all nodes, filtering out `null` children and converting strings to\n * text nodes.\n *\n * @param nodes\n * @returns Normalized VNode array.\n */\nexport function normalizeVNodes(nodes: VNodeRecursiveArray): VNode<any>[] {\n    for (let i = 0; i < nodes.length; i++) {\n        const n = nodes[i];\n\n        if (n === null || Array.isArray(n)) {\n            const result = nodes.slice(0, i) as VNode<any>[];\n            _normalizeVNodes(nodes, result, i);\n            return result;\n        } else if (typeof n !== \"object\") {\n            nodes[i] = $t(n);\n        }\n    }\n\n    return nodes as VNode<any>[];\n}\n","import { getFunctionName, nextDebugId } from \"../common/dev_mode\";\nimport { isPropsNotIdentical, isPropsNotShallowEqual } from \"../common/equality\";\nimport { AncestorFlags } from \"../common/html_nesting_rules\";\nimport { ComponentFlags } from \"./flags\";\nimport { Context } from \"./context\";\nimport { VNode, getDOMInstanceFromVNode } from \"./vnode\";\nimport { currentFrame } from \"../scheduler/scheduler\";\n\n/**\n * Component function constructor.\n */\nexport interface ComponentFunction<P> {\n    (props: P, context?: Context): VNode<any> | undefined;\n    isPropsChanged?: (oldProps: P, newProps: P) => boolean;\n}\n\n/**\n * Component class constructor.\n */\nexport interface ComponentClass<P> {\n    new (props: P, context: Context, owner: Component<any> | undefined): Component<P>;\n}\n\n/**\n * Component is the main building block that is used to build UI applications.\n *\n * Component class has a parametric type `P` to specify `props` type.\n *\n * Example:\n *\n *     class Hello extends Component<string> {\n *       render() {\n *         return $t(`Hello ${this.props}`);\n *       }\n *     }\n *\n *     render($c(Hello, \"world\"), document.getElementById(\"App\")!);\n */\nexport abstract class Component<P> {\n    /**\n     * Flags, see `ComponentFlags` for details.\n     *\n     * Lowest 16 bits are reserved for ivi flags, other bits can be used for user flags.\n     */\n    flags: ComponentFlags;\n    /**\n     * Depth in the components tree.\n     *\n     * Depth property is used by scheduler to determine component priority when updating components.\n     */\n    readonly depth: number;\n    /**\n     * Component properties.\n     */\n    _props: P;\n    /**\n     * Parent context.\n     *\n     * Context that was used to create this component.\n     */\n    _parentContext: Context;\n    /**\n     * Current context.\n     */\n    _context: Context;\n    /**\n     * Owner component.\n     *\n     * Parent component. When owner is an undefined, it means that this component is a root component.\n     */\n    readonly owner: Component<any> | undefined;\n    /**\n     * Virtual DOM root node.\n     */\n    root: VNode<any> | null;\n    /**\n     * Parent DOM node.\n     *\n     * It is used because when root node is changed we will need to replace old DOM node with a new one, and right now\n     * browsers doesn't provide a nice API that doesn't require to know parent nodes.\n     */\n    _parentDOMNode: Node | null;\n    /**\n     * Ancestor Flags are used to check child nesting violations.\n     *\n     * Dev Mode.\n     */\n    _ancestorFlags: AncestorFlags;\n    /**\n     * Component function stack trace.\n     *\n     * Component functions doesn't have any instances, so we need to store them separately.\n     *\n     * Dev Mode.\n     */\n    _stackTrace: ComponentFunction<any>[] | null;\n    /**\n     * Unique ID.\n     *\n     * ID generator is using `dev_mode.uniqueId()` function, so it will be unique across all Dev Mode ids.\n     *\n     * Dev Mode.\n     */\n    _debugId: number;\n\n    constructor(props: P, context: Context, owner: Component<any> | undefined) {\n        this.flags = 0;\n        this.depth = owner ? owner.depth + 1 : 0;\n        this._props = props;\n        this._parentContext = context;\n        this._context = context;\n        this.owner = owner;\n        this.root = null;\n        if (__IVI_BROWSER__) {\n            this._parentDOMNode = null;\n        }\n        if (__IVI_DEV__) {\n            this._ancestorFlags = 0;\n            this._stackTrace = null;\n            this._debugId = nextDebugId();\n        }\n    }\n\n    /**\n     * Get current context.\n     *\n     * @returns Current context.\n     */\n    get context(): Context {\n        this.flags |= ComponentFlags.CheckUsingContext;\n        return this._context;\n    }\n\n    /**\n     * Get props.\n     *\n     * @returns Current props.\n     */\n    get props(): P {\n        this.flags |= ComponentFlags.CheckUsingProps;\n        return this._props;\n    }\n\n    /**\n     * Is Component mounted.\n     *\n     * `isMounted` should be used only in one case, to prevent unnecessary work in asynchronous tasks.\n     *\n     * @returns `true` when Component is mounted.\n     */\n    get isMounted(): boolean {\n        return !!(this.flags & ComponentFlags.Mounted);\n    }\n\n    /**\n     * Lifecycle method `isPropsChanged` is used as a hint that can reduce unnecessary updates.\n     *\n     * By default all props changes returns `true`.\n     *\n     * @param oldProps Old props.\n     * @param newProps New props.\n     * @returns `true` when props should be updated.\n     */\n    isPropsChanged(oldProps: P, newProps: P): boolean {\n        return true;\n    }\n\n    /**\n     * Lifecycle method `didReceiveNewProps` is invoked after new props are assigned.\n     *\n     * @param oldProps Old props.\n     * @param newProps New props.\n     */\n    didReceiveNewProps(oldProps: P, newProps: P): void {\n        /* tslint:disable:no-empty */\n        /* tslint:enable:no-empty */\n    }\n\n    /**\n     * Lifecycle method `didReceiveNewContext` is invoked after new context is assigned.\n     *\n     * @param oldContext Old context.\n     * @param newContext New Context.\n     */\n    didReceiveNewContext(oldContext: Context, newContext: Context): void {\n        // TODO: this lifecycle method might be slightly confusing because it actually works with parent contexts.\n        // Maybe rename it to something more appropriate?\n        //\n        // NOTE: `willReceiveNewContext` will be even more confusing because components provide an API to get current\n        // context with `this.context`. `willReceiveNewProps` were changed to `didReceiveNewProps` to make it look like\n        // this lifecycle method.\n\n        /* tslint:disable:no-empty */\n        /* tslint:enable:no-empty */\n    }\n\n    /**\n     * Lifecycle method `updateContext` is used to modify current context.\n     *\n     * It will be invoked when component is created, each time when parent context is changed, each time when props are\n     * changed, and when component is updated with invalidated context.\n     *\n     * @returns Context data.\n     */\n    updateContext<C>(): C | undefined {\n        return;\n    }\n\n    /**\n     * Lifecycle method `didMount` is invoked when component is mounted to the document.\n     */\n    didMount(): void {\n        /* tslint:disable:no-empty */\n        /* tslint:enable:no-empty */\n    }\n\n    /**\n     * Lifecycle method `didUnmount` is invoked when component is unmounted from the document.\n     */\n    didUnmount(): void {\n        /* tslint:disable:no-empty */\n        /* tslint:enable:no-empty */\n    }\n\n    /**\n     * Lifecycle method `willUpdate` is invoked before update.\n     */\n    willUpdate(): void {\n        /* tslint:disable:no-empty */\n        /* tslint:enable:no-empty */\n    }\n\n    /**\n     * Lifecycle method `updated` is invoked after update.\n     */\n    didUpdate(): void {\n        /* tslint:disable:no-empty */\n        /* tslint:enable:no-empty */\n    }\n\n    /**\n     * Lifecycle method `didInvalidate` is invoked after `invalidate` method is invoked.\n     */\n    didInvalidate(): void {\n        /* tslint:disable:no-empty */\n        /* tslint:enable:no-empty */\n    }\n\n    /**\n     * When render method returns `undefined` value, it will create an empty text node.\n     */\n    render(): VNode<any> | undefined {\n        return;\n    }\n\n    /**\n     * Invalidate view.\n     */\n    invalidate(): void {\n        if (__IVI_BROWSER__) {\n            invalidateComponent(this, ComponentFlags.DirtyState);\n        }\n    }\n\n    /**\n     * Invalidate context.\n     */\n    invalidateContext(): void {\n        if (__IVI_BROWSER__) {\n            invalidateComponent(this, ComponentFlags.DirtyContext);\n        }\n    }\n}\n\n/**\n * Invalidate Component.\n *\n * @param component\n * @param dirtyFlags\n */\nexport function invalidateComponent<P>(component: Component<P>, dirtyFlags: number): void {\n    if (__IVI_BROWSER__) {\n        if (component.flags & ComponentFlags.Mounted) {\n            component.flags |= dirtyFlags;\n            component.didInvalidate();\n            if (!(component.flags & ComponentFlags.InUpdateQueue)) {\n                currentFrame().updateComponent(component);\n            }\n        }\n    }\n}\n\n/**\n * Global Component registry available in Dev Mode. It is used to find components by their `debugId`.\n */\nlet COMPONENT_REGISTRY: Map<number, Component<any>>;\nif (__IVI_DEV__) {\n    COMPONENT_REGISTRY = new Map<number, Component<any>>();\n}\n\n/**\n * Register a Component in Component Registry by its `debugId`.\n *\n * @param component Component instance.\n */\nexport function registerComponent(component: Component<any>): void {\n    if (__IVI_DEV__) {\n        COMPONENT_REGISTRY.set(component._debugId, component);\n    }\n}\n\n/**\n * Unregister a Component from Component Registry by its `debugId`.\n *\n * @param component Component instance.\n */\nexport function unregisterComponent(component: Component<any>): void {\n    if (__IVI_DEV__) {\n        COMPONENT_REGISTRY.delete(component._debugId);\n    }\n}\n\n/**\n * Find Component instance by `debugId` in Component Registry.\n *\n * @param debugId Debug ID.\n * @returns Component associtated with `debugId` or an `undefined` if component is missing.\n */\nexport function findComponentByDebugId(debugId: number): Component<any> | undefined {\n    if (__IVI_DEV__) {\n        return COMPONENT_REGISTRY.get(debugId);\n    }\n    return;\n}\n\n/**\n * Checks props for identity.\n *\n * This function can be used as a wrapper for function expression, or as a class decorator.\n *\n *     const MyComponent = checkPropsIdentity(function(text: string) {\n *         return $h(\"div\").children(text);\n *     });\n *\n *     @checkPropsIdentity\n *     class MyClassComponent extends Component<string> {\n *         render() {\n *             return $h(\"div\").children(this.props);\n *         }\n *     }\n *\n * @param target Component constructor.\n * @returns Component constructor with identity check.\n */\nexport function checkPropsIdentity<P extends ComponentClass<any> | ComponentFunction<any>>(target: P): P {\n    if (target.prototype.render) {\n        target.prototype.isPropsChanged = isPropsNotIdentical;\n    } else {\n        (target as ComponentFunction<any>).isPropsChanged = isPropsNotIdentical;\n    }\n    return target;\n}\n\n/**\n * Checks props for shallow equality.\n *\n * This function can be used as a wrapper for function expression, or as a class decorator.\n *\n *     const MyComponent = checkPropsShallowEquality(function(props: { text: string }) {\n *         return $h(\"div\").children(props.text);\n *     });\n *\n *     @checkPropsShallowEquality\n *     class MyClassComponent extends Component<{ text: string }> {\n *         render() {\n *             return $h(\"div\").children(this.props.text);\n *         }\n *     }\n *\n * @param target Component constructor.\n * @returns Component constructor with identity check.\n */\nexport function checkPropsShallowEquality<P extends ComponentClass<any> | ComponentFunction<any>>(target: P): P {\n    if (target.prototype.render) {\n        target.prototype.isPropsChanged = isPropsNotShallowEqual;\n    } else {\n        (target as ComponentFunction<any>).isPropsChanged = isPropsNotShallowEqual;\n    }\n    return target;\n}\n\n/**\n * Get reference to a DOM node from a Component instance.\n *\n * @param component Component instance.\n * @returns DOM node.\n */\nexport function getDOMInstanceFromComponent<T extends Node>(component: Component<any>): T {\n    if (__IVI_DEV__) {\n        if (!component.root) {\n            throw new Error(\"Failed to get DOM instance from component, component is not initialized.\");\n        }\n    }\n    return getDOMInstanceFromVNode<T>(component.root!) !;\n}\n\n/**\n * Get component name from component instance or component function.\n *\n * @param component Component.\n * @return Component name.\n */\nexport function getComponentName(component: Component<any> | ComponentFunction<any>): string {\n    return getFunctionName(\n        (component as Function).prototype.render ?\n            (component as Object).constructor :\n            component as ComponentFunction<any>,\n    );\n}\n","/**\n * Universal Scheduler.\n *\n * When scheduler is running on server, all frame tasks will be executed inside a macrotask registered with a\n * `setImmediate` call.\n */\n\nimport { Component } from \"../vdom/component\";\nimport { updateComponent } from \"../vdom/implementation\";\nimport { ComponentFlags } from \"../vdom/flags\";\n\n/**\n * Scheduler Task.\n */\nexport type SchedulerTask = () => void;\n\n/**\n * Scheduler flags.\n */\nconst enum SchedulerFlags {\n    /**\n     * Microtasks are pending for execution in microtasks queue.\n     */\n    MicrotaskPending = 1,\n    /**\n     * Macrotasks are pending for execution in macrotasks queue.\n     */\n    MacrotaskPending = 1 << 1,\n    /**\n     * Frametasks are pending for execution in frametasks queue.\n     */\n    FrametaskPending = 1 << 2,\n    /**\n     * Current frame ready.\n     */\n    CurrentFrameReady = 1 << 3,\n}\n\n/**\n * Frame Tasks Group flags.\n */\nconst enum FrameTasksGroupFlags {\n    /**\n     * Group contains component update tasks.\n     */\n    Component = 1,\n    /**\n     * Group contains \"write\" tasks.\n     */\n    Write = 1 << 1,\n    /**\n     * Group contains \"read\" tasks\".\n     */\n    Read = 1 << 2,\n    /**\n     * Group contains \"after\" tasks.\n     */\n    After = 1 << 3,\n    /**\n     * Group is locked from reading and writing.\n     */\n    RWLock = 1 << 4,\n}\n\n/**\n * Frame tasks group contains tasks for updating components, read dom and write dom tasks, and tasks that should be\n * executed after all other tasks are finished.\n *\n * To get access to the frame tasks group, use: `currentFrame()` and `nextFrame()` scheduler methods.\n *\n *     scheduler.currentFrame().read(() => {\n *       console.log(element.clientWidth);\n *     });\n *\n * @final\n */\nexport class FrameTasksGroup {\n    /**\n     * See `FrameTasksGroupFlags` for details.\n     */\n    _flags: number;\n    /**\n     * Array of component arrays indexed by their depth.\n     */\n    _componentTasks: Array<Component<any>[] | null>;\n    /**\n     * Write DOM task queue.\n     */\n    _writeTasks: SchedulerTask[] | null;\n    /**\n     * Read DOM task queue.\n     */\n    _readTasks: SchedulerTask[] | null;\n    /**\n     * Tasks that should be executed when all other tasks are finished.\n     */\n    _afterTasks: SchedulerTask[] | null;\n\n    constructor() {\n        this._flags = 0;\n        this._componentTasks = [];\n        this._writeTasks = null;\n        this._readTasks = null;\n        this._afterTasks = null;\n    }\n\n    /**\n     * Add Component to the components queue.\n     *\n     * @param component\n     */\n    updateComponent(component: Component<any>): void {\n        if (__IVI_BROWSER__) {\n            if (__IVI_DEV__) {\n                if ((this._flags & FrameTasksGroupFlags.RWLock) !== 0) {\n                    throw new Error(\"Failed to add update component task to the current frame, current frame is \" +\n                        \"locked for read and write tasks.\");\n                }\n            }\n\n            if ((component.flags & ComponentFlags.InUpdateQueue) === 0) {\n                component.flags |= ComponentFlags.InUpdateQueue;\n                const priority = component.depth;\n\n                this._flags |= FrameTasksGroupFlags.Component;\n                while (priority >= this._componentTasks.length) {\n                    this._componentTasks.push(null);\n                }\n\n                const group = this._componentTasks[priority];\n                if (group === null) {\n                    this._componentTasks[priority] = [component];\n                } else {\n                    group.push(component);\n                }\n            }\n        }\n    }\n\n    /**\n     * Add new task to the write DOM task queue.\n     *\n     * @param callback\n     */\n    write(callback: SchedulerTask): void {\n        if (__IVI_DEV__) {\n            if ((this._flags & FrameTasksGroupFlags.RWLock) !== 0) {\n                throw new Error(\"Failed to add update component task to the current frame, current frame is locked \" +\n                    \"for read and write tasks.\");\n            }\n        }\n\n        this._flags |= FrameTasksGroupFlags.Write;\n        if (this._writeTasks === null) {\n            this._writeTasks = [];\n        }\n        this._writeTasks.push(callback);\n    }\n\n    /**\n     * Add new task to the read DOM task queue.\n     *\n     * @param callback\n     */\n    read(callback: SchedulerTask): void {\n        if (__IVI_DEV__) {\n            if ((this._flags & FrameTasksGroupFlags.RWLock) !== 0) {\n                throw new Error(\"Failed to add update component task to the current frame, current frame is locked \" +\n                    \"for read and write tasks.\");\n            }\n        }\n\n        this._flags |= FrameTasksGroupFlags.Read;\n        if (this._readTasks === null) {\n            this._readTasks = [];\n        }\n        this._readTasks.push(callback);\n    }\n\n    /**\n     * Add new task to the task queue that will execute tasks when all DOM tasks are finished.\n     *\n     * @param callback\n     */\n    after(callback: SchedulerTask): void {\n        this._flags |= FrameTasksGroupFlags.After;\n        if (this._afterTasks === null) {\n            this._afterTasks = [];\n        }\n        this._afterTasks.push(callback);\n    }\n\n    /**\n     * Lock read and write task queues.\n     *\n     * Works in DEBUG mode only.\n     */\n    _rwLock(): void {\n        if (__IVI_DEV__) {\n            this._flags |= FrameTasksGroupFlags.RWLock;\n        }\n    }\n\n    /**\n     * Unlock read and write task queue.\n     *\n     * Works in DEBUG mode only.\n     */\n    _rwUnlock(): void {\n        if (__IVI_DEV__) {\n            this._flags &= ~FrameTasksGroupFlags.RWLock;\n        }\n    }\n}\n\n/**\n * Scheduler.\n */\nconst scheduler = {\n    /**\n     * See `SchedulerFlags` for details.\n     */\n    flags: 0,\n    clock: 0,\n    time: 0,\n    microtasks: [] as SchedulerTask[],\n    macrotasks: [] as SchedulerTask[],\n    currentFrame: new FrameTasksGroup(),\n    nextFrame: new FrameTasksGroup(),\n    updateComponents: [] as Component<any>[],\n};\n\nconst microtaskNode = __IVI_BROWSER__ ? document.createTextNode(\"\") : undefined;\nlet microtaskToggle = 0;\nconst macrotaskMessage = __IVI_BROWSER__ ? \"__ivi\" + Math.random() : undefined;\n\nif (__IVI_BROWSER__) {\n    // Microtask scheduler based on mutation observer\n    const microtaskObserver = new MutationObserver(runMicrotasks);\n    microtaskObserver.observe(microtaskNode!, { characterData: true });\n\n    // Macrotask scheduler based on postMessage\n    window.addEventListener(\"message\", handleWindowMessage);\n}\nscheduler.currentFrame._rwLock();\n\n/**\n * Monotonically increasing clock.\n *\n * @returns current clock value.\n */\nexport function clock(): number {\n    return scheduler.clock;\n}\n\n/**\n * Trigger microtasks execution.\n */\nfunction requestMicrotaskExecution(): void {\n    if ((scheduler.flags & SchedulerFlags.MicrotaskPending) === 0) {\n        scheduler.flags |= SchedulerFlags.MicrotaskPending;\n        if (__IVI_BROWSER__) {\n            microtaskToggle ^= 1;\n            microtaskNode!.nodeValue = microtaskToggle ? \"1\" : \"0\";\n        } else {\n            process.nextTick(runMicrotasks);\n        }\n    }\n}\n\n/**\n * Trigger macrotasks execution.\n */\nfunction requestMacrotaskExecution(): void {\n    if ((scheduler.flags & SchedulerFlags.MacrotaskPending) === 0) {\n        scheduler.flags |= SchedulerFlags.MacrotaskPending;\n        if (__IVI_BROWSER__) {\n            window.postMessage(macrotaskMessage, \"*\");\n        } else {\n            setImmediate(runMacrotasks);\n        }\n    }\n}\n\n/**\n * Trigger next frame tasks execution.\n */\nfunction requestNextFrame(): void {\n    if ((scheduler.flags & SchedulerFlags.FrametaskPending) === 0) {\n        scheduler.flags |= SchedulerFlags.FrametaskPending;\n        if (__IVI_BROWSER__) {\n            requestAnimationFrame(handleNextFrame);\n        } else {\n            setImmediate(handleNextFrame);\n        }\n    }\n}\n\n/**\n * Macrotask scheduler event handler.\n *\n * @param ev Message event.\n */\nfunction handleWindowMessage(ev: MessageEvent): void {\n    if (ev.source === window && ev.data === macrotaskMessage) {\n        runMacrotasks();\n    }\n}\n\n/**\n * Frame tasks scheduler event handler.\n *\n * @param t Current time.\n */\nfunction handleNextFrame(): void {\n    const updateComponents = scheduler.updateComponents;\n    let tasks: SchedulerTask[];\n    let i: number;\n    let j: number;\n\n    scheduler.flags &= ~SchedulerFlags.FrametaskPending;\n    scheduler.flags |= SchedulerFlags.CurrentFrameReady;\n\n    scheduler.time = Date.now();\n\n    const frame = scheduler.nextFrame;\n    scheduler.nextFrame = scheduler.currentFrame;\n    scheduler.currentFrame = frame;\n\n    scheduler.currentFrame._rwUnlock();\n    scheduler.nextFrame._rwUnlock();\n\n    if (__IVI_BROWSER__) {\n        // Mark all update components as dirty. But don't update until all write tasks are finished. It is possible that\n        // we won't need to update component if it is removed.\n        for (i = 0; i < updateComponents.length; i++) {\n            updateComponents[i].flags |= ComponentFlags.DirtyState;\n        }\n    }\n\n    // Perform read/write batching. Start with executing read DOM tasks, then update components, execute write DOM tasks\n    // and repeat until all read and write tasks are executed.\n    do {\n        while ((frame._flags & FrameTasksGroupFlags.Read) !== 0) {\n            frame._flags &= ~FrameTasksGroupFlags.Read;\n            tasks = frame._readTasks!;\n            frame._readTasks = null;\n\n            for (i = 0; i < tasks.length; i++) {\n                tasks[i]();\n            }\n        }\n\n        while ((frame._flags & (FrameTasksGroupFlags.Component | FrameTasksGroupFlags.Write)) !== 0) {\n            if ((frame._flags & FrameTasksGroupFlags.Write) !== 0) {\n                frame._flags &= ~FrameTasksGroupFlags.Write;\n                tasks = frame._writeTasks!;\n                frame._writeTasks = null;\n                for (i = 0; i < tasks.length; i++) {\n                    tasks[i]();\n                }\n            }\n\n            if (__IVI_BROWSER__) {\n                if ((frame._flags & FrameTasksGroupFlags.Component) !== 0) {\n                    frame._flags &= ~FrameTasksGroupFlags.Component;\n                    const componentGroups = frame._componentTasks;\n\n                    for (i = 0; i < componentGroups.length; i++) {\n                        const componentGroup = componentGroups[i];\n                        if (componentGroup !== null) {\n                            componentGroups[i] = null;\n                            for (j = 0; j < componentGroup.length; j++) {\n                                updateComponent(componentGroup[j]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        if (__IVI_BROWSER__) {\n            // Update components registered for updating on each frame.\n            // Remove components that doesn't have UPDATE_EACH_FRAME flag.\n            i = 0;\n            j = updateComponents.length;\n\n            while (i < j) {\n                const component = updateComponents[i++];\n                if ((component.flags & ComponentFlags.UpdateEachFrame) === 0) {\n                    component.flags &= ~ComponentFlags.InUpdateEachFrameQueue;\n                    if (i === j) {\n                        updateComponents.pop();\n                    } else {\n                        updateComponents[--i] = updateComponents.pop() !;\n                    }\n                } else {\n                    updateComponent(component);\n                }\n            }\n        }\n    } while ((frame._flags & (FrameTasksGroupFlags.Component |\n        FrameTasksGroupFlags.Write |\n        FrameTasksGroupFlags.Read)) !== 0);\n\n    scheduler.flags &= ~SchedulerFlags.CurrentFrameReady;\n\n    // Lock current from adding read and write tasks in debug mode.\n    scheduler.currentFrame._rwLock();\n\n    // Perform tasks that should be executed when all DOM ops are finished.\n    while ((frame._flags & FrameTasksGroupFlags.After) !== 0) {\n        frame._flags &= ~FrameTasksGroupFlags.After;\n\n        tasks = frame._afterTasks!;\n        frame._afterTasks = null;\n        for (i = 0; i < tasks.length; i++) {\n            tasks[i]();\n        }\n    }\n\n    if (__IVI_BROWSER__) {\n        if (updateComponents.length > 0) {\n            requestNextFrame();\n        }\n    }\n\n    scheduler.clock++;\n}\n\nfunction runMicrotasks(): void {\n    scheduler.time = Date.now();\n\n    while (scheduler.microtasks.length > 0) {\n        const tasks = scheduler.microtasks;\n        scheduler.microtasks = [];\n        for (let i = 0; i < tasks.length; i++) {\n            tasks[i]();\n        }\n        scheduler.clock++;\n    }\n\n    scheduler.flags &= ~SchedulerFlags.MicrotaskPending;\n}\n\nfunction runMacrotasks(): void {\n    scheduler.flags &= ~SchedulerFlags.MacrotaskPending;\n    scheduler.time = Date.now();\n\n    let tasks = scheduler.macrotasks;\n    scheduler.macrotasks = [];\n    for (let i = 0; i < tasks.length; i++) {\n        tasks[i]();\n    }\n\n    scheduler.clock++;\n}\n\n/**\n * Add task to the microtask queue.\n *\n * @param task\n */\nexport function scheduleMicrotask(task: () => void): void {\n    requestMicrotaskExecution();\n    scheduler.microtasks.push(task);\n}\n\n/**\n * Add task to the macrotask queue.\n *\n * @param task\n */\nexport function scheduleMacrotask(task: () => void): void {\n    requestMacrotaskExecution();\n    scheduler.macrotasks.push(task);\n}\n\n/**\n * Get task list for the next frame.\n *\n * @returns Frame tasks group.\n */\nexport function nextFrame(): FrameTasksGroup {\n    requestNextFrame();\n    return scheduler.nextFrame;\n}\n\n/**\n * Get task list for the current frame.\n *\n * @returns Frame tasks group.\n */\nexport function currentFrame(): FrameTasksGroup {\n    if (scheduler.flags & SchedulerFlags.CurrentFrameReady) {\n        return scheduler.currentFrame;\n    }\n    return nextFrame();\n}\n\n/**\n * Add component to the list of components that will be updated each frame.\n *\n * @param component\n */\nexport function startUpdateComponentEachFrame(component: Component<any>): void {\n    if (__IVI_BROWSER__) {\n        requestNextFrame();\n        scheduler.updateComponents.push(component);\n    }\n}\n","\n/**\n * Context.\n *\n * All Context objects should be immutable.\n *\n * Context objects will be implicitly propagated through virtual dom trees.\n *\n * @final\n */\nexport class Context {\n    /**\n     * Context data.\n     */\n    readonly data: { [key: string]: any };\n    /**\n     * Parent context.\n     *\n     * Contexts are built as a tree of immutable objects.\n     */\n    readonly from?: Context;\n\n    constructor(data: any, from?: Context) {\n        this.data = data;\n        this.from = from;\n    }\n\n    /**\n     * Find a context data.\n     *\n     * Get method supports two ways to retrieve context values:\n     *  - Retrieve value with a simple key.\n     *  - Object with a key => value mapping.\n     *\n     * Retrieving values with a simple key works by iterating through all parent contexts until it finds value,\n     * `undefined` value is returned when nothing is found.\n     *\n     * Retrieving values with key => value mapping works by iterating through all parent contexts and mapping all\n     * keys with values on the first occurence, this process goes on until it finds values for all keys.\n     *\n     * @param key Key may be a simple string, or a { [key: string]: value | undefined } object.\n     * @returns Value for the provided key if it is a simple string, or key object that was used as a key => value\n     *   mapping.\n     */\n    get<V>(key: V): V;\n    get<V>(key: string): V | undefined;\n    get<V>(key: string | V): V | undefined {\n        let n: Context | undefined = this;\n        let v: any;\n\n        if (typeof key !== \"string\") {\n            const keys = Object.keys(key) as (string | null)[];\n            let l = keys.length;\n\n            while (l > 0 && n) {\n                if (n.data) {\n                    for (let i = 0; i < keys.length; i++) {\n                        const k = keys[i];\n                        if (k) {\n                            v = n.data[k];\n                            if (v !== undefined) {\n                                (key as any)[k] = n.data[k];\n                                keys[i] = null;\n                                l--;\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                n = n.from;\n            }\n\n            return key;\n        }\n\n        while (n) {\n            if (n.data) {\n                v = n.data[key];\n                if (v !== undefined) {\n                    return v as V;\n                }\n            }\n            n = n.from;\n        }\n\n        return;\n    }\n}\n\n/**\n * Root Context.\n *\n * Default Context that is used to render root nodes.\n */\nexport const ROOT_CONTEXT = new Context(undefined);\n","import { XML_NAMESPACE, XLINK_NAMESPACE } from \"../common/dom\";\nimport { VNodeFlags } from \"./flags\";\nimport { CSSStyleProps } from \"./dom_props\";\n\n/**\n * Sync DOM class names.\n *\n * @param node HTML or SVG Element.\n * @param flags VNode flags.\n * @param a Old className.\n * @param b New className.\n */\nexport function syncClassName(node: Element, flags: VNodeFlags, a: string | null, b: string | null): void {\n    if (!b) {\n        b = \"\";\n    }\n    if (flags & VNodeFlags.SvgElement) {\n        node.setAttribute(\"class\", b);\n    } else {\n        node.className = b;\n    }\n}\n\n/**\n * Sync DOM styles.\n *\n * When styles are synced, and style from the old list is missing in the new one, its value will be reassigned with a\n * `null` value.\n *\n *    a: { backgroundColor: \"#333\", color: \"#fff\" }\n *    b: { backgroundColor: \"#333\" }\n *\n * In this example `color` style will receive a `null` value.\n *\n * Implementation detail: Syncing algorithm has an optimization with an early detection of object shape changes.\n * Objects with static shape will make syncing algorithm slightly faster because it doesn't need to check which\n * properties didn't existed before, so it is possible to just use the static object shapes, and use `undefined` values\n * when you want to remove property and have the same object shape.\n *\n * @param node HTML or SVG Element.\n * @param a Old styles.\n * @param b New styles.\n */\nexport function syncStyle(\n    node: HTMLElement | SVGStylable,\n    a: CSSStyleProps | null,\n    b: CSSStyleProps | null,\n): void {\n    let i: number;\n    let keys: string[];\n    let key: string;\n    let style: CSSStyleDeclaration;\n\n    if (a === null) {\n        if (b !== null) {\n            // a is empty, insert all styles from b.\n            style = node.style;\n            keys = Object.keys(b);\n            for (i = 0; i < keys.length; i++) {\n                key = keys[i];\n                (style as any)[key] = (b as any)[key];\n            }\n        }\n    } else if (b === null) {\n        // b is empty, remove all styles from a.\n        style = node.style;\n        keys = Object.keys(a);\n        for (i = 0; i < keys.length; i++) {\n            (style as any)[keys[i]] = null;\n        }\n    } else {\n        style = node.style;\n        let matchCount = 0;\n\n        keys = Object.keys(a);\n        for (i = 0; i < keys.length; i++) {\n            key = keys[i];\n            const bValue = (b as any)[key];\n\n            if (bValue !== undefined) {\n                const aValue = (a as any)[key];\n                if (aValue !== bValue) {\n                    (style as any)[key] = bValue;\n                }\n                matchCount++;\n            } else {\n                (style as any)[key] = null;\n            }\n        }\n\n        keys = Object.keys(b);\n        i = 0;\n        while (matchCount < keys.length && i < keys.length) {\n            key = keys[i++];\n            if (!a.hasOwnProperty(key)) {\n                (style as any)[key] = (b as any)[key];\n                matchCount++;\n            }\n        }\n    }\n}\n\n/**\n * Set DOM property.\n *\n * @param node HTML or SVG Element.\n * @param isSVG node is an SVG Element.\n * @param key Attribute name.\n * @param value Attribute value.\n */\nfunction setDOMProperty(node: Element, flags: VNodeFlags, key: string, value?: any, prevValue?: any): void {\n    if (flags & VNodeFlags.MediaElement) {\n        /**\n         * HTMLMediaElements has an internal state with a `volume` property, so it should be checked before an\n         * assignment to prevent unnecessary events when `volume` value is the same as the `volume` in the internal\n         * state.\n         *\n         * In general we don't want to override behaviour of DOM Elements with an internal state. Assigning props\n         * to such elements should be treated as a one-time assignment, so it works almost like `volume` attribute,\n         * except when a new value is passed down, it can override previous value when it doesn't match the previous\n         * one. There is absolutely no reasons to overcomplicate such behaviour just to make it more beatiful like it\n         * is a declarative assignment and can't be changed, because in real applications, component that controls this\n         * element will always track changes to propagate them into its own state or an external state, and when it\n         * changes it will invalidate its representation, so everything stays in-sync.\n         */\n        if (key === \"volume\") {\n            if ((node as HTMLMediaElement).volume !== value) {\n                (node as HTMLMediaElement).volume = value === undefined ? null : value;\n            }\n            return;\n        }\n    }\n\n    if (value === undefined) {\n        /**\n         * Because there is no generic way to assign a default value for a property when it is removed, it is always\n         * removed with `removeAttribute` method.\n         */\n        node.removeAttribute(key);\n    } else {\n        if (key.length > 5) {\n            if (key.charCodeAt(0) === 120 &&\n                (key.charCodeAt(3) === 58 || key.charCodeAt(5) === 58)) { // 58 === \":\" \"xml:\", \"xlink:\"\n                if (key.charCodeAt(1) === 109 && key.charCodeAt(2) === 108) { // [109, 108] === \"ml\"\n                    /**\n                     * All attributes that starts with an \"xml:\" prefix will be assigned with XML namespace.\n                     */\n                    node.setAttributeNS(XML_NAMESPACE, key, value);\n                    return;\n                } else if (key.charCodeAt(1) === 108 &&\n                    key.charCodeAt(2) === 105 &&\n                    key.charCodeAt(3) === 110 &&\n                    key.charCodeAt(4) === 107) { // [108, 105, 110, 107] === \"link\"\n                    /**\n                     * All attributes that starts with an \"xlink:\" prefix will be assigned with XLINK namespace.\n                     */\n                    node.setAttributeNS(XLINK_NAMESPACE, key, value);\n                    return;\n                }\n            } else if (key.charCodeAt(4) === 45) { // 45 === \"-\" \"data-\", \"aria-\"\n                /**\n                 * Attributes that has \"-\" character at the 4th position will be assigned with a `setAttribute` method.\n                 * It should work with \"data-\" and \"aria-\" attributes. Otherwise just use property assignment instead\n                 * of `setAttribute`.\n                 */\n                node.setAttribute(key, value);\n                return;\n            }\n        }\n\n        (node as any)[key] = value;\n    }\n}\n\n/**\n * Sync DOM properties.\n *\n * Implementation detail: Syncing algorithm has an optimization with an early detection of object shape changes.\n * Objects with static shape will make syncing algorithm slightly faster because it doesn't need to check which\n * properties didn't existed before, so it is possible to just use the static object shapes, and use `undefined` values\n * when you want to remove property and have the same object shape.\n *\n * @param node HTML or SVG Element.\n * @param flags VNode flags.\n * @param a Old DOM properties.\n * @param b New DOM properties.\n */\nexport function syncDOMProps(\n    node: Element,\n    flags: VNodeFlags,\n    a: { [key: string]: any } | null,\n    b: { [key: string]: any } | null,\n): void {\n    let i: number;\n    let keys: string[];\n    let key: string;\n\n    if (a === null) {\n        if (b !== null) {\n            // a is empty, insert all attributes from b.\n            keys = Object.keys(b);\n            for (i = 0; i < keys.length; i++) {\n                key = keys[i];\n                setDOMProperty(node, flags, key, b[key]);\n            }\n        }\n    } else if (b === null) {\n        // b is empty, remove all attributes from a.\n        keys = Object.keys(a);\n        for (i = 0; i < keys.length; i++) {\n            setDOMProperty(node, flags, keys[i]);\n        }\n    } else {\n        let matchCount = 0;\n\n        // Remove and update attributes.\n        keys = Object.keys(a);\n        for (i = 0; i < keys.length; i++) {\n            key = keys[i];\n            const bValue = b[key];\n            if (bValue === undefined) {\n                setDOMProperty(node, flags, key);\n            } else {\n                const aValue = a[key];\n                if (aValue !== bValue) {\n                    setDOMProperty(node, flags, key, bValue, aValue);\n                }\n                matchCount++;\n            }\n        }\n\n        // Insert new attributes.\n        keys = Object.keys(b);\n        i = 0;\n        while (matchCount < keys.length && i < keys.length) {\n            key = keys[i++];\n            if (!a.hasOwnProperty(key)) {\n                setDOMProperty(node, flags, key, b[key]);\n                matchCount++;\n            }\n        }\n    }\n}\n","/**\n * Miscellaneous DOM related stuff.\n */\n\nexport const SVG_NAMESPACE = \"http://www.w3.org/2000/svg\";\nexport const XLINK_NAMESPACE = \"http://www.w3.org/1999/xlink\";\nexport const XML_NAMESPACE = \"http://www.w3.org/XML/1998/namespace\";\n\n/**\n * Traverses the DOM to the top and calculates DOM Node depth.\n *\n * @param node DOM Node.\n * @returns DOM Node depth.\n */\nexport function nodeDepth(node: Node | null): number {\n    let depth = 0;\n    while (node) {\n        depth++;\n        node = node.parentNode;\n    }\n    return depth;\n}\n\nexport type InputType = \"textarea\" | \"button\" | \"checkbox\" | \"color\" | \"date\" | \"datetime\" | \"datetime-local\" |\n    \"email\" | \"file\" | \"hidden\" | \"image\" | \"month\" | \"number\" | \"password\" | \"radio\" | \"range\" | \"reset\" | \"search\" |\n    \"submit\" | \"tel\" | \"text\" | \"time\" | \"url\" | \"week\";\n","import { EventHandler, EventHandlerList } from \"./event_handler\";\nimport { setEventHandlerListToDOMNode } from \"./utils\";\n\n/**\n * Shortcut for Event Handler registration.\n *\n * @param handler Event Handler.\n */\nfunction registerEventHandler(handler: EventHandler<any>): void {\n    handler.dispatcher.registerHandler(handler.fn);\n}\n\n/**\n * Shortcut for Event Handler unregistration.\n *\n * @param handler Event Handler.\n */\nfunction unregisterEventHandler(handler: EventHandler<any>): void {\n    handler.dispatcher.unregisterHandler(handler.fn);\n}\n\n/**\n * Sync DOM events.\n *\n * Implementation detail: Syncing algorithm has an optimization with an early detection of object shape changes.\n * Objects with static shape will make syncing algorithm slightly faster because it doesn't need to check which\n * properties didn't existed before, so it is possible to just use the static object shapes, and use `undefined` values\n * when you want to remove property and have the same object shape.\n *\n * @param node HTML or SVG Element.\n * @param a Old events.\n * @param b New events.\n */\nexport function syncEvents(\n    node: Element,\n    a: EventHandlerList | null,\n    b: EventHandlerList | null,\n): void {\n    let i: number;\n    let keys: string[];\n    let key: string;\n\n    if (a === null) {\n        if (b !== null) {\n            // a is empty, register all events from b.\n            keys = Object.keys(b);\n            for (i = 0; i < keys.length; i++) {\n                registerEventHandler(b[keys[i]]);\n            }\n        }\n    } else if (b === null) {\n        // b is empty, remove all events from a.\n        keys = Object.keys(a);\n        for (i = 0; i < keys.length; i++) {\n            unregisterEventHandler(a[keys[i]]);\n        }\n    } else {\n        let matchCount = 0;\n\n        // Remove and update events.\n        keys = Object.keys(a);\n        for (i = 0; i < keys.length; i++) {\n            key = keys[i];\n            const aHandler = a[key];\n            const bHandler = b[key];\n            if (bHandler !== undefined) {\n                if (aHandler !== bHandler) {\n                    registerEventHandler(bHandler);\n                    unregisterEventHandler(aHandler);\n                }\n                matchCount++;\n            } else {\n                unregisterEventHandler(aHandler);\n            }\n        }\n\n        // Insert new events.\n        keys = Object.keys(b);\n        i = 0;\n        while (matchCount < keys.length && i < keys.length) {\n            key = keys[i++];\n            if (!a.hasOwnProperty(key)) {\n                registerEventHandler(b[key]);\n                matchCount++;\n            }\n        }\n    }\n\n    setEventHandlerListToDOMNode(node, b === null ? undefined : b);\n}\n\n/**\n * Remove DOM events.\n *\n * @param node HTML or SVG Element.\n * @param a Old events.\n * @param b New events.\n */\nexport function removeEvents(events: EventHandlerList): void {\n    const keys = Object.keys(events);\n    for (let i = 0; i < keys.length; i++) {\n        unregisterEventHandler(events[keys[i]]);\n    }\n}\n","/**\n * DO NOT MOVE THIS FUNCTIONS TO SEPARATE MODULES!\n *\n * There are so many circular dependencies between functions in this module, so just leave it all here instead of\n * creating many circular dependencies between JS modules.\n *\n * Code in this module is working only in browser environments.\n *\n * Tags:\n *\n * #entry - Entry point, function that will be invoked just once when the reconciliation process is started with a root\n *   render, or when scheduler updates invalidated components. Entry point is a good place to inject tryCatch statements\n *   to improve stack trace messages etc.\n * #augment - Function that is used only for augmenting.\n * #component - Component related functions.\n */\n\nimport { DevModeFlags, DEV_MODE, perfMarkBegin, perfMarkEnd, getFunctionName } from \"../common/dev_mode\";\nimport { devModeOnError, devModeOnComponentCreated, devModeOnComponentDisposed } from \"../common/dev_hooks\";\nimport { injectScreenOfDeath } from \"../common/screen_of_death\";\nimport { SVG_NAMESPACE } from \"../common/dom\";\nimport {\n    setInitialNestingState, pushNestingState, restoreNestingState, checkNestingViolation, nestingStateAncestorFlags,\n    nestingStateParentTagName, AncestorFlags, AncestorFlagsByTagName,\n} from \"../common/html_nesting_rules\";\nimport { VNodeFlags, ComponentFlags } from \"./flags\";\nimport { VNode, getDOMInstanceFromVNode } from \"./vnode\";\nimport { ElementDescriptor } from \"./element_descriptor\";\nimport { cloneVNode, $t } from \"./vnode_builder\";\nimport {\n    ComponentClass, ComponentFunction, Component, registerComponent, unregisterComponent, getDOMInstanceFromComponent,\n} from \"./component\";\nimport {\n    stackTracePushComponent, stackTracePopComponent, stackTraceReset, stackTraceAugment,\n    getFunctionalComponentStackTrace,\n} from \"./stack_trace\";\nimport { Context } from \"./context\";\nimport { syncDOMProps, syncClassName, syncStyle } from \"./sync_dom\";\nimport { syncEvents, removeEvents } from \"../events/sync_events\";\n\n/**\n * Begin component perf mark.\n *\n * @param debugId\n * @param method\n */\nfunction componentPerfMarkBegin(debugId: number, method: string): void {\n    if (__IVI_DEV__) {\n        if (DEV_MODE & DevModeFlags.EnableComponentPerformanceProfiling) {\n            perfMarkBegin(`${debugId}::${method}`);\n        }\n    }\n}\n\n/**\n * End component perf mark.\n *\n * @param debugId\n * @param method\n * @param component\n */\nfunction componentPerfMarkEnd(\n    debugId: number,\n    method: string,\n    instance: false,\n    component: ComponentFunction<any>,\n): void;\nfunction componentPerfMarkEnd(\n    debugId: number,\n    method: string,\n    instance: true,\n    component: Component<any>,\n): void;\nfunction componentPerfMarkEnd(\n    debugId: number,\n    method: string,\n    instance: boolean,\n    component: Component<any> | ComponentFunction<any>,\n): void {\n    if (__IVI_DEV__) {\n        if (DEV_MODE & DevModeFlags.EnableComponentPerformanceProfiling) {\n            perfMarkEnd(\n                `${instance ? \"[C]\" : \"[F]\"}${getFunctionName(\n                    (instance ? component.constructor : component) as Function\n                )}::${method}`,\n                `${debugId}::${method}`,\n            );\n        }\n    }\n}\n\n/**\n * Traverses tree to the body and calculates `AncestorFlags`.\n *\n * @param element\n * @returns Ancestor Flags.\n */\nfunction ancestorFlags(element: Element): AncestorFlags {\n    if (__IVI_DEV__) {\n        let result = 0;\n        while (element && (element !== document.body)) {\n            result |= AncestorFlagsByTagName[element.tagName.toLowerCase()];\n            element = element.parentElement;\n        }\n        return result;\n    }\n\n    return 0;\n}\n\n/**\n * Render VNode entry point tryCatch wrapper.\n *\n * #entry\n *\n * @param container Container Node.\n * @param refChild Reference to the next Node, when it is `null` child will be inserted at the end.\n * @param vnode VNode.\n * @param context Current context.\n * @param owner Owning component.\n * @returns Rendered instance.\n */\nexport function renderVNode(\n    parent: Node,\n    refChild: Node | null,\n    vnode: VNode<any>,\n    context: Context,\n    owner?: Component<any>,\n): Node | Component<any> {\n    if (__IVI_DEV__) {\n        if ((parent as Element).tagName) {\n            setInitialNestingState((parent as Element).tagName.toLowerCase(), ancestorFlags(parent as Element));\n        } else {\n            setInitialNestingState(\"\", 0);\n        }\n\n        try {\n            return _renderVNode(parent, refChild, vnode, context, owner);\n        } catch (e) {\n            stackTraceAugment(e);\n            devModeOnError(e);\n            injectScreenOfDeath(`ivi Error: ${e.message}`, e.stack);\n            stackTraceReset();\n            throw e;\n        }\n    }\n    return _renderVNode(parent, refChild, vnode, context, owner);\n}\n\n/**\n * Render VNode entry point. Renders VNode into container and invokes `didMount` lifecycle methods after VNode is\n * inserted into container.\n *\n * #entry\n *\n * @param container Container Node.\n * @param refChild Reference to the next Node, when it is `null` child will be inserted at the end.\n * @param vnode VNode.\n * @param context Current context.\n * @param owner Owning component.\n * @returns Rendered DOM Node.\n */\nfunction _renderVNode(\n    container: Node,\n    refChild: Node | null,\n    vnode: VNode<any>,\n    context: Context,\n    owner?: Component<any>,\n): Node | Component<any> {\n    return vNodeRenderInto(container, refChild, vnode, context, owner);\n}\n\n/**\n * Sync VNode entry point tryCatch wrapper.\n *\n * @param parent Parent node.\n * @param a Old VNode.\n * @param b New VNode.\n * @param context Current context.\n * @param owner Owning component.\n * @returns Synced DOM Node. When VNodes are synced and they aren't compatible, old DOM Node will be replaced with a new\n * DOM Node.\n */\nexport function syncVNode(\n    parent: Node,\n    a: VNode<any>,\n    b: VNode<any>,\n    context: Context,\n    owner?: Component<any>,\n): Node | Component<any> {\n    if (__IVI_DEV__) {\n        if ((parent as Element).tagName) {\n            setInitialNestingState((parent as Element).tagName.toLowerCase(), ancestorFlags(parent as Element));\n        } else {\n            setInitialNestingState(\"\", 0);\n        }\n\n        try {\n            return _syncVNode(parent, a, b, context, owner);\n        } catch (e) {\n            stackTraceAugment(e);\n            devModeOnError(e);\n            injectScreenOfDeath(`ivi Error: ${e.message}`, e.stack);\n            stackTraceReset();\n            throw e;\n        }\n    }\n    return _syncVNode(parent, a, b, context, owner);\n}\n\n/**\n * Sync VNode entry point. Sync VNode with a new one or replace when they aren't compatible.\n *\n * #entry\n *\n * @param parent Parent node.\n * @param a Old VNode.\n * @param b New VNode.\n * @param context Current context.\n * @param owner Owning component.\n * @returns Synced DOM Node. When VNodes are synced and they aren't compatible, old DOM Node will be replaced with a new\n * DOM Node.\n */\nfunction _syncVNode(\n    parent: Node,\n    a: VNode<any>,\n    b: VNode<any>,\n    context: Context,\n    owner?: Component<any>,\n): Node | Component<any> {\n    return vNodeSyncOrReplace(parent, a, b, context, owner);\n}\n\n/**\n * Remove VNode entry point tryCatch wrapper.\n *\n * #entry\n *\n * @param parent Parent DOM node.\n * @param node VNode element to remove.\n */\nexport function removeVNode(parent: Node, node: VNode<any>): void {\n    if (__IVI_DEV__) {\n        try {\n            _removeVNode(parent, node);\n            return;\n        } catch (e) {\n            stackTraceAugment(e);\n            devModeOnError(e);\n            injectScreenOfDeath(`ivi Error: ${e.message}`, e.stack);\n            stackTraceReset();\n            throw e;\n        }\n    }\n    _removeVNode(parent, node);\n}\n\n/**\n * Remove VNode entry point.\n *\n * #entry\n *\n * @param parent Parent DOM node.\n * @param node VNode element to remove.\n */\nfunction _removeVNode(parent: Node, node: VNode<any>): void {\n    parent.removeChild(getDOMInstanceFromVNode(node) !);\n    vNodeUnmount(node);\n}\n\n/**\n * Augment entry point tryCatch wrapper.\n *\n * #entry\n * #augment\n *\n * @param parent Parent DOM Node.\n * @param node DOM Node.\n * @param vnode Virtual DOM Node.\n * @param context Context.\n * @param owner Owner.\n */\nexport function augmentVNode(\n    parent: Node,\n    node: Node | null,\n    vnode: VNode<any>,\n    context: Context,\n    owner?: Component<any>,\n): void {\n    if (__IVI_DEV__) {\n        if ((parent as Element).tagName) {\n            setInitialNestingState((parent as Element).tagName.toLowerCase(), ancestorFlags(parent as Element));\n        } else {\n            setInitialNestingState(\"\", 0);\n        }\n\n        try {\n            _augmentVNode(parent, node, vnode, context, owner);\n            return;\n        } catch (e) {\n            stackTraceAugment(e);\n            devModeOnError(e);\n            injectScreenOfDeath(`ivi Error: ${e.message}`, e.stack);\n            stackTraceReset();\n            throw e;\n        }\n    }\n    _augmentVNode(parent, node, vnode, context, owner);\n}\n\n/**\n * Augment entry point. Augments DOM tree with a Virtual DOM tree and performs mounting.\n *\n * #entry\n * #augment\n *\n * @param parent Parent DOM Node.\n * @param node DOM Node.\n * @param vnode Virtual DOM Node.\n * @param context Context.\n * @param owner Owner.\n */\nfunction _augmentVNode(\n    parent: Node,\n    node: Node | null,\n    vnode: VNode<any>,\n    context: Context,\n    owner?: Component<any>,\n): void {\n    vNodeAugment(parent, node, vnode, context, owner);\n}\n\n/**\n * Update Component entry point tryCatch wrapper.\n *\n * #entry\n * #component\n *\n * @param component Component to update.\n * @returns DOM Node.\n */\nexport function updateComponent<P>(component: Component<P>): void {\n    if (__IVI_DEV__) {\n        try {\n            stackTracePushComponent((component as Object).constructor as ComponentClass<any>, component);\n            _updateComponent(component);\n            stackTracePopComponent();\n            return;\n        } catch (e) {\n            stackTraceAugment(e);\n            devModeOnError(e);\n            injectScreenOfDeath(`ivi Error: ${e.message}`, e.stack);\n            stackTraceReset();\n            throw e;\n        }\n    }\n    _updateComponent(component);\n}\n\n/**\n * Update Component.\n *\n * #entry\n *\n * @param component Component to update.\n * @returns DOM Node.\n */\nfunction _updateComponent<P>(component: Component<P>): void {\n    const flags = component.flags;\n\n    if ((flags & ComponentFlags.Mounted) && (flags & ComponentFlags.Dirty)) {\n        componentPerfMarkBegin(component._debugId, \"update\");\n\n        const oldRoot = component.root!;\n        if (flags & ComponentFlags.DirtyContext) {\n            componentUpdateContext(component);\n        }\n\n        componentWillUpdate(component);\n\n        if (flags & (ComponentFlags.DirtyProps | ComponentFlags.DirtyState | ComponentFlags.UsingContext)) {\n            if (__IVI_DEV__) {\n                if ((component._parentDOMNode as Element).tagName) {\n                    setInitialNestingState((component._parentDOMNode as Element).tagName.toLowerCase(),\n                        component._ancestorFlags);\n                } else {\n                    setInitialNestingState(\"\", component._ancestorFlags);\n                }\n            }\n            const parentNode = component._parentDOMNode;\n            const newRoot = componentClassRender(component);\n            vNodeSyncOrReplace(parentNode!, oldRoot, newRoot, component._context);\n            component.flags &= ~(ComponentFlags.Dirty | ComponentFlags.InUpdateQueue);\n        } else if (oldRoot) {\n            vNodePropagateNewContext(component._parentDOMNode!, oldRoot, component._context, component);\n        }\n\n        componentDidUpdate(component);\n        componentPerfMarkEnd(component._debugId, \"update\", true, component);\n    }\n}\n\n/**\n * Update a component function.\n *\n * #component\n *\n * @param parent Parent DOM Node.\n * @param a Old VNode.\n * @param b New VNode.\n * @param context Current Context.\n * @param owner Owner.\n * @returns DOM Node.\n */\nfunction _updateComponentFunction(\n    parent: Node,\n    a: VNode<any>,\n    b: VNode<any>,\n    context: Context,\n    owner?: Component<any>,\n): Node | Component<any> {\n    let instance: Node | Component<any>;\n    const fn = b._tag as ComponentFunction<any>;\n\n    componentPerfMarkBegin(b._debugId, \"update\");\n\n    if (a === b || !fn.isPropsChanged || fn.isPropsChanged(a._props, b._props)) {\n        const oldRoot = a._children as VNode<any>;\n        const newRoot = b._children = componentFunctionRender(fn, b._props, context);\n        instance = vNodeSyncOrReplace(parent, oldRoot, newRoot, context, owner);\n    } else {\n        b._children = a._children;\n        instance = a._instance!;\n    }\n\n    componentPerfMarkEnd(b._debugId, \"update\", false, fn);\n\n    b._instance = instance;\n    return instance;\n}\n\n/**\n * Recursively mount all nodes.\n *\n * @param vnode VNode.\n */\nfunction vNodeMount(vnode: VNode<any>): void {\n    const flags = vnode._flags;\n\n    if (flags & VNodeFlags.Component) {\n        if (flags & VNodeFlags.ComponentClass) {\n            const component = vnode._instance as Component<any>;\n            stackTracePushComponent(vnode._tag as ComponentClass<any>, component);\n            componentPerfMarkBegin(component._debugId, \"mount\");\n\n            if (__IVI_DEV__) {\n                if (component.flags & ComponentFlags.Mounted) {\n                    throw new Error(\"Failed to mount Component: component is already mounted.\");\n                }\n            }\n\n            component.flags |= ComponentFlags.Mounted;\n            componentDidMount(component);\n            vNodeMount(component.root!);\n            componentPerfMarkEnd(component._debugId, \"mount\", true, component);\n        } else { // (flags & VNodeFlags.ComponentFunction)\n            stackTracePushComponent(vnode._tag as ComponentFunction<any>);\n            componentPerfMarkBegin(vnode._debugId, \"mount\");\n            vNodeMount(vnode._children as VNode<any>);\n            componentPerfMarkEnd(vnode._debugId, \"mount\", false, vnode._tag as ComponentFunction<any>);\n        }\n        stackTracePopComponent();\n    } else if (!(flags & (VNodeFlags.InputElement | VNodeFlags.MediaElement))) {\n        let children = vnode._children;\n        if (children !== null && (flags & (VNodeFlags.ChildrenVNode | VNodeFlags.ChildrenArray))) {\n            if (flags & VNodeFlags.ChildrenArray) {\n                children = children as VNode<any>[];\n                for (let i = 0; i < children.length; i++) {\n                    vNodeMount(children[i]);\n                }\n            } else {\n                vNodeMount(children as VNode<any>);\n            }\n        }\n    }\n}\n\n/**\n * Recursively unmount all nodes.\n *\n * @param vnode VNode.\n */\nfunction vNodeUnmount(vnode: VNode<any>): void {\n    const flags = vnode._flags;\n    if (flags & VNodeFlags.Component) {\n        if (flags & VNodeFlags.ComponentClass) {\n            const component = vnode._instance as Component<any>;\n            stackTracePushComponent(vnode._tag as ComponentClass<any>, component);\n            componentPerfMarkBegin(component._debugId, \"unmount\");\n\n            if (__IVI_DEV__) {\n                if (!(component.flags & ComponentFlags.Mounted)) {\n                    throw new Error(\"Failed to unmount Component: component is already unmounted.\");\n                }\n            }\n            vNodeUnmount(component.root!);\n            component.flags &= ~(ComponentFlags.Mounted | ComponentFlags.UpdateEachFrame);\n            componentDidUnmount(component);\n            componentPerfMarkEnd(component._debugId, \"unmount\", true, component);\n            unregisterComponent(component);\n            devModeOnComponentDisposed(component);\n        } else { // (flags & VNodeFlags.ComponentFunction)\n            stackTracePushComponent(vnode._tag as ComponentFunction<any>);\n            componentPerfMarkBegin(vnode._debugId, \"unmount\");\n            vNodeUnmount(vnode._children as VNode<any>);\n            componentPerfMarkEnd(vnode._debugId, \"unmount\", false, vnode._tag as ComponentFunction<any>);\n        }\n        stackTracePopComponent();\n    } else if (flags & VNodeFlags.Element) {\n        if (!(flags & (VNodeFlags.InputElement | VNodeFlags.MediaElement))) {\n            let children = vnode._children;\n            if (children !== null && (flags & (VNodeFlags.ChildrenVNode | VNodeFlags.ChildrenArray))) {\n                if (flags & VNodeFlags.ChildrenArray) {\n                    children = children as VNode<any>[];\n                    for (let i = 0; i < children.length; i++) {\n                        vNodeUnmount(children[i]);\n                    }\n                } else {\n                    vNodeUnmount(children as VNode<any>);\n                }\n            }\n        }\n        if (vnode._events) {\n            removeEvents(vnode._events);\n        }\n    }\n\n    if (vnode._ref) {\n        vnode._ref(null);\n    }\n}\n\n/**\n * Unmount all nodes and its subtrees.\n *\n * @param vnodes Array of VNodes.\n */\nfunction vNodeUnmountAll(vnodes: VNode<any>[]): void {\n    for (let i = 0; i < vnodes.length; i++) {\n        vNodeUnmount(vnodes[i]);\n    }\n}\n\n/**\n * Recursively propagate new context.\n *\n * @param vnode VNode.\n * @param context New context.\n */\nfunction vNodePropagateNewContext(parent: Node, vnode: VNode<any>, context: Context, owner?: Component<any>): void {\n    const flags = vnode._flags;\n    if (flags & VNodeFlags.Component) {\n        if (flags & VNodeFlags.ComponentClass) {\n            const component = vnode._instance as Component<any>;\n            stackTracePushComponent(vnode._tag as ComponentClass<any>, component);\n            componentPerfMarkBegin(component._debugId, \"propagateContext\");\n            componentUpdateParentContext(component, context);\n            _updateComponent(component);\n            componentPerfMarkEnd(component._debugId, \"propagateContext\", true, component);\n        } else { // (flags & VNodeFlags.ComponentFunction)\n            const fn = vnode._tag as ComponentFunction<any>;\n            stackTracePushComponent(vnode._tag as ComponentFunction<any>);\n            componentPerfMarkBegin(vnode._debugId, \"propagateContext\");\n            // Optimization that checks if function is using context parameter. When function doesn't use context, it\n            // means that we can ignore re-renders when context is changed, and just propagate a new context through\n            // existing subtree.\n            if (fn.length < 2) {\n                if (vnode._children) {\n                    vNodePropagateNewContext(parent, vnode._children as VNode<any>, context, owner);\n                }\n            } else {\n                _updateComponentFunction(parent, vnode._children as VNode<any>, vnode._children as VNode<any>, context,\n                    owner);\n            }\n            componentPerfMarkEnd(vnode._debugId, \"propagateContext\", false, fn);\n        }\n        stackTracePopComponent();\n    } else if (!(flags & (VNodeFlags.InputElement | VNodeFlags.MediaElement))) {\n        let children = vnode._children;\n        if (children !== null && (flags & (VNodeFlags.ChildrenVNode | VNodeFlags.ChildrenArray))) {\n            if (flags & VNodeFlags.ChildrenArray) {\n                children = children as VNode<any>[];\n                for (let i = 0; i < children.length; i++) {\n                    vNodePropagateNewContext(parent, children[i], context, owner);\n                }\n            } else {\n                vNodePropagateNewContext(parent, children as VNode<any>, context, owner);\n            }\n        }\n    }\n}\n\n/**\n * Move node.\n *\n * @param parent Parent DOM node.\n * @param node VNode element to move.\n * @param nextRef Reference to the next node, if it is null, node will be moved to the end.\n */\nfunction vNodeMoveChild(parent: Node, node: VNode<any>, nextRef: Node | null): void {\n    parent.insertBefore(getDOMInstanceFromVNode(node) !, nextRef!);\n}\n\n/**\n * Remove all children.\n *\n * `didUnmount` lifecycle methods will be invoked in all children and their subtrees.\n *\n * @param parent Parent DOM node.\n * @param nodes Arrays of VNodes to remove.\n */\nfunction vNodeRemoveAllChildren(parent: Node, nodes: VNode<any>[]): void {\n    parent.textContent = \"\";\n    vNodeUnmountAll(nodes);\n}\n\n/**\n * Remove child.\n *\n * `didUnmount` lifecycle methods will be invoked in removed node and its subtree.\n *\n * @param parent Parent DOM node.\n * @param node VNode element to remove.\n */\nfunction vNodeRemoveChild(parent: Node, node: VNode<any>): void {\n    parent.removeChild(getDOMInstanceFromVNode(node) !);\n    vNodeUnmount(node);\n}\n\n/**\n * Assign a new parent context to a component.\n *\n * Reference equality is used to check if context is changed, all context objects should be immutable.\n *\n * #component\n *\n * @param component Component.\n * @param newContext New Context to assign.\n */\nfunction componentUpdateParentContext<P>(component: Component<P>, newParentContext: Context): void {\n    if (component._parentContext !== newParentContext) {\n        component.flags |= ComponentFlags.DirtyContext;\n        const oldContext = component._parentContext;\n        component._parentContext = newParentContext;\n        component.didReceiveNewContext(oldContext, newParentContext);\n    }\n}\n\n/**\n * Update current context of a component.\n *\n * #component\n *\n * @param component Component.\n */\nfunction componentUpdateContext<P>(component: Component<P>): void {\n    component.flags &= ~(ComponentFlags.CheckUsingProps | ComponentFlags.ContextUsingProps);\n    const contextData = component.updateContext();\n    component.flags |= (component.flags & ComponentFlags.CheckUsingProps) << 1;\n    const newContext = contextData ? new Context(contextData, component._parentContext) : component._parentContext;\n    component._context = newContext;\n}\n\n/**\n * Assign a new props to a component.\n *\n * #component\n *\n * @param component Component.\n * @param newProps New props to assign.\n */\nfunction componentUpdateProps<P>(component: Component<P>, newProps: P): void {\n    const oldProps = component._props;\n    if (component.isPropsChanged(oldProps, newProps)) {\n        component.flags |= ComponentFlags.DirtyProps;\n\n        component._props = newProps;\n\n        // There is no reason to call `didReceiveNewProps` when props aren't changed, even when they are reassigned\n        // later to reduce memory usage.\n        component.didReceiveNewProps(oldProps, newProps);\n        if (component.flags & ComponentFlags.ContextUsingProps) {\n            component.flags |= ComponentFlags.DirtyContext;\n        }\n    } else {\n        // Reassign props even when they aren't changed to reduce overall memory usage.\n        //\n        // New value always stays alive because it is referenced from virtual dom tree, so instead of keeping in memory\n        // two values even when they are the same, we just always reassign it to the new value.\n        component._props = newProps;\n    }\n}\n\n/**\n * Invoke `component.willUpdate` method.\n *\n * #component\n *\n * @param component\n */\nfunction componentWillUpdate<P>(component: Component<P>): void {\n    component.willUpdate();\n}\n\n/**\n * Invoke `component.didUpdate` method.\n *\n * #component\n *\n * @param component\n */\nfunction componentDidUpdate<P>(component: Component<P>): void {\n    component.didUpdate();\n}\n\n/**\n * Invoke `component.didMount` method.\n *\n * #component\n *\n * @param component\n */\nfunction componentDidMount<P>(component: Component<P>): void {\n    component.didMount();\n}\n\n/**\n * Invoke `component.didMount` method.\n *\n * #component\n *\n * @param component\n */\nfunction componentDidUnmount<P>(component: Component<P>): void {\n    component.didUnmount();\n}\n\n/**\n * Render a component class instance and return root VNode.\n *\n * #component\n *\n * @param component Component.\n * @returns Root VNode.\n */\nfunction componentClassRender<P>(component: Component<P>): VNode<any> {\n    component.flags &= ~(ComponentFlags.CheckUsingContext | ComponentFlags.UsingContext);\n    const root = component.root = component.render() || $t(\"\");\n    component.flags |= (component.flags & ComponentFlags.CheckUsingContext) << 1;\n    return root;\n}\n\n/**\n * Render a component function instance and return root VNode.\n *\n * #component\n *\n * @param component Component function.\n * @param props Props.\n * @param context Context.\n * @returns Root VNode.\n */\nfunction componentFunctionRender<P>(component: ComponentFunction<P>, props: P, context?: Context): VNode<any> {\n    return component(props, context) || $t(\"\");\n}\n\n/**\n * Set value for HTMLInputElement.\n *\n * When value has a string type it is assigned to `value` property, otherwise it is assigned to `checked` property.\n *\n * @param input HTMLInputElement.\n * @param value Value.\n */\nfunction setHTMLInputValue(input: HTMLInputElement, value: string | boolean | null): void {\n    if (typeof value === \"string\") {\n        input.value = value;\n    } else {\n        input.checked = value as boolean;\n    }\n}\n\n/**\n * Render VNode.\n *\n * @param parent Parent DOM Node.\n * @param vnode VNode to render.\n * @param context Current context.\n * @param owner Owning component.\n * @returns Rendered DOM Node.\n */\nfunction vNodeRender(parent: Node, vnode: VNode<any>, context: Context, owner?: Component<any>): Node | Component<any> {\n    // if VNode already has an instance, perform a deep clone\n    if (vnode._instance) {\n        vnode = cloneVNode(vnode);\n    }\n\n    const flags = vnode._flags;\n    let instance: Node | Component<any>;\n    let childInstance: Node | Component<any>;\n    let i: number;\n    let child: VNode<any>;\n\n    if (flags & (VNodeFlags.Text | VNodeFlags.Element)) {\n        // Push nesting state and check for nesting violation.\n        const _prevNestingStateParentTagName = nestingStateParentTagName();\n        const _prevNestingStateAncestorFlags = nestingStateAncestorFlags();\n\n        if (flags & VNodeFlags.Text) {\n            pushNestingState(\"$t\");\n            checkNestingViolation();\n            instance = document.createTextNode(vnode._children as string);\n        } else { // (flags & VNodeFlags.Element)\n            pushNestingState((flags & VNodeFlags.ElementDescriptor) ?\n                (vnode._tag as ElementDescriptor<any>)._tagName :\n                vnode._tag as string);\n            checkNestingViolation();\n            if (flags & VNodeFlags.ElementDescriptor) {\n                instance = (vnode._tag as ElementDescriptor<any>).createElement();\n            } else if (flags & VNodeFlags.InputElement) {\n                if (flags & VNodeFlags.TextAreaElement) {\n                    instance = document.createElement(\"textarea\");\n                } else {\n                    instance = document.createElement(\"input\");\n                    (instance as HTMLInputElement).type = vnode._tag as string;\n                }\n            } else if (flags & VNodeFlags.SvgElement) {\n                instance = document.createElementNS(SVG_NAMESPACE, vnode._tag as string);\n            } else {\n                instance = document.createElement(vnode._tag as string);\n            }\n\n            if (vnode._props) {\n                syncDOMProps(instance as Element, flags, null, vnode._props);\n            }\n            if (vnode._className !== null) {\n                syncClassName(instance as Element, flags, null, vnode._className);\n            }\n            if (vnode._style !== null) {\n                syncStyle(instance as HTMLElement, null, vnode._style);\n            }\n            if (vnode._events) {\n                syncEvents(instance as Element, null, vnode._events);\n            }\n\n            let children = vnode._children;\n            if (children !== null) {\n                if (flags & (VNodeFlags.ChildrenBasic | VNodeFlags.ChildrenArray)) {\n                    if (flags & VNodeFlags.ChildrenBasic) {\n                        instance.textContent = children as string;\n                    } else {\n                        children = children as VNode<any>[];\n                        for (i = 0; i < children.length; i++) {\n                            child = children[i];\n                            childInstance = vNodeRender(instance, child, context, owner);\n\n                            instance.insertBefore(\n                                (child._flags & VNodeFlags.ComponentClass) ?\n                                    getDOMInstanceFromComponent(childInstance as Component<any>) :\n                                    childInstance as Node,\n                                null);\n                        }\n                    }\n                } else if (flags & VNodeFlags.ChildrenVNode) {\n                    child = children as VNode<any>;\n                    childInstance = vNodeRender(instance, child, context, owner);\n                    instance.insertBefore(\n                        (child._flags & VNodeFlags.ComponentClass) ?\n                            getDOMInstanceFromComponent(childInstance as Component<any>) :\n                            childInstance as Node,\n                        null);\n                } else if (flags & VNodeFlags.InputElement) {\n                    setHTMLInputValue(instance as HTMLInputElement, children as string | boolean);\n                } else { // (flags & VNodeFlags.UnsafeHTML)\n                    (instance as Element).innerHTML = children as string;\n                }\n            }\n        }\n\n        restoreNestingState(_prevNestingStateParentTagName, _prevNestingStateAncestorFlags);\n    } else { // (flags & VNodeFlags.Component)\n        if (flags & VNodeFlags.ComponentClass) {\n            const component = instance = new (vnode._tag as ComponentClass<any>)(vnode._props, context, owner);\n            registerComponent(component);\n            devModeOnComponentCreated(component);\n            stackTracePushComponent(vnode._tag as ComponentClass<any>, component);\n            componentPerfMarkBegin(component._debugId, \"create\");\n            if (__IVI_DEV__) {\n                component._ancestorFlags = nestingStateAncestorFlags();\n                component._stackTrace = getFunctionalComponentStackTrace();\n            }\n            component._parentDOMNode = parent;\n            componentUpdateContext(component);\n            const root = componentClassRender(component);\n            vNodeRender(parent, root, component._context, component);\n            componentPerfMarkEnd(component._debugId, \"create\", true, component);\n        } else { // (flags & VNodeFlags.ComponentFunction)\n            stackTracePushComponent(vnode._tag as ComponentFunction<any>);\n            componentPerfMarkBegin(vnode._debugId, \"create\");\n            const root = vnode._children =\n                componentFunctionRender(vnode._tag as ComponentFunction<any>, vnode._props, context);\n            instance = vNodeRender(parent, root, context, owner);\n            componentPerfMarkEnd(vnode._debugId, \"create\", false, vnode._tag as ComponentFunction<any>);\n        }\n        stackTracePopComponent();\n    }\n\n    vnode._instance = instance;\n    if (vnode._ref) {\n        vnode._ref(instance);\n    }\n\n    return instance;\n}\n\n/**\n * Render VNode into container and invoke `didMount` lifecycle methods after VNode is inserted into container.\n *\n * It is important that `didMount` methods are invoked only after DOM Nodes have been inserted into container, so it\n * goes twice through the entire vnode tree, first time when everything is rendered and the second time when `didMount`\n * methods are invoked.\n *\n * @param container Container Node.\n * @param refChild Reference to the next Node, when it is `null` child will be inserted at the end.\n * @param vnode VNode.\n * @param context Current context.\n * @param owner Owning component.\n * @returns Rendered DOM Node.\n */\nfunction vNodeRenderInto(\n    container: Node,\n    refChild: Node | null,\n    vnode: VNode<any>,\n    context: Context,\n    owner?: Component<any>,\n): Node | Component<any> {\n    const instance = vNodeRender(container, vnode, context, owner);\n    container.insertBefore(getDOMInstanceFromVNode(vnode) !, refChild);\n    vNodeMount(vnode);\n    return instance;\n}\n\n/**\n * Get non-comment DOM Node. This function removes all comment DOM Nodes when searching for non-comment nodes.\n *\n * #augment\n *\n * @param parent Parent DOM Node.\n * @param node DOM Node.\n * @returns Non-comment DOM Node.\n */\nfunction getNonCommentNode(parent: Node, node: Node | null): Node | null {\n    while (node && node.nodeType === 8) {\n        const next = node.nextSibling;\n        parent.removeChild(node);\n        node = next;\n    }\n    return node;\n}\n\n/**\n * Augment DOM Node with a Virtual DOM Node.\n *\n * #augment\n *\n * @param parent Parent DOM Node.\n * @param node DOM Node.\n * @param vnode Virtual DOM Node.\n * @param context Context.\n * @param owner Owner.\n */\nfunction vNodeAugment(\n    parent: Node,\n    node: Node | null,\n    vnode: VNode<any>,\n    context: Context,\n    owner?: Component<any>,\n): Node | Component<any> {\n    // if VNode already has a reference to a DOM Node, perform a deep clone of vnodes\n    if (vnode._instance) {\n        vnode = cloneVNode(vnode);\n    }\n\n    let instance: Node | Component<any>;\n\n    if (node) {\n        const flags = vnode._flags;\n\n        if (flags & (VNodeFlags.Element | VNodeFlags.Text)) {\n            // Push nesting state and check for nesting violation.\n            const _prevNestingStateParentTagName = nestingStateParentTagName();\n            const _prevNestingStateAncestorFlags = nestingStateAncestorFlags();\n\n            instance = node;\n\n            if (flags & VNodeFlags.Element) {\n                if (__IVI_DEV__) {\n                    pushNestingState((flags & VNodeFlags.ElementDescriptor) ?\n                        (vnode._tag as ElementDescriptor<any>)._tagName :\n                        vnode._tag as string);\n                    checkNestingViolation();\n                    if (node.nodeType !== 1) {\n                        throw new Error(`Invalid node type: expected \"1\", actual \"${node.nodeType}\".`);\n                    }\n                    if (vnode._className) {\n                        const className = (node as Element).getAttribute(\"class\");\n                        if (className !== vnode._className) {\n                            throw new Error(`Invalid class name: expected \"${vnode._className}\", ` +\n                                `actual \"${className}\".`);\n                        }\n                    }\n                    // We can't check any style properties, because browsers ignore style names they don't understand,\n                    // like style names with browser specific prefixes.\n                    if (vnode._children === null) {\n                        if (node.hasChildNodes()) {\n                            throw new Error(`Invalid children: expected \"0\" children, ` +\n                                `actual \"${node.childNodes.length}\".`);\n                        }\n                    }\n                }\n\n                if (vnode._events) {\n                    syncEvents(node as Element, null, vnode._events);\n                }\n\n                if (vnode._children !== null) {\n                    if (flags & (VNodeFlags.ChildrenArray | VNodeFlags.ChildrenVNode)) {\n                        let domChild = getNonCommentNode(node, node.firstChild);\n                        if (flags & VNodeFlags.ChildrenArray) {\n                            const children = vnode._children as VNode<any>[];\n                            for (let i = 0; i < children.length; i++) {\n                                if (__IVI_DEV__) {\n                                    if (domChild === null) {\n                                        throw new Error(`Invalid children: expected to find ${children.length} ` +\n                                            `children nodes.`);\n                                    }\n                                }\n                                vNodeAugment(node, domChild, children[i], context, owner);\n                                domChild = getNonCommentNode(node, domChild!.nextSibling);\n                            }\n                            if (__IVI_DEV__) {\n                                if (getNonCommentNode(node, domChild) !== null) {\n                                    throw new Error(`Invalid children: document contains more children nodes than ` +\n                                        `expected.`);\n                                }\n                            }\n                        } else {\n                            if (__IVI_DEV__) {\n                                if (domChild === null) {\n                                    throw new Error(`Invalid children: expected to find 1 child node.`);\n                                }\n                                if (getNonCommentNode(node, domChild.nextSibling) !== null) {\n                                    throw new Error(`Invalid children: document contains more children nodes than ` +\n                                        `expected.`);\n                                }\n                            }\n                            vNodeAugment(node, domChild, vnode._children as VNode<any>, context, owner);\n                        }\n\n                    } else if (flags & VNodeFlags.InputElement) {\n                        // Do not override input value when augmenting.\n                        //\n                        // TODO: What should be the default behavior when input element is changed before scripts\n                        // are loaded. Maybe we should fire onInput event, is synthetic event enough, or it should be\n                        // a native event?\n                        //\n                        // setHTMLInputValue(node as HTMLInputElement, vnode._children as string | boolean);\n                    }\n                }\n            } else if (__IVI_DEV__) { // (flags & VNodeFlags.Text)\n                pushNestingState(\"$t\");\n                checkNestingViolation();\n\n                if (node.nodeType !== 3) {\n                    throw new Error(`Invalid node type: expected \"3\", actual \"${node.nodeType}\".`);\n                }\n                if (node.nodeValue !== (vnode._children as number | boolean | string).toString()) {\n                    throw new Error(`Invalid text content: expected \"${vnode._children}\", actual \"${node.nodeValue}\".`);\n                }\n            }\n\n            restoreNestingState(_prevNestingStateParentTagName, _prevNestingStateAncestorFlags);\n        } else { // (flags & VNodeFlags.Component)\n            if (flags & VNodeFlags.ComponentClass) {\n                const component = instance = new (vnode._tag as ComponentClass<any>)(vnode._props, context, owner);\n                registerComponent(component);\n                devModeOnComponentCreated(component);\n                stackTracePushComponent(vnode._tag as ComponentClass<any>, component);\n\n                if (__IVI_DEV__) {\n                    component._ancestorFlags = nestingStateAncestorFlags();\n                    component._stackTrace = getFunctionalComponentStackTrace();\n                }\n\n                component._parentDOMNode = parent;\n                componentUpdateContext(component);\n                const root = componentClassRender(component);\n                vNodeAugment(parent, node, root, component._context, component);\n            } else {\n                stackTracePushComponent(vnode._tag as ComponentFunction<any>);\n                const root = vnode._children =\n                    componentFunctionRender(vnode._tag as ComponentFunction<any>, vnode._props, context);\n                instance = vNodeAugment(parent, node, root, context, owner);\n            }\n\n            stackTracePopComponent();\n        }\n    } else {\n        instance = vNodeRenderInto(parent, null, vnode, context, owner);\n    }\n\n    vnode._instance = instance;\n    if (vnode._ref) {\n        vnode._ref(instance);\n    }\n\n    return instance;\n}\n\n/**\n * Check if two nodes can be synced.\n *\n * Two nodes can be synced when their flags and tags are identical.\n *\n * @param a Old VNode.\n * @param b New VNode.\n * @return true if nodes can be synced.\n */\nfunction vNodeCanSync(a: VNode<any>, b: VNode<any>): boolean {\n    return ((a._flags & VNodeFlags.Syncable) === (b._flags & VNodeFlags.Syncable) &&\n        a._tag === b._tag &&\n        a._key === b._key);\n}\n\n/**\n * Sync two VNodes.\n *\n * When node `a` is synced with node `b`, `a` node should be considered as destroyed, and any access to it after sync\n * is an undefined behavior.\n *\n * @param parent Parent node.\n * @param a Old VNode.\n * @param b New VNode.\n * @param context Current context.\n * @param owner Owning component.\n * @returns Synced DOM Node. When VNodes are synced and they aren't compatible, old DOM Node will be replaced with a new\n * DOM Node.\n */\nfunction vNodeSync(\n    parent: Node,\n    a: VNode<any>,\n    b: VNode<any>,\n    context: Context,\n    owner?: Component<any>,\n): Node | Component<any> {\n    if (a === b) {\n        return b._instance!;\n    }\n\n    if (b._instance) {\n        b = cloneVNode(b);\n    }\n\n    const flags = a._flags;\n    let instance: Node | Component<any> | undefined;\n\n    if (flags & (VNodeFlags.Text | VNodeFlags.Element)) {\n        instance = b._instance = a._instance!;\n\n        if (flags & VNodeFlags.Text) {\n            if (a._children !== b._children) {\n                (instance as Text).nodeValue = b._children as string;\n            }\n        } else { // (flags & VNodeFlags.Element)\n            if (a._props !== b._props) {\n                syncDOMProps(instance as Element, flags, a._props, b._props);\n            }\n            if (a._className !== b._className) {\n                syncClassName(instance as Element, flags, a._className, b._className);\n            }\n            if (a._style !== b._style) {\n                syncStyle(instance as HTMLElement, a._style, b._style);\n            }\n            if (a._events !== b._events) {\n                syncEvents(instance as HTMLElement, a._events, b._events);\n            }\n\n            if (a._children !== b._children) {\n                syncChildren(\n                    instance as Element,\n                    a._flags,\n                    b._flags,\n                    a._children as VNode<any>[] | VNode<any> | string | number | boolean,\n                    b._children as VNode<any>[] | VNode<any> | string | number | boolean,\n                    context,\n                    owner);\n            }\n        }\n    } else { // (flags & VNodeFlags.Component)\n        if (flags & VNodeFlags.ComponentClass) {\n            const component = instance = b._instance = a._instance as Component<any>;\n            stackTracePushComponent(b._tag as ComponentClass<any>, component);\n            componentUpdateProps(component, b._props);\n            componentUpdateParentContext(component, context);\n            _updateComponent(component);\n        } else { // (flags & VNodeFlags.ComponentFunction)\n            stackTracePushComponent(b._tag as ComponentFunction<any>);\n            instance = b._instance = _updateComponentFunction(parent, a, b, context, owner);\n        }\n        stackTracePopComponent();\n    }\n\n    return instance;\n}\n\n/**\n * Sync VNode with a new one or replace when they aren't compatible.\n *\n * When node `a` is synced with node `b`, `a` node should be considered as destroyed, and any access to it after sync\n * is an undefined behavior.\n *\n * @param parent Parent node.\n * @param a Old VNode.\n * @param b New VNode.\n * @param context Current context.\n * @param owner Owning component.\n * @returns Synced DOM Node. When VNodes are synced and they aren't compatible, old DOM Node will be replaced with a new\n * DOM Node.\n */\nfunction vNodeSyncOrReplace(\n    parent: Node,\n    a: VNode<any>,\n    b: VNode<any>,\n    context: Context,\n    owner?: Component<any>,\n): Node | Component<any> {\n    if (vNodeCanSync(a, b)) {\n        return vNodeSync(parent, a, b, context, owner);\n    }\n    const newInstance = vNodeRender(parent, b, context, owner);\n    parent.replaceChild(\n        (b._flags & VNodeFlags.ComponentClass) ?\n            getDOMInstanceFromComponent(newInstance as Component<any>) :\n            newInstance as Element, getDOMInstanceFromVNode(a) !);\n    vNodeUnmount(a);\n    vNodeMount(b);\n    return newInstance;\n}\n\n/**\n * Sync old children list with the new one.\n *\n * @param parent Parent node.\n * @param aParentFlags Old parent VNode flags.\n * @param bParentFlags New parent VNode flags.\n * @param a Old VNode list.\n * @param b New VNode list.\n * @param context Current context.\n * @param owner Owning component.\n */\nfunction syncChildren(\n    parent: Node,\n    aParentFlags: VNodeFlags,\n    bParentFlags: VNodeFlags,\n    a: VNode<any>[] | VNode<any> | string | number | boolean,\n    b: VNode<any>[] | VNode<any> | string | number | boolean,\n    context: Context,\n    owner: Component<any> | undefined,\n): void {\n    let i = 0;\n\n    if (a === null) {\n        if (bParentFlags & (VNodeFlags.ChildrenBasic | VNodeFlags.ChildrenArray)) {\n            if (bParentFlags & VNodeFlags.ChildrenBasic) {\n                parent.textContent = b as string;\n            } else {\n                b = b as VNode<any>[];\n                for (i = 0; i < b.length; i++) {\n                    vNodeRenderInto(parent, null, b[i], context, owner);\n                }\n            }\n        } else if (bParentFlags & VNodeFlags.ChildrenVNode) {\n            vNodeRenderInto(parent, null, b as VNode<any>, context, owner);\n        } else if (bParentFlags & VNodeFlags.InputElement) {\n            setHTMLInputValue(parent as HTMLInputElement, b as string | boolean);\n        } else { // (bParentFlags & VNodeFlags.UnsafeHTML)\n            (parent as Element).innerHTML = b as string;\n        }\n    } else if (b === null) {\n        if (aParentFlags & (VNodeFlags.ChildrenBasic | VNodeFlags.UnsafeHTML)) {\n            parent.textContent = \"\";\n        } else if (aParentFlags & VNodeFlags.ChildrenArray) {\n            vNodeRemoveAllChildren(parent, a as VNode<any>[]);\n        } else if (aParentFlags & VNodeFlags.ChildrenVNode) {\n            vNodeRemoveChild(parent, a as VNode<any>);\n        } else { // (bParentFlags & VNodeFlags.InputElement)\n            if (typeof a === \"string\") {\n                (parent as HTMLInputElement).value = \"\";\n            } else {\n                (parent as HTMLInputElement).checked = false;\n            }\n        }\n    } else {\n        if (aParentFlags & (VNodeFlags.ChildrenBasic | VNodeFlags.UnsafeHTML)) {\n            if (bParentFlags & (VNodeFlags.ChildrenBasic | VNodeFlags.UnsafeHTML)) {\n                if (bParentFlags & VNodeFlags.ChildrenBasic) {\n                    const c = parent.firstChild;\n                    if (c) {\n                        c.nodeValue = b as string;\n                    } else {\n                        parent.textContent = b as string;\n                    }\n                } else {\n                    (parent as Element).innerHTML = b as string;\n                }\n            } else {\n                parent.textContent = \"\";\n                if (bParentFlags & VNodeFlags.ChildrenArray) {\n                    b = b as VNode<any>[];\n                    for (i = 0; i < b.length; i++) {\n                        vNodeRenderInto(parent, null, b[i], context, owner);\n                    }\n                } else {\n                    vNodeRenderInto(parent, null, b as VNode<any>, context, owner);\n                }\n            }\n        } else if (aParentFlags & VNodeFlags.ChildrenArray) {\n            a = a as VNode<any>[];\n            if (bParentFlags & (VNodeFlags.ChildrenBasic | VNodeFlags.UnsafeHTML)) {\n                if (bParentFlags & VNodeFlags.ChildrenBasic) {\n                    parent.textContent = b as string;\n                } else {\n                    (parent as Element).innerHTML = b as string;\n                }\n                vNodeUnmountAll(a);\n            } else if (bParentFlags & VNodeFlags.ChildrenArray) {\n                b = b as VNode<any>[];\n                if (a.length === 0) {\n                    for (i = 0; i < b.length; i++) {\n                        vNodeRenderInto(parent, null, b[i], context, owner);\n                    }\n                } else {\n                    if (b.length === 0) {\n                        vNodeRemoveAllChildren(parent, a);\n                    } else if (a.length === 1 && b.length === 1) {\n                        vNodeSyncOrReplace(parent, a[0], b[0], context, owner);\n                    } else {\n                        if (aParentFlags & bParentFlags & VNodeFlags.TrackByKeyChildren) {\n                            syncChildrenTrackByKeys(parent, a, b, context, owner);\n                        } else {\n                            syncChildrenNaive(parent, a, b, context, owner);\n                        }\n                    }\n                }\n            } else {\n                b = b as VNode<any>;\n                if (a.length > 0) {\n                    vNodeSyncOrReplace(parent, a[0], b, context, owner);\n                    for (i = 1; i < a.length; i++) {\n                        vNodeRemoveChild(parent, a[i]);\n                    }\n                } else {\n                    vNodeRenderInto(parent, null, b, context, owner);\n                }\n            }\n        } else if (aParentFlags & VNodeFlags.ChildrenVNode) {\n            a = a as VNode<any>;\n            if (bParentFlags & (VNodeFlags.ChildrenBasic | VNodeFlags.UnsafeHTML)) {\n                if (bParentFlags & VNodeFlags.ChildrenBasic) {\n                    parent.textContent = b as string;\n                } else {\n                    (parent as Element).innerHTML = b as string;\n                }\n                vNodeUnmount(a);\n            } else if (bParentFlags & VNodeFlags.ChildrenArray) {\n                b = b as VNode<any>[];\n                if (b.length > 0) {\n                    vNodeSyncOrReplace(parent, a, b[0], context, owner);\n                    for (i = 1; i < b.length; i++) {\n                        vNodeRenderInto(parent, null, b[i], context, owner);\n                    }\n                } else {\n                    vNodeRemoveChild(parent, a);\n                }\n            } else {\n                vNodeSyncOrReplace(parent, a, b as VNode<any>, context, owner);\n            }\n        } else { // (aParentFlags & VNodeFlags.InputElement)\n            if (typeof b === \"string\") {\n                if ((parent as HTMLInputElement).value !== b) {\n                    (parent as HTMLInputElement).value = b;\n                }\n            } else {\n                (parent as HTMLInputElement).checked = b as boolean;\n            }\n        }\n    }\n}\n\n/**\n * Sync children naive way.\n *\n * Any heuristics that is used in this algorithm is an undefined behaviour, and external dependencies should not rely on\n * any knowledge about this algorithm, because it can be changed in any time.\n *\n * This naive algorithm is quite simple:\n *\n *  A: -> [a a c d e g g] <-\n *  B: -> [a a f d c g] <-\n *\n * It starts by iterating over old children list `A` and new children list `B` from both ends.\n *\n *  A: -> [a b c d e g g] <-\n *  B: -> [a b f d c g] <-\n *\n * When it find nodes that have the same key, tag and flags, it will sync them. Node \"a\" and \"b\" on the right side, and\n * node \"g\" on the right side will be synced.\n *\n *  A: -> [c d e g]\n *  B: -> [f d c]\n *\n * Then it start iterating over old and new children lists from the left side and check if nodes can be synced. Nodes\n * \"c\" and \"f\" can't be synced, remove node \"c\" and insert new node \"f\".\n *\n *  A: -> [d e g]\n *  B: -> [d c]\n *\n * Node \"d\" is synced.\n *\n *  A: -> [e g]\n *  B: -> [c]\n *\n * Node \"e\" removed, node \"c\" inserted.\n *\n *  A: -> [g]\n *  B:    []\n *\n * Length of the old list is larger than length of the new list, remove remaining nodes from the old list.\n *\n * @param parent Parent node.\n * @param a Old VNode list.\n * @param b New VNode list.\n * @param context Current context.\n * @param owner Owning component.\n */\nfunction syncChildrenNaive(\n    parent: Node,\n    a: VNode<any>[],\n    b: VNode<any>[],\n    context: Context,\n    owner?: Component<any>,\n): void {\n    let aStart = 0;\n    let bStart = 0;\n    let aEnd = a.length - 1;\n    let bEnd = b.length - 1;\n    let aNode: VNode<any>;\n    let bNode: VNode<any>;\n    let nextPos: number;\n    let next: Node | null;\n\n    // Sync similar nodes at the beginning.\n    while (aStart <= aEnd && bStart <= bEnd) {\n        aNode = a[aStart];\n        bNode = b[bStart];\n\n        if (!vNodeCanSync(aNode, bNode)) {\n            break;\n        }\n\n        aStart++;\n        bStart++;\n\n        vNodeSync(parent, aNode, bNode, context, owner);\n    }\n\n    // Sync similar nodes at the end.\n    while (aStart <= aEnd && bStart <= bEnd) {\n        aNode = a[aEnd];\n        bNode = b[bEnd];\n\n        if (!vNodeCanSync(aNode, bNode)) {\n            break;\n        }\n\n        aEnd--;\n        bEnd--;\n\n        vNodeSync(parent, aNode, bNode, context, owner);\n    }\n\n    // Iterate over the remaining nodes and if they have the same type, then sync, otherwise just\n    // remove the old node and insert the new one.\n    while (aStart <= aEnd && bStart <= bEnd) {\n        aNode = a[aStart++];\n        bNode = b[bStart++];\n        vNodeSyncOrReplace(parent, aNode, bNode, context, owner);\n    }\n\n    if (aStart <= aEnd) {\n        // All nodes from a are synced, remove the rest.\n        do {\n            vNodeRemoveChild(parent, a[aStart++]);\n        } while (aStart <= aEnd);\n    } else if (bStart <= bEnd) {\n        // All nodes from b are synced, insert the rest.\n        nextPos = bEnd + 1;\n        next = nextPos < b.length ? getDOMInstanceFromVNode(b[nextPos]) : null;\n        do {\n            vNodeRenderInto(parent, next, b[bStart++], context, owner);\n        } while (bStart <= bEnd);\n    }\n}\n\n/**\n * Sync children with track by keys algorithm.\n *\n * This algorithm finds a minimum[1] number of DOM operations. It works in several steps:\n *\n * 1. Find common suffix and prefix, and perform simple moves on the edges.\n *\n * This optimization technique is searching for nodes with identical keys by simultaneously iterating over nodes in the\n * old children list `A` and new children list `B` from both sides:\n *\n *  A: -> [a b c d e f g] <-\n *  B: -> [a b f d c g] <-\n *\n * Here we can skip nodes \"a\" and \"b\" at the begininng, and node \"g\" at the end.\n *\n *  A: -> [c d e f] <-\n *  B: -> [f d c] <-\n *\n * At this position it will try to look at the opposite edge, and if there is a node with the same key at the opposite\n * edge, it will perform simple move operation. Node \"c\" is moved to the right edge, and node \"f\" is moved to the left\n * edge.\n *\n *  A: -> [d e] <-\n *  B: -> [d] <-\n *\n * Now it will try again to find common prefix and suffix, node \"d\" is the same, so we can skip it.\n *\n *  A: [e]\n *  B: []\n *\n * Here it will check if the size of one of the list is equal to zero, and if length of the old children list is zero,\n * it will insert all remaining nodes from the new list, or if length of the new children list is zero, it will remove\n * all remaining nodes from the old list.\n *\n * This simple optimization technique will cover most of the real world use cases, even reversing the children list,\n * except for sorting.\n *\n * When algorithm couldn't find a solution with this simple optimization technique, it will go to the next step of the\n * algorithm. For example:\n *\n *  A: -> [a b c d e f g] <-\n *  B: -> [a c b h f e g] <-\n *\n * Nodes \"a\" and \"g\" at the edges are the same, skipping them.\n *\n *  A: -> [b c d e f] <-\n *  B: -> [c b h f e] <-\n *\n * Here we are stuck, so we need to switch to the next step.\n *\n * 2. Look for removed and inserted nodes, and simultaneously check if one of the nodes is moved.\n *\n * First we create an array `P` with the length of the new children list and assign to each position value `-1`, it has\n * a meaning of a new node that should be inserted. Later we will assign node positions in the old children list to this\n * array.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *  P: [. . . . .] // . == -1\n *\n * Then we need to build an index `I` that maps keys with node positions of the remaining nodes from the new children\n * list.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *  P: [. . . . .] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1,\n *    h: 2,\n *    f: 3,\n *    e: 4,\n *  }\n *  last = 0\n *\n * With this index, we start to iterate over the remaining nodes from the old children list and check if we can find a\n * node with the same key in the index. If we can't find any node, it means that it should be removed, otherwise we\n * assign position of the node in the old children list to the positions array.\n *\n *  A: [b c d e f]\n *      ^\n *  B: [c b h f e]\n *  P: [. 0 . . .] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1, <-\n *    h: 2,\n *    f: 3,\n *    e: 4,\n *  }\n *  last = 1\n *\n * When we assigning positions to the positions array, we also keep a position of the last seen node in the new children\n * list, if the last seen position is larger than current position of the node at the new list, then we are switching\n * `moved` flag to `true`.\n *\n *  A: [b c d e f]\n *        ^\n *  B: [c b h f e]\n *  P: [1 0 . . .] // . == -1\n *  I: {\n *    c: 0, <-\n *    b: 1,\n *    h: 2,\n *    f: 3,\n *    e: 4,\n *  }\n *  last = 1 // last > 0; moved = true\n *\n * The last position `1` is larger than current position of the node at the new list `0`, switching `moved` flag to\n * `true`.\n *\n *  A: [b c d e f]\n *          ^\n *  B: [c b h f e]\n *  P: [1 0 . . .] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1,\n *    h: 2,\n *    f: 3,\n *    e: 4,\n *  }\n *  moved = true\n *\n * Node with key \"d\" doesn't exist in the index, removing node.\n *\n *  A: [b c d e f]\n *            ^\n *  B: [c b h f e]\n *  P: [1 0 . . 3] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1,\n *    h: 2,\n *    f: 3,\n *    e: 4, <-\n *  }\n *  moved = true\n *\n * Assign position for `e`.\n *\n *  A: [b c d e f]\n *              ^\n *  B: [c b h f e]\n *  P: [1 0 . 4 3] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1,\n *    h: 2,\n *    f: 3, <-\n *    e: 4,\n *  }\n *  moved = true\n *\n * Assign position for 'f'.\n *\n * At this point we are checking if `moved` flag is on, or if the length of the old children list minus the number of\n * removed nodes isn't equal to the length of the new children list. If any of this conditions is true, then we are\n * going to the next step.\n *\n * 3. Find minimum number of moves if `moved` flag is on, or insert new nodes if the length is changed.\n *\n * When `moved` flag is on, we need to find the\n * [longest increasing subsequence](http://en.wikipedia.org/wiki/Longest_increasing_subsequence) in the positions array,\n * and move all nodes that doesn't belong to this subsequence.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *  moved = true\n *\n * Now we just need to simultaneously iterate over the new children list and LIS from the end and check if the current\n * position is equal to a value from LIS.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *              ^  // new_pos == 4\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *              ^  // new_pos == 4\n *  moved = true\n *\n * Node \"e\" stays at the same place.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *            ^    // new_pos == 3\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *            ^    // new_pos != 1\n *  moved = true\n *\n * Node \"f\" is moved, move it before the next node \"e\".\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *          ^      // new_pos == 2\n *  P: [1 0 . 4 3] // . == -1\n *          ^      // old_pos == -1\n *  LIS:     [1 4]\n *            ^\n *  moved = true\n *\n * Node \"h\" has a `-1` value in the positions array, insert new node \"h\".\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *        ^        // new_pos == 1\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *            ^    // new_pos == 1\n *  moved = true\n *\n * Node \"b\" stays at the same place.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *      ^          // new_pos == 0\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *          ^      // new_pos != undefined\n *  moved = true\n *\n * Node \"c\" is moved, move it before the next node \"b\".\n *\n * When moved flag is off, we don't need to find LIS, and we just iterate over the new children list and check its\n * current position in the positions array, if it is `-1`, then we insert new node.\n *\n * That is how children reconciliation algorithm is working in one of the fastest virtual dom libraries :)\n *\n * [1] Actually it is almost minimum number of dom ops, when node is removed and another one is inserted at the same\n * place, instead of insert and remove dom ops, we can use one replace op. It will make everything even more\n * complicated, and other use cases will be slower, so I don't think that it is worth to use replace here. Naive algo\n * and simple 1/N, N/1 cases are using replace op.\n *\n * @param parent Parent node.\n * @param a Old VNode list.\n * @param b New VNode list.\n * @param context Current context.\n * @param owner Owning component.\n */\nfunction syncChildrenTrackByKeys(\n    parent: Node,\n    a: VNode<any>[],\n    b: VNode<any>[],\n    context: Context,\n    owner?: Component<any>,\n): void {\n    let aStart = 0;\n    let bStart = 0;\n    let aEnd = a.length - 1;\n    let bEnd = b.length - 1;\n    let aStartNode = a[aStart];\n    let bStartNode = b[bStart];\n    let aEndNode = a[aEnd];\n    let bEndNode = b[bEnd];\n    let i: number;\n    let j: number | undefined;\n    let nextPos: number;\n    let next: Node | null;\n    let aNode: VNode<any> | null;\n    let bNode: VNode<any>;\n    let node: VNode<any>;\n\n    // Check that items without keys at the beginning and at the end doesn't change their shape.\n    if (__IVI_DEV__) {\n        outer: while (true) {\n            while (aStartNode._key === null) {\n                if (bStartNode._key !== null) {\n                    throw new Error(\"Invalid children list, when trackByKey is enabled, nodes without keys shouldn't \" +\n                        \"change their shape.\");\n                }\n                aStart++;\n                bStart++;\n                if (aStart > aEnd || bStart > bEnd) {\n                    break outer;\n                }\n                aStartNode = a[aStart];\n                bStartNode = b[bStart];\n            }\n\n            if (bStartNode._key === null) {\n                throw new Error(\"Invalid children list, when trackByKey is enabled, nodes without keys shouldn't \" +\n                    \"change their shape.\");\n            }\n\n            while (aEndNode._key === null) {\n                if (bEndNode._key !== null) {\n                    throw new Error(\"Invalid children list, when trackByKey is enabled, nodes without keys shouldn't \" +\n                        \"change their shape.\");\n                }\n                aEnd--;\n                bEnd--;\n                if (aStart > aEnd || bStart > bEnd) {\n                    break outer;\n                }\n                aEndNode = a[aEnd];\n                bEndNode = b[bEnd];\n            }\n\n            if (bEndNode._key === null) {\n                throw new Error(\"Invalid children list, when trackByKey is enabled, nodes without keys shouldn't \" +\n                    \"change their shape.\");\n            }\n\n            break;\n        }\n\n        // restore variables after checking.\n        aStart = 0;\n        bStart = 0;\n        aEnd = a.length - 1;\n        bEnd = b.length - 1;\n        aStartNode = a[aStart];\n        bStartNode = b[bStart];\n        aEndNode = a[aEnd];\n        bEndNode = b[bEnd];\n    }\n\n    // Step 1\n    outer: while (true) {\n        // Sync nodes with the same key at the beginning.\n        while (aStartNode._key === bStartNode._key) {\n            vNodeSyncOrReplace(parent, aStartNode, bStartNode, context, owner);\n            aStart++;\n            bStart++;\n            if (aStart > aEnd || bStart > bEnd) {\n                break outer;\n            }\n            aStartNode = a[aStart];\n            bStartNode = b[bStart];\n        }\n\n        // Sync nodes with the same key at the end.\n        while (aEndNode._key === bEndNode._key) {\n            vNodeSyncOrReplace(parent, aEndNode, bEndNode, context, owner);\n            aEnd--;\n            bEnd--;\n            if (aStart > aEnd || bStart > bEnd) {\n                break outer;\n            }\n            aEndNode = a[aEnd];\n            bEndNode = b[bEnd];\n        }\n\n        // Move and sync nodes from right to left.\n        if (aEndNode._key === bStartNode._key) {\n            vNodeSyncOrReplace(parent, aEndNode, bStartNode, context, owner);\n            vNodeMoveChild(parent, bStartNode, getDOMInstanceFromVNode(aStartNode));\n            aEnd--;\n            bStart++;\n            // There is no need to check when we out of bounds, because the only way we can get here is when there are\n            // more nodes in the lists.\n            //\n            // Impossible transformations:\n            //   [a] => [a b] (common prefix)\n            //   [b a] => [a] (common suffix)\n            //\n            // Possible transformations:\n            //   [b a] => [a b]\n            //   [b a] => [a c]\n\n            aEndNode = a[aEnd];\n            bStartNode = b[bStart];\n            // In a real-world scenarios there is a higher chance that next node after the move will be the same, so we\n            // immediately jump to the start of this prefix/suffix algo.\n            continue;\n        }\n\n        // Move and sync nodes from left to right.\n        if (aStartNode._key === bEndNode._key) {\n            vNodeSyncOrReplace(parent, aStartNode, bEndNode, context, owner);\n            nextPos = bEnd + 1;\n            next = nextPos < b.length ? getDOMInstanceFromVNode(b[nextPos]) : null;\n            vNodeMoveChild(parent, bEndNode, next);\n            aStart++;\n            bEnd--;\n            aStartNode = a[aStart];\n            bEndNode = b[bEnd];\n            continue;\n        }\n\n        break;\n    }\n\n    if (aStart > aEnd) {\n        // All nodes from a are synced, insert the rest from b.\n        nextPos = bEnd + 1;\n        next = nextPos < b.length ? getDOMInstanceFromVNode(b[nextPos]) : null;\n        while (bStart <= bEnd) {\n            vNodeRenderInto(parent, next, b[bStart++], context, owner);\n        }\n    } else if (bStart > bEnd) {\n        // All nodes from b are synced, remove the rest from a.\n        while (aStart <= aEnd) {\n            vNodeRemoveChild(parent, a[aStart++]);\n        }\n        // Step 2\n    } else {\n        let aLength = aEnd - aStart + 1;\n        let bLength = bEnd - bStart + 1;\n        const aNullable = a as Array<VNode<any> | null>; // will be removed by js optimizing compilers.\n        // Mark all nodes as inserted.\n        const sources = new Array<number>(bLength).fill(-1);\n\n        let moved = false;\n        let pos = 0;\n        let synced = 0;\n\n        // When children lists are small, we are using naive O(N) algorithm to find if child is removed.\n        if ((bLength <= 4) || ((aLength * bLength) <= 16)) {\n            for (i = aStart; i <= aEnd; i++) {\n                aNode = a[i];\n                if (synced < bLength) {\n                    for (j = bStart; j <= bEnd; j++) {\n                        bNode = b[j];\n                        if (aNode._key === bNode._key) {\n                            sources[j - bStart] = i;\n\n                            if (pos > j) {\n                                moved = true;\n                            } else {\n                                pos = j;\n                            }\n                            vNodeSyncOrReplace(parent, aNode, bNode, context, owner);\n                            synced++;\n                            aNullable[i] = null;\n                            break;\n                        }\n                    }\n                }\n            }\n        } else {\n            const keyIndex = new Map<any, number>();\n\n            for (i = bStart; i <= bEnd; i++) {\n                node = b[i];\n                keyIndex.set(node._key, i);\n            }\n\n            for (i = aStart; i <= aEnd; i++) {\n                aNode = a[i];\n\n                if (synced < bLength) {\n                    j = keyIndex.get(aNode._key);\n\n                    if (j !== undefined) {\n                        bNode = b[j];\n                        sources[j - bStart] = i;\n                        if (pos > j) {\n                            moved = true;\n                        } else {\n                            pos = j;\n                        }\n                        vNodeSyncOrReplace(parent, aNode, bNode, context, owner);\n                        synced++;\n                        aNullable[i] = null;\n                    }\n                }\n            }\n        }\n\n        if (aLength === a.length && synced === 0) {\n            // Noone is synced, remove all children with one dom op.\n            vNodeRemoveAllChildren(parent, a);\n            while (bStart < bLength) {\n                vNodeRenderInto(parent, null, b[bStart++], context, owner);\n            }\n        } else {\n            i = aLength - synced;\n            while (i > 0) {\n                aNode = aNullable[aStart++];\n                if (aNode !== null) {\n                    vNodeRemoveChild(parent, aNode);\n                    i--;\n                }\n            }\n\n            // Step 3\n            if (moved) {\n                const seq = lis(sources);\n                j = seq.length - 1;\n                for (i = bLength - 1; i >= 0; i--) {\n                    if (sources[i] === -1) {\n                        pos = i + bStart;\n                        node = b[pos];\n                        nextPos = pos + 1;\n                        next = nextPos < b.length ? getDOMInstanceFromVNode(b[nextPos]) : null;\n                        vNodeRenderInto(parent, next, node, context, owner);\n                    } else {\n                        if (j < 0 || i !== seq[j]) {\n                            pos = i + bStart;\n                            node = b[pos];\n                            nextPos = pos + 1;\n                            next = nextPos < b.length ? getDOMInstanceFromVNode(b[nextPos]) : null;\n                            vNodeMoveChild(parent, node, next);\n                        } else {\n                            j--;\n                        }\n                    }\n                }\n            } else if (synced !== bLength) {\n                for (i = bLength - 1; i >= 0; i--) {\n                    if (sources[i] === -1) {\n                        pos = i + bStart;\n                        node = b[pos];\n                        nextPos = pos + 1;\n                        next = nextPos < b.length ? getDOMInstanceFromVNode(b[nextPos]) : null;\n                        vNodeRenderInto(parent, next, node, context, owner);\n                    }\n                }\n            }\n        }\n    }\n}\n\n/**\n * Slightly modified Longest Increased Subsequence algorithm, it ignores items that have -1 value, they're representing\n * new items.\n *\n * http://en.wikipedia.org/wiki/Longest_increasing_subsequence\n *\n * @param a Array of numbers.\n * @returns Longest increasing subsequence.\n */\nfunction lis(a: number[]): number[] {\n    const p = a.slice(0);\n    const result: number[] = [];\n    result.push(0);\n    let u: number;\n    let v: number;\n\n    for (let i = 0, il = a.length; i < il; i++) {\n        if (a[i] === -1) {\n            continue;\n        }\n\n        let j = result[result.length - 1];\n        if (a[j] < a[i]) {\n            p[i] = j;\n            result.push(i);\n            continue;\n        }\n\n        u = 0;\n        v = result.length - 1;\n\n        while (u < v) {\n            let c = ((u + v) / 2) | 0;\n            if (a[result[c]] < a[i]) {\n                u = c + 1;\n            } else {\n                v = c;\n            }\n        }\n\n        if (a[i] < a[result[u]]) {\n            if (u > 0) {\n                p[i] = result[u - 1];\n            }\n            result[u] = i;\n        }\n    }\n\n    u = result.length;\n    v = result[u - 1];\n\n    while (u-- > 0) {\n        result[u] = v;\n        v = p[v];\n    }\n\n    return result;\n}\n","/**\n * Event Dispatchers\n *\n * **EXPERIMENTAL API**\n */\n\nimport { SyntheticEvent } from \"./synthetic_event\";\n\n/**\n * Event Dispatcher Subscription Flags.\n */\nexport const enum EventDispatcherSubscriptionFlags {\n    Canceled = 1,\n    Canceling = 1 << 1,\n}\n\n/**\n * Event Dispatcher Subscription.\n */\nexport class EventDispatcherSubscription {\n    /**\n     * Prev item in a linked list.\n     */\n    _prev: EventDispatcherSubscription | null;\n    /**\n     * Next item in a linked list.\n     */\n    _next: EventDispatcherSubscription | null;\n    /**\n     * Event Dispatcher.\n     */\n    dispatcher: EventDispatcher;\n    /**\n     * See `EventDispatcherSubscriptionFlags` for details.\n     */\n    flags: EventDispatcherSubscriptionFlags;\n    /**\n     * Subscription Handler function.\n     */\n    handler: (ev: SyntheticEvent<any>, type?: number) => void;\n    /**\n     * Type filter.\n     */\n    filter: number | undefined;\n\n    constructor(\n        dispatcher: EventDispatcher,\n        flags: EventDispatcherSubscriptionFlags,\n        handler: (ev: SyntheticEvent<any>, type?: number) => void,\n        filter: number | undefined,\n    ) {\n        this._prev = null;\n        this._next = null;\n        this.dispatcher = dispatcher;\n        this.flags = flags;\n        this.handler = handler;\n        this.filter = filter;\n    }\n\n    /**\n     * Cancel Event Subscription.\n     */\n    cancel(): void {\n        if (!(this.flags & EventDispatcherSubscriptionFlags.Canceled)) {\n            if (this.dispatcher.isDispatching && (!(this.flags & EventDispatcherSubscriptionFlags.Canceling))) {\n                this.flags |= EventDispatcherSubscriptionFlags.Canceling;\n                if (!this.dispatcher._disposeQueue) {\n                    this.dispatcher._disposeQueue = [];\n                }\n                this.dispatcher._disposeQueue.push(this);\n            } else {\n                if (this._prev) {\n                    this._prev._next = this._next;\n                } else {\n                    this.dispatcher._nextSubscription = this._next;\n                }\n                if (this._next) {\n                    this._next._prev = this._prev;\n                }\n\n                this.flags |= EventDispatcherSubscriptionFlags.Canceled;\n\n                if (--this.dispatcher.counter === 0) {\n                    this.dispatcher.deactivate();\n                }\n            }\n        }\n    }\n}\n\n/**\n * Abstract Event Dispatcher.\n */\nexport abstract class EventDispatcher {\n    /**\n     * Number of registered dependencies (Event Handlers and Event Dispatcher subscribers).\n     *\n     * When this number goes from 0 to 1, lifecycle method `activate` is invoked.\n     * When this number goes to 0, lifecycle method `deactivate` is invoked.\n     */\n    counter: number;\n    /**\n     * Flag indicating that Dispatcher is currently dispatching event to subscribers.\n     */\n    isDispatching: boolean;\n    /**\n     * Event Dispatcher subscribers implemented with a Linked List.\n     */\n    _nextSubscription: EventDispatcherSubscription | null;\n    /**\n     * Event Dispatcher subscribers that should be disposed when dispatching to subscribers is finished.\n     */\n    _disposeQueue: EventDispatcherSubscription[] | null;\n\n    constructor() {\n        this.counter = 0;\n        this.isDispatching = false;\n        this._nextSubscription = null;\n        this._disposeQueue = null;\n    }\n\n    /**\n     * Dispatch Event to all subscribers.\n     *\n     * @param events Events to dispatch.\n     */\n    dispatchEventToSubscribers(event: SyntheticEvent<any>, type?: number): void {\n        this.isDispatching = true;\n        let s = this._nextSubscription;\n        while (s) {\n            if (!(s.flags & (EventDispatcherSubscriptionFlags.Canceled | EventDispatcherSubscriptionFlags.Canceling))) {\n                if (type === undefined || (s.filter & (type as any as number))) {\n                    s.handler(event, type);\n                }\n            }\n            s = s._next;\n        }\n        this.isDispatching = false;\n        if (this._disposeQueue) {\n            for (let i = 0; i < this._disposeQueue.length; i++) {\n                this._disposeQueue[i].cancel();\n            }\n            this._disposeQueue = null;\n        }\n    }\n\n    /**\n     * Lifecycle method `activate` is invoked when Event Dispatcher is activated.\n     */\n    activate(): void {\n        /* tslint:disable:no-empty */\n        /* tslint:enable:no-empty */\n    }\n\n    /**\n     * Lifecycle method `deactivate` is invoked when Event Dispatcher is deactivated.\n     */\n    deactivate(): void {\n        /* tslint:disable:no-empty */\n        /* tslint:enable:no-empty */\n    }\n\n    /**\n     * Subscribe for events.\n     *\n     * @param dispatcher Event Dispatcher.\n     * @param data Opaque data that will be returned to subscriber.\n     * @param type Type that will be used to filter incoming events.\n     * @param flags Subscription flags.\n     */\n    subscribe(\n        handler: (ev: SyntheticEvent<any>, type?: number) => void,\n        filter?: number,\n        flags: EventDispatcherSubscriptionFlags = 0,\n    ): EventDispatcherSubscription {\n        const s = new EventDispatcherSubscription(this, flags, handler, filter);\n        if (this._nextSubscription) {\n            this._nextSubscription._prev = s;\n            s._next = this._nextSubscription;\n        }\n        this._nextSubscription = s;\n\n        if (this.counter++ === 0) {\n            this.activate();\n        }\n\n        return s;\n    }\n\n    /**\n     * Register an Event Handler.\n     *\n     * @param handler Event Handler.\n     */\n    registerHandler(handler: (ev: SyntheticEvent<any>) => void): void {\n        if (this.counter++ === 0) {\n            this.activate();\n        }\n        this.didRegisterHandler(handler);\n    }\n\n    /**\n     * Unregister an Event Handler.\n     *\n     * @param handler Event Handler.\n     */\n    unregisterHandler(handler: (ev: SyntheticEvent<any>) => void): void {\n        if (--this.counter === 0) {\n            this.deactivate();\n        }\n        this.didUnregisterHandler(handler);\n    }\n\n    /**\n     * Lifecycle method `didRegisterHandler` is invoked after Event Handler registration.\n     *\n     * @param handler Event Handler.\n     */\n    didRegisterHandler(_handler: (ev: SyntheticEvent<any>) => void): void {\n        /* tslint:disable:no-empty */\n        /* tslint:enable:no-empty */\n    }\n\n    /**\n     * Lifecycle method `didUnregisterHandler` is invoked after Event Handler unregistration.\n     *\n     * @param handler Event Handler.\n     */\n    didUnregisterHandler(_handler: (ev: SyntheticEvent<any>) => void): void {\n        /* tslint:disable:no-empty */\n        /* tslint:enable:no-empty */\n    }\n}\n","import { EventHandlerFlags, SyntheticEventFlags } from \"./flags\";\nimport { SyntheticEvent } from \"./synthetic_event\";\nimport { DispatchTarget } from \"./traverse_dom\";\n\n/**\n * Dispatch event to local(on the same DOM Node) Event Handlers.\n *\n * It will stop dispatching when event has `StopImmediatePropagation` flag.\n *\n * @param localHandlers Local Event Handlers.\n * @param event Synthetic Event.\n */\nfunction dispatchEventToLocalEventHandlers<E extends SyntheticEvent<any>>(\n    dispatchTarget: DispatchTarget,\n    event: E,\n    matchFlags: EventHandlerFlags,\n): void {\n    event.currentTarget = dispatchTarget.target;\n\n    for (let j = 0; j < dispatchTarget.handlers.length; j++) {\n        const handler = dispatchTarget.handlers[j];\n        if (handler.flags & matchFlags) {\n            handler.fn(event);\n            if (event._flags & SyntheticEventFlags.StoppedImmediatePropagation) {\n                return;\n            }\n        }\n    }\n}\n\n/**\n * Dispatch event to Dispatch Targets.\n *\n * https://www.w3.org/TR/DOM-Level-3-Events/#event-flow\n *\n * @param dispatchTarget Dispatch Targets.\n * @param event Event to dispatch.\n */\nexport function dispatchEvent<E extends SyntheticEvent<any>>(\n    dispatchTargets: DispatchTarget[],\n    event: E,\n    bubble: boolean,\n): void {\n    let i = dispatchTargets.length - 1;\n    let dispatchTarget;\n\n    // capture phase\n    while (i >= 0) {\n        dispatchTarget = dispatchTargets[i];\n        if (dispatchTarget.target !== event.target) {\n            dispatchEventToLocalEventHandlers(dispatchTargets[i--], event, EventHandlerFlags.Capture);\n            if (event._flags & SyntheticEventFlags.StoppedPropagation) {\n                return;\n            }\n        } else {\n            break;\n        }\n    }\n\n    // target phase\n    dispatchTarget = dispatchTargets[0];\n    if (dispatchTarget.target === event.target) {\n        event._flags |= SyntheticEventFlags.AtTargetPhase;\n        dispatchEventToLocalEventHandlers(dispatchTarget, event,\n            EventHandlerFlags.Capture | EventHandlerFlags.Bubble);\n        if (event._flags & SyntheticEventFlags.StoppedPropagation) {\n            return;\n        }\n        event._flags &= ~SyntheticEventFlags.AtTargetPhase;\n        i = 1;\n    } else {\n        i = 0;\n    }\n\n    // bubble phase\n    if (bubble) {\n        event._flags |= SyntheticEventFlags.BubblePhase;\n        while (i < dispatchTargets.length) {\n            dispatchEventToLocalEventHandlers(dispatchTargets[i++], event, EventHandlerFlags.Bubble);\n            if (event._flags & SyntheticEventFlags.StoppedPropagation) {\n                return;\n            }\n        }\n    }\n}\n","import { NativeEventDispatcherFlags, SyntheticEventFlags } from \"./flags\";\nimport { SyntheticEvent, SyntheticEventClass } from \"./synthetic_event\";\nimport { EventDispatcher } from \"./event_dispatcher\";\nimport { accumulateDispatchTargets } from \"./traverse_dom\";\nimport { dispatchEvent } from \"./dispatch_event\";\nimport { getEventTarget, getEventOptions } from \"./utils\";\nimport { scheduleMacrotask } from \"../scheduler/scheduler\";\n\n/**\n * Native Event Dispatcher.\n */\nexport class NativeEventDispatcher<E extends SyntheticEventClass<Event, SyntheticEvent<any>>>\n    extends EventDispatcher {\n    /**\n     * See `EventDispatcherFlags` for details.\n     */\n    readonly flags: NativeEventDispatcherFlags;\n    /**\n     * Event name.\n     */\n    readonly name: string;\n    /**\n     * Synthetic Event Constructor.\n     */\n    readonly eventType: E;\n    /**\n     * `dispatch` method with bounded context.\n     */\n    private readonly _dispatch: (ev: Event) => void;\n    /**\n     * Flag indicating that Event Dispatcher will be deactivated in the macrotask.\n     */\n    private _deactivating: boolean;\n\n    constructor(\n        flags: NativeEventDispatcherFlags,\n        name: string,\n        eventType: E,\n    ) {\n        super();\n        this.flags = flags;\n        this.name = name;\n        this.eventType = eventType;\n        this._dispatch = this.dispatchNativeEvent.bind(this);\n        this._deactivating = false;\n    }\n\n    private dispatchNativeEvent(ev: Event): void {\n        const subs = this._nextSubscription;\n\n        let s: SyntheticEvent<any> | undefined;\n        if (subs) {\n            s = new this.eventType(this, 0, ev, getEventTarget(ev), ev.timeStamp, ev.type);\n            this.dispatchEventToSubscribers(s);\n        }\n\n        if (s &&\n            (s._flags & (SyntheticEventFlags.StoppedImmediatePropagation | SyntheticEventFlags.StoppedPropagation))) {\n            return;\n        }\n        const handlers = accumulateDispatchTargets(getEventTarget(ev) as Element, this);\n\n        if (handlers.length > 0) {\n            if (!s) {\n                s = new this.eventType(this, 0, ev, getEventTarget(ev), ev.timeStamp, ev.type);\n            }\n            dispatchEvent(handlers, s!, !!(this.flags & NativeEventDispatcherFlags.Bubbles));\n        }\n\n        if (s && s._flags & SyntheticEventFlags.PreventedDefault) {\n            ev.preventDefault();\n        }\n    }\n\n    activate(): void {\n        if (this._deactivating) {\n            this._deactivating = false;\n        } else {\n            super.activate();\n            document.addEventListener(\n                this.name,\n                this._dispatch as any as (ev: Event) => void,\n                getEventOptions(this.flags) as boolean);\n        }\n    }\n\n    deactivate(): void {\n        if (!this._deactivating) {\n            this._deactivating = true;\n            scheduleMacrotask(() => {\n                if (this._deactivating) {\n                    document.removeEventListener(\n                        this.name,\n                        this._dispatch as any as (ev: Event) => void,\n                        getEventOptions(this.flags) as boolean);\n                    super.deactivate();\n                    this._deactivating = false;\n                }\n            });\n        }\n    }\n}\n","import { EventDispatcher } from \"./event_dispatcher\";\nimport { EventHandler } from \"./event_handler\";\nimport { getEventHandlerListFromDOMNode } from \"./utils\";\n\n/**\n * Dispatch Target.\n */\nexport interface DispatchTarget {\n    /**\n     * Target Element.\n     */\n    target: Element;\n    /**\n     * Matched Event Handlers.\n     */\n    handlers: EventHandler<any>[];\n}\n\n/**\n * Accumulate Event Handlers that has a matching Event Dispatcher.\n *\n * @param result Result array.\n * @param target Target Element.\n * @param dispatcher Event Dispatcher.\n */\nexport function accumulateDispatchTargetsFromElement(\n    result: DispatchTarget[],\n    target: Element,\n    dispatcher: EventDispatcher,\n): void {\n    const events = getEventHandlerListFromDOMNode(target);\n    if (events) {\n        let matches: EventHandler<any>[] | undefined;\n        const keys = Object.keys(events);\n        for (let i = 0; i < keys.length; i++) {\n            const ev = events[keys[i]];\n            if (ev.dispatcher === dispatcher) {\n                if (!matches) {\n                    matches = [ev];\n                } else {\n                    matches.push(ev);\n                }\n            }\n        }\n        if (matches) {\n            result.push({\n                target: target,\n                handlers: matches,\n            });\n        }\n    }\n}\n\n/**\n * Traverses the DOM tree from the target Element to the document top and accumulates Dispatch Targets that has matching\n * Event Dispatcher.\n *\n * @param target DOM Element.\n * @param dispatcher Event Dispatcher instance.\n * @returns An array of Dispatch Targets.\n */\nexport function accumulateDispatchTargets(\n    target: Element | null,\n    dispatcher: EventDispatcher,\n): DispatchTarget[] {\n    const result: DispatchTarget[] = [];\n\n    while (target) {\n        accumulateDispatchTargetsFromElement(result, target, dispatcher);\n        target = target.parentElement;\n    }\n\n    return result;\n}\n","import { SyntheticEventFlags } from \"./flags\";\nimport { EventDispatcher } from \"./event_dispatcher\";\n\n/**\n * Synthetic Event.\n */\nexport class SyntheticEvent<D> implements Event {\n    /**\n     * @deprecated\n     */\n    initEvent: (eventTypeArg: string, canBubbleArg: boolean, cancelableArg: boolean) => void;\n\n    /**\n     * Old IE Property.\n     *\n     * @deprecated\n     */\n    cancelBubble: boolean;\n    /**\n     * Old IE Property.\n     *\n     * @deprecated\n     */\n    returnValue: boolean;\n    /**\n     * Old IE Property.\n     *\n     * @deprecated\n     */\n    readonly srcElement: Element | null;\n\n    readonly dispatcher: EventDispatcher;\n    _flags: SyntheticEventFlags;\n    _data: D;\n    readonly target: EventTarget;\n    currentTarget: EventTarget;\n    timeStamp: number;\n    type: any;\n\n    constructor(\n        dispatcher: EventDispatcher,\n        flags: SyntheticEventFlags,\n        data: D,\n        target: EventTarget,\n        timeStamp: number,\n        type: any,\n    ) {\n        this.dispatcher = dispatcher;\n        this._flags = flags;\n        this._data = data;\n        this.target = target;\n        this.currentTarget = target;\n        this.timeStamp = timeStamp;\n        this.type = type;\n    }\n\n    get defaultPrevented(): boolean {\n        return !!(this._flags & SyntheticEventFlags.PreventedDefault);\n    }\n\n    get bubbles(): boolean {\n        return !!(this._flags & SyntheticEventFlags.Bubbles);\n    }\n\n    get cancelable(): boolean {\n        return !!(this._flags & SyntheticEventFlags.Cancelable);\n    }\n\n    get isTrusted(): boolean {\n        return !!(this._flags & SyntheticEventFlags.IsTrusted);\n    }\n\n    get eventPhase(): number {\n        if (this._flags & SyntheticEventFlags.AtTargetPhase) {\n            return 2;\n        } else if (this._flags & SyntheticEventFlags.BubblePhase) {\n            return 3;\n        }\n        return 1;\n    }\n\n    get CAPTURING_PHASE(): number {\n        return 1;\n    }\n\n    get AT_TARGET(): number {\n        return 2;\n    }\n\n    get BUBBLING_PHASE(): number {\n        return 3;\n    }\n\n    stopPropagation() {\n        this._flags |= SyntheticEventFlags.StoppedPropagation;\n    }\n\n    stopImmediatePropagation() {\n        this._flags |= SyntheticEventFlags.StoppedPropagation | SyntheticEventFlags.StoppedImmediatePropagation;\n    }\n\n    preventDefault() {\n        this._flags |= SyntheticEventFlags.PreventedDefault;\n    }\n}\n\nexport interface SyntheticEventClass<D, E extends SyntheticEvent<any>> {\n    new (\n        dispatcher: EventDispatcher,\n        flags: SyntheticEventFlags,\n        data: D,\n        target: EventTarget,\n        timeStamp: number,\n        type: any,\n    ): E;\n}\n\nexport class SyntheticUIEvent<T extends UIEvent> extends SyntheticEvent<T> implements UIEvent {\n    /**\n     * @deprecated\n     */\n    initUIEvent: (\n        typeArg: string,\n        canBubbleArg: boolean,\n        cancelableArg: boolean,\n        viewArg: Window,\n        detailArg: number,\n    ) => void;\n\n    get detail() {\n        return this._data.detail;\n    }\n\n    get view() {\n        return this._data.view;\n    }\n}\n\nexport class SyntheticKeyboardEvent extends SyntheticUIEvent<KeyboardEvent> implements KeyboardEvent {\n    /**\n     * @deprecated\n     */\n    initKeyboardEvent: (\n        typeArg: string,\n        canBubbleArg: boolean,\n        cancelableArg: boolean,\n        viewArg: Window,\n        keyArg: string,\n        locationArg: number,\n        modifiersListArg: string,\n        repeat: boolean,\n        locale: string,\n    ) => void;\n\n    get altKey(): boolean {\n        return this._data.altKey;\n    }\n\n    get char(): string | null {\n        return this._data.char;\n    }\n\n    get charCode(): number {\n        return this._data.charCode;\n    }\n\n    get ctrlKey(): boolean {\n        return this._data.ctrlKey;\n    }\n\n    get key(): string {\n        return this._data.key;\n    }\n\n    get keyCode(): number {\n        return this._data.keyCode;\n    }\n\n    get locale(): string {\n        return this._data.locale;\n    }\n\n    get location(): number {\n        return this._data.location;\n    }\n\n    get metaKey(): boolean {\n        return this._data.metaKey;\n    }\n\n    get repeat(): boolean {\n        return this._data.repeat;\n    }\n\n    get shiftKey(): boolean {\n        return this._data.shiftKey;\n    }\n\n    get which(): number {\n        return this._data.which;\n    }\n\n    get code(): string {\n        return this._data.code;\n    }\n\n    get DOM_KEY_LOCATION_JOYSTICK(): number {\n        return this._data.DOM_KEY_LOCATION_JOYSTICK;\n    }\n\n    get DOM_KEY_LOCATION_LEFT(): number {\n        return this._data.DOM_KEY_LOCATION_LEFT;\n    }\n\n    get DOM_KEY_LOCATION_MOBILE(): number {\n        return this._data.DOM_KEY_LOCATION_MOBILE;\n    }\n\n    get DOM_KEY_LOCATION_NUMPAD(): number {\n        return this._data.DOM_KEY_LOCATION_NUMPAD;\n    }\n\n    get DOM_KEY_LOCATION_RIGHT(): number {\n        return this._data.DOM_KEY_LOCATION_RIGHT;\n    }\n\n    get DOM_KEY_LOCATION_STANDARD(): number {\n        return this._data.DOM_KEY_LOCATION_STANDARD;\n    }\n\n    getModifierState(keyArg: string): boolean {\n        return this._data.getModifierState(keyArg);\n    }\n}\n\nexport class SyntheticMouseEvent<T extends MouseEvent> extends SyntheticUIEvent<T> implements MouseEvent {\n    /**\n     * @deprecated\n     */\n    initMouseEvent: (\n        typeArg: string,\n        canBubbleArg: boolean,\n        cancelableArg: boolean,\n        viewArg: Window,\n        detailArg: number,\n        screenXArg: number,\n        screenYArg: number,\n        clientXArg: number,\n        clientYArg: number,\n        ctrlKeyArg: boolean,\n        altKeyArg: boolean,\n        shiftKeyArg: boolean,\n        metaKeyArg: boolean,\n        buttonArg: number,\n        relatedTargetArg: EventTarget | null,\n    ) => void;\n\n    get altKey(): boolean {\n        return this._data.altKey;\n    }\n\n    get button(): number {\n        return this._data.button;\n    }\n\n    get buttons(): number {\n        return this._data.buttons;\n    }\n\n    get clientX(): number {\n        return this._data.clientX;\n    }\n\n    get clientY(): number {\n        return this._data.clientY;\n    }\n\n    get ctrlKey(): boolean {\n        return this._data.ctrlKey;\n    }\n\n    get fromElement(): Element {\n        return this._data.fromElement;\n    }\n\n    get layerX(): number {\n        return this._data.layerX;\n    }\n\n    get layerY(): number {\n        return this._data.layerY;\n    }\n\n    get metaKey(): boolean {\n        return this._data.metaKey;\n    }\n\n    get movementX(): number {\n        return this._data.movementX;\n    }\n\n    get movementY(): number {\n        return this._data.movementY;\n    }\n\n    get offsetX(): number {\n        return this._data.offsetX;\n    }\n\n    get offsetY(): number {\n        return this._data.offsetY;\n    }\n\n    get pageX(): number {\n        return this._data.pageX;\n    }\n\n    get pageY(): number {\n        return this._data.pageY;\n    }\n\n    get relatedTarget(): EventTarget {\n        return this._data.relatedTarget;\n    }\n\n    get screenX(): number {\n        return this._data.screenX;\n    }\n\n    get screenY(): number {\n        return this._data.screenY;\n    }\n\n    get shiftKey(): boolean {\n        return this._data.shiftKey;\n    }\n\n    get toElement(): Element {\n        return this._data.toElement;\n    }\n\n    get which(): number {\n        return this._data.which;\n    }\n\n    get x(): number {\n        return this._data.x;\n    }\n\n    get y(): number {\n        return this._data.y;\n    }\n\n    getModifierState(keyArg: string): boolean {\n        return this._data.getModifierState(keyArg);\n    }\n}\n\nexport class SyntheticTouchEvent extends SyntheticUIEvent<TouchEvent> implements TouchEvent {\n    get altKey(): boolean {\n        return this._data.altKey;\n    }\n\n    get changedTouches(): TouchList {\n        return this._data.changedTouches;\n    }\n\n    get ctrlKey(): boolean {\n        return this._data.ctrlKey;\n    }\n\n    get metaKey(): boolean {\n        return this._data.metaKey;\n    }\n\n    get shiftKey(): boolean {\n        return this._data.shiftKey;\n    }\n\n    get targetTouches(): TouchList {\n        return this._data.targetTouches;\n    }\n\n    get touches(): TouchList {\n        return this._data.touches;\n    }\n}\n\nexport class SyntheticPointerEvent extends SyntheticMouseEvent<PointerEvent> implements PointerEvent {\n    /**\n     * @deprecated\n     */\n    initPointerEvent: (\n        typeArg: string,\n        canBubbleArg: boolean,\n        cancelableArg: boolean,\n        viewArg: Window,\n        detailArg: number,\n        screenXArg: number,\n        screenYArg: number,\n        clientXArg: number,\n        clientYArg: number,\n        ctrlKeyArg: boolean,\n        altKeyArg: boolean,\n        shiftKeyArg: boolean,\n        metaKeyArg: boolean,\n        buttonArg: number,\n        relatedTargetArg: EventTarget,\n        offsetXArg: number,\n        offsetYArg: number,\n        widthArg: number,\n        heightArg: number,\n        pressure: number,\n        rotation: number,\n        tiltX: number,\n        tiltY: number,\n        pointerIdArg: number,\n        pointerType: any,\n        hwTimestampArg: number,\n        isPrimary: boolean,\n    ) => void;\n\n    get currentPoint(): any {\n        return this._data.currentPoint;\n    }\n\n    get height(): number {\n        return this._data.height;\n    }\n\n    get hwTimestamp(): number {\n        return this._data.hwTimestamp;\n    }\n\n    get intermediatePoints(): any {\n        return this._data.intermediatePoints;\n    }\n\n    get isPrimary(): boolean {\n        return this._data.isPrimary;\n    }\n\n    get pointerId(): number {\n        return this._data.pointerId;\n    }\n\n    get pointerType(): any {\n        return this._data.pointerType;\n    }\n\n    get pressure(): number {\n        return this._data.pressure;\n    }\n\n    get rotation(): number {\n        return this._data.rotation;\n    }\n\n    get tiltX(): number {\n        return this._data.tiltX;\n    }\n\n    get tiltY(): number {\n        return this._data.tiltY;\n    }\n\n    get width(): number {\n        return this._data.width;\n    }\n\n    getCurrentPoint(element: Element): void {\n        return this._data.getCurrentPoint(element);\n    }\n\n    getIntermediatePoints(element: Element): void {\n        return this._data.getIntermediatePoints(element);\n    }\n}\n\nexport class SyntheticDragEvent extends SyntheticMouseEvent<DragEvent> implements DragEvent {\n    /**\n     * @deprecated\n     */\n    initDragEvent: (\n        typeArg: string,\n        canBubbleArg: boolean,\n        cancelableArg: boolean,\n        viewArg: Window,\n        detailArg: number,\n        screenXArg: number,\n        screenYArg: number,\n        clientXArg: number,\n        clientYArg: number,\n        ctrlKeyArg: boolean,\n        altKeyArg: boolean,\n        shiftKeyArg: boolean,\n        metaKeyArg: boolean,\n        buttonArg: number,\n        relatedTargetArg: EventTarget,\n        dataTransferArg: DataTransfer,\n    ) => void;\n\n    msConvertURL: (\n        file: File,\n        targetType: string,\n        targetURL?: string,\n    ) => void;\n\n    get dataTransfer(): DataTransfer {\n        return this._data.dataTransfer;\n    }\n}\n\nexport class SyntheticWheelEvent extends SyntheticMouseEvent<WheelEvent> implements WheelEvent {\n    /**\n     * @deprecated\n     */\n    initWheelEvent: (\n        typeArg: string,\n        canBubbleArg: boolean,\n        cancelableArg: boolean,\n        viewArg: Window, detailArg:\n            number, screenXArg: number,\n        screenYArg: number,\n        clientXArg: number,\n        clientYArg: number,\n        buttonArg: number,\n        relatedTargetArg: EventTarget,\n        modifiersListArg: string,\n        deltaXArg: number,\n        deltaYArg: number,\n        deltaZArg: number,\n        deltaMode: number,\n    ) => void;\n\n    getCurrentPoint: (element: Element) => void;\n\n    readonly wheelDelta: number;\n    readonly wheelDeltaX: number;\n    readonly wheelDeltaY: number;\n\n    get deltaMode(): number {\n        return this._data.deltaMode;\n    }\n\n    get deltaX(): number {\n        return this._data.deltaX;\n    }\n\n    get deltaY(): number {\n        return this._data.deltaY;\n    }\n\n    get deltaZ(): number {\n        return this._data.deltaZ;\n    }\n\n    get DOM_DELTA_LINE(): number {\n        return this._data.DOM_DELTA_LINE;\n    }\n    get DOM_DELTA_PAGE(): number {\n        return this._data.DOM_DELTA_PAGE;\n    }\n    get DOM_DELTA_PIXEL(): number {\n        return this._data.DOM_DELTA_PIXEL;\n    }\n}\n\nexport class SyntheticFocusEvent extends SyntheticUIEvent<FocusEvent> implements FocusEvent {\n    /**\n     * @deprecated\n     */\n    initFocusEvent: (\n        typeArg: string,\n        canBubbleArg: boolean,\n        cancelableArg: boolean,\n        viewArg: Window,\n        detailArg: number,\n        relatedTargetArg: EventTarget,\n    ) => void;\n\n    get relatedTarget(): EventTarget {\n        return this._data.relatedTarget;\n    }\n}\n\nexport class SyntheticAriaRequestEvent extends SyntheticEvent<AriaRequestEvent> implements AriaRequestEvent {\n    get attributeName(): string {\n        return this._data.attributeName;\n    }\n\n    get attributeValue(): string | null {\n        return this._data.attributeValue;\n    }\n    set attributeValue(value: string | null) {\n        this._data.attributeValue = value;\n    }\n}\n\nexport class SyntheticClipboardEvent extends SyntheticEvent<ClipboardEvent> implements ClipboardEvent {\n    get clipboardData(): DataTransfer {\n        return this._data.clipboardData;\n    }\n}\n\nexport class SyntheticErrorEvent extends SyntheticEvent<ErrorEvent> implements ErrorEvent {\n    /**\n     * @deprecated\n     */\n    initErrorEvent: (\n        typeArg: string,\n        canBubbleArg: boolean,\n        cancelableArg: boolean,\n        messageArg: string,\n        filenameArg: string,\n        linenoArg: number,\n    ) => void;\n\n    get colno(): number {\n        return this._data.colno;\n    }\n\n    get error(): any {\n        return this._data.error;\n    }\n\n    get filename(): string {\n        return this._data.filename;\n    }\n\n    get lineno(): number {\n        return this._data.lineno;\n    }\n\n    get message(): string {\n        return this._data.message;\n    }\n}\n\nexport class SyntheticMediaEncryptedEvent extends SyntheticEvent<MediaEncryptedEvent>\n    implements MediaEncryptedEvent {\n\n    get initData(): ArrayBuffer | null {\n        return this._data.initData;\n    }\n\n    get initDataType(): string {\n        return this._data.initDataType;\n    }\n}\n\nexport class SyntheticMediaStreamErrorEvent extends SyntheticEvent<MediaStreamErrorEvent>\n    implements MediaStreamErrorEvent {\n\n    get error(): MediaStreamError | null {\n        return this._data.error;\n    }\n}\n\nexport class SyntheticProgressEvent extends SyntheticEvent<ProgressEvent> implements ProgressEvent {\n    /**\n     * @deprecated\n     */\n    initProgressEvent: (\n        typeArg: string,\n        canBubbleArg: boolean,\n        cancelableArg: boolean,\n        lengthComputableArg: boolean,\n        loadedArg: number,\n        totalArg: number,\n    ) => void;\n\n    get lengthComputable(): boolean {\n        return this._data.lengthComputable;\n    }\n\n    get loaded(): number {\n        return this._data.loaded;\n    }\n\n    get total(): number {\n        return this._data.total;\n    }\n}\n","/**\n * Event Handlers.\n *\n * Optimizing compilers should inline all this functions and completely remove unused code.\n */\n\nimport { EventHandlerFlags, NativeEventDispatcherFlags } from \"./flags\";\nimport { EventHandler } from \"./event_handler\";\nimport { EventDispatcher } from \"./event_dispatcher\";\nimport { NativeEventDispatcher } from \"./native_event_dispatcher\";\nimport {\n    SyntheticEvent, SyntheticUIEvent, SyntheticDragEvent, SyntheticErrorEvent,\n    SyntheticKeyboardEvent, SyntheticFocusEvent, SyntheticMediaEncryptedEvent, SyntheticMediaStreamErrorEvent,\n    SyntheticMouseEvent, SyntheticAriaRequestEvent, SyntheticClipboardEvent, SyntheticPointerEvent,\n    SyntheticTouchEvent, SyntheticWheelEvent, SyntheticProgressEvent, SyntheticEventClass,\n} from \"./synthetic_event\";\n\n/**\n * Helper function that creates Event Handler objects.\n *\n * @param dispatcher Dispatcher instance.\n * @param fn Event Handler function.\n * @param options Event Options. Value with a boolean type indicates that events of this type should use capture mode\n *   and it will be dispatched to the registered listener before being dispatched to any EventTarget beneath it in the\n *   DOM tree.\n * @returns EventHandler object.\n */\nexport function createEventHandler<E extends SyntheticEvent<any>>(\n    dispatcher: EventDispatcher,\n    fn: (ev: E) => void,\n    capture?: boolean): EventHandler<E> {\n\n    return {\n        dispatcher: dispatcher,\n        flags: capture ? EventHandlerFlags.Capture : EventHandlerFlags.Bubble,\n        fn: fn,\n    } as EventHandler<E>;\n}\n\nexport interface NativeEventDispatchersList {\n    abort: NativeEventDispatcher<SyntheticEventClass<UIEvent, SyntheticUIEvent<UIEvent>>>;\n    activate: NativeEventDispatcher<SyntheticEventClass<UIEvent, SyntheticUIEvent<UIEvent>>>;\n    ariarequest: NativeEventDispatcher<SyntheticEventClass<AriaRequestEvent, SyntheticAriaRequestEvent>>;\n    beforeactivate: NativeEventDispatcher<SyntheticEventClass<UIEvent, SyntheticUIEvent<UIEvent>>>;\n    beforecopy: NativeEventDispatcher<SyntheticEventClass<ClipboardEvent, SyntheticClipboardEvent>>;\n    beforecut: NativeEventDispatcher<SyntheticEventClass<ClipboardEvent, SyntheticClipboardEvent>>;\n    beforedeactivate: NativeEventDispatcher<SyntheticEventClass<UIEvent, SyntheticUIEvent<UIEvent>>>;\n    beforepaste: NativeEventDispatcher<SyntheticEventClass<ClipboardEvent, SyntheticClipboardEvent>>;\n    blur: NativeEventDispatcher<SyntheticEventClass<FocusEvent, SyntheticFocusEvent>>;\n    canplay: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    canplaythrough: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    change: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    click: NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>;\n    contextmenu: NativeEventDispatcher<SyntheticEventClass<PointerEvent, SyntheticPointerEvent>>;\n    copy: NativeEventDispatcher<SyntheticEventClass<ClipboardEvent, SyntheticClipboardEvent>>;\n    cuechange: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    cut: NativeEventDispatcher<SyntheticEventClass<ClipboardEvent, SyntheticClipboardEvent>>;\n    dblclick: NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>;\n    deactivate: NativeEventDispatcher<SyntheticEventClass<UIEvent, SyntheticUIEvent<UIEvent>>>;\n    drag: NativeEventDispatcher<SyntheticEventClass<DragEvent, SyntheticDragEvent>>;\n    dragend: NativeEventDispatcher<SyntheticEventClass<DragEvent, SyntheticDragEvent>>;\n    dragenter: NativeEventDispatcher<SyntheticEventClass<DragEvent, SyntheticDragEvent>>;\n    dragleave: NativeEventDispatcher<SyntheticEventClass<DragEvent, SyntheticDragEvent>>;\n    dragover: NativeEventDispatcher<SyntheticEventClass<DragEvent, SyntheticDragEvent>>;\n    dragstart: NativeEventDispatcher<SyntheticEventClass<DragEvent, SyntheticDragEvent>>;\n    drop: NativeEventDispatcher<SyntheticEventClass<DragEvent, SyntheticDragEvent>>;\n    durationchange: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    emptied: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    encrypted: NativeEventDispatcher<SyntheticEventClass<MediaEncryptedEvent, SyntheticMediaEncryptedEvent>>;\n    ended: NativeEventDispatcher<SyntheticEventClass<MediaStreamErrorEvent, SyntheticMediaStreamErrorEvent>>;\n    error: NativeEventDispatcher<SyntheticEventClass<ErrorEvent, SyntheticErrorEvent>>;\n    focus: NativeEventDispatcher<SyntheticEventClass<FocusEvent, SyntheticFocusEvent>>;\n    gotpointercapture: NativeEventDispatcher<SyntheticEventClass<PointerEvent, SyntheticPointerEvent>>;\n    input: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    invalid: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    keydown: NativeEventDispatcher<SyntheticEventClass<KeyboardEvent, SyntheticKeyboardEvent>>;\n    keypress: NativeEventDispatcher<SyntheticEventClass<KeyboardEvent, SyntheticKeyboardEvent>>;\n    keyup: NativeEventDispatcher<SyntheticEventClass<KeyboardEvent, SyntheticKeyboardEvent>>;\n    load: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    loadeddata: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    loadedmetadata: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    loadstart: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    lostpointercapture: NativeEventDispatcher<SyntheticEventClass<PointerEvent, SyntheticPointerEvent>>;\n    mousedown: NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>;\n    mouseenter: NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>;\n    mouseleave: NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>;\n    mousemove: NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>;\n    mouseout: NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>;\n    mouseover: NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>;\n    mouseup: NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>;\n    paste: NativeEventDispatcher<SyntheticEventClass<ClipboardEvent, SyntheticClipboardEvent>>;\n    pause: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    play: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    playing: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    pointercancel: NativeEventDispatcher<SyntheticEventClass<PointerEvent, SyntheticPointerEvent>>;\n    pointerdown: NativeEventDispatcher<SyntheticEventClass<PointerEvent, SyntheticPointerEvent>>;\n    pointerenter: NativeEventDispatcher<SyntheticEventClass<PointerEvent, SyntheticPointerEvent>>;\n    pointerleave: NativeEventDispatcher<SyntheticEventClass<PointerEvent, SyntheticPointerEvent>>;\n    pointermove: NativeEventDispatcher<SyntheticEventClass<PointerEvent, SyntheticPointerEvent>>;\n    pointerout: NativeEventDispatcher<SyntheticEventClass<PointerEvent, SyntheticPointerEvent>>;\n    pointerover: NativeEventDispatcher<SyntheticEventClass<PointerEvent, SyntheticPointerEvent>>;\n    pointerup: NativeEventDispatcher<SyntheticEventClass<PointerEvent, SyntheticPointerEvent>>;\n    progress: NativeEventDispatcher<SyntheticEventClass<ProgressEvent, SyntheticProgressEvent>>;\n    ratechange: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    reset: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    scroll: NativeEventDispatcher<SyntheticEventClass<UIEvent, SyntheticUIEvent<UIEvent>>>;\n    seeked: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    seeking: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    select: NativeEventDispatcher<SyntheticEventClass<UIEvent, SyntheticUIEvent<UIEvent>>>;\n    selectstart: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    stalled: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    submit: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    suspend: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    timeupdate: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    touchcancel: NativeEventDispatcher<SyntheticEventClass<TouchEvent, SyntheticTouchEvent>>;\n    touchend: NativeEventDispatcher<SyntheticEventClass<TouchEvent, SyntheticTouchEvent>>;\n    touchmove: NativeEventDispatcher<SyntheticEventClass<TouchEvent, SyntheticTouchEvent>>;\n    touchstart: NativeEventDispatcher<SyntheticEventClass<TouchEvent, SyntheticTouchEvent>>;\n    unload: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    volumechange: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    waiting: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    wheel: NativeEventDispatcher<SyntheticEventClass<WheelEvent, SyntheticWheelEvent>>;\n};\n\n/* tslint:disable:max-line-length */\nexport const NativeEventDispatchers: NativeEventDispatchersList = {\n    abort: new NativeEventDispatcher<SyntheticEventClass<UIEvent, SyntheticUIEvent<UIEvent>>>(NativeEventDispatcherFlags.Capture, \"abort\", SyntheticUIEvent),\n    activate: new NativeEventDispatcher<SyntheticEventClass<UIEvent, SyntheticUIEvent<UIEvent>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"activate\", SyntheticUIEvent),\n    ariarequest: new NativeEventDispatcher<SyntheticEventClass<AriaRequestEvent, SyntheticAriaRequestEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"ariarequest\", SyntheticAriaRequestEvent),\n    beforeactivate: new NativeEventDispatcher<SyntheticEventClass<UIEvent, SyntheticUIEvent<UIEvent>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"beforeactivate\", SyntheticUIEvent),\n    beforecopy: new NativeEventDispatcher<SyntheticEventClass<ClipboardEvent, SyntheticClipboardEvent>>(NativeEventDispatcherFlags.Capture, \"beforecopy\", SyntheticClipboardEvent),\n    beforecut: new NativeEventDispatcher<SyntheticEventClass<ClipboardEvent, SyntheticClipboardEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"beforecut\", SyntheticClipboardEvent),\n    beforedeactivate: new NativeEventDispatcher<SyntheticEventClass<UIEvent, SyntheticUIEvent<UIEvent>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"beforedeactivate\", SyntheticUIEvent),\n    beforepaste: new NativeEventDispatcher<SyntheticEventClass<ClipboardEvent, SyntheticClipboardEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"beforepaste\", SyntheticClipboardEvent),\n    blur: new NativeEventDispatcher<SyntheticEventClass<FocusEvent, SyntheticFocusEvent>>(NativeEventDispatcherFlags.Capture, \"blur\", SyntheticFocusEvent),\n    canplay: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture, \"canplay\", SyntheticEvent),\n    canplaythrough: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture, \"canplaythrough\", SyntheticEvent),\n    change: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"change\", SyntheticEvent),\n    click: new NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"click\", SyntheticMouseEvent),\n    contextmenu: new NativeEventDispatcher<SyntheticEventClass<PointerEvent, SyntheticPointerEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"contextmenu\", SyntheticPointerEvent),\n    copy: new NativeEventDispatcher<SyntheticEventClass<ClipboardEvent, SyntheticClipboardEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"copy\", SyntheticClipboardEvent),\n    cuechange: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture, \"cuechange\", SyntheticEvent),\n    cut: new NativeEventDispatcher<SyntheticEventClass<ClipboardEvent, SyntheticClipboardEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"cut\", SyntheticClipboardEvent),\n    dblclick: new NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"dblclick\", SyntheticMouseEvent),\n    deactivate: new NativeEventDispatcher<SyntheticEventClass<UIEvent, SyntheticUIEvent<UIEvent>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"deactivate\", SyntheticUIEvent),\n    drag: new NativeEventDispatcher<SyntheticEventClass<DragEvent, SyntheticDragEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"drag\", SyntheticDragEvent),\n    dragend: new NativeEventDispatcher<SyntheticEventClass<DragEvent, SyntheticDragEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"dragend\", SyntheticDragEvent),\n    dragenter: new NativeEventDispatcher<SyntheticEventClass<DragEvent, SyntheticDragEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"dragenter\", SyntheticDragEvent),\n    dragleave: new NativeEventDispatcher<SyntheticEventClass<DragEvent, SyntheticDragEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"dragleave\", SyntheticDragEvent),\n    dragover: new NativeEventDispatcher<SyntheticEventClass<DragEvent, SyntheticDragEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"dragover\", SyntheticDragEvent),\n    dragstart: new NativeEventDispatcher<SyntheticEventClass<DragEvent, SyntheticDragEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"dragstart\", SyntheticDragEvent),\n    drop: new NativeEventDispatcher<SyntheticEventClass<DragEvent, SyntheticDragEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"drop\", SyntheticDragEvent),\n    durationchange: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture, \"durationchange\", SyntheticEvent),\n    emptied: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture, \"emptied\", SyntheticEvent),\n    encrypted: new NativeEventDispatcher<SyntheticEventClass<MediaEncryptedEvent, SyntheticMediaEncryptedEvent>>(NativeEventDispatcherFlags.Capture, \"encrypted\", SyntheticMediaEncryptedEvent),\n    ended: new NativeEventDispatcher<SyntheticEventClass<MediaStreamErrorEvent, SyntheticMediaStreamErrorEvent>>(NativeEventDispatcherFlags.Capture, \"ended\", SyntheticMediaStreamErrorEvent),\n    error: new NativeEventDispatcher<SyntheticEventClass<ErrorEvent, SyntheticErrorEvent>>(NativeEventDispatcherFlags.Capture, \"error\", SyntheticErrorEvent),\n    focus: new NativeEventDispatcher<SyntheticEventClass<FocusEvent, SyntheticFocusEvent>>(NativeEventDispatcherFlags.Capture, \"focus\", SyntheticFocusEvent),\n    gotpointercapture: new NativeEventDispatcher<SyntheticEventClass<PointerEvent, SyntheticPointerEvent>>(NativeEventDispatcherFlags.Capture, \"gotpointercapture\", SyntheticPointerEvent),\n    input: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"input\", SyntheticEvent),\n    invalid: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture, \"invalid\", SyntheticEvent),\n    keydown: new NativeEventDispatcher<SyntheticEventClass<KeyboardEvent, SyntheticKeyboardEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"keydown\", SyntheticKeyboardEvent),\n    keypress: new NativeEventDispatcher<SyntheticEventClass<KeyboardEvent, SyntheticKeyboardEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"keypress\", SyntheticKeyboardEvent),\n    keyup: new NativeEventDispatcher<SyntheticEventClass<KeyboardEvent, SyntheticKeyboardEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"keyup\", SyntheticKeyboardEvent),\n    load: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture, \"load\", SyntheticEvent),\n    loadeddata: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture, \"loadeddata\", SyntheticEvent),\n    loadedmetadata: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture, \"loadedmetadata\", SyntheticEvent),\n    loadstart: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture, \"loadstart\", SyntheticEvent),\n    lostpointercapture: new NativeEventDispatcher<SyntheticEventClass<PointerEvent, SyntheticPointerEvent>>(NativeEventDispatcherFlags.Capture, \"lostpointercapture\", SyntheticPointerEvent),\n    mousedown: new NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles | NativeEventDispatcherFlags.Passive, \"mousedown\", SyntheticMouseEvent),\n    mouseenter: new NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Passive, \"mouseenter\", SyntheticMouseEvent),\n    mouseleave: new NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Passive, \"mouseleave\", SyntheticMouseEvent),\n    mousemove: new NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles | NativeEventDispatcherFlags.Passive, \"mousemove\", SyntheticMouseEvent),\n    mouseout: new NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles | NativeEventDispatcherFlags.Passive, \"mouseout\", SyntheticMouseEvent),\n    mouseover: new NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles | NativeEventDispatcherFlags.Passive, \"mouseover\", SyntheticMouseEvent),\n    mouseup: new NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles | NativeEventDispatcherFlags.Passive, \"mouseup\", SyntheticMouseEvent),\n    paste: new NativeEventDispatcher<SyntheticEventClass<ClipboardEvent, SyntheticClipboardEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"paste\", SyntheticClipboardEvent),\n    pause: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture, \"pause\", SyntheticEvent),\n    play: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture, \"play\", SyntheticEvent),\n    playing: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture, \"playing\", SyntheticEvent),\n    pointercancel: new NativeEventDispatcher<SyntheticEventClass<PointerEvent, SyntheticPointerEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"pointercancel\", SyntheticPointerEvent),\n    pointerdown: new NativeEventDispatcher<SyntheticEventClass<PointerEvent, SyntheticPointerEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"pointerdown\", SyntheticPointerEvent),\n    pointerenter: new NativeEventDispatcher<SyntheticEventClass<PointerEvent, SyntheticPointerEvent>>(NativeEventDispatcherFlags.Capture, \"pointerenter\", SyntheticPointerEvent),\n    pointerleave: new NativeEventDispatcher<SyntheticEventClass<PointerEvent, SyntheticPointerEvent>>(NativeEventDispatcherFlags.Capture, \"pointerleave\", SyntheticPointerEvent),\n    pointermove: new NativeEventDispatcher<SyntheticEventClass<PointerEvent, SyntheticPointerEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"pointermove\", SyntheticPointerEvent),\n    pointerout: new NativeEventDispatcher<SyntheticEventClass<PointerEvent, SyntheticPointerEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"pointerout\", SyntheticPointerEvent),\n    pointerover: new NativeEventDispatcher<SyntheticEventClass<PointerEvent, SyntheticPointerEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"pointerover\", SyntheticPointerEvent),\n    pointerup: new NativeEventDispatcher<SyntheticEventClass<PointerEvent, SyntheticPointerEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"pointerup\", SyntheticPointerEvent),\n    progress: new NativeEventDispatcher<SyntheticEventClass<ProgressEvent, SyntheticProgressEvent>>(NativeEventDispatcherFlags.Capture, \"progress\", SyntheticProgressEvent),\n    ratechange: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture, \"ratechange\", SyntheticEvent),\n    reset: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"reset\", SyntheticEvent),\n    scroll: new NativeEventDispatcher<SyntheticEventClass<UIEvent, SyntheticUIEvent<UIEvent>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Passive, \"scroll\", SyntheticUIEvent),\n    seeked: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture, \"seeked\", SyntheticEvent),\n    seeking: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture, \"seeking\", SyntheticEvent),\n    select: new NativeEventDispatcher<SyntheticEventClass<UIEvent, SyntheticUIEvent<UIEvent>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"select\", SyntheticUIEvent),\n    selectstart: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"selectstart\", SyntheticEvent),\n    stalled: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture, \"stalled\", SyntheticEvent),\n    submit: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"submit\", SyntheticEvent),\n    suspend: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture, \"suspend\", SyntheticEvent),\n    timeupdate: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture, \"timeupdate\", SyntheticEvent),\n    touchcancel: new NativeEventDispatcher<SyntheticEventClass<TouchEvent, SyntheticTouchEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles | NativeEventDispatcherFlags.Passive, \"touchcancel\", SyntheticTouchEvent),\n    touchend: new NativeEventDispatcher<SyntheticEventClass<TouchEvent, SyntheticTouchEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles | NativeEventDispatcherFlags.Passive, \"touchend\", SyntheticTouchEvent),\n    touchmove: new NativeEventDispatcher<SyntheticEventClass<TouchEvent, SyntheticTouchEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles | NativeEventDispatcherFlags.Passive, \"touchmove\", SyntheticTouchEvent),\n    touchstart: new NativeEventDispatcher<SyntheticEventClass<TouchEvent, SyntheticTouchEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles | NativeEventDispatcherFlags.Passive, \"touchstart\", SyntheticTouchEvent),\n    unload: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture, \"unload\", SyntheticEvent),\n    volumechange: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture, \"volumechange\", SyntheticEvent),\n    waiting: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture, \"waiting\", SyntheticEvent),\n    wheel: new NativeEventDispatcher<SyntheticEventClass<WheelEvent, SyntheticWheelEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles | NativeEventDispatcherFlags.Passive, \"wheel\", SyntheticWheelEvent),\n};\n\nexport interface NativeActiveEventDispatchersList {\n    mousedown: NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>;\n    mouseenter: NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>;\n    mouseleave: NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>;\n    mousemove: NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>;\n    mouseout: NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>;\n    mouseover: NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>;\n    mouseup: NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>;\n    scroll: NativeEventDispatcher<SyntheticEventClass<UIEvent, SyntheticUIEvent<UIEvent>>>;\n    touchcancel: NativeEventDispatcher<SyntheticEventClass<TouchEvent, SyntheticTouchEvent>>;\n    touchend: NativeEventDispatcher<SyntheticEventClass<TouchEvent, SyntheticTouchEvent>>;\n    touchmove: NativeEventDispatcher<SyntheticEventClass<TouchEvent, SyntheticTouchEvent>>;\n    touchstart: NativeEventDispatcher<SyntheticEventClass<TouchEvent, SyntheticTouchEvent>>;\n    wheel: NativeEventDispatcher<SyntheticEventClass<WheelEvent, SyntheticWheelEvent>>;\n}\n\nexport const NativeActiveEventDispatchers = {\n    mousedown: new NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"mousedown\", SyntheticMouseEvent),\n    mouseenter: new NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>(NativeEventDispatcherFlags.Capture, \"mouseenter\", SyntheticMouseEvent),\n    mouseleave: new NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>(NativeEventDispatcherFlags.Capture, \"mouseleave\", SyntheticMouseEvent),\n    mousemove: new NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"mousemove\", SyntheticMouseEvent),\n    mouseout: new NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"mouseout\", SyntheticMouseEvent),\n    mouseover: new NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"mouseover\", SyntheticMouseEvent),\n    mouseup: new NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"mouseup\", SyntheticMouseEvent),\n    scroll: new NativeEventDispatcher<SyntheticEventClass<UIEvent, SyntheticUIEvent<UIEvent>>>(NativeEventDispatcherFlags.Capture, \"scroll\", SyntheticUIEvent),\n    touchcancel: new NativeEventDispatcher<SyntheticEventClass<TouchEvent, SyntheticTouchEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"touchcancel\", SyntheticTouchEvent),\n    touchend: new NativeEventDispatcher<SyntheticEventClass<TouchEvent, SyntheticTouchEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"touchend\", SyntheticTouchEvent),\n    touchmove: new NativeEventDispatcher<SyntheticEventClass<TouchEvent, SyntheticTouchEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"touchmove\", SyntheticTouchEvent),\n    touchstart: new NativeEventDispatcher<SyntheticEventClass<TouchEvent, SyntheticTouchEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"touchstart\", SyntheticTouchEvent),\n    wheel: new NativeEventDispatcher<SyntheticEventClass<WheelEvent, SyntheticWheelEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"wheel\", SyntheticWheelEvent),\n};\n\n/**\n * Events.\n */\nexport const Events = {\n    onAbort: function createAbortEventHandler(\n        handler: (ev: SyntheticUIEvent<UIEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticUIEvent<UIEvent>> {\n        return createEventHandler<SyntheticUIEvent<UIEvent>>(NativeEventDispatchers.abort, handler, capture);\n    },\n    onActivate: function createActivateEventHandler(\n        handler: (ev: SyntheticUIEvent<UIEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticUIEvent<UIEvent>> {\n        return createEventHandler<SyntheticUIEvent<UIEvent>>(NativeEventDispatchers.activate, handler, capture);\n    },\n    onAriaRequest: function createAriarequestEventHandler(\n        handler: (ev: SyntheticAriaRequestEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticAriaRequestEvent> {\n        return createEventHandler<SyntheticAriaRequestEvent>(NativeEventDispatchers.ariarequest, handler, capture);\n    },\n    onBeforeActivate: function createBeforeactivateEventHandler(\n        handler: (ev: SyntheticUIEvent<UIEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticUIEvent<UIEvent>> {\n        return createEventHandler<SyntheticUIEvent<UIEvent>>(NativeEventDispatchers.beforeactivate, handler, capture);\n    },\n    onBeforeCopy: function createBeforecopyEventHandler(\n        handler: (ev: SyntheticClipboardEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticClipboardEvent> {\n        return createEventHandler<SyntheticClipboardEvent>(NativeEventDispatchers.beforecopy, handler, capture);\n    },\n    onBeforeCut: function createBeforecutEventHandler(\n        handler: (ev: SyntheticClipboardEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticClipboardEvent> {\n        return createEventHandler<SyntheticClipboardEvent>(NativeEventDispatchers.beforecut, handler, capture);\n    },\n    onBeforeDeactivate: function createBeforedeactivateEventHandler(\n        handler: (ev: SyntheticUIEvent<UIEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticUIEvent<UIEvent>> {\n        return createEventHandler<SyntheticUIEvent<UIEvent>>(NativeEventDispatchers.beforedeactivate, handler, capture);\n    },\n    onBeforePaste: function createBeforepasteEventHandler(\n        handler: (ev: SyntheticClipboardEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticClipboardEvent> {\n        return createEventHandler<SyntheticClipboardEvent>(NativeEventDispatchers.beforepaste, handler, capture);\n    },\n    onBlur: function createBlurEventHandler(\n        handler: (ev: SyntheticFocusEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticFocusEvent> {\n        return createEventHandler<SyntheticFocusEvent>(NativeEventDispatchers.blur, handler, capture);\n    },\n    onCanPlay: function createCanplayEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.canplay, handler, capture);\n    },\n    onCanPlaythrough: function createCanplaythroughEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.canplaythrough, handler, capture);\n    },\n    onChange: function createChangeEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.change, handler, capture);\n    },\n    onClick: function createClickEventHandler(\n        handler: (ev: SyntheticMouseEvent<MouseEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticMouseEvent<MouseEvent>> {\n        return createEventHandler<SyntheticMouseEvent<MouseEvent>>(NativeEventDispatchers.click, handler, capture);\n    },\n    onContextMenu: function createContextmenuEventHandler(\n        handler: (ev: SyntheticPointerEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticPointerEvent> {\n        return createEventHandler<SyntheticPointerEvent>(NativeEventDispatchers.contextmenu, handler, capture);\n    },\n    onCopy: function createCopyEventHandler(\n        handler: (ev: SyntheticClipboardEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticClipboardEvent> {\n        return createEventHandler<SyntheticClipboardEvent>(NativeEventDispatchers.copy, handler, capture);\n    },\n    onCueChange: function createCuechangeEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.cuechange, handler, capture);\n    },\n    onCut: function createCutEventHandler(\n        handler: (ev: SyntheticClipboardEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticClipboardEvent> {\n        return createEventHandler<SyntheticClipboardEvent>(NativeEventDispatchers.cut, handler, capture);\n    },\n    onDoubleClick: function createDblclickEventHandler(\n        handler: (ev: SyntheticMouseEvent<MouseEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticMouseEvent<MouseEvent>> {\n        return createEventHandler<SyntheticMouseEvent<MouseEvent>>(NativeEventDispatchers.dblclick, handler, capture);\n    },\n    onDeactivate: function createDeactivateEventHandler(\n        handler: (ev: SyntheticUIEvent<UIEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticUIEvent<UIEvent>> {\n        return createEventHandler<SyntheticUIEvent<UIEvent>>(NativeEventDispatchers.deactivate, handler, capture);\n    },\n    onDrag: function createDragEventHandler(\n        handler: (ev: SyntheticDragEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticDragEvent> {\n        return createEventHandler<SyntheticDragEvent>(NativeEventDispatchers.drag, handler, capture);\n    },\n    onDragEnd: function createDragendEventHandler(\n        handler: (ev: SyntheticDragEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticDragEvent> {\n        return createEventHandler<SyntheticDragEvent>(NativeEventDispatchers.dragend, handler, capture);\n    },\n    onDragEnter: function createDragenterEventHandler(\n        handler: (ev: SyntheticDragEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticDragEvent> {\n        return createEventHandler<SyntheticDragEvent>(NativeEventDispatchers.dragenter, handler, capture);\n    },\n    onDragLeave: function createDragleaveEventHandler(\n        handler: (ev: SyntheticDragEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticDragEvent> {\n        return createEventHandler<SyntheticDragEvent>(NativeEventDispatchers.dragleave, handler, capture);\n    },\n    onDragOver: function createDragoverEventHandler(\n        handler: (ev: SyntheticDragEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticDragEvent> {\n        return createEventHandler<SyntheticDragEvent>(NativeEventDispatchers.dragover, handler, capture);\n    },\n    onDragStart: function createDragstartEventHandler(\n        handler: (ev: SyntheticDragEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticDragEvent> {\n        return createEventHandler<SyntheticDragEvent>(NativeEventDispatchers.dragstart, handler, capture);\n    },\n    onDrop: function createDropEventHandler(\n        handler: (ev: SyntheticDragEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticDragEvent> {\n        return createEventHandler<SyntheticDragEvent>(NativeEventDispatchers.drop, handler, capture);\n    },\n    onDurationChange: function createDurationchangeEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.durationchange, handler, capture);\n    },\n    onEmptied: function createEmptiedEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.emptied, handler, capture);\n    },\n    onEncrypted: function createEncryptedEventHandler(\n        handler: (ev: SyntheticMediaEncryptedEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticMediaEncryptedEvent> {\n        return createEventHandler<SyntheticMediaEncryptedEvent>(NativeEventDispatchers.encrypted, handler, capture);\n    },\n    onEnded: function createEndedEventHandler(\n        handler: (ev: SyntheticMediaStreamErrorEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticMediaStreamErrorEvent> {\n        return createEventHandler<SyntheticMediaStreamErrorEvent>(NativeEventDispatchers.ended, handler, capture);\n    },\n    onError: function createErrorEventHandler(\n        handler: (ev: SyntheticErrorEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticErrorEvent> {\n        return createEventHandler<SyntheticErrorEvent>(NativeEventDispatchers.error, handler, capture);\n    },\n    onFocus: function createFocusEventHandler(\n        handler: (ev: SyntheticFocusEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticFocusEvent> {\n        return createEventHandler<SyntheticFocusEvent>(NativeEventDispatchers.focus, handler, capture);\n    },\n    onGotPointerCapture: function createGotpointercaptureEventHandler(\n        handler: (ev: SyntheticPointerEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticPointerEvent> {\n        return createEventHandler<SyntheticPointerEvent>(NativeEventDispatchers.gotpointercapture, handler, capture);\n    },\n    onInput: function createInputEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.input, handler, capture);\n    },\n    onInvalid: function createInvalidEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.invalid, handler, capture);\n    },\n    onKeyDown: function createKeydownEventHandler(\n        handler: (ev: SyntheticKeyboardEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticKeyboardEvent> {\n        return createEventHandler<SyntheticKeyboardEvent>(NativeEventDispatchers.keydown, handler, capture);\n    },\n    onKeyPress: function createKeypressEventHandler(\n        handler: (ev: SyntheticKeyboardEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticKeyboardEvent> {\n        return createEventHandler<SyntheticKeyboardEvent>(NativeEventDispatchers.keypress, handler, capture);\n    },\n    onKeyUp: function createKeyupEventHandler(\n        handler: (ev: SyntheticKeyboardEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticKeyboardEvent> {\n        return createEventHandler<SyntheticKeyboardEvent>(NativeEventDispatchers.keyup, handler, capture);\n    },\n    onLoad: function createLoadEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.load, handler, capture);\n    },\n    onLoadedData: function createLoadeddataEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.loadeddata, handler, capture);\n    },\n    onLoadedMetadata: function createLoadedmetadataEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.loadedmetadata, handler, capture);\n    },\n    onLoadStart: function createLoadstartEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.loadstart, handler, capture);\n    },\n    onLostPointerCapture: function createLostpointercaptureEventHandler(\n        handler: (ev: SyntheticPointerEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticPointerEvent> {\n        return createEventHandler<SyntheticPointerEvent>(NativeEventDispatchers.lostpointercapture, handler, capture);\n    },\n    onMouseDown: function createMousedownEventHandler(\n        handler: (ev: SyntheticMouseEvent<MouseEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticMouseEvent<MouseEvent>> {\n        return createEventHandler<SyntheticMouseEvent<MouseEvent>>(NativeEventDispatchers.mousedown, handler, capture);\n    },\n    onMouseEnter: function createMouseenterEventHandler(\n        handler: (ev: SyntheticMouseEvent<MouseEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticMouseEvent<MouseEvent>> {\n        return createEventHandler<SyntheticMouseEvent<MouseEvent>>(NativeEventDispatchers.mouseenter, handler, capture);\n    },\n    onMouseLeave: function createMouseleaveEventHandler(\n        handler: (ev: SyntheticMouseEvent<MouseEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticMouseEvent<MouseEvent>> {\n        return createEventHandler<SyntheticMouseEvent<MouseEvent>>(NativeEventDispatchers.mouseleave, handler, capture);\n    },\n    onMouseMove: function createMousemoveEventHandler(\n        handler: (ev: SyntheticMouseEvent<MouseEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticMouseEvent<MouseEvent>> {\n        return createEventHandler<SyntheticMouseEvent<MouseEvent>>(NativeEventDispatchers.mousemove, handler, capture);\n    },\n    onMouseOut: function createMouseoutEventHandler(\n        handler: (ev: SyntheticMouseEvent<MouseEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticMouseEvent<MouseEvent>> {\n        return createEventHandler<SyntheticMouseEvent<MouseEvent>>(NativeEventDispatchers.mouseout, handler, capture);\n    },\n    onMouseOver: function createMouseoverEventHandler(\n        handler: (ev: SyntheticMouseEvent<MouseEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticMouseEvent<MouseEvent>> {\n        return createEventHandler<SyntheticMouseEvent<MouseEvent>>(NativeEventDispatchers.mouseover, handler, capture);\n    },\n    onMouseUp: function createMouseupEventHandler(\n        handler: (ev: SyntheticMouseEvent<MouseEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticMouseEvent<MouseEvent>> {\n        return createEventHandler<SyntheticMouseEvent<MouseEvent>>(NativeEventDispatchers.mouseup, handler, capture);\n    },\n    onPaste: function createPasteEventHandler(\n        handler: (ev: SyntheticClipboardEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticClipboardEvent> {\n        return createEventHandler<SyntheticClipboardEvent>(NativeEventDispatchers.paste, handler, capture);\n    },\n    onPause: function createPauseEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.pause, handler, capture);\n    },\n    onPlay: function createPlayEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.play, handler, capture);\n    },\n    onPlaying: function createPlayingEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.playing, handler, capture);\n    },\n    onPointerCancel: function createPointercancelEventHandler(\n        handler: (ev: SyntheticPointerEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticPointerEvent> {\n        return createEventHandler<SyntheticPointerEvent>(NativeEventDispatchers.pointercancel, handler, capture);\n    },\n    onPointerDown: function createPointerdownEventHandler(\n        handler: (ev: SyntheticPointerEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticPointerEvent> {\n        return createEventHandler<SyntheticPointerEvent>(NativeEventDispatchers.pointerdown, handler, capture);\n    },\n    onPointerEnter: function createPointerenterEventHandler(\n        handler: (ev: SyntheticPointerEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticPointerEvent> {\n        return createEventHandler<SyntheticPointerEvent>(NativeEventDispatchers.pointerenter, handler, capture);\n    },\n    onPointerLeave: function createPointerleaveEventHandler(\n        handler: (ev: SyntheticPointerEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticPointerEvent> {\n        return createEventHandler<SyntheticPointerEvent>(NativeEventDispatchers.pointerleave, handler, capture);\n    },\n    onPointerMove: function createPointermoveEventHandler(\n        handler: (ev: SyntheticPointerEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticPointerEvent> {\n        return createEventHandler<SyntheticPointerEvent>(NativeEventDispatchers.pointermove, handler, capture);\n    },\n    onPointerOut: function createPointeroutEventHandler(\n        handler: (ev: SyntheticPointerEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticPointerEvent> {\n        return createEventHandler<SyntheticPointerEvent>(NativeEventDispatchers.pointerout, handler, capture);\n    },\n    onPointerOver: function createPointeroverEventHandler(\n        handler: (ev: SyntheticPointerEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticPointerEvent> {\n        return createEventHandler<SyntheticPointerEvent>(NativeEventDispatchers.pointerover, handler, capture);\n    },\n    onPointerUp: function createPointerupEventHandler(\n        handler: (ev: SyntheticPointerEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticPointerEvent> {\n        return createEventHandler<SyntheticPointerEvent>(NativeEventDispatchers.pointerup, handler, capture);\n    },\n    onProgress: function createProgressEventHandler(\n        handler: (ev: SyntheticProgressEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticProgressEvent> {\n        return createEventHandler<SyntheticProgressEvent>(NativeEventDispatchers.progress, handler, capture);\n    },\n    onRateChange: function createRatechangeEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.ratechange, handler, capture);\n    },\n    onReset: function createResetEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.reset, handler, capture);\n    },\n    onScroll: function createScrollEventHandler(\n        handler: (ev: SyntheticUIEvent<UIEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticUIEvent<UIEvent>> {\n        return createEventHandler<SyntheticUIEvent<UIEvent>>(NativeEventDispatchers.scroll, handler, capture);\n    },\n    onSeeked: function createSeekedEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.seeked, handler, capture);\n    },\n    onSeeking: function createSeekingEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.seeking, handler, capture);\n    },\n    onSelect: function createSelectEventHandler(\n        handler: (ev: SyntheticUIEvent<UIEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticUIEvent<UIEvent>> {\n        return createEventHandler<SyntheticUIEvent<UIEvent>>(NativeEventDispatchers.select, handler, capture);\n    },\n    onSelectStart: function createSelectstartEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.selectstart, handler, capture);\n    },\n    onStalled: function createStalledEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.stalled, handler, capture);\n    },\n    onSubmit: function createSubmitEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.submit, handler, capture);\n    },\n    onSuspend: function createSuspendEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.suspend, handler, capture);\n    },\n    onTimeUpdate: function createTimeupdateEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.timeupdate, handler, capture);\n    },\n    onTouchCancel: function createTouchcancelEventHandler(\n        handler: (ev: SyntheticTouchEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticTouchEvent> {\n        return createEventHandler<SyntheticTouchEvent>(NativeEventDispatchers.touchcancel, handler, capture);\n    },\n    onTouchEnd: function createTouchendEventHandler(\n        handler: (ev: SyntheticTouchEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticTouchEvent> {\n        return createEventHandler<SyntheticTouchEvent>(NativeEventDispatchers.touchend, handler, capture);\n    },\n    onTouchMove: function createTouchmoveEventHandler(\n        handler: (ev: SyntheticTouchEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticTouchEvent> {\n        return createEventHandler<SyntheticTouchEvent>(NativeEventDispatchers.touchmove, handler, capture);\n    },\n    onTouchStart: function createTouchstartEventHandler(\n        handler: (ev: SyntheticTouchEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticTouchEvent> {\n        return createEventHandler<SyntheticTouchEvent>(NativeEventDispatchers.touchstart, handler, capture);\n    },\n    onUnload: function createUnloadEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.unload, handler, capture);\n    },\n    onVolumeChange: function createVolumechangeEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.volumechange, handler, capture);\n    },\n    onWaiting: function createWaitingEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.waiting, handler, capture);\n    },\n    onWheel: function createWheelEventHandler(\n        handler: (ev: SyntheticWheelEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticWheelEvent> {\n        return createEventHandler<SyntheticWheelEvent>(NativeEventDispatchers.wheel, handler, capture);\n    },\n};\n\n/**\n * List of Events with disabled passive flag.\n */\nexport const ActiveEvents = {\n    onScroll: function createScrollEventHandler(\n        handler: (ev: SyntheticUIEvent<UIEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticUIEvent<UIEvent>> {\n        return createEventHandler<SyntheticUIEvent<UIEvent>>(NativeActiveEventDispatchers.scroll, handler, capture);\n    },\n    onMouseDown: function createMousedownEventHandler(\n        handler: (ev: SyntheticMouseEvent<MouseEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticMouseEvent<MouseEvent>> {\n        return createEventHandler<SyntheticMouseEvent<MouseEvent>>(NativeActiveEventDispatchers.mousedown, handler, capture);\n    },\n    onMouseEnter: function createMouseenterEventHandler(\n        handler: (ev: SyntheticMouseEvent<MouseEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticMouseEvent<MouseEvent>> {\n        return createEventHandler<SyntheticMouseEvent<MouseEvent>>(NativeActiveEventDispatchers.mouseenter, handler, capture);\n    },\n    onMouseLeave: function createMouseleaveEventHandler(\n        handler: (ev: SyntheticMouseEvent<MouseEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticMouseEvent<MouseEvent>> {\n        return createEventHandler<SyntheticMouseEvent<MouseEvent>>(NativeActiveEventDispatchers.mouseleave, handler, capture);\n    },\n    onMouseMove: function createMousemoveEventHandler(\n        handler: (ev: SyntheticMouseEvent<MouseEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticMouseEvent<MouseEvent>> {\n        return createEventHandler<SyntheticMouseEvent<MouseEvent>>(NativeActiveEventDispatchers.mousemove, handler, capture);\n    },\n    onMouseOut: function createMouseoutEventHandler(\n        handler: (ev: SyntheticMouseEvent<MouseEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticMouseEvent<MouseEvent>> {\n        return createEventHandler<SyntheticMouseEvent<MouseEvent>>(NativeActiveEventDispatchers.mouseout, handler, capture);\n    },\n    onMouseOver: function createMouseoverEventHandler(\n        handler: (ev: SyntheticMouseEvent<MouseEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticMouseEvent<MouseEvent>> {\n        return createEventHandler<SyntheticMouseEvent<MouseEvent>>(NativeActiveEventDispatchers.mouseover, handler, capture);\n    },\n    onMouseUp: function createMouseupEventHandler(\n        handler: (ev: SyntheticMouseEvent<MouseEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticMouseEvent<MouseEvent>> {\n        return createEventHandler<SyntheticMouseEvent<MouseEvent>>(NativeActiveEventDispatchers.mouseup, handler, capture);\n    },\n    onTouchCancel: function createTouchcancelEventHandler(\n        handler: (ev: SyntheticTouchEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticTouchEvent> {\n        return createEventHandler<SyntheticTouchEvent>(NativeActiveEventDispatchers.touchcancel, handler, capture);\n    },\n    onTouchEnd: function createTouchendEventHandler(\n        handler: (ev: SyntheticTouchEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticTouchEvent> {\n        return createEventHandler<SyntheticTouchEvent>(NativeActiveEventDispatchers.touchend, handler, capture);\n    },\n    onTouchMove: function createTouchmoveEventHandler(\n        handler: (ev: SyntheticTouchEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticTouchEvent> {\n        return createEventHandler<SyntheticTouchEvent>(NativeActiveEventDispatchers.touchmove, handler, capture);\n    },\n    onTouchStart: function createTouchstartEventHandler(\n        handler: (ev: SyntheticTouchEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticTouchEvent> {\n        return createEventHandler<SyntheticTouchEvent>(NativeActiveEventDispatchers.touchstart, handler, capture);\n    },\n    onWheel: function createWheelEventHandler(\n        handler: (ev: SyntheticWheelEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticWheelEvent> {\n        return createEventHandler<SyntheticWheelEvent>(NativeActiveEventDispatchers.wheel, handler, capture);\n    },\n};\n/* tslint:enable:max-line-length */\n","import { USER_AGENT, UserAgentFlags } from \"../common/user_agent\";\nimport { NOOP } from \"../common/noop\";\nimport { nextFrame } from \"../scheduler/scheduler\";\nimport { Context, ROOT_CONTEXT } from \"./context\";\nimport { VNodeFlags } from \"./flags\";\nimport { VNode } from \"./vnode\";\nimport { Component, getDOMInstanceFromComponent } from \"./component\";\nimport { renderVNode, syncVNode, removeVNode, augmentVNode } from \"./implementation\";\n\n/**\n * Root.\n */\nexport interface Root {\n    container: Element;\n    currentVNode: VNode<any> | null;\n    newVNode: VNode<any> | null;\n    newContext: Context | null;\n    domNode: Node | null;\n    invalidated: boolean;\n}\n\nconst roots = [] as Root[];\n\n/**\n * Find Root node in container.\n *\n * @param container DOM Node that contains root node.\n * @returns root node or undefined when root node doesn't exist.\n */\nexport function findRoot(container: Element): Root | undefined {\n    for (let i = 0; i < roots.length; i++) {\n        const r = roots[i];\n        if (r.container === container) {\n            return r;\n        }\n    }\n\n    return;\n}\n\n/**\n * Render VNode into container.\n *\n * @param root Root data.\n * @returns rendered Node.\n */\nfunction _render<T>(root: Root): T | undefined {\n    let result: Node | Component<any> | undefined;\n    const currentVNode = root.currentVNode;\n    const newVNode = root.newVNode;\n\n    if (newVNode) {\n        if (currentVNode) {\n            result = syncVNode(root.container, currentVNode, newVNode, root.newContext!);\n        } else {\n            result = renderVNode(root.container, null, newVNode!, root.newContext!);\n            /**\n             * Fix for the Mouse Event bubbling on iOS devices.\n             *\n             * http://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\n             */\n            if (USER_AGENT & UserAgentFlags.iOS) {\n                (root.container as HTMLElement).onclick = NOOP;\n            }\n        }\n        root.currentVNode = newVNode;\n        root.domNode = (newVNode._flags & VNodeFlags.ComponentClass) ?\n            getDOMInstanceFromComponent(result as Component<any>) :\n            result as Node;\n    } else if (currentVNode) {\n        removeVNode(root.container, currentVNode);\n        const last = roots.pop();\n        if (last !== root && roots.length) {\n            roots[roots.indexOf(root)] = last!;\n        }\n    }\n\n    root.newVNode = null;\n    root.newContext = null;\n    root.invalidated = false;\n\n    return result as T | undefined;\n}\n\n/**\n * Render VNode into container.\n *\n * @param node VNode to render.\n * @param container DOM Node that will contain rendered node.\n * @param context root context, all root contexts should be created from the `ROOT_CONTEXT` instance.\n * @returns rendered Node.\n */\nexport function render<T extends Node>(\n    node: VNode<any> | null,\n    container: Element,\n    context: Context = ROOT_CONTEXT,\n): T | undefined {\n    if (__IVI_DEV__) {\n        if (container === document.body) {\n            throw new Error(\"Rendering in the <body> aren't allowed, create an element inside body that will contain \" +\n                \"your application.\");\n        }\n    }\n\n    let root = findRoot(container);\n    if (root) {\n        root.newVNode = node;\n        root.newContext = context;\n    } else {\n        root = {\n            container: container,\n            currentVNode: null,\n            newVNode: node,\n            newContext: context,\n            domNode: null,\n            invalidated: false,\n        } as Root;\n        roots.push(root);\n    }\n\n    return _render<T>(root);\n}\n\n/**\n * Render VNode into container on the next frame.\n *\n * @param node VNode to render.\n * @param container DOM Node that will contain rendered node.\n * @param context root context, all root contexts should be created from the `ROOT_CONTEXT` instance.\n * @returns rendered Node.\n */\nexport function renderNextFrame(\n    node: VNode<any> | null,\n    container: Element,\n    context: Context = ROOT_CONTEXT,\n): void {\n    if (__IVI_DEV__) {\n        if (container === document.body) {\n            throw new Error(\"Rendering in the <body> aren't allowed, create an element inside body that will contain \" +\n                \"your application.\");\n        }\n    }\n\n    let root = findRoot(container);\n    if (root) {\n        root.newVNode = node;\n        root.newContext = context;\n    } else {\n        root = {\n            container: container,\n            currentVNode: null,\n            newVNode: node,\n            newContext: context,\n            domNode: null,\n            invalidated: false,\n        } as Root;\n        roots.push(root);\n    }\n    if (!root.invalidated) {\n        nextFrame().write(function () {\n            if (root!.invalidated) {\n                _render(root!);\n            }\n        });\n    }\n}\n\n/**\n * Augment existing DOM tree with a Virtual DOM tree.\n *\n * Augmentation is separated from `render` function to reduce code size when web application doesn't use augmentation.\n * Optimizing javascript compiler should remove all code associated with augmentation when it isn't used.\n *\n * @param node Root VNode.\n * @param container Container DOM Node.\n * @param context root context, all root contexts should be created from the `ROOT_CONTEXT` instance.\n */\nexport function augment(node: VNode<any> | null, container: Element, context: Context = ROOT_CONTEXT): void {\n    if (__IVI_DEV__) {\n        if (container === document.body) {\n            throw new Error(\"Rendering in the <body> aren't allowed, create an element inside body that will contain \" +\n                \"your application.\");\n        }\n\n        if (findRoot(container)) {\n            throw new Error(\"Failed to augment, container is associated with a Virtual DOM.\");\n        }\n    }\n\n    if (node) {\n        augmentVNode(container, container.firstChild!, node, context);\n        roots.push({\n            container: container,\n            currentVNode: node,\n            newVNode: null,\n            newContext: null,\n            domNode: container.firstChild!,\n            invalidated: false,\n        });\n        /**\n         * Fix for the Mouse Event bubbling on iOS devices.\n         *\n         * http://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\n         */\n        if (USER_AGENT & UserAgentFlags.iOS) {\n            (container as HTMLElement).onclick = NOOP;\n        }\n    }\n}\n","import { render, $c } from \"ivi\";\nimport { AppLocation, AppState } from \"./state\";\nimport { App } from \"./ui/app\";\n\nexport type RouteHandler = (params?: string[]) => void;\n\nexport class Route {\n    path: RegExp | string;\n    handler: RouteHandler;\n\n    constructor(path: RegExp | string, handler: RouteHandler) {\n        this.path = path;\n        this.handler = handler;\n    }\n}\n\nfunction routeDispatch(routes: Route[], path: string): boolean {\n    if (path !== \"\" && path[0] === \"#\") {\n        if (path[1] === \"!\") {\n            path = path.substr(2);\n        } else {\n            return false;\n        }\n    }\n\n    for (let i = 0; i < routes.length; i++) {\n        const r = routes[i];\n        const p = r.path;\n        if (typeof p === \"string\") {\n            if (path === p) {\n                r.handler();\n                return true;\n            }\n        } else {\n            const match = path.match(p);\n            if (match) {\n                if (match.length > 1) {\n                    r.handler(match.slice(1));\n                } else {\n                    r.handler();\n                }\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\nexport function initRouter(routes: Route[], defaultPath = \"\", notFound?: () => void): void {\n    const l = location;\n    let prevHash = decodeURIComponent(l.hash);\n    if (prevHash === \"\") {\n        l.hash = prevHash = \"#!\" + defaultPath;\n    }\n\n    window.addEventListener(\"hashchange\", () => {\n        const newHash = decodeURIComponent(l.hash);\n        if (newHash === \"\") {\n            l.hash = prevHash = \"#!\" + defaultPath;\n        }\n        if (prevHash !== newHash) {\n            prevHash = newHash;\n            if (!routeDispatch(routes, newHash)) {\n                if (notFound !== undefined) {\n                    notFound();\n                }\n            }\n        }\n    });\n\n    if (!routeDispatch(routes, prevHash)) {\n        if (notFound !== undefined) {\n            notFound();\n        }\n    }\n}\n\nconst container = document.getElementById(\"todoapp\") !;\nconst state = new AppState(update);\n\ninitRouter([\n    new Route(\"/completed\", () => {\n        state.setLocation(AppLocation.ShowCompleted);\n    }),\n    new Route(\"/active\", () => {\n        state.setLocation(AppLocation.ShowActive);\n    }),\n    new Route(\"/\", () => {\n        state.setLocation(AppLocation.ShowAll);\n    }),\n]);\n\nfunction update() {\n    render($c(App, state), container!);\n}\nupdate();\n","import { scheduleMicrotask } from \"ivi\";\n\nexport const enum AppLocation {\n    ShowAll = 0,\n    ShowActive = 1,\n    ShowCompleted = 2,\n};\n\nexport class Entry {\n    id: string;\n    title: string;\n    completed: boolean;\n\n    constructor(id: number, title: string, completed: boolean) {\n        this.id = id.toString();\n        this.title = title;\n        this.completed = completed;\n    }\n}\n\nexport class EntryEdit {\n    editing: Entry | undefined = undefined;\n    title = \"\";\n}\n\n\nexport class AppState {\n    location = AppLocation.ShowAll;\n    entries: Entry[] = [];\n    onChange: () => void;\n\n    _nextEntryId = 0;\n    _dirty = false;\n\n    constructor(onChange: () => void) {\n        this.onChange = onChange;\n    }\n\n    invalidate() {\n        if (!this._dirty) {\n            this._dirty = true;\n            scheduleMicrotask(() => {\n                this.onChange();\n                this._dirty = false;\n            });\n        }\n    }\n\n    setLocation(v: AppLocation): void {\n        this.location = v;\n        this.invalidate();\n    }\n\n    addEntry(title: string): void {\n        title = title.trim();\n        if (title !== \"\") {\n            this.entries.push(new Entry(this._nextEntryId++, title, false));\n            this.invalidate();\n        }\n    }\n\n    removeEntry(entry: Entry): void {\n        const items = this.entries;\n\n        for (let i = 0; i < items.length; i++) {\n            const item = items[i];\n            if (item === entry) {\n                items.splice(i, 1);\n                this.invalidate();\n                return;\n            }\n        }\n    }\n\n    updateTitle(entry: Entry, newTitle: string): void {\n        newTitle = newTitle.trim();\n        if (newTitle === \"\") {\n            this.removeEntry(entry);\n        } else {\n            entry.title = newTitle;\n        }\n        this.invalidate();\n    }\n\n    toggleAll(checked: boolean): void {\n        this.entries.forEach((e) => {\n            e.completed = checked;\n        });\n        this.invalidate();\n    }\n\n    toggleEntry(entry: Entry): void {\n        entry.completed = !entry.completed;\n        this.invalidate();\n    }\n\n    clearCompleted(): void {\n        const items = this.entries;\n        const newItems: Entry[] = [];\n        for (let i = 0; i < items.length; i++) {\n            const item = items[i];\n            if (!item.completed) {\n                newItems.push(item);\n            }\n        }\n        this.entries = newItems;\n        this.invalidate();\n    }\n}\n","/**\n * Entry point for `ivi` package.\n */\n\n/**\n * Global variables.\n */\ndeclare global {\n    /* tslint:disable:no-unused-variable */\n    /**\n     * Global variable that enables Development Mode.\n     *\n     * @define {boolean}\n     */\n    const __IVI_DEV__: boolean;\n    /**\n     * Global variable that indicates that code is executed in a browser environment.\n     */\n    const __IVI_BROWSER__: boolean;\n    /* tslint:enable:no-unused-variable */\n}\n\n/**\n * Common:\n */\nexport { DevModeFlags, DEV_MODE, setDevModeFlags, printError } from \"./common/dev_mode\";\nexport { FeatureFlags, FEATURES } from \"./common/feature_detection\";\nexport { UserAgentFlags, USER_AGENT } from \"./common/user_agent\";\nexport { nodeDepth, SVG_NAMESPACE, XLINK_NAMESPACE, XML_NAMESPACE } from \"./common/dom\";\nexport { NOOP } from \"./common/noop\";\nexport { isPropsNotIdentical, isPropsNotShallowEqual } from \"./common/equality\";\nexport {\n    setInitialNestingState, pushNestingState, restoreNestingState, nestingStateAncestorFlags, nestingStateParentTagName,\n    checkNestingViolation, AncestorFlags,\n} from \"./common/html_nesting_rules\";\n\n/**\n * Scheduler:\n */\nexport {\n    FrameTasksGroup, clock, scheduleMicrotask, scheduleMacrotask, currentFrame, nextFrame\n} from \"./scheduler/scheduler\";\n\n/**\n * Events:\n */\nexport { NativeEventDispatcherFlags, EventHandlerFlags, SyntheticEventFlags } from \"./events/flags\";\nexport {\n    EventDispatcher, EventDispatcherSubscriptionFlags, EventDispatcherSubscription,\n} from \"./events/event_dispatcher\";\nexport { NativeEventDispatcher } from \"./events/native_event_dispatcher\";\nexport { EventHandler, EventHandlerList } from \"./events/event_handler\";\nexport {\n    NativeEventDispatchersList, NativeActiveEventDispatchersList, NativeEventDispatchers, NativeActiveEventDispatchers,\n    Events, ActiveEvents, createEventHandler,\n} from \"./events/events\";\nexport {\n    SyntheticEvent, SyntheticUIEvent, SyntheticDragEvent, SyntheticClipboardEvent,\n    SyntheticAriaRequestEvent, SyntheticErrorEvent, SyntheticEventClass, SyntheticFocusEvent, SyntheticKeyboardEvent,\n    SyntheticMediaEncryptedEvent, SyntheticMediaStreamErrorEvent, SyntheticMouseEvent, SyntheticPointerEvent,\n    SyntheticProgressEvent, SyntheticTouchEvent, SyntheticWheelEvent,\n} from \"./events/synthetic_event\";\nexport { DispatchTarget, accumulateDispatchTargetsFromElement, accumulateDispatchTargets } from \"./events/traverse_dom\";\nexport { dispatchEvent } from \"./events/dispatch_event\";\nexport { getEventTarget, getEventOptions } from \"./events/utils\";\n\n/**\n * Virtual DOM:\n */\nexport { Context, ROOT_CONTEXT } from \"./vdom/context\";\nexport {\n    ComponentClass, ComponentFunction, Component, getDOMInstanceFromComponent, findComponentByDebugId,\n    checkPropsIdentity, checkPropsShallowEquality,\n} from \"./vdom/component\";\nexport { VNodeFlags, ElementDescriptorFlags } from \"./vdom/flags\";\nexport {\n    VNode, isTextNode, isElementNode, isSVGNode, isComponentNode, getDOMInstanceFromVNode, getComponentRef,\n} from \"./vdom/vnode\";\nexport {\n    ElementDescriptor, createElementDescriptor, createSVGElementDescriptor, createInputElementDescriptor,\n    createMediaElementDescriptor,\n} from \"./vdom/element_descriptor\";\nexport { VNodeBuilder, cloneVNode, normalizeVNodes, $t, $h, $s, $c, $i, $m, $e } from \"./vdom/vnode_builder\";\nexport { Root, findRoot, render, renderNextFrame, augment } from \"./vdom/root\";\nexport { STACK_TRACE } from \"./vdom/stack_trace\";\n\n/**\n * Dev Mode exported functions:\n */\nimport { GLOBAL_EXPORT } from \"./common/dev_mode\";\nimport { findComponentByDebugId } from \"./vdom/component\";\n\nif (__IVI_DEV__) {\n    console.info(\"IVI: DEVELOPMENT MODE\");\n\n    if (__IVI_BROWSER__) {\n        if (document) {\n            document.title += \" [DEV MODE]\";\n        }\n\n        const devModeExport = {\n            \"findComponentByDebugId\": findComponentByDebugId,\n            \"$\": function (v: any) {\n                return findComponentByDebugId(Number(v));\n            },\n        };\n\n        if (GLOBAL_EXPORT && !window.hasOwnProperty(GLOBAL_EXPORT)) {\n            (window as any)[GLOBAL_EXPORT] = devModeExport;\n            console.info(`DevMode API is exported to: ${GLOBAL_EXPORT}`);\n        } else if (!window.hasOwnProperty(\"ivi\")) {\n            (window as any)[\"ivi\"] = devModeExport;\n            console.info(`DevMode API is exported to: ivi`);\n        } else {\n            console.info(`DevMode API is not exported`);\n        }\n    }\n}\n","import { Component, Events, $h, $i } from \"ivi\";\n\nexport class Header extends Component<{\n    addEntry: (text: string) => void,\n}> {\n    private inputValue: string = \"\";\n\n    private onKeyDown = Events.onKeyDown((ev) => {\n        if (ev.keyCode === 13) {\n            this.props.addEntry(this.inputValue);\n            this.inputValue = \"\";\n            this.invalidate();\n        }\n    });\n\n    private onInput = Events.onInput((ev) => {\n        this.inputValue = (ev.target as HTMLInputElement).value;\n        this.invalidate();\n    });\n\n    render() {\n        return $h(\"header\")\n            .children([\n                $h(\"h1\").children(\"todos\"),\n                $i(\"text\")\n                    .props({\n                        \"id\": \"new-todo\",\n                        \"placeholder\": \"What needs to be done\",\n                        \"autofocus\": true,\n                    })\n                    .events({\n                        keyDown: this.onKeyDown,\n                        input: this.onInput,\n                    })\n                    .value(this.inputValue),\n            ]);\n    }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\nexport const __assign = Object.assign || function (t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n};\r\n\r\nexport const __decorate = function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\n\r\nexport const __param = function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\n\r\nexport const __metadata = function (metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n};\r\n\r\nexport const __awaiter = function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator.throw(value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments)).next());\r\n    });\r\n};","import { Component, Events, $h } from \"ivi\";\nimport { AppLocation } from \"../state\";\n\nexport class Footer extends Component<{\n    location: AppLocation,\n    activeEntries: number,\n    completedEntries: number,\n    onClearCompleted: () => void,\n}> {\n    onClickClearCompleted = Events.onClick((ev) => {\n        ev.preventDefault();\n        this.props.onClearCompleted();\n    });\n\n    render() {\n        const { location, activeEntries, completedEntries } = this.props;\n\n        return $h(\"footer\").props({ id: \"footer\" })\n            .children([\n                $h(\"ul\").props({ \"id\": \"filters\" }).children([\n                    $h(\"li\").children($h(\"a\", location === AppLocation.ShowAll ? \"selected\" : undefined)\n                        .props({ \"href\": \"#!/\" }).children(\"All\")),\n                    \" \",\n                    $h(\"li\").children($h(\"a\", location === AppLocation.ShowActive ? \"selected\" : undefined)\n                        .props({ \"href\": \"#!/active\" }).children(\"Active\")),\n                    \" \",\n                    $h(\"li\").children($h(\"a\", location === AppLocation.ShowCompleted ? \"selected\" : undefined)\n                        .props({ \"href\": \"#!/completed\" }).children(\"Completed\")),\n                ]),\n                $h(\"span\").props({ \"id\": \"todo-count\" }).children([\n                    $h(\"strong\").children(activeEntries),\n                    (activeEntries > 1) ? \" items left\" : \" item left\",\n                ]),\n                (completedEntries > 0) ?\n                    $h(\"button\")\n                        .props({ \"id\": \"clear-completed\" })\n                        .events({ click: this.onClickClearCompleted })\n                        .children(`Clear completed (${completedEntries})`) :\n                    null,\n            ]);\n    }\n}\n","import { Component, Events, $h, $i, $c } from \"ivi\";\nimport { AppState, Entry, AppLocation } from \"../state\";\n\nclass EntryView extends Component<{\n    appState: AppState,\n    entry: Entry,\n}> {\n    private editTitle: string = \"\";\n    private editing: boolean = false;\n\n    private onClickDestroy = Events.onClick((ev) => {\n        this.props.appState.removeEntry(this.props.entry);\n        ev.preventDefault();\n    });\n\n    private onChangeToggle = Events.onChange((ev) => {\n        this.props.appState.toggleEntry(this.props.entry);\n        ev.preventDefault();\n    });\n\n    private onLabelDoubleClick = Events.onDoubleClick((ev) => {\n        this.editTitle = this.props.entry.title;\n        this.editing = true;\n        this.invalidate();\n    });\n\n    private onTitleChange = Events.onInput((ev) => {\n        this.editTitle = (ev.target as HTMLInputElement).value;\n    });\n\n    private onBlur = Events.onBlur((ev) => {\n        this.editTitle = \"\";\n        this.editing = false;\n        this.invalidate();\n    });\n\n    private onKeyDown = Events.onKeyDown((ev) => {\n        if (ev.keyCode === 13) {\n            this.props.appState.updateTitle(this.props.entry, this.editTitle);\n            this.editTitle = \"\";\n            this.editing = false;\n            this.invalidate();\n        } else if (ev.keyCode === 27) {\n            this.editTitle = \"\";\n            this.editing = false;\n            this.invalidate();\n        }\n    });\n\n    render() {\n        const { entry } = this.props;\n        const view = $h(\"div\", \"view\").children([\n            $i(\"checkbox\", \"toggle\").events({ change: this.onChangeToggle }).checked(entry.completed),\n            $h(\"label\").events({ doubleClick: this.onLabelDoubleClick }).children(entry.title),\n            $h(\"button\", \"destroy\").events({ click: this.onClickDestroy }),\n        ]);\n        let className;\n        let children;\n        if (this.editing) {\n            className = entry.completed ? \"editing completed\" : \"editing\";\n            const input = $i(\"text\", \"edit\")\n                .events({\n                    input: this.onTitleChange,\n                    blur: this.onBlur,\n                    keyDown: this.onKeyDown,\n                })\n                .ref((n) => {\n                    if (n) {\n                        (n as HTMLElement).focus();\n                    }\n                })\n                .value(this.editTitle);\n            children = [view, input];\n        } else {\n            if (entry.completed) {\n                className = \"completed\";\n            }\n            children = [view];\n        }\n\n        return $h(\"li\", className).children(children);\n    }\n}\n\nexport class EntryList extends Component<{\n    appState: AppState,\n    activeEntries: number,\n    completedEntries: number,\n    entries: Entry[],\n}> {\n    render() {\n        const { appState, activeEntries, completedEntries, entries } = this.props;\n\n        let children;\n        switch (appState.location) {\n            case AppLocation.ShowActive:\n                children = activeEntries === 0 ?\n                    null :\n                    entries.map((e) => !e.completed ? $c(EntryView, { appState: appState, entry: e }).key(e.id) : null);\n                break;\n            case AppLocation.ShowCompleted:\n                children = completedEntries === 0 ?\n                    null :\n                    entries.map((e) => e.completed ? $c(EntryView, { appState: appState, entry: e }).key(e.id) : null);\n                break;\n            default: // Location.ShowAll\n                children = entries.map((e) => $c(EntryView, { appState: appState, entry: e }).key(e.id));\n        }\n\n        return $h(\"ul\")\n            .props({ \"id\": \"todo-list\" })\n            .trackByKeyChildren(children);\n    }\n}\n","import { Component, Events, $h, $i, $c } from \"ivi\";\nimport { AppState, Entry } from \"../state\";\nimport { EntryList } from \"./entry_list\";\n\nexport class Main extends Component<{\n    appState: AppState,\n    activeEntries: number,\n    completedEntries: number,\n    entries: Entry[],\n}> {\n    private onChange = Events.onChange((ev) => {\n        ev.preventDefault();\n        this.props.appState.toggleAll(this.props.completedEntries !== this.props.entries.length);\n    });\n\n    render() {\n        return $h(\"section\").props({ \"id\": \"main\" })\n            .children([\n                $i(\"checkbox\")\n                    .props({ \"id\": \"toggle-all\" })\n                    .events({\n                        change: this.onChange,\n                    })\n                    .checked(this.props.completedEntries === this.props.entries.length),\n                $c(EntryList, {\n                    appState: this.props.appState,\n                    activeEntries: this.props.activeEntries,\n                    completedEntries: this.props.completedEntries,\n                    entries: this.props.entries,\n                }),\n            ]);\n    }\n}\n","import { Component, $h, $c } from \"ivi\";\nimport { AppState } from \"../state\";\nimport { Header } from \"./header\";\nimport { Footer } from \"./footer\";\nimport { Main } from \"./main\";\n\nexport class App extends Component<AppState> {\n    onAddEntry = (text: string) => {\n        this.props.addEntry(text);\n    };\n\n    onClearCompleted = () => {\n        this.props.clearCompleted();\n    };\n\n    render() {\n        const { entries } = this.props;\n        let completedEntries = 0;\n        entries.forEach((e) => {\n            if (e.completed) {\n                completedEntries++;\n            }\n        });\n        const activeEntries = entries.length - completedEntries;\n\n        return $h(\"section\")\n            .children((entries.length > 0) ?\n                [\n                    $c(Header, { addEntry: this.onAddEntry }),\n                    $c(Main, {\n                        appState: this.props,\n                        activeEntries: activeEntries,\n                        completedEntries: completedEntries,\n                        entries: entries,\n                    }),\n                    $c(Footer, {\n                        location: this.props.location,\n                        activeEntries: activeEntries,\n                        completedEntries: completedEntries,\n                        onClearCompleted: this.onClearCompleted,\n                    }),\n                ] :\n                [$c(Header, { addEntry: this.onAddEntry })]);\n    }\n}\n"]}