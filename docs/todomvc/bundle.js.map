{"version":3,"sources":["node_modules/ivi/src/common/feature_detection.ts"," [synthetic:util/global] "," [synthetic:es6/util/inherits] "," [synthetic:util/defineproperty] "," [synthetic:es6/symbol] "," [synthetic:es6/util/makeiterator] "," [synthetic:es6/util/arrayfromiterable] "," [synthetic:es6/util/arrayfromiterator] "," [synthetic:util/polyfill] "," [synthetic:es6/promise] "," [synthetic:util/owns] "," [synthetic:es6/object/assign] "," [synthetic:es6/array/fill] "," [synthetic:es6/weakmap] "," [synthetic:es6/map] "," [synthetic:es6/string/repeat] "," [synthetic:util/checkstringargs] ","node_modules/ivi/src/common/user_agent.ts","node_modules/ivi/src/common/dom.ts","node_modules/ivi/src/common/noop.ts","node_modules/ivi/src/scheduler/clock.ts","node_modules/ivi/src/scheduler/task.ts","node_modules/ivi/src/scheduler/microtask.ts","node_modules/ivi/src/common/visibility.ts","node_modules/ivi/src/scheduler/frame_tasks_group.ts","src/todomvc/ui/entry_list.ts","node_modules/ivi/src/scheduler/frame.ts","node_modules/ivi/src/scheduler/dom_reader.ts","node_modules/ivi/src/vdom/vnode.ts","node_modules/ivi/src/vdom/vnode_builder.ts","node_modules/ivi/src/scheduler/animation.ts","node_modules/ivi/src/vdom/implementation.ts","node_modules/ivi/src/vdom/component.ts","node_modules/ivi/src/vdom/context.ts","node_modules/ivi/src/vdom/sync_dom.ts","node_modules/ivi/src/events/utils.ts","node_modules/ivi/src/events/sync_events.ts","node_modules/ivi/src/events/event_dispatcher.ts","node_modules/ivi/src/events/dispatch_event.ts","node_modules/ivi/src/events/native_event_dispatcher.ts","node_modules/ivi/src/events/traverse_dom.ts","node_modules/ivi/src/events/synthetic_event.ts","node_modules/ivi/src/events/events.ts","node_modules/ivi/src/vdom/root.ts","src/todomvc/main.ts","src/todomvc/xs.ts","src/todomvc/state.ts","src/todomvc/ui/header.ts","node_modules/tslib/tslib.es6.js","src/todomvc/ui/footer.ts","src/todomvc/ui/main.ts","src/todomvc/ui/app.ts"],"names":["$jscomp.global","$jscomp.defineProperty","$jscomp.initSymbol","$jscomp.global.Symbol","$jscomp.Symbol","$jscomp.symbolCounter_","$jscomp.SYMBOL_PREFIX","$jscomp.global.Symbol.iterator","$jscomp.arrayIterator","$jscomp.initSymbolIterator","$jscomp.iteratorPrototype","$jscomp.polyfill","$jscomp.makeIterator","$jscomp.owns","FEATURES","opts","Object","defineProperty","get","window","addEventListener","e","SVGElement","prototype","KeyboardEvent","ua","navigator","userAgent","USER_AGENT","test","indexOf","getEventTarget$$module$$build$todomvc","getEventTarget","ev","target","correspondingUseElement","nodeType","parentNode","KEY_CODE_TO_KEY","getEventCharCode$$module$$build$todomvc","getEventCharCode","keyCode","charCode","setInnerHTML$$module$$build$todomvc","setInnerHTML","element","content","isSVG","innerHTML","innerHTMLSVGContainer","svg","document","createElement","firstChild","appendChild","NOOP$$module$$build$todomvc","NOOP","_clock","_pending$1","_tasks","TASK_MESSAGE","Math","random","handleWindowMessage","handleWindowMessage$$module$$build$todomvc","source","data","tasks","i","length","scheduleTask$$module$$build$todomvc","scheduleTask","task","postMessage","push","_pending","_microtasks","_microtaskNode","_microtaskToggle","microtaskObserver","MutationObserver","runMicrotasks","createTextNode","observe","characterData","runMicrotasksInPromise$$module$$build$todomvc","runMicrotasksInPromise","runMicrotasks$$module$$build$todomvc","requestMicrotaskExecution$$module$$build$todomvc","requestMicrotaskExecution","Promise","resolve","then","nodeValue","_visible","_isHidden","_visibilityObservers","handleVisibilityChange$$module$$build$todomvc","handleVisibilityChange","newVisible","_isHidden$$module$$build$todomvc","hidden","constructor","FrameTasksGroup","_flags","_componentTasks","_afterTasks","_readTasks","_writeTasks","write","read","after","_currentFrameReady","_currentFrame","nextFrame","_readers","getDOMInstanceFromVNode$$module$$build$todomvc","getDOMInstanceFromVNode","node","_instance","root","_children","VNodeBuilder","flags","tag","props","className","children","_tag","_key","_props","_className","_events","_style","_ref","VNodeBuilder$$module$$build$todomvc.prototype","?.prototype","key","style","events","Array","isArray","keyOffset","n","result","slice","_normalizeVNodes","$t","value","checked","ref","$t$$module$$build$todomvc","$h$$module$$build$todomvc","$h","tagName","undefined","$i$$module$$build$todomvc","$i","type","$c$$module$$build$todomvc","$c","c","render","_normalizeVNodes$$module$$build$todomvc","nodes","count","_pending$2","_nextFrame","_requestNextFrame$$module$$build$todomvc","_requestNextFrame","requestAnimationFrame","handleNextFrame","requestNextFrame$$module$$build$todomvc","requestNextFrame","handleNextFrame$$module$$build$todomvc","frame","_animatedComponents","reader","pop","componentGroups","componentGroup","j","_updateComponent","component","_animations","animation","nextFrame$$module$$build$todomvc","handleVisibilityChange$1$$module$$build$todomvc","visible","Component","context","owner","depth","_context","_parentContext","_parentDOMNode","invalidated","$jscomp.global.Object.defineProperties","invalidateComponent$$module$$build$todomvc","invalidateComponent","dirtyFlags","updateComponent","priority","group","Context","from","v","keys","l","k","ROOT_CONTEXT","syncClassName$$module$$build$todomvc","syncClassName","b","setAttribute","syncStyle$$module$$build$todomvc","syncStyle","a","matchCount","bValue","aValue","hasOwnProperty","setDOMProperty$$module$$build$todomvc","setDOMProperty","removeAttribute","charCodeAt","setAttributeNS","XML_NAMESPACE","XLINK_NAMESPACE","syncDOMProps$$module$$build$todomvc","syncDOMProps","EVENT_CAPTURE_PASSIVE_OPTIONS","EVENT_PASSIVE_OPTIONS","getEventOptions$$module$$build$todomvc","getEventOptions","syncEvents$$module$$build$todomvc","syncEvents","registerHandler","handler","dispatcher","unregisterHandler","aHandler","bHandler","_updateComponent$$module$$build$todomvc","syncFlags","oldRoot","componentUpdateContext","newRoot","componentClassRender","vNodeSyncOrReplace","vNodePropagateNewContext","_updateComponentFunction$$module$$build$todomvc","_updateComponentFunction","parent","instance","fn","vNodeAttach$$module$$build$todomvc","vNodeAttach","vnode","vNodeDetach$$module$$build$todomvc","vNodeDetach","vNodeDetachAll$$module$$build$todomvc","vNodeDetachAll","vnodes","vNodePropagateNewContext$$module$$build$todomvc","vNodeRemoveChild$$module$$build$todomvc","vNodeRemoveChild","removeChild","componentUpdateContext$$module$$build$todomvc","componentClassRender$$module$$build$todomvc","vNodeRender$$module$$build$todomvc","vNodeRender","child","createElementNS","SVG_NAMESPACE","textContent","childInstance","insertBefore","input","vNodeRenderInto$$module$$build$todomvc","vNodeRenderInto","container","refChild","vNodeEqualKeys$$module$$build$todomvc","vNodeEqualKeys","vNodeSyncOrReplace$$module$$build$todomvc","bParentFlags","aParentFlags","aStart","bStart","aEnd","bEnd","aStartNode","bStartNode","aEndNode","bEndNode","aNode","bNode","nextRef","nextPos","next","aLength","bLength","sources","fill","moved","pos","synced","keyIndex","positionKeyIndex","Map","set","p","il","u","newProps","newInstance","replaceChild","EventDispatcherSubscription","filter","_next","_prev","cancel","unsubscribe","unsubscribe$$module$$build$todomvc","sub","_nextSubscription","counter","deactivate","EventDispatcher","activate","subscribe","s","dispatchEventToLocalEventHandlers$$module$$build$todomvc","dispatchEventToLocalEventHandlers","dispatchTarget","event","matchFlags","currentTarget","handlers","NativeEventDispatcher","name","eventType","_dispatch","dispatchNativeEvent","bind","_deactivating","$jscomp.inherits","timeStamp","dispatchEventToSubscribers","tmp","matches","parentElement","bubble","preventDefault","removeEventListener","SyntheticEvent","_data","stopPropagation","stopImmediatePropagation","defaultPrevented","bubbles","cancelable","isTrusted","eventPhase","CAPTURING_PHASE","AT_TARGET","BUBBLING_PHASE","SyntheticUIEvent","detail","view","SyntheticKeyboardEvent","getModifierState","keyArg","altKey","char","ctrlKey","String","fromCharCode","locale","location","metaKey","repeat","shiftKey","which","code","DOM_KEY_LOCATION_JOYSTICK","DOM_KEY_LOCATION_LEFT","DOM_KEY_LOCATION_MOBILE","DOM_KEY_LOCATION_NUMPAD","DOM_KEY_LOCATION_RIGHT","DOM_KEY_LOCATION_STANDARD","SyntheticMouseEvent","button","buttons","clientX","clientY","fromElement","layerX","layerY","movementX","movementY","offsetX","offsetY","pageX","pageY","relatedTarget","screenX","screenY","toElement","x","y","SyntheticFocusEvent","createEventHandler$$module$$build$todomvc","createEventHandler","blur","change","click","dblclick","keydown","ROOTS","findRoot$$module$$build$todomvc","findRoot","r","renderNextFrame$$module$$build$todomvc","renderNextFrame","App","newVNode","newContext","currentVNode","currentContext","domNode","onclick","last","pending","update$1","_update$$module$$build$todomvc","_update","createAction$$module$$build$todomvc","createAction","payload","Entry","id","title","toString","completed","state","entries","nextEntryId","setLocation","addEntry","trim","removeEntry","entry","items","item","splice","updateTitle","newTitle","toggleAll","forEach","toggleEntry","clearCompleted","newItems","Header","$jscomp.arrayFromIterable","arguments","inputValue","onKeyDown","NativeEventDispatchers$$module$$build$todomvc.keydown","invalidate","onInput","NativeEventDispatchers$$module$$build$todomvc.input","keyDown","Footer","onClickClearCompleted","onClick","NativeEventDispatchers$$module$$build$todomvc.click","activeEntries","completedEntries","EntryView","editTitle","editing","onClickDestroy","onChangeToggle","onChange","NativeEventDispatchers$$module$$build$todomvc.change","onLabelDoubleClick","onDoubleClick","NativeEventDispatchers$$module$$build$todomvc.dblclick","onTitleChange","onBlur","NativeEventDispatchers$$module$$build$todomvc.blur","doubleClick","focus","EntryList","map","Main","Route","path","routeDispatch$$module$$build$todomvc","routeDispatch","routes","substr","match","getElementById","initRouter$$module$$build$todomvc","defaultPath","notFound","prevHash","decodeURIComponent","hash","newHash","update","update$$module$$build$todomvc"],"mappings":"A,yBA6CA,IAAA,CAAA,CCFAA,EAb2B,WAAlB,EAAC,MAAO,OAAR,EAAiC,MAAjC,GAa0B,IAb1B,CAa0B,IAb1B,CAEe,WAAlB,EAAC,MAAO,OAAR,EAA2C,IAA3C,EAAiC,MAAjC,CAAmD,MAAnD,CAW6B,ICShB,SAAA,EAAQ,CAAC,CAAD,CAAY,CAAZ,CAAwB,CAEjD,QAAS,EAAQ,EAAG,EACpB,CAAA,UAAA,CAAqB,CAAA,UACrB,EAAA,UAAA,CAAsB,IAAI,CAExB,EAAA,UAAA,YAAA,CAAkC,CAEpC,KAAK,IAAI,CAAT,GAAc,EAAd,CACE,GAAI,MAAA,iBAAJ,CAA6B,CAC3B,IAAI,EAAa,MAAA,yBAAA,CAAgC,CAAhC,CAA4C,CAA5C,CACb,EAAJ,EACE,MAAA,eAAA,CAAsB,CAAtB,CAAiC,CAAjC,CAAoC,CAApC,CAHyB,CAA7B,IAOE,EAAA,CAAU,CAAV,CAAA,CAAe,CAAA,CAAW,CAAX,CAhB8B;AChBnD,IAAAC,GACsC,UAAlC,EAAA,MAAO,OAAA,iBAAP,CACA,MAAA,eADA,CAEA,QAAQ,CAAC,CAAD,CAAS,CAAT,CAAmB,CAAnB,CAA+B,CAErC,GAAI,CAAA,IAAJ,EAAsB,CAAA,IAAtB,CACE,KAAM,KAAI,SAAJ,CAAc,2CAAd,CAAN,CAEE,CAAJ,EAAc,KAAA,UAAd,EAAiC,CAAjC,EAA2C,MAAA,UAA3C,GACA,CAAA,CAAO,CAAP,CADA,CACmB,CAAA,MADnB,CALqC,CCZtB,SAAA,GAAQ,EAAG,CAE9BC,EAAA,CAAqB,QAAQ,EAAG,EAE3BC,EAAA,OAAL,GACEA,CAAA,OADF,CAC0BC,EAD1B,CAJ8B,CAWhC,IAAAC,GAAyB,CASR,SAAA,GAAQ,CAAC,CAAD,CAAkB,CACzC,MA5BsBC,gBA4BtB,EAC6B,CAD7B,EACgD,EADhD,EACuDD,EAAA,EAFd;AAWd,QAAA,GAAQ,EAAG,CACtCH,EAAA,EACA,KAAI,EAAiBK,CAAA,OAAA,SAChB,EAAL,GACE,CADF,CACmBA,CAAA,OAAA,SADnB,CAEMJ,CAAA,OAAA,CAAsB,UAAtB,CAFN,CAK8C,WAA9C,EAAI,MAAO,MAAA,UAAA,CAAgB,CAAhB,CAAX,EACEF,EAAA,CACI,KAAA,UADJ,CACqB,CADrB,CACqC,CAC/B,aAAc,CAAA,CADiB,CAE/B,SAAU,CAAA,CAFqB,CAO/B,MAAO,QAAQ,EAAG,CAChB,MAAOO,GAAA,CAAsB,IAAtB,CADS,CAPa,CADrC,CAeFC,GAAA,CAA6B,QAAQ,EAAG,EAxBF,CAkChB,QAAA,GAAQ,CAAC,CAAD,CAAQ,CACtC,IAAI,EAAQ,CACZ,OAAOC,GAAA,CAA0B,QAAQ,EAAG,CAC1C,MAAI,EAAJ,CAAY,CAAA,OAAZ,CACS,CACL,KAAM,CAAA,CADD,CAEL,MAAO,CAAA,CAAM,CAAA,EAAN,CAFF,CADT,CAMS,CAAC,KAAM,CAAA,CAAP,CAPiC,CAArC,CAF+B,CA0BZ,QAAA,GAAQ,CAAC,CAAD,CAAO,CACzCD,EAAA,EAEI,EAAA,CAAW,CAAC,KAAM,CAAP,CAKf,EAAA,CAASF,CAAA,OAAA,SAAT,CAAA,CAA2C,QAAQ,EAAG,CAAE,MAAO,KAAT,CACtD,OAAyC,EATA,CCxFpB,QAAA,EAAQ,CAAC,CAAD,CAAW,CACxCE,EAAA,EAGA,KAAI,EAAqC,CAAD,CAAW,MAAA,SAAX,CACxC,OAAO,EAAA,CAAmB,CAAA,KAAA,CAAsB,CAAtB,CAAnB,CACHD,EAAA,CAA6C,CAA7C,CANoC;ACDd,QAAA,GAAQ,CAAC,CAAD,CAAW,CAC7C,GAAI,EAAA,CAAA,WAAoB,MAApB,CAAJ,CAAA,CAGS,CAAA,CAAA,CAAA,CAAA,CAAA,CCCT,KAFA,IAAI,CAAJ,CACI,EAAM,EACV,CAAQ,CAAA,CAAC,CAAD,CAAK,CAAA,KAAA,EAAL,MAAR,CAAA,CACE,CAAA,KAAA,CAAS,CAAA,MAAT,CAEF,EAAA,CAAO,CDPP,CAAA,MAAA,EAD6C,CEA5B,QAAA,EAAQ,CAAC,CAAD,CAAS,CAAT,CAAqC,CAC9D,GAAK,CAAL,CAAA,CACA,IAAI,EAAMR,CACN,EAAA,CAAQ,CAAA,MAAA,CAAa,GAAb,CACZ,KAAK,IAAI,EAAI,CAAb,CAAgB,CAAhB,CAAoB,CAAA,OAApB,CAAmC,CAAnC,CAAsC,CAAA,EAAtC,CAA2C,CACzC,IAAI,EAAM,CAAA,CAAM,CAAN,CACJ,EAAN,GAAa,EAAb,GAAmB,CAAA,CAAI,CAAJ,CAAnB,CAA8B,EAA9B,CACA,EAAA,CAAM,CAAA,CAAI,CAAJ,CAHmC,CAKvC,CAAA,CAAW,CAAA,CAAM,CAAA,OAAN,CAAqB,CAArB,CACX,EAAA,CAAO,CAAA,CAAI,CAAJ,CACP,EAAA,CAAO,CAAA,CAAS,CAAT,CACP,EAAJ,EAAY,CAAZ,EAA4B,IAA5B,EAAoB,CAApB,EACAC,EAAA,CACI,CADJ,CACS,CADT,CACmB,CAAC,aAAc,CAAA,CAAf,CAAqB,SAAU,CAAA,CAA/B,CAAqC,MAAO,CAA5C,CADnB,CAZA,CAD8D;ACQhEU,CAAA,CAAiB,SAAjB,CAA4B,QAAQ,CAAC,CAAD,CAAgB,CAkI5B,QAAA,EAAQ,CAAC,CAAD,CAAW,CAEvC,IAAA,GAAA,CArBS,CA4BT,KAAA,GAAA,CAAe,IAAA,EAMf,KAAA,EAAA,CAA2B,EAE3B,KAAI,EAAmB,IAAA,GAAA,EACvB,IAAI,CACF,CAAA,CAAS,CAAA,QAAT,CAAmC,CAAA,OAAnC,CADE,CAEF,MAAO,CAAP,CAAU,CACV,CAAA,OAAA,CAAwB,CAAxB,CADU,CApB2B,CApHzC,QAAS,EAAa,EAAG,CAQvB,IAAA,EAAA,CAAc,IARS,CATzB,GAAI,CAAJ,CACE,MAAO,EAgCT,EAAA,UAAA,GAAA,CAAuC,QAAQ,CAAC,CAAD,CAAI,CAC9B,IAAnB,EAAI,IAAA,EAAJ,GAEE,IAAA,EACA,CADc,EACd,CAAA,IAAA,GAAA,EAHF,CAKA,KAAA,EAAA,KAAA,CAAiB,CAAjB,CANiD,CAcnD,EAAA,UAAA,GAAA,CAA6C,QAAQ,EAAG,CACtD,IAAI,EAAO,IACX,KAAA,GAAA,CAA0B,QAAQ,EAAG,CAAE,CAAA,GAAA,EAAF,CAArC,CAFsD,CAO1C,KAAI,EAAmBX,CAAA,WASrC,EAAA,UAAA,GAAA,CAA+C,QAAQ,CAAC,CAAD,CAAI,CACzD,CAAA,CAAiB,CAAjB,CAAoB,CAApB,CADyD,CAS3D,EAAA,UAAA,GAAA,CAAwC,QAAQ,EAAG,CACjD,IAAA,CAAO,IAAA,EAAP,EAAsB,IAAA,EAAA,OAAtB,CAAA,CAA0C,CACxC,IAAI,EAAiB,IAAA,EAGrB,KAAA,EAAA,CAAc,EACd,KAAK,IAAI,EAAI,CAAb,CAAgB,CAAhB,CAAoB,CAAA,OAApB,CAA2C,EAAE,CAA7C,CAAgD,CAC9C,IAAI,EAAI,CAAA,CAAe,CAAf,CACR,QAAO,CAAA,CAAe,CAAf,CACP;GAAI,CACF,CAAA,EADE,CAEF,MAAO,CAAP,CAAc,CACd,IAAA,GAAA,CAAiB,CAAjB,CADc,CAL8B,CALR,CAiB1C,IAAA,EAAA,CAAc,IAlBmC,CAyBnD,EAAA,UAAA,GAAA,CAAsC,QAAQ,CAAC,CAAD,CAAY,CACxD,IAAA,GAAA,CAA0B,QAAQ,EAAG,CAAE,KAAM,EAAN,CAAF,CAArC,CADwD,CAiE1D,EAAA,UAAA,GAAA,CAAoD,QAAQ,EAAG,CAQ7D,QAAS,EAAa,CAAC,CAAD,CAAS,CAC7B,MAAO,SAAQ,CAAC,CAAD,CAAI,CACZ,CAAL,GACE,CACA,CADgB,CAAA,CAChB,CAAA,CAAA,KAAA,CAAY,CAAZ,CAAyB,CAAzB,CAFF,CADiB,CADU,CAP/B,IAAI,EAAc,IAAlB,CACI,EAAgB,CAAA,CAcpB,OAAO,CACL,QAAS,CAAA,CAAc,IAAA,GAAd,CADJ,CAEL,OAAQ,CAAA,CAAc,IAAA,GAAd,CAFH,CAhBsD,CA2B/D,EAAA,UAAA,GAAA,CAAuC,QAAQ,CAAC,CAAD,CAAQ,CACrD,GAAI,CAAJ,GAAc,IAAd,CACE,IAAA,GAAA,CAAa,IAAI,SAAJ,CAAc,oCAAd,CAAb,CADF,KAEO,IAAI,CAAJ,WAAqB,EAArB,CACL,IAAA,GAAA,CAA2D,CAA3D,CADK,KAAA,CAEI,IAAA,CAiCY,EAAA,CACvB,OAAQ,MAlCY,EAkCpB,EACE,KAAK,QAAL,CACE,CAAA,CAAgB,IAAhB,EApCgB,CAoChB,OAAA,CACF,MAAK,UAAL,CACE,CAAA,CAAO,CAAA,CAAP,OAAA,CACF,SACE,CAAA,CAAO,CAAA,CANX,CAlCW,CAAJ,CACL,IAAA,GAAA,CAAqD,CAArD,CADK,CAGL,IAAA,GAAA,CAAc,CAAd,CALK,CAH8C,CAiBvD;CAAA,UAAA,GAAA,CAAoD,QAAQ,CAAC,CAAD,CAAM,CAChE,IAAI,EAAa,IAAA,EAEjB,IAAI,CACF,CAAA,CAAa,CAAA,KADX,CAEF,MAAO,CAAP,CAAc,CACd,IAAA,GAAA,CAAa,CAAb,CACA,OAFc,CAIS,UAAzB,EAAI,MAAO,EAAX,CACE,IAAA,GAAA,CAA2B,CAA3B,CAAiE,CAAjE,CADF,CAGE,IAAA,GAAA,CAAc,CAAd,CAZ8D,CAsClE,EAAA,UAAA,GAAA,CAAoC,QAAQ,CAAC,CAAD,CAAS,CACnD,IAAA,GAAA,CArIU,CAqIV,CAAoC,CAApC,CADmD,CAUrD,EAAA,UAAA,GAAA,CAAqC,QAAQ,CAAC,CAAD,CAAQ,CACnD,IAAA,GAAA,CAlJW,CAkJX,CAAqC,CAArC,CADmD,CAWrD,EAAA,UAAA,GAAA,CAAoC,QAAQ,CAAC,CAAD,CAAe,CAAf,CAA8B,CACxE,GAhKS,CAgKT,EAAI,IAAA,GAAJ,CACE,KAAU,MAAJ,CACF,gBADE,CACiB,CADjB,CACgC,IADhC,CACuC,CADvC,CAEF,qCAFE,CAEsC,IAAA,GAFtC,CAAN,CAIF,IAAA,GAAA,CAAc,CACd,KAAA,GAAA,CAAe,CACf,KAAA,GAAA,EARwE,CAW1E,EAAA,UAAA,GAAA,CAAuD,QAAQ,EAAG,CAChE,GAAgC,IAAhC,EAAI,IAAA,EAAJ,CAAsC,CAIpC,IAFA,IAA+B,EAAY,IAAA,EAA3C,CAES,EAAI,CAAb,CAAgB,CAAhB,CAAoB,CAAA,OAApB,CAAsC,EAAE,CAAxC,CAC8B,CAAA,CAAU,CAAV,CAA5B,KAAA,EACA,CAAA,CAAA,CAAU,CAAV,CAAA,CAAe,IAEjB,KAAA,EAAA,CAA2B,IARS,CAD0B,CAkBlE,KAAI,EAAgB,IAAI,CAOxB,EAAA,UAAA,GAAA;AAAiD,QAAQ,CAAC,CAAD,CAAU,CACjE,IAAI,EAAU,IAAA,GAAA,EAGd,EAAA,GAAA,CAAyB,CAAA,QAAzB,CAA0C,CAAA,OAA1C,CAJiE,CAgBnE,EAAA,UAAA,GAAA,CAAkD,QAAQ,CACtD,CADsD,CAC1C,CAD0C,CAChC,CACxB,IAAI,EAAU,IAAA,GAAA,EAGd,IAAI,CACF,CAAA,KAAA,CAAgB,CAAhB,CAA0B,CAAA,QAA1B,CAA2C,CAAA,OAA3C,CADE,CAEF,MAAO,CAAP,CAAc,CACd,CAAA,OAAA,CAAe,CAAf,CADc,CANQ,CAY1B,EAAA,UAAA,KAAA,CAAiC,QAAQ,CAAC,CAAD,CAAc,CAAd,CAA0B,CAOjE,QAAS,EAAc,CAAC,CAAD,CAAS,CAAT,CAAmB,CAGxC,MAAqB,UAArB,EAAI,MAAO,EAAX,CACS,QAAQ,CAAC,CAAD,CAAI,CACjB,GAAI,CACF,CAAA,CAAa,CAAA,CAAO,CAAP,CAAb,CADE,CAEF,MAAO,CAAP,CAAc,CACd,CAAA,CAAY,CAAZ,CADc,CAHC,CADrB,CASS,CAZ+B,CAN1C,IAAI,CAAJ,CACI,CADJ,CAEI,EAAe,IAAI,CAAJ,CAAoB,QAAQ,CAAC,CAAD,CAAU,CAAV,CAAkB,CAC/D,CAAA,CAAe,CACf,EAAA,CAAc,CAFiD,CAA9C,CAoBnB,KAAA,GAAA,CACI,CAAA,CAAe,CAAf,CAA4B,CAA5B,CADJ,CAEI,CAAA,CAAe,CAAf,CAA2B,CAA3B,CAFJ,CAGA,OAAO,EA1B0D,CA8BnE,EAAA,UAAA,MAAA,CAAkC,QAAQ,CAAC,CAAD,CAAa,CACrD,MAAO,KAAA,KAAA,CAAU,IAAA,EAAV,CAAqB,CAArB,CAD8C,CAKvD,EAAA,UAAA,GAAA,CAA6C,QAAQ,CACjD,CADiD,CACpC,CADoC,CACxB,CAE3B,QAAS,EAAQ,EAAG,CAClB,OAAQ,CAAA,GAAR,EACE,KArQO,CAqQP,CACE,CAAA,CAAY,CAAA,GAAZ,CACA,MACF,MArQM,CAqQN,CACE,CAAA,CAAW,CAAA,GAAX,CACA,MACF,SACE,KAAU,MAAJ,CAAU,oBAAV;AAAiC,CAAA,GAAjC,CAAN,CARJ,CADkB,CADpB,IAAI,EAAc,IAac,KAAhC,EAAI,IAAA,EAAJ,CAEE,CAAA,GAAA,CAA2B,CAA3B,CAFF,CAIE,IAAA,EAAA,KAAA,CAA8B,QAAQ,EAAG,CACvC,CAAA,GAAA,CAA2B,CAA3B,CADuC,CAAzC,CAlByB,CAmD7B,EAAA,QAAA,CAA0B,QAAQ,CAAC,CAAD,CAAY,CAC5C,MAAI,EAAJ,WAAyB,EAAzB,CACS,CADT,CAGS,IAAI,CAAJ,CAAoB,QAAQ,CAAC,CAAD,CAAkB,CACnD,CAAA,CAAQ,CAAR,CADmD,CAA9C,CAJmC,CAe9C,EAAA,OAAA,CAAyB,QAAQ,CAAC,CAAD,CAAa,CAC5C,MAAO,KAAI,CAAJ,CAAoB,QAAQ,CAAC,CAAD,CAAU,CAAV,CAAkB,CACnD,CAAA,CAAO,CAAP,CADmD,CAA9C,CADqC,CAc9C,EAAA,KAAA,CAAuB,QAAQ,CAAC,CAAD,CAAoB,CACjD,MAAO,KAAI,CAAJ,CAAoB,QAAQ,CAAC,CAAD,CAAU,CAAV,CAAkB,CAGnD,IAFA,IAAI,EACAY,CAAA,CAAqB,CAArB,CADJ,CAEoC,EAAU,CAAA,KAAA,EAA9C,CACM,CAAA,CAAA,KADN,CAEK,CAFL,CAEe,CAAA,KAAA,EAFf,CAOE,CAAA,QAAA,CAAwB,CAAA,MAAxB,CAAA,GAAA,CACsB,CADtB,CAC+B,CAD/B,CAViD,CAA9C,CAD0C,CAuBnD,EAAA,IAAA,CAAsB,QAAQ,CAAC,CAAD,CAAoB,CAChD,IAAI,EAAWA,CAAA,CAAqB,CAArB,CAAf,CAC+B,EAAU,CAAA,KAAA,EAEzC,OAAI,EAAA,KAAJ,CACS,CAAA,QAAA,CAAwB,EAAxB,CADT,CAGS,IAAI,CAAJ,CAAoB,QAAQ,CAAC,CAAD,CAAa,CAAb,CAAwB,CAIzD,QAAS,EAAW,CAAC,CAAD,CAAI,CACtB,MAAO,SAAQ,CAAC,CAAD,CAAY,CACzB,CAAA,CAAa,CAAb,CAAA,CAAkB,CAClB,EAAA,EACuB,EAAvB,EAAI,CAAJ,EACE,CAAA,CAAW,CAAX,CAJuB,CADL,CAHxB,IAAI,EAAe,EAAnB,CACI,EAAkB,CAYtB,GACE,EAAA,KAAA,CAAkB,IAAA,EAAlB,CAUA,CATA,CAAA,EASA;AAHA,CAAA,QAAA,CAAwB,CAAA,MAAxB,CAAA,GAAA,CAEQ,CAAA,CAAY,CAAA,OAAZ,CAAkC,CAAlC,CAFR,CAE8C,CAF9C,CAGA,CAAA,CAAA,CAAU,CAAA,KAAA,EAXZ,OAYU,CAAA,CAAA,KAZV,CAdyD,CAApD,CAPuC,CAwChD,EAAA,0BAAA,CAA+C,QAAQ,EAAG,CACxD,MAAO,KAAI,CAD6C,CAK5D,OAAO,EAvgB2C,CAApD,CCbe,SAAA,EAAQ,CAAC,CAAD,CAAM,CAAN,CAAY,CACjC,MAAO,OAAA,UAAA,eAAA,KAAA,CAAqC,CAArC,CAA0C,CAA1C,CAD0B,CCLnCD,CAAA,CAAiB,eAAjB,CAAkC,QAAQ,CAAC,CAAD,CAAO,CAC/C,MAAI,EAAJ,CAAiB,CAAjB,CAYe,QAAQ,CAAC,CAAD,CAAS,CAAT,CAAmB,CACxC,IAAK,IAAI,EAAI,CAAb,CAAgB,CAAhB,CAAoB,SAAA,OAApB,CAAsC,CAAA,EAAtC,CAA2C,CACzC,IAAI,EAAS,SAAA,CAAU,CAAV,CACb,IAAK,CAAL,CACA,IAAK,IAAI,CAAT,GAAgB,EAAhB,CACME,CAAA,CAAa,CAAb,CAAqB,CAArB,CAAJ,GAA+B,CAAA,CAAO,CAAP,CAA/B,CAA6C,CAAA,CAAO,CAAP,CAA7C,CAJuC,CAO3C,MAAO,EARiC,CAbK,CAAjD,CCDAF;CAAA,CAAiB,sBAAjB,CAAyC,QAAQ,CAAC,CAAD,CAAO,CACtD,MAAI,EAAJ,CAAiB,CAAjB,CAYe,QAAQ,CAAC,CAAD,CAAQ,CAAR,CAAmB,CAAnB,CAA4B,CACjD,IAAI,EAAS,IAAA,OAAT,EAAwB,CACZ,EAAhB,CAAI,CAAJ,GACE,CADF,CACc,IAAA,IAAA,CAAS,CAAT,CAAY,CAAZ,CAA4C,CAA5C,CADd,CAGA,IAAe,IAAf,EAAI,CAAJ,EAAuB,CAAvB,CAAiC,CAAjC,CAAyC,CAAA,CAAU,CACnD,EAAA,CAAU,MAAA,CAAO,CAAP,CACI,EAAd,CAAI,CAAJ,GAAiB,CAAjB,CAA2B,IAAA,IAAA,CAAS,CAAT,CAAY,CAAZ,CAAqB,CAArB,CAA3B,CACA,KAAS,CAAT,CAAa,MAAA,CAAO,CAAP,EAAoB,CAApB,CAAb,CAAqC,CAArC,CAAyC,CAAzC,CAAkD,CAAA,EAAlD,CACE,IAAA,CAAK,CAAL,CAAA,CAAU,CAEZ,OAAO,KAX0C,CAbG,CAAxD,CCIAA;CAAA,CAAiB,SAAjB,CAA4B,QAAQ,CAAC,CAAD,CAAgB,CAgF5B,QAAA,EAAQ,CAAC,CAAD,CAAe,CAE3C,IAAA,EAAA,CAAW,CAAC,CAAD,EAAW,IAAA,OAAA,EAAX,CAA2B,CAA3B,UAAA,EAEX,IAAI,CAAJ,CAAkB,CAChBT,EAAA,EACAO,GAAA,EACI,EAAA,CAAOG,CAAA,CAAqB,CAArB,CAEX,KADA,IAAI,CACJ,CAAQ,CAAA,CAAC,CAAD,CAAS,CAAA,KAAA,EAAT,MAAR,CAAA,CACM,CACJ,CADW,CAAA,MACX,CAAA,IAAA,IAAA,CAA6B,CAAA,CAAK,CAAL,CAA7B,CAA6D,CAAA,CAAK,CAAL,CAA7D,CAPc,CAJyB,CApD7C,QAAS,EAAM,CAAC,CAAD,CAAS,CACjBC,CAAA,CAAa,CAAb,CAAqB,CAArB,CAAL,EAOEZ,EAAA,CAAuB,CAAvB,CAA+B,CAA/B,CAAqC,CAAC,MAN5B,EAM2B,CAArC,CARoB,CAiBxB,QAAS,EAAK,CAAC,CAAD,CAAO,CACnB,IAAI,EAAO,MAAA,CAAO,CAAP,CACP,EAAJ,GACE,MAAA,CAAO,CAAP,CADF,CACiB,QAAQ,CAAC,CAAD,CAAS,CAC9B,CAAA,CAAO,CAAP,CACA,OAAO,EAAA,CAAK,CAAL,CAFuB,CADlC,CAFmB,CAzBrB,GAfA,QAAqB,EAAG,CACtB,GAAK,CAAA,CAAL,EAAuB,CAAA,MAAA,KAAvB,CAAoC,MAAO,CAAA,CAC3C,IAAI,CACF,IAAI,EAAI,MAAA,KAAA,CAAY,EAAZ,CAAR,CACI,EAAI,MAAA,KAAA,CAAY,EAAZ,CADR,CAEI,EAAM,IACN,CADM,CACS,CAAC,CAAC,CAAD,CAAI,CAAJ,CAAD,CAAS,CAAC,CAAD,CAAI,CAAJ,CAAT,CADT,CAEV,IAAkB,CAAlB,EAAI,CAAA,IAAA,CAAQ,CAAR,CAAJ,EAAqC,CAArC,EAAuB,CAAA,IAAA,CAAQ,CAAR,CAAvB,CAAwC,MAAO,CAAA,CAC/C,EAAA,OAAA,CAAW,CAAX,CACA,EAAA,IAAA,CAAQ,CAAR,CAAW,CAAX,CACA,OAAO,CAAC,CAAA,IAAA,CAAQ,CAAR,CAAR,EAAoC,CAApC,EAAsB,CAAA,IAAA,CAAQ,CAAR,CARpB,CASF,MAAO,CAAP,CAAY,CACZ,MAAO,CAAA,CADK,CAXQ,CAepB,EAAJ,CAAoB,MAAO,EAE3B;IAAI,EAAO,iBAAP,CAA2B,IAAA,OAAA,EAAA,SAAA,EAAA,UAAA,CAAmC,CAAnC,CAgC/B,EAAA,CAAM,QAAN,CACA,EAAA,CAAM,mBAAN,CACA,EAAA,CAAM,MAAN,CAKA,KAAI,EAAQ,CAoCZ,EAAA,UAAA,IAAA,CAAgC,QAAQ,CAAC,CAAD,CAAM,CAAN,CAAa,CACnD,CAAA,CAAO,CAAP,CACA,IAAK,CAAAY,CAAA,CAAa,CAAb,CAAkB,CAAlB,CAAL,CAQE,KAAU,MAAJ,CAAU,oBAAV,CAAiC,CAAjC,CAAN,CAEF,CAAA,CAAI,CAAJ,CAAA,CAAU,IAAA,EAAV,CAAA,CAAsB,CACtB,OAAO,KAb4C,CAiBrD,EAAA,UAAA,IAAA,CAAgC,QAAQ,CAAC,CAAD,CAAM,CAC5C,MAAOA,EAAA,CAAa,CAAb,CAAkB,CAAlB,CAAA,CAA0B,CAAA,CAAI,CAAJ,CAAA,CAAU,IAAA,EAAV,CAA1B,CAAgD,IAAA,EADX,CAK9C,EAAA,UAAA,IAAA,CAAgC,QAAQ,CAAC,CAAD,CAAM,CAC5C,MAAOA,EAAA,CAAa,CAAb,CAAkB,CAAlB,CAAP,EAAkCA,CAAA,CAAa,CAAA,CAAI,CAAJ,CAAb,CAAwB,IAAA,EAAxB,CADU,CAK9C,EAAA,UAAA,OAAA,CAAmC,QAAQ,CAAC,CAAD,CAAM,CAC/C,MAAKA,EAAA,CAAa,CAAb,CAAkB,CAAlB,CAAL,EACKA,CAAA,CAAa,CAAA,CAAI,CAAJ,CAAb,CAAwB,IAAA,EAAxB,CADL,CAIO,OAAO,CAAA,CAAI,CAAJ,CAAA,CAAU,IAAA,EAAV,CAJd,CAES,CAAA,CAHsC,CAQjD,OAAO,EApI2C,CAApD,CCMAF;CAAA,CAAiB,KAAjB,CAAwB,QAAQ,CAAC,CAAD,CAAY,CA2QzB,QAAA,EAAQ,EAAG,CAC1B,IAAI,EAA4C,EAEhD,OADA,EAAA,EACA,CADgB,CAAA,KAChB,CAD4B,CAAA,KAC5B,CADwC,CAFd,CAxBT,QAAA,EAAQ,CAAC,CAAD,CAAM,CAAN,CAAY,CACrC,IAAI,EAAQ,CAAA,EACZ,OAAOD,GAAA,CAA0B,QAAQ,EAAG,CAC1C,GAAI,CAAJ,CAAW,CACT,IAAA,CAAO,CAAA,KAAP,EAAqB,CAAA,EAArB,CAAA,CACE,CAAA,CAAQ,CAAA,EAEV,KAAA,CAAO,CAAA,KAAP,EAAqB,CAAA,KAArB,CAAA,CAEE,MADA,EACO,CADC,CAAA,KACD,CAAA,CAAC,KAAM,CAAA,CAAP,CAAc,MAAO,CAAA,CAAK,CAAL,CAArB,CAET,EAAA,CAAQ,IARC,CAUX,MAAO,CAAC,KAAM,CAAA,CAAP,CAAa,MAAO,IAAK,EAAzB,CAXmC,CAArC,CAF8B,CAvBnB,QAAA,EAAQ,CAAC,CAAD,CAAM,CAAN,CAAW,CACrC,IAAI,CAiEA,EAAA,CAjEW,CAiEX,EAAc,MAjEH,EAkEH,SAAZ,EAAI,CAAJ,EAAgC,UAAhC,EAAwB,CAAxB,CAEO,CAAA,IAAA,CApEQ,CAoER,CAAL,CAKA,CALA,CAKO,CAAA,IAAA,CAzEM,CAyEN,CALP,EACM,CACJ,CADS,EACT,CADe,GAAE,CACjB,CAAA,CAAA,IAAA,CAtEW,CAsEX,CAAe,CAAf,CAFF,CAFF,CAUA,CAVA,CAUO,IAVP,CAlEe,CACf,KAAI,EAAO,CAAA,EAAA,CAAU,CAAV,CACX,IAAI,CAAJ,EAAYG,CAAA,CAAa,CAAA,EAAb,CAAwB,CAAxB,CAAZ,CACE,IAAS,CAAT,CAAiB,CAAjB,CAAoB,CAApB,CAA4B,CAAA,OAA5B,CAAyC,CAAA,EAAzC,CAAkD,CAChD,IAAI,EAAQ,CAAA,CAAK,CAAL,CACZ,IAAK,CAAL,GAAa,CAAb,EAAoB,CAAA,IAApB,GAAkC,CAAA,IAAlC,EAAgD,CAAhD,GAAwD,CAAA,IAAxD,CACE,MAAO,CAAC,GAAI,CAAL,CAAS,KAAM,CAAf,CAAqB,MAAO,CAA5B,CAAmC,EAAO,CAA1C,CAHuC,CAOpD,MAAO,CAAC,GAAI,CAAL,CAAS,KAAM,CAAf;AAAqB,MAAQ,EAA7B,CAAgC,EAAO,IAAA,EAAvC,CAX8B,CAzIrB,QAAA,EAAQ,CAAC,CAAD,CAAe,CAEvC,IAAA,EAAA,CAAa,EAGb,KAAA,EAAA,CAAa,CAAA,EAMb,KAAA,KAAA,CAAY,CAEZ,IAAI,CAAJ,CAAkB,CACZ,CAAA,CAAOD,CAAA,CAAqB,CAArB,CAEX,KADA,IAAI,CACJ,CAAQ,CAAA,CAAC,CAAD,CAAS,CAAA,KAAA,EAAT,MAAR,CAAA,CACM,CAEJ,CADwD,CAAD,MACvD,CAAA,IAAA,IAAA,CAA6B,CAAA,CAAK,CAAL,CAA7B,CAA6D,CAAA,CAAK,CAAL,CAA7D,CANc,CAbqB,CAlDzC,GA9BqD,QAAQ,EAAG,CAC9D,GAAK,CAAA,CAAL,EACK,CAAA,CAAA,UAAA,QADL,EAE0B,UAF1B,EAEI,MAAO,OAAA,KAFX,CAGE,MAAO,CAAA,CAGT,IAAI,CAEF,IAAI,EAAM,MAAA,KAAA,CAAY,CAAC,EAAG,CAAJ,CAAZ,CAAV,CACI,EAAM,IAAI,CAAJ,CAAcA,CAAA,CAAqB,CAAC,CAAC,CAAD,CAAM,GAAN,CAAD,CAArB,CAAd,CACV,IAAoB,GAApB,EAAI,CAAA,IAAA,CAAQ,CAAR,CAAJ,EAAuC,CAAvC,EAA2B,CAAA,KAA3B,EAA4C,CAAA,IAAA,CAAQ,CAAC,EAAG,CAAJ,CAAR,CAA5C,EACI,CAAA,IAAA,CAAQ,CAAC,EAAG,CAAJ,CAAR,CAAgB,GAAhB,CADJ,EAC4B,CAD5B,EAC+C,CAD/C,EACmC,CAAA,KADnC,CAEE,MAAO,CAAA,CAET,KAA6B,EAAO,CAAA,QAAA,EAApC,CACI,EAAO,CAAA,KAAA,EACX,IAAI,CAAA,KAAJ,EAAiB,CAAA,MAAA,CAAW,CAAX,CAAjB,EAAkC,CAAlC,EAA0D,GAA1D,EAAyC,CAAA,MAAA,CAAW,CAAX,CAAzC,CACE,MAAO,CAAA,CAET,EAAA,CAAO,CAAA,KAAA,EACP,OAAI,EAAA,KAAJ,EAAoC,CAApC,EAAiB,CAAA,MAAA,CAAW,CAAX,CAAA,EAAjB,EACqB,GADrB,EACI,CAAA,MAAA,CAAW,CAAX,CADJ,EAC6B,CAAA,CAAA,KAAA,EAAA,KAD7B;AAES,CAAA,CAFT,CAIO,CAAA,CAlBL,CAmBF,MAAO,CAAP,CAAY,CACZ,MAAO,CAAA,CADK,CA1BgD,CAAZ,EA8BpD,CAAkB,MAAO,EAGzBV,GAAA,EACAO,GAAA,EAIA,KAAI,EAAQ,IAAI,OAoEhB,EAAA,UAAA,IAAA,CAA4B,QAAQ,CAAC,CAAD,CAAM,CAAN,CAAa,CAC/C,IAAI,EAAI,CAAA,CAAc,IAAd,CAAoB,CAApB,CACH,EAAA,KAAL,GACE,CAAA,KADF,CACY,IAAA,EAAA,CAAW,CAAA,GAAX,CADZ,CAC+B,EAD/B,CAGK,EAAA,EAAL,CAaE,CAAA,EAAA,MAbF,CAakB,CAblB,EACE,CAAA,EAUA,CAVU,CACR,KAAM,IAAA,EADE,CAER,EAAU,IAAA,EAAA,EAFF,CAGR,KAAM,IAAA,EAHE,CAIR,IAAK,CAJG,CAKR,MAAO,CALC,CAUV,CAHA,CAAA,KAAA,KAAA,CAAY,CAAA,EAAZ,CAGA,CAFA,IAAA,EAAA,EAAA,KAEA,CAF2B,CAAA,EAE3B,CADA,IAAA,EAAA,EACA,CADsB,CAAA,EACtB,CAAA,IAAA,KAAA,EAXF,CAeA,OAAO,KApBwC,CAyBjD,EAAA,UAAA,OAAA,CAA+B,QAAQ,CAAC,CAAD,CAAM,CACvC,CAAA,CAAI,CAAA,CAAc,IAAd,CAAoB,CAApB,CACR,OAAI,EAAA,EAAJ,EAAe,CAAA,KAAf,EACE,CAAA,KAAA,OAAA,CAAc,CAAA,MAAd,CAAuB,CAAvB,CAMO,CALF,CAAA,KAAA,OAKE,EALa,OAAO,IAAA,EAAA,CAAW,CAAA,GAAX,CAKpB,CAJP,CAAA,EAAA,EAAA,KAIO,CAJiB,CAAA,EAAA,KAIjB,CAHP,CAAA,EAAA,KAAA,EAGO,CAHiB,CAAA,EAAA,EAGjB,CAFP,CAAA,EAAA,KAEO,CAFQ,IAER,CADP,IAAA,KAAA,EACO,CAAA,CAAA,CAPT,EASO,CAAA,CAXoC,CAgB7C,EAAA,UAAA,MAAA;AAA8B,QAAQ,EAAG,CACvC,IAAA,EAAA,CAAa,EACb,KAAA,EAAA,CAAa,IAAA,EAAA,EAAb,CAAmC,CAAA,EACnC,KAAA,KAAA,CAAY,CAH2B,CAQzC,EAAA,UAAA,IAAA,CAA4B,QAAQ,CAAC,CAAD,CAAM,CACxC,MAAO,CAAG,CAAA,CAAA,CAAc,IAAd,CAAoB,CAApB,CAAA,EAD8B,CAM1C,EAAA,UAAA,IAAA,CAA4B,QAAQ,CAAC,CAAD,CAAM,CAGxC,OAFI,CAEJ,CAFY,CAAA,CAAc,IAAd,CAAoB,CAApB,CAAA,EAEZ,GACwB,CAAA,MAJgB,CAS1C,EAAA,UAAA,QAAA,CAAgC,QAAQ,EAAG,CACzC,MAAO,EAAA,CACH,IADG,CACG,QAAQ,CAAC,CAAD,CAAQ,CAAE,MAAO,CAAC,CAAA,IAAD,CAAY,CAAA,MAAZ,CAAT,CADnB,CADkC,CAO3C,EAAA,UAAA,KAAA,CAA6B,QAAQ,EAAG,CACtC,MAAO,EAAA,CAAa,IAAb,CAAmB,QAAQ,CAAC,CAAD,CAAQ,CAAE,MAAO,EAAA,IAAT,CAAnC,CAD+B,CAMxC,EAAA,UAAA,OAAA,CAA+B,QAAQ,EAAG,CACxC,MAAO,EAAA,CAAa,IAAb,CAAmB,QAAQ,CAAC,CAAD,CAAQ,CAAE,MAAO,EAAA,MAAT,CAAnC,CADiC,CAM1C,EAAA,UAAA,QAAA,CAAgC,QAAQ,CAAC,CAAD,CAAW,CAAX,CAAwB,CAG9D,IAFA,IAAI,EAAO,IAAA,QAAA,EAAX,CACI,CACJ,CAAQ,CAAA,CAAC,CAAD,CAAQ,CAAA,KAAA,EAAR,MAAR,CAAA,CACM,CACJ,CADY,CAAA,MACZ,CAAA,CAAA,KAAA,CACsB,CADtB,CAE0B,CAAA,CAAM,CAAN,CAF1B,CAGwB,CAAA,CAAM,CAAN,CAHxB,CAII,IAJJ,CAL4D,CAc9C;CAAA,UAAD,CAAwB,MAAA,SAAxB,CAAA,CACb,CAAA,UAAA,QAuEJ,KAAI,EAAW,CAuBf,OAAO,EA7SmC,CAA5C,CCTAE,EAAA,CAAiB,yBAAjB,CAA4C,QAAQ,CAAC,CAAD,CAAO,CACzD,MAAI,EAAJ,CAAiB,CAAjB,CAWe,QAAQ,CAAC,CAAD,CAAS,CAE9B,IAAI,CCNN,IAAe,IAAf,EDMuC,ICNvC,CACE,KAAM,KAAI,SAAJ,CACF,4EADE,CAAN,CASF,CAAA,CDJuC,ICIvC,CAAiB,EDHf,IAAa,CAAb,CAAI,CAAJ,EAA2B,UAA3B,CAAkB,CAAlB,CACE,KAAM,KAAI,UAAJ,CAAe,qBAAf,CAAN,CAEO,CAAT,EAAkB,CAElB,KADA,IAAI,EAAS,EACb,CAAO,CAAP,CAAA,CAEE,GADI,CACC,CADQ,CACR,GADW,CACX,EADqB,CACrB,EAAA,CAAA,IAAY,CAAjB,CAAqB,CAAA,EAAU,CAEjC,OAAO,EAZuB,CAZyB,CAA3D,Cf0BA,KAAWG,EAAyB,CAQhC,IAAI,CAEA,IAAMC,GAAOC,MAAAC,eAAA,CAAsB,EAAtB,CAA0B,SAA1B,CAAqC,CAC9CC,IAAKA,QAAA,EAAA,CACDJ,CAAA,EAAY,CADX,CADyC,CAArC,CAKbK,OAAAC,iBAAA,CAAwB,MAAxB,CAAgC,IAAhC,CAAoEL,EAApE,CAPA,CAQF,MAAOM,CAAP,CAAU;AAiBR,WATW,EASIC,WAAAC,UATJ,GAUXT,CAVW,EAUC,CAVD,CAgBX,MAAJ,EAAaU,cAAAD,UAAb,GACIT,CADJ,EACgB,CADhB,CiB/EJ,KAAMW,GAAwBC,SAAnB,CAA+BA,SAAAC,UAA/B,CAAqD,EAAhE,CAuBWC,GAA6B,CAGhC,EAAA,kBAAAC,KAAA,CAAwBJ,EAAxB,CAAJ,EAAqC,UAArC,EAAmDN,OAAnD,GACIS,EADJ,EACmB,YAAD,EAAiBF,UAAjB,CACV,CADU,CAEV,CAHR,CAM6B,GAA7B,CAAID,EAAAK,QAAA,CAAW,SAAX,CAAJ,GACIF,EADJ,EACkB,CADlB,CCgMJG,SAAAC,GAAA,CAA+BC,CAA/B,CAAwC,CAChCC,CAAAA,CAASD,CAAAC,OAATA,EAAsBf,MAoBrBe,EAAAC,GAAL,GACID,CADJ,CACcA,CAAAC,GADd,CASA,OAAqC,EAA7B,GAAAD,CAAAE,SAAA,CAAkCF,CAAAG,WAAlC,CAAgEH,CA9BpC;AAiCxC,IAAA,EAAmD,EAAnD,CAAMI,IAA6C,CAAA,CAC9C,CAD8C,CAAA,CAC1B,WAD0B,CAAA,CAAA,CAE9C,CAF8C,CAAA,CAEhC,KAFgC,CAAA,CAAA,CAG9C,EAH8C,CAAA,CAG9B,OAH8B,CAAA,CAAA,CAI9C,EAJ8C,CAAA,CAI9B,OAJ8B,CAAA,CAAA,CAK9C,EAL8C,CAAA,CAK9B,OAL8B,CAAA,CAAA,CAM9C,EAN8C,CAAA,CAM5B,SAN4B,CAAA,CAAA,CAO9C,EAP8C,CAAA,CAOhC,KAPgC,CAAA,CAAA,CAQ9C,EAR8C,CAAA,CAQ9B,OAR8B,CAAA,CAAA,CAS9C,EAT8C,CAAA,CAS3B,UAT2B,CAAA,CAAA,CAU9C,EAV8C,CAAA,CAU7B,QAV6B,CAAA,CAAA,CAW9C,EAX8C,CAAA,CAW9B,GAX8B,CAAA,CAAA,CAY9C,EAZ8C,CAAA,CAY7B,QAZ6B,CAAA,CAAA,CAa9C,EAb8C,CAAA,CAa3B,UAb2B,CAAA,CAAA,CAc9C,EAd8C,CAAA,CAchC,KAdgC,CAAA,CAAA,CAe9C,EAf8C,CAAA,CAe/B,MAf+B,CAAA,CAAA,CAgB9C,EAhB8C,CAAA,CAgB1B,WAhB0B,CAAA,CAAA,CAiB9C,EAjB8C,CAAA,CAiB5B,SAjB4B,CAAA,CAAA,CAkB9C,EAlB8C,CAAA,CAkBzB,YAlByB,CAAA,CAAA,CAmB9C,EAnB8C,CAAA,CAmB1B,WAnB0B,CAAA,CAAA,CAoB9C,EApB8C,CAAA,CAoBxB,aApBwB,CAAA,CAAA,CAqB9C,EArB8C,CAAA,CAqB7B,QArB6B,CAAA,CAAA,CAsB9C,EAtB8C,CAAA,CAsB7B,QAtB6B,CAAA,CAAA,CAuB9C,EAvB8C,CAAA,CAuB/B,MAvB+B,CAAA,CAAA,CAwB9C,GAxB8C,CAAA,CAwBjC,IAxBiC,CAAA,CAAA,CAyB9C,GAzB8C,CAAA,CAyBjC,IAzBiC,CAAA,CAAA,CA0B9C,GA1B8C,CAAA,CA0BjC,IA1BiC,CAAA,CAAA,CA2B9C,GA3B8C,CAAA,CA2BjC,IA3BiC,CAAA,CAAA,CA4B9C,GA5B8C,CAAA,CA4BjC,IA5BiC,CAAA,CAAA,CA6B9C,GA7B8C,CAAA,CA6BjC,IA7BiC,CAAA,CAAA,CA8B9C,GA9B8C,CAAA,CA8BjC,IA9BiC,CAAA,CAAA,CA+B9C,GA/B8C,CAAA,CA+BjC,IA/BiC,CAAA,CAAA,CAgC9C,GAhC8C,CAAA,CAgCjC,IAhCiC,CAAA,CAAA,CAiC9C,GAjC8C,CAAA,CAiChC,KAjCgC,CAAA,CAAA,CAkC9C,GAlC8C,CAAA,CAkChC,KAlCgC,CAAA,CAAA,CAmC9C,GAnC8C,CAAA,CAmChC,KAnCgC;AAAA,CAAA,CAoC9C,GApC8C,CAAA,CAoC5B,SApC4B,CAAA,CAAA,CAqC9C,GArC8C,CAAA,CAqCzB,YArCyB,CAAA,CAAA,CAsC9C,GAtC8C,CAAA,CAsChC,KAtCgC,CAAA,CAA7CA,CAiDNC,SAAAC,GAAA,CAAiCP,CAAjC,CAAkD,CAC9C,IAAMQ,EAAUR,CAAAQ,QACZC,EAAAA,CAAWT,CAAAS,SAEE,EAAjB,GAAIA,CAAJ,EAAkC,EAAlC,GAAsBD,CAAtB,GACIC,CADJ,CACe,EADf,CAIA,OAAgB,GAAhB,EAAIA,CAAJ,EAAmC,EAAnC,GAAsBA,CAAtB,CACWA,CADX,CAIO,CAZuC,CAmDlDC,QAAAC,GAAA,CAA6BC,CAA7B,CAA+CC,CAA/C,CAAgEC,CAAhE,CAA8E,CAO1E,GAAKA,CAAAA,CAAL,EAAcjC,CAAd,CAAyB,CAAzB,CACI+B,CAAAG,UAAA,CAAoBF,CADxB,KA4BA,KALKG,EAICC,GAHFD,EAGEC,CAHsBC,QAAAC,cAAA,CAAuB,KAAvB,CAGtBF,EADND,EAAAD,UACME,CAD4B,OAC5BA,CAxBiCJ,CAwBjCI,CAD2C,QAC3CA,CAAAA,CAAAA,CAAMD,EAAAI,WACZ,CAAOH,CAAAG,WAAP,CAAA,CAzBgBR,CA0BZS,YAAA,CAAoBJ,CAAAG,WAApB,CApCsE,CAmB9E,IAAIJ,EC1XJM,SAAAC,GAAA,EAAA,ECHA,IAAIC,GAAS,CAAb,CCCIC,GAAW,CAAA,CDDf,CCEIC,GAAyB,EDF7B,CCIMC,GAAiC,OAAjCA,CAA2CC,IAAAC,OAAA,EAI7C3C,OAAAC,iBAAA,CAAwB,SAAxB,CAAmC2C,EAAnC,CAQJC;QAAAD,GAAA,CAA6B9B,CAA7B,CAA6C,CACzC,GAAIA,CAAAgC,OAAJ,GAAkB9C,MAAlB,EAA4Bc,CAAAiC,KAA5B,GAAwCN,EAAxC,CAAA,CAMAF,EAAA,CAAW,CAAA,CAEPS,EAAAA,CAAQR,EACZA,GAAA,CAAS,EACT,KAAK,IAAIS,EAAI,CAAb,CAAgBA,CAAhB,CAAoBD,CAAAE,OAApB,CAAkCD,CAAA,EAAlC,CACID,CAAA,CAAMC,CAAN,CAAA,EDbJX,GAAA,ECEA,CADyC,CAqC7Ca,QAAAC,GAAA,CAA6BC,CAA7B,CAA6C,CAfpCd,EAAL,GACIA,EAEI,CAFO,CAAA,CAEP,CAAAvC,MAAAsD,YAAA,CAAmBb,EAAnB,CAAiC,GAAjC,CAHR,CAiBAD,GAAAe,KAAA,CAAYF,CAAZ,CAFyC,CCjD7C,IAAIG,GAAW,CAAA,CAAf,CACIC,GAA8B,EADlC,CAEIC,EAFJ,CAGIC,GAAmB,CAGnB,IAAM,EAAAlD,EAAA,CAAa,CAAb,CAAN,CAAkD,CAC9C,IAAMmD,GAAoB,IAAIC,gBAAJ,CAAqBC,EAArB,CAC1BJ,GAAA,CAAiB1B,QAAA+B,eAAA,CAAwB,EAAxB,CACjBH,GAAAI,QAAA,CAA0BN,EAA1B,CAA0C,CAAEO,cAAe,CAAA,CAAjB,CAA1C,CAH8C,CAOtDC,QAAAC,GAAA,EAAA,CACIL,EAAA,EAUAV,GAAA,CAAaf,EAAb,CAXJ,CAcA+B,QAAAN,GAAA,EAAA,CACI,IAAA,CAA4B,CAA5B,CAAOL,EAAAP,OAAP,CAAA,CAA+B,CAC3B,IAAMF,EAAQS,EACdA,GAAA,CAAc,EACd,KAAK,IAAIR,EAAI,CAAb,CAAgBA,CAAhB,CAAoBD,CAAAE,OAApB,CAAkCD,CAAA,EAAlC,CACID,CAAA,CAAMC,CAAN,CAAA,EFrBRX,GAAA,EEiB+B,CAS/BkB,EAAA,CAAW,CAAA,CAVf;AAgBAa,QAAAC,GAAA,EAAA,CACSd,EAAL,GACIA,EAWI,CAXO,CAAA,CAWP,CAAI/C,EAAJ,CAAiB,CAAjB,CACI8D,OAAAC,QAAA,EAAAC,KAAA,CAAuBN,EAAvB,CADJ,EAGIR,EACA,EADoB,CACpB,CAAAD,EAAAgB,UAAA,CAA2Bf,EAAA,CAAmB,GAAnB,CAAyB,GAJxD,CAZR,CADJ,CC7CA,IAAIgB,GAAW,CAAA,CAAf,CACIC,EADJ,CAEIC,GAAmE,EAmCvEC,SAAAC,GAAA,EAAA,CACI,IAAMC,EAAa,CAACJ,EAAA,EACpB,IAAID,EAAJ,GAAiBK,CAAjB,CAEI,IAAK,IAAI/B,EAAI,CAAb,CAAgBA,CAAhB,CAAoB4B,EAAA3B,OAApB,CAAkDD,CAAA,EAAlD,CACI4B,EAAA,CAAsB5B,CAAtB,CAAA,CAAyB+B,CAAzB,CALZ,CAYsC,WAAlC,GAAI,MAAOhD,SAAA,OAAX,EACI4C,EAGA,CAHYK,QAAA,EAAA,CACR,MAAOjD,SAAAkD,OADC,CAGZ,CAAAlD,QAAA/B,iBAAA,CAA0B,kBAA1B,CAA8C8E,EAA9C,CAJJ,EAKwD,WAAjD,GAAI,MAAQ/C,SAAA,aAAZ,EAMH4C,EAGA,CAHYK,QAAA,EAAA,CACR,MAAQjD,SAAA,aADA,CAGZ,CAAAA,QAAA/B,iBAAA,CAA0B,wBAA1B,CAAoD8E,EAApD,CATG,EAWHH,EAXG,CAWSK,QAAA,EAAA,CACR,MAAO,CAAA,CADC,CAIhBN,GAAA,CAAW,CAACC,EAAA,ECTZO;QAtBJC,GAsBI,EAAA,CACI,IAAAC,EAAA,CAAc,CACd,KAAAC,EAAA,CAAuB,EAGvB,KAAAC,EAAA,CADA,IAAAC,EACA,CAFA,IAAAC,EAEA,CAFmB,IAHvB,CA8CA,EAAA,UAAA,MAAA,CAAAC,QAAK,CAACrC,CAAD,CAAiB,CACd,IAAAgC,EAAA,EAOW,CACU,KAAzB,GAAI,IAAAI,EAAJ,GACI,IAAAA,EADJ,CACuB,EADvB,CAGA,KAAAA,EAAAlC,KAAA,CAAsBF,CAAtB,CAZkB,CAoBtB,GAAA,UAAA,KAAA,CAAAsC,QAAI,CAACtC,CAAD,CAAiB,CACb,IAAAgC,EAAA,EAOW,CACS,KAAxB,GAAI,IAAAG,EAAJ,GACI,IAAAA,EADJ,CACsB,EADtB,CAGA,KAAAA,EAAAjC,KAAA,CAAqBF,CAArB,CAZiB,CAoBrBuC,SAAA,GAAK,CAACvC,CAAD,CAAiB,CCjFFuC,IAAAA,EC8GhBC,EAAJD,CACWE,EADXF,CAGOG,EAAA,EF/BH,EAAAV,EAAA,EAAe,CACU,KAAzB,GAAI,CAAAE,EAAJ,GACI,CAAAA,EADJ,CACuB,EADvB,CAGA,EAAAA,EAAAhC,KAAA,CAAsBF,CAAtB,CALkB,CGpJ1B,IAAM2C,EAA0C,EC6GhDC,SAAAC,EAAA,CAAwDC,CAAxD,CAAwE,CACpE,MAAIA,EAAAd,EAAJ,CAAkB,EAAlB,CACQc,CAAAd,EAAJ,CAAkB,CAAlB,CACWa,CAAA,CAA4BC,CAAAC,EAAAC,KAA5B,CADX,CAGWH,CAAA,CAA2BC,CAAAG,EAA3B,CAJf,CAOOH,CAAAC,EAR6D,CCrBpEjB,QAbJoB,GAaI,CACIC,CADJ,CAEIC,CAFJ,CAGIC,CAHJ,CAIIC,CAJJ,CAKIC,CALJ,CAKsF,CAElF,IAAAvB,EAAA,CAAcmB,CACd,KAAAK,EAAA,CAAYJ,CACZ,KAAAK,EAAA,CAAY,IACZ,KAAAC,EAAA,CAAcL,CACd,KAAAM,EAAA,CAAkBL,CAElB,KAAAM,EAAA,CADA,IAAAC,EACA,CADc,IAEd,KAAAZ,EAAA,CAAiBM,CAEjB,KAAAO,EAAA,CADA,IAAAf,EACA,CADiB,IAViE,CA0BtF,CAAA,C7B3EJ,EAAAgB,U6B2EIC;CAAAC,IAAA,CAAAA,QAAG,CAACA,CAAD,CAAS,CACI,IAAZ,GAAIA,CAAJ,CACI,IAAAjC,EADJ,EACmB,IADnB,EAGI,IAAAA,EACA,EADe,GACf,CAAA,IAAAyB,EAAA,CAAYQ,CAJhB,CAMA,OAAO,KAPC,CAgBZD,EAAAV,UAAA,CAAAA,QAAS,CAACA,CAAD,CAAyB,CAC1B,IAAAK,EAAA,CAacL,CAClB,OAAO,KAfuB,CAwBlCU,EAAAE,MAAA,CAAAA,QAAK,CAACA,CAAD,CAA4B,CACzB,IAAAL,EAAA,CA2BUK,CACd,OAAO,KA7BsB,CAsCjCC,SAAA,EAAM,CAANA,CAAM,CAACA,CAAD,CAAgC,CAC9B,CAAAP,EAAA,CAKWO,CACf,OAAO,EAP2B,CAgBtCH,CAAAX,EAAA,CAAAA,QAAK,CAACA,CAAD,CAAgB,CACb,IAAAK,EAAA,CA2BUL,CACd,OAAO,KA7BU,CAwCrBW;CAAAT,SAAA,CAAAA,QAAQ,CAACA,CAAD,CAA8E,CACnE,GAqBXa,KAAAC,QAAA,CAAcd,CAAd,CArBW,CAqBc,CACzB,IAAAvB,EAAA,EAAe,EAkmB+B,EAAA,CAEtD,IADA,IAAIsC,EAAY,CAAhB,CACS1E,EAAI,CAAb,CAAgBA,CAAhB,CAnmByC2D,CAmmBrB1D,OAApB,CAAkCD,CAAA,EAAlC,CAAuC,CACnC,IAAM2E,EApmB+BhB,CAomB3B,CAAM3D,CAAN,CAEV,IAAiB,QAAjB,GAAI,MAAO2E,EAAX,CAA2B,CACvB,GAAU,IAAV,GAAIA,CAAJ,EAAkBH,KAAAC,QAAA,CAAcE,CAAd,CAAlB,CAAoC,CAC1BC,CAAAA,CAxmBuBjB,CAwmBdkB,MAAA,CAAY,CAAZ,CAAe7E,CAAf,CACf8E,GAAA,CAzmB6BnB,CAymB7B,CAAwBiB,CAAxB,CAAgC5E,CAAhC,CAAmC,CAAnC,CAAsC0E,CAAtC,CACA,EAAA,CAAOE,CAAP,OAAA,CAHgC,CAK1BD,CAAAvC,EAAN,CAAiB,GAAjB,GACIuC,CAAAd,EADJ,CACaa,CAAA,EADb,CANmB,CAA3B,IAWUxB,EAEN,CAFa6B,EAAA,CAAGJ,CAAH,CAEb,CADAzB,CAAAW,EACA,CADYa,CAAA,EACZ,CAnnBiCf,CAmnBjC,CAAM3D,CAAN,CAAA,CAAWkD,CAhBoB,CArmBN,CArBd,IAuCM,KAAjB,GAAIS,CAAJ,CACI,IAAAvB,EADJ,EACmB,GADnB,CAE+B,QAAxB,GAAI,MAAOuB,EAAX,EACH,IAAAvB,EACA,EADe,EACf,CAAMuB,CAAAvB,EAAN,CAAwB,GAAxB,GACIuB,CAAAE,EADJ,CACoB,CADpB,CAFG,EAMH,IAAAzB,EANG,EAMY,EAxBnB,KAAAiB,EAAA,CAAiB,CA4BrB,OAAO,KApD2E,CA0FtFe,EAAAY,MAAA,CAAAA,QAAK,CAACA,CAAD,CAAqB,CAClB,IAAA3B,EAAA,CAKa2B,CACjB,OAAO,KAPe,CAgB1BZ,EAAAa,QAAA,CAAAA,QAAO,CAACA,CAAD,CAAwB,CACvB,IAAA5B,EAAA,CASa4B,CACjB,OAAO,KAXoB,CA2B/BC,SAAA,GAAG,CAAHA,CAAG,CAACA,CAAD,CAA2E,CAC1E,CAAAhB,EAAA,CAAYgB,CACZ,OAAO,EAFmE;AA+ElFC,QAAAJ,GAAA,CAAmBrG,CAAnB,CAA4D,CACxD,MAAO,KAAI4E,EAAJ,CAAuB,CAAvB,CAAwC,IAAxC,CAA8C,IAA9C,CAAoD,IAApD,CAA0D5E,CAA1D,CADiD,CAoI5D0G,QAAAC,EAAA,CAAmBC,CAAnB,CAAyC5B,CAAzC,CAA2D,CACvD,MAAO,KAAIJ,EAAJ,CACH,CADG,CAEHgC,CAFG,CAGH,IAHG,CAIWC,IAAAA,EAAd,GAAA7B,CAAA,CAA0B,IAA1B,CAAiCA,CAJ9B,CAKH,IALG,CADgD,CAqE3D8B,QAwCAC,GAAA,CAAmBC,CAAnB,CAAoChC,CAApC,CAAsD,CAClD,MAAO,KAAIJ,EAAJ,CACM,UAAT,GAAAoC,CAAA,CACI,IADJ,CAEI,GAHD,CAIHA,CAJG,CAKH,IALG,CAMWH,IAAAA,EAAd,GAAA7B,CAAA,CAA0B,IAA1B,CAAiCA,CAN9B,CAOH,IAPG,CAD2C,CAoBtDiC,QAmBAC,EAAA,CAAsBC,CAAtB,CAAmEpC,CAAnE,CAA4E,CACxE,MAAO,KAAIH,EAAJ,CACFuC,CAAA1I,UAAA2I,EAAD,CAAuB,CAAvB,CAAmD,CADhD,CAEHD,CAFG,CAGHpC,CAHG,CAIH,IAJG,CAKH,IALG,CADiE,CAsK5EsC,QAAAjB,GAAA,CACIkB,CADJ,CAEIpB,CAFJ,CAGI5E,CAHJ,CAII0E,CAJJ,CAKIuB,CALJ,CAKiB,CAEb,IAAA,CAAOjG,CAAP,CAAWgG,CAAA/F,OAAX,CAAyBD,CAAA,EAAzB,CAA8B,CAC1B,IAAM2E,EAAIqB,CAAA,CAAMhG,CAAN,CACO,SAAjB,GAAI,MAAO2E,EAAX,CACQH,KAAAC,QAAA,CAAcE,CAAd,CAAJ,CACIsB,CADJ,EACanB,EAAA,CAAiBH,CAAjB,CAAoBC,CAApB,CAA4B,CAA5B,CAA+BF,CAA/B,CAA2CuB,CAA3C,CAAkD,CAAlD,CADb,CACoE,CADpE,CAEiB,IAAV,GAAItB,CAAJ,CACHsB,CAAA,EADG,EAGGtB,CAAAvC,EAGN,CAHiB,GAGjB,GAFIuC,CAAAd,EAEJ,CAFaa,CAEb,CAFyBuB,CAAA,EAEzB,EAAArB,CAAAtE,KAAA,CAAYqE,CAAZ,CANG,CAHX,EAYUzB,CAEN,CAFa6B,EAAA,CAAGJ,CAAH,CAEb,CADAzB,CAAAW,EACA,CADYa,CACZ,CADwBuB,CAAA,EACxB,CAAArB,CAAAtE,KAAA,CAAY4C,CAAZ,CAdJ,CAF0B,CAoB9B,MAAO+C,EAtBM,CH14BjB,IAAIC,GAAW,CAAA,CAAf,CACItD,GAAqB,CAAA,CADzB,CAEIC,GAAgB,IAAIV,EAFxB,CAGIgE,GAAa,IAAIhE,EAsBrBiE;QAAAC,GAAA,EAAA,CACQH,EAAJ,EAEQI,qBAAA,CAAsBC,EAAtB,CAHZ,CAaAC,QAAAC,GAAA,EAAA,CACI,GAAKP,CAAAA,EAAL,CAAe,CACXA,EAAA,CAAW,CAAA,CACOG,KAAAA,EAAAA,EJ2BtBhF,GAAA,EACAb,GAAAF,KAAA,CAAiBF,CAAjB,CI9Be,CADnB;AAYAsG,QAAAH,GAAA,EAAsC,CAGlC,IAAIxG,CAAJ,CACIC,CAEJkG,GAAA,CAAW,CAAA,CACXtD,GAAA,CAAqB,CAAA,CAErB,KAAM+D,EAAQR,EACdA,GAAA,CAAatD,EACbA,GAAA,CAAgB8D,CAOhB,IHrEWjF,EGqEX,CI1CI,IAAS1B,CAAT,CAAa,CAAb,CAAgBA,CAAhB,CAAoB4G,CAAA3G,OAApB,CAAgDD,CAAA,EAAhD,CACI4G,CAAA,CAAoB5G,CAApB,CAAAuD,EAAA,EAAgC,CHjBpC,KAASvD,CAAT,CAAa,CAAb,CAAgBA,CAAhB,CAAoB+C,CAAA9C,OAApB,CAAqCD,CAAA,EAArC,CAEQ,GADW+C,CAAA8D,CAAS7G,CAAT6G,CACX,GAAJ,GACQ7G,CAAJ,GAAU+C,CAAA9C,OAAV,CACI8C,CAAA+D,IAAA,EADJ,CAGI/D,CAAA,CAAS/C,CAAA,EAAT,CAHJ,CAGoB+C,CAAA+D,IAAA,EAJxB,CDgER,GAAG,CACC,IAAA,CAAOH,CAAAvE,EAAP,CAAsB,CAAtB,CAAA,CAKI,IAJAuE,CAAAvE,EAIK,EAJW,EAIX,CAHLrC,CAGK,CAHG4G,CAAApE,EAGH,CAFLoE,CAAApE,EAEK,CAFc,IAEd,CAAAvC,CAAA,CAAI,CAAT,CAAYA,CAAZ,CAAgBD,CAAAE,OAAhB,CAA8BD,CAAA,EAA9B,CACID,CAAA,CAAMC,CAAN,CAAA,EAIR,KAAA,CAAO2G,CAAAvE,EAAP,CAAuB,CAAvB,CAAA,CAAqF,CACjF,GAAIuE,CAAAvE,EAAJ,CAAmB,CAAnB,CAII,IAHAuE,CAAAvE,EAGK,EAHW,EAGX,CAFLrC,CAEK,CAFG4G,CAAAnE,EAEH,CADLmE,CAAAnE,EACK,CADe,IACf,CAAAxC,CAAA,CAAI,CAAT,CAAYA,CAAZ,CAAgBD,CAAAE,OAAhB,CAA8BD,CAAA,EAA9B,CACID,CAAA,CAAMC,CAAN,CAAA,EAKJ,IAAI2G,CAAAvE,EAAJ,CAAmB,CAAnB,CAII,IAHAuE,CAAAvE,EAGK,EAHW,EAGX,CAFC2E,CAED,CAFmBJ,CAAAtE,EAEnB,CAAArC,CAAA,CAAI,CAAT,CAAYA,CAAZ,CAAgB+G,CAAA9G,OAAhB,CAAwCD,CAAA,EAAxC,CAA6C,CACzC,IAAMgH,EAAiBD,CAAA,CAAgB/G,CAAhB,CACvB,IAAuB,IAAvB,GAAIgH,CAAJ,CAA6B,CACzBD,CAAA,CAAgB/G,CAAhB,CAAA,CAAqB,IACrB,KAAK,IAAIiH,EAAI,CAAb,CAAgBA,CAAhB,CAAoBD,CAAA/G,OAApB,CAA2CgH,CAAA,EAA3C,CKkOTC,EAAA,CLjO6BF,CAAAG,CAAeF,CAAfE,CKiO7B,CAca,CAdb,CLpOkC,CAFY,CAf4B,CA4BrF,GHpHOzF,EGoHP,CI9EA,IAAS1B,CAAT,CAAa,CAAb,CAAgBA,CAAhB,CAAoB4G,CAAA3G,OAApB,CAAgDD,CAAA,EAAhD,CACUmH,CACN,CADkBP,CAAA,CAAoB5G,CAApB,CAClB,CAAImH,CAAA5D,EAAJ,CAAsB,GAAtB,CCqSO2D,EAAA,CDpSaC,CCoSb,CAca,CAdb,CDrSP,EAGIA,CAAA5D,EACA,EADmB,KACnB,CAAIvD,CAAJ,GAAU4G,CAAA3G,OAAV;AACI2G,CAAAE,IAAA,EADJ,CAGIF,CAAA,CAAoB5G,CAAA,EAApB,CAHJ,CAG+B4G,CAAAE,IAAA,EAPnC,CJqCL,CAAH,MA0CSH,CAAAvE,EA1CT,CA2CI,CA3CJ,CAgDAQ,GAAA,CAAqB,CAAA,CAKrB,IHlIWlB,EGkIX,CI5DI,IAAS1B,CAAT,CAAa,CAAb,CAAgBA,CAAhB,CAAoBoH,CAAAnH,OAApB,CAAwCD,CAAA,EAAxC,CAEQ,GADcoH,CAAAC,CAAYrH,CAAZqH,CACd,GAAJ,GACQrH,CAAJ,GAAUoH,CAAAnH,OAAV,CACImH,CAAAN,IAAA,EADJ,CAGIM,CAAA,CAAYpH,CAAA,EAAZ,CAHJ,CAGuBoH,CAAAN,IAAA,EAJ3B,CJ+DR,KAAA,CAAuD,CAAvD,IAAQH,CAAAvE,EAAR,CAAuB,CAAvB,EAAA,CAKI,IAJAuE,CAAAvE,EAIK,EAJW,EAIX,CAFLrC,CAEK,CAFG4G,CAAArE,EAEH,CADLqE,CAAArE,EACK,CADe,IACf,CAAAtC,CAAA,CAAI,CAAT,CAAYA,CAAZ,CAAgBD,CAAAE,OAAhB,CAA8BD,CAAA,EAA9B,CACID,CAAA,CAAMC,CAAN,CAAA,EAIR,EI3DsC,CJ2DtC,CI3DS4G,CAAA3G,OJ2DT,EI1D8B,CJ0D9B,CI1DSmH,CAAAnH,OJ0DT,GACIwG,EAAA,EN5IJpH,GAAA,EM6CkC,CA0GtCiI,QAAAxE,GAAA,EAAA,CACI2D,EAAA,EACA,OAAON,GAFX,CHtJQvE,EAAAtB,KAAA,CG8KRiH,QAAA,CAAgCC,CAAhC,CAAgD,CACxCA,CAAJ,GIhGsC,CJgGtC,CIhGSZ,CAAA3G,OJgGT,EI/F8B,CJ+F9B,CI/FSmH,CAAAnH,OJ+FT,GAEQwG,EAAA,EAHoC,CH9KxC,CSyFJvE,SAnEJuF,EAmEI,CAAYhE,CAAZ,CAAsBiE,CAAtB,CAAwCC,CAAxC,CAAyE,CACrE,IAAApE,EAAA,CAAa,CACb,KAAAqE,MAAA,CAAaD,CAAA,CAAQA,CAAAC,MAAR,CAAsB,CAAtB,CAA0B,CACvC,KAAA9D,EAAA,CAAcL,CAEd,KAAAoE,GAAA,CADA,IAAAC,EACA,CADsBJ,CAKlB,KAAAK,GAAA,CAFJ,IAAA3E,KAEI,CAFQ,IAPyD,CAiIzE,CAAA,UAAA,EAAA,CAAA4E,QAAW,EAAA,EAQX,EAAA,UAAA,EAAA,CAAAlC,QAAM,EAAA,EA5MVmC;CAAA,OAAA,iBAAA,CAAA,CAAA,UAAA,CAAA,CAAA,QA0FQ,CAAA,aAAA,CAAA,CAAA,CAAA,WAAA,CAAA,CAAA,CAAA,IAAOP,QAAP,EAAO,CACP,IAAAnE,EAAA,EAAc,EACd,OAAO,KAAAuE,EAFA,CAAP,CA1FR,CAAA,EAoGQ,CAAA,aAAA,CAAA,CAAA,CAAA,WAAA,CAAA,CAAA,CAAA,IAAKrE,QAAL,EAAK,CACL,IAAAF,EAAA,EAAc,GACd,OAAO,KAAAO,EAFF,CAAL,CApGR,CAAA,CAyOAoE,SAAAC,EAAA,CAAuChB,CAAvC,CAAkF,CAE1E,GAAIA,CAAA5D,EAAJ,CAAsB,EAAtB,GACI4D,CAAA5D,EAEM,EAzBoB6E,CAyBpB,CADNjB,CAAAa,EAAA,EACM,CAAA,EAAAb,CAAA5D,EAAA,CAAkB,IAAlB,CAHV,EAGI,CNnGR8E,IAAAA,EAAIzF,EAAJyF,CACWxF,EADXwF,CAGOvF,EAAAuF,EFvGgB,IAOT,EQiM6BlB,CRjM7B5D,EAAA,CAAkB,IAAlB,CAPS,CAOwC,CQiMpB4D,CRhM/B5D,EAAA,EAAmB,IACnB,KAAM+E,EQ+LyBnB,CR/LdS,MAGjB,KADA,CAAAxF,EACA,EADe,CACf,CAAOkG,CAAP,EAAmB,CAAAjG,EAAApC,OAAnB,CAAA,CACI,CAAAoC,EAAA/B,KAAA,CAA0B,IAA1B,CAGJ,KAAMiI,EAAQ,CAAAlG,EAAA,CAAqBiG,CAArB,CACA,KAAd,GAAIC,CAAJ,CACI,CAAAlG,EAAA,CAAqBiG,CAArB,CADJ,CACqC,CQsLNnB,CRtLM,CADrC,CAGIoB,CAAAjI,KAAA,CQoL2B6G,CRpL3B,CAb+C,CQgMvD,CALsE,CC1P9EjF,QAZJsG,GAYI,CAAY1I,CAAZ,CAAuB2I,CAAvB,CAAqC,CACjC,IAAA3I,KAAA,CAAYA,CACZ,KAAA2I,KAAA,CAAYA,CAFqB;AAwBrC,EAAA,UAAA,IAAA,CAAA3L,QAAG,CAAIuH,CAAJ,CAAmB,CAClB,IAAIM,EAAyB,IAA7B,CACI+D,CAEJ,IAAmB,QAAnB,GAAI,MAAOrE,EAAX,CAA6B,CAIzB,IAHA,IAAMsE,EAAO/L,MAAA+L,KAAA,CAAYtE,CAAZ,CAAb,CACIuE,EAAID,CAAA1I,OAER,CAAW,CAAX,CAAO2I,CAAP,EAAgBjE,CAAhB,CAAA,CAAmB,CACf,GAAIA,CAAA7E,KAAJ,CACI,IAAK,IAAIE,EAAI,CAAb,CAAgBA,CAAhB,CAAoB2I,CAAA1I,OAApB,CAAiCD,CAAA,EAAjC,CAAsC,CAClC,IAAM6I,EAAIF,CAAA,CAAK3I,CAAL,CACV,IAAI6I,CAAJ,GACIH,CACI,CADA/D,CAAA7E,KAAA,CAAO+I,CAAP,CACA,CAAMtD,IAAAA,EAAN,GAAAmD,CAFR,EAEyB,CAChBrE,CAAA,CAAYwE,CAAZ,CAAA,CAAiBlE,CAAA7E,KAAA,CAAO+I,CAAP,CAClBF,EAAA,CAAK3I,CAAL,CAAA,CAAU,IACV4I,EAAA,EACA,MAJiB,CAJS,CAc1CjE,CAAA,CAAIA,CAAA8D,KAhBW,CAmBnB,MAAOpE,EAvBkB,CA0B7B,IAAA,CAAOM,CAAP,CAAA,CAAU,CACN,GAAIA,CAAA7E,KAAJ,GACI4I,CACI,CADA/D,CAAA7E,KAAA,CAAOuE,CAAP,CACA,CAAMkB,IAAAA,EAAN,GAAAmD,CAFR,EAGQ,MAAOA,EAGf/D,EAAA,CAAIA,CAAA8D,KAPE,CA9BQ,CAiD1B,KAAaK,GAAe,IAAIN,EAAJ,CAAYjD,IAAAA,EAAZ,CCnF5BwD,SAAAC,GAAA,CAA8B9F,CAA9B,CAA6CK,CAA7C,CAAkF0F,CAAlF,CAAkG,CACzFA,CAAL,GACIA,CADJ,CACQ,EADR,CAGI1F,EAAJ,CAAY,IAAZ,CACIL,CAAAgG,aAAA,CAAkB,OAAlB,CAA2BD,CAA3B,CADJ,CAGI/F,CAAAQ,UAHJ,CAGqBuF,CAPyE;AA+BlGE,QAAAC,GAAA,CACIlG,CADJ,CAEImG,CAFJ,CAGIJ,CAHJ,CAG2B,CAGvB,IAAIN,CAAJ,CACItE,CADJ,CAEIC,CAEJ,IAAU,IAAV,GAAI+E,CAAJ,CACI,IAAU,IAAV,GAAIJ,CAAJ,CAII,IAFA3E,CAEK,CAFGpB,CAAAoB,MAEH,CADLqE,CACK,CADE/L,MAAA+L,KAAA,CAAYM,CAAZ,CACF,CAAAjJ,CAAA,CAAI,CAAT,CAAYA,CAAZ,CAAgB2I,CAAA1I,OAAhB,CAA6BD,CAAA,EAA7B,CACIqE,CACC,CADKsE,CAAA,CAAK3I,CAAL,CACL,CAAAsE,CAAA,CAAcD,CAAd,CAAA,CAAsB4E,CAAA,CAAU5E,CAAV,CAN/B,CADJ,IAUO,IAAU,IAAV,GAAI4E,CAAJ,CAIH,IAFA3E,CAEK,CAFGpB,CAAAoB,MAEH,CADLqE,CACK,CADE/L,MAAA+L,KAAA,CAAYU,CAAZ,CACF,CAAArJ,CAAA,CAAI,CAAT,CAAYA,CAAZ,CAAgB2I,CAAA1I,OAAhB,CAA6BD,CAAA,EAA7B,CAMKsE,CAAA,CAAcqE,CAAA,CAAK3I,CAAL,CAAd,CAAA,CAAyB,EAV3B,KAYA,CACHsE,CAAA,CAAQpB,CAAAoB,MACR,KAAIgF,EAAa,CAEjBX,EAAA,CAAO/L,MAAA+L,KAAA,CAAYU,CAAZ,CACP,KAAKrJ,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgB2I,CAAA1I,OAAhB,CAA6BD,CAAA,EAA7B,CAAkC,CAC9BqE,CAAA,CAAMsE,CAAA,CAAK3I,CAAL,CACN,KAAMuJ,EAAUN,CAAA,CAAU5E,CAAV,CAEDkB,KAAAA,EAAf,GAAIgE,CAAJ,EACoBF,CAAAG,CAAUnF,CAAVmF,CAIhB,GAHeD,CAGf,GAFKjF,CAAA,CAAcD,CAAd,CAEL,CAF0BkF,CAE1B,EAAAD,CAAA,EALJ,EAOKhF,CAAA,CAAcD,CAAd,CAPL,CAO0B,EAXI,CAelCsE,CAAA,CAAO/L,MAAA+L,KAAA,CAAYM,CAAZ,CAEP,KADAjJ,CACA,CADI,CACJ,CAAOsJ,CAAP,CAAoBX,CAAA1I,OAApB,EAAmCD,CAAnC,CAAuC2I,CAAA1I,OAAvC,CAAA,CACIoE,CACA,CADMsE,CAAA,CAAK3I,CAAA,EAAL,CACN,CAAKqJ,CAAAI,eAAA,CAAiBpF,CAAjB,CAAL,GACKC,CAAA,CAAcD,CAAd,CACD,CADuB4E,CAAA,CAAU5E,CAAV,CACvB,CAAAiF,CAAA,EAFJ,CAxBD,CA7BgB;AAqE3BI,QAAAC,GAAA,CAAwBzG,CAAxB,CAAuCK,CAAvC,CAA0Dc,CAA1D,CAAuEW,CAAvE,CAAmG,CAC/F,GAAcO,IAAAA,EAAd,GAAIP,CAAJ,CAAyB,CAIrB,GAAM,EAAAzB,CAAA,CAAQ,IAAR,CAAN,EACqB,CADrB,CACQc,CAAApE,OADR,CAEQ,OAAQoE,CAAR,EACI,KAAK,eAAL,CACIA,CAAA,CAAM,gBACN,MACJ,MAAK,SAAL,CACIA,CAAA,CAAM,KALd,CAgBRnB,CAAA0G,gBAAA,CAAqBvF,CAArB,CAtBqB,CAAzB,IAwBI,IAAId,CAAJ,CAAY,IAAZ,CAAmC,CAC/B,GAAiB,CAAjB,CAAIc,CAAApE,OAAJ,EAC8B,GAD9B,GACQoE,CAAAwF,WAAA,CAAe,CAAf,CADR,GAE+B,EAF/B,GAESxF,CAAAwF,WAAA,CAAe,CAAf,CAFT,EAE2D,EAF3D,GAEqCxF,CAAAwF,WAAA,CAAe,CAAf,CAFrC,EAEgE,CACxD,GAA0B,GAA1B,GAAIxF,CAAAwF,WAAA,CAAe,CAAf,CAAJ,EAAuD,GAAvD,GAAiCxF,CAAAwF,WAAA,CAAe,CAAf,CAAjC,CAA4D,CAIxD3G,CAAA4G,eAAA,ChB7IKC,sCgB6IL,CAAmC1F,CAAnC,CAAwCW,CAAxC,CACA,OALwD,CAMrD,GAA0B,GAA1B,GAAIX,CAAAwF,WAAA,CAAe,CAAf,CAAJ,EACmB,GADnB,GACHxF,CAAAwF,WAAA,CAAe,CAAf,CADG,EAEmB,GAFnB,GAEHxF,CAAAwF,WAAA,CAAe,CAAf,CAFG,EAGmB,GAHnB,GAGHxF,CAAAwF,WAAA,CAAe,CAAf,CAHG,CAGwB,CAI3B3G,CAAA4G,eAAA,ChBvJOE,8BgBuJP;AAAqC3F,CAArC,CAA0CW,CAA1C,CACA,OAL2B,CAVyB,CAuBhE9B,CAAAgG,aAAA,CAAkB7E,CAAlB,CAAuBW,CAAvB,CA1B+B,CAAnC,IA4BqB,EAAjB,CAAIX,CAAApE,OAAJ,EAC8B,EAD9B,GACQoE,CAAAwF,WAAA,CAAe,CAAf,CADR,CAOQ3G,CAAAgG,aAAA,CAAkB7E,CAAlB,CAAuBW,CAAvB,CAPR,CAYC9B,CAAA,CAAamB,CAAb,CAZD,CAYqBW,CAjEkE;AAmFnGiF,QAAAC,GAAA,CACIhH,CADJ,CAEIK,CAFJ,CAGI8F,CAHJ,CAIIJ,CAJJ,CAIoC,CAEhC,IAAIjJ,CAAJ,CACI2I,CADJ,CAEItE,CAEJ,IAAU,IAAV,GAAIgF,CAAJ,CACI,IAAU,IAAV,GAAIJ,CAAJ,CAGI,IADAN,CACK,CADE/L,MAAA+L,KAAA,CAAYM,CAAZ,CACF,CAAAjJ,CAAA,CAAI,CAAT,CAAYA,CAAZ,CAAgB2I,CAAA1I,OAAhB,CAA6BD,CAAA,EAA7B,CACIqE,CACA,CADMsE,CAAA,CAAK3I,CAAL,CACN,CAAA2J,EAAA,CAAezG,CAAf,CAAqBK,CAArB,CAA4Bc,CAA5B,CAAiC4E,CAAA,CAAE5E,CAAF,CAAjC,CALR,CADJ,IASO,IAAU,IAAV,GAAI4E,CAAJ,CAGH,IADAN,CACK,CADE/L,MAAA+L,KAAA,CAAYU,CAAZ,CACF,CAAArJ,CAAA,CAAI,CAAT,CAAYA,CAAZ,CAAgB2I,CAAA1I,OAAhB,CAA6BD,CAAA,EAA7B,CACI2J,EAAA,CAAezG,CAAf,CAAqBK,CAArB,CAA4BoF,CAAA,CAAK3I,CAAL,CAA5B,CAJD,KAMA,CACH,IAAIsJ,EAAa,CAGjBX,EAAA,CAAO/L,MAAA+L,KAAA,CAAYU,CAAZ,CACP,KAAKrJ,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgB2I,CAAA1I,OAAhB,CAA6BD,CAAA,EAA7B,CAAkC,CAC9BqE,CAAA,CAAMsE,CAAA,CAAK3I,CAAL,CACN,KAAMuJ,EAASN,CAAA,CAAE5E,CAAF,CACAkB,KAAAA,EAAf,GAAIgE,CAAJ,CACII,EAAA,CAAezG,CAAf,CAAqBK,CAArB,CAA4Bc,CAA5B,CADJ,EAGmBgF,CAAAG,CAAEnF,CAAFmF,CAIf,GAHeD,CAGf,EAFII,EAAA,CAAezG,CAAf,CAAqBK,CAArB,CAA4Bc,CAA5B,CAAiCkF,CAAjC,CAEJ,CAAAD,CAAA,EAPJ,CAH8B,CAelCX,CAAA,CAAO/L,MAAA+L,KAAA,CAAYM,CAAZ,CAEP,KADAjJ,CACA,CADI,CACJ,CAAOsJ,CAAP,CAAoBX,CAAA1I,OAApB,EAAmCD,CAAnC,CAAuC2I,CAAA1I,OAAvC,CAAA,CACIoE,CACA,CADMsE,CAAA,CAAK3I,CAAA,EAAL,CACN,CAAKqJ,CAAAI,eAAA,CAAiBpF,CAAjB,CAAL,GACIsF,EAAA,CAAezG,CAAf,CAAqBK,CAArB,CAA4Bc,CAA5B,CAAiC4E,CAAA,CAAE5E,CAAF,CAAjC,CACA,CAAAiF,CAAA,EAFJ,CAxBD,CArByB,CCnMpC,IAAaa,GACRzN,CAAD,CAAY,CAAZ,CACI,CAAE,QAAW,CAAA,CAAb,CAAmB,QAAW,CAAA,CAA9B,CADJ,CAEI,CAAA,CAHR,CAQa0N,GACR1N,CAAD,CAAY,CAAZ,CACI,CAAE,QAAW,CAAA,CAAb,CADJ,CAEI,CAAA,CAUR2N;QAAAC,GAAA,CAAgC/G,CAAhC,CAAiE,CAC7D,MAAIA,EAAJ,CAAY,CAAZ,CACQA,CAAJ,CAAY,CAAZ,CACW4G,EADX,CAGOC,EAJX,CAMI7G,CAAJ,CAAY,CAAZ,CACW,CAAA,CADX,CAGO,CAAA,CAVsD,CCKjEgH,QAAAC,GAAA,CACItH,CADJ,CAEImG,CAFJ,CAGIJ,CAHJ,CAG8B,CAE1B,IAAIjJ,CAAJ,CACI2I,CADJ,CAEItE,CAEJ,IAAU,IAAV,GAAIgF,CAAJ,CACI,IAAU,IAAV,GAAIJ,CAAJ,CAGI,IADAN,CACK,CADE/L,MAAA+L,KAAA,CAAYM,CAAZ,CACF,CAAAjJ,CAAA,CAAI,CAAT,CAAYA,CAAZ,CAAgB2I,CAAA1I,OAAhB,CAA6BD,CAAA,EAA7B,CArCRyK,EAAA,CAsCiCxB,CAAAyB,CAAE/B,CAAA,CAAK3I,CAAL,CAAF0K,CAtCjCC,EAAA,CAkCI,CADJ,IAQO,IAAU,IAAV,GAAI1B,CAAJ,CAGH,IADAN,CACK,CADE/L,MAAA+L,KAAA,CAAYU,CAAZ,CACF,CAAArJ,CAAA,CAAI,CAAT,CAAYA,CAAZ,CAAgB2I,CAAA1I,OAAhB,CAA6BD,CAAA,EAA7B,CAnCJ4K,EAAA,CAoC+BvB,CAAAqB,CAAE/B,CAAA,CAAK3I,CAAL,CAAF0K,CApC/BC,EAAA,CAgCO,KAMA,CACH,IAAIrB,EAAa,CAGjBX,EAAA,CAAO/L,MAAA+L,KAAA,CAAYU,CAAZ,CACP,KAAKrJ,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgB2I,CAAA1I,OAAhB,CAA6BD,CAAA,EAA7B,CAAkC,CAC9BqE,CAAA,CAAMsE,CAAA,CAAK3I,CAAL,CACN,KAAM6K,EAAWxB,CAAA,CAAEhF,CAAF,CACXyG,EAAAA,CAAW7B,CAAA,CAAE5E,CAAF,CACAkB,KAAAA,EAAjB,GAAIuF,CAAJ,EACQD,CAIJ,GAJiBC,CAIjB,GA7DZL,EAAA,CA0DqCK,CA1DrCH,EAAA,CASA,CAAAC,EAAA,CAkDuCC,CAlDvCF,EAAA,CAoDY,EAAArB,CAAA,EALJ,EA/CRsB,EAAA,CAsDmCC,CAtDnCF,EAAA,CA2CsC,CAgBlChC,CAAA,CAAO/L,MAAA+L,KAAA,CAAYM,CAAZ,CAEP,KADAjJ,CACA,CADI,CACJ,CAAOsJ,CAAP,CAAoBX,CAAA1I,OAApB,EAAmCD,CAAnC,CAAuC2I,CAAA1I,OAAvC,CAAA,CACIoE,CACA,CADMsE,CAAA,CAAK3I,CAAA,EAAL,CACN,CAAKqJ,CAAAI,eAAA,CAAiBpF,CAAjB,CAAL,GAxERoG,EAAA,CAyEiCxB,CAAAyB,CAAErG,CAAFqG,CAzEjCC,EAAA,CA0EY,CAAArB,CAAA,EAFJ,CAzBD,CAgCsBpG,CDnC5B,IAAA,CCmCwC,IAANqB,GAAA0E,CAAA1E,CAAagB,IAAAA,EAAbhB,CAAyB0E,CApDlC;AL4U9B8B,QAAA7D,GAAA,CAA6BC,CAA7B,CAAsD6D,CAAtD,CAA0E,CACtE,IAAMzH,EAAQ4D,CAAA5D,EAEd,IAAKA,CAAL,CAAa,EAAb,GAESA,CAFT,CAEiB,EAFjB,EAGSyH,CAHT,CAGqB,CAHrB,EAKE,CAGE,IAAMC,EAAU9D,CAAA/D,KAIZG,EAAJ,CAAa,EAAb,GACI2H,EAAA,CAAuB/D,CAAvB,CACA,CAAA6D,CAAA,EAAa,CAFjB,CAKA,IACKzH,CADL,CACc,CADd,EAGS,EAHT,IAEMA,CAFN,CAEe,EAFf,GAIKyH,CAJL,CAIiB,CAJjB,CAKE,CASQ/M,IAAAA,EAAakJ,CAAAY,GAAb9J,CACAkN,EAAUC,EAAA,CAAqBjE,CAArB,CAChBkE,EAAA,CAAmBpN,CAAnB,CAAgCgN,CAAhC,CAAyCE,CAAzC,CAAkDhE,CAAAU,GAAlD,CAAsEmD,CAAtE,CAAiF7D,CAAjF,CACAA,EAAA5D,EAAA,EAAmB,KAZrB,CALF,IAkBW0H,EAAJ,EACHK,EAAA,CAAyBnE,CAAAY,GAAzB,CAAoDkD,CAApD,CAA6D9D,CAAAU,GAA7D,CAAiFmD,CAAjF,CAA4F7D,CAA5F,CA/BN,CARoE,CA2D1EoE,QAAAC,GAAA,CACIC,CADJ,CAEIpC,CAFJ,CAGIJ,CAHJ,CAIIvB,CAJJ,CAKIsD,CALJ,CAMIrD,CANJ,CAM0B,CAEtB,IAAI+D,CACEC,EAAAA,CAAK1C,CAAArF,EAIPyF,EAAJ,GAAUJ,CAAV,EAOUgC,CAEN,CAFgB5B,CAAAhG,EAEhB,CADM8H,CACN,CADgBlC,CAAA5F,EAChB,CADsDsI,CA0WnD,CA1WuD1C,CAAAnF,EA0WvD,CA1WiE4D,CA0WjE,CAzWH,EAyWgC3C,EAAA,CAAG,EAAH,CAzWhC,CAAA2G,CAAA,CAAWL,CAAA,CAAmBI,CAAnB,CAA2BR,CAA3B,CAAoCE,CAApC,CAA6CzD,CAA7C,CAAsDsD,CAAtD,CAAiErD,CAAjE,CATf,GAWIsB,CAAA5F,EAEA,CAFcgG,CAAAhG,EAEd,CADAqI,CACA,CADWrC,CAAAlG,EACX,CAAI6H,CAAJ,CAAgB,CAAhB,EACIM,EAAA,CAAyBG,CAAzB,CAAiCxC,CAAA5F,EAAjC,CAA4DqE,CAA5D,CAAqEsD,CAArE,CAAgFrD,CAAhF,CAdR,CAqBA,OADAsB,EAAA9F,EACA,CADcuI,CA3BQ,CAoC1BE,QAAAC,GAAA,CAAqBC,CAArB,CAAsC,CAClC,IAAMvI,EAAQuI,CAAA1J,EAEd,IAAImB,CAAJ,CAAY,EAAZ,CACQA,CAAJ,CAAY,CAAZ,EACU4D,CAYN,CAZkB2E,CAAA3I,EAYlB,CARIgE,CAAA5D,EAQJ,EAFmB,EAEnB,CAAAsI,EAAA,CAAY1E,CAAA/D,KAAZ,CAbJ,EAkBIyI,EAAA,CAAYC,CAAAzI,EAAZ,CAnBR,KAuBO,IAAM,EAAAE,CAAA,CAAS,IAAT,CAAN,GACCI,CACA,CADWmI,CAAAzI,EACX,CAAa,IAAb,GAAAM,CAAA,EAAsBJ,CAAtB,CAA+B,EAFhC,EAGC,GAAIA,CAAJ,CAAY,EAAZ,CAEI,IAASvD,CAAT,CAAa,CAAb,CAAgBA,CAAhB,CAAoB2D,CAAA1D,OAApB,CAAqCD,CAAA,EAArC,CACI6L,EAAA,CAAYlI,CAAA,CAAS3D,CAAT,CAAZ,CAHR,KAMI6L,GAAA,CAAYlI,CAAZ,CAnCsB;AA8CtCoI,QAAAC,EAAA,CAAqBF,CAArB,CAAsC,CAClC,IAAMvI,EAAQuI,CAAA1J,EACd,IAAImB,CAAJ,CAAY,EAAZ,CACI,GAAIA,CAAJ,CAAY,CAAZ,CAAuC,CACnC,IAAM4D,EAAY2E,CAAA3I,EAIH6I,EAAA,CAKH7E,CAAA/D,KALG,CAMf+D,EAAA5D,EAAA,EAAmB,IAXgB,CAAvC,IAmBIyI,EAAA,CAAYF,CAAAzI,EAAZ,CApBR,KAwBO,IAAIE,CAAJ,CAAY,CAAZ,CAAgC,CACnC,GAAM,EAAAA,CAAA,CAAS,IAAT,CAAN,GACQI,CACA,CADWmI,CAAAzI,EACX,CAAa,IAAb,GAAAM,CAAA,EAAsBJ,CAAtB,CAA+B,EAFvC,EAGQ,GAAIA,CAAJ,CAAY,EAAZ,CAEI,IAASvD,CAAT,CAAa,CAAb,CAAgBA,CAAhB,CAAoB2D,CAAA1D,OAApB,CAAqCD,CAAA,EAArC,CACIgM,CAAA,CAAYrI,CAAA,CAAS3D,CAAT,CAAZ,CAHR,KAMIgM,EAAA,CAAYrI,CAAZ,CAIZ,IAAImI,CAAA9H,EAAJ,CKvcJ,ILwcqBA,IAAAA,EAAA8H,CAAA9H,EAAAA,CKzcf2E,EAAO/L,MAAA+L,KAAA,CAAYpE,CAAZ,CLycQP,CKxcZhE,EAAI,CAAb,CAAgBA,CAAhB,CAAoB2I,CAAA1I,OAApB,CAAiCD,CAAA,EAAjC,CAlFA4K,EAAA,CAmF2BrG,CAAAmG,CAAO/B,CAAA,CAAK3I,CAAL,CAAP0K,CAnF3BC,EAAA,CL2gBuC,CAmBnCmB,CAAA5H,EAAJ,EACI4H,CAAA5H,EAAA,CAAW,IAAX,CA9C8B,CAuDtC+H,QAAAC,GAAA,CAAwBC,CAAxB,CAA4C,CACxC,IAAK,IAAInM,EAAI,CAAb,CAAgBA,CAAhB,CAAoBmM,CAAAlM,OAApB,CAAmCD,CAAA,EAAnC,CACIgM,CAAA,CAAYG,CAAA,CAAOnM,CAAP,CAAZ,CAFoC;AAY5CoM,QAAAd,GAAA,CACIG,CADJ,CAEIK,CAFJ,CAGIpE,CAHJ,CAIIsD,CAJJ,CAKIrD,CALJ,CAK0B,CAEtB,IAAMpE,EAAQuI,CAAA1J,EACd,IAAImB,CAAJ,CAAY,EAAZ,CACQA,CAAJ,CAAY,CAAZ,EACU4D,CAIN,CAJkB2E,CAAA3I,EAIlB,CAD6BgE,CA4FjCW,EA3FI,GADwCJ,CACxC,GAD6BP,CA6FjC5D,EAEA,EAFmB,CAEnB,CA/FiC4D,CA+FjCW,EAAA,CA/F4CJ,CACxC,EAAAR,EAAA,CAAiBC,CAAjB,CAA4B6D,CAA5B,CALJ,EAcoB,CAAhB,CANWc,CAAAlI,EAMP3D,OAAJ,CACIqL,EAAA,CACIG,CADJ,CAEIK,CAAAzI,EAFJ,CAGIqE,CAHJ,CAIIsD,CAJJ,CAKIrD,CALJ,CADJ,CAQI6D,EAAA,CACIC,CADJ,CAEIK,CAAAzI,EAFJ,CAGIyI,CAAAzI,EAHJ,CAIIqE,CAJJ,CAKIsD,CALJ,CAMIrD,CANJ,CAvBZ,KAkCO,IAAM,EAAApE,CAAA,CAAS,IAAT,CAAN,GACCI,CACA,CADWmI,CAAAzI,EACX,CAAa,IAAb,GAAAM,CAAA,EAAsBJ,CAAtB,CAA+B,EAFhC,EAGC,GAAIA,CAAJ,CAAY,EAAZ,CAEI,IAASvD,CAAT,CAAa,CAAb,CAAgBA,CAAhB,CAAoB2D,CAAA1D,OAApB,CAAqCD,CAAA,EAArC,CACIsL,EAAA,CAAyBG,CAAzB,CAAiC9H,CAAA,CAAS3D,CAAT,CAAjC,CAA8C0H,CAA9C,CAAuDsD,CAAvD,CAAkErD,CAAlE,CAHR,KAMI2D,GAAA,CAAyBG,CAAzB,CAAiC9H,CAAjC,CAAyD+D,CAAzD,CAAkEsD,CAAlE,CAA6ErD,CAA7E,CA9CU,CAoF1B0E,QAAAC,GAAA,CAA0Bb,CAA1B,CAAwCvI,CAAxC,CAAwD,CACpDuI,CAAAc,YAAA,CAAmBtJ,CAAA,CAAwBC,CAAxB,CAAnB,CACA8I,EAAA,CAAY9I,CAAZ,CAFoD,CA+BxDsJ,QAAAtB,GAAA,CAAmC/D,CAAnC,CAA0D,CACtDA,CAAA5D,EAAA,EAAmB,IAEnB4D,EAAA5D,EAAA,GAAoB4D,CAAA5D,EAApB,CAAsC,GAAtC,GAAyE,CAEzE4D,EAAAU,GAAA,CADsFV,CAAAW,EAJhC,CA0F1D2E,QAAArB,GAAA,CAAiCjE,CAAjC,CAAwD,CACpDA,CAAA5D,EAAA,EAAmB,GACnB,KAAMH,EAAO+D,CAAA/D,KAAPA,CAAwB+D,CAAArB,EAAA,EAAxB1C,EAA8C2B,EAAA,CAAG,EAAH,CACpDoC,EAAA5D,EAAA,GAAoB4D,CAAA5D,EAApB,CAAsC,EAAtC,GAA2E,CAC3E,OAAOH,EAJ6C;AA8CxDsJ,QAAAC,GAAA,CAAqBlB,CAArB,CAAmCK,CAAnC,CAAsDpE,CAAtD,CAAwEC,CAAxE,CAA8F,CAC3E,IAYTpE,EAAQuI,CAAA1J,EAZC,CAaXsJ,CAbW,CAeX1L,CAfW,CAgBX4M,CAEJ,IAAIrJ,CAAJ,CAAa,CAAb,CAKI,GAAIA,CAAJ,CAAY,CAAZ,CAGImI,CAAA,CAAW3M,QAAA+B,eAAA,CAAwBgL,CAAAzI,EAAxB,CAHf,KA4CI,IAnCIE,CAAJ,CAAY,IAAZ,CACImI,CADJ,CACgBI,CAAAlI,EAAA5E,cAAA,EADhB,CAEWuE,CAAJ,CAAY,GAAZ,CACCA,CAAJ,CAAY,IAAZ,CACImI,CADJ,CACe3M,QAAAC,cAAA,CAAuB,UAAvB,CADf,EAGI0M,CAOC,CAPU3M,QAAAC,cAAA,CAAuB,OAAvB,CAOV,CAAA0M,CAAAhG,KAAA,CAAqCoG,CAAAlI,EAV1C,CADG,CAcH8H,CAdG,CAaInI,CAAJ,CAAY,IAAZ,CACQxE,QAAA8N,gBAAA,Cbl3BEC,4Bak3BF,CAAwChB,CAAAlI,EAAxC,CADR,CAGQ7E,QAAAC,cAAA,CAAuB8M,CAAAlI,EAAvB,CAiBX,CAdAkI,CAAAhI,EAcA,EAbAoG,EAAA,CAAawB,CAAb,CAAkCnI,CAAlC,CAAyC,IAAzC,CAA+CuI,CAAAhI,EAA/C,CAaA,CAXqB,IAWrB,GAXAgI,CAAA/H,EAWA,EAVAiF,EAAA,CAAc0C,CAAd,CAAmCnI,CAAnC,CAAgDuI,CAAA/H,EAAhD,CAUA,CARiB,IAQjB,GARA+H,CAAA7H,EAQA,EAPAmF,EAAA,CAAUsC,CAAV,CAAmC,IAAnC,CAAyCI,CAAA7H,EAAzC,CAOA,CALA6H,CAAA9H,EAKA,EAJAwG,EAAA,CAAWkB,CAAX,CAAgC,IAAhC,CAAsCI,CAAA9H,EAAtC,CAIA,CADAL,CACA,CADWmI,CAAAzI,EACX,CAAa,IAAb,GAAAM,CAAJ,CACI,GAAIJ,CAAJ,CAAa,EAAb,CACI,GAAIA,CAAJ,CAAY,EAAZ,CACImI,CAAAqB,YAAA,CAAuBpJ,CAD3B,KAII,KAAK3D,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgB2D,CAAA1D,OAAhB,CAAiCD,CAAA,EAAjC,CACI4M,CAGA,CAHQjJ,CAAA,CAAS3D,CAAT,CAGR,CAFAgN,CAEA,CAFgBL,EAAA,CAAYjB,CAAZ,CAAsBkB,CAAtB,CAA6BlF,CAA7B,CAAsCC,CAAtC,CAEhB;AAAA+D,CAAAuB,aAAA,CACKL,CAAAxK,EAAD,CAAgB,CAAhB,CC3erBa,CAAA,CD4eqD+J,CC5e1B5J,KAA3B,CD2eqB,CAEI4J,CAHR,CAII,IAJJ,CATZ,KAgBWzJ,EAAJ,CAAY,EAAZ,EACHqJ,CAEA,CAFQjJ,CAER,CADAqJ,CACA,CADgBL,EAAA,CAAYjB,CAAZ,CAAsBkB,CAAtB,CAA6BlF,CAA7B,CAAsCC,CAAtC,CAChB,CAAA+D,CAAAuB,aAAA,CACKL,CAAAxK,EAAD,CAAgB,CAAhB,CCrfba,CAAA,CDsf6C+J,CCtflB5J,KAA3B,CDqfa,CAEI4J,CAHR,CAII,IAJJ,CAHG,EAQIzJ,CAAJ,CAAY,GAAZ,EAOemI,CApHlC,CAoHkCA,CApHlC,CAAqB,QAArB,GAAI,MAoH4D/H,EApHhE,CACIuJ,CAAAlI,MADJ,CAoHgErB,CApHhE,CAGIuJ,CAAAjI,QAHJ,CAoHgEtB,CAP7C,EASHnF,EAAA,CAAckN,CAAd,CAAoC/H,CAApC,CAAwD,CAAG,EAAAJ,CAAA,CAAQ,IAAR,CAA3D,CAlCR,CAjDR,IA0FQA,EAAJ,CAAY,CAAZ,EACU4D,CAYN,CAZkBuE,CAYlB,CAZ6B,IAAKI,CAAAlI,EAAL,CAAwCkI,CAAAhI,EAAxC,CAAsD4D,CAAtD,CAA+DC,CAA/D,CAY7B,CAPIR,CAAAY,GAOJ,CAH2B0D,CAG3B,CAFAP,EAAA,CAAuB/D,CAAvB,CAEA,CADM/D,CACN,CADagI,EAAA,CAAqBjE,CAArB,CACb,CAAAwF,EAAA,CAAYlB,CAAZ,CAAoBrI,CAApB,CAA0B+D,CAAAU,GAA1B,CAA8CV,CAA9C,CAbJ,GAkBU/D,CAEN,CAFa0I,CAAAzI,EAEb,CA7JD,GA4J6ByI,CAAAlI,EA5J7B,EA4JmEkI,CAAAhI,EA5JnE,CA4JiF4D,CA5JjF,CA6JC,EA7J4B3C,EAAA,CAAG,EAAH,CA6J5B,CAAA2G,CAAA,CAAWiB,EAAA,CAAYlB,CAAZ,CAAoBrI,CAApB,CAA0BsE,CAA1B,CAAmCC,CAAnC,CApBf,CA0BJmE,EAAA3I,EAAA,CAAkBuI,CACdI,EAAA5H,EAAJ,EACI4H,CAAA5H,EAAA,CAAWwH,CAAX,CAGJ,OAAOA,EA5ImF,CA6J9FyB,QAAAC,EAAA,CACIC,CADJ,CAEIC,CAFJ,CAGIxB,CAHJ,CAIIpE,CAJJ,CAKIC,CALJ,CAK0B,CAEhB+D,CAAAA,CAAWiB,EAAA,CAAYU,CAAZ,CAAuBvB,CAAvB,CAA8BpE,CAA9B,CAAuCC,CAAvC,CACjB0F,EAAAJ,aAAA,CAAuBhK,CAAA,CAAwB6I,CAAxB,CAAvB,CAAyDwB,CAAzD,CACAzB,GAAA,CAAYC,CAAZ,CACA,OAAOJ,EALe,CA6N1B6B,QAAAC,GAAA,CAAwBnE,CAAxB,CAAuCJ,CAAvC,CAAoD,CAChD,MACII,EAAAxF,EADJ,GACeoF,CAAApF,EADf,GAEKwF,CAAAjH,EAFL,CAEgB,GAFhB,KAEqC6G,CAAA7G,EAFrC,CAEgD,GAFhD,CADgD;AA0GpDqL,QAAApC,EAAA,CACII,CADJ,CAEIpC,CAFJ,CAGIJ,CAHJ,CAIIvB,CAJJ,CAKIsD,CALJ,CAMIrD,CANJ,CAM0B,CAEtB,IAAiB0B,CA/HZjH,EA+HL,CA/HgB,KA+HhB,KAAoB6G,CA/HsB7G,EA+H1C,CA/HqD,KA+HrD,GAAiBiH,CA9HbzF,EA8HJ,GAAoBqF,CA9HLrF,EA8Hf,EAAiByF,CA7HbxF,EA6HJ,GAAoBoF,CA7HLpF,EA6Hf,CAAwB,CArFT,IAYTN,EA0EuB8F,CA1EfjH,EAZC,CAaXsJ,EAyE4BzC,CAzEjB9F,EAAXuI,CAyEyBrC,CAzEAlG,EAE7B,IAAII,CAAJ,CAAa,CAAb,CACI,GAAIA,CAAJ,CAAY,CAAZ,CAsEyB8F,CArEjBhG,EAAJ,GAqEwB4F,CArEJ5F,EAApB,GACKqI,CAAAjK,UADL,CAqEwBwH,CApEW5F,EADnC,CADJ,KAkBI,IAoDqBgG,CAjEjBvF,EAaA,GAoDoBmF,CAjEPnF,EAab,EAZAoG,EAAA,CAAawB,CAAb,CAAkCnI,CAAlC,CAgEiB8F,CAhEwBvF,EAAzC,CAgEoBmF,CAhE+BnF,EAAnD,CAYA,CAoDiBuF,CA9DjBtF,EAUA,GAoDoBkF,CA9DHlF,EAUjB,EATAiF,EAAA,CAAc0C,CAAd,CAAmCnI,CAAnC,CA6DoB0F,CA7DoClF,EAAxD,CASA,CAoDiBsF,CA3DjBpF,EAOA,GAoDoBgF,CA3DPhF,EAOb,EANAmF,EAAA,CAAUsC,CAAV,CA0DiBrC,CA1DkBpF,EAAnC,CA0DoBgF,CA1DyBhF,EAA7C,CAMA,CAoDiBoF,CAxDjBrF,EAIA,GAoDoBiF,CAxDNjF,EAId,EAHAwG,EAAA,CAAWkB,CAAX,CAuDiBrC,CAvDmBrF,EAApC,CAuDoBiF,CAvD2BjF,EAA/C,CAGA,CAoDiBqF,CApDjBhG,EAAA,GAoDoB4F,CApDJ5F,EAApB,CAAA,CAEQqI,CAAAA,CAAAA,CACAtJ,KAAAA,EAiDaiH,CAjDbjH,EAAAA,CACAA,EAgDgB6G,CAhDhB7G,EADAA,CAEAiB,EA+CagG,CA/CbhG,EACAA,EAAAA,CA8CgB4F,CA9ChB5F,EAiFhB,IAAU,IAAV,GAAIgG,CAAJ,CACI,GAAIqE,CAAJ,CAAoB,EAApB,CACI,GAAIA,CAAJ,CAAmB,EAAnB,CACIjC,CAAAsB,YAAA,CAAqB9D,CADzB,KAII,KAAKjJ,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgBiJ,CAAAhJ,OAAhB,CAA0BD,CAAA,EAA1B,CACIoN,CAAA,CAAgB3B,CAAhB,CAAwB,IAAxB,CAA8BxC,CAAA,CAAEjJ,CAAF,CAA9B,CA1CmB0H,CA0CnB,CA1CuCC,CA0CvC,CANZ,KASW+F,EAAJ,CAAmB,EAAnB,CACHN,CAAA,CAAgB3B,CAAhB,CAAwB,IAAxB,CAA8BxC,CAA9B,CA9C2BvB,CA8C3B,CA9C+CC,CA8C/C,CADG,CAEI+F,CAAJ,CAAmB,GAAnB,CAjjBU,QAArB,GAAI,MAkjBkDzE,EAljBtD,CAkjB0BwC,CAjjBtBzG,MADJ,CAkjBsDiE,CAljBtD,CAkjB0BwC,CA/iBtBxG,QAHJ,CAkjBsDgE,CAD3C,CAGHzK,EAAA,CAAaiN,CAAb,CAAgCxC,CAAhC,CAA6C,CAAG,EAAAyE,CAAA,CAAe,IAAf,CAAhD,CAfR,KAiBO,IAAU,IAAV,GAAIzE,CAAJ,CACC0E,CAAJ,CAAoB,GAApB,CACIlC,CAAAsB,YADJ;AACyB,EADzB,CAEWY,CAAJ,CAAmB,EAAnB,EACoBlC,CA7tB/BsB,YACA,CADqB,EACrB,CAAAb,EAAA,CA4tBuC7C,CA5tBvC,CA2tBW,EAEIsE,CAFJ,CAEmB,EAFnB,EAGHrB,EAAA,CAAiBb,CAAjB,CAAyBpC,CAAzB,CAND,KAaH,IAAIsE,CAAJ,CAAoB,GAApB,CACI,GAAID,CAAJ,CAAoB,GAApB,CACQA,CAAJ,CAAmB,EAAnB,CAEI,CADM7H,CACN,CADU4F,CAAAxM,WACV,EACI4G,CAAApE,UADJ,CACkBwH,CADlB,CAGIwC,CAAAsB,YAHJ,CAGyB9D,CAL7B,CAQIzK,EAAA,CAAciN,CAAd,CAAkCxC,CAAlC,CAA+C,CAAG,EAAAyE,CAAA,CAAe,IAAf,CAAlD,CATR,KAaI,IADAjC,CAAAsB,YACI,CADiB,EACjB,CAAAW,CAAA,CAAe,EAAnB,CAEI,IAAK1N,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgBiJ,CAAAhJ,OAAhB,CAA0BD,CAAA,EAA1B,CACIoN,CAAA,CAAgB3B,CAAhB,CAAwB,IAAxB,CAA8BxC,CAAA,CAAEjJ,CAAF,CAA9B,CAlFe0H,CAkFf,CAlFmCC,CAkFnC,CAHR,KAMIyF,EAAA,CAAgB3B,CAAhB,CAAwB,IAAxB,CAA8BxC,CAA9B,CArFmBvB,CAqFnB,CArFuCC,CAqFvC,CApBZ,KAuBO,IAAIgG,CAAJ,CAAmB,EAAnB,CAEH,GAAID,CAAJ,CAAoB,GAApB,CACQA,CAAJ,CAAmB,EAAnB,CACIjC,CAAAsB,YADJ,CACyB9D,CADzB,CAGIzK,EAAA,CAAaiN,CAAb,CAAgCxC,CAAhC,CAA6C,CAAG,EAAAyE,CAAA,CAAe,IAAf,CAAhD,CAEJ,CAAAxB,EAAA,CAAe7C,CAAf,CANJ,KAOO,IAAIqE,CAAJ,CAAmB,EAAnB,CAEH,GAAiB,CAAjB,GAAIrE,CAAApJ,OAAJ,CACI,IAAKD,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgBiJ,CAAAhJ,OAAhB,CAA0BD,CAAA,EAA1B,CACIoN,CAAA,CAAgB3B,CAAhB,CAAwB,IAAxB,CAA8BxC,CAAA,CAAEjJ,CAAF,CAA9B,CArGe0H,CAqGf,CArGmCC,CAqGnC,CAFR,KAKI,IAAiB,CAAjB,GAAIsB,CAAAhJ,OAAJ,CAC2BwL,CA9wB3CsB,YACA,CADqB,EACrB,CAAAb,EAAA,CA6wBmD7C,CA7wBnD,CA4wBgB,KAEO,IAAiB,CAAjB,GAAIA,CAAApJ,OAAJ,EAAmC,CAAnC,GAAsBgJ,CAAAhJ,OAAtB,CACHoL,CAAA,CAAmBI,CAAnB,CAA2BpC,CAAA,CAAE,CAAF,CAA3B,CAAiCJ,CAAA,CAAE,CAAF,CAAjC,CA3GevB,CA2Gf,CA3GwBsD,CA2GxB,CA3GmCrD,CA2GnC,CADG,KAAA,CA2TvB,IAAIiG,EAAS,CACTC,EAAAA,CAAS,CACb,KAAIC,EA1TgDzE,CA0TzCpJ,OAAP6N;AAAkB,CAAtB,CACIC,EA3TmD9E,CA2T5ChJ,OAAP8N,CAAkB,CADtB,CAEIC,EA5TgD3E,CA4TnC,CAAEuE,CAAF,CAFjB,CAGIK,EA7TmDhF,CA6TtC,CAAE4E,CAAF,CAHjB,CAIIK,EA9TgD7E,CA8TrC,CAAEyE,CAAF,CAJf,CAKIK,EA/TmDlF,CA+TxC,CAAE8E,CAAF,CALf,CAUIK,CAVJ,CAWIC,EAIJ,EAAA,CAAO,IAAA,CAAA,CAAA,CAAa,CAEhB,IAAA,CAAOb,EAAA,CAAeQ,CAAf,CAA2BC,CAA3B,CAAP,CAAA,CAA+C,CAC3C5C,CAAA,CA5UoCI,CA4UpC,CAA2BuC,CAA3B,CAAuCC,CAAvC,CAzb2BvG,CAyb3B,CAzboCsD,CAybpC,CAzb+CrD,CAyb/C,CACAiG,EAAA,EACAC,EAAA,EACA,IAAID,CAAJ,CAAaE,CAAb,EAAqBD,CAArB,CAA8BE,CAA9B,CACI,MAAM,CAEVC,EAAA,CAlV4C3E,CAkV/B,CAAEuE,CAAF,CACbK,EAAA,CAnV+ChF,CAmVlC,CAAE4E,CAAF,CAR8B,CAY/C,IAAA,CAAOL,EAAA,CAAeU,CAAf,CAAyBC,CAAzB,CAAP,CAAA,CAA2C,CACvC9C,CAAA,CAxVoCI,CAwVpC,CAA2ByC,CAA3B,CAAqCC,CAArC,CArc2BzG,CAqc3B,CArcoCsD,CAqcpC,CArc+CrD,CAqc/C,CACAmG,EAAA,EACAC,EAAA,EACA,IAAIH,CAAJ,CAAaE,CAAb,EAAqBD,CAArB,CAA8BE,CAA9B,CACI,MAAM,CAEVG,EAAA,CA9V4C7E,CA8VjC,CAAEyE,CAAF,CACXK,EAAA,CA/V+ClF,CA+VpC,CAAE8E,CAAF,CAR4B,CAY3C,GAAIP,EAAA,CAAeU,CAAf,CAAyBD,CAAzB,CAAJ,CACI5C,CAAA,CApWoCI,CAoWpC,CAA2ByC,CAA3B,CAAqCD,CAArC,CAjd2BvG,CAid3B,CAjdoCsD,CAidpC,CAjd+CrD,CAid/C,CAgBA,CApXoC8D,CA9xB5CwB,aAAA,CAAoBhK,CAAA,CAmoCWgL,CAnoCX,CAApB,CAmoC2ChL,CAAAqL,CAAwBN,CAAxBM,CAnoC3C,CAkpCQ,CAdAR,CAAA,EAcA,CAbAD,CAAA,EAaA,CADAK,CACA,CApX4C7E,CAmXjC,CAAEyE,CAAF,CACX,CAAAG,CAAA,CApX+ChF,CAoXlC,CAAE4E,CAAF,CAjBjB,KAwBA,IAAIL,EAAA,CAAeQ,CAAf,CAA2BG,CAA3B,CAAJ,CACI9C,CAAA,CA5XoCI,CA4XpC,CAA2BuC,CAA3B,CAAuCG,CAAvC,CAze2BzG,CAye3B,CAzeoCsD,CAyepC,CAze+CrD,CAye/C,CAOA,CANA4G,CAMA,CANUR,CAMV,CANiB,CAMjB,CALAS,CAKA,CALOD,CAAA,CA9XwCtF,CA8X9BhJ,OAAV,CAAqBgD,CAAA,CA9XmBgG,CA8XK,CAAEsF,CAAF,CAAxB,CAArB,CAA2D,IAKlE,CAnYoC9C,CA9xB5CwB,aAAA,CAAoBhK,CAAA,CA6pCWkL,CA7pCX,CAApB,CA6pCyCK,CA7pCzC,CAiqCQ,CAHAZ,CAAA,EAGA,CAFAG,CAAA,EAEA,CADAC,CACA,CAnY4C3E,CAkY/B,CAAEuE,CAAF,CACb,CAAAO,CAAA,CAnY+ClF,CAmYpC,CAAE8E,CAAF,CARf,KAYA,MA9DgB,CAiEpB,GAAIH,CAAJ,CAAaE,CAAb,CAII,IAFAS,CACA,CADUR,CACV,CADiB,CACjB,CAAAS,CAAA,CAAOD,CAAA,CA7Y4CtF,CA6YlChJ,OAAV,CAAqBgD,CAAA,CA7YuBgG,CA6YC,CAAEsF,CAAF,CAAxB,CAArB,CAA2D,IAClE,CAAOV,CAAP,EAAiBE,CAAjB,CAAA,CACIX,CAAA,CA/YoC3B,CA+YpC,CAAwB+C,CAAxB,CA/Y+CvF,CA+YjB,CAAE4E,CAAA,EAAF,CAA9B,CA5f2BnG,CA4f3B,CA5f+CC,CA4f/C,CALR,KAOO,IAAIkG,CAAJ,CAAaE,CAAb,CAEH,IAAA,CAAOH,CAAP,EAAiBE,CAAjB,CAAA,CACIxB,EAAA,CApZoCb,CAoZpC,CApZ4CpC,CAoZnB,CAAEuE,CAAA,EAAF,CAAzB,CAHD,KAMA,CACH,IAAIa;AAAUX,CAAVW,CAAiBb,CAAjBa,CAA0B,CAA9B,CACIC,EAAUX,CAAVW,CAAiBb,CAAjBa,CAA0B,CAD9B,CAIMC,EAAcnK,KAAJ,CAAkBkK,CAAlB,CAAAE,KAAA,CAAiC,EAAjC,CAJhB,CAMIC,GAAQ,CAAA,CANZ,CAOIC,EAAM,CAPV,CAQIC,EAAS,CAGb,IAAgB,CAAhB,EAAKL,CAAL,EAA8C,EAA9C,EAAwBD,EAAxB,CAAkCC,CAAlC,CACI,IAAK1O,CAAL,CAAS4N,CAAT,CAAiB5N,CAAjB,EAAsB8N,CAAtB,CAA4B9N,CAAA,EAA5B,CAEI,IADAoO,CACI,CAtaoC/E,CAqahC,CAAErJ,CAAF,CACJ,CAAA+O,CAAA,CAASL,CAAb,CACI,IAAKzH,CAAL,CAAS4G,CAAT,CAAiB5G,CAAjB,EAAsB8G,CAAtB,CAA4B9G,CAAA,EAA5B,CAEI,GADAoH,EACI,CAza+BpF,CAwa3B,CAAEhC,CAAF,CACJ,CAAAuG,EAAA,CAAeY,CAAf,CAAsBC,EAAtB,CAAJ,CAAkC,CAC9BM,CAAA,CAAQ1H,CAAR,CAAY4G,CAAZ,CAAA,CAAsB7N,CAElB8O,EAAJ,CAAU7H,CAAV,CACI4H,EADJ,CACY,CAAA,CADZ,CAGIC,CAHJ,CAGU7H,CAEVoE,EAAA,CAjboBI,CAibpB,CAA2B2C,CAA3B,CAAkCC,EAAlC,CA9hBW3G,CA8hBX,CA9hBoBsD,CA8hBpB,CA9hB+BrD,CA8hB/B,CACAoH,EAAA,EAlb4B1F,EAmb5B,CAAUrJ,CAAV,CAAA,CAAe,IACf,MAX8B,CAH1C,CAHR,IAsBO,CAIH,IAHA,IAAIgP,CAAJ,CACIC,CADJ,CAGKjP,EAAI6N,CAAT,CAAiB7N,CAAjB,EAAsB+N,CAAtB,CAA4B/N,CAAA,EAA5B,CACIkD,CACA,CA/b2C+F,CA8bpC,CAAEjJ,CAAF,CACP,CAAIkD,CAAAd,EAAJ,CAAkB,GAAlB,EACqBmD,IAAAA,EAGjB,GAHIyJ,CAGJ,GAFIA,CAEJ,CAFe,IAAIE,GAEnB,EAAAF,CAAAG,IAAA,CAAajM,CAAAW,EAAb,CAAwB7D,CAAxB,CAJJ,GAM6BuF,IAAAA,EAGzB,GAHI0J,CAGJ,GAFIA,CAEJ,CAFuB,IAAIC,GAE3B,EAAAD,CAAAE,IAAA,CAAqBjM,CAAAW,EAArB,CAAgC7D,CAAhC,CATJ,CAaJ,KAAKA,CAAL,CAAS4N,CAAT,CAAiB5N,CAAjB,EAAsB8N,CAAtB,CAA4B9N,CAAA,EAA5B,CACIoO,CAEA,CA/cwC/E,CA6chC,CAAErJ,CAAF,CAER,CAAI+O,CAAJ,CAAaL,CAAb,GAEQzH,CAOJ,CARiB1B,IAAAA,EAAjB,GAAIyJ,CAAJ,EAA+BZ,CAAAhM,EAA/B,CAA8C,GAA9C,CACQ4M,CAAAlS,IAAA,CAAasR,CAAAvK,EAAb,CADR,CAEgC0B,IAAAA,EAAzB,GAAI0J,CAAJ,CACCA,CAAAnS,IAAA,CAAqBsR,CAAAvK,EAArB,CADD,CAGC0B,IAAAA,EAGR,CAAUA,IAAAA,EAAV,GAAI0B,CAAJ,GACIoH,EASA,CAlemCpF,CAyd3B,CAAEhC,CAAF,CASR,CARA0H,CAAA,CAAQ1H,CAAR,CAAY4G,CAAZ,CAQA,CARsB7N,CAQtB,CAPI8O,CAAJ,CAAU7H,CAAV,CACI4H,EADJ,CACY,CAAA,CADZ,CAGIC,CAHJ,CAGU7H,CAIV,CAFAoE,CAAA,CAhewBI,CAgexB,CAA2B2C,CAA3B,CAAkCC,EAAlC,CA7kBe3G,CA6kBf,CA7kBwBsD,CA6kBxB,CA7kBmCrD,CA6kBnC,CAEA,CADAoH,CAAA,EACA,CAlegC1F,CAkehC,CAAUrJ,CAAV,CAAA,CAAe,IAVnB,CATJ,CAtBD,CA+CP,GAAIyO,EAAJ,GAxegDpF,CAwehCpJ,OAAhB;AAAuC,CAAvC,GAA4B8O,CAA5B,CAGI,IA3eoCtD,CAlxB5CsB,YACA,CADqB,EACrB,CAAAb,EAAA,CAixBoD7C,CAjxBpD,CA4vCQ,CAAOwE,CAAP,CAAgBa,CAAhB,CAAA,CACItB,CAAA,CA5egC3B,CA4ehC,CAAwB,IAAxB,CA5e2CxC,CA4eb,CAAE4E,CAAA,EAAF,CAA9B,CAzlBuBnG,CAylBvB,CAzlB2CC,CAylB3C,CAJR,KAMO,CAEH,IADA3H,CACA,CADIyO,EACJ,CADcM,CACd,CAAW,CAAX,CAAO/O,CAAP,CAAA,CACIoO,CACA,CAlfwC/E,CAifhC,CAAUuE,CAAA,EAAV,CACR,CAAc,IAAd,GAAIQ,CAAJ,GACI9B,EAAA,CAnf4Bb,CAmf5B,CAAyB2C,CAAzB,CACA,CAAApO,CAAA,EAFJ,CAOJ,IAAI6O,EAAJ,CAAW,CA+CbO,CAAAA,CA9CsBT,CA8ClB9J,MAAA,CAAQ,CAAR,CACJD,EAAAA,CAAmB,EACzBA,EAAAtE,KAAA,CAAY,CAAZ,CAISN,EAAAA,CAAI,CAAb,KAAgBqP,CAAhB,CApD4BV,CAoDP1O,OAArB,CAA+BD,CAA/B,CAAmCqP,CAAnC,CAAuCrP,CAAA,EAAvC,CACI,GAAc,EAAd,GArDwB2O,CAqDpB,CAAE3O,CAAF,CAAJ,CAKA,GADIiH,CACA,CADIrC,CAAA,CAAOA,CAAA3E,OAAP,CAAuB,CAAvB,CACJ,CA1DoB0O,CA0DpB,CAAE1H,CAAF,CAAA,CA1DoB0H,CA0Db,CAAE3O,CAAF,CAAX,CACIoP,CAAA,CAAEpP,CAAF,CACA,CADOiH,CACP,CAAArC,CAAAtE,KAAA,CAAYN,CAAZ,CAFJ,KAAA,CAMAsP,CAAA,CAAI,CAGJ,KAFA5G,CAEA,CAFI9D,CAAA3E,OAEJ,CAFoB,CAEpB,CAAOqP,CAAP,CAAW5G,CAAX,CAAA,CACQ7C,CACJ,EADUyJ,CACV,CADc5G,CACd,EADmB,CACnB,CADwB,CACxB,CArEoBiG,CAqEhB,CAAE/J,CAAA,CAAOiB,CAAP,CAAF,CAAJ,CArEoB8I,CAqED,CAAE3O,CAAF,CAAnB,CACIsP,CADJ,CACQzJ,CADR,CACY,CADZ,CAGI6C,CAHJ,CAGQ7C,CAxEY8I,EA4EpB,CAAE3O,CAAF,CAAJ,CA5EwB2O,CA4Eb,CAAE/J,CAAA,CAAO0K,CAAP,CAAF,CAAX,GACY,CAGR,CAHIA,CAGJ,GAFIF,CAAA,CAAEpP,CAAF,CAEJ,CAFW4E,CAAA,CAAO0K,CAAP,CAAW,CAAX,CAEX,EAAA1K,CAAA,CAAO0K,CAAP,CAAA,CAAYtP,CAJhB,CAlBA,CA0BJsP,CAAA,CAAI1K,CAAA3E,OAGJ,KAFAyI,CAEA,CAFI9D,CAAA,CAAO0K,CAAP,CAAW,CAAX,CAEJ,CAAa,CAAb,CAAOA,CAAA,EAAP,CAAA,CACI1K,CAAA,CAAO0K,CAAP,CACA,CADY5G,CACZ,CAAAA,CAAA,CAAI0G,CAAA,CAAE1G,CAAF,CAxFIzB,EAAA,CA2FLrC,CA3FS3E,OAAJ,CAAiB,CACjB,KAAKD,CAAL,CAAS0O,CAAT,CAAmB,CAAnB,CAA2B,CAA3B,EAAsB1O,CAAtB,CAA8BA,CAAA,EAA9B,CACwB,EAApB,GAAI2O,CAAA,CAAQ3O,CAAR,CAAJ,EACI8O,CAIA,CAJM9O,CAIN,CAJU6N,CAIV,CAHA3K,CAGA,CAlgBmC+F,CA+f5B,CAAE6F,CAAF,CAGP,CAFAP,CAEA,CAFUO,CAEV,CAFgB,CAEhB,CADAN,CACA,CADOD,CAAA,CAjgB4BtF,CAigBlBhJ,OAAV,CAAqBgD,CAAA,CAjgBOgG,CAigBiB,CAAEsF,CAAF,CAAxB,CAArB,CAA2D,IAClE,CAAAnB,CAAA,CAlgBwB3B,CAkgBxB,CAAwB+C,CAAxB,CAA8BtL,CAA9B,CA/mBewE,CA+mBf,CA/mBmCC,CA+mBnC,CALJ,EAOY,CAAR,CAAIV,CAAJ,EAAajH,CAAb,GAkFb4E,CAlFgC,CAAIqC,CAAJ,CAAnB;CACI6H,CAnyCxB,CAmyC8B9O,CAnyC9B,CAmyCkC6N,CAnyClC,CAoyCwB3K,CApyCxB,CA8xBuD+F,CAsgBxB,CAAE6F,CAAF,CApyC/B,CAqyCwBP,CAryCxB,CAqyCkCO,CAryClC,CAqyCwC,CAryCxC,CAsyCwBN,CAtyCxB,CAsyC+BD,CAAA,CAxgBwBtF,CAwgBdhJ,OAAV,CAAqBgD,CAAA,CAxgBGgG,CAwgBqB,CAAEsF,CAAF,CAAxB,CAArB,CAA2D,IAtyC1F,CA8xB4C9C,CA9xB5CwB,aAAA,CAAoBhK,CAAA,CAuyC2BC,CAvyC3B,CAApB,CAuyCqDsL,CAvyCrD,CAkyCoB,EAOIvH,CAAA,EAlBL,CAAX,IAsBO,IAAI8H,CAAJ,GAAeL,CAAf,CACH,IAAK1O,CAAL,CAAS0O,CAAT,CAAmB,CAAnB,CAA2B,CAA3B,EAAsB1O,CAAtB,CAA8BA,CAAA,EAA9B,CACwB,EAApB,GAAI2O,CAAA,CAAQ3O,CAAR,CAAJ,GACI8O,CAIA,CAJM9O,CAIN,CAJU6N,CAIV,CAHA3K,CAGA,CAthBmC+F,CAmhB5B,CAAE6F,CAAF,CAGP,CAFAP,CAEA,CAFUO,CAEV,CAFgB,CAEhB,CADAN,CACA,CADOD,CAAA,CArhB4BtF,CAqhBlBhJ,OAAV,CAAqBgD,CAAA,CArhBOgG,CAqhBiB,CAAEsF,CAAF,CAAxB,CAArB,CAA2D,IAClE,CAAAnB,CAAA,CAthBwB3B,CAshBxB,CAAwB+C,CAAxB,CAA8BtL,CAA9B,CAnoBewE,CAmoBf,CAnoBmCC,CAmoBnC,CALJ,CAnCL,CAvFJ,CA1ZgB,CATR,IAiBH,IAAe,CAAf,CAAI0B,CAAApJ,OAAJ,CAEI,IADAoL,CAAA,CAAmBI,CAAnB,CAA2BpC,CAAA,CAAE,CAAF,CAA3B,CAAiCJ,CAAjC,CAnHmBvB,CAmHnB,CAnH4BsD,CAmH5B,CAnHuCrD,CAmHvC,CACK,CAAA3H,CAAA,CAAI,CAAT,CAAYA,CAAZ,CAAgBqJ,CAAApJ,OAAhB,CAA0BD,CAAA,EAA1B,CACIsM,EAAA,CAAiBb,CAAjB,CAAyBpC,CAAA,CAAErJ,CAAF,CAAzB,CAHR,KAMIoN,EAAA,CAAgB3B,CAAhB,CAAwB,IAAxB,CAA8BxC,CAA9B,CAxHmBvB,CAwHnB,CAxHuCC,CAwHvC,CAhCL,KAmCA,IAAIgG,CAAJ,CAAmB,EAAnB,CAEH,GAAID,CAAJ,CAAoB,GAApB,CACQA,CAAJ,CAAmB,EAAnB,CACIjC,CAAAsB,YADJ,CACyB9D,CADzB,CAGIzK,EAAA,CAAaiN,CAAb,CAAgCxC,CAAhC,CAA6C,CAAG,EAAAyE,CAAA,CAAe,IAAf,CAAhD,CAEJ,CAAA1B,CAAA,CAAY3C,CAAZ,CANJ,KAOO,IAAIqE,CAAJ,CAAmB,EAAnB,CAEH,GAAe,CAAf,CAAIzE,CAAAhJ,OAAJ,CAEI,IADAoL,CAAA,CAAmBI,CAAnB,CAA2BpC,CAA3B,CAA8BJ,CAAA,CAAE,CAAF,CAA9B,CAvImBvB,CAuInB,CAvI4BsD,CAuI5B,CAvIuCrD,CAuIvC,CACK,CAAA3H,CAAA,CAAI,CAAT,CAAYA,CAAZ,CAAgBiJ,CAAAhJ,OAAhB,CAA0BD,CAAA,EAA1B,CACIoN,CAAA,CAAgB3B,CAAhB,CAAwB,IAAxB,CAA8BxC,CAAA,CAAEjJ,CAAF,CAA9B,CAzIe0H,CAyIf,CAzImCC,CAyInC,CAHR,KAMI2E,GAAA,CAAiBb,CAAjB,CAAyBpC,CAAzB,CARD,KAWHgC,EAAA,CAAmBI,CAAnB,CAA2BpC,CAA3B,CAA8BJ,CAA9B,CA/IuBvB,CA+IvB,CA/IgCsD,CA+IhC,CA/I2CrD,CA+I3C,CApBD,KAoCc,QAAjB,GAAI,MAAOsB,EAAX,CACSwC,CAAAzG,MADT,GAC+CiE,CAD/C,GAESwC,CAAAzG,MAFT;AAE6CiE,CAF7C,EAKKwC,CAAAxG,QALL,CAK2CgE,CAxN3C,CAAA,CAnBR,IAgCQ1F,EAAJ,CAAY,CAAZ,EACU4D,CAIN,CAJkBuE,CAIlB,CAFgC5H,CAEhC,CAkCwBmF,CApCQnF,EAEhC,CAFqBqD,CAnkBzB5D,EAqkBI,EArkBe,CAqkBf,CAFqB4D,CAjkBzBrD,EAmkBI,CAnkBeyL,CAmkBf,CAFqBpI,CA5jBrB5D,EA8jBA,CA9jBkB,GA8jBlB,GAFqB4D,CA3jBrB5D,EA6jBA,EA7jBmB,CA6jBnB,EAD6B4D,CAtmBjCW,EAumBI,GAkC2BJ,CAlC3B,GAD6BP,CArmBjC5D,EAEA,EAFmB,CAEnB,CAmmBiC4D,CAnmBjCW,EAAA,CAsoB+BJ,CAlC3B,EAAAR,EAAA,CAAiBC,CAAjB,CAkCoC6D,CAlCpC,CALJ,EAQIU,CARJ,CAuC4BzC,CA/Bb9F,EARf,CAQ6BqI,EAAA,CA+BZC,CA/BY,CA+BJpC,CA/BI,CA+BDJ,CA/BC,CA+BEvB,CA/BF,CA+BWsD,CA/BX,CA+BsBrD,CA/BtB,CA+B7B,OA1BG+D,EAyBiB,CAGlB8D,CAAAA,CAAc7C,EAAA,CAAYlB,CAAZ,CAAoBxC,CAApB,CAAuBvB,CAAvB,CAAgCC,CAAhC,CACpB8D,EAAAgE,aAAA,CACKxG,CAAA7G,EAAD,CAAY,CAAZ,CCl5BGa,CAAA,CDm5B6BuM,CCn5BFpM,KAA3B,CDk5BH,CAEIoM,CAHR,CAGgCvM,CAAA,CAAwBoG,CAAxB,CAHhC,CAIA2C,EAAA,CAAY3C,CAAZ,CACAwC,GAAA,CAAY5C,CAAZ,CACA,OAAOuG,EAZe,CDhzC1B,IAAMpI,EAA6C,EAAnD,CACMR,EAAwC,EOuC1C1E,SA1BJwN,GA0BI,CACI/E,CADJ,CAEIpH,CAFJ,CAGImH,CAHJ,CAIIiF,CAJJ,CAI8B,CAG1B,IAAAC,EAAA,CADA,IAAAC,EACA,CADa,IAEb,KAAAlF,EAAA,CAAkBA,CAClB,KAAApH,EAAA,CAAaA,CACb,KAAAmH,EAAA,CAAeA,CACf,KAAAiF,OAAA,CAAcA,CAPY,CAa9B,EAAA,UAAA,OAAA,CAAAG,QAAM,EAAA,CACI,IAAAvM,EAAN,CAAmB,CAAnB,GACI,IAAAA,EACA,EADc,CACd,CAAM,IAAAA,EAAN,CAAmB,CAAnB,EACIwM,EAAA,CAAY,IAAZ,CAHR,CADE,CAeVC,SAAAD,GAAA,CAAqBE,CAArB,CAAqD,CAC7CA,CAAAJ,EAAJ,CACII,CAAAJ,EAAAD,EADJ,CACsBK,CAAAL,EADtB,CAGIK,CAAAtF,EAAAuF,EAHJ,CAGuCD,CAAAL,EAEnCK,EAAAL,EAAJ,GACIK,CAAAL,EAAAC,EADJ,CACsBI,CAAAJ,EADtB,CAIiC,EAAjC,GAAI,EAAEI,CAAAtF,EAAAwF,GAAN,EACIF,CAAAtF,EAAAyF,GAAA,EAX6C,CA+BjDlO,QAbJmO,EAaI,EAAA,CACI,IAAAF,GAAA,CAAe,CACf,KAAAD,EAAA,CAAyB,IAF7B;AA+BA,CAAA,UAAA,GAAA,CAAAI,QAAQ,EAAA,EAQR,EAAA,UAAA,GAAA,CAAAF,QAAU,EAAA,EAaV,EAAA,UAAA,UAAA,CAAAG,QAAS,CACL7F,CADK,CAELiF,CAFK,CAGLpM,CAHK,CAGsC,CAErCiN,CAAAA,CAAI,IAAId,EAAJ,CAAgC,IAAhC,CAFV,IAAA,EAAAnM,GAAAA,CAAAA,CAA0C,CAA1CA,CAAAA,CAEU,CAA6CmH,CAA7C,CAAsDiF,CAAtD,CACN,KAAAO,EAAJ,GACI,IAAAA,EAAAL,EACA,CAD+BW,CAC/B,CAAAA,CAAAZ,EAAA,CAAU,IAAAM,EAFd,CAIA,KAAAA,EAAA,CAAyBM,CAEF,EAAvB,GAAI,IAAAL,GAAA,EAAJ,EACI,IAAAG,GAAA,EAGJ,OAAOE,EAboC,CAqB/C/F,SAAA,GAAe,CAAfA,CAAe,CAA2C,CAC/B,CAAvB,GAAI,CAAA0F,GAAA,EAAJ,EACI,CAAAG,GAAA,EAFkD,CAY1D1F,QAAA,GAAiB,CAAjBA,CAAiB,CAA2C,CACjC,CAAvB,GAAI,EAAE,CAAAuF,GAAN,EACI,CAAAC,GAAA,EAFoD,CCxLhEK,QAAAC,GAAA,CACIC,CADJ,CAEIC,CAFJ,CAGIC,CAHJ,CAGiC,CAE7BD,CAAAE,cAAA,CAAsBH,CAAA7S,OAEtB,KAAK,IAAImJ,EAAI,CAAb,CAAgBA,CAAhB,CAAoB0J,CAAAI,GAAA9Q,OAApB,CAAoDgH,CAAA,EAApD,CAAyD,CACrD,IAAMyD,EAAUiG,CAAAI,GAAA,CAAwB9J,CAAxB,CAChB,IAAIyD,CAAAnH,EAAJ,CAAoBsN,CAApB,GACInG,CAAAiB,GAAA,CAAWiF,CAAX,CACI,CAAAA,CAAAxO,EAAA,CAAe,CAFvB,EAGQ,KAL6C,CAJ5B,CCoB7BF,QAvBJ8O,EAuBI,CACIzN,CADJ,CAEI0N,CAFJ,CAGIC,CAHJ,CAGgB,CAEZ,CAAA,KAAA,CAAA,IAAA,CACA,KAAA3N,EAAA,CAAaA,CACb,KAAA0N,KAAA,CAAYA,CACZ,KAAAC,GAAA,CAAiBA,CACjB,KAAAC,GAAA,CAAiB,IAAAC,GAAAC,KAAA,CAA8B,IAA9B,CACjB,KAAAC,EAAA,CAAqB,CAAA,CAPT,CA1BpBC,CAAA,CAAA,CAAA,CAAA,CAAA,CAoCY;CAAA,UAAA,GAAA,CAAAH,QAAmB,CAACvT,CAAD,CAAU,CAGjC,IAAI2S,CACJ,IAHa,IAAAN,EAGb,CFoEA,IElEoCM,IAAAA,EADhCA,CACgCA,CAD5B,IAAI,IAAAU,GAAJ,CAAmB,IAAnB,CAAyB,CAAzB,CAA4BrT,CAA5B,CAAgCD,EAAA,CAAeC,CAAf,CAAhC,CAAoDA,CAAA2T,UAApD,CAAkE3T,CAAA6H,KAAlE,CAC4B8K,CFiEhCA,EEjEAiB,IFiEIvB,EACR,CAAOM,CAAP,CAAA,CAMI,GAJIA,CAAAjN,EAIA,EAJW,CAIX,CAHAiN,CAAA9F,EAAA,CAAUkG,CAAV,CAL2ClL,IAAAA,EAK3C,CAGA,CAFA8K,CAAAjN,EAEA,EAFW,EAEX,CAAAiN,CAAAjN,EAAA,CAAU,CAAd,CAAyD,CACrD,IAAMmO,EAAMlB,CAAZ,CACAA,EAAIA,CAAAZ,EACJG,GAAA,CAAY2B,CAAZ,CAHqD,CAAzD,IAKIlB,EAAA,CAAIA,CAAAZ,EE1EZ,IAAI,EAAAY,CAAA,EACCA,CAAApO,EADD,CACa,CADb,CAAJ,CAAA,CAI2C,CAAA,CAAAxE,EAAA,CAAeC,CAAf,CCM/C,KAFM+G,CAEN,CAFiC,EAEjC,CAAO9G,CAAP,CAAA,CAAe,CACkCA,IAAAA,EAAAA,CAAAA,CAtC3CyG,EAAwCzG,CLiCtC,IKhCR,IAAIyG,CAAJ,CAAY,CAGR,IAFA,IAAIoN,EAAAA,IAAAA,EAAJ,CACMhJ,EAAO/L,MAAA+L,KAAA,CAAYpE,CAAZ,CADb,CAESvE,EAAI,CAAb,CAAgBA,CAAhB,CAAoB2I,CAAA1I,OAApB,CAAiCD,CAAA,EAAjC,CAAsC,CAClC,IAAMnC,EAAK0G,CAAA,CAAOoE,CAAA,CAAK3I,CAAL,CAAP,CACPnC,EAAA8M,EAAJ,GDyBsEA,ICzBtE,GACSgH,CAAL,CAGIA,CAAArR,KAAA,CAAazC,CAAb,CAHJ,CACI8T,CADJ,CACc,CAAC9T,CAAD,CAFlB,CAFkC,CAUlC8T,CAAJ,EAwBqC/M,CAvBjCtE,KAAA,CAAY,CACRxC,OAAQA,CADA,CAERiT,GAAUY,CAFF,CAAZ,CAdI,CAsCR7T,CAAA,CAASA,CAAA8T,cAFE,CDJX,GAAsB,CAAtB,CCSGhN,CDTC3E,OAAJ,CDtBW,CAAA,CAAA,CCuBFuQ,CAGmBA,GAFpBA,CAEoBA,CAFhB,IAAI,IAAAU,GAAJ,CAAmB,IAAnB,CAAyB,CAAzB,CAA4BrT,CAA5B,CAAgCD,EAAA,CAAeC,CAAf,CAAhC,CAAoDA,CAAA2T,UAApD,CAAkE3T,CAAA6H,KAAlE,CAEgB8K,EAAAA,CAAAA,CAAAA,CAAI,EAAA,CAAA,CAAG,EAAA,IAAAjN,EAAA,CAAa,CAAb,CDpBvC,KAJIvD,CAIJ,CEyBO4E,CF7BC3E,OAIR,CAJiC,CAIjC,CAAY,CAAZ,EAAOD,CAAP,CAAA,CAEI,GADA2Q,CACI;AEuBD/L,CFxBc,CAAgB5E,CAAhB,CACb,CAAA2Q,CAAA7S,OAAA,GAA0B8S,CAAA9S,OAA9B,CAEI,IADA4S,EAAA,CEsBD9L,CFtBmC,CAAgB5E,CAAA,EAAhB,CAAlC,CAAwD4Q,CAAxD,CAA+D,CAA/D,CACI,CAAAA,CAAAxO,EAAA,CAAe,CAAnB,CACI,MAAA,CADJ,CAFJ,IAMI,MAKRuO,EAAA,CEYO/L,CFZU,CAAgB,CAAhB,CACjB,IAAI+L,CAAA7S,OAAJ,GAA8B8S,CAAA9S,OAA9B,CAA4C,CACxC8S,CAAAxO,EAAA,EAAgB,EAChBsO,GAAA,CAAkCC,CAAlC,CAAkDC,CAAlD,CACI,CADJ,CAEA,IAAIA,CAAAxO,EAAJ,CAAmB,CAAnB,CACI,MAAA,CAEJwO,EAAAxO,EAAA,EAAgB,GAChBpC,EAAA,CAAI,CARoC,CAA5C,IAUIA,EAAA,CAAI,CAIR,IAAI6R,CAAJ,CAEI,IADAjB,CAAAxO,EACA,EADgB,GAChB,CAAOpC,CAAP,CELG4E,CFKQ3E,OAAX,EAEQ,EADJyQ,EAAA,CEND9L,CFMmC,CAAgB5E,CAAA,EAAhB,CAAlC,CAAwD4Q,CAAxD,CAA+D,CAA/D,CACI,CAAAA,CAAAxO,EAAA,CAAe,CAAf,CAFR,CAAA,EApCW,CC6BPoO,CAAJ,EAASA,CAAApO,EAAT,CAAoB,CAApB,EACIvE,CAAAiU,eAAA,EAdJ,CATiC,CA2BrC,EAAA,UAAA,GAAA,CAAAxB,QAAQ,EAAA,CACA,IAAAgB,EAAJ,CACI,IAAAA,EADJ,CACyB,CAAA,CADzB,EAGI,CAAA,UAAA,GAAA,KAAA,CAAA,IAAA,CACA,CAAAvS,QAAA/B,iBAAA,CACI,IAAAiU,KADJ,CAEI,IAAAE,GAFJ,CAGI7G,EAAA,CAAgB,IAAA/G,EAAhB,CAHJ,CAJJ,CADI,CAYR;CAAA,UAAA,GAAA,CAAA6M,QAAU,EAAA,CAAA,IAAA,EAAA,IACD,KAAAkB,EAAL,GACI,IAAAA,EACA,CADqB,CAAA,CACrB,CAAAnR,EAAA,CAAa,QAAA,EAAA,CACL,CAAAmR,EAAJ,GACIvS,QAAAgT,oBAAA,CACI,CAAAd,KADJ,CAEI,CAAAE,GAFJ,CAGI7G,EAAA,CAAgB,CAAA/G,EAAhB,CAHJ,CAKA,CADA,CAAA,UAAA,GAAA,KAAA,CAAA,CAAA,CACA,CAAA,CAAA+N,EAAA,CAAqB,CAAA,CANzB,CADS,CAAb,CAFJ,CADM,CE3CVpP,SApCJ8P,EAoCI,CACIrH,CADJ,CAEIpH,CAFJ,CAGIzD,CAHJ,CAIIhC,CAJJ,CAKI0T,CALJ,CAMI9L,CANJ,CAMa,CAET,IAAAiF,EAAA,CAAkBA,CAClB,KAAAvI,EAAA,CAAcmB,CACd,KAAA0O,EAAA,CAAanS,CAEb,KAAAgR,cAAA,CADA,IAAAhT,OACA,CADcA,CAEd,KAAA0T,UAAA,CAAiBA,CACjB,KAAA9L,KAAA,CAAYA,CARH,CAoCb,CAAA,UAAA,gBAAA,CAAAwM,QAAe,EAAA,CACX,IAAA9P,EAAA,EAAe,CADJ,CAIf,EAAA,UAAA,yBAAA,CAAA+P,QAAwB,EAAA,CACpB,IAAA/P,EAAA,EAAe,CADK,CAIxB,EAAA,UAAA,eAAA,CAAA0P,QAAc,EAAA,CACV,IAAA1P,EAAA,EAAe,CADL,CAtFlB6F;CAAA,OAAA,iBAAA,CAAA,CAAA,UAAA,CAAA,CAAA,iBAqDQ,CAAA,aAAA,CAAA,CAAA,CAAA,WAAA,CAAA,CAAA,CAAA,IAAgBmK,QAAhB,EAAgB,CAChB,MAAO,CAAG,EAAA,IAAAhQ,EAAA,CAAc,CAAd,CADM,CAAhB,CArDR,CAAA,QAyDQ,CAAA,aAAA,CAAA,CAAA,CAAA,WAAA,CAAA,CAAA,CAAA,IAAOiQ,QAAP,EAAO,CACP,MAAO,CAAG,EAAA,IAAAjQ,EAAA,CAAc,CAAd,CADH,CAAP,CAzDR,CAAA,WA6DQ,CAAA,aAAA,CAAA,CAAA,CAAA,WAAA,CAAA,CAAA,CAAA,IAAUkQ,QAAV,EAAU,CACV,MAAO,CAAG,EAAA,IAAAlQ,EAAA,CAAc,EAAd,CADA,CAAV,CA7DR,CAAA,UAiEQ,CAAA,aAAA,CAAA,CAAA,CAAA,WAAA,CAAA,CAAA,CAAA,IAASmQ,QAAT,EAAS,CACT,MAAO,CAAG,EAAA,IAAAnQ,EAAA,CAAc,EAAd,CADD,CAAT,CAjER,CAAA,WAqEQ,CAAA,aAAA,CAAA,CAAA,CAAA,WAAA,CAAA,CAAA,CAAA,IAAUoQ,QAAV,EAAU,CACV,MAAI,KAAApQ,EAAJ,CAAkB,EAAlB,CACW,CADX,CAEW,IAAAA,EAAJ,CAAkB,GAAlB,CACI,CADJ,CAGA,CANG,CAAV,CArER,CAAA,CA2FA4P,EAAA7U,UAAAsV,gBAAA,CAA2C,CAC3CT;CAAA7U,UAAAuV,UAAA,CAAqC,CACrCV,EAAA7U,UAAAwV,eAAA,CAA0C,CAa1C,SAAAC,EAAA,CAAA,CAAA,CAAA,CAAyDZ,CAAzD,MAAA,CAAA,IAAA,CAAA,SAAA,CAAA,CAAAT,CAAA,CAAA,CAAA,CAAA,CAAA,CAAAtJ,EAAA,OAAA,iBAAA,CAAA,CAAA,UAAA,CAAA,CAAA,OAYQ,CAAA,aAAA,CAAA,CAAA,CAAA,WAAA,CAAA,CAAA,CAAA,IAAM4K,QAAN,EAAM,CACN,MAAO,KAAAZ,EAAAY,OADD,CAAN,CAZR,CAAA,KAgBQ,CAAA,aAAA,CAAA,CAAA,CAAA,WAAA,CAAA,CAAA,CAAA,IAAIC,QAAJ,EAAI,CACJ,MAAO,KAAAb,EAAAa,KADH,CAAJ,CAhBR,CAAA,CAqBA,SAAAC,GAAA,CAAA,CAAA,CAAA,CAA4CH,CAA5C,MAAA,CAAA,IAAA,CAAA,SAAA,CAAA,CAAArB,CAAA,CAAA,EAAA,CAAA,CAAA,CAmII,GAAA,UAAA,iBAAA,CAAAyB,QAAgB,CAACC,CAAD,CAAe,CAC3B,MAAO,KAAAhB,EAAAe,iBAAA,CAA4BC,CAA5B,CADoB,CAnInChL;CAAA,OAAA,iBAAA,CAAA,EAAA,UAAA,CAAA,CAAA,OAgBQ,CAAA,aAAA,CAAA,CAAA,CAAA,WAAA,CAAA,CAAA,CAAA,IAAMiL,QAAN,EAAM,CACN,MAAO,KAAAjB,EAAAiB,OADD,CAAN,CAhBR,CAAA,KAoBQ,CAAA,aAAA,CAAA,CAAA,CAAA,WAAA,CAAA,CAAA,CAAA,IAAIC,QAAJ,EAAI,CACJ,MAAO,KAAAlB,EAAAkB,KADH,CAAJ,CApBR,CAAA,SAwBQ,CAAA,aAAA,CAAA,CAAA,CAAA,WAAA,CAAA,CAAA,CAAA,IAAQ7U,QAAR,EAAQ,CAIR,MAAwB,UAAxB,GAAI,IAAA2T,EAAAvM,KAAJ,CACWtH,EAAA,CAAiB,IAAA6T,EAAjB,CADX,CAGO,CAPC,CAAR,CAxBR,CAAA,QAkCQ,CAAA,aAAA,CAAA,CAAA,CAAA,WAAA,CAAA,CAAA,CAAA,IAAOmB,QAAP,EAAO,CACP,MAAO,KAAAnB,EAAAmB,QADA,CAAP,CAlCR,CAAA,IAsCQ,CAAA,aAAA,CAAA,CAAA,CAAA,WAAA,CAAA,CAAA,CAAA,IAAG/O,QAAH,EAAG,CAII,IAAA,CvBgK8B,EAAA,CACzC,GuBjKuB4N,CvBiKnB,CuBjKmBA,IAAAA,EvBiKnB,CAAY,UAAZ,GAAApU,CAAA6H,KAAJ,CACUpH,CACN,CADiBF,EAAA,CAAiBP,CAAjB,CACjB,CAAA,CAAA,CAAiB,EAAjB,GAAIS,CAAJ,CACW,OADX,CAGO+U,MAAAC,aAAA,CAAoBhV,CAApB,CALX;IAAA,CAMO,GAAgB,SAAhB,GAAIT,CAAA6H,KAAJ,EAAyC,OAAzC,GAA6B7H,CAAA6H,KAA7B,CAEH,GADMrB,CACF,CADQnG,EAAA,CAAgBL,CAAAQ,QAAhB,CACR,CAAQkH,IAAAA,EAAR,GAAAlB,CAAJ,CACI,MAAA,CAIR,EAAA,CAAO,cAbP,CuBjKI,MAAO,EAJJ,CAAH,CAtCR,CAAA,QA6CQ,CAAA,aAAA,CAAA,CAAA,CAAA,WAAA,CAAA,CAAA,CAAA,IAAOhG,QAAP,EAAO,CAIP,OAAQ,IAAA4T,EAAAvM,KAAR,EACI,KAAK,SAAL,CACA,KAAK,OAAL,CACI,MAAO,KAAAuM,EAAA5T,QAHf,CAMA,MAAO,EAVA,CAAP,CA7CR,CAAA,OA0DQ,CAAA,aAAA,CAAA,CAAA,CAAA,WAAA,CAAA,CAAA,CAAA,IAAMkV,QAAN,EAAM,CACN,MAAO,KAAAtB,EAAAsB,OADD,CAAN,CA1DR,CAAA,SA8DQ,CAAA,aAAA,CAAA,CAAA,CAAA,WAAA,CAAA,CAAA,CAAA,IAAQC,QAAR,EAAQ,CACR,MAAO,KAAAvB,EAAAuB,SADC,CAAR,CA9DR,CAAA,QAkEQ,CAAA,aAAA,CAAA,CAAA,CAAA,WAAA,CAAA,CAAA,CAAA,IAAOC,QAAP,EAAO,CACP,MAAO,KAAAxB,EAAAwB,QADA,CAAP,CAlER,CAAA,OAsEQ,CAAA,aAAA,CAAA,CAAA;AAAA,WAAA,CAAA,CAAA,CAAA,IAAMC,QAAN,EAAM,CACN,MAAO,KAAAzB,EAAAyB,OADD,CAAN,CAtER,CAAA,SA0EQ,CAAA,aAAA,CAAA,CAAA,CAAA,WAAA,CAAA,CAAA,CAAA,IAAQC,QAAR,EAAQ,CACR,MAAO,KAAA1B,EAAA0B,SADC,CAAR,CA1ER,CAAA,MA8EQ,CAAA,aAAA,CAAA,CAAA,CAAA,WAAA,CAAA,CAAA,CAAA,IAAKC,QAAL,EAAK,CAIL,OAAQ,IAAA3B,EAAAvM,KAAR,EACI,KAAK,UAAL,CACI,MAAOtH,GAAA,CAAiB,IAAA6T,EAAjB,CACX,MAAK,SAAL,CACA,KAAK,OAAL,CACI,MAAO,KAAAA,EAAA5T,QALf,CAQA,MAAO,EAZF,CAAL,CA9ER,CAAA,KA6FQ,CAAA,aAAA,CAAA,CAAA,CAAA,WAAA,CAAA,CAAA,CAAA,IAAIwV,QAAJ,EAAI,CAIW,MAOR,KAAA5B,EAAA4B,KAXH,CAAJ,CA7FR,CAAA,GA2GQ,CAAA,aAAA,CAAA,CAAA,CAAA,WAAA,CAAA,CAAA,CAAA,IAAyBC,QAAzB,EAAyB,CACzB,MAAO,KAAA7B,EAAA6B,GADkB,CAAzB,CA3GR,CAAA,GA+GQ,CAAA,aAAA,CAAA,CAAA,CAAA,WAAA,CAAA,CAAA,CAAA,IAAqBC,QAArB,EAAqB,CACrB,MAAO,KAAA9B,EAAA8B,GADc,CAArB,CA/GR;AAAA,GAmHQ,CAAA,aAAA,CAAA,CAAA,CAAA,WAAA,CAAA,CAAA,CAAA,IAAuBC,QAAvB,EAAuB,CACvB,MAAO,KAAA/B,EAAA+B,GADgB,CAAvB,CAnHR,CAAA,GAuHQ,CAAA,aAAA,CAAA,CAAA,CAAA,WAAA,CAAA,CAAA,CAAA,IAAuBC,QAAvB,EAAuB,CACvB,MAAO,KAAAhC,EAAAgC,GADgB,CAAvB,CAvHR,CAAA,GA2HQ,CAAA,aAAA,CAAA,CAAA,CAAA,WAAA,CAAA,CAAA,CAAA,IAAsBC,QAAtB,EAAsB,CACtB,MAAO,KAAAjC,EAAAiC,GADe,CAAtB,CA3HR,CAAA,GA+HQ,CAAA,aAAA,CAAA,CAAA,CAAA,WAAA,CAAA,CAAA,CAAA,IAAyBC,QAAzB,EAAyB,CACzB,MAAO,KAAAlC,EAAAkC,GADkB,CAAzB,CA/HR,CAAA,CAwIA,SAAAC,GAAA,CAAA,CAAA,CAAA,CAA+DxB,CAA/D,MAAA,CAAA,IAAA,CAAA,SAAA,CAAA,CAAArB,CAAA,CAAA,EAAA,CAAA,CAAA,CAmII,GAAA,UAAA,iBAAA,CAAAyB,QAAgB,CAACC,CAAD,CAAe,CAC3B,MAAO,KAAAhB,EAAAe,iBAAA,CAA4BC,CAA5B,CADoB,CAnInChL;CAAA,OAAA,iBAAA,CAAA,EAAA,UAAA,CAAA,CAAA,OAsBQ,CAAA,aAAA,CAAA,CAAA,CAAA,WAAA,CAAA,CAAA,CAAA,IAAMiL,QAAN,EAAM,CACN,MAAO,KAAAjB,EAAAiB,OADD,CAAN,CAtBR,CAAA,OA0BQ,CAAA,aAAA,CAAA,CAAA,CAAA,WAAA,CAAA,CAAA,CAAA,IAAMmB,QAAN,EAAM,CACN,MAAO,KAAApC,EAAAoC,OADD,CAAN,CA1BR,CAAA,QA8BQ,CAAA,aAAA,CAAA,CAAA,CAAA,WAAA,CAAA,CAAA,CAAA,IAAOC,QAAP,EAAO,CAMQ,MAQR,KAAArC,EAAAqC,QAdA,CAAP,CA9BR,CAAA,QA+CQ,CAAA,aAAA,CAAA,CAAA,CAAA,WAAA,CAAA,CAAA,CAAA,IAAOC,QAAP,EAAO,CACP,MAAO,KAAAtC,EAAAsC,QADA,CAAP,CA/CR,CAAA,QAmDQ,CAAA,aAAA,CAAA,CAAA,CAAA,WAAA,CAAA,CAAA,CAAA,IAAOC,QAAP,EAAO,CACP,MAAO,KAAAvC,EAAAuC,QADA,CAAP,CAnDR,CAAA,QAuDQ,CAAA,aAAA,CAAA,CAAA,CAAA,WAAA,CAAA,CAAA,CAAA,IAAOpB,QAAP,EAAO,CACP,MAAO,KAAAnB,EAAAmB,QADA,CAAP,CAvDR;AAAA,YA2DQ,CAAA,aAAA,CAAA,CAAA,CAAA,WAAA,CAAA,CAAA,CAAA,IAAWqB,QAAX,EAAW,CACX,MAAO,KAAAxC,EAAAwC,YADI,CAAX,CA3DR,CAAA,OA+DQ,CAAA,aAAA,CAAA,CAAA,CAAA,WAAA,CAAA,CAAA,CAAA,IAAMC,QAAN,EAAM,CACN,MAAO,KAAAzC,EAAAyC,OADD,CAAN,CA/DR,CAAA,OAmEQ,CAAA,aAAA,CAAA,CAAA,CAAA,WAAA,CAAA,CAAA,CAAA,IAAMC,QAAN,EAAM,CACN,MAAO,KAAA1C,EAAA0C,OADD,CAAN,CAnER,CAAA,QAuEQ,CAAA,aAAA,CAAA,CAAA,CAAA,WAAA,CAAA,CAAA,CAAA,IAAOlB,QAAP,EAAO,CACP,MAAO,KAAAxB,EAAAwB,QADA,CAAP,CAvER,CAAA,GA2EQ,CAAA,aAAA,CAAA,CAAA,CAAA,WAAA,CAAA,CAAA,CAAA,IAASmB,QAAT,EAAS,CACT,MAAO,KAAA3C,EAAA2C,GADE,CAAT,CA3ER,CAAA,GA+EQ,CAAA,aAAA,CAAA,CAAA,CAAA,WAAA,CAAA,CAAA,CAAA,IAASC,QAAT,EAAS,CACT,MAAO,KAAA5C,EAAA4C,GADE,CAAT,CA/ER,CAAA,QAmFQ,CAAA,aAAA,CAAA,CAAA,CAAA,WAAA,CAAA,CAAA,CAAA,IAAOC,QAAP,EAAO,CACP,MAAO,KAAA7C,EAAA6C,QADA,CAAP,CAnFR;AAAA,QAuFQ,CAAA,aAAA,CAAA,CAAA,CAAA,WAAA,CAAA,CAAA,CAAA,IAAOC,QAAP,EAAO,CACP,MAAO,KAAA9C,EAAA8C,QADA,CAAP,CAvFR,CAAA,MA2FQ,CAAA,aAAA,CAAA,CAAA,CAAA,WAAA,CAAA,CAAA,CAAA,IAAKC,QAAL,EAAK,CACL,MAAO,KAAA/C,EAAA+C,MADF,CAAL,CA3FR,CAAA,MA+FQ,CAAA,aAAA,CAAA,CAAA,CAAA,WAAA,CAAA,CAAA,CAAA,IAAKC,QAAL,EAAK,CACL,MAAO,KAAAhD,EAAAgD,MADF,CAAL,CA/FR,CAAA,cAmGQ,CAAA,aAAA,CAAA,CAAA,CAAA,WAAA,CAAA,CAAA,CAAA,IAAaC,QAAb,EAAa,CACb,MAAO,KAAAjD,EAAAiD,cADM,CAAb,CAnGR,CAAA,QAuGQ,CAAA,aAAA,CAAA,CAAA,CAAA,WAAA,CAAA,CAAA,CAAA,IAAOC,QAAP,EAAO,CACP,MAAO,KAAAlD,EAAAkD,QADA,CAAP,CAvGR,CAAA,QA2GQ,CAAA,aAAA,CAAA,CAAA,CAAA,WAAA,CAAA,CAAA,CAAA,IAAOC,QAAP,EAAO,CACP,MAAO,KAAAnD,EAAAmD,QADA,CAAP,CA3GR,CAAA,SA+GQ,CAAA,aAAA,CAAA,CAAA,CAAA,WAAA,CAAA,CAAA;AAAA,IAAQzB,QAAR,EAAQ,CACR,MAAO,KAAA1B,EAAA0B,SADC,CAAR,CA/GR,CAAA,UAmHQ,CAAA,aAAA,CAAA,CAAA,CAAA,WAAA,CAAA,CAAA,CAAA,IAAS0B,QAAT,EAAS,CACT,MAAO,KAAApD,EAAAoD,UADE,CAAT,CAnHR,CAAA,MAuHQ,CAAA,aAAA,CAAA,CAAA,CAAA,WAAA,CAAA,CAAA,CAAA,IAAKzB,QAAL,EAAK,CACL,MAAO,KAAA3B,EAAA2B,MADF,CAAL,CAvHR,CAAA,EA2HQ,CAAA,aAAA,CAAA,CAAA,CAAA,WAAA,CAAA,CAAA,CAAA,IAAC0B,QAAD,EAAC,CACD,MAAO,KAAArD,EAAAqD,EADN,CAAD,CA3HR,CAAA,EA+HQ,CAAA,aAAA,CAAA,CAAA,CAAA,WAAA,CAAA,CAAA,CAAA,IAACC,QAAD,EAAC,CACD,MAAO,KAAAtD,EAAAsD,EADN,CAAD,CA/HR,CAAA,CA0VA,SAAAC,GAAA,CAAA,CAAA,CAAA,CAAyC5C,CAAzC,MAAA,CAAA,IAAA,CAAA,SAAA,CAAA,CAAArB,CAAA,CAAA,EAAA,CAAA,CAAA,CAAAtJ,EAAA,OAAA,iBAAA,CAAA,EAAA,UAAA,CAAA,CAAA,cAaQ,CAAA,aAAA,CAAA,CAAA,CAAA,WAAA,CAAA,CAAA,CAAA,IAAaiN,QAAb,EAAa,CACb,MAAO,KAAAjD,EAAAiD,cADM,CAAb,CAbR,CAAA,CC9kBAO;QAAAC,EAAA,CACI/K,CADJ,CAEIgB,CAFJ,CAGqB,CAEjB,MAAO,CACHhB,EAAYA,CADT,CAEHpH,EAA6C,CAF1C,CAGHoI,GAAIA,CAHD,CAFU,CAwGjBgK,IAAAA,GAAMA,IAAI3E,CAAJ2E,CAAgFA,CAAhFA,CAAoHA,MAApHA,CAA4HH,EAA5HG,CAANA,CAGAC,GAAQA,IAAI5E,CAAJ4E,CAA6EA,CAA7EA,CAAsJA,QAAtJA,CAAgK5D,CAAhK4D,CAHRD,CAIAE,GAAOA,IAAI7E,CAAJ6E,CAA4FA,CAA5FA,CAAqKA,OAArKA,CAA8KzB,EAA9KyB,CAJPF,CASAG,GAAUA,IAAI9E,CAAJ8E,CAA4FA,CAA5FA,CAAqKA,UAArKA,CAAiL1B,EAAjL0B,CATVH,CAyBAzI,GAAOA,IAAI8D,CAAJ9D,CAA6EA,CAA7EA,CAAsJA,OAAtJA,CAA+J8E,CAA/J9E,CAzBPyI,CA2BAI,GAASA,IAAI/E,CAAJ+E,CAAsFA,CAAtFA,CAA+JA,SAA/JA,CAA0KhD,EAA1KgD,CA3BTJ,CC/GSK,EAAQ,EAQrBC,SAAAC,GAAA,CAAyB7I,CAAzB,CAA2C,CACvC,IAAK,IAAIrN,EAAI,CAAb,CAAgBA,CAAhB,CAAoBgW,CAAA/V,OAApB,CAAkCD,CAAA,EAAlC,CAAuC,CACnC,IAAMmW,EAAIH,CAAA,CAAMhW,CAAN,CACV,IAAImW,CAAA9I,EAAJ,GAAoBA,CAApB,CACI,MAAO8I,EAHwB,CADA;AA2F3CC,QAAAC,GAAA,EAImC,CAD/BrL,IAAAA,CAAAA,CACAtD,CADAsD,CC/BgB,EAAApF,CAAA,CAAG0Q,EAAH,CD+BhBtL,CC/ByBqC,EAAAA,ED+BzBrC,EAAA,CAAA,IAAA,EAAA,GAAAA,CAAA,CAAuB,CAAvB,CAAAA,CACAtD,EAAA,CAAA,IAAA,EAAA,GAAAA,CAAA,CAAmBoB,EAAnB,CAAApB,CAEe,KAUXtE,EAAO8S,EAAA,CAAS7I,CAAT,CACPjK,EAAJ,EACIA,CAAAmT,GACA,CADgBrT,CAChB,CAAAE,CAAAoT,EAAA,CAAkB9O,CAFtB,GAIItE,CAUA,CAVO,CACHiK,EAAWA,CADR,CAEHoJ,GAAc,IAFX,CAGHC,GAAgB,IAHb,CAIHH,GAAUrT,CAJP,CAKHsT,EAAY9O,CALT,CAMHiP,GAAS,IANN,CAOH3O,EAAa,CAAA,CAPV,CAQHgD,GAAWA,CARR,CAUP,CAAAgL,CAAA1V,KAAA,CAAW8C,CAAX,CAdJ,CAgBKA,EAAA4E,EAAL,GACI5E,CAAA4E,EACA,CADmB,CAAA,CACnB,CAAAlF,EAAA,EAAAL,MAAA,CAAkB,QAAA,EAAA,CACd,GAAIW,CAAA4E,EAAJ,CAAA,CACY5E,IAAAA,EAAAA,CAAAA,CAjGdqT,EAAerT,CAAAqT,GAiGDrT,CAhGdmT,EAAWnT,CAAAmT,GAgGGnT,CA/FdoT,EAAapT,CAAAoT,EAEfD,EAAJ,EAEQE,CAAJ,CAII/K,CAJJ,CZmKGL,CAAA,CY/JsBjI,CAAAiK,EZ+JtB,CY/JsCoJ,CZ+JtC,CY/JoDF,CZ+JpD,CY/J8DnT,CAAAoT,EZ+J9D,CAA0C,CAA1C,CA1CP7O,IAAAA,EA0CO,CYnKH,EAMI+D,CAxBR,CZuHO0B,CAAA,CY/FwBhK,CAAAiK,EZ+FxB,CY/FwCC,IZ+FxC,CY/F8CiJ,CZ+F9C,CY/FyDnT,CAAAoT,EZ+FzD,CA1CP7O,IAAAA,EA0CO,CYvHP,CAAInK,EAAJ,CAAiB,CAAjB,GAyB4B4F,CAAAiK,EAxBvBuJ,QADL,CACyCxX,EADzC,CAkBI,CAWA,CAFAgE,CAAAqT,GAEA,CAFoBF,CAEpB,CADAnT,CAAAsT,GACA,CADsBF,CACtB,CAAApT,CAAAuT,GAAA,CAAgBJ,CAAAnU,EAAD,CAAmB,CAAnB,CX2VZa,CAAA,CW1V6ByI,CX0VFtI,KAA3B,CW3VY,CAEXsI,CAfR,EAgBW+K,CAhBX,GAiBgBrT,CAAAiK,EZwLhBd,YAAA,CAAmBtJ,CAAA,CYxLawT,CZwLb,CAAnB,CYtLI,CZuLJzK,CAAA,CYzLgCyK,CZyLhC,CYvLI,CADMI,CACN,CADab,CAAAlP,IAAA,EACb,CAAI+P,CAAJ,GAAazT,CAAb,EAAqB4S,CAAA/V,OAArB,GACI+V,CAAA,CAAMA,CAAAtY,QAAA,CAAc0F,CAAd,CAAN,CADJ,CACiCyT,CADjC,CAnBJ,CAwBAzT,EAAAmT,GAAA,CAAgB,IAChBnT,EAAAoT,EAAA,CAAkB,IAClBpT,EAAA4E,EAAA,CAAmB,CAAA,CACnB5E,EAAA4H,GAAA,CAAiB,CAiET,CADc,CAAlB,CAFJ,CA7B+B,CE5HnC,IAAI8L,GAAU,CAAA,CAAd,CACIC,GAAS3X,EAEb4X;QAAAC,GAAA,EAAA,CACIF,EAAA,EACAD,GAAA,CAAU,CAAA,CAFd,CAkBAI,QAAAC,EAAA,CAAgCxL,CAAhC,CAAyD,CACrD,MAAO,SAAA,CAAUyL,CAAV,CAAqB,CACxBzL,CAAA,CAAGyL,CAAH,CAdCN,GAAL,GACIA,EvBoEJ,CuBpEc,CAAA,CvBoEd,CADAzV,EAAA,EACA,CAAAb,EAAAF,KAAA,CuBnEsB2W,EvBmEtB,CuBrEA,CAa4B,CADyB,CCVrD/U,QDeHmV,GCfG,CAAYC,CAAZ,CAAwBC,CAAxB,CAAyD,CACrD,IAAAD,GAAA,CAAUA,CAAAE,SAAA,EACV,KAAAD,MAAA,CAAaA,CACb,KAAAE,EAAA,CAoByDA,CAAAA,CAvBJ;AActD,IAAMC,EAAQ,IAPrBxV,QAAA,EAAA,CACI,IAAAsR,SAAA,CAAW,CACX,KAAAmE,QAAA,CAAmB,EAEnB,KAAAC,GAAA,CAAc,CAJlB,CAOO,CAEMC,GAAcV,CAAA,CAAa,QAAA,CAACzO,CAAD,CAAe,CACnDgP,CAAAlE,SAAA,CAAiB9K,CADkC,CAA5B,CAFpB,CAMMoP,GAAWX,CAAA,CAAa,QAAA,CAACI,CAAD,CAAc,CAC/CA,CAAA,CAAQA,CAAAQ,KAAA,EACM,GAAd,GAAIR,CAAJ,EACIG,CAAAC,QAAArX,KAAA,CAAmB,IAAI+W,EAAJ,CAAUK,CAAAE,GAAA,EAAV,CAA+BL,CAA/B,CAAnB,CAH2C,CAA3B,CANjB,CAaMS,GAAcb,CAAA,CAAa,QAAA,CAACc,CAAD,CAAa,CAGjD,IAFA,IAAMC,EAAQR,CAAAC,QAAd,CAES3X,EAAI,CAAb,CAAgBA,CAAhB,CAAoBkY,CAAAjY,OAApB,CAAkCD,CAAA,EAAlC,CAEI,GADakY,CAAAC,CAAMnY,CAANmY,CACb,GAAaF,CAAb,CAAoB,CAChBC,CAAAE,OAAA,CAAapY,CAAb,CAAgB,CAAhB,CACA,MAFgB,CALyB,CAA1B,CAbpB,CAyBMqY,GAAclB,CAAA,CAAa,QAAA,CAACrX,CAAD,CAAyC,CAC7EA,CAAAwY,GAAA,CAAgBxY,CAAAwY,GAAAP,KAAA,EACM,GAAtB,GAAIjY,CAAAwY,GAAJ,CACIN,EAAA,CAAYlY,CAAAmY,EAAZ,CADJ,CAGInY,CAAAmY,EAAAV,MAHJ,CAGuBzX,CAAAwY,GALsD,CAAtD,CAzBpB,CAkCMC,GAAYpB,CAAA,CAAa,QAAA,CAAClS,CAAD,CAAiB,CACnDyS,CAAAC,QAAAa,QAAA,CAAsB,QAAA,CAACvb,CAAD,CAAE,CACpBA,CAAAwa,EAAA,CAAcxS,CADM,CAAxB,CADmD,CAA9B,CAlClB,CAwCMwT,GAActB,CAAA,CAAa,QAAA,CAACc,CAAD,CAAa,CACjDA,CAAAR,EAAA,CAAkB,CAACQ,CAAAR,EAD8B,CAA1B,CAxCpB,CA4CMiB,GAAiBvB,CAAA,CAAa,QAAA,EAAA,CAGvC,IAFA,IAAMe,EAAQR,CAAAC,QAAd,CACMgB,EAAoB,EAD1B,CAES3Y,EAAI,CAAb,CAAgBA,CAAhB,CAAoBkY,CAAAjY,OAApB,CAAkCD,CAAA,EAAlC,CAAuC,CACnC,IAAMmY,EAAOD,CAAA,CAAMlY,CAAN,CACRmY,EAAAV,EAAL,EACIkB,CAAArY,KAAA,CAAc6X,CAAd,CAH+B,CAMvCT,CAAAC,QAAA;AAAgBgB,CATuB,CAAb,CCpE9BzW,SCsFC0W,GDtFD,EAAA,CAAA,IAAA,EAAA,IAAA,EAAA,MAAA,CAAA,IAAA,CAAA,EAAA,OAAA,CAAAC,EAAA,CAAAC,SAAA,CAAA,CAAA,CACY,KAAAC,GAAA,CAAqB,EAErB,KAAAC,GAAA,CLscGtD,CAAAsD,CAA2CC,EAA3CD,CKtc0BtO,QAAA,CAAC7M,CAAD,CAAG,CACjB,EAAnB,GAAIA,CAAAQ,QAAJ,GACIyZ,EAAA,CAAS,CAAAiB,GAAT,CfoPA,CenPA,CAAAA,GfmPA,CenPkB,EfmPlB,CAAA5Q,CAAA,CelPA+Q,CfkPA,CerPJ,CADoC,CLsc7BF,CK9bH,KAAAG,GAAA,CLkbGzD,CAAAyD,CAA0CC,EAA1CD,CKlbsBzO,QAAA,CAAC7M,CAAD,CAAG,CAChC,CAAAkb,GAAA,CAAmBlb,CAAAC,OAAAkH,Mf6OfmD,EAAA,Ce5OJ+Q,Cf4OI,Ce9O4B,CLkbzBC,CK7bf,CCsFC5H,CAAA,CAAA,EAAA,CAAA,CAAA,CDtEG,GAAA,UAAA,EAAA,CAAAzL,QAAM,EAAA,CACF,MAAOT,EAAA,CAAG,QAAH,CAAA1B,SAAA,CACO,CACN0B,CAAA,CAAG,IAAH,CAAA1B,SAAA,CAAkB,OAAlB,CADM,CAENY,CAAA,CAAAkB,EAAA,CAAG,MAAH,CAAAhC,EAAAc,CACW,CACH,GAAM,UADH,CAEH,YAAe,uBAFZ,CAGH,UAAa,CAAA,CAHV,CADXA,CAAA,CAMY,CACJ8U,GAAS,IAAAL,GADL,CAEJ9L,MAAO,IAAAiM,GAFH,CANZ,CAAAnU,MAAA,CAUW,IAAA+T,GAVX,CAFM,CADP,CADL,CEhBV7W;QFiCCoX,GEjCD,EAAA,CAAA,CAAA,MAAA,CAAA,IAAA,CAAA,EAAA,OAAA,CAAAT,EAAA,CAAAC,SAAA,CAAA,CAAA,CAII,KAAAS,GAAA,CP2TW7D,CAAA8D,CAAoDC,EAApDD,CO3T4B9O,QAAA,CAAC7M,CAAD,CAAG,CACtCA,CAAAiU,eAAA,EACA4G,GAAA,EAFsC,CP2T/Bc,CO/Tf,CFiCCjI,CAAA,CAAA,EAAA,CAAA,CAAA,CExBG;EAAA,UAAA,EAAA,CAAAzL,QAAM,EAAA,CACF,IAAM0N,EAAWkE,CAAAlE,SAAjB,CACM,EAAsC,IAAA/P,EAD5C,CACQ,EAAA,CAAA,EADR,CACuB,EAAA,CAAA,EAEvB,OAAO4B,EAAA,CAAG,QAAH,CAAA5B,EAAA,CAAmB,CAAE6T,GAAI,QAAN,CAAnB,CAAA3T,SAAA,CACO,CACN0B,CAAA,CAAG,IAAH,CAAA5B,EAAA,CAAe,CAAE,GAAM,SAAR,CAAf,CAAAE,SAAA,CAA6C,CACzC0B,CAAA,CAAG,IAAH,CAAA1B,SAAA,CAAkB0B,CAAA,CAAG,GAAH,CAAqB,CAAb,GAAAmO,CAAA,CAAmC,UAAnC,CAAgDjO,IAAAA,EAAxD,CAAA9B,EAAA,CACP,CAAE,KAAQ,KAAV,CADO,CAAAE,SAAA,CACqB,KADrB,CAAlB,CADyC,CAGzC,GAHyC,CAIzC0B,CAAA,CAAG,IAAH,CAAA1B,SAAA,CAAkB0B,CAAA,CAAG,GAAH,CAAqB,CAAb,GAAAmO,CAAA,CAAsC,UAAtC,CAAmDjO,IAAAA,EAA3D,CAAA9B,EAAA,CACP,CAAE,KAAQ,WAAV,CADO,CAAAE,SAAA,CAC2B,QAD3B,CAAlB,CAJyC,CAMzC,GANyC,CAOzC0B,CAAA,CAAG,IAAH,CAAA1B,SAAA,CAAkB0B,CAAA,CAAG,GAAH,CAAqB,CAAb,GAAAmO,CAAA,CAAyC,UAAzC,CAAsDjO,IAAAA,EAA9D,CAAA9B,EAAA,CACP,CAAE,KAAQ,cAAV,CADO,CAAAE,SAAA,CAC8B,WAD9B,CAAlB,CAPyC,CAA7C,CADM,CAWN0B,CAAA,CAAG,MAAH,CAAA5B,EAAA,CAAiB,CAAE,GAAM,YAAR,CAAjB,CAAAE,SAAA,CAAkD,CAC9C0B,CAAA,CAAG,QAAH,CAAA1B,SAAA,CAAsB+V,CAAtB,CAD8C,CAE7B,CAAjB,CAACA,CAAD,CAAsB,aAAtB;AAAsC,YAFQ,CAAlD,CAXM,CAec,CAApB,CAACC,CAAD,CACIpV,CAAA,CAAAc,CAAA,CAAG,QAAH,CAAA5B,EAAAc,CACW,CAAE,GAAM,iBAAR,CADXA,CAAA,CAEY,CAAEsR,MAAO,IAAA0D,GAAT,CAFZ,CAAA5V,SAAA,CAGc,mBAHd,CAGkCgW,CAHlC,CAGkD,GAHlD,CADJ,CAKI,IApBE,CADP,CAJL,CxBTVzX;QAAA0X,GAAA,EAAA,CAAA,IAAA,EAAA,IAAA,EAAA,MAAA,CAAA,IAAA,CAAA,EAAA,OAAA,CAAAf,EAAA,CAAAC,SAAA,CAAA,CAAA,CACY,KAAAe,EAAA,CAAoB,EACpB,KAAAC,EAAA,CAAmB,CAAA,CAEnB,KAAAC,GAAA,CiB2TGrE,CAAA8D,CAAoDC,EAApDD,CjB3T6B9O,QAAA,CAAC7M,CAAD,CAAG,CACvCma,EAAA,CAAY,CAAAvU,EAAZ,CACA5F,EAAAiU,eAAA,EAFuC,CiB2ThC0H,CjBtTH,KAAAQ,GAAA,CiBgTGtE,CAAAuE,CAA0CC,EAA1CD,CjBhT8BvP,QAAA,CAAC7M,CAAD,CAAG,CACxC4a,EAAA,CAAY,CAAAhV,EAAZ,CACA5F,EAAAiU,eAAA,EAFwC,CiBgTjCmI,CjB3SH,KAAAE,GAAA,CiB+UGzE,CAAA0E,CAAoDC,EAApDD,CjB/UuC1P,QAAA,EAAG,CACjD,CAAAmP,EAAA,CAAiB,CAAApW,EAAA8T,MACjB,EAAAuC,EAAA,CAAe,CAAA,COyOX3R,EAAA,CPxOJ+Q,COwOI,CP3O6C,CiB+U1CkB,CjBzUH,KAAAE,GAAA,CiByaG5E,CAAAyD,CAA0CC,EAA1CD,CjBza4BzO,QAAA,CAAC7M,CAAD,CAAG,CACtC,CAAAgc,EAAA,CAAkBhc,CAAAC,OAAAkH,MADoB,CiBya/BmU,CjBraH,KAAAoB,GAAA,CiB+QG7E,CAAA6E,CAAwCC,EAAxCD,CjB/QoB7P,QAAA,EAAG,CAC9B,CAAAmP,EAAA,CAAiB,EACjB,EAAAC,EAAA,CAAe,CAAA,CO+NX3R,EAAA,CP9NJ+Q,CO8NI,CPjO0B,CiB+QvBqB,CjBzQH,KAAAvB,GAAA,CiB2aGtD,CAAAsD,CAA2CC,EAA3CD,CjB3a0BtO,QAAA,CAAC7M,CAAD,CAAG,CACpC,OAAQA,CAAAQ,QAAR,EACI,KAAM,EAAN,CACIga,EAAA,CAAY,CAAEJ,EAAO,CAAAxU,EAAT,CAAqB6U,GAAU,CAAAuB,EAA/B,CAAZ,CACA,EAAAA,EAAA,CAAiB,EACjB,EAAAC,EAAA,CAAe,CAAA,COsNnB3R,EAAA,CPrNI+Q,COqNJ,CPpNI,MACJ,MAAM,EAAN,CACI,CAAAW,EOkNJ,CPlNqB,EOkNrB,CPjNI,CAAAC,EOiNJ,CPjNmB,CAAA,COiNnB,CAAA3R,CAAA,CPhNI+Q,COgNJ,CP1NJ,CADoC,CiB2a7BF,CjBzcf,CAAAzH,CAAA,CAAA,EAAA,CAAA,CAAA,CA8CI;EAAA,UAAA,EAAA,CAAAzL,QAAM,EAAA,CACF,IAAMmS,EAAQ,IAAAxU,EAAd,CACMqP,EAAOzN,CAAA,CAAG,KAAH,CAAU,MAAV,CAAA1B,SAAA,CAA2B,CACpCY,CAAA,CAAAkB,EAAAlB,CAAG,UAAHA,CAAe,QAAfA,CAAA,CAAgC,CAAEqR,GAAQ,IAAAoE,GAAV,CAAhC,CAAA/U,QAAA,CAAyEgT,CAAAR,EAAzE,CADoC,CAEpClT,CAAA,CAAAc,CAAAd,CAAG,OAAHA,CAAA,CAAmB,CAAEkW,GAAa,IAAAN,GAAf,CAAnB,CAAAxW,SAAA,CAAsEsU,CAAAV,MAAtE,CAFoC,CAGpChT,CAAA,CAAAc,CAAAd,CAAG,QAAHA,CAAa,SAAbA,CAAA,CAA+B,CAAEsR,MAAO,IAAAkE,GAAT,CAA/B,CAHoC,CAA3B,CADb,CAMIrW,CAEA,KAAAoW,EAAJ,EACIpW,CAeA,CAfYuU,CAAAR,EAAA,CAAkB,mBAAlB,CAAwC,SAepD,CAdMvK,CAcN,CAdchI,EAAA,CAAAX,CAAAW,CAAAO,EAAAlB,CAAG,MAAHA,CAAW,MAAXA,CAAAW,CACF,CACJgI,MAAO,IAAAoN,GADH,CAEJ3E,KAAM,IAAA4E,GAFF,CAGJlB,GAAS,IAAAL,GAHL,CADE9T,CAAA,CAML,QAAA,CAACP,CAAD,CAAE,CACCA,CAAJ,EACIhC,EAAA,CAAqB,QAAA,EAAA,CAChBgC,CAAA+V,MAAA,EADgB,CAArB,CAFD,CANG,CAAA1V,MAAA,CAaH,IAAA6U,EAbG,CAcd,CAAAlW,CAAA,CAAW,CAACmP,CAAD,CAAO5F,CAAP,CAhBf,GAkBQ+K,CAAAR,EAGJ,GAFI/T,CAEJ,CAFgB,WAEhB,EAAAC,CAAA,CAAW,CAACmP,CAAD,CArBf,CAwBA,OAAOzN,EAAA,CAAG,IAAH,CAAS3B,CAAT,CAAAC,SAAA,CAA6BA,CAA7B,CAjCL,CAqCV,SAAAgX,GAAA,CAAA,CAAA,CAAA,CAA+BlT,CAA/B,MAAA,CAAA,IAAA,CAAA,SAAA,CAAA,CAAA8J,CAAA,CAAA,EAAA,CAAA,CAAA,CAII;EAAA,UAAA,EAAA,CAAAzL,QAAM,EAAA,CACF,IAAM6R,EAAUD,CAAAC,QAAhB,CACM,EAAsC,IAAAlU,EAD5C,CACQ,EAAA,CAAA,EADR,CACuB,EAAA,CAAA,EAGvB,QAAQiU,CAAAlE,SAAR,EACI,KAAK,CAAL,CACI7P,CAAA,CAA6B,CAAlB,GAAA+V,CAAA,CACP,IADO,CAEP/B,CAAAiD,IAAA,CAAY,QAAA,CAAC3d,CAAD,CAAO,CAAA,MAACA,EAAAwa,EAAD,CAA4C,IAA5C,CAAe7R,CAAA,CAAGgU,EAAH,CAAc3c,CAAd,CAAAoH,IAAA,CAAqBpH,CAAAqa,GAArB,CAAf,CAAnB,CACJ,MACJ,MAAK,CAAL,CACI3T,CAAA,CAAgC,CAArB,GAAAgW,CAAA,CACP,IADO,CAEPhC,CAAAiD,IAAA,CAAY,QAAA,CAAC3d,CAAD,CAAO,CAAA,MAAAA,EAAAwa,EAAA,CAAc7R,CAAA,CAAGgU,EAAH,CAAc3c,CAAd,CAAAoH,IAAA,CAAqBpH,CAAAqa,GAArB,CAAd,CAA2C,IAA3C,CAAnB,CACJ,MACJ,SACI3T,CAAA,CAAWgU,CAAAiD,IAAA,CAAY,QAAA,CAAC3d,CAAD,CAAO,CAAA,MAAA2I,EAAA,CAAGgU,EAAH,CAAc3c,CAAd,CAAAoH,IAAA,CAAqBpH,CAAAqa,GAArB,CAAA,CAAnB,CAZnB,CAeA,MAAOjS,EAAA,CAAG,IAAH,CAAA5B,EAAA,CACI,CAAE,GAAM,WAAR,CADJ,CAAAE,SAAA,CAEOA,CAFP,CApBL,CyBtFVzB,SzB8GC2Y,GyB9GD,EAAA,CAAA,IAAA,EAAA,IAAA,EAAA,MAAA,CAAA,IAAA,CAAA,EAAA,OAAA,CAAAhC,EAAA,CAAAC,SAAA,CAAA,CAAA,CAIY,KAAAmB,GAAA,CRoTGvE,CAAAuE,CAA0CC,EAA1CD,CQpTwBvP,QAAA,CAAC7M,CAAD,CAAG,CAClCA,CAAAiU,eAAA,EACAyG,GAAA,CAAU,CAAA9U,EAAAkW,EAAV,GAA0CjC,CAAAC,QAAA1X,OAA1C,CAFkC,CRoT3Bga,CQxTf,CzB8GC1I,CAAA,CAAA,EAAA,CAAA,CAAA,CyBrGG;EAAA,UAAA,EAAA,CAAAzL,QAAM,EAAA,CACF,MAAOT,EAAA,CAAG,SAAH,CAAA5B,EAAA,CAAoB,CAAE,GAAM,MAAR,CAApB,CAAAE,SAAA,CACO,CACNY,CAAA,CAAAkB,EAAA,CAAG,UAAH,CAAAhC,EAAAc,CACW,CAAE,GAAM,YAAR,CADXA,CAAA,CAEY,CACJqR,GAAQ,IAAAqE,GADJ,CAFZ,CAAAhV,QAAA,CAKa,IAAAxB,EAAAkW,EALb,GAK6CjC,CAAAC,QAAA1X,OAL7C,CADM,CAON2F,CAAA,CAAG+U,EAAH,CAAc,CACVjB,EAAe,IAAAjW,EAAAiW,EADL,CAEVC,EAAkB,IAAAlW,EAAAkW,EAFR,CAAd,CAPM,CADP,CADL,CCPVzX,SDsBCoU,GCtBD,EAAA,CAAA,CAAA,MAAA,CAAA,IAAA,CAAA,EAAA,OAAA,CAAAuC,EAAA,CAAAC,SAAA,CAAA,CAAA,CAAA,CDsBCvH,CAAA,CAAA,EAAA,CAAA,CAAA,CCbG,GAAA,UAAA,EAAA,CAAAzL,QAAM,EAAA,CACF,IAAM6R,EAAUD,CAAAC,QAAhB,CACIgC,EAAmB,CACvBhC,EAAAa,QAAA,CAAgB,QAAA,CAACvb,CAAD,CAAE,CACVA,CAAAwa,EAAJ,EACIkC,CAAA,EAFU,CAAlB,CAKA,KAAMD,EAAgB/B,CAAA1X,OAAhByZ,CAAiCC,CAEvC,OAAOtU,EAAA,CAAG,SAAH,CAAA1B,SAAA,CACyB,CAAlB,CAACgU,CAAA1X,OAAD,CACN,CACI2F,CAAA,CAAGgT,EAAH,CADJ,CAEIhT,CAAA,CAAGiV,EAAH,CAAS,CACLnB,EAAeA,CADV,CAELC,EAAkBA,CAFb,CAAT,CAFJ,CAMI/T,CAAA,CAAG0T,EAAH,CAAW,CACPI,EAAeA,CADR,CAEPC,EAAkBA,CAFX,CAAX,CANJ,CADM,CAYN,CAAC/T,CAAA,CAAGgT,EAAH,CAAD,CAbD,CAVL,CPJN1W,SO6BH4Y,GP7BG,CAAYC,CAAZ,CAAmCrQ,CAAnC,CAAwD,CACpD,IAAAqQ,KAAA,CAAYA,CACZ,KAAArQ,EAAA,CAAeA,CAFqC;AAM5DsQ,QAAAC,GAAA,CAAuBC,CAAvB,CAAwCH,CAAxC,CAAoD,CAChD,GAAa,EAAb,GAAIA,CAAJ,EAA+B,GAA/B,GAAmBA,CAAA,CAAK,CAAL,CAAnB,CACI,GAAgB,GAAhB,GAAIA,CAAA,CAAK,CAAL,CAAJ,CACIA,CAAA,CAAOA,CAAAI,OAAA,CAAY,CAAZ,CADX,KAGI,OAAO,CAAA,CAIf,KAAK,IAAInb,EAAI,CAAb,CAAgBA,CAAhB,CAAoBkb,CAAAjb,OAApB,CAAmCD,CAAA,EAAnC,CAAwC,CACpC,IAAMmW,EAAI+E,CAAA,CAAOlb,CAAP,CAAV,CACMoP,EAAI+G,CAAA4E,KACV,IAAiB,QAAjB,GAAI,MAAO3L,EAAX,CACI,IAAI2L,CAAJ,GAAa3L,CAAb,CAEI,MADA+G,EAAAzL,EAAA,EACO,CAAA,CAAA,CAFX,CADJ,IAOI,IADM0Q,CACN,CADcL,CAAAK,MAAA,CAAWhM,CAAX,CACd,CAMI,MALmB,EAAnB,CAAIgM,CAAAnb,OAAJ,CACIkW,CAAAzL,EAAA,CAAU0Q,CAAAvW,MAAA,CAAY,CAAZ,CAAV,CADJ,CAGIsR,CAAAzL,EAAA,EAEG,CAAA,CAAA,CAhBqB,CAoBxC,MAAO,CAAA,CA7ByC,CA6DpD,IAAM2C,GAAYtO,QAAAsc,eAAA,CAAwB,SAAxB,CA7BlBC;SAAA,CAA2BJ,CAA3B,CAA4CK,CAA5C,CAA8DC,CAA9D,CAAmF,CAAvCD,CAAA,CAAA,IAAA,EAAA,GAAAA,CAAA,CAAc,EAAd,CAAAA,CACxC,KAAM3S,EAAI4K,QAAV,CACIiI,EAAWC,kBAAA,CAAmB9S,CAAA+S,KAAnB,CACE,GAAjB,GAAIF,CAAJ,GACI7S,CAAA+S,KADJ,CACaF,CADb,CACwB,IADxB,CAC+BF,CAD/B,CAIAxe,OAAAC,iBAAA,CAAwB,YAAxB,CAAsC,QAAA,EAAA,CAClC,IAAM4e,EAAUF,kBAAA,CAAmB9S,CAAA+S,KAAnB,CACA,GAAhB,GAAIC,CAAJ,GACIhT,CAAA+S,KADJ,CACaF,CADb,CACwB,IADxB,CAC+BF,CAD/B,CAGIE,EAAJ,GAAiBG,CAAjB,GACIH,CACA,CADWG,CACX,CAAKX,EAAA,CAAcC,CAAd,CAAsBU,CAAtB,CAAL,EACqBrW,IAAAA,EADrB,GACQiW,CADR,EAEQA,CAAA,EAJZ,CALkC,CAAtC,CAeKP,GAAA,CAAcC,CAAd,CAAsBO,CAAtB,CAAL,EACqBlW,IAAAA,EADrB,GACQiW,CADR,EAEQA,CAAA,EAxBuE,CAAnFF,CA+BA,CAAW,CACP,IAAIR,EAAJ,CAAU,YAAV,CAAwB,QAAA,EAAA,CACpBjD,EAAA,CAAY,CAAZ,CADoB,CAAxB,CADO,CAIP,IAAIiD,EAAJ,CAAU,SAAV,CAAqB,QAAA,EAAA,CACjBjD,EAAA,CAAY,CAAZ,CADiB,CAArB,CAJO,CAOP,IAAIiD,EAAJ,CAAU,GAAV,CAAe,QAAA,EAAA,CACXjD,EAAA,CAAY,CAAZ,CADW,CAAf,CAPO,CAAX,CC9DId,GAAA,CD0Ec8E,EAClBC,SAAAD,GAAA,EAAA,CACIxF,EAAA,EADJ,CACIA,EAAA","file":"bundle.js","sourceRoot":"../..","sourcesContent":["/**\n * Feature Detection is used to implement polyfills or just disable some features when browser doesn't support them.\n * For example, when browser doesn't support passive events, we can just ignore it and always use active events.\n *\n * NOTE: Do not implement feature detection for features that aren't used in `ivi` library.\n */\n\n/**\n * Feature Flags.\n */\nexport const enum FeatureFlags {\n    /**\n     * Passive event listeners are a new feature in the DOM spec that enable developers to opt-in to better scroll\n     * performance by eliminating the need for scrolling to block on touch and wheel event listeners. Developers can\n     * annotate touch and wheel listeners with {passive: true} to indicate that they will never invoke preventDefault.\n     *\n     * https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n     */\n    PassiveEvents = 1,\n    /**\n     * The `performancemark()` method creates a timestamp in the browser's performance entry buffer with the given\n     * name.\n     *\n     * https://developer.mozilla.org/en-US/docs/Web/API/Performance/mark\n     */\n    DevModePerfMarks = 1 << 1,\n    /**\n     * IE and some Edge versions doesn't support `innerHTML` on SVG elements.\n     */\n    SVGInnerHTML = 1 << 2,\n    /**\n     * `key` property on KeyboardEvent instances.\n     */\n    KeyboardEventKey = 1 << 3,\n    /**\n     * Browser supports native promises.\n     *\n     * IE11 and Android 4.4 doesn't support native promises.\n     */\n    // NativePromise = 1 << 4,\n}\n\n/**\n * Supported Features, see `FeatureFlags` for details.\n */\nexport let FEATURES: FeatureFlags = 0;\n\nif (__IVI_BROWSER__) {\n    /**\n     * Passive Events:\n     *\n     * https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n     */\n    try {\n        // Test via a getter in the options object to see if the passive property is accessed\n        const opts = Object.defineProperty({}, \"passive\", {\n            get: function () {\n                FEATURES |= FeatureFlags.PassiveEvents;\n            },\n        });\n        window.addEventListener(\"test\", null as any as (ev: Event) => void, opts);\n    } catch (e) {\n        /* tslint:disable:no-empty */\n        /* tslint:enable:no-empty */\n    }\n\n    /**\n     * Check `performance.mark` availability.\n     */\n    if (__IVI_DEV__) {\n        if (performance && performance.mark && performance.measure) {\n            FEATURES |= FeatureFlags.DevModePerfMarks;\n        }\n    }\n\n    /**\n     * Check `innerHTML` availability in `SVGElement`s.\n     */\n    if (\"innerHTML\" in SVGElement.prototype) {\n        FEATURES |= FeatureFlags.SVGInnerHTML;\n    }\n\n    /**\n     * Check `key` availability in `KeyboardEvent`s.\n     */\n    if (\"key\" in KeyboardEvent.prototype) {\n        FEATURES |= FeatureFlags.KeyboardEventKey;\n    }\n\n    /**\n     * Check native `Promise` availability.\n     */\n    // if (typeof Promise !== \"undefined\" && Promise.toString().indexOf(\"native code\") > -1) {\n    //     FEATURES |= FeatureFlags.NativePromise;\n    // }\n}\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"/**\n * User Agent detection is used to fix some quirks like iOS event bubbling, etc.\n *\n * NOTE: Do not implement any browser detection that aren't used in `ivi` library.\n */\n\nconst ua = __IVI_BROWSER__ && navigator ? navigator.userAgent : \"\";\n\n/**\n * User Agent Flags.\n */\nexport const enum UserAgentFlags {\n    /**\n     * iOS browser (iPad, iPhone, iPod).\n     */\n    iOS = 1,\n    /**\n     * iOS full screen mode.\n     */\n    iOSStandalone = 1 << 1,\n    /**\n     * Android browser.\n     */\n    Android = 1 << 2,\n};\n\n/**\n * User Agent, see `UserAgentFlags` for details.\n */\nexport let USER_AGENT: UserAgentFlags = 0;\n\nif (__IVI_BROWSER__) {\n    if (/iPad|iPhone|iPod/.test(ua) && !(\"MSStream\" in window)) {\n        USER_AGENT |= (\"standalone\" in navigator) ?\n            UserAgentFlags.iOS | UserAgentFlags.iOSStandalone :\n            UserAgentFlags.iOS;\n    }\n\n    if (ua.indexOf(\"Android\") > -1) {\n        USER_AGENT |= UserAgentFlags.Android;\n    }\n}\n","/**\n * Miscellaneous DOM related stuff.\n */\nimport { FeatureFlags, FEATURES } from \"./feature_detection\";\n\nexport const SVG_NAMESPACE = \"http://www.w3.org/2000/svg\";\nexport const XLINK_NAMESPACE = \"http://www.w3.org/1999/xlink\";\nexport const XML_NAMESPACE = \"http://www.w3.org/XML/1998/namespace\";\n\n/**\n * KeyboardEvent keyCode values.\n */\nexport const enum KeyCode {\n    WinKeyFFLinux = 0,\n    MacEnter = 3,\n    Backspace = 8,\n    Tab = 9,\n    Clear = 12,\n    Enter = 13,\n    Shift = 16,\n    Control = 17,\n    Alt = 18,\n    Pause = 19,\n    CapsLock = 20,\n    Escape = 27,\n    Space = 32,\n    PageUp = 33,\n    PageDown = 34,\n    End = 35,\n    Home = 36,\n    ArrowLeft = 37,\n    ArrowUp = 38,\n    ArrowRight = 39,\n    ArrowDown = 40,\n    NumNorthEast = 33,\n    NumSouthEast = 34,\n    NumSouthWest = 35,\n    NumNorthWest = 36,\n    NumWest = 37,\n    NumNorth = 38,\n    NumEast = 39,\n    NumSouth = 40,\n    PrintScreen = 44,\n    Insert = 45,\n    NumInsert = 45,\n    Delete = 46,\n    NumDelete = 46,\n    Zero = 48,\n    Ono = 49,\n    Two = 50,\n    Three = 51,\n    Four = 52,\n    Five = 53,\n    Six = 54,\n    Seven = 55,\n    Eight = 56,\n    Nine = 57,\n    FFSemicolon = 59,\n    FFEquals = 61,\n    /**\n     * US keyboard layouts only.\n     */\n    QuestionMark = 63,\n    A = 65,\n    B = 66,\n    C = 67,\n    D = 68,\n    E = 69,\n    F = 70,\n    G = 71,\n    H = 72,\n    I = 73,\n    J = 74,\n    K = 75,\n    L = 76,\n    M = 77,\n    N = 78,\n    O = 79,\n    P = 80,\n    Q = 81,\n    R = 82,\n    S = 83,\n    T = 84,\n    U = 85,\n    V = 86,\n    W = 87,\n    X = 88,\n    Y = 89,\n    Z = 90,\n    Meta = 91,\n    WinKeyLeft = 91,\n    WinKeyRight = 92,\n    ContextMenu = 93,\n    NumZero = 96,\n    NumOne = 97,\n    NumTwo = 98,\n    NumThree = 99,\n    NumFour = 100,\n    NumFive = 101,\n    NumSix = 102,\n    NumSeven = 103,\n    NumEight = 104,\n    NumNine = 105,\n    NumMultiply = 106,\n    NumPlus = 107,\n    NumMinus = 109,\n    NumPeriod = 110,\n    NumDivision = 111,\n    F1 = 112,\n    F2 = 113,\n    F3 = 114,\n    F4 = 115,\n    F5 = 116,\n    F6 = 117,\n    F7 = 118,\n    F8 = 119,\n    F9 = 120,\n    F10 = 121,\n    F11 = 122,\n    F12 = 123,\n    NumLock = 144,\n    ScrollLock = 145,\n    /**\n     * First OS specific media key.\n     */\n    FirstMediaKey = 166,\n    /**\n     * Last OS specific media key.\n     */\n    LastMediaKey = 183,\n    /**\n     * US keyboard layouts only.\n     */\n    Semicolon = 186,\n    /**\n     * US keyboard layouts only.\n     */\n    Dash = 189,\n    /**\n     * US keyboard layouts only.\n     */\n    Equals = 187,\n    /**\n     * US keyboard layouts only.\n     */\n    Comma = 188,\n    /**\n     * US keyboard layouts only.\n     */\n    Period = 190,\n    /**\n     * US keyboard layouts only.\n     */\n    Slash = 191,\n    /**\n     * US keyboard layouts only.\n     */\n    Apostrophe = 192,\n    /**\n     * US keyboard layouts only.\n     */\n    Tilde = 192,\n    /**\n     * US keyboard layouts only.\n     */\n    SingleQuote = 222,\n    /**\n     * US keyboard layouts only.\n     */\n    OpenSquareBracket = 219,\n    /**\n     * US keyboard layouts only.\n     */\n    Backslash = 220,\n    /**\n     * US keyboard layouts only.\n     */\n    CloseSquareBracket = 221,\n    Win = 224,\n    MacFFMeta = 224,\n    WinIME = 229,\n}\n\n/**\n * KeyboardEvent keyLocation values.\n */\nexport const enum KeyLocation {\n    Standard = 0,\n    Left = 1,\n    Right = 2,\n    NumPad = 3,\n    Mobile = 4,\n    Joystick = 5,\n}\n\n/**\n * Flags for MouseEvent buttons property.\n *\n * Buttons property aren't widely supported by all major browsers at this time, and there is no easy way to polyfill\n * it.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons\n */\nexport const enum MouseButtons {\n    Left = 1,\n    Right = 1 << 1,\n    /**\n     * Wheel or middle button.\n     */\n    Middle = 1 << 2,\n    /**\n     * Typically the \"Browser Back\" button.\n     */\n    Fourh = 1 << 3,\n    /**\n     * Typically the \"Browser Forward\" button.\n     */\n    Fifth = 1 << 4,\n}\n\n/**\n * Gets target element from an Event.\n *\n * There are still some differences in modern browsers, so we need to get event targets with this function.\n *\n * #quirks\n *\n * @param ev Event.\n * @returns Target Element.\n */\nexport function getEventTarget(ev: Event): EventTarget {\n    let target = ev.target || window;\n\n    /**\n     * Some browsers are implementing it according to SVG 1.1 specs:\n     *\n     * https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/7998724/\n     *\n     * \"If event attributes are assigned to referenced elements, then the actual target for the event will be the\n     * SVGElementInstance object within the 'instance tree' corresponding to the given referenced element.\"\n     *\n     * https://www.w3.org/TR/SVG/struct.html#UseElement\n     *\n     * SVG 2 redefined the use event handling model:\n     *\n     * - Removed the SVGElementInstance and SVGElementInstanceList interfaces, and the corresponding attributes on the\n     *   SVGUseElement interface.\n     * - Changed the ‘use’ element event flow to follow the Shadow DOM spec.\n     *\n     * https://www.w3.org/TR/SVG2/changes.html#structure\n     */\n    if ((target as any).correspondingUseElement) {\n        target = (target as any).correspondingUseElement;\n    }\n\n    /**\n     * Safari fires events on Text Nodes.\n     *\n     * http://www.quirksmode.org/js/events_properties.html\n     */\n    return (target as Node).nodeType === 3 ? (target as Node).parentNode! : target;\n}\n\nconst KEY_CODE_TO_KEY: { [key: number]: string } = {\n    [KeyCode.Backspace]: \"Backspace\",\n    [KeyCode.Tab]: \"Tab\",\n    [KeyCode.Clear]: \"Clear\",\n    [KeyCode.Enter]: \"Enter\",\n    [KeyCode.Shift]: \"Shift\",\n    [KeyCode.Control]: \"Control\",\n    [KeyCode.Alt]: \"Alt\",\n    [KeyCode.Pause]: \"Pause\",\n    [KeyCode.CapsLock]: \"CapsLock\",\n    [KeyCode.Escape]: \"Escape\",\n    [KeyCode.Space]: \" \",\n    [KeyCode.PageUp]: \"PageUp\",\n    [KeyCode.PageDown]: \"PageDown\",\n    [KeyCode.End]: \"End\",\n    [KeyCode.Home]: \"Home\",\n    [KeyCode.ArrowLeft]: \"ArrowLeft\",\n    [KeyCode.ArrowUp]: \"ArrowUp\",\n    [KeyCode.ArrowRight]: \"ArrowRight\",\n    [KeyCode.ArrowDown]: \"ArrowDown\",\n    [KeyCode.PrintScreen]: \"PrintScreen\",\n    [KeyCode.Insert]: \"Insert\",\n    [KeyCode.Delete]: \"Delete\",\n    [KeyCode.Meta]: \"Meta\",\n    [KeyCode.F1]: \"F1\",\n    [KeyCode.F2]: \"F2\",\n    [KeyCode.F3]: \"F3\",\n    [KeyCode.F4]: \"F4\",\n    [KeyCode.F5]: \"F5\",\n    [KeyCode.F6]: \"F6\",\n    [KeyCode.F7]: \"F7\",\n    [KeyCode.F8]: \"F8\",\n    [KeyCode.F9]: \"F9\",\n    [KeyCode.F10]: \"F10\",\n    [KeyCode.F11]: \"F11\",\n    [KeyCode.F12]: \"F12\",\n    [KeyCode.NumLock]: \"NumLock\",\n    [KeyCode.ScrollLock]: \"ScrollLock\",\n    [KeyCode.Win]: \"Win\",\n};\n\n/**\n * Gets a `charCode` from a KeyboardEvent.\n *\n * #quirks\n *\n * @param ev Keyboard Event\n * @returns A char code.\n */\nexport function getEventCharCode(ev: KeyboardEvent): number {\n    const keyCode = ev.keyCode;\n    let charCode = ev.charCode;\n\n    if (charCode === 0 && keyCode === 13) {\n        charCode = 13;\n    }\n\n    if (charCode >= 32 || charCode === 13) {\n        return charCode;\n    }\n\n    return 0;\n}\n\n/**\n * Gets a `key` from a KeybordEvent.\n *\n * #quirks\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key\n *\n * @param ev Keyboard Event.\n * @returns A `key` property.\n */\nexport function getEventKey(ev: KeyboardEvent): string {\n    if (ev.type === \"keypress\") {\n        const charCode = getEventCharCode(ev);\n        if (charCode === 13) {\n            return \"Enter\";\n        }\n        return String.fromCharCode(charCode);\n    } else if (ev.type === \"keydown\" || ev.type === \"keyup\") {\n        const key = KEY_CODE_TO_KEY[ev.keyCode];\n        if (key !== undefined) {\n            return key;\n        }\n    }\n\n    return \"Unidentified\";\n}\n\n/**\n * Set inner HTML.\n *\n * #quirks\n *\n * @param element DOM Element.\n * @param content Inner HTML content.\n * @param isSVG Element is SVG.\n */\nexport function setInnerHTML(element: Element, content: string, isSVG: boolean): void {\n    // #msapp\n    //\n    // innerHTML should be invoked inside an unsafe context `MSApp.execUnsafeLocalFunction`\n    // All details here: https://msdn.microsoft.com/en-us/library/windows/apps/hh767331.aspx\n\n    // Doesn't work on SVG Elements in IE. Latest Edge versions are working fine.\n    if (!isSVG || FEATURES & FeatureFlags.SVGInnerHTML) {\n        element.innerHTML = content;\n    } else {\n        setInnerSVG(element as SVGElement, content);\n    }\n}\n\n/**\n * Container for SVG Elements.\n *\n * #quirks\n */\nlet innerHTMLSVGContainer: HTMLDivElement | undefined;\n\n/**\n * Set innerHTML on SVG elements in browsers that doesn't support innerHTML on SVG elements.\n *\n * #quirks\n *\n * @param element SVG element.\n * @param content Inner HTML content.\n */\nfunction setInnerSVG(element: SVGElement, content: string): void {\n    if (!innerHTMLSVGContainer) {\n        innerHTMLSVGContainer = document.createElement(\"div\");\n    }\n    innerHTMLSVGContainer.innerHTML = `<svg>${content}</svg>`;\n    const svg = innerHTMLSVGContainer.firstChild;\n    while (svg.firstChild) {\n        element.appendChild(svg.firstChild);\n    }\n}\n\n/**\n * Traverses the DOM to the top and calculates DOM Node depth.\n *\n * @param node DOM Node.\n * @returns DOM Node depth.\n */\nexport function nodeDepth(node: Node | null): number {\n    let depth = 0;\n    while (node) {\n        depth++;\n        node = node.parentNode;\n    }\n    return depth;\n}\n\n/**\n * Finds a first leaf node.\n *\n * @param node DOM Node.\n * @return A leaf node.\n */\nexport function firstLeaf(node: Node): Node {\n    while (node && node.firstChild) {\n        node = node.firstChild;\n    }\n    return node;\n}\n\n/**\n * Finds a next sibling node.\n *\n * @param node DOM Node.\n * @return Next sibling.\n */\nexport function nextSibling(node: Node): Node | null {\n    while (node) {\n        if (node.nextSibling) {\n            return node.nextSibling;\n        }\n        node = node.parentNode;\n    }\n    return null;\n}\n\nexport type HTMLTagType =\n    \"a\" |\n    \"abbr\" |\n    \"acronym\" |\n    \"address\" |\n    \"applet\" |\n    \"area\" |\n    \"article\" |\n    \"aside\" |\n    \"b\" |\n    \"base\" |\n    \"basefont\" |\n    \"bdo\" |\n    \"big\" |\n    \"blockquote\" |\n    \"body\" |\n    \"br\" |\n    \"button\" |\n    \"canvas\" |\n    \"caption\" |\n    \"center\" |\n    \"cite\" |\n    \"code\" |\n    \"col\" |\n    \"colgroup\" |\n    \"datalist\" |\n    \"dd\" |\n    \"del\" |\n    \"dfn\" |\n    \"dir\" |\n    \"div\" |\n    \"dl\" |\n    \"dt\" |\n    \"em\" |\n    \"embed\" |\n    \"fieldset\" |\n    \"figcaption\" |\n    \"figure\" |\n    \"font\" |\n    \"footer\" |\n    \"form\" |\n    \"frame\" |\n    \"frameset\" |\n    \"h1\" |\n    \"h2\" |\n    \"h3\" |\n    \"h4\" |\n    \"h5\" |\n    \"h6\" |\n    \"head\" |\n    \"header\" |\n    \"hgroup\" |\n    \"hr\" |\n    \"html\" |\n    \"i\" |\n    \"iframe\" |\n    \"img\" |\n    \"ins\" |\n    \"isindex\" |\n    \"kbd\" |\n    \"keygen\" |\n    \"label\" |\n    \"legend\" |\n    \"li\" |\n    \"link\" |\n    \"listing\" |\n    \"map\" |\n    \"mark\" |\n    \"marquee\" |\n    \"menu\" |\n    \"meta\" |\n    \"meter\" |\n    \"nav\" |\n    \"nextid\" |\n    \"nobr\" |\n    \"noframes\" |\n    \"noscript\" |\n    \"object\" |\n    \"ol\" |\n    \"optgroup\" |\n    \"option\" |\n    \"p\" |\n    \"param\" |\n    \"picture\" |\n    \"plaintext\" |\n    \"pre\" |\n    \"progress\" |\n    \"q\" |\n    \"rt\" |\n    \"ruby\" |\n    \"s\" |\n    \"samp\" |\n    \"script\" |\n    \"section\" |\n    \"select\" |\n    \"small\" |\n    \"source\" |\n    \"span\" |\n    \"strike\" |\n    \"strong\" |\n    \"style\" |\n    \"sub\" |\n    \"sup\" |\n    \"table\" |\n    \"tbody\" |\n    \"td\" |\n    \"template\" |\n    \"textarea\" |\n    \"tfoot\" |\n    \"th\" |\n    \"thead\" |\n    \"title\" |\n    \"tr\" |\n    \"track\" |\n    \"tt\" |\n    \"u\" |\n    \"ul\" |\n    \"var\" |\n    \"wbr\" |\n    \"x-ms-webview\" |\n    \"xmp\";\n\nexport type SVGTagType =\n    \"circle\" |\n    \"clippath\" |\n    \"defs\" |\n    \"desc\" |\n    \"ellipse\" |\n    \"feblend\" |\n    \"fecolormatrix\" |\n    \"fecomponenttransfer\" |\n    \"fecomposite\" |\n    \"feconvolvematrix\" |\n    \"fediffuselighting\" |\n    \"fedisplacementmap\" |\n    \"fedistantlight\" |\n    \"feflood\" |\n    \"fefunca\" |\n    \"fefuncb\" |\n    \"fefuncg\" |\n    \"fefuncr\" |\n    \"fegaussianblur\" |\n    \"feimage\" |\n    \"femerge\" |\n    \"femergenode\" |\n    \"femorphology\" |\n    \"feoffset\" |\n    \"fepointlight\" |\n    \"fespecularlighting\" |\n    \"fespotlight\" |\n    \"fetile\" |\n    \"feturbulence\" |\n    \"filter\" |\n    \"foreignobject\" |\n    \"g\" |\n    \"image\" |\n    \"line\" |\n    \"lineargradient\" |\n    \"marker\" |\n    \"mask\" |\n    \"metadata\" |\n    \"path\" |\n    \"pattern\" |\n    \"polygon\" |\n    \"polyline\" |\n    \"radialgradient\" |\n    \"rect\" |\n    \"stop\" |\n    \"svg\" |\n    \"switch\" |\n    \"symbol\" |\n    \"text\" |\n    \"textpath\" |\n    \"tspan\" |\n    \"use\" |\n    \"view\";\n\nexport type MediaTagType =\n    \"audio\" |\n    \"video\";\n\nexport type InputType =\n    \"textarea\" | // not a real input type, just one exception for textarea elements\n    \"button\" |\n    \"checkbox\" |\n    \"color\" |\n    \"date\" |\n    \"datetime\" |\n    \"datetime-local\" |\n    \"email\" |\n    \"file\" |\n    \"hidden\" |\n    \"image\" |\n    \"month\" |\n    \"number\" |\n    \"password\" |\n    \"radio\" |\n    \"range\" |\n    \"reset\" |\n    \"search\" |\n    \"submit\" |\n    \"tel\" |\n    \"text\" |\n    \"time\" |\n    \"url\" |\n    \"week\";\n\nexport type KeyName =\n    \"Accept\" |\n    \"Add\" |\n    \"Again\" |\n    \"AllCandidates\" |\n    \"Alphanumeric\" |\n    \"Alt\" |\n    \"AltGraph\" |\n    \"Apps\" |\n    \"Attn\" |\n    \"BrowserBack\" |\n    \"BrowserFavorites\" |\n    \"BrowserForward\" |\n    \"BrowserHome\" |\n    \"BrowserRefresh\" |\n    \"BrowserSearch\" |\n    \"BrowserStop\" |\n    \"Camera\" |\n    \"CapsLock\" |\n    \"Clear\" |\n    \"CodeInput\" |\n    \"Compose\" |\n    \"Control\" |\n    \"Crsel\" |\n    \"Convert\" |\n    \"Copy\" |\n    \"Cut\" |\n    \"Decimal\" |\n    \"Divide\" |\n    \"Down\" |\n    \"DownLeft\" |\n    \"DownRight\" |\n    \"Eject\" |\n    \"End\" |\n    \"Enter\" |\n    \"EraseEof\" |\n    \"Execute\" |\n    \"Exsel\" |\n    \"Fn\" |\n    \"F1\" |\n    \"F2\" |\n    \"F3\" |\n    \"F4\" |\n    \"F5\" |\n    \"F6\" |\n    \"F7\" |\n    \"F8\" |\n    \"F9\" |\n    \"F10\" |\n    \"F11\" |\n    \"F12\" |\n    \"F13\" |\n    \"F14\" |\n    \"F15\" |\n    \"F16\" |\n    \"F17\" |\n    \"F18\" |\n    \"F19\" |\n    \"F20\" |\n    \"F21\" |\n    \"F22\" |\n    \"F23\" |\n    \"F24\" |\n    \"FinalMode\" |\n    \"Find\" |\n    \"FullWidth\" |\n    \"HalfWidth\" |\n    \"HangulMode\" |\n    \"HanjaMode\" |\n    \"Help\" |\n    \"Hiragana\" |\n    \"Home\" |\n    \"Insert\" |\n    \"JapaneseHiragana\" |\n    \"JapaneseKatakana\" |\n    \"JapaneseRomaji\" |\n    \"JunjaMode\" |\n    \"KanaMode\" |\n    \"KanjiMode\" |\n    \"Katakana\" |\n    \"LaunchApplication1\" |\n    \"LaunchApplication2\" |\n    \"LaunchMail\" |\n    \"Left\" |\n    \"Menu\" |\n    \"Meta\" |\n    \"MediaNextTrack\" |\n    \"MediaPlayPause\" |\n    \"MediaPreviousTrack\" |\n    \"MediaStop\" |\n    \"ModeChange\" |\n    \"NextCandidate\" |\n    \"Nonconvert\" |\n    \"NumLock\" |\n    \"PageDown\" |\n    \"PageUp\" |\n    \"Paste\" |\n    \"Pause\" |\n    \"Play\" |\n    \"Power\" |\n    \"PreviousCandidate\" |\n    \"PrintScreen\" |\n    \"Process\" |\n    \"Props\" |\n    \"Right\" |\n    \"RomanCharacters\" |\n    \"Scroll\" |\n    \"Select\" |\n    \"SelectMedia\" |\n    \"Separator\" |\n    \"Shift\" |\n    \"Soft1\" |\n    \"Soft2\" |\n    \"Soft3\" |\n    \"Soft4\" |\n    \"Stop\" |\n    \"Subtract\" |\n    \"SymbolLock\" |\n    \"Up\" |\n    \"UpLeft\" |\n    \"UpRight\" |\n    \"Undo\" |\n    \"VolumeDown\" |\n    \"VolumeMute\" |\n    \"VolumeUp\" |\n    \"Win\" |\n    \"Zoom\" |\n    \"Backspace\" |\n    \"Tab\" |\n    \"Cancel\" |\n    \"Esc\" |\n    \"Spacebar\" |\n    \"Del\" |\n    \"DeadGrave\" |\n    \"DeadEacute\" |\n    \"DeadCircumflex\" |\n    \"DeadTilde\" |\n    \"DeadMacron\" |\n    \"DeadBreve\" |\n    \"DeadAboveDot\" |\n    \"DeadUmlaut\" |\n    \"DeadAboveRing\" |\n    \"DeadDoubleacute\" |\n    \"DeadCaron\" |\n    \"DeadCedilla\" |\n    \"DeadOgonek\" |\n    \"DeadIota\" |\n    \"DeadVoicedSound\" |\n    \"DeadSemivoicedSound\" |\n    \"Unidentified\";\n","\n/**\n * NOOP function.\n */\nexport function NOOP() {\n    /* tslint:disable:no-empty */\n    /* tslint:enable:no-empty */\n}\n\n/**\n * NOOP function that always returns `false` value.\n *\n * @returns `false` value.\n */\nexport function NOOP_FALSE(): boolean {\n    return false;\n}\n","\nlet _clock = 0;\n\n/**\n * Monotonically increasing clock.\n *\n * @returns current clock value.\n */\nexport function clock(): number {\n    return _clock;\n}\n\n/**\n * Increment clock value.\n */\nexport function incrementClock(): void {\n    _clock++;\n}\n","import { incrementClock } from \"./clock\";\n\nlet _pending = false;\nlet _tasks: (() => void)[] = [];\n\nconst TASK_MESSAGE = __IVI_BROWSER__ ? \"__ivi\" + Math.random() : undefined;\n\nif (__IVI_BROWSER__) {\n    // Task scheduler based on postMessage\n    window.addEventListener(\"message\", handleWindowMessage);\n}\n\n/**\n * Task scheduler event handler.\n *\n * @param ev Message event.\n */\nfunction handleWindowMessage(ev: MessageEvent): void {\n    if (ev.source === window && ev.data === TASK_MESSAGE) {\n        runTasks();\n    }\n}\n\nfunction runTasks(): void {\n    _pending = false;\n\n    let tasks = _tasks;\n    _tasks = [];\n    for (let i = 0; i < tasks.length; i++) {\n        tasks[i]();\n    }\n\n    incrementClock();\n}\n\n/**\n * Trigger tasks execution.\n */\nfunction requestTaskExecution(): void {\n    if (!_pending) {\n        _pending = true;\n        if (__IVI_BROWSER__) {\n            window.postMessage(TASK_MESSAGE, \"*\");\n        } else {\n            setImmediate(runTasks);\n        }\n    }\n}\n\n/**\n * Add task to the task queue.\n *\n * @param task\n */\nexport function scheduleTask(task: () => void): void {\n    requestTaskExecution();\n    _tasks.push(task);\n}\n","import { USER_AGENT, UserAgentFlags } from \"../common/user_agent\";\nimport { NOOP } from \"../common/noop\";\nimport { incrementClock } from \"./clock\";\nimport { scheduleTask } from \"./task\";\n\nlet _pending = false;\nlet _microtasks: (() => void)[] = [];\nlet _microtaskNode: Text;\nlet _microtaskToggle = 0;\n\nif (__IVI_BROWSER__) {\n    if (!(USER_AGENT & UserAgentFlags.iOSStandalone)) {\n        const microtaskObserver = new MutationObserver(runMicrotasks);\n        _microtaskNode = document.createTextNode(\"\");\n        microtaskObserver.observe(_microtaskNode, { characterData: true });\n    }\n}\n\nfunction runMicrotasksInPromise(): void {\n    runMicrotasks();\n    /**\n     * #quirks\n     *\n     * Flush microtask queue.\n     * - iOS 8.3+\n     * - UIWebView 9.3.3+\n     *\n     * This function is running only on this browsers, so there is no need for an additional check.\n     */\n    scheduleTask(NOOP);\n}\n\nfunction runMicrotasks(): void {\n    while (_microtasks.length > 0) {\n        const tasks = _microtasks;\n        _microtasks = [];\n        for (let i = 0; i < tasks.length; i++) {\n            tasks[i]();\n        }\n        incrementClock();\n    }\n\n    _pending = false;\n}\n\n/**\n * Trigger microtasks execution.\n */\nfunction requestMicrotaskExecution(): void {\n    if (!_pending) {\n        _pending = true;\n        if (__IVI_BROWSER__) {\n            /**\n             * #quirks\n             *\n             * Following browsers have problems with microtasks implementation based on `MutationObserver`:\n             * - iOS 8.3+(full screen mode `navigator.standalone`)\n             * - UIWebView 9.3.3+\n             *\n             * Mutation events do not fire when code is executed in touch event context.\n             */\n            if (USER_AGENT & UserAgentFlags.iOSStandalone) {\n                Promise.resolve().then(runMicrotasksInPromise);\n            } else {\n                _microtaskToggle ^= 1;\n                _microtaskNode.nodeValue = _microtaskToggle ? \"1\" : \"0\";\n            }\n        } else {\n            process.nextTick(runMicrotasks);\n        }\n    }\n}\n\n/**\n * Add task to the microtask queue.\n *\n * @param task\n */\nexport function scheduleMicrotask(task: () => void): void {\n    requestMicrotaskExecution();\n    _microtasks.push(task);\n}\n","\nimport { scheduleMicrotask } from \"../scheduler/microtask\";\n\nlet _visible = true;\nlet _isHidden: () => boolean;\nlet _visibilityObservers: ((visible: boolean) => void)[] | undefined = (__IVI_BROWSER__) ? [] : undefined;\nlet _lock = false;\n\nexport function isVisible(): boolean {\n    if (__IVI_BROWSER__) {\n        return _visible;\n    }\n    return false;\n}\n\nexport function addVisibilityObserver(observer: (visible: boolean) => void): void {\n    if (__IVI_BROWSER__) {\n        _visibilityObservers!.push(observer);\n    }\n}\n\nexport function removeVisibilityObserver(observer: (visible: boolean) => void): void {\n    if (__IVI_BROWSER__) {\n        if (_lock) {\n            scheduleMicrotask(function () {\n                removeVisibilityObserver(observer);\n            });\n        } else {\n            const index = _visibilityObservers!.indexOf(observer);\n            if (index > -1) {\n                if (index === _visibilityObservers!.length) {\n                    _visibilityObservers!.pop();\n                } else {\n                    _visibilityObservers![index] = _visibilityObservers!.pop() !;\n                }\n            }\n        }\n    }\n}\n\nfunction handleVisibilityChange(): void {\n    const newVisible = !_isHidden();\n    if (_visible !== newVisible) {\n        _lock = true;\n        for (let i = 0; i < _visibilityObservers!.length; i++) {\n            _visibilityObservers![i](newVisible);\n        }\n        _lock = false;\n    }\n}\n\nif (__IVI_BROWSER__) {\n    if (typeof document[\"hidden\"] !== \"undefined\") {\n        _isHidden = function () {\n            return document.hidden;\n        };\n        document.addEventListener(\"visibilitychange\", handleVisibilityChange);\n    } else if (typeof (document as any)[\"webkitHidden\"] !== \"undefined\") {\n        /**\n         * #quirks\n         *\n         * Android 4.4\n         */\n        _isHidden = function () {\n            return (document as any)[\"webkitHidden\"];\n        };\n        document.addEventListener(\"webkitvisibilitychange\", handleVisibilityChange);\n    } else {\n        _isHidden = function () {\n            return true;\n        };\n    }\n    _visible = !_isHidden();\n}\n","import { ComponentFlags } from \"../vdom/flags\";\nimport { Component } from \"../vdom/component\";\n\n/**\n * Frame Tasks Group flags.\n */\nexport const enum FrameTasksGroupFlags {\n    /**\n     * Group contains component update tasks.\n     */\n    Component = 1,\n    /**\n     * Group contains \"write\" tasks.\n     */\n    Write = 1 << 1,\n    /**\n     * Group contains \"read\" tasks\".\n     */\n    Read = 1 << 2,\n    /**\n     * Group contains \"after\" tasks.\n     */\n    After = 1 << 3,\n    /**\n     * Group is locked from reading and writing.\n     */\n    RWLock = 1 << 4,\n}\n\n/**\n * Frame tasks group contains tasks for updating components, read dom and write dom tasks, and tasks that should be\n * executed after all other tasks are finished.\n *\n * To get access to the frame tasks group, use: `currentFrame()` and `nextFrame()` scheduler methods.\n *\n *     scheduler.currentFrame().read(() => {\n *         console.log(element.clientWidth);\n *     });\n *\n * @final\n */\nexport class FrameTasksGroup {\n    /**\n     * See `FrameTasksGroupFlags` for details.\n     */\n    _flags: number;\n    /**\n     * Array of component arrays indexed by their depth.\n     */\n    _componentTasks: Array<Component<any>[] | null>;\n    /**\n     * Write DOM task queue.\n     */\n    _writeTasks: (() => void)[] | null;\n    /**\n     * Read DOM task queue.\n     */\n    _readTasks: (() => void)[] | null;\n    /**\n     * Tasks that should be executed when all other tasks are finished.\n     */\n    _afterTasks: (() => void)[] | null;\n\n    constructor() {\n        this._flags = 0;\n        this._componentTasks = [];\n        this._writeTasks = null;\n        this._readTasks = null;\n        this._afterTasks = null;\n    }\n\n    /**\n     * Add Component to the components queue.\n     *\n     * @param component\n     */\n    updateComponent(component: Component<any>): void {\n        if (__IVI_BROWSER__) {\n            if (__IVI_DEV__) {\n                if ((this._flags & FrameTasksGroupFlags.RWLock)) {\n                    throw new Error(\"Failed to add update component task to the current frame, current frame is \" +\n                        \"locked for read and write tasks.\");\n                }\n            }\n\n            if (!(component.flags & ComponentFlags.InUpdateQueue)) {\n                component.flags |= ComponentFlags.InUpdateQueue;\n                const priority = component.depth;\n\n                this._flags |= FrameTasksGroupFlags.Component;\n                while (priority >= this._componentTasks.length) {\n                    this._componentTasks.push(null);\n                }\n\n                const group = this._componentTasks[priority];\n                if (group === null) {\n                    this._componentTasks[priority] = [component];\n                } else {\n                    group.push(component);\n                }\n            }\n        }\n    }\n\n    /**\n     * Add new task to the write DOM task queue.\n     *\n     * @param task\n     */\n    write(task: () => void): void {\n        if (__IVI_DEV__) {\n            if ((this._flags & FrameTasksGroupFlags.RWLock)) {\n                throw new Error(\"Failed to add update component task to the current frame, current frame is locked \" +\n                    \"for read and write tasks.\");\n            }\n        }\n\n        this._flags |= FrameTasksGroupFlags.Write;\n        if (this._writeTasks === null) {\n            this._writeTasks = [];\n        }\n        this._writeTasks.push(task);\n    }\n\n    /**\n     * Add new task to the read DOM task queue.\n     *\n     * @param task\n     */\n    read(task: () => void): void {\n        if (__IVI_DEV__) {\n            if ((this._flags & FrameTasksGroupFlags.RWLock)) {\n                throw new Error(\"Failed to add update component task to the current frame, current frame is locked \" +\n                    \"for read and write tasks.\");\n            }\n        }\n\n        this._flags |= FrameTasksGroupFlags.Read;\n        if (this._readTasks === null) {\n            this._readTasks = [];\n        }\n        this._readTasks.push(task);\n    }\n\n    /**\n     * Add new task to the task queue that will execute tasks when all DOM tasks are finished.\n     *\n     * @param task\n     */\n    after(task: () => void): void {\n        this._flags |= FrameTasksGroupFlags.After;\n        if (this._afterTasks === null) {\n            this._afterTasks = [];\n        }\n        this._afterTasks.push(task);\n    }\n\n    /**\n     * Lock read and write task queues.\n     *\n     * Works in DEBUG mode only.\n     */\n    _rwLock(): void {\n        if (__IVI_DEV__) {\n            this._flags |= FrameTasksGroupFlags.RWLock;\n        }\n    }\n\n    /**\n     * Unlock read and write task queue.\n     *\n     * Works in DEBUG mode only.\n     */\n    _rwUnlock(): void {\n        if (__IVI_DEV__) {\n            this._flags &= ~FrameTasksGroupFlags.RWLock;\n        }\n    }\n}\n","import { Component, Events, $h, $i, $c, KeyCode, currentFrame } from \"ivi\";\nimport { Entry, AppLocation, state, removeEntry, toggleEntry, updateTitle } from \"../state\";\n\nclass EntryView extends Component<Entry> {\n    private editTitle: string = \"\";\n    private editing: boolean = false;\n\n    private onClickDestroy = Events.onClick((ev) => {\n        removeEntry(this.props);\n        ev.preventDefault();\n    });\n\n    private onChangeToggle = Events.onChange((ev) => {\n        toggleEntry(this.props);\n        ev.preventDefault();\n    });\n\n    private onLabelDoubleClick = Events.onDoubleClick((ev) => {\n        this.editTitle = this.props.title;\n        this.editing = true;\n        this.invalidate();\n    });\n\n    private onTitleChange = Events.onInput((ev) => {\n        this.editTitle = (ev.target as HTMLInputElement).value;\n    });\n\n    private onBlur = Events.onBlur((ev) => {\n        this.editTitle = \"\";\n        this.editing = false;\n        this.invalidate();\n    });\n\n    private onKeyDown = Events.onKeyDown((ev) => {\n        switch (ev.keyCode) {\n            case (KeyCode.Enter):\n                updateTitle({ entry: this.props, newTitle: this.editTitle });\n                this.editTitle = \"\";\n                this.editing = false;\n                this.invalidate();\n                break;\n            case (KeyCode.Escape):\n                this.editTitle = \"\";\n                this.editing = false;\n                this.invalidate();\n                break;\n        }\n    });\n\n    render() {\n        const entry = this.props;\n        const view = $h(\"div\", \"view\").children([\n            $i(\"checkbox\", \"toggle\").events({ change: this.onChangeToggle }).checked(entry.completed),\n            $h(\"label\").events({ doubleClick: this.onLabelDoubleClick }).children(entry.title),\n            $h(\"button\", \"destroy\").events({ click: this.onClickDestroy }),\n        ]);\n        let className;\n        let children;\n        if (this.editing) {\n            className = entry.completed ? \"editing completed\" : \"editing\";\n            const input = $i(\"text\", \"edit\")\n                .events({\n                    input: this.onTitleChange,\n                    blur: this.onBlur,\n                    keyDown: this.onKeyDown,\n                })\n                .ref((n) => {\n                    if (n) {\n                        currentFrame().after(() => {\n                            (n as HTMLElement).focus();\n                        });\n                    }\n                })\n                .value(this.editTitle);\n            children = [view, input];\n        } else {\n            if (entry.completed) {\n                className = \"completed\";\n            }\n            children = [view];\n        }\n\n        return $h(\"li\", className).children(children);\n    }\n}\n\nexport class EntryList extends Component<{\n    activeEntries: number,\n    completedEntries: number,\n}> {\n    render() {\n        const entries = state.entries;\n        const { activeEntries, completedEntries } = this.props;\n\n        let children;\n        switch (state.location) {\n            case AppLocation.ShowActive:\n                children = activeEntries === 0 ?\n                    null :\n                    entries.map((e) => !e.completed ? $c(EntryView, e).key(e.id) : null);\n                break;\n            case AppLocation.ShowCompleted:\n                children = completedEntries === 0 ?\n                    null :\n                    entries.map((e) => e.completed ? $c(EntryView, e).key(e.id) : null);\n                break;\n            default: // Location.ShowAll\n                children = entries.map((e) => $c(EntryView, e).key(e.id));\n        }\n\n        return $h(\"ul\")\n            .props({ \"id\": \"todo-list\" })\n            .children(children);\n    }\n}\n","\nimport { isVisible, addVisibilityObserver } from \"../common/visibility\";\nimport { updateComponent } from \"../vdom/implementation\";\nimport { FrameTasksGroupFlags, FrameTasksGroup } from \"./frame_tasks_group\";\nimport { executeDOMReaders } from \"./dom_reader\";\nimport { incrementClock } from \"./clock\";\nimport { scheduleMicrotask } from \"./microtask\";\nimport {\n    prepareAnimatedComponents, updateAnimatedComponents, executeAnimations, shouldRequestNextFrameForAnimations,\n} from \"./animation\";\n\nlet _pending = false;\nlet _currentFrameReady = false;\nlet _currentFrame = new FrameTasksGroup();\nlet _nextFrame = new FrameTasksGroup();\nlet _frameStartTime = 0;\n\n_currentFrame._rwLock();\n\nfunction _updateFrameStartTime(time?: number): void {\n    if (__IVI_BROWSER__) {\n        _frameStartTime = (time === undefined ? performance.now() : time) / 1000;\n    } else {\n        _frameStartTime = time === undefined ? Date.now() : time / 1000;\n    }\n}\n\n/**\n * @returns current frame start time.\n */\nexport function frameStartTime(): number {\n    return _frameStartTime;\n}\n\n_updateFrameStartTime();\n\nfunction _requestNextFrame(): void {\n    if (_pending) {\n        if (__IVI_BROWSER__) {\n            requestAnimationFrame(handleNextFrame);\n        } else {\n            setImmediate(handleNextFrame);\n        }\n    }\n}\n\n/**\n * Trigger next frame tasks execution.\n */\nexport function requestNextFrame(): void {\n    if (!_pending) {\n        _pending = true;\n        scheduleMicrotask(_requestNextFrame);\n    }\n}\n\n/**\n * Frame tasks scheduler event handler.\n *\n * @param t Current time.\n */\nfunction handleNextFrame(time?: number): void {\n    _updateFrameStartTime(time);\n\n    let tasks: (() => void)[];\n    let i: number;\n\n    _pending = false;\n    _currentFrameReady = true;\n\n    const frame = _nextFrame;\n    _nextFrame = _currentFrame;\n    _currentFrame = frame;\n\n    _currentFrame._rwUnlock();\n    _nextFrame._rwUnlock();\n\n    // Mark all animated components as dirty. But don't update them until all write tasks are finished. It is possible\n    // that we won't need to update component if it is removed, or it is already updated.\n    if (isVisible()) {\n        prepareAnimatedComponents();\n    }\n\n    executeDOMReaders();\n\n    // Perform read/write batching. Start with executing read DOM tasks, then update components, execute write DOM tasks\n    // and repeat until all read and write tasks are executed.\n    do {\n        while (frame._flags & FrameTasksGroupFlags.Read) {\n            frame._flags &= ~FrameTasksGroupFlags.Read;\n            tasks = frame._readTasks!;\n            frame._readTasks = null;\n\n            for (i = 0; i < tasks.length; i++) {\n                tasks[i]();\n            }\n        }\n\n        while (frame._flags & (FrameTasksGroupFlags.Component | FrameTasksGroupFlags.Write)) {\n            if (frame._flags & FrameTasksGroupFlags.Write) {\n                frame._flags &= ~FrameTasksGroupFlags.Write;\n                tasks = frame._writeTasks!;\n                frame._writeTasks = null;\n                for (i = 0; i < tasks.length; i++) {\n                    tasks[i]();\n                }\n            }\n\n            if (__IVI_BROWSER__) {\n                if (frame._flags & FrameTasksGroupFlags.Component) {\n                    frame._flags &= ~FrameTasksGroupFlags.Component;\n                    const componentGroups = frame._componentTasks;\n\n                    for (i = 0; i < componentGroups.length; i++) {\n                        const componentGroup = componentGroups[i];\n                        if (componentGroup !== null) {\n                            componentGroups[i] = null;\n                            for (let j = 0; j < componentGroup.length; j++) {\n                                updateComponent(componentGroup[j]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        if (isVisible()) {\n            updateAnimatedComponents();\n        }\n    } while (frame._flags & (\n        FrameTasksGroupFlags.Component |\n        FrameTasksGroupFlags.Write |\n        FrameTasksGroupFlags.Read\n    ));\n\n    _currentFrameReady = false;\n\n    // Lock current frame from adding read and write tasks in debug mode.\n    _currentFrame._rwLock();\n\n    if (isVisible()) {\n        executeAnimations();\n    }\n\n    // Perform tasks that should be executed when all DOM ops are finished.\n    while ((frame._flags & FrameTasksGroupFlags.After) !== 0) {\n        frame._flags &= ~FrameTasksGroupFlags.After;\n\n        tasks = frame._afterTasks!;\n        frame._afterTasks = null;\n        for (i = 0; i < tasks.length; i++) {\n            tasks[i]();\n        }\n    }\n\n    if (shouldRequestNextFrameForAnimations()) {\n        requestNextFrame();\n    }\n\n    incrementClock();\n}\n\n/**\n * Get task list for the next frame.\n *\n * @returns Frame tasks group.\n */\nexport function nextFrame(): FrameTasksGroup {\n    requestNextFrame();\n    return _nextFrame;\n}\n\n/**\n * Get task list for the current frame.\n *\n * @returns Frame tasks group.\n */\nexport function currentFrame(): FrameTasksGroup {\n    if (_currentFrameReady) {\n        return _currentFrame;\n    }\n    return nextFrame();\n}\n\n/**\n * Perform a synchronous frame update.\n */\nexport function syncFrameUpdate(): void {\n    handleNextFrame();\n}\n\nfunction handleVisibilityChange(visible: boolean): void {\n    if (visible) {\n        if (shouldRequestNextFrameForAnimations()) {\n            requestNextFrame();\n        }\n    }\n}\n\nif (__IVI_BROWSER__) {\n    addVisibilityObserver(handleVisibilityChange);\n}\n","\nconst _readers: (() => boolean | undefined)[] = [];\n\n/**\n * Add DOM Reader.\n *\n * DOM Reader will be be invoked on each frame in the read phase.\n *\n * @param reader Task that will be executed until it returns `false`.\n */\nexport function addDOMReader(reader: () => boolean | undefined): void {\n    if (__IVI_BROWSER__) {\n        _readers.push(reader);\n    }\n}\n\n/**\n * Execute DOM Reader tasks.\n */\nexport function executeDOMReaders(): void {\n    if (__IVI_BROWSER__) {\n        for (let i = 0; i < _readers.length; i++) {\n            const reader = _readers[i];\n            if (reader()) {\n                if (i === _readers.length) {\n                    _readers.pop();\n                } else {\n                    _readers[i--] = _readers.pop() !;\n                }\n            }\n        }\n    }\n}\n","import { EventHandlerList } from \"../events/event_handler\";\nimport { CSSStyleProps } from \"../common/dom_props\";\nimport { VNodeFlags } from \"./flags\";\nimport { ComponentClass, ComponentFunction, Component } from \"./component\";\nimport { ElementDescriptor } from \"./element_descriptor\";\n\n/**\n * VNode object is the core object in ivi Virtual DOM, it can represent any node type.\n */\nexport interface VNode<P> {\n    /**\n     * Flags, see `VNodeFlags` for details.\n     */\n    _flags: VNodeFlags;\n    /**\n     * Tag name of the element.\n     *\n     * When VNode represents a Component, tag property should contain reference to a `ComponentClass` if it is a\n     * stateful component or `ComponentFunction` for stateless components.\n     */\n    _tag: string | ComponentClass<any> | ComponentFunction<any> | ElementDescriptor<any> | null;\n    /**\n     * Children reconciliation algorithm is using key property to find the same node in the previous children array. Key\n     * should be unique among its siblings.\n     */\n    _key: any;\n    /**\n     * Properties.\n     */\n    _props: P | null;\n    /**\n     * Class name.\n     */\n    _className: string | null;\n    /**\n     * Style.\n     */\n    _style: CSSStyleProps | null;\n    /**\n     * Events.\n     */\n    _events: EventHandlerList | null;\n    /**\n     * Children property can contain flat array of children virtual nodes, or text if it contains a single text node\n     * child.\n     *\n     * When virtual node represents an input field, children property will contain input value.\n     */\n    _children: VNode<any>[] | VNode<any> | string | number | boolean | null | undefined;\n    /**\n     * Reference to HTML node or Component instance. It will be available after virtual node is created or synced. Each\n     * time VNode is synced, reference will be transferred from the old VNode to the new one.\n     */\n    _instance: Node | Component<any> | null;\n    /**\n     * Ref callback.\n     */\n    _ref: ((ref: Node | Component<any> | null) => void) | null;\n    /**\n     * Unique ID thas is available in Dev Mode.\n     */\n    _debugId: number;\n}\n\n/**\n * Check if VNode is representing a Text node.\n *\n * @param node VNode.\n * @returns true when VNode is representing a Text node.\n */\nexport function isTextNode(node: VNode<any>): boolean {\n    return !!(node._flags & VNodeFlags.Text);\n}\n\n/**\n * Check if VNode is representing an Element.\n *\n * @param node VNode.\n * @returns true when VNode is representing an element node.\n */\nexport function isElementNode(node: VNode<any>): boolean {\n    return !!(node._flags & VNodeFlags.Element);\n}\n\n/**\n * Check if VNode is representing an SVG Element.\n *\n * @param node VNode.\n * @returns true when VNode is representing a text node.\n */\nexport function isSVGNode(node: VNode<any>): boolean {\n    return !!(node._flags & VNodeFlags.SvgElement);\n}\n\n/**\n * Check if VNode is representing a Component.\n *\n * @param node VNode.\n * @returns true when VNode is representing a Component.\n */\nexport function isComponentNode(node: VNode<any>): boolean {\n    return !!(node._flags & VNodeFlags.Component);\n}\n\n/**\n * Get reference to a DOM node from a VNode object.\n *\n * @param node VNode which contains reference to a DOM node.\n * @returns null if VNode doesn't have a reference to a DOM node.\n */\nexport function getDOMInstanceFromVNode<T extends Node>(node: VNode<any>): T | null {\n    if (node._flags & VNodeFlags.Component) {\n        if (node._flags & VNodeFlags.ComponentClass) {\n            return getDOMInstanceFromVNode<T>((node._instance as Component<any>).root!);\n        } else {\n            return getDOMInstanceFromVNode<T>(node._children as VNode<any>);\n        }\n    }\n    return node._instance as T;\n}\n\n/**\n * Get reference to a Component instance from a VNode object.\n *\n * @param node VNode which contains reference to a Component instance.\n * @returns null if VNode doesn't have a reference to a Component instance.\n */\nexport function getComponentRef<P>(node: VNode<P>): Component<P> | null {\n    if (__IVI_DEV__) {\n        if (!(node._flags & VNodeFlags.Component)) {\n            throw new Error(\"Failed to get component reference: VNode should represent a Component.\");\n        }\n    }\n    return node._instance as Component<P> | null;\n}\n","import { nextDebugId } from \"../dev_mode/dev_mode\";\nimport { checkDOMAttributesForTypos, checkDOMStylesForTypos, checkDeprecatedDOMSVGAttributes } from \"../dev_mode/typos\";\nimport { isVoidElement, isValidTag, isInputTypeHasCheckedProperty } from \"../dev_mode/dom\";\nimport { HTMLTagType, SVGTagType, MediaTagType, InputType } from \"../common/dom\";\nimport { VNode } from \"./vnode\";\nimport { VNodeFlags, ElementDescriptorFlags } from \"./flags\";\nimport { ComponentFunction, ComponentClass, Component } from \"./component\";\nimport { ElementDescriptor } from \"./element_descriptor\";\nimport { EventHandlerList } from \"../events/event_handler\";\nimport {\n    HTMLAnchorElementProps, HTMLElementProps, HTMLAppletElementProps, HTMLAreaElementProps, HTMLAudioElementProps,\n    HTMLBaseElementProps, HTMLBaseFontElementProps, HTMLBodyElementProps, HTMLBRElementProps, HTMLButtonElementProps,\n    HTMLCanvasElementProps, HTMLQuoteElementProps, HTMLTableCaptionElementProps, HTMLTableColElementProps,\n    HTMLDataListElementProps, HTMLModElementProps, HTMLDirectoryElementProps, HTMLDivElementProps,\n    HTMLDListElementProps, HTMLEmbedElementProps, HTMLFieldSetElementProps, HTMLFontElementProps, HTMLFormElementProps,\n    HTMLFrameElementProps, HTMLFrameSetElementProps, HTMLHeadElementProps, HTMLHeadingElementProps, HTMLHRElementProps,\n    HTMLHtmlElementProps, HTMLIFrameElementProps, HTMLImageElementProps, HTMLInputElementProps, HTMLLabelElementProps,\n    HTMLLegendElementProps, HTMLLIElementProps, HTMLLinkElementProps, HTMLMapElementProps, HTMLMarqueeElementProps,\n    HTMLMenuElementProps, HTMLMetaElementProps, HTMLMeterElementProps, HTMLObjectElementProps, HTMLOListElementProps,\n    HTMLOptGroupElementProps, HTMLOptionElementProps, HTMLParagraphElementProps, HTMLParamElementProps,\n    HTMLPictureElementProps, HTMLPreElementProps, HTMLProgressElementProps, HTMLScriptElementProps,\n    HTMLSelectElementProps, HTMLSourceElementProps, HTMLSpanElementProps, HTMLStyleElementProps,\n    HTMLTableDataCellElementProps, HTMLTableElementProps, HTMLTableHeaderCellElementProps, HTMLTableRowElementProps,\n    HTMLTableSectionElementProps, HTMLTemplateElementProps, HTMLTextAreaElementProps, HTMLTitleElementProps,\n    HTMLTrackElementProps, HTMLUListElementProps, HTMLUnknownElementProps, HTMLVideoElementProps, HTMLMediaElementProps,\n    MSHTMLWebViewElementProps,\n\n    SVGCircleElementProps, SVGClipPathElementProps, SVGDefsElementProps, SVGDescElementProps, SVGEllipseElementProps,\n    SVGFEBlendElementProps, SVGFEColorMatrixElementProps, SVGFEComponentTransferElementProps,\n    SVGFECompositeElementProps, SVGFEConvolveMatrixElementProps, SVGFEDiffuseLightingElementProps,\n    SVGFEDisplacementMapElementProps, SVGFEDistantLightElementProps, SVGFEFloodElementProps, SVGFEFuncAElementProps,\n    SVGFEFuncBElementProps, SVGFEFuncGElementProps, SVGFEFuncRElementProps, SVGFEGaussianBlurElementProps,\n    SVGFEImageElementProps, SVGFEMergeElementProps, SVGFEMergeNodeElementProps, SVGFEMorphologyElementProps,\n    SVGFEOffsetElementProps, SVGFEPointLightElementProps, SVGFESpecularLightingElementProps, SVGFESpotLightElementProps,\n    SVGFETileElementProps, SVGFETurbulenceElementProps, SVGFilterElementProps, SVGForeignObjectElementProps,\n    SVGGElementProps, SVGImageElementProps, SVGLinearGradientElementProps, SVGLineElementProps, SVGMarkerElementProps,\n    SVGMaskElementProps, SVGMetadataElementProps, SVGPathElementProps, SVGPatternElementProps, SVGPolygonElementProps,\n    SVGPolylineElementProps, SVGRadialGradientElementProps, SVGRectElementProps, SVGStopElementProps,\n    SVGSVGElementProps, SVGSwitchElementProps, SVGSymbolElementProps, SVGTextElementProps, SVGTextPathElementProps,\n    SVGTSpanElementProps, SVGViewElementProps, SVGUseElementProps, SVGElementProps,\n\n    CSSStyleProps,\n} from \"../common/dom_props\";\n\n/**\n * VNode Builder provides a chain-method API to build VNodes.\n *\n * VNodeBuilder class has a parametric type `P` to specify `props` type.\n *\n *     const vnode = $h(\"div\", \"div-class-name\")\n *         .props({ id: \"div-id\" })\n *         .events({ click: Events.onClick((e) => console.log(\"click event\", e)) })\n *         .children(\"Hello\");\n *\n * There are several factory functions that create VNode Builder objects:\n *\n *     // Basic HTML Elements\n *     $h(tagName: string, className?: string): VNodeBuilder<HTMLElementProps | null>;\n *\n *     // SVG Elements\n *     $s(tagName: string, className?: string): VNodeBuilder<SVGElementProps | null>;\n *\n *     // Components\n *     $c<P>(component: ComponentClass<P> | ComponentFunction<P>, props: P): VNodeBuilder<P>;\n *\n *     // Input Elements and TextArea (specifying type as \"textarea\" will create HTMLTextAreaElement)\n *     $i(type: string, className?: string): VNodeBuilder<HTMLInputElementProps | HTMLTextAreaElementProps | null>;\n *\n *     // Media Elements (Video and Audio)\n *     $m(tagName: string, className?: string): VNodeBuilder<HTMLMediaElementProps | null>;\n *\n *     // Text Nodes\n *     $t(text: string): VNodeBuilder<null>;\n *\n * @final\n */\nexport class VNodeBuilder<P> implements VNode<P> {\n    _flags: VNodeFlags;\n    _tag: string | ComponentClass<any> | ComponentFunction<any> | ElementDescriptor<any> | null;\n    _key: any;\n    _props: P | null;\n    _className: string | null;\n    _style: CSSStyleProps | null;\n    _events: EventHandlerList | null;\n    _children: VNode<any>[] | VNode<any> | string | number | boolean | null | undefined;\n    _instance: Node | Component<any> | null;\n    _ref: ((ref: Node | Component<any> | null) => void) | null;\n    _debugId: number;\n\n    constructor(\n        flags: number,\n        tag: string | ComponentFunction<P> | ComponentClass<P> | ElementDescriptor<any> | null,\n        props: P | null,\n        className: string | null,\n        children: VNode<any>[] | VNode<any> | string | number | boolean | null | undefined,\n    ) {\n        this._flags = flags;\n        this._tag = tag;\n        this._key = null;\n        this._props = props;\n        this._className = className;\n        this._style = null;\n        this._events = null;\n        this._children = children;\n        this._instance = null;\n        this._ref = null;\n        if (__IVI_DEV__) {\n            this._debugId = nextDebugId();\n        }\n    }\n\n    /**\n     * Set key.\n     *\n     * Children reconciliation algorithm is using key property to find the same node in the previous children array. Key\n     * should be unique among its siblings.\n     *\n     * @param key Any object that should be unique among its siblings.\n     * @returns VNodeBuilder.\n     */\n    key(key: any): VNodeBuilder<P> {\n        if (key === null) {\n            this._flags &= ~VNodeFlags.Key;\n        } else {\n            this._flags |= VNodeFlags.Key;\n            this._key = key;\n        }\n        return this;\n    }\n\n    /**\n     * Set className.\n     *\n     * @param className.\n     * @returns VNodeBuilder.\n     */\n    className(className: string | null): VNodeBuilder<P> {\n        if (__IVI_DEV__) {\n            if (!(this._flags & VNodeFlags.Element)) {\n                throw new Error(\"Failed to set className, className is available on element nodes only.\");\n            }\n            if (className !== null) {\n                if (this._flags & VNodeFlags.ElementDescriptor) {\n                    const d = this._tag as ElementDescriptor<P>;\n                    if (d._flags & ElementDescriptorFlags.ProtectClassName) {\n                        throw new Error(\"Failed to set className, className is protected by an ElementDescriptor.\");\n                    }\n                }\n            }\n        }\n        this._className = className;\n        return this;\n    }\n\n    /**\n     * Set style.\n     *\n     * @param style.\n     * @returns VNodeBuilder.\n     */\n    style(style: CSSStyleProps | null): VNodeBuilder<P> {\n        if (__IVI_DEV__) {\n            if (!(this._flags & VNodeFlags.Element)) {\n                throw new Error(\"Failed to set style, style is available on element nodes only.\");\n            }\n\n            if (style) {\n                checkDOMStylesForTypos(style);\n\n                if (this._flags & VNodeFlags.ElementDescriptor) {\n                    const d = this._tag as ElementDescriptor<P>;\n                    if (d._flags & ElementDescriptorFlags.ProtectStyle) {\n                        if (d._protectedStyle) {\n                            const keys = Object.keys(d._protectedStyle);\n                            for (let i = 0; i < keys.length; i++) {\n                                const key = keys[i];\n                                if (style.hasOwnProperty(key)) {\n                                    throw new Error(`Failed to set style, \"${key}\" style is protected by an ` +\n                                        `ElementDescriptor.`);\n                                }\n                            }\n                        } else {\n                            throw new Error(\"Failed to set style, style is protected by an ElementDescriptor.\");\n                        }\n                    }\n                }\n            }\n        }\n        this._style = style;\n        return this;\n    }\n\n    /**\n     * Set events.\n     *\n     * @param events.\n     * @returns VNodeBuilder.\n     */\n    events(events: EventHandlerList | null): VNodeBuilder<P> {\n        if (__IVI_DEV__) {\n            if (!(this._flags & VNodeFlags.Element)) {\n                throw new Error(\"Failed to set events, events are available on element nodes only.\");\n            }\n        }\n        this._events = events;\n        return this;\n    }\n\n    /**\n     * Set props.\n     *\n     * @param props.\n     * @returns VNodeBuilder.\n     */\n    props(props: P | null): VNodeBuilder<P> {\n        if (__IVI_DEV__) {\n            if (props) {\n                checkDOMAttributesForTypos(props);\n\n                if (this._flags & VNodeFlags.SvgElement) {\n                    checkDeprecatedDOMSVGAttributes(this._tag as string, props);\n                }\n\n                if (this._flags & VNodeFlags.ElementDescriptor) {\n                    const d = this._tag as ElementDescriptor<P>;\n                    if (d._flags & ElementDescriptorFlags.ProtectProps) {\n                        if (d._protectedProps) {\n                            const keys = Object.keys(d._protectedProps);\n                            for (let i = 0; i < keys.length; i++) {\n                                const key = keys[i];\n                                if (props.hasOwnProperty(key)) {\n                                    throw new Error(`Failed to set props, \"${key}\" property is protected by an ` +\n                                        `ElementDescriptor.`);\n                                }\n                            }\n                        } else {\n                            throw new Error(\"Failed to set props, props are protected by an ElementDescriptor.\");\n                        }\n                    }\n                }\n            }\n        }\n        this._props = props;\n        return this;\n    }\n\n    /**\n     * Set children.\n     *\n     * @param children Children can be a simple string, single VNode or recursive list of VNodes with strings and null\n     *   values. It will automatically normalize recursive lists by flattening, filtering out null values and replacing\n     *   strings with text nodes.\n     * @returns VNodeBuilder.\n     */\n    children(children: VNodeRecursiveArray | VNode<any> | string | number | boolean | null): VNodeBuilder<P> {\n        if (__IVI_DEV__) {\n            if (this._flags &\n                (VNodeFlags.ChildrenArray |\n                    VNodeFlags.ChildrenVNode |\n                    VNodeFlags.ChildrenBasic |\n                    VNodeFlags.UnsafeHTML)) {\n                throw new Error(\"Failed to set children, VNode element is already having children.\");\n            }\n            if (!(this._flags & VNodeFlags.Element)) {\n                throw new Error(\"Failed to set children, children are available on element nodes only.\");\n            }\n            if (this._flags & VNodeFlags.InputElement) {\n                throw new Error(\"Failed to set children, input elements can't have children.\");\n            }\n            if (this._flags & VNodeFlags.MediaElement) {\n                throw new Error(\"Failed to set children, media elements can't have children.\");\n            }\n            if (isVoidElement(this._tag as string)) {\n                throw new Error(`Failed to set children, ${this._tag} elements can't have children.`);\n            }\n        }\n        if (Array.isArray(children)) {\n            this._flags |= VNodeFlags.ChildrenArray;\n            this._children = normalizeVNodes(children);\n\n            if (__IVI_DEV__) {\n                const keys = new Set<any>();\n                for (let i = 0; i < this._children.length; i++) {\n                    const child = this._children[i];\n                    if (child._flags & VNodeFlags.Key) {\n                        if (keys.has(child._key)) {\n                            throw new Error(`Failed to set children, invalid children list, key: \"${child._key}\" is ` +\n                                `used multiple times.`);\n                        }\n                        keys.add(child._key);\n                    }\n                }\n            }\n        } else {\n            if (children === null) {\n                this._flags &= ~(VNodeFlags.ChildrenArray | VNodeFlags.ChildrenBasic | VNodeFlags.ChildrenBasic);\n            } else if (typeof children === \"object\") {\n                this._flags |= VNodeFlags.ChildrenVNode;\n                if (!(children._flags & VNodeFlags.Key)) {\n                    children._key = 0;\n                }\n            } else {\n                this._flags |= VNodeFlags.ChildrenBasic;\n            }\n            this._children = children;\n        }\n        return this;\n    }\n\n    /**\n     * Set children as an innerHTML string. It is potentially vulnerable to XSS attacks.\n     *\n     * @param html innerHTML in a string format.\n     * @returns VNodeBuilder.\n     */\n    unsafeHTML(html: string | null): VNodeBuilder<P> {\n        if (__IVI_DEV__) {\n            if (this._flags & (VNodeFlags.ChildrenArray | VNodeFlags.ChildrenVNode | VNodeFlags.ChildrenBasic)) {\n                throw new Error(\"Failed to set unsafeHTML, VNode element is already having children.\");\n            }\n            if (!(this._flags & VNodeFlags.Element)) {\n                throw new Error(\"Failed to set unsafeHTML, unsafeHTML is available on element nodes only.\");\n            }\n            if (this._flags & VNodeFlags.InputElement) {\n                throw new Error(\"Failed to set unsafeHTML, input elements can't have innerHTML.\");\n            }\n            if (this._flags & VNodeFlags.MediaElement) {\n                throw new Error(\"Failed to set unsafeHTML, media elements can't have children.\");\n            }\n            if (isVoidElement(this._tag as string)) {\n                throw new Error(`Failed to set unsafeHTML, ${this._tag} elements can't have children.`);\n            }\n        }\n        this._flags |= VNodeFlags.UnsafeHTML;\n        this._children = html;\n        return this;\n    }\n\n    /**\n     * Set HTMLInputElement/HTMLTextAreaElement value property.\n     *\n     * @param text Text value.\n     * @returns VNodeBuilder.\n     */\n    value(value: string | null): VNodeBuilder<P> {\n        if (__IVI_DEV__) {\n            if (!(this._flags & VNodeFlags.InputElement)) {\n                throw new Error(\"Failed to set value, value is available on input elements only.\");\n            }\n        }\n        this._children = value;\n        return this;\n    }\n\n    /**\n     * Set HTMLInputElement checked property.\n     *\n     * @param text Text value.\n     * @returns VNodeBuilder.\n     */\n    checked(checked: boolean | null): VNodeBuilder<P> {\n        if (__IVI_DEV__) {\n            if (!(this._flags & VNodeFlags.InputElement)) {\n                throw new Error(\"Failed to set checked, checked is available on input elements only.\");\n            }\n            if (!isInputTypeHasCheckedProperty(this._tag as InputType)) {\n                throw new Error(`Failed to set checked, input elements with type ${this._tag} doesn't support `\n                    + `checked value.`);\n            }\n        }\n        this._children = checked;\n        return this;\n    }\n\n    /**\n     * Set ref callback.\n     *\n     * When VNode is instantiated ref callback will be invoked with a Node value for DOM Elements or Component\n     * instance for components.\n     *\n     * When VNode is detached, ref callback will be invoked with a `null` value.\n     *\n     * @param ref callback.\n     * @returns VNodeBuilder.\n     */\n    ref(ref: (ref: Node | null) => void): VNodeBuilder<P>;\n    ref(ref: (ref: Component<any> | null) => void): VNodeBuilder<P>;\n    ref(ref: ((ref: Node | null) => void) | ((ref: Component<any> | null) => void)): VNodeBuilder<P> {\n        this._ref = ref;\n        return this;\n    }\n\n    /**\n     * Marks VNode as an immutable.\n     *\n     * Immutable VNodes can't be used directly when rendering trees, they should be cloned with a `cloneVNode` function.\n     *\n     * @returns VNodeBuilder.\n     */\n    immutable(): VNodeBuilder<P> {\n        if (__IVI_DEV__) {\n            this._flags |= VNodeFlags.Immutable;\n        }\n        return this;\n    }\n\n    /**\n     * Merge props with existing props.\n     *\n     * @param props\n     * @return VNodeBuilder.\n     */\n    mergeProps(props: P | null): VNodeBuilder<P> {\n        if (__IVI_DEV__) {\n            if (props && typeof props !== \"object\") {\n                throw new Error(`Failed to merge props, props object has type \"${typeof props}\".`);\n            }\n            if (this._props && typeof this._props !== \"object\") {\n                throw new Error(`Failed to merge props, props object has type \"${typeof this._props}\".`);\n            }\n        }\n        if (props) {\n            return this.props(this._props ? Object.assign({}, this._props, props) : props);\n        }\n        return this;\n    }\n\n    /**\n     * Merge style with existing style.\n     *\n     * @param props\n     * @return VNodeBuilder.\n     */\n    mergeStyle(style: CSSStyleProps | null): VNodeBuilder<P> {\n        if (style) {\n            return this.style(this._style ? Object.assign({}, this._style, style) : style);\n        }\n        return this;\n    }\n\n    /**\n     * Merge events with existing events.\n     *\n     * @param props\n     * @return VNodeBuilder.\n     */\n    mergeEvents(events: EventHandlerList | null): VNodeBuilder<P> {\n        if (events) {\n            return this.events(this._events ? Object.assign({}, this._events, events) : events);\n        }\n        return this;\n    }\n}\n\nexport type VNodeRecursiveArrayValue = VNodeRecursiveArray | VNode<any> | string | number | boolean | null;\n/**\n * Recursive VNode Array.\n */\nexport interface VNodeRecursiveArray extends Array<VNodeRecursiveArrayValue> { }\n\n/**\n * Create a VNodeBuilder representing a Text node.\n *\n * @param context Text content.\n * @returns VNodeBuilder object.\n */\nexport function $t(content: string | number | boolean | null): VNodeBuilder<null> {\n    return new VNodeBuilder<null>(VNodeFlags.Text, null, null, null, content);\n}\n\n/* tslint:disable:max-line-length */\n/**\n * Create a VNodeBuilder representing an Element node.\n *\n * @param tagName HTML Element tag name.\n * @param props HTML Element props.\n * @returns VNodeBuilder object.\n */\nexport function $h(tagName: \"a\", className?: string): VNodeBuilder<HTMLAnchorElementProps | null>;\nexport function $h(tagName: \"abbr\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"acronym\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"address\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"applet\", className?: string): VNodeBuilder<HTMLAppletElementProps | null>;\nexport function $h(tagName: \"area\", className?: string): VNodeBuilder<HTMLAreaElementProps | null>;\nexport function $h(tagName: \"article\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"aside\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"b\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"base\", className?: string): VNodeBuilder<HTMLBaseElementProps | null>;\nexport function $h(tagName: \"basefont\", className?: string): VNodeBuilder<HTMLBaseFontElementProps | null>;\nexport function $h(tagName: \"bdo\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"big\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"blockquote\", className?: string): VNodeBuilder<HTMLQuoteElementProps | null>;\nexport function $h(tagName: \"body\", className?: string): VNodeBuilder<HTMLBodyElementProps | null>;\nexport function $h(tagName: \"br\", className?: string): VNodeBuilder<HTMLBRElementProps | null>;\nexport function $h(tagName: \"button\", className?: string): VNodeBuilder<HTMLButtonElementProps | null>;\nexport function $h(tagName: \"canvas\", className?: string): VNodeBuilder<HTMLCanvasElementProps | null>;\nexport function $h(tagName: \"caption\", className?: string): VNodeBuilder<HTMLTableCaptionElementProps | null>;\nexport function $h(tagName: \"center\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"cite\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"code\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"col\", className?: string): VNodeBuilder<HTMLTableColElementProps | null>;\nexport function $h(tagName: \"colgroup\", className?: string): VNodeBuilder<HTMLTableColElementProps | null>;\nexport function $h(tagName: \"datalist\", className?: string): VNodeBuilder<HTMLDataListElementProps | null>;\nexport function $h(tagName: \"dd\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"del\", className?: string): VNodeBuilder<HTMLModElementProps | null>;\nexport function $h(tagName: \"dfn\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"dir\", className?: string): VNodeBuilder<HTMLDirectoryElementProps | null>;\nexport function $h(tagName: \"div\", className?: string): VNodeBuilder<HTMLDivElementProps | null>;\nexport function $h(tagName: \"dl\", className?: string): VNodeBuilder<HTMLDListElementProps | null>;\nexport function $h(tagName: \"dt\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"em\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"embed\", className?: string): VNodeBuilder<HTMLEmbedElementProps | null>;\nexport function $h(tagName: \"fieldset\", className?: string): VNodeBuilder<HTMLFieldSetElementProps | null>;\nexport function $h(tagName: \"figcaption\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"figure\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"font\", className?: string): VNodeBuilder<HTMLFontElementProps | null>;\nexport function $h(tagName: \"footer\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"form\", className?: string): VNodeBuilder<HTMLFormElementProps | null>;\nexport function $h(tagName: \"frame\", className?: string): VNodeBuilder<HTMLFrameElementProps | null>;\nexport function $h(tagName: \"frameset\", className?: string): VNodeBuilder<HTMLFrameSetElementProps | null>;\nexport function $h(tagName: \"h1\", className?: string): VNodeBuilder<HTMLHeadingElementProps | null>;\nexport function $h(tagName: \"h2\", className?: string): VNodeBuilder<HTMLHeadingElementProps | null>;\nexport function $h(tagName: \"h3\", className?: string): VNodeBuilder<HTMLHeadingElementProps | null>;\nexport function $h(tagName: \"h4\", className?: string): VNodeBuilder<HTMLHeadingElementProps | null>;\nexport function $h(tagName: \"h5\", className?: string): VNodeBuilder<HTMLHeadingElementProps | null>;\nexport function $h(tagName: \"h6\", className?: string): VNodeBuilder<HTMLHeadingElementProps | null>;\nexport function $h(tagName: \"head\", className?: string): VNodeBuilder<HTMLHeadElementProps | null>;\nexport function $h(tagName: \"header\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"hgroup\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"hr\", className?: string): VNodeBuilder<HTMLHRElementProps | null>;\nexport function $h(tagName: \"html\", className?: string): VNodeBuilder<HTMLHtmlElementProps | null>;\nexport function $h(tagName: \"i\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"iframe\", className?: string): VNodeBuilder<HTMLIFrameElementProps | null>;\nexport function $h(tagName: \"img\", className?: string): VNodeBuilder<HTMLImageElementProps | null>;\nexport function $h(tagName: \"ins\", className?: string): VNodeBuilder<HTMLModElementProps | null>;\nexport function $h(tagName: \"isindex\", className?: string): VNodeBuilder<HTMLUnknownElementProps | null>;\nexport function $h(tagName: \"kbd\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"keygen\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"label\", className?: string): VNodeBuilder<HTMLLabelElementProps | null>;\nexport function $h(tagName: \"legend\", className?: string): VNodeBuilder<HTMLLegendElementProps | null>;\nexport function $h(tagName: \"li\", className?: string): VNodeBuilder<HTMLLIElementProps | null>;\nexport function $h(tagName: \"link\", className?: string): VNodeBuilder<HTMLLinkElementProps | null>;\nexport function $h(tagName: \"listing\", className?: string): VNodeBuilder<HTMLPreElementProps | null>;\nexport function $h(tagName: \"map\", className?: string): VNodeBuilder<HTMLMapElementProps | null>;\nexport function $h(tagName: \"mark\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"marquee\", className?: string): VNodeBuilder<HTMLMarqueeElementProps | null>;\nexport function $h(tagName: \"menu\", className?: string): VNodeBuilder<HTMLMenuElementProps | null>;\nexport function $h(tagName: \"meta\", className?: string): VNodeBuilder<HTMLMetaElementProps | null>;\nexport function $h(tagName: \"meter\", className?: string): VNodeBuilder<HTMLMeterElementProps | null>;\nexport function $h(tagName: \"nav\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"nextid\", className?: string): VNodeBuilder<HTMLUnknownElementProps | null>;\nexport function $h(tagName: \"nobr\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"noframes\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"noscript\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"object\", className?: string): VNodeBuilder<HTMLObjectElementProps | null>;\nexport function $h(tagName: \"ol\", className?: string): VNodeBuilder<HTMLOListElementProps | null>;\nexport function $h(tagName: \"optgroup\", className?: string): VNodeBuilder<HTMLOptGroupElementProps | null>;\nexport function $h(tagName: \"option\", className?: string): VNodeBuilder<HTMLOptionElementProps | null>;\nexport function $h(tagName: \"p\", className?: string): VNodeBuilder<HTMLParagraphElementProps | null>;\nexport function $h(tagName: \"param\", className?: string): VNodeBuilder<HTMLParamElementProps | null>;\nexport function $h(tagName: \"picture\", className?: string): VNodeBuilder<HTMLPictureElementProps | null>;\nexport function $h(tagName: \"plaintext\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"pre\", className?: string): VNodeBuilder<HTMLPreElementProps | null>;\nexport function $h(tagName: \"progress\", className?: string): VNodeBuilder<HTMLProgressElementProps | null>;\nexport function $h(tagName: \"q\", className?: string): VNodeBuilder<HTMLQuoteElementProps | null>;\nexport function $h(tagName: \"rt\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"ruby\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"s\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"samp\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"script\", className?: string): VNodeBuilder<HTMLScriptElementProps | null>;\nexport function $h(tagName: \"section\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"select\", className?: string): VNodeBuilder<HTMLSelectElementProps | null>;\nexport function $h(tagName: \"small\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"source\", className?: string): VNodeBuilder<HTMLSourceElementProps | null>;\nexport function $h(tagName: \"span\", className?: string): VNodeBuilder<HTMLSpanElementProps | null>;\nexport function $h(tagName: \"strike\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"strong\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"style\", className?: string): VNodeBuilder<HTMLStyleElementProps | null>;\nexport function $h(tagName: \"sub\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"sup\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"table\", className?: string): VNodeBuilder<HTMLTableElementProps | null>;\nexport function $h(tagName: \"tbody\", className?: string): VNodeBuilder<HTMLTableSectionElementProps | null>;\nexport function $h(tagName: \"td\", className?: string): VNodeBuilder<HTMLTableDataCellElementProps | null>;\nexport function $h(tagName: \"template\", className?: string): VNodeBuilder<HTMLTemplateElementProps | null>;\nexport function $h(tagName: \"textarea\", className?: string): VNodeBuilder<HTMLTextAreaElementProps | null>;\nexport function $h(tagName: \"tfoot\", className?: string): VNodeBuilder<HTMLTableSectionElementProps | null>;\nexport function $h(tagName: \"th\", className?: string): VNodeBuilder<HTMLTableHeaderCellElementProps | null>;\nexport function $h(tagName: \"thead\", className?: string): VNodeBuilder<HTMLTableSectionElementProps | null>;\nexport function $h(tagName: \"title\", className?: string): VNodeBuilder<HTMLTitleElementProps | null>;\nexport function $h(tagName: \"tr\", className?: string): VNodeBuilder<HTMLTableRowElementProps | null>;\nexport function $h(tagName: \"track\", className?: string): VNodeBuilder<HTMLTrackElementProps | null>;\nexport function $h(tagName: \"tt\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"u\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"ul\", className?: string): VNodeBuilder<HTMLUListElementProps | null>;\nexport function $h(tagName: \"var\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"wbr\", className?: string): VNodeBuilder<HTMLElementProps | null>;\nexport function $h(tagName: \"x-ms-webview\", className?: string): VNodeBuilder<MSHTMLWebViewElementProps | null>;\nexport function $h(tagName: \"xmp\", className?: string): VNodeBuilder<HTMLPreElementProps | null>;\nexport function $h(tagName: HTMLTagType, className?: string): VNodeBuilder<HTMLElementProps | null> {\n    return new VNodeBuilder<HTMLElementProps | null>(\n        VNodeFlags.Element,\n        tagName,\n        null,\n        className === undefined ? null : className,\n        null);\n}\n\n/**\n * Create a VNodeBuilder representing a SVGElement node.\n *\n * @param tagName SVG Element tag name.\n * @param className Class name.\n * @returns VNodeBuilder object.\n */\nexport function $s(tagName: \"circle\", className?: string): VNodeBuilder<SVGCircleElementProps | null>;\nexport function $s(tagName: \"clippath\", className?: string): VNodeBuilder<SVGClipPathElementProps | null>;\nexport function $s(tagName: \"defs\", className?: string): VNodeBuilder<SVGDefsElementProps | null>;\nexport function $s(tagName: \"desc\", className?: string): VNodeBuilder<SVGDescElementProps | null>;\nexport function $s(tagName: \"ellipse\", className?: string): VNodeBuilder<SVGEllipseElementProps | null>;\nexport function $s(tagName: \"feblend\", className?: string): VNodeBuilder<SVGFEBlendElementProps | null>;\nexport function $s(tagName: \"fecolormatrix\", className?: string): VNodeBuilder<SVGFEColorMatrixElementProps | null>;\nexport function $s(tagName: \"fecomponenttransfer\", className?: string): VNodeBuilder<SVGFEComponentTransferElementProps | null>;\nexport function $s(tagName: \"fecomposite\", className?: string): VNodeBuilder<SVGFECompositeElementProps | null>;\nexport function $s(tagName: \"feconvolvematrix\", className?: string): VNodeBuilder<SVGFEConvolveMatrixElementProps | null>;\nexport function $s(tagName: \"fediffuselighting\", className?: string): VNodeBuilder<SVGFEDiffuseLightingElementProps | null>;\nexport function $s(tagName: \"fedisplacementmap\", className?: string): VNodeBuilder<SVGFEDisplacementMapElementProps | null>;\nexport function $s(tagName: \"fedistantlight\", className?: string): VNodeBuilder<SVGFEDistantLightElementProps | null>;\nexport function $s(tagName: \"feflood\", className?: string): VNodeBuilder<SVGFEFloodElementProps | null>;\nexport function $s(tagName: \"fefunca\", className?: string): VNodeBuilder<SVGFEFuncAElementProps | null>;\nexport function $s(tagName: \"fefuncb\", className?: string): VNodeBuilder<SVGFEFuncBElementProps | null>;\nexport function $s(tagName: \"fefuncg\", className?: string): VNodeBuilder<SVGFEFuncGElementProps | null>;\nexport function $s(tagName: \"fefuncr\", className?: string): VNodeBuilder<SVGFEFuncRElementProps | null>;\nexport function $s(tagName: \"fegaussianblur\", className?: string): VNodeBuilder<SVGFEGaussianBlurElementProps | null>;\nexport function $s(tagName: \"feimage\", className?: string): VNodeBuilder<SVGFEImageElementProps | null>;\nexport function $s(tagName: \"femerge\", className?: string): VNodeBuilder<SVGFEMergeElementProps | null>;\nexport function $s(tagName: \"femergenode\", className?: string): VNodeBuilder<SVGFEMergeNodeElementProps | null>;\nexport function $s(tagName: \"femorphology\", className?: string): VNodeBuilder<SVGFEMorphologyElementProps | null>;\nexport function $s(tagName: \"feoffset\", className?: string): VNodeBuilder<SVGFEOffsetElementProps | null>;\nexport function $s(tagName: \"fepointlight\", className?: string): VNodeBuilder<SVGFEPointLightElementProps | null>;\nexport function $s(tagName: \"fespecularlighting\", className?: string): VNodeBuilder<SVGFESpecularLightingElementProps | null>;\nexport function $s(tagName: \"fespotlight\", className?: string): VNodeBuilder<SVGFESpotLightElementProps | null>;\nexport function $s(tagName: \"fetile\", className?: string): VNodeBuilder<SVGFETileElementProps | null>;\nexport function $s(tagName: \"feturbulence\", className?: string): VNodeBuilder<SVGFETurbulenceElementProps | null>;\nexport function $s(tagName: \"filter\", className?: string): VNodeBuilder<SVGFilterElementProps | null>;\nexport function $s(tagName: \"foreignobject\", className?: string): VNodeBuilder<SVGForeignObjectElementProps | null>;\nexport function $s(tagName: \"g\", className?: string): VNodeBuilder<SVGGElementProps | null>;\nexport function $s(tagName: \"image\", className?: string): VNodeBuilder<SVGImageElementProps | null>;\nexport function $s(tagName: \"line\", className?: string): VNodeBuilder<SVGLineElementProps | null>;\nexport function $s(tagName: \"lineargradient\", className?: string): VNodeBuilder<SVGLinearGradientElementProps | null>;\nexport function $s(tagName: \"marker\", className?: string): VNodeBuilder<SVGMarkerElementProps | null>;\nexport function $s(tagName: \"mask\", className?: string): VNodeBuilder<SVGMaskElementProps | null>;\nexport function $s(tagName: \"metadata\", className?: string): VNodeBuilder<SVGMetadataElementProps | null>;\nexport function $s(tagName: \"path\", className?: string): VNodeBuilder<SVGPathElementProps | null>;\nexport function $s(tagName: \"pattern\", className?: string): VNodeBuilder<SVGPatternElementProps | null>;\nexport function $s(tagName: \"polygon\", className?: string): VNodeBuilder<SVGPolygonElementProps | null>;\nexport function $s(tagName: \"polyline\", className?: string): VNodeBuilder<SVGPolylineElementProps | null>;\nexport function $s(tagName: \"radialgradient\", className?: string): VNodeBuilder<SVGRadialGradientElementProps | null>;\nexport function $s(tagName: \"rect\", className?: string): VNodeBuilder<SVGRectElementProps | null>;\nexport function $s(tagName: \"stop\", className?: string): VNodeBuilder<SVGStopElementProps | null>;\nexport function $s(tagName: \"svg\", className?: string): VNodeBuilder<SVGSVGElementProps | null>;\nexport function $s(tagName: \"switch\", className?: string): VNodeBuilder<SVGSwitchElementProps | null>;\nexport function $s(tagName: \"symbol\", className?: string): VNodeBuilder<SVGSymbolElementProps | null>;\nexport function $s(tagName: \"text\", className?: string): VNodeBuilder<SVGTextElementProps | null>;\nexport function $s(tagName: \"textpath\", className?: string): VNodeBuilder<SVGTextPathElementProps | null>;\nexport function $s(tagName: \"tspan\", className?: string): VNodeBuilder<SVGTSpanElementProps | null>;\nexport function $s(tagName: \"use\", className?: string): VNodeBuilder<SVGUseElementProps | null>;\nexport function $s(tagName: \"view\", className?: string): VNodeBuilder<SVGViewElementProps | null>;\nexport function $s(tagName: SVGTagType, className?: string): VNodeBuilder<SVGElementProps | null> {\n    return new VNodeBuilder<SVGElementProps | null>(\n        VNodeFlags.Element | VNodeFlags.SvgElement,\n        tagName,\n        null,\n        className === undefined ? null : className,\n        null);\n}\n\n/**\n * Create a VNodeBuilder representing an HTMLInputElement node.\n *\n * @param type Input Element type. When type param has value \"textarea\", HTMLTextAreaElement will be created.\n * @param className Class name.\n * @returns VNodeBuilder object.\n */\nexport function $i(type: \"textarea\", className?: string): VNodeBuilder<HTMLTextAreaElementProps | null>;\nexport function $i(type: \"button\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"checkbox\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"color\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"date\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"datetime\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"datetime-local\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"email\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"file\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"hidden\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"image\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"month\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"number\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"password\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"radio\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"range\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"reset\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"search\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"submit\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"tel\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"text\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"time\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"url\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: \"week\", className?: string): VNodeBuilder<HTMLInputElementProps | null>;\nexport function $i(type: InputType, className?: string): VNodeBuilder<HTMLInputElementProps | null> {\n    return new VNodeBuilder<HTMLInputElementProps | null>(\n        type === \"textarea\" ?\n            VNodeFlags.Element | VNodeFlags.InputElement | VNodeFlags.TextAreaElement :\n            VNodeFlags.Element | VNodeFlags.InputElement,\n        type,\n        null,\n        className === undefined ? null : className,\n        null);\n}\n\n/**\n * Create a VNodeBuilder representing an HTMLMediaElement node.\n *\n * @param tagName Media element tag name.\n * @param className Class name.\n * @returns VNodeBuilder object.\n */\nexport function $m(tagName: \"audio\", className?: string): VNodeBuilder<HTMLAudioElementProps | null>;\nexport function $m(tagName: \"video\", className?: string): VNodeBuilder<HTMLVideoElementProps | null>;\nexport function $m(tagName: MediaTagType, className?: string): VNodeBuilder<HTMLMediaElementProps | null> {\n    return new VNodeBuilder<HTMLMediaElementProps | null>(\n        VNodeFlags.Element | VNodeFlags.MediaElement,\n        tagName,\n        null,\n        className === undefined ? null : className,\n        null);\n}\n/* tslint:enable:max-line-length */\n\n/**\n * Create a VNodeBuilder representing a Component node.\n *\n * @param c Component factory.\n * @param props Component props.\n * @returns VNodeBuilder object.\n */\nexport function $c(c: ComponentFunction<null> | ComponentClass<null>): VNodeBuilder<null>;\nexport function $c<P>(c: ComponentFunction<P> | ComponentClass<P>, props: P): VNodeBuilder<P>;\nexport function $c<P>(c: ComponentFunction<P> | ComponentClass<P>, props?: P): VNodeBuilder<P> {\n    return new VNodeBuilder<P>(\n        (c.prototype.render) ? VNodeFlags.ComponentClass : VNodeFlags.ComponentFunction,\n        c,\n        props!,\n        null,\n        null);\n}\n\n/**\n * Create a VNodeBuilder representing an ElementDescriptor.\n *\n * @param d Element Descriptor.\n * @param className Class name.\n * @returns VNodeBuilder object.\n */\nexport function $e<P>(d: ElementDescriptor<P>, className?: string): VNodeBuilder<P> {\n    return new VNodeBuilder<P>(\n        d._flags & ElementDescriptorFlags.CopyFlags,\n        d,\n        null,\n        className === undefined ? null : className,\n        null);\n}\n\n/**\n * Create a VNodeBuilder representing a Custom Element (WebComponent).\n *\n * @param d Element Descriptor.\n * @param className Class name.\n * @returns VNodeBuilder object.\n */\nexport function $w(tagName: string, className?: string): VNodeBuilder<{ [key: string]: any } | null> {\n    if (__IVI_DEV__) {\n        if (!isValidTag(tagName)) {\n            throw new Error(`Invalid tag: ${tagName}`);\n        }\n    }\n    return new VNodeBuilder<HTMLElementProps | null>(\n        VNodeFlags.Element | VNodeFlags.WebComponent,\n        tagName,\n        null,\n        className === undefined ? null : className,\n        null);\n}\n\n/**\n * Deep clone of VNode children with instance refs erasure.\n *\n * @param flags Parent VNode flags.\n * @param children Children.\n * @returns Cloned children.\n */\nexport function cloneVNodeChildren(\n    flags: VNodeFlags,\n    children: VNode<any>[] | VNode<any> | string | number | boolean | null | undefined,\n): VNode<any>[] | VNode<any> | string | number | boolean | null | undefined {\n    if (children !== null) {\n        if (flags & (VNodeFlags.ChildrenVNode | VNodeFlags.ChildrenArray)) {\n            if (flags & VNodeFlags.ChildrenArray) {\n                children = children as VNode<any>[];\n                const newChildren = new Array<VNode<any>>(children.length);\n                for (let i = 0; i < 0; i++) {\n                    newChildren[i] = _cloneVNode(children[i], true);\n                }\n                return newChildren;\n            } else {\n                return _cloneVNode(children as VNode<any>, true);\n            }\n        }\n    }\n\n    return children;\n}\n\nfunction _cloneVNode(node: VNode<any>, cloneKey: boolean): VNodeBuilder<any> {\n    const flags = node._flags;\n\n    const newNode = new VNodeBuilder(\n        flags,\n        node._tag,\n        node._props,\n        node._className,\n        (flags & VNodeFlags.Component) ?\n            null :\n            cloneVNodeChildren(flags, node._children));\n    if (cloneKey) {\n        newNode._key = node._key;\n    }\n    newNode._events = node._events;\n    newNode._style = node._style;\n\n    return newNode;\n}\n\n/**\n * Deep clone of VNode with instance refs erasure.\n *\n * @param node VNode to clone.\n * @returns Cloned VNode.\n */\nexport function cloneVNode(node: VNode<any>): VNodeBuilder<any> {\n    return _cloneVNode(node, (node._flags & VNodeFlags.Key) ? true : false);\n}\n\n/**\n * Shallow clone of VNode with instance refs erasure.\n *\n * @param node VNode to clone.\n * @returns Cloned VNode.\n */\nexport function shallowCloneVNode(node: VNode<any>): VNodeBuilder<any> {\n    const flags = node._flags;\n\n    const newNode = new VNodeBuilder(\n        flags & ~(\n            VNodeFlags.ChildrenArray |\n            VNodeFlags.ChildrenBasic |\n            VNodeFlags.ChildrenVNode |\n            VNodeFlags.UnsafeHTML\n        ),\n        node._tag,\n        node._props,\n        node._className,\n        null);\n    if (node._flags & VNodeFlags.Key) {\n        newNode._key = node._key;\n    }\n    newNode._events = node._events;\n    newNode._style = node._style;\n\n    return newNode;\n}\n\n/**\n * Normalizes recursive VNode array by flattening all nodes, removing null values and converting basic objects to text\n * nodes.\n *\n * @param nodes\n * @returns Normalized VNode array.\n */\nexport function normalizeVNodes(nodes: VNodeRecursiveArray): VNode<any>[] {\n    let keyOffset = 0;\n    for (let i = 0; i < nodes.length; i++) {\n        const n = nodes[i];\n\n        if (typeof n === \"object\") {\n            if (n === null || Array.isArray(n)) {\n                const result = nodes.slice(0, i) as VNode<any>[];\n                _normalizeVNodes(nodes, result, i, 0, keyOffset);\n                return result;\n            } else {\n                if (!(n._flags & VNodeFlags.Key)) {\n                    n._key = keyOffset++;\n                }\n            }\n        } else { // basic object\n            const node = $t(n);\n            node._key = keyOffset++;\n            nodes[i] = node;\n        }\n    }\n\n    return nodes as VNode<any>[];\n}\n\nfunction _normalizeVNodes(\n    nodes: VNodeRecursiveArray,\n    result: VNode<any>[],\n    i: number,\n    keyOffset: number,\n    count: number,\n): number {\n    for (; i < nodes.length; i++) {\n        const n = nodes[i];\n        if (typeof n === \"object\") {\n            if (Array.isArray(n)) {\n                count += _normalizeVNodes(n, result, 0, keyOffset + count, 0) + 1;\n            } else if (n === null) {\n                count++;\n            } else {\n                if (!(n._flags & VNodeFlags.Key)) {\n                    n._key = keyOffset + count++;\n                }\n                result.push(n);\n            }\n        } else { // basic object\n            const node = $t(n);\n            node._key = keyOffset + count++;\n            result.push(node);\n        }\n    }\n\n    return count;\n}\n","import { ComponentFlags } from \"../vdom/flags\";\nimport { Component } from \"../vdom/component\";\nimport { updateComponent } from \"../vdom/implementation\";\nimport { requestNextFrame } from \"./frame\";\n\nconst _animations: (() => boolean | undefined)[] = [];\nconst _animatedComponents: Component<any>[] = [];\n\n/**\n * Add component to the animated list.\n *\n * @param component\n */\nexport function startComponentAnimation(component: Component<any>): void {\n    if (__IVI_BROWSER__) {\n        requestNextFrame();\n        component.flags |= ComponentFlags.Animated | ComponentFlags.InAnimationQueue;\n        _animatedComponents.push(component);\n    }\n}\n\n/**\n * Remove component from the animated list.\n *\n * @param component\n */\nexport function stopComponentAnimation(component: Component<any>): void {\n    if (__IVI_BROWSER__) {\n        component.flags |= ComponentFlags.Animated;\n    }\n}\n\n/**\n * Prepare animated components by marking them dirty.\n */\nexport function prepareAnimatedComponents(): void {\n    if (__IVI_BROWSER__) {\n        for (let i = 0; i < _animatedComponents.length; i++) {\n            _animatedComponents[i].flags |= ComponentFlags.DirtyState;\n        }\n    }\n}\n\n/**\n * Update animated components.\n */\nexport function updateAnimatedComponents(): void {\n    if (__IVI_BROWSER__) {\n        for (let i = 0; i < _animatedComponents.length; i++) {\n            const component = _animatedComponents[i];\n            if (component.flags & ComponentFlags.Animated) {\n                updateComponent(component);\n            } else {\n                component.flags &= ~ComponentFlags.InAnimationQueue;\n                if (i === _animatedComponents.length) {\n                    _animatedComponents.pop();\n                } else {\n                    _animatedComponents[i--] = _animatedComponents.pop() !;\n                }\n            }\n        }\n    }\n}\n\n/**\n * Add animation.\n *\n * @param animation Animation task.\n */\nexport function addAnimation(animation: () => boolean | undefined): void {\n    if (__IVI_BROWSER__) {\n        _animations.push(animation);\n    }\n}\n\n/**\n * Execute animations.\n */\nexport function executeAnimations(): void {\n    if (__IVI_BROWSER__) {\n        for (let i = 0; i < _animations.length; i++) {\n            const animation = _animations[i];\n            if (animation()) {\n                if (i === _animations.length) {\n                    _animations.pop();\n                } else {\n                    _animations[i--] = _animations.pop() !;\n                }\n            }\n        }\n    }\n}\n\nexport function shouldRequestNextFrameForAnimations(): boolean {\n    if (__IVI_BROWSER__) {\n        return (\n            (_animatedComponents.length > 0) ||\n            (_animations.length > 0)\n        );\n    }\n    return false;\n}\n","/**\n * DO NOT MOVE THIS FUNCTIONS TO SEPARATE MODULES!\n *\n * There are so many circular dependencies between functions in this module, so just leave it all here instead of\n * creating many circular dependencies between JS modules.\n *\n * Code in this module is working only in browser environments.\n *\n * Tags:\n *\n * #entry - Entry point, function that will be invoked just once when the reconciliation process is started with a root\n *   render, or when scheduler updates invalidated components. Entry point is a good place to inject tryCatch statements\n *   to improve stack trace messages etc.\n * #augment - Function that is used only for augmenting.\n * #component - Component related functions.\n */\n\nimport { SVG_NAMESPACE, setInnerHTML } from \"../common/dom\";\nimport { DevModeFlags, DEV_MODE, perfMarkBegin, perfMarkEnd, getFunctionName } from \"../dev_mode/dev_mode\";\nimport { devModeOnError, devModeOnComponentCreated, devModeOnComponentDisposed } from \"../dev_mode/hooks\";\nimport { injectScreenOfDeath } from \"../dev_mode/screen_of_death\";\nimport {\n    setInitialNestingState, pushNestingState, restoreNestingState, checkNestingViolation, nestingStateAncestorFlags,\n    nestingStateParentTagName, AncestorFlags, AncestorFlagsByTagName,\n} from \"../dev_mode/html_nesting_rules\";\nimport {\n    stackTracePushComponent, stackTracePopComponent, stackTraceReset, stackTraceAugment,\n    getFunctionalComponentStackTrace,\n} from \"../dev_mode/stack_trace\";\nimport { VNodeFlags, ComponentFlags, SyncFlags } from \"./flags\";\nimport { VNode, getDOMInstanceFromVNode } from \"./vnode\";\nimport { ElementDescriptor } from \"./element_descriptor\";\nimport { $t } from \"./vnode_builder\";\nimport {\n    ComponentClass, ComponentFunction, Component, registerComponent, unregisterComponent, getDOMInstanceFromComponent,\n} from \"./component\";\nimport { Context } from \"./context\";\nimport { syncDOMProps, syncClassName, syncStyle } from \"./sync_dom\";\nimport { syncEvents, removeEvents } from \"../events/sync_events\";\n\n/**\n * Begin component perf mark.\n *\n * @param debugId\n * @param method\n */\nfunction componentPerfMarkBegin(debugId: number, method: string): void {\n    if (__IVI_DEV__) {\n        if (DEV_MODE & DevModeFlags.EnableComponentPerformanceProfiling) {\n            perfMarkBegin(`${debugId}::${method}`);\n        }\n    }\n}\n\n/**\n * End component perf mark.\n *\n * @param debugId\n * @param method\n * @param component\n */\nfunction componentPerfMarkEnd(\n    debugId: number,\n    method: string,\n    instance: false,\n    component: ComponentFunction<any>,\n): void;\nfunction componentPerfMarkEnd(\n    debugId: number,\n    method: string,\n    instance: true,\n    component: Component<any>,\n): void;\nfunction componentPerfMarkEnd(\n    debugId: number,\n    method: string,\n    instance: boolean,\n    component: Component<any> | ComponentFunction<any>,\n): void {\n    if (__IVI_DEV__) {\n        if (DEV_MODE & DevModeFlags.EnableComponentPerformanceProfiling) {\n            perfMarkEnd(\n                `${instance ? \"[C]\" : \"[F]\"}${getFunctionName(\n                    (instance ? component.constructor : component) as Function,\n                )}::${method}`,\n                `${debugId}::${method}`,\n            );\n        }\n    }\n}\n\n/**\n * Traverses tree to the body and calculates `AncestorFlags`.\n *\n * @param element\n * @returns Ancestor Flags.\n */\nfunction ancestorFlags(element: Element): AncestorFlags {\n    if (__IVI_DEV__) {\n        let result = 0;\n        while (element && (element !== document.body)) {\n            result |= AncestorFlagsByTagName[element.tagName.toLowerCase()];\n            element = element.parentElement;\n        }\n        return result;\n    }\n\n    return 0;\n}\n\n/**\n * Render VNode entry point tryCatch wrapper.\n *\n * #entry\n *\n * @param container Container Node.\n * @param refChild Reference to the next Node, when it is `null` child will be inserted at the end.\n * @param vnode VNode.\n * @param context Current context.\n * @param owner Owning component.\n * @returns Rendered instance.\n */\nexport function renderVNode(\n    parent: Node,\n    refChild: Node | null,\n    vnode: VNode<any>,\n    context: Context,\n    owner?: Component<any>,\n): Node | Component<any> {\n    if (__IVI_DEV__) {\n        if ((parent as Element).tagName) {\n            setInitialNestingState((parent as Element).tagName.toLowerCase(), ancestorFlags(parent as Element));\n        } else {\n            setInitialNestingState(\"\", 0);\n        }\n\n        try {\n            return _renderVNode(parent, refChild, vnode, context, owner);\n        } catch (e) {\n            stackTraceAugment(e);\n            devModeOnError(e);\n            injectScreenOfDeath(`ivi Error: ${e.message}`, e.stack);\n            stackTraceReset();\n            throw e;\n        }\n    }\n    return _renderVNode(parent, refChild, vnode, context, owner);\n}\n\n/**\n * Render VNode entry point. Renders VNode into container and invokes `attached` lifecycle methods after VNode is\n * inserted into container.\n *\n * #entry\n *\n * @param container Container Node.\n * @param refChild Reference to the next Node, when it is `null` child will be inserted at the end.\n * @param vnode VNode.\n * @param context Current context.\n * @param owner Owning component.\n * @returns Rendered DOM Node.\n */\nfunction _renderVNode(\n    container: Node,\n    refChild: Node | null,\n    vnode: VNode<any>,\n    context: Context,\n    owner?: Component<any>,\n): Node | Component<any> {\n    return vNodeRenderInto(container, refChild, vnode, context, owner);\n}\n\n/**\n * Sync VNode entry point tryCatch wrapper.\n *\n * @param parent Parent node.\n * @param a Old VNode.\n * @param b New VNode.\n * @param context Current context.\n * @param owner Owning component.\n * @returns Synced DOM Node. When VNodes are synced and they aren't compatible, old DOM Node will be replaced with a new\n * DOM Node.\n */\nexport function syncVNode(\n    parent: Node,\n    a: VNode<any>,\n    b: VNode<any>,\n    context: Context,\n    syncFlags: SyncFlags,\n    owner?: Component<any>,\n): Node | Component<any> {\n    if (__IVI_DEV__) {\n        if ((parent as Element).tagName) {\n            setInitialNestingState((parent as Element).tagName.toLowerCase(), ancestorFlags(parent as Element));\n        } else {\n            setInitialNestingState(\"\", 0);\n        }\n\n        try {\n            return _syncVNode(parent, a, b, context, owner);\n        } catch (e) {\n            stackTraceAugment(e);\n            devModeOnError(e);\n            injectScreenOfDeath(`ivi Error: ${e.message}`, e.stack);\n            stackTraceReset();\n            throw e;\n        }\n    }\n    return _syncVNode(parent, a, b, context, owner);\n}\n\n/**\n * Sync VNode entry point. Sync VNode with a new one or replace when they aren't compatible.\n *\n * #entry\n *\n * @param parent Parent node.\n * @param a Old VNode.\n * @param b New VNode.\n * @param context Current context.\n * @param owner Owning component.\n * @returns Synced DOM Node. When VNodes are synced and they aren't compatible, old DOM Node will be replaced with a new\n * DOM Node.\n */\nfunction _syncVNode(\n    parent: Node,\n    a: VNode<any>,\n    b: VNode<any>,\n    context: Context,\n    owner?: Component<any>,\n): Node | Component<any> {\n    return vNodeSyncOrReplace(parent, a, b, context, 0, owner);\n}\n\n/**\n * Remove VNode entry point tryCatch wrapper.\n *\n * #entry\n *\n * @param parent Parent DOM node.\n * @param node VNode element to remove.\n */\nexport function removeVNode(parent: Node, node: VNode<any>): void {\n    if (__IVI_DEV__) {\n        try {\n            _removeVNode(parent, node);\n            return;\n        } catch (e) {\n            stackTraceAugment(e);\n            devModeOnError(e);\n            injectScreenOfDeath(`ivi Error: ${e.message}`, e.stack);\n            stackTraceReset();\n            throw e;\n        }\n    }\n    _removeVNode(parent, node);\n}\n\n/**\n * Remove VNode entry point.\n *\n * #entry\n *\n * @param parent Parent DOM node.\n * @param node VNode element to remove.\n */\nfunction _removeVNode(parent: Node, node: VNode<any>): void {\n    parent.removeChild(getDOMInstanceFromVNode(node) !);\n    vNodeDetach(node);\n}\n\n/**\n * Augment entry point tryCatch wrapper.\n *\n * #entry\n * #augment\n *\n * @param parent Parent DOM Node.\n * @param node DOM Node.\n * @param vnode Virtual DOM Node.\n * @param context Context.\n * @param owner Owner.\n */\nexport function augmentVNode(\n    parent: Node,\n    node: Node | null,\n    vnode: VNode<any>,\n    context: Context,\n    owner?: Component<any>,\n): void {\n    if (__IVI_DEV__) {\n        if ((parent as Element).tagName) {\n            setInitialNestingState((parent as Element).tagName.toLowerCase(), ancestorFlags(parent as Element));\n        } else {\n            setInitialNestingState(\"\", 0);\n        }\n\n        try {\n            _augmentVNode(parent, node, vnode, context, owner);\n            return;\n        } catch (e) {\n            stackTraceAugment(e);\n            devModeOnError(e);\n            injectScreenOfDeath(`ivi Error: ${e.message}`, e.stack);\n            stackTraceReset();\n            throw e;\n        }\n    }\n    _augmentVNode(parent, node, vnode, context, owner);\n}\n\n/**\n * Augment entry point. Augments DOM tree with a Virtual DOM tree and performs attaching.\n *\n * #entry\n * #augment\n *\n * @param parent Parent DOM Node.\n * @param node DOM Node.\n * @param vnode Virtual DOM Node.\n * @param context Context.\n * @param owner Owner.\n */\nfunction _augmentVNode(\n    parent: Node,\n    node: Node | null,\n    vnode: VNode<any>,\n    context: Context,\n    owner?: Component<any>,\n): void {\n    vNodeAugment(parent, node, vnode, context, owner);\n}\n\n/**\n * Update Component entry point tryCatch wrapper.\n *\n * #entry\n * #component\n *\n * @param component Component to update.\n * @returns DOM Node.\n */\nexport function updateComponent<P>(component: Component<P>): void {\n    if (__IVI_DEV__) {\n        try {\n            stackTracePushComponent((component as Object).constructor as ComponentClass<any>, component);\n            _updateComponent(component, 0);\n            stackTracePopComponent();\n            return;\n        } catch (e) {\n            stackTraceAugment(e);\n            devModeOnError(e);\n            injectScreenOfDeath(`ivi Error: ${e.message}`, e.stack);\n            stackTraceReset();\n            throw e;\n        }\n    }\n    _updateComponent(component, 0);\n}\n\n/**\n * Update Component.\n *\n * #entry\n *\n * @param component Component to update.\n * @returns DOM Node.\n */\nfunction _updateComponent<P>(component: Component<P>, syncFlags: SyncFlags): void {\n    const flags = component.flags;\n\n    if ((flags & ComponentFlags.Attached) &&\n        (\n            (flags & ComponentFlags.Dirty) ||\n            (syncFlags & SyncFlags.ForceUpdate)\n        )\n    ) {\n        componentPerfMarkBegin(component._debugId, \"update\");\n\n        const oldRoot = component.root!;\n\n        componentWillUpdate(component);\n\n        if (flags & (ComponentFlags.DirtyParentContext | ComponentFlags.DirtyContext)) {\n            componentUpdateContext(component);\n            syncFlags |= SyncFlags.DirtyContext;\n        }\n\n        if (\n            (flags & (ComponentFlags.DirtyProps | ComponentFlags.DirtyState)) ||\n            ((flags & (ComponentFlags.DirtyParentContext | ComponentFlags.UsingContext)) ===\n                (ComponentFlags.DirtyParentContext | ComponentFlags.UsingContext)) ||\n            (syncFlags & SyncFlags.ForceUpdate)\n        ) {\n            if (__IVI_DEV__) {\n                if ((component._parentDOMNode as Element).tagName) {\n                    setInitialNestingState((component._parentDOMNode as Element).tagName.toLowerCase(),\n                        component._ancestorFlags);\n                } else {\n                    setInitialNestingState(\"\", component._ancestorFlags);\n                }\n            }\n            const parentNode = component._parentDOMNode;\n            const newRoot = componentClassRender(component);\n            vNodeSyncOrReplace(parentNode!, oldRoot, newRoot, component._context, syncFlags, component);\n            component.flags &= ~(ComponentFlags.Dirty | ComponentFlags.InUpdateQueue);\n        } else if (oldRoot) { // (flags & (ComponentFlags.DirtyContext | ComponentFlags.DirtyParentContext))\n            vNodePropagateNewContext(component._parentDOMNode!, oldRoot, component._context, syncFlags, component);\n        }\n\n        componentDidUpdate(component);\n        componentPerfMarkEnd(component._debugId, \"update\", true, component);\n    }\n}\n\n/**\n * Update a component function.\n *\n * #component\n *\n * @param parent Parent DOM Node.\n * @param a Old VNode.\n * @param b New VNode.\n * @param context Current Context.\n * @param owner Owner.\n * @returns DOM Node.\n */\nfunction _updateComponentFunction(\n    parent: Node,\n    a: VNode<any>,\n    b: VNode<any>,\n    context: Context,\n    syncFlags: SyncFlags,\n    owner?: Component<any>,\n): Node | Component<any> {\n    let instance: Node | Component<any>;\n    const fn = b._tag as ComponentFunction<any>;\n\n    componentPerfMarkBegin(b._debugId, \"update\");\n\n    if (a !== b &&\n        (\n            (syncFlags & SyncFlags.ForceUpdate) ||\n            !fn.isPropsChanged ||\n            fn.isPropsChanged(a._props, b._props)\n        )\n    ) {\n        const oldRoot = a._children as VNode<any>;\n        const newRoot = b._children = componentFunctionRender(fn, b._props, context);\n        instance = vNodeSyncOrReplace(parent, oldRoot, newRoot, context, syncFlags, owner);\n    } else {\n        b._children = a._children;\n        instance = a._instance!;\n        if (syncFlags & SyncFlags.DirtyContext) {\n            vNodePropagateNewContext(parent, b._children as VNode<any>, context, syncFlags, owner);\n        }\n    }\n\n    componentPerfMarkEnd(b._debugId, \"update\", false, fn);\n\n    b._instance = instance;\n    return instance;\n}\n\n/**\n * Recursively attach all nodes.\n *\n * @param vnode VNode.\n */\nfunction vNodeAttach(vnode: VNode<any>): void {\n    const flags = vnode._flags;\n\n    if (flags & VNodeFlags.Component) {\n        if (flags & VNodeFlags.ComponentClass) {\n            const component = vnode._instance as Component<any>;\n            stackTracePushComponent(vnode._tag as ComponentClass<any>, component);\n            componentPerfMarkBegin(component._debugId, \"attach\");\n\n            if (__IVI_DEV__) {\n                if (component.flags & ComponentFlags.Attached) {\n                    throw new Error(\"Failed to attach Component: component is already attached.\");\n                }\n            }\n\n            component.flags |= ComponentFlags.Attached;\n            componentAttached(component);\n            vNodeAttach(component.root!);\n            componentPerfMarkEnd(component._debugId, \"attach\", true, component);\n        } else { // (flags & VNodeFlags.ComponentFunction)\n            stackTracePushComponent(vnode._tag as ComponentFunction<any>);\n            componentPerfMarkBegin(vnode._debugId, \"attach\");\n            vNodeAttach(vnode._children as VNode<any>);\n            componentPerfMarkEnd(vnode._debugId, \"attach\", false, vnode._tag as ComponentFunction<any>);\n        }\n        stackTracePopComponent();\n    } else if (!(flags & (VNodeFlags.InputElement | VNodeFlags.MediaElement))) {\n        let children = vnode._children;\n        if (children !== null && (flags & (VNodeFlags.ChildrenVNode | VNodeFlags.ChildrenArray))) {\n            if (flags & VNodeFlags.ChildrenArray) {\n                children = children as VNode<any>[];\n                for (let i = 0; i < children.length; i++) {\n                    vNodeAttach(children[i]);\n                }\n            } else {\n                vNodeAttach(children as VNode<any>);\n            }\n        }\n    }\n}\n\n/**\n * Recursively detach all nodes.\n *\n * @param vnode VNode.\n */\nfunction vNodeDetach(vnode: VNode<any>): void {\n    const flags = vnode._flags;\n    if (flags & VNodeFlags.Component) {\n        if (flags & VNodeFlags.ComponentClass) {\n            const component = vnode._instance as Component<any>;\n            stackTracePushComponent(vnode._tag as ComponentClass<any>, component);\n            componentPerfMarkBegin(component._debugId, \"detach\");\n\n            if (__IVI_DEV__) {\n                if (!(component.flags & ComponentFlags.Attached)) {\n                    throw new Error(\"Failed to detach Component: component is already detached.\");\n                }\n            }\n            vNodeDetach(component.root!);\n            component.flags &= ~(ComponentFlags.Attached | ComponentFlags.Animated);\n            componentDetached(component);\n            componentPerfMarkEnd(component._debugId, \"detach\", true, component);\n            unregisterComponent(component);\n            devModeOnComponentDisposed(component);\n        } else { // (flags & VNodeFlags.ComponentFunction)\n            stackTracePushComponent(vnode._tag as ComponentFunction<any>);\n            componentPerfMarkBegin(vnode._debugId, \"detach\");\n            vNodeDetach(vnode._children as VNode<any>);\n            componentPerfMarkEnd(vnode._debugId, \"detach\", false, vnode._tag as ComponentFunction<any>);\n        }\n        stackTracePopComponent();\n    } else if (flags & VNodeFlags.Element) {\n        if (!(flags & (VNodeFlags.InputElement | VNodeFlags.MediaElement))) {\n            let children = vnode._children;\n            if (children !== null && (flags & (VNodeFlags.ChildrenVNode | VNodeFlags.ChildrenArray))) {\n                if (flags & VNodeFlags.ChildrenArray) {\n                    children = children as VNode<any>[];\n                    for (let i = 0; i < children.length; i++) {\n                        vNodeDetach(children[i]);\n                    }\n                } else {\n                    vNodeDetach(children as VNode<any>);\n                }\n            }\n        }\n        if (vnode._events) {\n            removeEvents(vnode._events);\n        }\n    }\n\n    if (vnode._ref) {\n        vnode._ref(null);\n    }\n}\n\n/**\n * Detach all nodes and its subtrees.\n *\n * @param vnodes Array of VNodes.\n */\nfunction vNodeDetachAll(vnodes: VNode<any>[]): void {\n    for (let i = 0; i < vnodes.length; i++) {\n        vNodeDetach(vnodes[i]);\n    }\n}\n\n/**\n * Recursively propagate new context.\n *\n * @param vnode VNode.\n * @param context New context.\n */\nfunction vNodePropagateNewContext(\n    parent: Node,\n    vnode: VNode<any>,\n    context: Context,\n    syncFlags: SyncFlags,\n    owner?: Component<any>,\n): void {\n    const flags = vnode._flags;\n    if (flags & VNodeFlags.Component) {\n        if (flags & VNodeFlags.ComponentClass) {\n            const component = vnode._instance as Component<any>;\n            stackTracePushComponent(vnode._tag as ComponentClass<any>, component);\n            componentPerfMarkBegin(component._debugId, \"propagateContext\");\n            componentUpdateParentContext(component, context);\n            _updateComponent(component, syncFlags);\n            componentPerfMarkEnd(component._debugId, \"propagateContext\", true, component);\n        } else { // (flags & VNodeFlags.ComponentFunction)\n            const fn = vnode._tag as ComponentFunction<any>;\n            stackTracePushComponent(vnode._tag as ComponentFunction<any>);\n            componentPerfMarkBegin(vnode._debugId, \"propagateContext\");\n            // Optimization that checks if function is using context parameter. When function doesn't use context, it\n            // means that we can ignore re-renders when context is changed, and just propagate a new context through\n            // existing subtree.\n            if (fn.length < 2) {\n                vNodePropagateNewContext(\n                    parent,\n                    vnode._children as VNode<any>,\n                    context,\n                    syncFlags,\n                    owner);\n            } else {\n                _updateComponentFunction(\n                    parent,\n                    vnode._children as VNode<any>,\n                    vnode._children as VNode<any>,\n                    context,\n                    syncFlags,\n                    owner);\n            }\n            componentPerfMarkEnd(vnode._debugId, \"propagateContext\", false, fn);\n        }\n        stackTracePopComponent();\n    } else if (!(flags & (VNodeFlags.InputElement | VNodeFlags.MediaElement))) {\n        let children = vnode._children;\n        if (children !== null && (flags & (VNodeFlags.ChildrenVNode | VNodeFlags.ChildrenArray))) {\n            if (flags & VNodeFlags.ChildrenArray) {\n                children = children as VNode<any>[];\n                for (let i = 0; i < children.length; i++) {\n                    vNodePropagateNewContext(parent, children[i], context, syncFlags, owner);\n                }\n            } else {\n                vNodePropagateNewContext(parent, children as VNode<any>, context, syncFlags, owner);\n            }\n        }\n    }\n}\n\n/**\n * Move node.\n *\n * @param parent Parent DOM node.\n * @param node VNode element to move.\n * @param nextRef Reference to the next node, if it is null, node will be moved to the end.\n */\nfunction vNodeMoveChild(parent: Node, node: VNode<any>, nextRef: Node | null): void {\n    parent.insertBefore(getDOMInstanceFromVNode(node) !, nextRef!);\n}\n\n/**\n * Remove all children.\n *\n * `detach` lifecycle methods will be invoked for all children and their subtrees.\n *\n * @param parent Parent DOM node.\n * @param nodes Arrays of VNodes to remove.\n */\nfunction vNodeRemoveAllChildren(parent: Node, nodes: VNode<any>[]): void {\n    parent.textContent = \"\";\n    vNodeDetachAll(nodes);\n}\n\n/**\n * Remove child.\n *\n * `detach` lifecycle methods will be invoked for removed node and its subtree.\n *\n * @param parent Parent DOM node.\n * @param node VNode element to remove.\n */\nfunction vNodeRemoveChild(parent: Node, node: VNode<any>): void {\n    parent.removeChild(getDOMInstanceFromVNode(node) !);\n    vNodeDetach(node);\n}\n\n/**\n * Assign a new parent context to a component.\n *\n * Reference equality is used to check if context is changed, all context objects should be immutable.\n *\n * #component\n *\n * @param component Component.\n * @param newContext New Context to assign.\n */\nfunction componentUpdateParentContext<P>(component: Component<P>, newParentContext: Context): void {\n    if (component._parentContext !== newParentContext) {\n        component.flags |= ComponentFlags.DirtyParentContext;\n        const oldContext = component._parentContext;\n        component._parentContext = newParentContext;\n        component.newContextReceived(oldContext, newParentContext);\n    }\n}\n\n/**\n * Update current context of a component.\n *\n * #component\n *\n * @param component Component.\n */\nfunction componentUpdateContext<P>(component: Component<P>): void {\n    component.flags &= ~(ComponentFlags.CheckUsingProps | ComponentFlags.ContextUsingProps);\n    const contextData = component.updateContext();\n    component.flags |= (component.flags & ComponentFlags.CheckUsingProps) << 1;\n    const newContext = contextData ? new Context(contextData, component._parentContext) : component._parentContext;\n    component._context = newContext;\n}\n\n/**\n * Assign a new props to a component.\n *\n * #component\n *\n * @param component Component.\n * @param newProps New props to assign.\n */\nfunction componentUpdateProps<P>(component: Component<P>, newProps: P): void {\n    const oldProps = component._props;\n    if (component.isPropsChanged(oldProps, newProps)) {\n        component.flags |= ComponentFlags.DirtyProps;\n\n        component._props = newProps;\n\n        // There is no reason to call `didReceiveNewProps` when props aren't changed, even when they are reassigned\n        // later to reduce memory usage.\n        component.newPropsReceived(oldProps, newProps);\n        if (component.flags & ComponentFlags.ContextUsingProps) {\n            component.flags |= ComponentFlags.DirtyContext;\n        }\n    } else {\n        // Reassign props even when they aren't changed to reduce overall memory usage.\n        //\n        // New value always stays alive because it is referenced from virtual dom tree, so instead of keeping in memory\n        // two values even when they are the same, we just always reassign it to the new value.\n        component._props = newProps;\n    }\n}\n\n/**\n * Invoke `component.willUpdate` method.\n *\n * #component\n *\n * @param component\n */\nfunction componentWillUpdate<P>(component: Component<P>): void {\n    component.beforeUpdate();\n}\n\n/**\n * Invoke `component.didUpdate` method.\n *\n * #component\n *\n * @param component\n */\nfunction componentDidUpdate<P>(component: Component<P>): void {\n    component.updated();\n}\n\n/**\n * Invoke `component.attached` method.\n *\n * #component\n *\n * @param component\n */\nfunction componentAttached<P>(component: Component<P>): void {\n    component.attached();\n}\n\n/**\n * Invoke `component.detached` method.\n *\n * #component\n *\n * @param component\n */\nfunction componentDetached<P>(component: Component<P>): void {\n    component.detached();\n}\n\n/**\n * Render a component class instance and return root VNode.\n *\n * #component\n *\n * @param component Component.\n * @returns Root VNode.\n */\nfunction componentClassRender<P>(component: Component<P>): VNode<any> {\n    component.flags &= ~(ComponentFlags.CheckUsingContext | ComponentFlags.UsingContext);\n    const root = component.root = component.render() || $t(\"\");\n    component.flags |= (component.flags & ComponentFlags.CheckUsingContext) << 1;\n    return root;\n}\n\n/**\n * Render a component function instance and return root VNode.\n *\n * #component\n *\n * @param component Component function.\n * @param props Props.\n * @param context Context.\n * @returns Root VNode.\n */\nfunction componentFunctionRender<P>(component: ComponentFunction<P>, props: P, context?: Context): VNode<any> {\n    return component(props, context) || $t(\"\");\n}\n\n/**\n * Set value for HTMLInputElement.\n *\n * When value has a string type it is assigned to `value` property, otherwise it is assigned to `checked` property.\n *\n * @param input HTMLInputElement.\n * @param value Value.\n */\nfunction setHTMLInputValue(input: HTMLInputElement, value: string | boolean | null): void {\n    if (typeof value === \"string\") {\n        input.value = value;\n    } else {\n        input.checked = value as boolean;\n    }\n}\n\n/**\n * Render VNode.\n *\n * @param parent Parent DOM Node.\n * @param vnode VNode to render.\n * @param context Current context.\n * @param owner Owning component.\n * @returns Rendered DOM Node.\n */\nfunction vNodeRender(parent: Node, vnode: VNode<any>, context: Context, owner?: Component<any>): Node | Component<any> {\n    if (__IVI_DEV__) {\n        if (vnode._instance) {\n            throw new Error(\"VNode is already have a reference to an instance. VNodes can't be used mutliple times, \" +\n                \"clone VNode with `cloneVNode`, or use immutable vnodes `vnode.immutable()` for hoisted trees.\");\n        }\n\n        if (vnode._flags & VNodeFlags.Immutable) {\n            throw new Error(\"Immutable VNodes can't be used to render trees, clone an immutable tree with a \" +\n                \"`cloneVNode` function.\");\n        }\n    }\n\n    const flags = vnode._flags;\n    let instance: Node | Component<any>;\n    let childInstance: Node | Component<any>;\n    let i: number;\n    let child: VNode<any>;\n\n    if (flags & (VNodeFlags.Text | VNodeFlags.Element)) {\n        // Push nesting state and check for nesting violation.\n        const _prevNestingStateParentTagName = nestingStateParentTagName();\n        const _prevNestingStateAncestorFlags = nestingStateAncestorFlags();\n\n        if (flags & VNodeFlags.Text) {\n            pushNestingState(\"$t\");\n            checkNestingViolation();\n            instance = document.createTextNode(vnode._children as string);\n        } else { // (flags & VNodeFlags.Element)\n            pushNestingState((flags & VNodeFlags.ElementDescriptor) ?\n                (vnode._tag as ElementDescriptor<any>)._tag :\n                vnode._tag as string);\n            checkNestingViolation();\n            if (flags & VNodeFlags.ElementDescriptor) {\n                instance = (vnode._tag as ElementDescriptor<any>).createElement();\n            } else if (flags & VNodeFlags.InputElement) {\n                if (flags & VNodeFlags.TextAreaElement) {\n                    instance = document.createElement(\"textarea\");\n                } else {\n                    instance = document.createElement(\"input\");\n                    /**\n                     * #quirks\n                     *\n                     * It is important that we assign `type` before any other properties. IE11 will remove assigned\n                     * `value` when `type` is assigned.\n                     */\n                    (instance as HTMLInputElement).type = vnode._tag as string;\n                }\n            } else if (flags & VNodeFlags.SvgElement) {\n                instance = document.createElementNS(SVG_NAMESPACE, vnode._tag as string);\n            } else {\n                instance = document.createElement(vnode._tag as string);\n            }\n\n            if (vnode._props) {\n                syncDOMProps(instance as Element, flags, null, vnode._props);\n            }\n            if (vnode._className !== null) {\n                syncClassName(instance as Element, flags, null, vnode._className);\n            }\n            if (vnode._style !== null) {\n                syncStyle(instance as HTMLElement, null, vnode._style);\n            }\n            if (vnode._events) {\n                syncEvents(instance as Element, null, vnode._events);\n            }\n\n            let children = vnode._children;\n            if (children !== null) {\n                if (flags & (VNodeFlags.ChildrenBasic | VNodeFlags.ChildrenArray)) {\n                    if (flags & VNodeFlags.ChildrenBasic) {\n                        instance.textContent = children as string;\n                    } else {\n                        children = children as VNode<any>[];\n                        for (i = 0; i < children.length; i++) {\n                            child = children[i];\n                            childInstance = vNodeRender(instance, child, context, owner);\n\n                            instance.insertBefore(\n                                (child._flags & VNodeFlags.ComponentClass) ?\n                                    getDOMInstanceFromComponent(childInstance as Component<any>) :\n                                    childInstance as Node,\n                                null);\n                        }\n                    }\n                } else if (flags & VNodeFlags.ChildrenVNode) {\n                    child = children as VNode<any>;\n                    childInstance = vNodeRender(instance, child, context, owner);\n                    instance.insertBefore(\n                        (child._flags & VNodeFlags.ComponentClass) ?\n                            getDOMInstanceFromComponent(childInstance as Component<any>) :\n                            childInstance as Node,\n                        null);\n                } else if (flags & VNodeFlags.InputElement) {\n                    /**\n                     * #quirks\n                     *\n                     * It is important that input value is assigned after all properties. It prevents some issues with\n                     * rounding, etc. `value` should be assigned after `step`, `min` and `max` properties.\n                     */\n                    setHTMLInputValue(instance as HTMLInputElement, children as string | boolean);\n                } else { // (flags & VNodeFlags.UnsafeHTML)\n                    setInnerHTML((instance as Element), children as string, !!(flags & VNodeFlags.SvgElement));\n                }\n            }\n        }\n\n        restoreNestingState(_prevNestingStateParentTagName, _prevNestingStateAncestorFlags);\n    } else { // (flags & VNodeFlags.Component)\n        if (flags & VNodeFlags.ComponentClass) {\n            const component = instance = new (vnode._tag as ComponentClass<any>)(vnode._props, context, owner);\n            registerComponent(component);\n            devModeOnComponentCreated(component);\n            stackTracePushComponent(vnode._tag as ComponentClass<any>, component);\n            componentPerfMarkBegin(component._debugId, \"create\");\n            if (__IVI_DEV__) {\n                component._ancestorFlags = nestingStateAncestorFlags();\n                component._stackTrace = getFunctionalComponentStackTrace();\n            }\n            component._parentDOMNode = parent;\n            componentUpdateContext(component);\n            const root = componentClassRender(component);\n            vNodeRender(parent, root, component._context, component);\n            componentPerfMarkEnd(component._debugId, \"create\", true, component);\n        } else { // (flags & VNodeFlags.ComponentFunction)\n            stackTracePushComponent(vnode._tag as ComponentFunction<any>);\n            componentPerfMarkBegin(vnode._debugId, \"create\");\n            const root = vnode._children =\n                componentFunctionRender(vnode._tag as ComponentFunction<any>, vnode._props, context);\n            instance = vNodeRender(parent, root, context, owner);\n            componentPerfMarkEnd(vnode._debugId, \"create\", false, vnode._tag as ComponentFunction<any>);\n        }\n        stackTracePopComponent();\n    }\n\n    vnode._instance = instance;\n    if (vnode._ref) {\n        vnode._ref(instance);\n    }\n\n    return instance;\n}\n\n/**\n * Render VNode into container and invoke `attached` lifecycle methods after VNode is inserted into container.\n *\n * It is important that `attached` methods are invoked only after DOM Nodes have been inserted into container, so it\n * goes twice through the entire vnode tree, first time when everything is rendered and the second time when `attached`\n * methods are invoked.\n *\n * @param container Container Node.\n * @param refChild Reference to the next Node, when it is `null` child will be inserted at the end.\n * @param vnode VNode.\n * @param context Current context.\n * @param owner Owning component.\n * @returns Rendered DOM Node.\n */\nfunction vNodeRenderInto(\n    container: Node,\n    refChild: Node | null,\n    vnode: VNode<any>,\n    context: Context,\n    owner?: Component<any>,\n): Node | Component<any> {\n    const instance = vNodeRender(container, vnode, context, owner);\n    container.insertBefore(getDOMInstanceFromVNode(vnode) !, refChild);\n    vNodeAttach(vnode);\n    return instance;\n}\n\n/**\n * Get non-comment DOM Node. This function removes all comment DOM Nodes when searching for non-comment nodes.\n *\n * #augment\n *\n * @param parent Parent DOM Node.\n * @param node DOM Node.\n * @returns Non-comment DOM Node.\n */\nfunction getNonCommentNode(parent: Node, node: Node | null): Node | null {\n    while (node && node.nodeType === 8) {\n        const next = node.nextSibling;\n        parent.removeChild(node);\n        node = next;\n    }\n    return node;\n}\n\n/**\n * Augment DOM Node with a Virtual DOM Node.\n *\n * #augment\n *\n * @param parent Parent DOM Node.\n * @param node DOM Node.\n * @param vnode Virtual DOM Node.\n * @param context Context.\n * @param owner Owner.\n */\nfunction vNodeAugment(\n    parent: Node,\n    node: Node | null,\n    vnode: VNode<any>,\n    context: Context,\n    owner?: Component<any>,\n): Node | Component<any> {\n    if (__IVI_DEV__) {\n        if (vnode._instance) {\n            throw new Error(\"VNode is already have a reference to an instance. VNodes can't be used mutliple times, \" +\n                \"clone VNode with `cloneVNode`, or use immutable vnodes `vnode.immutable()` for hoisted trees.\");\n        }\n\n        if (vnode._flags & VNodeFlags.Immutable) {\n            throw new Error(\"Immutable VNodes can't be used to render trees, clone an immutable tree with a \" +\n                \"`cloneVNode` function.\");\n        }\n    }\n\n    let instance: Node | Component<any>;\n\n    if (node) {\n        const flags = vnode._flags;\n\n        if (flags & (VNodeFlags.Element | VNodeFlags.Text)) {\n            // Push nesting state and check for nesting violation.\n            const _prevNestingStateParentTagName = nestingStateParentTagName();\n            const _prevNestingStateAncestorFlags = nestingStateAncestorFlags();\n\n            instance = node;\n\n            if (flags & VNodeFlags.Element) {\n                if (__IVI_DEV__) {\n                    pushNestingState((flags & VNodeFlags.ElementDescriptor) ?\n                        (vnode._tag as ElementDescriptor<any>)._tag :\n                        vnode._tag as string);\n                    checkNestingViolation();\n                    if (node.nodeType !== 1) {\n                        throw new Error(`Invalid node type: expected \"1\", actual \"${node.nodeType}\".`);\n                    }\n                    if (vnode._className) {\n                        const className = (node as Element).getAttribute(\"class\");\n                        if (className !== vnode._className) {\n                            throw new Error(`Invalid class name: expected \"${vnode._className}\", ` +\n                                `actual \"${className}\".`);\n                        }\n                    }\n                    // We can't check any style properties, because browsers ignore style names they don't understand,\n                    // like style names with browser specific prefixes.\n                    if (vnode._children === null) {\n                        if (node.hasChildNodes()) {\n                            throw new Error(`Invalid children: expected \"0\" children, ` +\n                                `actual \"${node.childNodes.length}\".`);\n                        }\n                    }\n                }\n\n                if (vnode._events) {\n                    syncEvents(node as Element, null, vnode._events);\n                }\n\n                if (vnode._children !== null) {\n                    if (flags & (VNodeFlags.ChildrenArray | VNodeFlags.ChildrenVNode)) {\n                        let domChild = getNonCommentNode(node, node.firstChild);\n                        if (flags & VNodeFlags.ChildrenArray) {\n                            const children = vnode._children as VNode<any>[];\n                            for (let i = 0; i < children.length; i++) {\n                                const child = children[i];\n                                if (child._flags & VNodeFlags.Text && child._children === \"\") {\n                                    vNodeRenderInto(node, domChild, child, context, owner);\n                                } else {\n                                    if (__IVI_DEV__) {\n                                        if (domChild === null) {\n                                            throw new Error(`Invalid children: expected to find ${children.length} ` +\n                                                `children nodes.`);\n                                        }\n                                    }\n                                    vNodeAugment(node, domChild, children[i], context, owner);\n                                    domChild = getNonCommentNode(node, domChild!.nextSibling);\n                                }\n                            }\n                            if (__IVI_DEV__) {\n                                if (getNonCommentNode(node, domChild) !== null) {\n                                    throw new Error(`Invalid children: document contains more children nodes than ` +\n                                        `expected.`);\n                                }\n                            }\n                        } else {\n                            if (__IVI_DEV__) {\n                                if (domChild === null) {\n                                    throw new Error(`Invalid children: expected to find 1 child node.`);\n                                }\n                                if (getNonCommentNode(node, domChild.nextSibling) !== null) {\n                                    throw new Error(`Invalid children: document contains more children nodes than ` +\n                                        `expected.`);\n                                }\n                            }\n                            vNodeAugment(node, domChild, vnode._children as VNode<any>, context, owner);\n                        }\n\n                    } else if (flags & VNodeFlags.InputElement) {\n                        // Do not override input value when augmenting.\n                        //\n                        // TODO: What should be the default behavior when input element is changed before scripts\n                        // are loaded. Maybe we should fire onInput event, is synthetic event enough, or it should be\n                        // a native event?\n                        //\n                        // setHTMLInputValue(node as HTMLInputElement, vnode._children as string | boolean);\n                    }\n                }\n            } else if (__IVI_DEV__) { // (flags & VNodeFlags.Text)\n                pushNestingState(\"$t\");\n                checkNestingViolation();\n\n                if (node.nodeType !== 3) {\n                    throw new Error(`Invalid node type: expected \"3\", actual \"${node.nodeType}\".`);\n                }\n                if (node.nodeValue !== (vnode._children as number | boolean | string).toString()) {\n                    throw new Error(`Invalid text content: expected \"${vnode._children}\", actual \"${node.nodeValue}\".`);\n                }\n            }\n\n            restoreNestingState(_prevNestingStateParentTagName, _prevNestingStateAncestorFlags);\n        } else { // (flags & VNodeFlags.Component)\n            if (flags & VNodeFlags.ComponentClass) {\n                const component = instance = new (vnode._tag as ComponentClass<any>)(vnode._props, context, owner);\n                registerComponent(component);\n                devModeOnComponentCreated(component);\n                stackTracePushComponent(vnode._tag as ComponentClass<any>, component);\n\n                if (__IVI_DEV__) {\n                    component._ancestorFlags = nestingStateAncestorFlags();\n                    component._stackTrace = getFunctionalComponentStackTrace();\n                }\n\n                component._parentDOMNode = parent;\n                componentUpdateContext(component);\n                const root = componentClassRender(component);\n                vNodeAugment(parent, node, root, component._context, component);\n            } else {\n                stackTracePushComponent(vnode._tag as ComponentFunction<any>);\n                const root = vnode._children =\n                    componentFunctionRender(vnode._tag as ComponentFunction<any>, vnode._props, context);\n                instance = vNodeAugment(parent, node, root, context, owner);\n            }\n\n            stackTracePopComponent();\n        }\n    } else {\n        instance = vNodeRenderInto(parent, null, vnode, context, owner);\n    }\n\n    vnode._instance = instance;\n    if (vnode._ref) {\n        vnode._ref(instance);\n    }\n\n    return instance;\n}\n\n/**\n * Check if two nodes can be synced.\n *\n * Two nodes can be synced when their flags and tags are identical.\n *\n * @param a Old VNode.\n * @param b New VNode.\n * @return true if nodes can be synced.\n */\nfunction vNodeCanSync(a: VNode<any>, b: VNode<any>): boolean {\n    return (\n        (a._flags & VNodeFlags.Syncable) === (b._flags & VNodeFlags.Syncable) &&\n        a._tag === b._tag &&\n        a._key === b._key\n    );\n}\n\n/**\n * Check if two nodes has equal keys.\n *\n * @param a VNode.\n * @param b VNode.\n * @returns true if nodes has equal keys.\n */\nfunction vNodeEqualKeys(a: VNode<any>, b: VNode<any>): boolean {\n    return (\n        a._key === b._key &&\n        (a._flags & VNodeFlags.Key) === (b._flags & VNodeFlags.Key)\n    );\n}\n\n/**\n * Sync two VNodes.\n *\n * When node `a` is synced with node `b`, `a` node should be considered as destroyed, and any access to it after sync\n * is an undefined behavior.\n *\n * @param parent Parent node.\n * @param a Old VNode.\n * @param b New VNode.\n * @param context Current context.\n * @param owner Owning component.\n * @returns Synced DOM Node. When VNodes are synced and they aren't compatible, old DOM Node will be replaced with a new\n * DOM Node.\n */\nfunction vNodeSync(\n    parent: Node,\n    a: VNode<any>,\n    b: VNode<any>,\n    context: Context,\n    syncFlags: SyncFlags,\n    owner?: Component<any>,\n): Node | Component<any> {\n    if (__IVI_DEV__) {\n        if (b._flags & VNodeFlags.Immutable) {\n            throw new Error(\"Immutable VNodes can't be used to render trees, clone an immutable tree with a \" +\n                \"`cloneVNode` function.\");\n        }\n\n        if (b._instance) {\n            throw new Error(\"VNode is already have a reference to an instance. VNodes can't be used mutliple times, \" +\n                \"clone VNode with `cloneVNode` function.\");\n        }\n    }\n\n    const flags = a._flags;\n    let instance = b._instance = a._instance;\n\n    if (flags & (VNodeFlags.Text | VNodeFlags.Element)) {\n        if (flags & VNodeFlags.Text) {\n            if (a._children !== b._children) {\n                (instance as Text).nodeValue = b._children as string;\n            }\n        } else { // (flags & VNodeFlags.Element)\n            if (a._props !== b._props) {\n                syncDOMProps(instance as Element, flags, a._props, b._props);\n            }\n            if (a._className !== b._className) {\n                syncClassName(instance as Element, flags, a._className, b._className);\n            }\n            if (a._style !== b._style) {\n                syncStyle(instance as HTMLElement, a._style, b._style);\n            }\n            if (a._events !== b._events) {\n                syncEvents(instance as HTMLElement, a._events, b._events);\n            }\n\n            if (a._children !== b._children) {\n                syncChildren(\n                    instance as Element,\n                    a._flags,\n                    b._flags,\n                    a._children as VNode<any>[] | VNode<any> | string | number | boolean,\n                    b._children as VNode<any>[] | VNode<any> | string | number | boolean,\n                    context,\n                    syncFlags,\n                    owner);\n            }\n        }\n    } else { // (flags & VNodeFlags.Component)\n        if (flags & VNodeFlags.ComponentClass) {\n            const component = instance as Component<any>;\n            stackTracePushComponent(b._tag as ComponentClass<any>, component);\n            componentUpdateProps(component, b._props);\n            componentUpdateParentContext(component, context);\n            _updateComponent(component, syncFlags);\n        } else { // (flags & VNodeFlags.ComponentFunction)\n            stackTracePushComponent(b._tag as ComponentFunction<any>);\n            instance = b._instance = _updateComponentFunction(parent, a, b, context, syncFlags, owner);\n        }\n        stackTracePopComponent();\n    }\n\n    return instance!;\n}\n\n/**\n * Sync VNode with a new one or replace when they aren't compatible.\n *\n * When node `a` is synced with node `b`, `a` node should be considered as destroyed, and any access to it after sync\n * is an undefined behavior.\n *\n * @param parent Parent node.\n * @param a Old VNode.\n * @param b New VNode.\n * @param context Current context.\n * @param owner Owning component.\n * @returns Synced DOM Node. When VNodes are synced and they aren't compatible, old DOM Node will be replaced with a new\n * DOM Node.\n */\nfunction vNodeSyncOrReplace(\n    parent: Node,\n    a: VNode<any>,\n    b: VNode<any>,\n    context: Context,\n    syncFlags: SyncFlags,\n    owner?: Component<any>,\n): Node | Component<any> {\n    if (vNodeCanSync(a, b)) {\n        return vNodeSync(parent, a, b, context, syncFlags, owner);\n    }\n    const newInstance = vNodeRender(parent, b, context, owner);\n    parent.replaceChild(\n        (b._flags & VNodeFlags.ComponentClass) ?\n            getDOMInstanceFromComponent(newInstance as Component<any>) :\n            newInstance as Element, getDOMInstanceFromVNode(a) !);\n    vNodeDetach(a);\n    vNodeAttach(b);\n    return newInstance;\n}\n\n/**\n * Sync old children list with the new one.\n *\n * @param parent Parent node.\n * @param aParentFlags Old parent VNode flags.\n * @param bParentFlags New parent VNode flags.\n * @param a Old VNode list.\n * @param b New VNode list.\n * @param context Current context.\n * @param owner Owning component.\n */\nfunction syncChildren(\n    parent: Node,\n    aParentFlags: VNodeFlags,\n    bParentFlags: VNodeFlags,\n    a: VNode<any>[] | VNode<any> | string | number | boolean,\n    b: VNode<any>[] | VNode<any> | string | number | boolean,\n    context: Context,\n    syncFlags: SyncFlags,\n    owner: Component<any> | undefined,\n): void {\n    let i = 0;\n\n    if (a === null) {\n        if (bParentFlags & (VNodeFlags.ChildrenBasic | VNodeFlags.ChildrenArray)) {\n            if (bParentFlags & VNodeFlags.ChildrenBasic) {\n                parent.textContent = b as string;\n            } else {\n                b = b as VNode<any>[];\n                for (i = 0; i < b.length; i++) {\n                    vNodeRenderInto(parent, null, b[i], context, owner);\n                }\n            }\n        } else if (bParentFlags & VNodeFlags.ChildrenVNode) {\n            vNodeRenderInto(parent, null, b as VNode<any>, context, owner);\n        } else if (bParentFlags & VNodeFlags.InputElement) {\n            setHTMLInputValue(parent as HTMLInputElement, b as string | boolean);\n        } else { // (bParentFlags & VNodeFlags.UnsafeHTML)\n            setInnerHTML(parent as Element, b as string, !!(bParentFlags & VNodeFlags.SvgElement));\n        }\n    } else if (b === null) {\n        if (aParentFlags & (VNodeFlags.ChildrenBasic | VNodeFlags.UnsafeHTML)) {\n            parent.textContent = \"\";\n        } else if (aParentFlags & VNodeFlags.ChildrenArray) {\n            vNodeRemoveAllChildren(parent, a as VNode<any>[]);\n        } else if (aParentFlags & VNodeFlags.ChildrenVNode) {\n            vNodeRemoveChild(parent, a as VNode<any>);\n        } else { // (bParentFlags & VNodeFlags.InputElement)\n            /**\n             * When value/checked isn't specified, we should just ignore it.\n             */\n        }\n    } else {\n        if (aParentFlags & (VNodeFlags.ChildrenBasic | VNodeFlags.UnsafeHTML)) {\n            if (bParentFlags & (VNodeFlags.ChildrenBasic | VNodeFlags.UnsafeHTML)) {\n                if (bParentFlags & VNodeFlags.ChildrenBasic) {\n                    const c = parent.firstChild;\n                    if (c) {\n                        c.nodeValue = b as string;\n                    } else {\n                        parent.textContent = b as string;\n                    }\n                } else {\n                    setInnerHTML((parent as Element), b as string, !!(bParentFlags & VNodeFlags.SvgElement));\n                }\n            } else {\n                parent.textContent = \"\";\n                if (bParentFlags & VNodeFlags.ChildrenArray) {\n                    b = b as VNode<any>[];\n                    for (i = 0; i < b.length; i++) {\n                        vNodeRenderInto(parent, null, b[i], context, owner);\n                    }\n                } else {\n                    vNodeRenderInto(parent, null, b as VNode<any>, context, owner);\n                }\n            }\n        } else if (aParentFlags & VNodeFlags.ChildrenArray) {\n            a = a as VNode<any>[];\n            if (bParentFlags & (VNodeFlags.ChildrenBasic | VNodeFlags.UnsafeHTML)) {\n                if (bParentFlags & VNodeFlags.ChildrenBasic) {\n                    parent.textContent = b as string;\n                } else {\n                    setInnerHTML(parent as Element, b as string, !!(bParentFlags & VNodeFlags.SvgElement));\n                }\n                vNodeDetachAll(a);\n            } else if (bParentFlags & VNodeFlags.ChildrenArray) {\n                b = b as VNode<any>[];\n                if (a.length === 0) {\n                    for (i = 0; i < b.length; i++) {\n                        vNodeRenderInto(parent, null, b[i], context, owner);\n                    }\n                } else {\n                    if (b.length === 0) {\n                        vNodeRemoveAllChildren(parent, a);\n                    } else if (a.length === 1 && b.length === 1) {\n                        vNodeSyncOrReplace(parent, a[0], b[0], context, syncFlags, owner);\n                    } else {\n                        syncChildrenTrackByKeys(parent, a, b, context, syncFlags, owner);\n                    }\n                }\n            } else {\n                b = b as VNode<any>;\n                if (a.length > 0) {\n                    vNodeSyncOrReplace(parent, a[0], b, context, syncFlags, owner);\n                    for (i = 1; i < a.length; i++) {\n                        vNodeRemoveChild(parent, a[i]);\n                    }\n                } else {\n                    vNodeRenderInto(parent, null, b, context, owner);\n                }\n            }\n        } else if (aParentFlags & VNodeFlags.ChildrenVNode) {\n            a = a as VNode<any>;\n            if (bParentFlags & (VNodeFlags.ChildrenBasic | VNodeFlags.UnsafeHTML)) {\n                if (bParentFlags & VNodeFlags.ChildrenBasic) {\n                    parent.textContent = b as string;\n                } else {\n                    setInnerHTML(parent as Element, b as string, !!(bParentFlags & VNodeFlags.SvgElement));\n                }\n                vNodeDetach(a);\n            } else if (bParentFlags & VNodeFlags.ChildrenArray) {\n                b = b as VNode<any>[];\n                if (b.length > 0) {\n                    vNodeSyncOrReplace(parent, a, b[0], context, syncFlags, owner);\n                    for (i = 1; i < b.length; i++) {\n                        vNodeRenderInto(parent, null, b[i], context, owner);\n                    }\n                } else {\n                    vNodeRemoveChild(parent, a);\n                }\n            } else {\n                vNodeSyncOrReplace(parent, a, b as VNode<any>, context, syncFlags, owner);\n            }\n        } else { // (aParentFlags & VNodeFlags.InputElement)\n            /**\n             * Input elements has an internal state with a `value` property, so it should be checked before an\n             * assignment to prevent unnecessary events when `value` is the same as the `value` in the internal\n             * state.\n             *\n             * In general we don't want to override behaviour of DOM Elements with an internal state. Assigning props\n             * to such elements should be treated as a one-time assignment, so it works almost like `value` attribute,\n             * except when a new value is passed down, it can override previous value when it doesn't match the previous\n             * one. There is absolutely no reasons to overcomplicate such behaviour just to make it more beatiful like\n             * it is a declarative assignment and can't be changed, because in real applications, component that\n             * controls this element will always track changes, and when it changes it will invalidate its\n             * representation, so everything will stay in-sync.\n             */\n            if (typeof b === \"string\") {\n                if ((parent as HTMLInputElement).value !== b) {\n                    (parent as HTMLInputElement).value = b;\n                }\n            } else {\n                (parent as HTMLInputElement).checked = b as boolean;\n            }\n        }\n    }\n}\n\n/**\n * Sync children.\n *\n * This algorithm finds a minimum[1] number of DOM operations. It works in several steps:\n *\n * 1. Find common suffix and prefix, and perform simple moves on the edges.\n *\n * This optimization technique is searching for nodes with identical keys by simultaneously iterating over nodes in the\n * old children list `A` and new children list `B` from both sides:\n *\n *  A: -> [a b c d e f g] <-\n *  B: -> [a b f d c g] <-\n *\n * Here we can skip nodes \"a\" and \"b\" at the begininng, and node \"g\" at the end.\n *\n *  A: -> [c d e f] <-\n *  B: -> [f d c] <-\n *\n * At this position it will try to look at the opposite edge, and if there is a node with the same key at the opposite\n * edge, it will perform simple move operation. Node \"c\" is moved to the right edge, and node \"f\" is moved to the left\n * edge.\n *\n *  A: -> [d e] <-\n *  B: -> [d] <-\n *\n * Now it will try again to find common prefix and suffix, node \"d\" is the same, so we can skip it.\n *\n *  A: [e]\n *  B: []\n *\n * Here it will check if the size of one of the list is equal to zero, and if length of the old children list is zero,\n * it will insert all remaining nodes from the new list, or if length of the new children list is zero, it will remove\n * all remaining nodes from the old list.\n *\n * This simple optimization technique will cover most of the real world use cases, even reversing the children list,\n * except for sorting.\n *\n * When algorithm couldn't find a solution with this simple optimization technique, it will go to the next step of the\n * algorithm. For example:\n *\n *  A: -> [a b c d e f g] <-\n *  B: -> [a c b h f e g] <-\n *\n * Nodes \"a\" and \"g\" at the edges are the same, skipping them.\n *\n *  A: -> [b c d e f] <-\n *  B: -> [c b h f e] <-\n *\n * Here we are stuck, so we need to switch to the next step.\n *\n * 2. Look for removed and inserted nodes, and simultaneously check if one of the nodes is moved.\n *\n * First we create an array `P` with the length of the new children list and assign to each position value `-1`, it has\n * a meaning of a new node that should be inserted. Later we will assign node positions in the old children list to this\n * array.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *  P: [. . . . .] // . == -1\n *\n * Then we need to build an index `I` that maps keys with node positions of the remaining nodes from the new children\n * list.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *  P: [. . . . .] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1,\n *    h: 2,\n *    f: 3,\n *    e: 4,\n *  }\n *  last = 0\n *\n * With this index, we start to iterate over the remaining nodes from the old children list and check if we can find a\n * node with the same key in the index. If we can't find any node, it means that it should be removed, otherwise we\n * assign position of the node in the old children list to the positions array.\n *\n *  A: [b c d e f]\n *      ^\n *  B: [c b h f e]\n *  P: [. 0 . . .] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1, <-\n *    h: 2,\n *    f: 3,\n *    e: 4,\n *  }\n *  last = 1\n *\n * When we assigning positions to the positions array, we also keep a position of the last seen node in the new children\n * list, if the last seen position is larger than current position of the node at the new list, then we are switching\n * `moved` flag to `true`.\n *\n *  A: [b c d e f]\n *        ^\n *  B: [c b h f e]\n *  P: [1 0 . . .] // . == -1\n *  I: {\n *    c: 0, <-\n *    b: 1,\n *    h: 2,\n *    f: 3,\n *    e: 4,\n *  }\n *  last = 1 // last > 0; moved = true\n *\n * The last position `1` is larger than current position of the node at the new list `0`, switching `moved` flag to\n * `true`.\n *\n *  A: [b c d e f]\n *          ^\n *  B: [c b h f e]\n *  P: [1 0 . . .] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1,\n *    h: 2,\n *    f: 3,\n *    e: 4,\n *  }\n *  moved = true\n *\n * Node with key \"d\" doesn't exist in the index, removing node.\n *\n *  A: [b c d e f]\n *            ^\n *  B: [c b h f e]\n *  P: [1 0 . . 3] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1,\n *    h: 2,\n *    f: 3,\n *    e: 4, <-\n *  }\n *  moved = true\n *\n * Assign position for `e`.\n *\n *  A: [b c d e f]\n *              ^\n *  B: [c b h f e]\n *  P: [1 0 . 4 3] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1,\n *    h: 2,\n *    f: 3, <-\n *    e: 4,\n *  }\n *  moved = true\n *\n * Assign position for 'f'.\n *\n * At this point we are checking if `moved` flag is on, or if the length of the old children list minus the number of\n * removed nodes isn't equal to the length of the new children list. If any of this conditions is true, then we are\n * going to the next step.\n *\n * 3. Find minimum number of moves if `moved` flag is on, or insert new nodes if the length is changed.\n *\n * When `moved` flag is on, we need to find the\n * [longest increasing subsequence](http://en.wikipedia.org/wiki/Longest_increasing_subsequence) in the positions array,\n * and move all nodes that doesn't belong to this subsequence.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *  moved = true\n *\n * Now we just need to simultaneously iterate over the new children list and LIS from the end and check if the current\n * position is equal to a value from LIS.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *              ^  // new_pos == 4\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *              ^  // new_pos == 4\n *  moved = true\n *\n * Node \"e\" stays at the same place.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *            ^    // new_pos == 3\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *            ^    // new_pos != 1\n *  moved = true\n *\n * Node \"f\" is moved, move it before the next node \"e\".\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *          ^      // new_pos == 2\n *  P: [1 0 . 4 3] // . == -1\n *          ^      // old_pos == -1\n *  LIS:     [1 4]\n *            ^\n *  moved = true\n *\n * Node \"h\" has a `-1` value in the positions array, insert new node \"h\".\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *        ^        // new_pos == 1\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *            ^    // new_pos == 1\n *  moved = true\n *\n * Node \"b\" stays at the same place.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *      ^          // new_pos == 0\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *          ^      // new_pos != undefined\n *  moved = true\n *\n * Node \"c\" is moved, move it before the next node \"b\".\n *\n * When moved flag is off, we don't need to find LIS, and we just iterate over the new children list and check its\n * current position in the positions array, if it is `-1`, then we insert new node.\n *\n * That is how children reconciliation algorithm is working in one of the fastest virtual dom libraries :)\n *\n * [1] Actually it is almost minimum number of dom ops, when node is removed and another one is inserted at the same\n * place, instead of insert and remove dom ops, we can use one replace op. It will make everything even more\n * complicated, and other use cases will be slower, so I don't think that it is worth to use replace here. Naive algo\n * and simple 1/N, N/1 cases are using replace op.\n *\n * @param parent Parent node.\n * @param a Old VNode list.\n * @param b New VNode list.\n * @param context Current context.\n * @param owner Owning component.\n */\nfunction syncChildrenTrackByKeys(\n    parent: Node,\n    a: VNode<any>[],\n    b: VNode<any>[],\n    context: Context,\n    syncFlags: SyncFlags,\n    owner?: Component<any>,\n): void {\n    let aStart = 0;\n    let bStart = 0;\n    let aEnd = a.length - 1;\n    let bEnd = b.length - 1;\n    let aStartNode = a[aStart];\n    let bStartNode = b[bStart];\n    let aEndNode = a[aEnd];\n    let bEndNode = b[bEnd];\n    let i: number;\n    let j: number | undefined;\n    let nextPos: number;\n    let next: Node | null;\n    let aNode: VNode<any> | null;\n    let bNode: VNode<any>;\n    let node: VNode<any>;\n\n    // Step 1\n    outer: while (true) {\n        // Sync nodes with the same key at the beginning.\n        while (vNodeEqualKeys(aStartNode, bStartNode)) {\n            vNodeSyncOrReplace(parent, aStartNode, bStartNode, context, syncFlags, owner);\n            aStart++;\n            bStart++;\n            if (aStart > aEnd || bStart > bEnd) {\n                break outer;\n            }\n            aStartNode = a[aStart];\n            bStartNode = b[bStart];\n        }\n\n        // Sync nodes with the same key at the end.\n        while (vNodeEqualKeys(aEndNode, bEndNode)) {\n            vNodeSyncOrReplace(parent, aEndNode, bEndNode, context, syncFlags, owner);\n            aEnd--;\n            bEnd--;\n            if (aStart > aEnd || bStart > bEnd) {\n                break outer;\n            }\n            aEndNode = a[aEnd];\n            bEndNode = b[bEnd];\n        }\n\n        // Move and sync nodes from right to left.\n        if (vNodeEqualKeys(aEndNode, bStartNode)) {\n            vNodeSyncOrReplace(parent, aEndNode, bStartNode, context, syncFlags, owner);\n            vNodeMoveChild(parent, bStartNode, getDOMInstanceFromVNode(aStartNode));\n            aEnd--;\n            bStart++;\n            // There is no need to check when we out of bounds, because the only way we can get here is when there are\n            // more nodes in the lists.\n            //\n            // Impossible transformations:\n            //   [a] => [a b] (common prefix)\n            //   [b a] => [a] (common suffix)\n            //\n            // Possible transformations:\n            //   [b a] => [a b]\n            //   [b a] => [a c]\n\n            aEndNode = a[aEnd];\n            bStartNode = b[bStart];\n            // In a real-world scenarios there is a higher chance that next node after the move will be the same, so we\n            // immediately jump to the start of this prefix/suffix algo.\n            continue;\n        }\n\n        // Move and sync nodes from left to right.\n        if (vNodeEqualKeys(aStartNode, bEndNode)) {\n            vNodeSyncOrReplace(parent, aStartNode, bEndNode, context, syncFlags, owner);\n            nextPos = bEnd + 1;\n            next = nextPos < b.length ? getDOMInstanceFromVNode(b[nextPos]) : null;\n            vNodeMoveChild(parent, bEndNode, next);\n            aStart++;\n            bEnd--;\n            aStartNode = a[aStart];\n            bEndNode = b[bEnd];\n            continue;\n        }\n\n        break;\n    }\n\n    if (aStart > aEnd) {\n        // All nodes from a are synced, insert the rest from b.\n        nextPos = bEnd + 1;\n        next = nextPos < b.length ? getDOMInstanceFromVNode(b[nextPos]) : null;\n        while (bStart <= bEnd) {\n            vNodeRenderInto(parent, next, b[bStart++], context, owner);\n        }\n    } else if (bStart > bEnd) {\n        // All nodes from b are synced, remove the rest from a.\n        while (aStart <= aEnd) {\n            vNodeRemoveChild(parent, a[aStart++]);\n        }\n        // Step 2\n    } else {\n        let aLength = aEnd - aStart + 1;\n        let bLength = bEnd - bStart + 1;\n        const aNullable = a as Array<VNode<any> | null>; // will be removed by js optimizing compilers.\n        // Mark all nodes as inserted.\n        const sources = new Array<number>(bLength).fill(-1);\n\n        let moved = false;\n        let pos = 0;\n        let synced = 0;\n\n        // When children lists are small, we are using naive O(N) algorithm to find if child is removed.\n        if ((bLength <= 4) || ((aLength * bLength) <= 16)) {\n            for (i = aStart; i <= aEnd; i++) {\n                aNode = a[i];\n                if (synced < bLength) {\n                    for (j = bStart; j <= bEnd; j++) {\n                        bNode = b[j];\n                        if (vNodeEqualKeys(aNode, bNode)) {\n                            sources[j - bStart] = i;\n\n                            if (pos > j) {\n                                moved = true;\n                            } else {\n                                pos = j;\n                            }\n                            vNodeSyncOrReplace(parent, aNode, bNode, context, syncFlags, owner);\n                            synced++;\n                            aNullable[i] = null;\n                            break;\n                        }\n                    }\n                }\n            }\n        } else {\n            let keyIndex: Map<any, number> | undefined;\n            let positionKeyIndex: Map<number, number> | undefined;\n\n            for (i = bStart; i <= bEnd; i++) {\n                node = b[i];\n                if (node._flags & VNodeFlags.Key) {\n                    if (keyIndex === undefined) {\n                        keyIndex = new Map<any, number>();\n                    }\n                    keyIndex.set(node._key, i);\n                } else {\n                    if (positionKeyIndex === undefined) {\n                        positionKeyIndex = new Map<number, number>();\n                    }\n                    positionKeyIndex.set(node._key, i);\n                }\n            }\n\n            for (i = aStart; i <= aEnd; i++) {\n                aNode = a[i];\n\n                if (synced < bLength) {\n                    if (keyIndex !== undefined && (aNode._flags & VNodeFlags.Key)) {\n                        j = keyIndex.get(aNode._key);\n                    } else if (positionKeyIndex !== undefined) {\n                        j = positionKeyIndex.get(aNode._key);\n                    } else {\n                        j = undefined;\n                    }\n\n                    if (j !== undefined) {\n                        bNode = b[j];\n                        sources[j - bStart] = i;\n                        if (pos > j) {\n                            moved = true;\n                        } else {\n                            pos = j;\n                        }\n                        vNodeSyncOrReplace(parent, aNode, bNode, context, syncFlags, owner);\n                        synced++;\n                        aNullable[i] = null;\n                    }\n                }\n            }\n        }\n\n        if (aLength === a.length && synced === 0) {\n            // Noone is synced, remove all children with one dom op.\n            vNodeRemoveAllChildren(parent, a);\n            while (bStart < bLength) {\n                vNodeRenderInto(parent, null, b[bStart++], context, owner);\n            }\n        } else {\n            i = aLength - synced;\n            while (i > 0) {\n                aNode = aNullable[aStart++];\n                if (aNode !== null) {\n                    vNodeRemoveChild(parent, aNode);\n                    i--;\n                }\n            }\n\n            // Step 3\n            if (moved) {\n                const seq = lis(sources);\n                j = seq.length - 1;\n                for (i = bLength - 1; i >= 0; i--) {\n                    if (sources[i] === -1) {\n                        pos = i + bStart;\n                        node = b[pos];\n                        nextPos = pos + 1;\n                        next = nextPos < b.length ? getDOMInstanceFromVNode(b[nextPos]) : null;\n                        vNodeRenderInto(parent, next, node, context, owner);\n                    } else {\n                        if (j < 0 || i !== seq[j]) {\n                            pos = i + bStart;\n                            node = b[pos];\n                            nextPos = pos + 1;\n                            next = nextPos < b.length ? getDOMInstanceFromVNode(b[nextPos]) : null;\n                            vNodeMoveChild(parent, node, next);\n                        } else {\n                            j--;\n                        }\n                    }\n                }\n            } else if (synced !== bLength) {\n                for (i = bLength - 1; i >= 0; i--) {\n                    if (sources[i] === -1) {\n                        pos = i + bStart;\n                        node = b[pos];\n                        nextPos = pos + 1;\n                        next = nextPos < b.length ? getDOMInstanceFromVNode(b[nextPos]) : null;\n                        vNodeRenderInto(parent, next, node, context, owner);\n                    }\n                }\n            }\n        }\n    }\n}\n\n/**\n * Slightly modified Longest Increased Subsequence algorithm, it ignores items that have -1 value, they're representing\n * new items.\n *\n * http://en.wikipedia.org/wiki/Longest_increasing_subsequence\n *\n * @param a Array of numbers.\n * @returns Longest increasing subsequence.\n */\nfunction lis(a: number[]): number[] {\n    const p = a.slice(0);\n    const result: number[] = [];\n    result.push(0);\n    let u: number;\n    let v: number;\n\n    for (let i = 0, il = a.length; i < il; i++) {\n        if (a[i] === -1) {\n            continue;\n        }\n\n        let j = result[result.length - 1];\n        if (a[j] < a[i]) {\n            p[i] = j;\n            result.push(i);\n            continue;\n        }\n\n        u = 0;\n        v = result.length - 1;\n\n        while (u < v) {\n            let c = ((u + v) / 2) | 0;\n            if (a[result[c]] < a[i]) {\n                u = c + 1;\n            } else {\n                v = c;\n            }\n        }\n\n        if (a[i] < a[result[u]]) {\n            if (u > 0) {\n                p[i] = result[u - 1];\n            }\n            result[u] = i;\n        }\n    }\n\n    u = result.length;\n    v = result[u - 1];\n\n    while (u-- > 0) {\n        result[u] = v;\n        v = p[v];\n    }\n\n    return result;\n}\n","import { NOOP_FALSE } from \"../common/noop\";\nimport { getFunctionName, nextDebugId } from \"../dev_mode/dev_mode\";\nimport { isPropsNotIdentical, isPropsNotShallowEqual } from \"../common/equality\";\nimport { AncestorFlags } from \"../dev_mode/html_nesting_rules\";\nimport { ComponentFlags } from \"./flags\";\nimport { Context } from \"./context\";\nimport { VNode, getDOMInstanceFromVNode } from \"./vnode\";\nimport { currentFrame } from \"../scheduler/frame\";\n\n/**\n * Component function constructor.\n */\nexport interface ComponentFunction<P> {\n    (props: P, context?: Context): VNode<any> | undefined;\n    isPropsChanged?: (oldProps: P, newProps: P) => boolean;\n}\n\n/**\n * Component class constructor.\n */\nexport interface ComponentClass<P> {\n    new (props: P, context: Context, owner: Component<any> | undefined): Component<P>;\n}\n\n/**\n * Component is the main building block that is used to build UI applications.\n *\n * Component class has a parametric type `P` to specify `props` type.\n *\n * Example:\n *\n *     class Hello extends Component<string> {\n *         render() {\n *             return $t(`Hello ${this.props}`);\n *         }\n *     }\n *\n *     render($c(Hello, \"world\"), document.getElementById(\"App\")!);\n */\nexport abstract class Component<P> {\n    /**\n     * Flags, see `ComponentFlags` for details.\n     *\n     * Lowest 16 bits are reserved for ivi flags, other bits can be used for user flags.\n     */\n    flags: ComponentFlags;\n    /**\n     * Depth in the components tree.\n     *\n     * Depth property is used by scheduler to determine component priority when updating components.\n     */\n    readonly depth: number;\n    /**\n     * Component properties.\n     */\n    _props: P;\n    /**\n     * Parent context.\n     *\n     * Context that was used to create this component.\n     */\n    _parentContext: Context;\n    /**\n     * Current context.\n     */\n    _context: Context;\n    /**\n     * Owner component.\n     *\n     * Parent component. When owner is an undefined, it means that this component is a root component.\n     */\n    readonly owner: Component<any> | undefined;\n    /**\n     * Virtual DOM root node.\n     */\n    root: VNode<any> | null;\n    /**\n     * Parent DOM node.\n     *\n     * It is used because when root node is changed we will need to replace old DOM node with a new one, and right now\n     * browsers doesn't provide a nice API that doesn't require to know parent nodes.\n     */\n    _parentDOMNode: Node | null;\n    /**\n     * Ancestor Flags are used to check child nesting violations.\n     *\n     * Dev Mode.\n     */\n    _ancestorFlags: AncestorFlags;\n    /**\n     * Component function stack trace.\n     *\n     * Component functions doesn't have any instances, so we need to store them separately.\n     *\n     * Dev Mode.\n     */\n    _stackTrace: ComponentFunction<any>[] | null;\n    /**\n     * Unique ID.\n     *\n     * ID generator is using `dev_mode.uniqueId()` function, so it will be unique across all Dev Mode ids.\n     *\n     * Dev Mode.\n     */\n    _debugId: number;\n\n    constructor(props: P, context: Context, owner: Component<any> | undefined) {\n        this.flags = 0;\n        this.depth = owner ? owner.depth + 1 : 0;\n        this._props = props;\n        this._parentContext = context;\n        this._context = context;\n        this.owner = owner;\n        this.root = null;\n        if (__IVI_BROWSER__) {\n            this._parentDOMNode = null;\n        }\n        if (__IVI_DEV__) {\n            this._ancestorFlags = 0;\n            this._stackTrace = null;\n            this._debugId = nextDebugId();\n        }\n    }\n\n    /**\n     * Get current context.\n     *\n     * @returns Current context.\n     */\n    get context(): Context {\n        this.flags |= ComponentFlags.CheckUsingContext;\n        return this._parentContext;\n    }\n\n    /**\n     * Get props.\n     *\n     * @returns Current props.\n     */\n    get props(): P {\n        this.flags |= ComponentFlags.CheckUsingProps;\n        return this._props;\n    }\n\n    /**\n     * Is component attached.\n     *\n     * @returns `true` when Component is attached.\n     */\n    get isAttached(): boolean {\n        return !!(this.flags & ComponentFlags.Attached);\n    }\n\n    /**\n     * Lifecycle method `isPropsChanged` is used as a hint that can reduce unnecessary updates.\n     *\n     * By default all props changes returns `true`.\n     *\n     * @param oldProps Old props.\n     * @param newProps New props.\n     * @returns `true` when props should be updated.\n     */\n    isPropsChanged(oldProps: P, newProps: P): boolean {\n        return true;\n    }\n\n    /**\n     * Lifecycle method `newPropsReceived` is invoked after new props are assigned.\n     *\n     * @param oldProps Old props.\n     * @param newProps New props.\n     */\n    newPropsReceived(oldProps: P, newProps: P): void {\n        /* tslint:disable:no-empty */\n        /* tslint:enable:no-empty */\n    }\n\n    /**\n     * Lifecycle method `didReceiveNewContext` is invoked after new context is assigned.\n     *\n     * @param oldContext Old context.\n     * @param newContext New Context.\n     */\n    newContextReceived(oldContext: Context, newContext: Context): void {\n        /* tslint:disable:no-empty */\n        /* tslint:enable:no-empty */\n    }\n\n    /**\n     * Lifecycle method `updateContext` is used to modify current context.\n     *\n     * It will be invoked when component is created, each time when parent context is changed, each time when props are\n     * changed, and when component is updated with invalidated context.\n     *\n     * @returns Context data.\n     */\n    updateContext<C>(): C | undefined {\n        return;\n    }\n\n    /**\n     * Lifecycle method `attached` is invoked when component is attached to the document.\n     */\n    attached(): void {\n        /* tslint:disable:no-empty */\n        /* tslint:enable:no-empty */\n    }\n\n    /**\n     * Lifecycle method `detached` is invoked when component is detached from the document.\n     */\n    detached(): void {\n        /* tslint:disable:no-empty */\n        /* tslint:enable:no-empty */\n    }\n\n    /**\n     * Lifecycle method `beforeUpdate` is invoked before update.\n     */\n    beforeUpdate(): void {\n        /* tslint:disable:no-empty */\n        /* tslint:enable:no-empty */\n    }\n\n    /**\n     * Lifecycle method `updated` is invoked after update.\n     */\n    updated(): void {\n        /* tslint:disable:no-empty */\n        /* tslint:enable:no-empty */\n    }\n\n    /**\n     * Lifecycle method `invalidated` is invoked after `invalidate` method is invoked.\n     */\n    invalidated(): void {\n        /* tslint:disable:no-empty */\n        /* tslint:enable:no-empty */\n    }\n\n    /**\n     * When render method returns `undefined` value, it will create an empty text node.\n     */\n    render(): VNode<any> | undefined {\n        return;\n    }\n\n    /**\n     * Invalidate view.\n     */\n    invalidate(): void {\n        if (__IVI_BROWSER__) {\n            invalidateComponent(this, ComponentFlags.DirtyState);\n        }\n    }\n\n    /**\n     * Invalidate context.\n     */\n    invalidateContext(): void {\n        if (__IVI_BROWSER__) {\n            invalidateComponent(this, ComponentFlags.DirtyContext);\n        }\n    }\n}\n\n/**\n * Invalidate Component.\n *\n * @param component\n * @param dirtyFlags\n */\nexport function invalidateComponent<P>(component: Component<P>, dirtyFlags: number): void {\n    if (__IVI_BROWSER__) {\n        if (component.flags & ComponentFlags.Attached) {\n            component.flags |= dirtyFlags;\n            component.invalidated();\n            if (!(component.flags & ComponentFlags.InUpdateQueue)) {\n                currentFrame().updateComponent(component);\n            }\n        }\n    }\n}\n\n/**\n * Global Component registry available in Dev Mode. It is used to find components by their `debugId`.\n */\nlet COMPONENT_REGISTRY: Map<number, Component<any>>;\nif (__IVI_DEV__) {\n    COMPONENT_REGISTRY = new Map<number, Component<any>>();\n}\n\n/**\n * Register a Component in Component Registry by its `debugId`.\n *\n * @param component Component instance.\n */\nexport function registerComponent(component: Component<any>): void {\n    if (__IVI_DEV__) {\n        COMPONENT_REGISTRY.set(component._debugId, component);\n    }\n}\n\n/**\n * Unregister a Component from Component Registry by its `debugId`.\n *\n * @param component Component instance.\n */\nexport function unregisterComponent(component: Component<any>): void {\n    if (__IVI_DEV__) {\n        COMPONENT_REGISTRY.delete(component._debugId);\n    }\n}\n\n/**\n * Find Component instance by `debugId` in Component Registry.\n *\n * @param debugId Debug ID.\n * @returns Component associtated with `debugId` or an `undefined` if component is missing.\n */\nexport function findComponentByDebugId(debugId: number): Component<any> | undefined {\n    if (__IVI_DEV__) {\n        return COMPONENT_REGISTRY.get(debugId);\n    }\n    return;\n}\n\n/**\n * Checks props for identity.\n *\n * This function can be used as a wrapper for function expression, or as a class decorator.\n *\n *     checkPropsIdentity(MyComponent);\n *     function MyComponent(text: string) {\n *         return $h(\"div\").children(text);\n *     });\n *\n *     @checkPropsIdentity\n *     class MyClassComponent extends Component<string> {\n *         render() {\n *             return $h(\"div\").children(this.props);\n *         }\n *     }\n *\n * @param target Component constructor.\n * @returns Component constructor with identity check.\n */\nexport function checkPropsIdentity<P extends ComponentClass<any> | ComponentFunction<any>>(target: P): P {\n    if (target.prototype.render) {\n        target.prototype.isPropsChanged = isPropsNotIdentical;\n    } else {\n        (target as ComponentFunction<any>).isPropsChanged = isPropsNotIdentical;\n    }\n    return target;\n}\n\n/**\n * Checks props for shallow equality.\n *\n * This function can be used as a wrapper for function expression, or as a class decorator.\n *\n *     checkPropsShallowEquality(MyComponent);\n *     function MyComponent(props: { text: string }) {\n *         return $h(\"div\").children(props.text);\n *     });\n *\n *     @checkPropsShallowEquality\n *     class MyClassComponent extends Component<{ text: string }> {\n *         render() {\n *             return $h(\"div\").children(this.props.text);\n *         }\n *     }\n *\n * @param target Component constructor.\n * @returns Component constructor with identity check.\n */\nexport function checkPropsShallowEquality<P extends ComponentClass<any> | ComponentFunction<any>>(target: P): P {\n    if (target.prototype.render) {\n        target.prototype.isPropsChanged = isPropsNotShallowEqual;\n    } else {\n        (target as ComponentFunction<any>).isPropsChanged = isPropsNotShallowEqual;\n    }\n    return target;\n}\n\n/**\n * Marks component as static.\n *\n * This function can be used as a wrapper for function expression, or as a class decorator.\n *\n *     staticComponent(MyComponent);\n *     function MyComponent(props: { text: string }) {\n *         return $h(\"div\").children(props.text);\n *     });\n *\n *     @staticComponent\n *     class MyClassComponent extends Component<{ text: string }> {\n *         render() {\n *             return $h(\"div\").children(this.props.text);\n *         }\n *     }\n *\n * @param target Component constructor.\n * @returns Component constructor with static property.\n */\nexport function staticComponent<P extends ComponentClass<any> | ComponentFunction<any>>(target: P): P {\n    if (target.prototype.render) {\n        target.prototype.isPropsChanged = NOOP_FALSE;\n    } else {\n        (target as ComponentFunction<any>).isPropsChanged = NOOP_FALSE;\n    }\n    return target;\n}\n\n/**\n * Get reference to a DOM node from a Component instance.\n *\n * @param component Component instance.\n * @returns DOM node.\n */\nexport function getDOMInstanceFromComponent<T extends Node>(component: Component<any>): T {\n    if (__IVI_DEV__) {\n        if (!component.root) {\n            throw new Error(\"Failed to get DOM instance from component, component is not initialized.\");\n        }\n    }\n    return getDOMInstanceFromVNode<T>(component.root!) !;\n}\n\n/**\n * Get component name from component instance or component function.\n *\n * @param component Component.\n * @return Component name.\n */\nexport function getComponentName(component: Component<any> | ComponentFunction<any>): string {\n    return getFunctionName(\n        (component as Function).prototype.render ?\n            (component as Object).constructor :\n            component as ComponentFunction<any>,\n    );\n}\n","\n/**\n * Context.\n *\n * All Context objects should be immutable.\n *\n * Context objects will be implicitly propagated through virtual dom trees.\n *\n * @final\n */\nexport class Context {\n    /**\n     * Context data.\n     */\n    readonly data: { [key: string]: any };\n    /**\n     * Parent context.\n     *\n     * Contexts are built as a tree of immutable objects.\n     */\n    readonly from?: Context;\n\n    constructor(data: any, from?: Context) {\n        this.data = data;\n        this.from = from;\n    }\n\n    /**\n     * Find a context data.\n     *\n     * Get method supports two ways to retrieve context values:\n     *  - Retrieve value with a simple key.\n     *  - Object with a key => value mapping.\n     *\n     * Retrieving values with a simple key works by iterating through all parent contexts until it finds value,\n     * `undefined` value is returned when nothing is found.\n     *\n     * Retrieving values with key => value mapping works by iterating through all parent contexts and mapping all\n     * keys with values on the first occurence, this process goes on until it finds values for all keys.\n     *\n     * @param key Key may be a simple string, or a { [key: string]: value | undefined } object.\n     * @returns Value for the provided key if it is a simple string, or key object that was used as a key => value\n     *   mapping.\n     */\n    get<V>(key: V): V;\n    get<V>(key: string): V | undefined;\n    get<V>(key: string | V): V | undefined {\n        let n: Context | undefined = this;\n        let v: any;\n\n        if (typeof key !== \"string\") {\n            const keys = Object.keys(key) as (string | null)[];\n            let l = keys.length;\n\n            while (l > 0 && n) {\n                if (n.data) {\n                    for (let i = 0; i < keys.length; i++) {\n                        const k = keys[i];\n                        if (k) {\n                            v = n.data[k];\n                            if (v !== undefined) {\n                                (key as any)[k] = n.data[k];\n                                keys[i] = null;\n                                l--;\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                n = n.from;\n            }\n\n            return key;\n        }\n\n        while (n) {\n            if (n.data) {\n                v = n.data[key];\n                if (v !== undefined) {\n                    return v as V;\n                }\n            }\n            n = n.from;\n        }\n\n        return;\n    }\n}\n\n/**\n * Root Context.\n *\n * Default Context that is used to render root nodes.\n */\nexport const ROOT_CONTEXT = new Context(undefined);\n","import { XML_NAMESPACE, XLINK_NAMESPACE } from \"../common/dom\";\nimport { VNodeFlags } from \"./flags\";\nimport { CSSStyleProps } from \"../common/dom_props\";\n\n/**\n * Sync DOM class names.\n *\n * @param node HTML or SVG Element.\n * @param flags VNode flags.\n * @param a Old className.\n * @param b New className.\n */\nexport function syncClassName(node: Element, flags: VNodeFlags, a: string | null, b: string | null): void {\n    if (!b) {\n        b = \"\";\n    }\n    if (flags & VNodeFlags.SvgElement) {\n        node.setAttribute(\"class\", b);\n    } else {\n        node.className = b;\n    }\n}\n\n/**\n * Sync DOM styles.\n *\n * When styles are synced, and style from the old list is missing in the new one, its value will be reassigned with a\n * `null` value.\n *\n *    a: { backgroundColor: \"#333\", color: \"#fff\" }\n *    b: { backgroundColor: \"#333\" }\n *\n * In this example `color` style will receive a `\"\"` value.\n *\n * Implementation detail: Syncing algorithm has an optimization with an early detection of object shape changes.\n * Objects with static shape will make syncing algorithm slightly faster because it doesn't need to check which\n * properties didn't existed before, so it is possible to just use the static object shapes, and use `undefined` values\n * when you want to remove property and have the same object shape.\n *\n * @param node HTML or SVG Element.\n * @param a Old styles.\n * @param b New styles.\n */\nexport function syncStyle(\n    node: HTMLElement | SVGStylable,\n    a: CSSStyleProps | null,\n    b: CSSStyleProps | null,\n): void {\n    let i: number;\n    let keys: string[];\n    let key: string;\n    let style: CSSStyleDeclaration;\n\n    if (a === null) {\n        if (b !== null) {\n            // a is empty, insert all styles from b.\n            style = node.style;\n            keys = Object.keys(b);\n            for (i = 0; i < keys.length; i++) {\n                key = keys[i];\n                (style as any)[key] = (b as any)[key];\n            }\n        }\n    } else if (b === null) {\n        // b is empty, remove all styles from a.\n        style = node.style;\n        keys = Object.keys(a);\n        for (i = 0; i < keys.length; i++) {\n            /**\n             * #quirks\n             *\n             * Should work with `null` values in all modern browsers. IE9 had problems with `null` values.\n             */\n            (style as any)[keys[i]] = \"\";\n        }\n    } else {\n        style = node.style;\n        let matchCount = 0;\n\n        keys = Object.keys(a);\n        for (i = 0; i < keys.length; i++) {\n            key = keys[i];\n            const bValue = (b as any)[key];\n\n            if (bValue !== undefined) {\n                const aValue = (a as any)[key];\n                if (aValue !== bValue) {\n                    (style as any)[key] = bValue;\n                }\n                matchCount++;\n            } else {\n                (style as any)[key] = \"\";\n            }\n        }\n\n        keys = Object.keys(b);\n        i = 0;\n        while (matchCount < keys.length && i < keys.length) {\n            key = keys[i++];\n            if (!a.hasOwnProperty(key)) {\n                (style as any)[key] = (b as any)[key];\n                matchCount++;\n            }\n        }\n    }\n}\n\n/**\n * Set DOM property.\n *\n * @param node HTML or SVG Element.\n * @param isSVG node is an SVG Element.\n * @param key Attribute name.\n * @param value Attribute value.\n */\nfunction setDOMProperty(node: Element, flags: VNodeFlags, key: string, value?: any, prevValue?: any): void {\n    if (value === undefined) {\n        /**\n         * Edge cases when property name doesn't match attribute name.\n         */\n        if (!(flags & VNodeFlags.SvgElement)) {\n            if (key.length > 6) {\n                switch (key) {\n                    case \"acceptCharset\":\n                        key = \"accept-charset\";\n                        break;\n                    case \"htmlFor\":\n                        key = \"for\";\n                    //     break;\n                    // case \"httpEquiv\": // meta tags aren't supported\n                    //     key = \"http-equiv\";\n                }\n            }\n        }\n        /**\n         * Because there is no generic way to assign a default value for a property when it is removed, it is always\n         * removed with `removeAttribute` method.\n         */\n        node.removeAttribute(key);\n    } else {\n        if (flags & VNodeFlags.SvgElement) {\n            if (key.length > 5) {\n                if (key.charCodeAt(0) === 120 &&\n                    (key.charCodeAt(3) === 58 || key.charCodeAt(5) === 58)) { // 58 === \":\" \"xml:\", \"xlink:\"\n                    if (key.charCodeAt(1) === 109 && key.charCodeAt(2) === 108) { // [109, 108] === \"ml\"\n                        /**\n                         * All attributes that starts with an \"xml:\" prefix will be assigned with XML namespace.\n                         */\n                        node.setAttributeNS(XML_NAMESPACE, key, value);\n                        return;\n                    } else if (key.charCodeAt(1) === 108 &&\n                        key.charCodeAt(2) === 105 &&\n                        key.charCodeAt(3) === 110 &&\n                        key.charCodeAt(4) === 107) { // [108, 105, 110, 107] === \"link\"\n                        /**\n                         * All attributes that starts with an \"xlink:\" prefix will be assigned with XLINK namespace.\n                         */\n                        node.setAttributeNS(XLINK_NAMESPACE, key, value);\n                        return;\n                    }\n                }\n            }\n\n            /**\n             * SVG props should be always assigned with a `setAttribute` call.\n             */\n            node.setAttribute(key, value);\n        } else {\n            if (key.length > 5) {\n                if (key.charCodeAt(4) === 45) { // 45 === \"-\" \"data-\", \"aria-\"\n                    /**\n                     * Attributes that has \"-\" character at the 4th position will be assigned with a `setAttribute`\n                     * method. It should work with \"data-\" and \"aria-\" attributes. Otherwise just use property\n                     * assignment instead of `setAttribute`.\n                     */\n                    node.setAttribute(key, value);\n                    return;\n                }\n            }\n\n            (node as any)[key] = value;\n        }\n    }\n}\n\n/**\n * Sync DOM properties.\n *\n * Implementation detail: Syncing algorithm has an optimization with an early detection of object shape changes.\n * Objects with static shape will make syncing algorithm slightly faster because it doesn't need to check which\n * properties didn't existed before, so it is possible to just use the static object shapes, and use `undefined` values\n * when you want to remove property and have the same object shape.\n *\n * @param node HTML or SVG Element.\n * @param flags VNode flags.\n * @param a Old DOM properties.\n * @param b New DOM properties.\n */\nexport function syncDOMProps(\n    node: Element,\n    flags: VNodeFlags,\n    a: { [key: string]: any } | null,\n    b: { [key: string]: any } | null,\n): void {\n    let i: number;\n    let keys: string[];\n    let key: string;\n\n    if (a === null) {\n        if (b !== null) {\n            // a is empty, insert all attributes from b.\n            keys = Object.keys(b);\n            for (i = 0; i < keys.length; i++) {\n                key = keys[i];\n                setDOMProperty(node, flags, key, b[key]);\n            }\n        }\n    } else if (b === null) {\n        // b is empty, remove all attributes from a.\n        keys = Object.keys(a);\n        for (i = 0; i < keys.length; i++) {\n            setDOMProperty(node, flags, keys[i]);\n        }\n    } else {\n        let matchCount = 0;\n\n        // Remove and update attributes.\n        keys = Object.keys(a);\n        for (i = 0; i < keys.length; i++) {\n            key = keys[i];\n            const bValue = b[key];\n            if (bValue === undefined) {\n                setDOMProperty(node, flags, key);\n            } else {\n                const aValue = a[key];\n                if (aValue !== bValue) {\n                    setDOMProperty(node, flags, key, bValue, aValue);\n                }\n                matchCount++;\n            }\n        }\n\n        // Insert new attributes.\n        keys = Object.keys(b);\n        i = 0;\n        while (matchCount < keys.length && i < keys.length) {\n            key = keys[i++];\n            if (!a.hasOwnProperty(key)) {\n                setDOMProperty(node, flags, key, b[key]);\n                matchCount++;\n            }\n        }\n    }\n}\n","import { FEATURES, FeatureFlags } from \"../common/feature_detection\";\nimport { NativeEventDispatcherFlags } from \"./flags\";\nimport { EventHandlerList } from \"./event_handler\";\n\n/**\n * `{ capture: true, passive: true }` object that should be used as a third parameter in `addEventListener`.\n */\nexport const EVENT_CAPTURE_PASSIVE_OPTIONS =\n    (FEATURES & FeatureFlags.PassiveEvents) ?\n        { \"capture\": true, \"passive\": true } :\n        true;\n\n/**\n * `{ passive: true }` object that should be used as a third parameter in `addEventListener`.\n */\nexport const EVENT_PASSIVE_OPTIONS =\n    (FEATURES & FeatureFlags.PassiveEvents) ?\n        { \"passive\": true } :\n        false;\n\n/**\n * Get Event options that should be used when adding Event Listener.\n *\n * #quirks\n *\n * @param flags See `EventDispatcherFlags` for details.\n * @returns Option object that can be used as a 3rd parameter in `addEventListener` call.\n */\nexport function getEventOptions(flags: NativeEventDispatcherFlags): boolean | { capture?: boolean, passive?: boolean } {\n    if (flags & NativeEventDispatcherFlags.Passive) {\n        if (flags & NativeEventDispatcherFlags.Capture) {\n            return EVENT_CAPTURE_PASSIVE_OPTIONS;\n        }\n        return EVENT_PASSIVE_OPTIONS;\n    }\n    if (flags & NativeEventDispatcherFlags.Capture) {\n        return true;\n    }\n    return false;\n}\n\n/**\n * Property that is used on DOM Nodes to store EventProps object.\n */\nexport const DOM_NODE_EVENTS_PROPERTY = \"_ev\";\n\n/**\n * Set Event Handler list to DOM Node.\n *\n * @param node DOM Node.\n * @param events Event Handler List.\n */\nexport function setEventHandlerListToDOMNode(node: Node, events: EventHandlerList | undefined): void {\n    (node as any)[DOM_NODE_EVENTS_PROPERTY] = events;\n}\n\n/**\n * Get Event Handler list from DOM Node.\n *\n * @param node DOM Node.\n * @returns EventHandlerList or undefined if DOM Node doesn't listen for any events.\n */\nexport function getEventHandlerListFromDOMNode(node: Node): EventHandlerList | undefined {\n    return (node as any)[DOM_NODE_EVENTS_PROPERTY];\n}\n","import { EventHandler, EventHandlerList } from \"./event_handler\";\nimport { setEventHandlerListToDOMNode } from \"./utils\";\n\n/**\n * Shortcut for Event Handler registration.\n *\n * @param handler Event Handler.\n */\nfunction registerEventHandler(handler: EventHandler<any>): void {\n    handler.dispatcher.registerHandler(handler.fn);\n}\n\n/**\n * Shortcut for Event Handler unregistration.\n *\n * @param handler Event Handler.\n */\nfunction unregisterEventHandler(handler: EventHandler<any>): void {\n    handler.dispatcher.unregisterHandler(handler.fn);\n}\n\n/**\n * Sync DOM events.\n *\n * Implementation detail: Syncing algorithm has an optimization with an early detection of object shape changes.\n * Objects with static shape will make syncing algorithm slightly faster because it doesn't need to check which\n * properties didn't existed before, so it is possible to just use the static object shapes, and use `undefined` values\n * when you want to remove property and have the same object shape.\n *\n * @param node HTML or SVG Element.\n * @param a Old events.\n * @param b New events.\n */\nexport function syncEvents(\n    node: Element,\n    a: EventHandlerList | null,\n    b: EventHandlerList | null,\n): void {\n    let i: number;\n    let keys: string[];\n    let key: string;\n\n    if (a === null) {\n        if (b !== null) {\n            // a is empty, register all events from b.\n            keys = Object.keys(b);\n            for (i = 0; i < keys.length; i++) {\n                registerEventHandler(b[keys[i]]);\n            }\n        }\n    } else if (b === null) {\n        // b is empty, remove all events from a.\n        keys = Object.keys(a);\n        for (i = 0; i < keys.length; i++) {\n            unregisterEventHandler(a[keys[i]]);\n        }\n    } else {\n        let matchCount = 0;\n\n        // Remove and update events.\n        keys = Object.keys(a);\n        for (i = 0; i < keys.length; i++) {\n            key = keys[i];\n            const aHandler = a[key];\n            const bHandler = b[key];\n            if (bHandler !== undefined) {\n                if (aHandler !== bHandler) {\n                    registerEventHandler(bHandler);\n                    unregisterEventHandler(aHandler);\n                }\n                matchCount++;\n            } else {\n                unregisterEventHandler(aHandler);\n            }\n        }\n\n        // Insert new events.\n        keys = Object.keys(b);\n        i = 0;\n        while (matchCount < keys.length && i < keys.length) {\n            key = keys[i++];\n            if (!a.hasOwnProperty(key)) {\n                registerEventHandler(b[key]);\n                matchCount++;\n            }\n        }\n    }\n\n    setEventHandlerListToDOMNode(node, b === null ? undefined : b);\n}\n\n/**\n * Remove DOM events.\n *\n * @param node HTML or SVG Element.\n * @param a Old events.\n * @param b New events.\n */\nexport function removeEvents(events: EventHandlerList): void {\n    const keys = Object.keys(events);\n    for (let i = 0; i < keys.length; i++) {\n        unregisterEventHandler(events[keys[i]]);\n    }\n}\n","/**\n * Event Dispatchers\n *\n * **EXPERIMENTAL API**\n */\n\nimport { SyntheticEvent } from \"./synthetic_event\";\n\n/**\n * Event Dispatcher Subscription Flags.\n */\nexport const enum EventDispatcherSubscriptionFlags {\n    Canceled = 1,\n    Locked = 1 << 1,\n}\n\n/**\n * Event Dispatcher Subscription.\n */\nexport class EventDispatcherSubscription {\n    /**\n     * Prev item in a linked list.\n     */\n    _prev: EventDispatcherSubscription | null;\n    /**\n     * Next item in a linked list.\n     */\n    _next: EventDispatcherSubscription | null;\n    /**\n     * Event Dispatcher.\n     */\n    dispatcher: EventDispatcher;\n    /**\n     * See `EventDispatcherSubscriptionFlags` for details.\n     */\n    flags: EventDispatcherSubscriptionFlags;\n    /**\n     * Subscription Handler function.\n     */\n    handler: (ev: SyntheticEvent<any>, type?: number) => void;\n    /**\n     * Type filter.\n     */\n    filter: number | undefined;\n\n    constructor(\n        dispatcher: EventDispatcher,\n        flags: EventDispatcherSubscriptionFlags,\n        handler: (ev: SyntheticEvent<any>, type?: number) => void,\n        filter: number | undefined,\n    ) {\n        this._prev = null;\n        this._next = null;\n        this.dispatcher = dispatcher;\n        this.flags = flags;\n        this.handler = handler;\n        this.filter = filter;\n    }\n\n    /**\n     * Cancel Event Subscription.\n     */\n    cancel(): void {\n        if (!(this.flags & EventDispatcherSubscriptionFlags.Canceled)) {\n            this.flags |= EventDispatcherSubscriptionFlags.Canceled;\n            if (!(this.flags & EventDispatcherSubscriptionFlags.Locked)) {\n                unsubscribe(this);\n            }\n        }\n    }\n}\n\n/**\n * Unsubscribe Event Dispatcher.\n *\n * @param sub Event dispatcher subscription.\n */\nfunction unsubscribe(sub: EventDispatcherSubscription): void {\n    if (sub._prev) {\n        sub._prev._next = sub._next;\n    } else {\n        sub.dispatcher._nextSubscription = sub._next;\n    }\n    if (sub._next) {\n        sub._next._prev = sub._prev;\n    }\n\n    if (--sub.dispatcher.counter === 0) {\n        sub.dispatcher.deactivate();\n    }\n}\n\n/**\n * Abstract Event Dispatcher.\n */\nexport abstract class EventDispatcher {\n    /**\n     * Number of registered dependencies (Event Handlers and Event Dispatcher subscribers).\n     *\n     * When this number goes from 0 to 1, lifecycle method `activate` is invoked.\n     * When this number goes to 0, lifecycle method `deactivate` is invoked.\n     */\n    counter: number;\n    /**\n     * Event Dispatcher subscribers implemented with a Linked List.\n     */\n    _nextSubscription: EventDispatcherSubscription | null;\n\n    constructor() {\n        this.counter = 0;\n        this._nextSubscription = null;\n    }\n\n    /**\n     * Dispatch Event to all subscribers.\n     *\n     * @param events Events to dispatch.\n     */\n    dispatchEventToSubscribers(event: SyntheticEvent<any>, type?: number): void {\n        let s = this._nextSubscription;\n        while (s) {\n            if (type === undefined || (s.filter & (type as any as number))) {\n                s.flags |= EventDispatcherSubscriptionFlags.Locked;\n                s.handler(event, type);\n                s.flags &= ~EventDispatcherSubscriptionFlags.Locked;\n            }\n            if (s.flags & EventDispatcherSubscriptionFlags.Canceled) {\n                const tmp = s;\n                s = s._next;\n                unsubscribe(tmp);\n            } else {\n                s = s._next;\n            }\n        }\n    }\n\n    /**\n     * Lifecycle method `activate` is invoked when Event Dispatcher is activated.\n     */\n    activate(): void {\n        /* tslint:disable:no-empty */\n        /* tslint:enable:no-empty */\n    }\n\n    /**\n     * Lifecycle method `deactivate` is invoked when Event Dispatcher is deactivated.\n     */\n    deactivate(): void {\n        /* tslint:disable:no-empty */\n        /* tslint:enable:no-empty */\n    }\n\n    /**\n     * Subscribe for events.\n     *\n     * @param dispatcher Event Dispatcher.\n     * @param data Opaque data that will be returned to subscriber.\n     * @param type Type that will be used to filter incoming events.\n     * @param flags Subscription flags.\n     */\n    subscribe(\n        handler: (ev: SyntheticEvent<any>, type?: number) => void,\n        filter?: number,\n        flags: EventDispatcherSubscriptionFlags = 0,\n    ): EventDispatcherSubscription {\n        const s = new EventDispatcherSubscription(this, flags, handler, filter);\n        if (this._nextSubscription) {\n            this._nextSubscription._prev = s;\n            s._next = this._nextSubscription;\n        }\n        this._nextSubscription = s;\n\n        if (this.counter++ === 0) {\n            this.activate();\n        }\n\n        return s;\n    }\n\n    /**\n     * Register an Event Handler.\n     *\n     * @param handler Event Handler.\n     */\n    registerHandler(handler: (ev: SyntheticEvent<any>) => void): void {\n        if (this.counter++ === 0) {\n            this.activate();\n        }\n        this.didRegisterHandler(handler);\n    }\n\n    /**\n     * Unregister an Event Handler.\n     *\n     * @param handler Event Handler.\n     */\n    unregisterHandler(handler: (ev: SyntheticEvent<any>) => void): void {\n        if (--this.counter === 0) {\n            this.deactivate();\n        }\n        this.didUnregisterHandler(handler);\n    }\n\n    /**\n     * Lifecycle method `didRegisterHandler` is invoked after Event Handler registration.\n     *\n     * @param handler Event Handler.\n     */\n    didRegisterHandler(_handler: (ev: SyntheticEvent<any>) => void): void {\n        /* tslint:disable:no-empty */\n        /* tslint:enable:no-empty */\n    }\n\n    /**\n     * Lifecycle method `didUnregisterHandler` is invoked after Event Handler unregistration.\n     *\n     * @param handler Event Handler.\n     */\n    didUnregisterHandler(_handler: (ev: SyntheticEvent<any>) => void): void {\n        /* tslint:disable:no-empty */\n        /* tslint:enable:no-empty */\n    }\n}\n","import { EventHandlerFlags, SyntheticEventFlags } from \"./flags\";\nimport { SyntheticEvent } from \"./synthetic_event\";\nimport { DispatchTarget } from \"./traverse_dom\";\n\n/**\n * Dispatch event to local(on the same DOM Node) Event Handlers.\n *\n * It will stop dispatching when event has `StopImmediatePropagation` flag.\n *\n * @param localHandlers Local Event Handlers.\n * @param event Synthetic Event.\n */\nfunction dispatchEventToLocalEventHandlers<E extends SyntheticEvent<any>>(\n    dispatchTarget: DispatchTarget,\n    event: E,\n    matchFlags: EventHandlerFlags,\n): void {\n    event.currentTarget = dispatchTarget.target;\n\n    for (let j = 0; j < dispatchTarget.handlers.length; j++) {\n        const handler = dispatchTarget.handlers[j];\n        if (handler.flags & matchFlags) {\n            handler.fn(event);\n            if (event._flags & SyntheticEventFlags.StoppedImmediatePropagation) {\n                return;\n            }\n        }\n    }\n}\n\n/**\n * Dispatch event to Dispatch Targets.\n *\n * https://www.w3.org/TR/DOM-Level-3-Events/#event-flow\n *\n * @param dispatchTarget Dispatch Targets.\n * @param event Event to dispatch.\n */\nexport function dispatchEvent<E extends SyntheticEvent<any>>(\n    dispatchTargets: DispatchTarget[],\n    event: E,\n    bubble: boolean,\n): void {\n    let i = dispatchTargets.length - 1;\n    let dispatchTarget;\n\n    // capture phase\n    while (i >= 0) {\n        dispatchTarget = dispatchTargets[i];\n        if (dispatchTarget.target !== event.target) {\n            dispatchEventToLocalEventHandlers(dispatchTargets[i--], event, EventHandlerFlags.Capture);\n            if (event._flags & SyntheticEventFlags.StoppedPropagation) {\n                return;\n            }\n        } else {\n            break;\n        }\n    }\n\n    // target phase\n    dispatchTarget = dispatchTargets[0];\n    if (dispatchTarget.target === event.target) {\n        event._flags |= SyntheticEventFlags.AtTargetPhase;\n        dispatchEventToLocalEventHandlers(dispatchTarget, event,\n            EventHandlerFlags.Capture | EventHandlerFlags.Bubble);\n        if (event._flags & SyntheticEventFlags.StoppedPropagation) {\n            return;\n        }\n        event._flags &= ~SyntheticEventFlags.AtTargetPhase;\n        i = 1;\n    } else {\n        i = 0;\n    }\n\n    // bubble phase\n    if (bubble) {\n        event._flags |= SyntheticEventFlags.BubblePhase;\n        while (i < dispatchTargets.length) {\n            dispatchEventToLocalEventHandlers(dispatchTargets[i++], event, EventHandlerFlags.Bubble);\n            if (event._flags & SyntheticEventFlags.StoppedPropagation) {\n                return;\n            }\n        }\n    }\n}\n","import { getEventTarget } from \"../common/dom\";\nimport { NativeEventDispatcherFlags, SyntheticEventFlags } from \"./flags\";\nimport { SyntheticEvent, SyntheticEventClass } from \"./synthetic_event\";\nimport { EventDispatcher } from \"./event_dispatcher\";\nimport { accumulateDispatchTargets } from \"./traverse_dom\";\nimport { dispatchEvent } from \"./dispatch_event\";\nimport { getEventOptions } from \"./utils\";\nimport { scheduleTask } from \"../scheduler/task\";\n\n/**\n * Native Event Dispatcher.\n */\nexport class NativeEventDispatcher<E extends SyntheticEventClass<Event, SyntheticEvent<any>>>\n    extends EventDispatcher {\n    /**\n     * See `EventDispatcherFlags` for details.\n     */\n    readonly flags: NativeEventDispatcherFlags;\n    /**\n     * Event name.\n     */\n    readonly name: string;\n    /**\n     * Synthetic Event Constructor.\n     */\n    readonly eventType: E;\n    /**\n     * `dispatch` method with bounded context.\n     */\n    private readonly _dispatch: (ev: Event) => void;\n    /**\n     * Flag indicating that Event Dispatcher will be deactivated in the task.\n     */\n    private _deactivating: boolean;\n\n    constructor(\n        flags: NativeEventDispatcherFlags,\n        name: string,\n        eventType: E,\n    ) {\n        super();\n        this.flags = flags;\n        this.name = name;\n        this.eventType = eventType;\n        this._dispatch = this.dispatchNativeEvent.bind(this);\n        this._deactivating = false;\n    }\n\n    private dispatchNativeEvent(ev: Event): void {\n        const subs = this._nextSubscription;\n\n        let s: SyntheticEvent<any> | undefined;\n        if (subs) {\n            s = new this.eventType(this, 0, ev, getEventTarget(ev), ev.timeStamp, ev.type);\n            this.dispatchEventToSubscribers(s);\n        }\n\n        if (s &&\n            (s._flags & (SyntheticEventFlags.StoppedImmediatePropagation | SyntheticEventFlags.StoppedPropagation))) {\n            return;\n        }\n        const handlers = accumulateDispatchTargets(getEventTarget(ev) as Element, this);\n\n        if (handlers.length > 0) {\n            if (!s) {\n                s = new this.eventType(this, 0, ev, getEventTarget(ev), ev.timeStamp, ev.type);\n            }\n            dispatchEvent(handlers, s!, !!(this.flags & NativeEventDispatcherFlags.Bubbles));\n        }\n\n        if (s && s._flags & SyntheticEventFlags.PreventedDefault) {\n            ev.preventDefault();\n        }\n    }\n\n    activate(): void {\n        if (this._deactivating) {\n            this._deactivating = false;\n        } else {\n            super.activate();\n            document.addEventListener(\n                this.name,\n                this._dispatch as any as (ev: Event) => void,\n                getEventOptions(this.flags) as boolean);\n        }\n    }\n\n    deactivate(): void {\n        if (!this._deactivating) {\n            this._deactivating = true;\n            scheduleTask(() => {\n                if (this._deactivating) {\n                    document.removeEventListener(\n                        this.name,\n                        this._dispatch as any as (ev: Event) => void,\n                        getEventOptions(this.flags) as boolean);\n                    super.deactivate();\n                    this._deactivating = false;\n                }\n            });\n        }\n    }\n}\n","import { EventDispatcher } from \"./event_dispatcher\";\nimport { EventHandler } from \"./event_handler\";\nimport { getEventHandlerListFromDOMNode } from \"./utils\";\n\n/**\n * Dispatch Target.\n */\nexport interface DispatchTarget {\n    /**\n     * Target Element.\n     */\n    target: Element;\n    /**\n     * Matched Event Handlers.\n     */\n    handlers: EventHandler<any>[];\n}\n\n/**\n * Accumulate Event Handlers that has a matching Event Dispatcher.\n *\n * @param result Result array.\n * @param target Target Element.\n * @param dispatcher Event Dispatcher.\n */\nexport function accumulateDispatchTargetsFromElement(\n    result: DispatchTarget[],\n    target: Element,\n    dispatcher: EventDispatcher,\n): void {\n    const events = getEventHandlerListFromDOMNode(target);\n    if (events) {\n        let matches: EventHandler<any>[] | undefined;\n        const keys = Object.keys(events);\n        for (let i = 0; i < keys.length; i++) {\n            const ev = events[keys[i]];\n            if (ev.dispatcher === dispatcher) {\n                if (!matches) {\n                    matches = [ev];\n                } else {\n                    matches.push(ev);\n                }\n            }\n        }\n        if (matches) {\n            result.push({\n                target: target,\n                handlers: matches,\n            });\n        }\n    }\n}\n\n/**\n * Traverses the DOM tree from the target Element to the document top and accumulates Dispatch Targets that has matching\n * Event Dispatcher.\n *\n * @param target DOM Element.\n * @param dispatcher Event Dispatcher instance.\n * @returns An array of Dispatch Targets.\n */\nexport function accumulateDispatchTargets(\n    target: Element | null,\n    dispatcher: EventDispatcher,\n): DispatchTarget[] {\n    const result: DispatchTarget[] = [];\n\n    while (target) {\n        accumulateDispatchTargetsFromElement(result, target, dispatcher);\n        target = target.parentElement;\n    }\n\n    return result;\n}\n","import { getEventCharCode, getEventKey } from \"../common/dom\";\nimport { DEV_MODE, DevModeFlags, printWarnOnce } from \"../dev_mode/dev_mode\";\nimport { SyntheticEventFlags } from \"./flags\";\nimport { EventDispatcher } from \"./event_dispatcher\";\n\n/**\n * Synthetic Event.\n */\nexport class SyntheticEvent<D> implements Event {\n    /**\n     * @deprecated\n     */\n    initEvent: (eventTypeArg: string, canBubbleArg: boolean, cancelableArg: boolean) => void;\n\n    /**\n     * Old IE Property.\n     *\n     * @deprecated\n     */\n    cancelBubble: boolean;\n    /**\n     * Old IE Property.\n     *\n     * @deprecated\n     */\n    returnValue: boolean;\n    /**\n     * Old IE Property.\n     *\n     * @deprecated\n     */\n    readonly srcElement: Element | null;\n\n    readonly dispatcher: EventDispatcher;\n    _flags: SyntheticEventFlags;\n    _data: D;\n    readonly target: EventTarget;\n    currentTarget: EventTarget;\n    timeStamp: number;\n    type: any;\n    CAPTURING_PHASE: number;\n    AT_TARGET: number;\n    BUBBLING_PHASE: number;\n\n    constructor(\n        dispatcher: EventDispatcher,\n        flags: SyntheticEventFlags,\n        data: D,\n        target: EventTarget,\n        timeStamp: number,\n        type: any,\n    ) {\n        this.dispatcher = dispatcher;\n        this._flags = flags;\n        this._data = data;\n        this.target = target;\n        this.currentTarget = target;\n        this.timeStamp = timeStamp;\n        this.type = type;\n    }\n\n    get defaultPrevented(): boolean {\n        return !!(this._flags & SyntheticEventFlags.PreventedDefault);\n    }\n\n    get bubbles(): boolean {\n        return !!(this._flags & SyntheticEventFlags.Bubbles);\n    }\n\n    get cancelable(): boolean {\n        return !!(this._flags & SyntheticEventFlags.Cancelable);\n    }\n\n    get isTrusted(): boolean {\n        return !!(this._flags & SyntheticEventFlags.IsTrusted);\n    }\n\n    get eventPhase(): number {\n        if (this._flags & SyntheticEventFlags.AtTargetPhase) {\n            return 2;\n        } else if (this._flags & SyntheticEventFlags.BubblePhase) {\n            return 3;\n        }\n        return 1;\n    }\n\n    stopPropagation() {\n        this._flags |= SyntheticEventFlags.StoppedPropagation;\n    }\n\n    stopImmediatePropagation() {\n        this._flags |= SyntheticEventFlags.StoppedPropagation | SyntheticEventFlags.StoppedImmediatePropagation;\n    }\n\n    preventDefault() {\n        this._flags |= SyntheticEventFlags.PreventedDefault;\n    }\n}\n\nSyntheticEvent.prototype.CAPTURING_PHASE = 1;\nSyntheticEvent.prototype.AT_TARGET = 2;\nSyntheticEvent.prototype.BUBBLING_PHASE = 3;\n\nexport interface SyntheticEventClass<D, E extends SyntheticEvent<any>> {\n    new (\n        dispatcher: EventDispatcher,\n        flags: SyntheticEventFlags,\n        data: D,\n        target: EventTarget,\n        timeStamp: number,\n        type: any,\n    ): E;\n}\n\nexport class SyntheticUIEvent<T extends UIEvent> extends SyntheticEvent<T> implements UIEvent {\n    /**\n     * @deprecated\n     */\n    initUIEvent: (\n        typeArg: string,\n        canBubbleArg: boolean,\n        cancelableArg: boolean,\n        viewArg: Window,\n        detailArg: number,\n    ) => void;\n\n    get detail() {\n        return this._data.detail;\n    }\n\n    get view() {\n        return this._data.view;\n    }\n}\n\nexport class SyntheticKeyboardEvent extends SyntheticUIEvent<KeyboardEvent> implements KeyboardEvent {\n    /**\n     * @deprecated\n     */\n    initKeyboardEvent: (\n        typeArg: string,\n        canBubbleArg: boolean,\n        cancelableArg: boolean,\n        viewArg: Window,\n        keyArg: string,\n        locationArg: number,\n        modifiersListArg: string,\n        repeat: boolean,\n        locale: string,\n    ) => void;\n\n    get altKey(): boolean {\n        return this._data.altKey;\n    }\n\n    get char(): string | null {\n        return this._data.char;\n    }\n\n    get charCode(): number {\n        /**\n         * #quirks\n         */\n        if (this._data.type === \"keypress\") {\n            return getEventCharCode(this._data);\n        }\n        return 0;\n    }\n\n    get ctrlKey(): boolean {\n        return this._data.ctrlKey;\n    }\n\n    get key(): string {\n        /**\n         * #quirks\n         */\n        return getEventKey(this._data);\n    }\n\n    get keyCode(): number {\n        /**\n         * #quirks\n         */\n        switch (this._data.type) {\n            case \"keydown\":\n            case \"keyup\":\n                return this._data.keyCode;\n        }\n\n        return 0;\n    }\n\n    get locale(): string {\n        return this._data.locale;\n    }\n\n    get location(): number {\n        return this._data.location;\n    }\n\n    get metaKey(): boolean {\n        return this._data.metaKey;\n    }\n\n    get repeat(): boolean {\n        return this._data.repeat;\n    }\n\n    get shiftKey(): boolean {\n        return this._data.shiftKey;\n    }\n\n    get which(): number {\n        /**\n         * #quirks\n         */\n        switch (this._data.type) {\n            case \"keypress\":\n                return getEventCharCode(this._data);\n            case \"keydown\":\n            case \"keyup\":\n                return this._data.keyCode;\n        }\n\n        return 0;\n    }\n\n    get code(): string {\n        /**\n         * #quirks\n         */\n        if (__IVI_DEV__) {\n            if (!(DEV_MODE & DevModeFlags.DisableWarningsForUnsupportedFeatures)) {\n                printWarnOnce(\"events.KeyboardEvent.code\",\n                    \"KeyboardEvent 'code' property doesn't work in many major browsers, and there is no easy \" +\n                    \"way to polyfill this property on browsers that doesn't support it.\");\n            }\n        }\n        return this._data.code;\n    }\n\n    get DOM_KEY_LOCATION_JOYSTICK(): number {\n        return this._data.DOM_KEY_LOCATION_JOYSTICK;\n    }\n\n    get DOM_KEY_LOCATION_LEFT(): number {\n        return this._data.DOM_KEY_LOCATION_LEFT;\n    }\n\n    get DOM_KEY_LOCATION_MOBILE(): number {\n        return this._data.DOM_KEY_LOCATION_MOBILE;\n    }\n\n    get DOM_KEY_LOCATION_NUMPAD(): number {\n        return this._data.DOM_KEY_LOCATION_NUMPAD;\n    }\n\n    get DOM_KEY_LOCATION_RIGHT(): number {\n        return this._data.DOM_KEY_LOCATION_RIGHT;\n    }\n\n    get DOM_KEY_LOCATION_STANDARD(): number {\n        return this._data.DOM_KEY_LOCATION_STANDARD;\n    }\n\n    getModifierState(keyArg: string): boolean {\n        return this._data.getModifierState(keyArg);\n    }\n}\n\nexport class SyntheticMouseEvent<T extends MouseEvent> extends SyntheticUIEvent<T> implements MouseEvent {\n    /**\n     * @deprecated\n     */\n    initMouseEvent: (\n        typeArg: string,\n        canBubbleArg: boolean,\n        cancelableArg: boolean,\n        viewArg: Window,\n        detailArg: number,\n        screenXArg: number,\n        screenYArg: number,\n        clientXArg: number,\n        clientYArg: number,\n        ctrlKeyArg: boolean,\n        altKeyArg: boolean,\n        shiftKeyArg: boolean,\n        metaKeyArg: boolean,\n        buttonArg: number,\n        relatedTargetArg: EventTarget | null,\n    ) => void;\n\n    get altKey(): boolean {\n        return this._data.altKey;\n    }\n\n    get button(): number {\n        return this._data.button;\n    }\n\n    get buttons(): number {\n        /**\n         * #quirks\n         *\n         * Doesn't work in Safari.\n         */\n        if (__IVI_DEV__) {\n            if (!(DEV_MODE & DevModeFlags.DisableWarningsForUnsupportedFeatures)) {\n                printWarnOnce(\"events.MouseEvent.buttons\",\n                    \"MouseEvent 'buttons' property doesn't work on Safari, and there is no easy way to \" +\n                    \"polyfill this property on browsers that doesn't support it. Almost all use cases should be \" +\n                    \"solved with a 'button' property.\");\n            }\n        }\n        return this._data.buttons;\n    }\n\n    get clientX(): number {\n        return this._data.clientX;\n    }\n\n    get clientY(): number {\n        return this._data.clientY;\n    }\n\n    get ctrlKey(): boolean {\n        return this._data.ctrlKey;\n    }\n\n    get fromElement(): Element {\n        return this._data.fromElement;\n    }\n\n    get layerX(): number {\n        return this._data.layerX;\n    }\n\n    get layerY(): number {\n        return this._data.layerY;\n    }\n\n    get metaKey(): boolean {\n        return this._data.metaKey;\n    }\n\n    get movementX(): number {\n        return this._data.movementX;\n    }\n\n    get movementY(): number {\n        return this._data.movementY;\n    }\n\n    get offsetX(): number {\n        return this._data.offsetX;\n    }\n\n    get offsetY(): number {\n        return this._data.offsetY;\n    }\n\n    get pageX(): number {\n        return this._data.pageX;\n    }\n\n    get pageY(): number {\n        return this._data.pageY;\n    }\n\n    get relatedTarget(): EventTarget {\n        return this._data.relatedTarget;\n    }\n\n    get screenX(): number {\n        return this._data.screenX;\n    }\n\n    get screenY(): number {\n        return this._data.screenY;\n    }\n\n    get shiftKey(): boolean {\n        return this._data.shiftKey;\n    }\n\n    get toElement(): Element {\n        return this._data.toElement;\n    }\n\n    get which(): number {\n        return this._data.which;\n    }\n\n    get x(): number {\n        return this._data.x;\n    }\n\n    get y(): number {\n        return this._data.y;\n    }\n\n    getModifierState(keyArg: string): boolean {\n        return this._data.getModifierState(keyArg);\n    }\n}\n\nexport class SyntheticTouchEvent extends SyntheticUIEvent<TouchEvent> implements TouchEvent {\n    get altKey(): boolean {\n        return this._data.altKey;\n    }\n\n    get changedTouches(): TouchList {\n        return this._data.changedTouches;\n    }\n\n    get ctrlKey(): boolean {\n        return this._data.ctrlKey;\n    }\n\n    get metaKey(): boolean {\n        return this._data.metaKey;\n    }\n\n    get shiftKey(): boolean {\n        return this._data.shiftKey;\n    }\n\n    get targetTouches(): TouchList {\n        return this._data.targetTouches;\n    }\n\n    get touches(): TouchList {\n        return this._data.touches;\n    }\n}\n\nexport class SyntheticPointerEvent extends SyntheticMouseEvent<PointerEvent> implements PointerEvent {\n    /**\n     * @deprecated\n     */\n    initPointerEvent: (\n        typeArg: string,\n        canBubbleArg: boolean,\n        cancelableArg: boolean,\n        viewArg: Window,\n        detailArg: number,\n        screenXArg: number,\n        screenYArg: number,\n        clientXArg: number,\n        clientYArg: number,\n        ctrlKeyArg: boolean,\n        altKeyArg: boolean,\n        shiftKeyArg: boolean,\n        metaKeyArg: boolean,\n        buttonArg: number,\n        relatedTargetArg: EventTarget,\n        offsetXArg: number,\n        offsetYArg: number,\n        widthArg: number,\n        heightArg: number,\n        pressure: number,\n        rotation: number,\n        tiltX: number,\n        tiltY: number,\n        pointerIdArg: number,\n        pointerType: any,\n        hwTimestampArg: number,\n        isPrimary: boolean,\n    ) => void;\n\n    get currentPoint(): any {\n        return this._data.currentPoint;\n    }\n\n    get height(): number {\n        return this._data.height;\n    }\n\n    get hwTimestamp(): number {\n        return this._data.hwTimestamp;\n    }\n\n    get intermediatePoints(): any {\n        return this._data.intermediatePoints;\n    }\n\n    get isPrimary(): boolean {\n        return this._data.isPrimary;\n    }\n\n    get pointerId(): number {\n        return this._data.pointerId;\n    }\n\n    get pointerType(): any {\n        return this._data.pointerType;\n    }\n\n    get pressure(): number {\n        return this._data.pressure;\n    }\n\n    get rotation(): number {\n        return this._data.rotation;\n    }\n\n    get tiltX(): number {\n        return this._data.tiltX;\n    }\n\n    get tiltY(): number {\n        return this._data.tiltY;\n    }\n\n    get width(): number {\n        return this._data.width;\n    }\n\n    getCurrentPoint(element: Element): void {\n        return this._data.getCurrentPoint(element);\n    }\n\n    getIntermediatePoints(element: Element): void {\n        return this._data.getIntermediatePoints(element);\n    }\n}\n\nexport class SyntheticDragEvent extends SyntheticMouseEvent<DragEvent> implements DragEvent {\n    /**\n     * @deprecated\n     */\n    initDragEvent: (\n        typeArg: string,\n        canBubbleArg: boolean,\n        cancelableArg: boolean,\n        viewArg: Window,\n        detailArg: number,\n        screenXArg: number,\n        screenYArg: number,\n        clientXArg: number,\n        clientYArg: number,\n        ctrlKeyArg: boolean,\n        altKeyArg: boolean,\n        shiftKeyArg: boolean,\n        metaKeyArg: boolean,\n        buttonArg: number,\n        relatedTargetArg: EventTarget,\n        dataTransferArg: DataTransfer,\n    ) => void;\n\n    msConvertURL: (\n        file: File,\n        targetType: string,\n        targetURL?: string,\n    ) => void;\n\n    get dataTransfer(): DataTransfer {\n        return this._data.dataTransfer;\n    }\n}\n\nexport class SyntheticWheelEvent extends SyntheticMouseEvent<WheelEvent> implements WheelEvent {\n    /**\n     * @deprecated\n     */\n    initWheelEvent: (\n        typeArg: string,\n        canBubbleArg: boolean,\n        cancelableArg: boolean,\n        viewArg: Window, detailArg:\n            number, screenXArg: number,\n        screenYArg: number,\n        clientXArg: number,\n        clientYArg: number,\n        buttonArg: number,\n        relatedTargetArg: EventTarget,\n        modifiersListArg: string,\n        deltaXArg: number,\n        deltaYArg: number,\n        deltaZArg: number,\n        deltaMode: number,\n    ) => void;\n\n    getCurrentPoint: (element: Element) => void;\n\n    readonly wheelDelta: number;\n    readonly wheelDeltaX: number;\n    readonly wheelDeltaY: number;\n\n    get deltaMode(): number {\n        return this._data.deltaMode;\n    }\n\n    get deltaX(): number {\n        return this._data.deltaX;\n    }\n\n    get deltaY(): number {\n        return this._data.deltaY;\n    }\n\n    get deltaZ(): number {\n        return this._data.deltaZ;\n    }\n\n    get DOM_DELTA_LINE(): number {\n        return this._data.DOM_DELTA_LINE;\n    }\n    get DOM_DELTA_PAGE(): number {\n        return this._data.DOM_DELTA_PAGE;\n    }\n    get DOM_DELTA_PIXEL(): number {\n        return this._data.DOM_DELTA_PIXEL;\n    }\n}\n\nexport class SyntheticFocusEvent extends SyntheticUIEvent<FocusEvent> implements FocusEvent {\n    /**\n     * @deprecated\n     */\n    initFocusEvent: (\n        typeArg: string,\n        canBubbleArg: boolean,\n        cancelableArg: boolean,\n        viewArg: Window,\n        detailArg: number,\n        relatedTargetArg: EventTarget,\n    ) => void;\n\n    get relatedTarget(): EventTarget {\n        return this._data.relatedTarget;\n    }\n}\n\nexport class SyntheticAriaRequestEvent extends SyntheticEvent<AriaRequestEvent> implements AriaRequestEvent {\n    get attributeName(): string {\n        return this._data.attributeName;\n    }\n\n    get attributeValue(): string | null {\n        return this._data.attributeValue;\n    }\n    set attributeValue(value: string | null) {\n        this._data.attributeValue = value;\n    }\n}\n\nexport class SyntheticClipboardEvent extends SyntheticEvent<ClipboardEvent> implements ClipboardEvent {\n    get clipboardData(): DataTransfer {\n        return this._data.clipboardData;\n    }\n}\n\nexport class SyntheticErrorEvent extends SyntheticEvent<ErrorEvent> implements ErrorEvent {\n    /**\n     * @deprecated\n     */\n    initErrorEvent: (\n        typeArg: string,\n        canBubbleArg: boolean,\n        cancelableArg: boolean,\n        messageArg: string,\n        filenameArg: string,\n        linenoArg: number,\n    ) => void;\n\n    get colno(): number {\n        return this._data.colno;\n    }\n\n    get error(): any {\n        return this._data.error;\n    }\n\n    get filename(): string {\n        return this._data.filename;\n    }\n\n    get lineno(): number {\n        return this._data.lineno;\n    }\n\n    get message(): string {\n        return this._data.message;\n    }\n}\n\nexport class SyntheticMediaEncryptedEvent extends SyntheticEvent<MediaEncryptedEvent>\n    implements MediaEncryptedEvent {\n\n    get initData(): ArrayBuffer | null {\n        return this._data.initData;\n    }\n\n    get initDataType(): string {\n        return this._data.initDataType;\n    }\n}\n\nexport class SyntheticMediaStreamErrorEvent extends SyntheticEvent<MediaStreamErrorEvent>\n    implements MediaStreamErrorEvent {\n\n    get error(): MediaStreamError | null {\n        return this._data.error;\n    }\n}\n\nexport class SyntheticProgressEvent extends SyntheticEvent<ProgressEvent> implements ProgressEvent {\n    /**\n     * @deprecated\n     */\n    initProgressEvent: (\n        typeArg: string,\n        canBubbleArg: boolean,\n        cancelableArg: boolean,\n        lengthComputableArg: boolean,\n        loadedArg: number,\n        totalArg: number,\n    ) => void;\n\n    get lengthComputable(): boolean {\n        return this._data.lengthComputable;\n    }\n\n    get loaded(): number {\n        return this._data.loaded;\n    }\n\n    get total(): number {\n        return this._data.total;\n    }\n}\n","/**\n * Event Handlers.\n *\n * Optimizing compilers should inline all this functions and completely remove unused code.\n */\n\nimport { EventHandlerFlags, NativeEventDispatcherFlags } from \"./flags\";\nimport { EventHandler } from \"./event_handler\";\nimport { EventDispatcher } from \"./event_dispatcher\";\nimport { NativeEventDispatcher } from \"./native_event_dispatcher\";\nimport {\n    SyntheticEvent, SyntheticUIEvent, SyntheticDragEvent, SyntheticErrorEvent,\n    SyntheticKeyboardEvent, SyntheticFocusEvent, SyntheticMediaEncryptedEvent, SyntheticMediaStreamErrorEvent,\n    SyntheticMouseEvent, SyntheticAriaRequestEvent, SyntheticClipboardEvent, SyntheticPointerEvent,\n    SyntheticTouchEvent, SyntheticWheelEvent, SyntheticProgressEvent, SyntheticEventClass,\n} from \"./synthetic_event\";\n\n/**\n * Helper function that creates Event Handler objects.\n *\n * @param dispatcher Dispatcher instance.\n * @param fn Event Handler function.\n * @param options Event Options. Value with a boolean type indicates that events of this type should use capture mode\n *   and it will be dispatched to the registered listener before being dispatched to any EventTarget beneath it in the\n *   DOM tree.\n * @returns EventHandler object.\n */\nexport function createEventHandler<E extends SyntheticEvent<any>>(\n    dispatcher: EventDispatcher,\n    fn: (ev: E) => void,\n    capture?: boolean): EventHandler<E> {\n\n    return {\n        dispatcher: dispatcher,\n        flags: capture ? EventHandlerFlags.Capture : EventHandlerFlags.Bubble,\n        fn: fn,\n    } as EventHandler<E>;\n}\n\nexport interface NativeEventDispatchersList {\n    abort: NativeEventDispatcher<SyntheticEventClass<UIEvent, SyntheticUIEvent<UIEvent>>>;\n    activate: NativeEventDispatcher<SyntheticEventClass<UIEvent, SyntheticUIEvent<UIEvent>>>;\n    ariarequest: NativeEventDispatcher<SyntheticEventClass<AriaRequestEvent, SyntheticAriaRequestEvent>>;\n    beforeactivate: NativeEventDispatcher<SyntheticEventClass<UIEvent, SyntheticUIEvent<UIEvent>>>;\n    beforecopy: NativeEventDispatcher<SyntheticEventClass<ClipboardEvent, SyntheticClipboardEvent>>;\n    beforecut: NativeEventDispatcher<SyntheticEventClass<ClipboardEvent, SyntheticClipboardEvent>>;\n    beforedeactivate: NativeEventDispatcher<SyntheticEventClass<UIEvent, SyntheticUIEvent<UIEvent>>>;\n    beforepaste: NativeEventDispatcher<SyntheticEventClass<ClipboardEvent, SyntheticClipboardEvent>>;\n    blur: NativeEventDispatcher<SyntheticEventClass<FocusEvent, SyntheticFocusEvent>>;\n    canplay: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    canplaythrough: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    change: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    click: NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>;\n    contextmenu: NativeEventDispatcher<SyntheticEventClass<PointerEvent, SyntheticPointerEvent>>;\n    copy: NativeEventDispatcher<SyntheticEventClass<ClipboardEvent, SyntheticClipboardEvent>>;\n    cuechange: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    cut: NativeEventDispatcher<SyntheticEventClass<ClipboardEvent, SyntheticClipboardEvent>>;\n    dblclick: NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>;\n    deactivate: NativeEventDispatcher<SyntheticEventClass<UIEvent, SyntheticUIEvent<UIEvent>>>;\n    drag: NativeEventDispatcher<SyntheticEventClass<DragEvent, SyntheticDragEvent>>;\n    dragend: NativeEventDispatcher<SyntheticEventClass<DragEvent, SyntheticDragEvent>>;\n    dragenter: NativeEventDispatcher<SyntheticEventClass<DragEvent, SyntheticDragEvent>>;\n    dragleave: NativeEventDispatcher<SyntheticEventClass<DragEvent, SyntheticDragEvent>>;\n    dragover: NativeEventDispatcher<SyntheticEventClass<DragEvent, SyntheticDragEvent>>;\n    dragstart: NativeEventDispatcher<SyntheticEventClass<DragEvent, SyntheticDragEvent>>;\n    drop: NativeEventDispatcher<SyntheticEventClass<DragEvent, SyntheticDragEvent>>;\n    durationchange: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    emptied: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    encrypted: NativeEventDispatcher<SyntheticEventClass<MediaEncryptedEvent, SyntheticMediaEncryptedEvent>>;\n    ended: NativeEventDispatcher<SyntheticEventClass<MediaStreamErrorEvent, SyntheticMediaStreamErrorEvent>>;\n    error: NativeEventDispatcher<SyntheticEventClass<ErrorEvent, SyntheticErrorEvent>>;\n    focus: NativeEventDispatcher<SyntheticEventClass<FocusEvent, SyntheticFocusEvent>>;\n    gotpointercapture: NativeEventDispatcher<SyntheticEventClass<PointerEvent, SyntheticPointerEvent>>;\n    input: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    invalid: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    keydown: NativeEventDispatcher<SyntheticEventClass<KeyboardEvent, SyntheticKeyboardEvent>>;\n    keypress: NativeEventDispatcher<SyntheticEventClass<KeyboardEvent, SyntheticKeyboardEvent>>;\n    keyup: NativeEventDispatcher<SyntheticEventClass<KeyboardEvent, SyntheticKeyboardEvent>>;\n    load: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    loadeddata: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    loadedmetadata: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    loadstart: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    lostpointercapture: NativeEventDispatcher<SyntheticEventClass<PointerEvent, SyntheticPointerEvent>>;\n    mousedown: NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>;\n    mouseenter: NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>;\n    mouseleave: NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>;\n    mousemove: NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>;\n    mouseout: NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>;\n    mouseover: NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>;\n    mouseup: NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>;\n    paste: NativeEventDispatcher<SyntheticEventClass<ClipboardEvent, SyntheticClipboardEvent>>;\n    pause: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    play: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    playing: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    pointercancel: NativeEventDispatcher<SyntheticEventClass<PointerEvent, SyntheticPointerEvent>>;\n    pointerdown: NativeEventDispatcher<SyntheticEventClass<PointerEvent, SyntheticPointerEvent>>;\n    pointerenter: NativeEventDispatcher<SyntheticEventClass<PointerEvent, SyntheticPointerEvent>>;\n    pointerleave: NativeEventDispatcher<SyntheticEventClass<PointerEvent, SyntheticPointerEvent>>;\n    pointermove: NativeEventDispatcher<SyntheticEventClass<PointerEvent, SyntheticPointerEvent>>;\n    pointerout: NativeEventDispatcher<SyntheticEventClass<PointerEvent, SyntheticPointerEvent>>;\n    pointerover: NativeEventDispatcher<SyntheticEventClass<PointerEvent, SyntheticPointerEvent>>;\n    pointerup: NativeEventDispatcher<SyntheticEventClass<PointerEvent, SyntheticPointerEvent>>;\n    progress: NativeEventDispatcher<SyntheticEventClass<ProgressEvent, SyntheticProgressEvent>>;\n    ratechange: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    reset: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    scroll: NativeEventDispatcher<SyntheticEventClass<UIEvent, SyntheticUIEvent<UIEvent>>>;\n    seeked: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    seeking: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    select: NativeEventDispatcher<SyntheticEventClass<UIEvent, SyntheticUIEvent<UIEvent>>>;\n    selectstart: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    stalled: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    submit: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    suspend: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    timeupdate: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    touchcancel: NativeEventDispatcher<SyntheticEventClass<TouchEvent, SyntheticTouchEvent>>;\n    touchend: NativeEventDispatcher<SyntheticEventClass<TouchEvent, SyntheticTouchEvent>>;\n    touchmove: NativeEventDispatcher<SyntheticEventClass<TouchEvent, SyntheticTouchEvent>>;\n    touchstart: NativeEventDispatcher<SyntheticEventClass<TouchEvent, SyntheticTouchEvent>>;\n    unload: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    volumechange: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    waiting: NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>;\n    wheel: NativeEventDispatcher<SyntheticEventClass<WheelEvent, SyntheticWheelEvent>>;\n};\n\n/* tslint:disable:max-line-length */\nexport const NativeEventDispatchers: NativeEventDispatchersList = {\n    abort: new NativeEventDispatcher<SyntheticEventClass<UIEvent, SyntheticUIEvent<UIEvent>>>(NativeEventDispatcherFlags.Capture, \"abort\", SyntheticUIEvent),\n    activate: new NativeEventDispatcher<SyntheticEventClass<UIEvent, SyntheticUIEvent<UIEvent>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"activate\", SyntheticUIEvent),\n    ariarequest: new NativeEventDispatcher<SyntheticEventClass<AriaRequestEvent, SyntheticAriaRequestEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"ariarequest\", SyntheticAriaRequestEvent),\n    beforeactivate: new NativeEventDispatcher<SyntheticEventClass<UIEvent, SyntheticUIEvent<UIEvent>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"beforeactivate\", SyntheticUIEvent),\n    beforecopy: new NativeEventDispatcher<SyntheticEventClass<ClipboardEvent, SyntheticClipboardEvent>>(NativeEventDispatcherFlags.Capture, \"beforecopy\", SyntheticClipboardEvent),\n    beforecut: new NativeEventDispatcher<SyntheticEventClass<ClipboardEvent, SyntheticClipboardEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"beforecut\", SyntheticClipboardEvent),\n    beforedeactivate: new NativeEventDispatcher<SyntheticEventClass<UIEvent, SyntheticUIEvent<UIEvent>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"beforedeactivate\", SyntheticUIEvent),\n    beforepaste: new NativeEventDispatcher<SyntheticEventClass<ClipboardEvent, SyntheticClipboardEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"beforepaste\", SyntheticClipboardEvent),\n    blur: new NativeEventDispatcher<SyntheticEventClass<FocusEvent, SyntheticFocusEvent>>(NativeEventDispatcherFlags.Capture, \"blur\", SyntheticFocusEvent),\n    canplay: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture, \"canplay\", SyntheticEvent),\n    canplaythrough: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture, \"canplaythrough\", SyntheticEvent),\n    change: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"change\", SyntheticEvent),\n    click: new NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"click\", SyntheticMouseEvent),\n    contextmenu: new NativeEventDispatcher<SyntheticEventClass<PointerEvent, SyntheticPointerEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"contextmenu\", SyntheticPointerEvent),\n    copy: new NativeEventDispatcher<SyntheticEventClass<ClipboardEvent, SyntheticClipboardEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"copy\", SyntheticClipboardEvent),\n    cuechange: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture, \"cuechange\", SyntheticEvent),\n    cut: new NativeEventDispatcher<SyntheticEventClass<ClipboardEvent, SyntheticClipboardEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"cut\", SyntheticClipboardEvent),\n    dblclick: new NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"dblclick\", SyntheticMouseEvent),\n    deactivate: new NativeEventDispatcher<SyntheticEventClass<UIEvent, SyntheticUIEvent<UIEvent>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"deactivate\", SyntheticUIEvent),\n    drag: new NativeEventDispatcher<SyntheticEventClass<DragEvent, SyntheticDragEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"drag\", SyntheticDragEvent),\n    dragend: new NativeEventDispatcher<SyntheticEventClass<DragEvent, SyntheticDragEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"dragend\", SyntheticDragEvent),\n    dragenter: new NativeEventDispatcher<SyntheticEventClass<DragEvent, SyntheticDragEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"dragenter\", SyntheticDragEvent),\n    dragleave: new NativeEventDispatcher<SyntheticEventClass<DragEvent, SyntheticDragEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"dragleave\", SyntheticDragEvent),\n    dragover: new NativeEventDispatcher<SyntheticEventClass<DragEvent, SyntheticDragEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"dragover\", SyntheticDragEvent),\n    dragstart: new NativeEventDispatcher<SyntheticEventClass<DragEvent, SyntheticDragEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"dragstart\", SyntheticDragEvent),\n    drop: new NativeEventDispatcher<SyntheticEventClass<DragEvent, SyntheticDragEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"drop\", SyntheticDragEvent),\n    durationchange: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture, \"durationchange\", SyntheticEvent),\n    emptied: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture, \"emptied\", SyntheticEvent),\n    encrypted: new NativeEventDispatcher<SyntheticEventClass<MediaEncryptedEvent, SyntheticMediaEncryptedEvent>>(NativeEventDispatcherFlags.Capture, \"encrypted\", SyntheticMediaEncryptedEvent),\n    ended: new NativeEventDispatcher<SyntheticEventClass<MediaStreamErrorEvent, SyntheticMediaStreamErrorEvent>>(NativeEventDispatcherFlags.Capture, \"ended\", SyntheticMediaStreamErrorEvent),\n    error: new NativeEventDispatcher<SyntheticEventClass<ErrorEvent, SyntheticErrorEvent>>(NativeEventDispatcherFlags.Capture, \"error\", SyntheticErrorEvent),\n    focus: new NativeEventDispatcher<SyntheticEventClass<FocusEvent, SyntheticFocusEvent>>(NativeEventDispatcherFlags.Capture, \"focus\", SyntheticFocusEvent),\n    gotpointercapture: new NativeEventDispatcher<SyntheticEventClass<PointerEvent, SyntheticPointerEvent>>(NativeEventDispatcherFlags.Capture, \"gotpointercapture\", SyntheticPointerEvent),\n    input: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"input\", SyntheticEvent),\n    invalid: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture, \"invalid\", SyntheticEvent),\n    keydown: new NativeEventDispatcher<SyntheticEventClass<KeyboardEvent, SyntheticKeyboardEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"keydown\", SyntheticKeyboardEvent),\n    keypress: new NativeEventDispatcher<SyntheticEventClass<KeyboardEvent, SyntheticKeyboardEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"keypress\", SyntheticKeyboardEvent),\n    keyup: new NativeEventDispatcher<SyntheticEventClass<KeyboardEvent, SyntheticKeyboardEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"keyup\", SyntheticKeyboardEvent),\n    load: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture, \"load\", SyntheticEvent),\n    loadeddata: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture, \"loadeddata\", SyntheticEvent),\n    loadedmetadata: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture, \"loadedmetadata\", SyntheticEvent),\n    loadstart: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture, \"loadstart\", SyntheticEvent),\n    lostpointercapture: new NativeEventDispatcher<SyntheticEventClass<PointerEvent, SyntheticPointerEvent>>(NativeEventDispatcherFlags.Capture, \"lostpointercapture\", SyntheticPointerEvent),\n    mousedown: new NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles | NativeEventDispatcherFlags.Passive, \"mousedown\", SyntheticMouseEvent),\n    mouseenter: new NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Passive, \"mouseenter\", SyntheticMouseEvent),\n    mouseleave: new NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Passive, \"mouseleave\", SyntheticMouseEvent),\n    mousemove: new NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles | NativeEventDispatcherFlags.Passive, \"mousemove\", SyntheticMouseEvent),\n    mouseout: new NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles | NativeEventDispatcherFlags.Passive, \"mouseout\", SyntheticMouseEvent),\n    mouseover: new NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles | NativeEventDispatcherFlags.Passive, \"mouseover\", SyntheticMouseEvent),\n    mouseup: new NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles | NativeEventDispatcherFlags.Passive, \"mouseup\", SyntheticMouseEvent),\n    paste: new NativeEventDispatcher<SyntheticEventClass<ClipboardEvent, SyntheticClipboardEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"paste\", SyntheticClipboardEvent),\n    pause: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture, \"pause\", SyntheticEvent),\n    play: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture, \"play\", SyntheticEvent),\n    playing: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture, \"playing\", SyntheticEvent),\n    pointercancel: new NativeEventDispatcher<SyntheticEventClass<PointerEvent, SyntheticPointerEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"pointercancel\", SyntheticPointerEvent),\n    pointerdown: new NativeEventDispatcher<SyntheticEventClass<PointerEvent, SyntheticPointerEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"pointerdown\", SyntheticPointerEvent),\n    pointerenter: new NativeEventDispatcher<SyntheticEventClass<PointerEvent, SyntheticPointerEvent>>(NativeEventDispatcherFlags.Capture, \"pointerenter\", SyntheticPointerEvent),\n    pointerleave: new NativeEventDispatcher<SyntheticEventClass<PointerEvent, SyntheticPointerEvent>>(NativeEventDispatcherFlags.Capture, \"pointerleave\", SyntheticPointerEvent),\n    pointermove: new NativeEventDispatcher<SyntheticEventClass<PointerEvent, SyntheticPointerEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"pointermove\", SyntheticPointerEvent),\n    pointerout: new NativeEventDispatcher<SyntheticEventClass<PointerEvent, SyntheticPointerEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"pointerout\", SyntheticPointerEvent),\n    pointerover: new NativeEventDispatcher<SyntheticEventClass<PointerEvent, SyntheticPointerEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"pointerover\", SyntheticPointerEvent),\n    pointerup: new NativeEventDispatcher<SyntheticEventClass<PointerEvent, SyntheticPointerEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"pointerup\", SyntheticPointerEvent),\n    progress: new NativeEventDispatcher<SyntheticEventClass<ProgressEvent, SyntheticProgressEvent>>(NativeEventDispatcherFlags.Capture, \"progress\", SyntheticProgressEvent),\n    ratechange: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture, \"ratechange\", SyntheticEvent),\n    reset: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"reset\", SyntheticEvent),\n    scroll: new NativeEventDispatcher<SyntheticEventClass<UIEvent, SyntheticUIEvent<UIEvent>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Passive, \"scroll\", SyntheticUIEvent),\n    seeked: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture, \"seeked\", SyntheticEvent),\n    seeking: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture, \"seeking\", SyntheticEvent),\n    select: new NativeEventDispatcher<SyntheticEventClass<UIEvent, SyntheticUIEvent<UIEvent>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"select\", SyntheticUIEvent),\n    selectstart: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"selectstart\", SyntheticEvent),\n    stalled: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture, \"stalled\", SyntheticEvent),\n    submit: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"submit\", SyntheticEvent),\n    suspend: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture, \"suspend\", SyntheticEvent),\n    timeupdate: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture, \"timeupdate\", SyntheticEvent),\n    touchcancel: new NativeEventDispatcher<SyntheticEventClass<TouchEvent, SyntheticTouchEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles | NativeEventDispatcherFlags.Passive, \"touchcancel\", SyntheticTouchEvent),\n    touchend: new NativeEventDispatcher<SyntheticEventClass<TouchEvent, SyntheticTouchEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles | NativeEventDispatcherFlags.Passive, \"touchend\", SyntheticTouchEvent),\n    touchmove: new NativeEventDispatcher<SyntheticEventClass<TouchEvent, SyntheticTouchEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles | NativeEventDispatcherFlags.Passive, \"touchmove\", SyntheticTouchEvent),\n    touchstart: new NativeEventDispatcher<SyntheticEventClass<TouchEvent, SyntheticTouchEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles | NativeEventDispatcherFlags.Passive, \"touchstart\", SyntheticTouchEvent),\n    unload: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture, \"unload\", SyntheticEvent),\n    volumechange: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture, \"volumechange\", SyntheticEvent),\n    waiting: new NativeEventDispatcher<SyntheticEventClass<Event, SyntheticEvent<Event>>>(NativeEventDispatcherFlags.Capture, \"waiting\", SyntheticEvent),\n    wheel: new NativeEventDispatcher<SyntheticEventClass<WheelEvent, SyntheticWheelEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles | NativeEventDispatcherFlags.Passive, \"wheel\", SyntheticWheelEvent),\n};\n\nexport interface NativeActiveEventDispatchersList {\n    mousedown: NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>;\n    mouseenter: NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>;\n    mouseleave: NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>;\n    mousemove: NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>;\n    mouseout: NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>;\n    mouseover: NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>;\n    mouseup: NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>;\n    scroll: NativeEventDispatcher<SyntheticEventClass<UIEvent, SyntheticUIEvent<UIEvent>>>;\n    touchcancel: NativeEventDispatcher<SyntheticEventClass<TouchEvent, SyntheticTouchEvent>>;\n    touchend: NativeEventDispatcher<SyntheticEventClass<TouchEvent, SyntheticTouchEvent>>;\n    touchmove: NativeEventDispatcher<SyntheticEventClass<TouchEvent, SyntheticTouchEvent>>;\n    touchstart: NativeEventDispatcher<SyntheticEventClass<TouchEvent, SyntheticTouchEvent>>;\n    wheel: NativeEventDispatcher<SyntheticEventClass<WheelEvent, SyntheticWheelEvent>>;\n}\n\nexport const NativeActiveEventDispatchers = {\n    mousedown: new NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"mousedown\", SyntheticMouseEvent),\n    mouseenter: new NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>(NativeEventDispatcherFlags.Capture, \"mouseenter\", SyntheticMouseEvent),\n    mouseleave: new NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>(NativeEventDispatcherFlags.Capture, \"mouseleave\", SyntheticMouseEvent),\n    mousemove: new NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"mousemove\", SyntheticMouseEvent),\n    mouseout: new NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"mouseout\", SyntheticMouseEvent),\n    mouseover: new NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"mouseover\", SyntheticMouseEvent),\n    mouseup: new NativeEventDispatcher<SyntheticEventClass<MouseEvent, SyntheticMouseEvent<MouseEvent>>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"mouseup\", SyntheticMouseEvent),\n    scroll: new NativeEventDispatcher<SyntheticEventClass<UIEvent, SyntheticUIEvent<UIEvent>>>(NativeEventDispatcherFlags.Capture, \"scroll\", SyntheticUIEvent),\n    touchcancel: new NativeEventDispatcher<SyntheticEventClass<TouchEvent, SyntheticTouchEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"touchcancel\", SyntheticTouchEvent),\n    touchend: new NativeEventDispatcher<SyntheticEventClass<TouchEvent, SyntheticTouchEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"touchend\", SyntheticTouchEvent),\n    touchmove: new NativeEventDispatcher<SyntheticEventClass<TouchEvent, SyntheticTouchEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"touchmove\", SyntheticTouchEvent),\n    touchstart: new NativeEventDispatcher<SyntheticEventClass<TouchEvent, SyntheticTouchEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"touchstart\", SyntheticTouchEvent),\n    wheel: new NativeEventDispatcher<SyntheticEventClass<WheelEvent, SyntheticWheelEvent>>(NativeEventDispatcherFlags.Capture | NativeEventDispatcherFlags.Bubbles, \"wheel\", SyntheticWheelEvent),\n};\n\n/**\n * Events.\n */\nexport const Events = {\n    onAbort: function createAbortEventHandler(\n        handler: (ev: SyntheticUIEvent<UIEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticUIEvent<UIEvent>> {\n        return createEventHandler<SyntheticUIEvent<UIEvent>>(NativeEventDispatchers.abort, handler, capture);\n    },\n    onActivate: function createActivateEventHandler(\n        handler: (ev: SyntheticUIEvent<UIEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticUIEvent<UIEvent>> {\n        return createEventHandler<SyntheticUIEvent<UIEvent>>(NativeEventDispatchers.activate, handler, capture);\n    },\n    onAriaRequest: function createAriarequestEventHandler(\n        handler: (ev: SyntheticAriaRequestEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticAriaRequestEvent> {\n        return createEventHandler<SyntheticAriaRequestEvent>(NativeEventDispatchers.ariarequest, handler, capture);\n    },\n    onBeforeActivate: function createBeforeactivateEventHandler(\n        handler: (ev: SyntheticUIEvent<UIEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticUIEvent<UIEvent>> {\n        return createEventHandler<SyntheticUIEvent<UIEvent>>(NativeEventDispatchers.beforeactivate, handler, capture);\n    },\n    onBeforeCopy: function createBeforecopyEventHandler(\n        handler: (ev: SyntheticClipboardEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticClipboardEvent> {\n        return createEventHandler<SyntheticClipboardEvent>(NativeEventDispatchers.beforecopy, handler, capture);\n    },\n    onBeforeCut: function createBeforecutEventHandler(\n        handler: (ev: SyntheticClipboardEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticClipboardEvent> {\n        return createEventHandler<SyntheticClipboardEvent>(NativeEventDispatchers.beforecut, handler, capture);\n    },\n    onBeforeDeactivate: function createBeforedeactivateEventHandler(\n        handler: (ev: SyntheticUIEvent<UIEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticUIEvent<UIEvent>> {\n        return createEventHandler<SyntheticUIEvent<UIEvent>>(NativeEventDispatchers.beforedeactivate, handler, capture);\n    },\n    onBeforePaste: function createBeforepasteEventHandler(\n        handler: (ev: SyntheticClipboardEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticClipboardEvent> {\n        return createEventHandler<SyntheticClipboardEvent>(NativeEventDispatchers.beforepaste, handler, capture);\n    },\n    onBlur: function createBlurEventHandler(\n        handler: (ev: SyntheticFocusEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticFocusEvent> {\n        return createEventHandler<SyntheticFocusEvent>(NativeEventDispatchers.blur, handler, capture);\n    },\n    onCanPlay: function createCanplayEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.canplay, handler, capture);\n    },\n    onCanPlaythrough: function createCanplaythroughEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.canplaythrough, handler, capture);\n    },\n    onChange: function createChangeEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.change, handler, capture);\n    },\n    onClick: function createClickEventHandler(\n        handler: (ev: SyntheticMouseEvent<MouseEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticMouseEvent<MouseEvent>> {\n        return createEventHandler<SyntheticMouseEvent<MouseEvent>>(NativeEventDispatchers.click, handler, capture);\n    },\n    onContextMenu: function createContextmenuEventHandler(\n        handler: (ev: SyntheticPointerEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticPointerEvent> {\n        return createEventHandler<SyntheticPointerEvent>(NativeEventDispatchers.contextmenu, handler, capture);\n    },\n    onCopy: function createCopyEventHandler(\n        handler: (ev: SyntheticClipboardEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticClipboardEvent> {\n        return createEventHandler<SyntheticClipboardEvent>(NativeEventDispatchers.copy, handler, capture);\n    },\n    onCueChange: function createCuechangeEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.cuechange, handler, capture);\n    },\n    onCut: function createCutEventHandler(\n        handler: (ev: SyntheticClipboardEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticClipboardEvent> {\n        return createEventHandler<SyntheticClipboardEvent>(NativeEventDispatchers.cut, handler, capture);\n    },\n    onDoubleClick: function createDblclickEventHandler(\n        handler: (ev: SyntheticMouseEvent<MouseEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticMouseEvent<MouseEvent>> {\n        return createEventHandler<SyntheticMouseEvent<MouseEvent>>(NativeEventDispatchers.dblclick, handler, capture);\n    },\n    onDeactivate: function createDeactivateEventHandler(\n        handler: (ev: SyntheticUIEvent<UIEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticUIEvent<UIEvent>> {\n        return createEventHandler<SyntheticUIEvent<UIEvent>>(NativeEventDispatchers.deactivate, handler, capture);\n    },\n    onDrag: function createDragEventHandler(\n        handler: (ev: SyntheticDragEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticDragEvent> {\n        return createEventHandler<SyntheticDragEvent>(NativeEventDispatchers.drag, handler, capture);\n    },\n    onDragEnd: function createDragendEventHandler(\n        handler: (ev: SyntheticDragEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticDragEvent> {\n        return createEventHandler<SyntheticDragEvent>(NativeEventDispatchers.dragend, handler, capture);\n    },\n    onDragEnter: function createDragenterEventHandler(\n        handler: (ev: SyntheticDragEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticDragEvent> {\n        return createEventHandler<SyntheticDragEvent>(NativeEventDispatchers.dragenter, handler, capture);\n    },\n    onDragLeave: function createDragleaveEventHandler(\n        handler: (ev: SyntheticDragEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticDragEvent> {\n        return createEventHandler<SyntheticDragEvent>(NativeEventDispatchers.dragleave, handler, capture);\n    },\n    onDragOver: function createDragoverEventHandler(\n        handler: (ev: SyntheticDragEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticDragEvent> {\n        return createEventHandler<SyntheticDragEvent>(NativeEventDispatchers.dragover, handler, capture);\n    },\n    onDragStart: function createDragstartEventHandler(\n        handler: (ev: SyntheticDragEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticDragEvent> {\n        return createEventHandler<SyntheticDragEvent>(NativeEventDispatchers.dragstart, handler, capture);\n    },\n    onDrop: function createDropEventHandler(\n        handler: (ev: SyntheticDragEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticDragEvent> {\n        return createEventHandler<SyntheticDragEvent>(NativeEventDispatchers.drop, handler, capture);\n    },\n    onDurationChange: function createDurationchangeEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.durationchange, handler, capture);\n    },\n    onEmptied: function createEmptiedEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.emptied, handler, capture);\n    },\n    onEncrypted: function createEncryptedEventHandler(\n        handler: (ev: SyntheticMediaEncryptedEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticMediaEncryptedEvent> {\n        return createEventHandler<SyntheticMediaEncryptedEvent>(NativeEventDispatchers.encrypted, handler, capture);\n    },\n    onEnded: function createEndedEventHandler(\n        handler: (ev: SyntheticMediaStreamErrorEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticMediaStreamErrorEvent> {\n        return createEventHandler<SyntheticMediaStreamErrorEvent>(NativeEventDispatchers.ended, handler, capture);\n    },\n    onError: function createErrorEventHandler(\n        handler: (ev: SyntheticErrorEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticErrorEvent> {\n        return createEventHandler<SyntheticErrorEvent>(NativeEventDispatchers.error, handler, capture);\n    },\n    onFocus: function createFocusEventHandler(\n        handler: (ev: SyntheticFocusEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticFocusEvent> {\n        return createEventHandler<SyntheticFocusEvent>(NativeEventDispatchers.focus, handler, capture);\n    },\n    onGotPointerCapture: function createGotpointercaptureEventHandler(\n        handler: (ev: SyntheticPointerEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticPointerEvent> {\n        return createEventHandler<SyntheticPointerEvent>(NativeEventDispatchers.gotpointercapture, handler, capture);\n    },\n    onInput: function createInputEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.input, handler, capture);\n    },\n    onInvalid: function createInvalidEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.invalid, handler, capture);\n    },\n    onKeyDown: function createKeydownEventHandler(\n        handler: (ev: SyntheticKeyboardEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticKeyboardEvent> {\n        return createEventHandler<SyntheticKeyboardEvent>(NativeEventDispatchers.keydown, handler, capture);\n    },\n    onKeyPress: function createKeypressEventHandler(\n        handler: (ev: SyntheticKeyboardEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticKeyboardEvent> {\n        return createEventHandler<SyntheticKeyboardEvent>(NativeEventDispatchers.keypress, handler, capture);\n    },\n    onKeyUp: function createKeyupEventHandler(\n        handler: (ev: SyntheticKeyboardEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticKeyboardEvent> {\n        return createEventHandler<SyntheticKeyboardEvent>(NativeEventDispatchers.keyup, handler, capture);\n    },\n    onLoad: function createLoadEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.load, handler, capture);\n    },\n    onLoadedData: function createLoadeddataEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.loadeddata, handler, capture);\n    },\n    onLoadedMetadata: function createLoadedmetadataEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.loadedmetadata, handler, capture);\n    },\n    onLoadStart: function createLoadstartEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.loadstart, handler, capture);\n    },\n    onLostPointerCapture: function createLostpointercaptureEventHandler(\n        handler: (ev: SyntheticPointerEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticPointerEvent> {\n        return createEventHandler<SyntheticPointerEvent>(NativeEventDispatchers.lostpointercapture, handler, capture);\n    },\n    onMouseDown: function createMousedownEventHandler(\n        handler: (ev: SyntheticMouseEvent<MouseEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticMouseEvent<MouseEvent>> {\n        return createEventHandler<SyntheticMouseEvent<MouseEvent>>(NativeEventDispatchers.mousedown, handler, capture);\n    },\n    onMouseEnter: function createMouseenterEventHandler(\n        handler: (ev: SyntheticMouseEvent<MouseEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticMouseEvent<MouseEvent>> {\n        return createEventHandler<SyntheticMouseEvent<MouseEvent>>(NativeEventDispatchers.mouseenter, handler, capture);\n    },\n    onMouseLeave: function createMouseleaveEventHandler(\n        handler: (ev: SyntheticMouseEvent<MouseEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticMouseEvent<MouseEvent>> {\n        return createEventHandler<SyntheticMouseEvent<MouseEvent>>(NativeEventDispatchers.mouseleave, handler, capture);\n    },\n    onMouseMove: function createMousemoveEventHandler(\n        handler: (ev: SyntheticMouseEvent<MouseEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticMouseEvent<MouseEvent>> {\n        return createEventHandler<SyntheticMouseEvent<MouseEvent>>(NativeEventDispatchers.mousemove, handler, capture);\n    },\n    onMouseOut: function createMouseoutEventHandler(\n        handler: (ev: SyntheticMouseEvent<MouseEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticMouseEvent<MouseEvent>> {\n        return createEventHandler<SyntheticMouseEvent<MouseEvent>>(NativeEventDispatchers.mouseout, handler, capture);\n    },\n    onMouseOver: function createMouseoverEventHandler(\n        handler: (ev: SyntheticMouseEvent<MouseEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticMouseEvent<MouseEvent>> {\n        return createEventHandler<SyntheticMouseEvent<MouseEvent>>(NativeEventDispatchers.mouseover, handler, capture);\n    },\n    onMouseUp: function createMouseupEventHandler(\n        handler: (ev: SyntheticMouseEvent<MouseEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticMouseEvent<MouseEvent>> {\n        return createEventHandler<SyntheticMouseEvent<MouseEvent>>(NativeEventDispatchers.mouseup, handler, capture);\n    },\n    onPaste: function createPasteEventHandler(\n        handler: (ev: SyntheticClipboardEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticClipboardEvent> {\n        return createEventHandler<SyntheticClipboardEvent>(NativeEventDispatchers.paste, handler, capture);\n    },\n    onPause: function createPauseEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.pause, handler, capture);\n    },\n    onPlay: function createPlayEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.play, handler, capture);\n    },\n    onPlaying: function createPlayingEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.playing, handler, capture);\n    },\n    onPointerCancel: function createPointercancelEventHandler(\n        handler: (ev: SyntheticPointerEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticPointerEvent> {\n        return createEventHandler<SyntheticPointerEvent>(NativeEventDispatchers.pointercancel, handler, capture);\n    },\n    onPointerDown: function createPointerdownEventHandler(\n        handler: (ev: SyntheticPointerEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticPointerEvent> {\n        return createEventHandler<SyntheticPointerEvent>(NativeEventDispatchers.pointerdown, handler, capture);\n    },\n    onPointerEnter: function createPointerenterEventHandler(\n        handler: (ev: SyntheticPointerEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticPointerEvent> {\n        return createEventHandler<SyntheticPointerEvent>(NativeEventDispatchers.pointerenter, handler, capture);\n    },\n    onPointerLeave: function createPointerleaveEventHandler(\n        handler: (ev: SyntheticPointerEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticPointerEvent> {\n        return createEventHandler<SyntheticPointerEvent>(NativeEventDispatchers.pointerleave, handler, capture);\n    },\n    onPointerMove: function createPointermoveEventHandler(\n        handler: (ev: SyntheticPointerEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticPointerEvent> {\n        return createEventHandler<SyntheticPointerEvent>(NativeEventDispatchers.pointermove, handler, capture);\n    },\n    onPointerOut: function createPointeroutEventHandler(\n        handler: (ev: SyntheticPointerEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticPointerEvent> {\n        return createEventHandler<SyntheticPointerEvent>(NativeEventDispatchers.pointerout, handler, capture);\n    },\n    onPointerOver: function createPointeroverEventHandler(\n        handler: (ev: SyntheticPointerEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticPointerEvent> {\n        return createEventHandler<SyntheticPointerEvent>(NativeEventDispatchers.pointerover, handler, capture);\n    },\n    onPointerUp: function createPointerupEventHandler(\n        handler: (ev: SyntheticPointerEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticPointerEvent> {\n        return createEventHandler<SyntheticPointerEvent>(NativeEventDispatchers.pointerup, handler, capture);\n    },\n    onProgress: function createProgressEventHandler(\n        handler: (ev: SyntheticProgressEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticProgressEvent> {\n        return createEventHandler<SyntheticProgressEvent>(NativeEventDispatchers.progress, handler, capture);\n    },\n    onRateChange: function createRatechangeEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.ratechange, handler, capture);\n    },\n    onReset: function createResetEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.reset, handler, capture);\n    },\n    onScroll: function createScrollEventHandler(\n        handler: (ev: SyntheticUIEvent<UIEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticUIEvent<UIEvent>> {\n        return createEventHandler<SyntheticUIEvent<UIEvent>>(NativeEventDispatchers.scroll, handler, capture);\n    },\n    onSeeked: function createSeekedEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.seeked, handler, capture);\n    },\n    onSeeking: function createSeekingEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.seeking, handler, capture);\n    },\n    onSelect: function createSelectEventHandler(\n        handler: (ev: SyntheticUIEvent<UIEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticUIEvent<UIEvent>> {\n        return createEventHandler<SyntheticUIEvent<UIEvent>>(NativeEventDispatchers.select, handler, capture);\n    },\n    onSelectStart: function createSelectstartEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.selectstart, handler, capture);\n    },\n    onStalled: function createStalledEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.stalled, handler, capture);\n    },\n    onSubmit: function createSubmitEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.submit, handler, capture);\n    },\n    onSuspend: function createSuspendEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.suspend, handler, capture);\n    },\n    onTimeUpdate: function createTimeupdateEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.timeupdate, handler, capture);\n    },\n    onTouchCancel: function createTouchcancelEventHandler(\n        handler: (ev: SyntheticTouchEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticTouchEvent> {\n        return createEventHandler<SyntheticTouchEvent>(NativeEventDispatchers.touchcancel, handler, capture);\n    },\n    onTouchEnd: function createTouchendEventHandler(\n        handler: (ev: SyntheticTouchEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticTouchEvent> {\n        return createEventHandler<SyntheticTouchEvent>(NativeEventDispatchers.touchend, handler, capture);\n    },\n    onTouchMove: function createTouchmoveEventHandler(\n        handler: (ev: SyntheticTouchEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticTouchEvent> {\n        return createEventHandler<SyntheticTouchEvent>(NativeEventDispatchers.touchmove, handler, capture);\n    },\n    onTouchStart: function createTouchstartEventHandler(\n        handler: (ev: SyntheticTouchEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticTouchEvent> {\n        return createEventHandler<SyntheticTouchEvent>(NativeEventDispatchers.touchstart, handler, capture);\n    },\n    onUnload: function createUnloadEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.unload, handler, capture);\n    },\n    onVolumeChange: function createVolumechangeEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.volumechange, handler, capture);\n    },\n    onWaiting: function createWaitingEventHandler(\n        handler: (ev: SyntheticEvent<Event>) => void,\n        capture = false,\n    ): EventHandler<SyntheticEvent<Event>> {\n        return createEventHandler<SyntheticEvent<Event>>(NativeEventDispatchers.waiting, handler, capture);\n    },\n    onWheel: function createWheelEventHandler(\n        handler: (ev: SyntheticWheelEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticWheelEvent> {\n        return createEventHandler<SyntheticWheelEvent>(NativeEventDispatchers.wheel, handler, capture);\n    },\n};\n\n/**\n * List of Events with disabled passive flag.\n */\nexport const ActiveEvents = {\n    onScroll: function createScrollEventHandler(\n        handler: (ev: SyntheticUIEvent<UIEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticUIEvent<UIEvent>> {\n        return createEventHandler<SyntheticUIEvent<UIEvent>>(NativeActiveEventDispatchers.scroll, handler, capture);\n    },\n    onMouseDown: function createMousedownEventHandler(\n        handler: (ev: SyntheticMouseEvent<MouseEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticMouseEvent<MouseEvent>> {\n        return createEventHandler<SyntheticMouseEvent<MouseEvent>>(NativeActiveEventDispatchers.mousedown, handler, capture);\n    },\n    onMouseEnter: function createMouseenterEventHandler(\n        handler: (ev: SyntheticMouseEvent<MouseEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticMouseEvent<MouseEvent>> {\n        return createEventHandler<SyntheticMouseEvent<MouseEvent>>(NativeActiveEventDispatchers.mouseenter, handler, capture);\n    },\n    onMouseLeave: function createMouseleaveEventHandler(\n        handler: (ev: SyntheticMouseEvent<MouseEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticMouseEvent<MouseEvent>> {\n        return createEventHandler<SyntheticMouseEvent<MouseEvent>>(NativeActiveEventDispatchers.mouseleave, handler, capture);\n    },\n    onMouseMove: function createMousemoveEventHandler(\n        handler: (ev: SyntheticMouseEvent<MouseEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticMouseEvent<MouseEvent>> {\n        return createEventHandler<SyntheticMouseEvent<MouseEvent>>(NativeActiveEventDispatchers.mousemove, handler, capture);\n    },\n    onMouseOut: function createMouseoutEventHandler(\n        handler: (ev: SyntheticMouseEvent<MouseEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticMouseEvent<MouseEvent>> {\n        return createEventHandler<SyntheticMouseEvent<MouseEvent>>(NativeActiveEventDispatchers.mouseout, handler, capture);\n    },\n    onMouseOver: function createMouseoverEventHandler(\n        handler: (ev: SyntheticMouseEvent<MouseEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticMouseEvent<MouseEvent>> {\n        return createEventHandler<SyntheticMouseEvent<MouseEvent>>(NativeActiveEventDispatchers.mouseover, handler, capture);\n    },\n    onMouseUp: function createMouseupEventHandler(\n        handler: (ev: SyntheticMouseEvent<MouseEvent>) => void,\n        capture = false,\n    ): EventHandler<SyntheticMouseEvent<MouseEvent>> {\n        return createEventHandler<SyntheticMouseEvent<MouseEvent>>(NativeActiveEventDispatchers.mouseup, handler, capture);\n    },\n    onTouchCancel: function createTouchcancelEventHandler(\n        handler: (ev: SyntheticTouchEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticTouchEvent> {\n        return createEventHandler<SyntheticTouchEvent>(NativeActiveEventDispatchers.touchcancel, handler, capture);\n    },\n    onTouchEnd: function createTouchendEventHandler(\n        handler: (ev: SyntheticTouchEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticTouchEvent> {\n        return createEventHandler<SyntheticTouchEvent>(NativeActiveEventDispatchers.touchend, handler, capture);\n    },\n    onTouchMove: function createTouchmoveEventHandler(\n        handler: (ev: SyntheticTouchEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticTouchEvent> {\n        return createEventHandler<SyntheticTouchEvent>(NativeActiveEventDispatchers.touchmove, handler, capture);\n    },\n    onTouchStart: function createTouchstartEventHandler(\n        handler: (ev: SyntheticTouchEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticTouchEvent> {\n        return createEventHandler<SyntheticTouchEvent>(NativeActiveEventDispatchers.touchstart, handler, capture);\n    },\n    onWheel: function createWheelEventHandler(\n        handler: (ev: SyntheticWheelEvent) => void,\n        capture = false,\n    ): EventHandler<SyntheticWheelEvent> {\n        return createEventHandler<SyntheticWheelEvent>(NativeActiveEventDispatchers.wheel, handler, capture);\n    },\n};\n/* tslint:enable:max-line-length */\n","import { USER_AGENT, UserAgentFlags } from \"../common/user_agent\";\nimport { NOOP } from \"../common/noop\";\nimport { nextFrame, syncFrameUpdate } from \"../scheduler/frame\";\nimport { Context, ROOT_CONTEXT } from \"./context\";\nimport { VNodeFlags, SyncFlags } from \"./flags\";\nimport { VNode } from \"./vnode\";\nimport { Component, getDOMInstanceFromComponent } from \"./component\";\nimport { renderVNode, syncVNode, removeVNode, augmentVNode } from \"./implementation\";\n\n/**\n * Root.\n */\nexport interface Root {\n    container: Element;\n    currentVNode: VNode<any> | null;\n    currentContext: Context | null;\n    newVNode: VNode<any> | null;\n    newContext: Context | null;\n    domNode: Node | null;\n    invalidated: boolean;\n    syncFlags: SyncFlags;\n}\n\nexport const ROOTS = [] as Root[];\n\n/**\n * Find Root node in container.\n *\n * @param container DOM Node that contains root node.\n * @returns root node or undefined when root node doesn't exist.\n */\nexport function findRoot(container: Element): Root | undefined {\n    for (let i = 0; i < ROOTS.length; i++) {\n        const r = ROOTS[i];\n        if (r.container === container) {\n            return r;\n        }\n    }\n\n    return;\n}\n\n/**\n * Fix for the Mouse Event bubbling on iOS devices.\n *\n * #quirks\n *\n * http://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\n */\nfunction iOSFixEventBubbling(container: Element): void {\n    if (USER_AGENT & UserAgentFlags.iOS) {\n        (container as HTMLElement).onclick = NOOP;\n    }\n}\n\n/**\n * Render VNode into container.\n *\n * @param root Root data.\n * @returns rendered Node.\n */\nfunction _render(root: Root): void {\n    const currentVNode = root.currentVNode;\n    const newVNode = root.newVNode;\n    const newContext = root.newContext;\n\n    if (newVNode) {\n        let instance;\n        if (currentVNode) {\n            const syncFlags = root.currentContext === newContext ?\n                root.syncFlags :\n                root.syncFlags | SyncFlags.DirtyContext;\n            instance = syncVNode(root.container, currentVNode, newVNode, root.newContext!, syncFlags);\n        } else {\n            instance = renderVNode(root.container, null, newVNode!, root.newContext!);\n            iOSFixEventBubbling(root.container);\n        }\n        root.currentVNode = newVNode;\n        root.currentContext = newContext;\n        root.domNode = (newVNode._flags & VNodeFlags.ComponentClass) ?\n            getDOMInstanceFromComponent(instance as Component<any>) :\n            instance as Node;\n    } else if (currentVNode) {\n        removeVNode(root.container, currentVNode);\n        const last = ROOTS.pop();\n        if (last !== root && ROOTS.length) {\n            ROOTS[ROOTS.indexOf(root)] = last!;\n        }\n    }\n\n    root.newVNode = null;\n    root.newContext = null;\n    root.invalidated = false;\n    root.syncFlags = 0;\n}\n\n/**\n * Render VNode into container.\n *\n * @param node VNode to render.\n * @param container DOM Node that will contain rendered node.\n * @param syncFlags Sync Flags.\n * @param context root context, all root contexts should be created from the `ROOT_CONTEXT` instance.\n */\nexport function render(\n    node: VNode<any> | null,\n    container: Element,\n    syncFlags: SyncFlags = 0,\n    context: Context = ROOT_CONTEXT,\n): void {\n    renderNextFrame(node, container, syncFlags, context);\n    syncFrameUpdate();\n}\n\n/**\n * Render VNode into container on the next frame.\n *\n * @param node VNode to render.\n * @param container DOM Node that will contain rendered node.\n * @param syncFlags Sync Flags.\n * @param context root context, all root contexts should be created from the `ROOT_CONTEXT` instance.\n */\nexport function renderNextFrame(\n    node: VNode<any> | null,\n    container: Element,\n    syncFlags: SyncFlags = 0,\n    context: Context = ROOT_CONTEXT,\n): void {\n    if (__IVI_DEV__) {\n        if (container === document.body) {\n            throw new Error(\"Rendering in the <body> aren't allowed, create an element inside body that will contain \" +\n                \"your application.\");\n        }\n        if (!document.body.contains(container)) {\n            throw new Error(\"Container element should be attached to the document.\");\n        }\n    }\n\n    let root = findRoot(container);\n    if (root) {\n        root.newVNode = node;\n        root.newContext = context;\n    } else {\n        root = {\n            container: container,\n            currentVNode: null,\n            currentContext: null,\n            newVNode: node,\n            newContext: context,\n            domNode: null,\n            invalidated: false,\n            syncFlags: syncFlags,\n        };\n        ROOTS.push(root);\n    }\n    if (!root.invalidated) {\n        root.invalidated = true;\n        nextFrame().write(function () {\n            if (root!.invalidated) {\n                _render(root!);\n            }\n        });\n    }\n}\n\n/**\n * Augment existing DOM tree with a Virtual DOM tree.\n *\n * Augmentation is separated from `render` function to reduce code size when web application doesn't use augmentation.\n * Optimizing javascript compiler should remove all code associated with augmentation when it isn't used.\n *\n * @param node Root VNode.\n * @param container Container DOM Node.\n * @param context root context, all root contexts should be created from the `ROOT_CONTEXT` instance.\n */\nexport function augment(node: VNode<any> | null, container: Element, context: Context = ROOT_CONTEXT): void {\n    if (__IVI_DEV__) {\n        if (container === document.body) {\n            throw new Error(\"Rendering in the <body> aren't allowed, create an element inside body that will contain \" +\n                \"your application.\");\n        }\n        if (!document.body.contains(container)) {\n            throw new Error(\"Container element should be attached to the document.\");\n        }\n\n        if (findRoot(container)) {\n            throw new Error(\"Failed to augment, container is associated with a Virtual DOM.\");\n        }\n    }\n\n    if (node) {\n        ROOTS.push({\n            container: container,\n            currentVNode: node,\n            currentContext: context,\n            newVNode: null,\n            newContext: null,\n            domNode: container.firstChild!,\n            invalidated: false,\n            syncFlags: 0,\n        });\n\n        nextFrame().write(function augment() {\n            augmentVNode(container, container.firstChild!, node, context);\n            iOSFixEventBubbling(container);\n        });\n\n        syncFrameUpdate();\n    }\n}\n","import { renderNextFrame, $c } from \"ivi\";\nimport { AppLocation, setLocation } from \"./state\";\nimport { App } from \"./ui/app\";\nimport { setUpdateFunction } from \"./xs\";\n\nexport type RouteHandler = (params?: string[]) => void;\n\nexport class Route {\n    path: RegExp | string;\n    handler: RouteHandler;\n\n    constructor(path: RegExp | string, handler: RouteHandler) {\n        this.path = path;\n        this.handler = handler;\n    }\n}\n\nfunction routeDispatch(routes: Route[], path: string): boolean {\n    if (path !== \"\" && path[0] === \"#\") {\n        if (path[1] === \"!\") {\n            path = path.substr(2);\n        } else {\n            return false;\n        }\n    }\n\n    for (let i = 0; i < routes.length; i++) {\n        const r = routes[i];\n        const p = r.path;\n        if (typeof p === \"string\") {\n            if (path === p) {\n                r.handler();\n                return true;\n            }\n        } else {\n            const match = path.match(p);\n            if (match) {\n                if (match.length > 1) {\n                    r.handler(match.slice(1));\n                } else {\n                    r.handler();\n                }\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\nexport function initRouter(routes: Route[], defaultPath = \"\", notFound?: () => void): void {\n    const l = location;\n    let prevHash = decodeURIComponent(l.hash);\n    if (prevHash === \"\") {\n        l.hash = prevHash = \"#!\" + defaultPath;\n    }\n\n    window.addEventListener(\"hashchange\", () => {\n        const newHash = decodeURIComponent(l.hash);\n        if (newHash === \"\") {\n            l.hash = prevHash = \"#!\" + defaultPath;\n        }\n        if (prevHash !== newHash) {\n            prevHash = newHash;\n            if (!routeDispatch(routes, newHash)) {\n                if (notFound !== undefined) {\n                    notFound();\n                }\n            }\n        }\n    });\n\n    if (!routeDispatch(routes, prevHash)) {\n        if (notFound !== undefined) {\n            notFound();\n        }\n    }\n}\n\nconst container = document.getElementById(\"todoapp\") !;\n\ninitRouter([\n    new Route(\"/completed\", () => {\n        setLocation(AppLocation.ShowCompleted);\n    }),\n    new Route(\"/active\", () => {\n        setLocation(AppLocation.ShowActive);\n    }),\n    new Route(\"/\", () => {\n        setLocation(AppLocation.ShowAll);\n    }),\n]);\n\nsetUpdateFunction(update);\nfunction update() {\n    renderNextFrame($c(App), container!);\n}\nupdate();\n","import { scheduleMicrotask, NOOP } from \"ivi\";\n\nlet pending = false;\nlet update = NOOP;\n\nfunction _update() {\n    update();\n    pending = false;\n}\n\nfunction invalidate() {\n    if (!pending) {\n        pending = true;\n        scheduleMicrotask(_update);\n    }\n}\n\nexport function setUpdateFunction(fn: () => void) {\n    update = fn;\n}\n\nexport function createAction<P>(fn: () => void): () => void;\nexport function createAction<P>(fn: (payload: P) => void): (payload: P) => void;\nexport function createAction<P>(fn: (payload?: P) => void): (payload?: P) => void {\n    return function (payload?: P) {\n        fn(payload);\n        invalidate();\n    };\n}\n","import { createAction } from \"./xs\";\n\nexport const enum AppLocation {\n    ShowAll = 0,\n    ShowActive = 1,\n    ShowCompleted = 2,\n};\n\nexport class Entry {\n    id: string;\n    title: string;\n    completed: boolean;\n\n    constructor(id: number, title: string, completed: boolean) {\n        this.id = id.toString();\n        this.title = title;\n        this.completed = completed;\n    }\n}\n\nexport class AppState {\n    location = AppLocation.ShowAll;\n    entries: Entry[] = [];\n\n    nextEntryId = 0;\n}\n\nexport const state = new AppState();\n\nexport const setLocation = createAction((v: AppLocation) => {\n    state.location = v;\n});\n\nexport const addEntry = createAction((title: string) => {\n    title = title.trim();\n    if (title !== \"\") {\n        state.entries.push(new Entry(state.nextEntryId++, title, false));\n    }\n});\n\nexport const removeEntry = createAction((entry: Entry) => {\n    const items = state.entries;\n\n    for (let i = 0; i < items.length; i++) {\n        const item = items[i];\n        if (item === entry) {\n            items.splice(i, 1);\n            return;\n        }\n    }\n});\n\nexport const updateTitle = createAction((data: { entry: Entry, newTitle: string }) => {\n    data.newTitle = data.newTitle.trim();\n    if (data.newTitle === \"\") {\n        removeEntry(data.entry);\n    } else {\n        data.entry.title = data.newTitle;\n    }\n});\n\nexport const toggleAll = createAction((checked: boolean) => {\n    state.entries.forEach((e) => {\n        e.completed = checked;\n    });\n});\n\nexport const toggleEntry = createAction((entry: Entry) => {\n    entry.completed = !entry.completed;\n});\n\nexport const clearCompleted = createAction(() => {\n    const items = state.entries;\n    const newItems: Entry[] = [];\n    for (let i = 0; i < items.length; i++) {\n        const item = items[i];\n        if (!item.completed) {\n            newItems.push(item);\n        }\n    }\n    state.entries = newItems;\n});\n","import { Component, Events, $h, $i, KeyCode } from \"ivi\";\nimport { addEntry } from \"../state\";\n\nexport class Header extends Component<null> {\n    private inputValue: string = \"\";\n\n    private onKeyDown = Events.onKeyDown((ev) => {\n        if (ev.keyCode === KeyCode.Enter) {\n            addEntry(this.inputValue);\n            this.inputValue = \"\";\n            this.invalidate();\n        }\n    });\n\n    private onInput = Events.onInput((ev) => {\n        this.inputValue = (ev.target as HTMLInputElement).value;\n        this.invalidate();\n    });\n\n    render() {\n        return $h(\"header\")\n            .children([\n                $h(\"h1\").children(\"todos\"),\n                $i(\"text\")\n                    .props({\n                        \"id\": \"new-todo\",\n                        \"placeholder\": \"What needs to be done\",\n                        \"autofocus\": true,\n                    })\n                    .events({\n                        keyDown: this.onKeyDown,\n                        input: this.onInput,\n                    })\n                    .value(this.inputValue),\n            ]);\n    }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\nexport function __extends(d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n};\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n};\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n};\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator.throw(value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments)).next());\r\n    });\r\n};\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t;\r\n    return { next: verb(0), \"throw\": verb(1), \"return\": verb(2) };\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};","import { Component, Events, $h } from \"ivi\";\nimport { AppLocation, state, clearCompleted } from \"../state\";\n\nexport class Footer extends Component<{\n    activeEntries: number,\n    completedEntries: number,\n}> {\n    onClickClearCompleted = Events.onClick((ev) => {\n        ev.preventDefault();\n        clearCompleted();\n    });\n\n    render() {\n        const location = state.location;\n        const { activeEntries, completedEntries } = this.props;\n\n        return $h(\"footer\").props({ id: \"footer\" })\n            .children([\n                $h(\"ul\").props({ \"id\": \"filters\" }).children([\n                    $h(\"li\").children($h(\"a\", location === AppLocation.ShowAll ? \"selected\" : undefined)\n                        .props({ \"href\": \"#!/\" }).children(\"All\")),\n                    \" \",\n                    $h(\"li\").children($h(\"a\", location === AppLocation.ShowActive ? \"selected\" : undefined)\n                        .props({ \"href\": \"#!/active\" }).children(\"Active\")),\n                    \" \",\n                    $h(\"li\").children($h(\"a\", location === AppLocation.ShowCompleted ? \"selected\" : undefined)\n                        .props({ \"href\": \"#!/completed\" }).children(\"Completed\")),\n                ]),\n                $h(\"span\").props({ \"id\": \"todo-count\" }).children([\n                    $h(\"strong\").children(activeEntries),\n                    (activeEntries > 1) ? \" items left\" : \" item left\",\n                ]),\n                (completedEntries > 0) ?\n                    $h(\"button\")\n                        .props({ \"id\": \"clear-completed\" })\n                        .events({ click: this.onClickClearCompleted })\n                        .children(`Clear completed (${completedEntries})`) :\n                    null,\n            ]);\n    }\n}\n","import { Component, Events, $h, $i, $c } from \"ivi\";\nimport { state, toggleAll } from \"../state\";\nimport { EntryList } from \"./entry_list\";\n\nexport class Main extends Component<{\n    activeEntries: number,\n    completedEntries: number,\n}> {\n    private onChange = Events.onChange((ev) => {\n        ev.preventDefault();\n        toggleAll(this.props.completedEntries !== state.entries.length);\n    });\n\n    render() {\n        return $h(\"section\").props({ \"id\": \"main\" })\n            .children([\n                $i(\"checkbox\")\n                    .props({ \"id\": \"toggle-all\" })\n                    .events({\n                        change: this.onChange,\n                    })\n                    .checked(this.props.completedEntries === state.entries.length),\n                $c(EntryList, {\n                    activeEntries: this.props.activeEntries,\n                    completedEntries: this.props.completedEntries,\n                }),\n            ]);\n    }\n}\n","import { Component, $h, $c } from \"ivi\";\nimport { state, addEntry, clearCompleted } from \"../state\";\nimport { Header } from \"./header\";\nimport { Footer } from \"./footer\";\nimport { Main } from \"./main\";\n\nexport class App extends Component<null> {\n    onAddEntry = (text: string) => {\n        addEntry(text);\n    };\n\n    onClearCompleted = () => {\n        clearCompleted();\n    };\n\n    render() {\n        const entries = state.entries;\n        let completedEntries = 0;\n        entries.forEach((e) => {\n            if (e.completed) {\n                completedEntries++;\n            }\n        });\n        const activeEntries = entries.length - completedEntries;\n\n        return $h(\"section\")\n            .children((entries.length > 0) ?\n                [\n                    $c(Header),\n                    $c(Main, {\n                        activeEntries: activeEntries,\n                        completedEntries: completedEntries,\n                    }),\n                    $c(Footer, {\n                        activeEntries: activeEntries,\n                        completedEntries: completedEntries,\n                    }),\n                ] :\n                [$c(Header)]);\n    }\n}\n"]}